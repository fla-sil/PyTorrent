{"info": {"author": "ytyaru", "author_email": "pypi1@outlook.jp", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries", "Topic :: Text Processing", "Topic :: Utilities"], "description": "[ja](./ReadMe.ja.md)\n\n# TexTree\n\nCreate nodes as specified in the tree text.\n\n# Features\n\n* Compatible with python2,3\n* Data can be assigned to nodes\n* Convert between text and node objects\n\n# Requirement\n\n* <time datetime=\"2019-12-26T10:00:00+0900\">2019-12-26</time>\n* [Raspbierry Pi](https://ja.wikipedia.org/wiki/Raspberry_Pi) 4 Model B Rev 1.2\n* [Raspbian](https://ja.wikipedia.org/wiki/Raspbian) buster 10.0 2019-09-26 <small>[setup](http://ytyaru.hatenablog.com/entry/2019/12/25/222222)</small>\n* bash 5.0.3(1)-release\n* Python 2.7.16\n* Python 3.7.3\n\n# Installation\n\n```sh\npip install textree\n```\n\n# Usage\n\n## Foundations\n\nConvert from text to node object.\n\n```python\nimport textree\ntree_text = \"\"\"\nA\n\tA1\n\t\tA11\n\t\t\tA111\n\t\t\tA112\n\tA2\nB\n\"\"\"\ntree = TexTree()\nroot = tree.to_node(tree_text)\nprint(root, root.Name)\nfor node in tree.Nodes:\n    print(node.Line)\nprint(tree.to_text())\n```\n\n## Reference\n\nConvert between text and objects.\n\n```python\nroot = tree.to_node(tree_text)\n       tree.to_text()\n```\n\nReference and assignment.\n\n```python\nnode.Name\nnode.Parent\nnode.Children\n```\n```python\nnode.Name = 'NewName'\nnode.Parent = Node('Parent')\nnode.Children.append(Node('Child'))\n```\n\nMove.\n\n```python\nnode.to_first()\nnode.to_last()\nnode.to_next()\nnode.to_prev()\n```\n\nGet.\n\n```python\nNode.Path.select(root, 'A/A1/A11')\nNode.Path.select(A, 'A1/A11')\n```\n\nInsertion / deletion.\n\n```python\nnode.insert_first(Node('new'))\nnode.insert_last(Node('new'))\nnode.insert_next(Node('new'))\nnode.insert_prev(Node('new'))\n```\n```python\nnode.delete()\n```\n\nUpdate.\n\n```python\nnode = Node.Path.select(root, 'A/A1/A11')\nnode.Name = 'UpdateName'\n```\n\nThere are many others. Refer to the [code](./src/py3/textree.py) or [API list](./doc/memo/apis_py3.txt) for details.\n\n## Attribute of Node\n\nAttributes can be assigned to the same line.\n\n```python\nimport textree\ntree_text = \"\"\"\nA\tattrA\n\tA1\tattrA1\n\t\tA11\tattrA11\n\t\t\tA111\tattrA111\n\t\t\tA112\tattrA112\n\tA2\tattrA2\nB\tattrB\n\"\"\"\ntree = TexTree()\nroot = tree.to_node(tree_text)\nprint(root, root.Name)\nfor node in tree.Nodes:\n    print(node.Name, node,Attr)\n```\n\n### Attribute of RootNode\n\nAttributes can be assigned to RootNode.\n\n```python\nimport textree\ntree_text = \"\"\"\n<ROOT>\troot_attr\nA\tattrA\n\tA1\tattrA1\n\t\tA11\tattrA11\n\t\t\tA111\tattrA111\n\t\t\tA112\tattrA112\n\tA2\tattrA2\nB\tattrB\n\"\"\"\ntree = TexTree()\nroot = tree.to_node(tree_text)\nprint(root, root.Name, root.Attr)\nfor node in tree.Nodes:\n    print(node.Name, node,Attr)\n```\n\n### Deserialization of attributes\n\nThe user can embed the attribute analysis code freely. Of course you can also write code to serialize to text.\n\nThe following code gives the node `my_name`.\n\n```python\nclass MyNodeDeserializer(NodeDeserializer):\n    def deserialize(self, ana, parent, parents=Node):\n        node = Node(ana.Line, parent=parent)\n        node.my_name = 'My name is ' + node.Name\n        return node\n```\n```python\ntree = TexTree(node_deserializer=MyNodeDeserializer())\nroot = tree.to_node(tree_text)\nfor node in tree.Nodes:\n    print(node.my_name)\n```\n```python\nclass MyNodeAttributeSerializer(NodeAttributeSerializer):\n    def serialize(self, attr): return 'my_name=' + attr\n```\n```python\ntree = TexTree(node_deserializer=MyNodeDeserializer(), node_serializer=NodeSerializer(MyNodeAttributeSerializer()))\nroot = tree.to_node(tree_text)\nfor node in tree.Nodes:\n    print(node.my_name)\nprint(tree.to_text())\n```\n\n# Note\n\n* Alpha version. Checking installation\n\n# Author\n\n\u3000ytyaru\n\n* [![github](http://www.google.com/s2/favicons?domain=github.com)](https://github.com/ytyaru \"github\")\n* [![hatena](http://www.google.com/s2/favicons?domain=www.hatena.ne.jp)](http://ytyaru.hatenablog.com/ytyaru \"hatena\")\n* [![mastodon](http://www.google.com/s2/favicons?domain=mstdn.jp)](https://mstdn.jp/web/accounts/233143 \"mastdon\")\n\n# License\n\nThis software is [AGPLv3](https://www.gnu.org/licenses/agpl-3.0.en.html) licensed. (GNU Affero General Public License v3) `agpl-3.0`\n\n[![agpl-3.0](./doc/res/AGPLv3.svg \"agpl-3.0\")](https://www.gnu.org/licenses/agpl-3.0.en.html)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/textree/textree", "keywords": "tree,text,node,textprocess,texttotree,texttonode,treetotext,treetonode,mapper,ObjectToTextMapper,serializer,deserializer,generator,convertor", "license": "GNU Affero General Public License Version 3 (AGPL-3.0)", "maintainer": "", "maintainer_email": "", "name": "textree", "package_url": "https://pypi.org/project/textree/", "platform": "", "project_url": "https://pypi.org/project/textree/", "project_urls": {"Homepage": "https://github.com/textree/textree"}, "release_url": "https://pypi.org/project/textree/0.0.1/", "requires_dist": null, "requires_python": ">=2.7", "summary": "Create nodes as specified in the tree text.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"./ReadMe.ja.md\" rel=\"nofollow\">ja</a></p>\n<h1>TexTree</h1>\n<p>Create nodes as specified in the tree text.</p>\n<h1>Features</h1>\n<ul>\n<li>Compatible with python2,3</li>\n<li>Data can be assigned to nodes</li>\n<li>Convert between text and node objects</li>\n</ul>\n<h1>Requirement</h1>\n<ul>\n<li>&lt;time datetime=\"2019-12-26T10:00:00+0900\"&gt;2019-12-26&lt;/time&gt;</li>\n<li><a href=\"https://ja.wikipedia.org/wiki/Raspberry_Pi\" rel=\"nofollow\">Raspbierry Pi</a> 4 Model B Rev 1.2</li>\n<li><a href=\"https://ja.wikipedia.org/wiki/Raspbian\" rel=\"nofollow\">Raspbian</a> buster 10.0 2019-09-26 &lt;small&gt;<a href=\"http://ytyaru.hatenablog.com/entry/2019/12/25/222222\" rel=\"nofollow\">setup</a>&lt;/small&gt;</li>\n<li>bash 5.0.3(1)-release</li>\n<li>Python 2.7.16</li>\n<li>Python 3.7.3</li>\n</ul>\n<h1>Installation</h1>\n<pre>pip install textree\n</pre>\n<h1>Usage</h1>\n<h2>Foundations</h2>\n<p>Convert from text to node object.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">textree</span>\n<span class=\"n\">tree_text</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">A</span>\n<span class=\"s2\">\tA1</span>\n<span class=\"s2\">\t\tA11</span>\n<span class=\"s2\">\t\t\tA111</span>\n<span class=\"s2\">\t\t\tA112</span>\n<span class=\"s2\">\tA2</span>\n<span class=\"s2\">B</span>\n<span class=\"s2\">\"\"\"</span>\n<span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">TexTree</span><span class=\"p\">()</span>\n<span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">to_node</span><span class=\"p\">(</span><span class=\"n\">tree_text</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">node</span> <span class=\"ow\">in</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">Nodes</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Line</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">to_text</span><span class=\"p\">())</span>\n</pre>\n<h2>Reference</h2>\n<p>Convert between text and objects.</p>\n<pre><span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">to_node</span><span class=\"p\">(</span><span class=\"n\">tree_text</span><span class=\"p\">)</span>\n       <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">to_text</span><span class=\"p\">()</span>\n</pre>\n<p>Reference and assignment.</p>\n<pre><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Name</span>\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Parent</span>\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Children</span>\n</pre>\n<pre><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Name</span> <span class=\"o\">=</span> <span class=\"s1\">'NewName'</span>\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Parent</span> <span class=\"o\">=</span> <span class=\"n\">Node</span><span class=\"p\">(</span><span class=\"s1\">'Parent'</span><span class=\"p\">)</span>\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Children</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">Node</span><span class=\"p\">(</span><span class=\"s1\">'Child'</span><span class=\"p\">))</span>\n</pre>\n<p>Move.</p>\n<pre><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">to_first</span><span class=\"p\">()</span>\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">to_last</span><span class=\"p\">()</span>\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">to_next</span><span class=\"p\">()</span>\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">to_prev</span><span class=\"p\">()</span>\n</pre>\n<p>Get.</p>\n<pre><span class=\"n\">Node</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"s1\">'A/A1/A11'</span><span class=\"p\">)</span>\n<span class=\"n\">Node</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"s1\">'A1/A11'</span><span class=\"p\">)</span>\n</pre>\n<p>Insertion / deletion.</p>\n<pre><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">insert_first</span><span class=\"p\">(</span><span class=\"n\">Node</span><span class=\"p\">(</span><span class=\"s1\">'new'</span><span class=\"p\">))</span>\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">insert_last</span><span class=\"p\">(</span><span class=\"n\">Node</span><span class=\"p\">(</span><span class=\"s1\">'new'</span><span class=\"p\">))</span>\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">insert_next</span><span class=\"p\">(</span><span class=\"n\">Node</span><span class=\"p\">(</span><span class=\"s1\">'new'</span><span class=\"p\">))</span>\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">insert_prev</span><span class=\"p\">(</span><span class=\"n\">Node</span><span class=\"p\">(</span><span class=\"s1\">'new'</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n</pre>\n<p>Update.</p>\n<pre><span class=\"n\">node</span> <span class=\"o\">=</span> <span class=\"n\">Node</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"s1\">'A/A1/A11'</span><span class=\"p\">)</span>\n<span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Name</span> <span class=\"o\">=</span> <span class=\"s1\">'UpdateName'</span>\n</pre>\n<p>There are many others. Refer to the <a href=\"./src/py3/textree.py\" rel=\"nofollow\">code</a> or <a href=\"./doc/memo/apis_py3.txt\" rel=\"nofollow\">API list</a> for details.</p>\n<h2>Attribute of Node</h2>\n<p>Attributes can be assigned to the same line.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">textree</span>\n<span class=\"n\">tree_text</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">A\tattrA</span>\n<span class=\"s2\">\tA1\tattrA1</span>\n<span class=\"s2\">\t\tA11\tattrA11</span>\n<span class=\"s2\">\t\t\tA111\tattrA111</span>\n<span class=\"s2\">\t\t\tA112\tattrA112</span>\n<span class=\"s2\">\tA2\tattrA2</span>\n<span class=\"s2\">B\tattrB</span>\n<span class=\"s2\">\"\"\"</span>\n<span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">TexTree</span><span class=\"p\">()</span>\n<span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">to_node</span><span class=\"p\">(</span><span class=\"n\">tree_text</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">node</span> <span class=\"ow\">in</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">Nodes</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"p\">,</span><span class=\"n\">Attr</span><span class=\"p\">)</span>\n</pre>\n<h3>Attribute of RootNode</h3>\n<p>Attributes can be assigned to RootNode.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">textree</span>\n<span class=\"n\">tree_text</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">&lt;ROOT&gt;\troot_attr</span>\n<span class=\"s2\">A\tattrA</span>\n<span class=\"s2\">\tA1\tattrA1</span>\n<span class=\"s2\">\t\tA11\tattrA11</span>\n<span class=\"s2\">\t\t\tA111\tattrA111</span>\n<span class=\"s2\">\t\t\tA112\tattrA112</span>\n<span class=\"s2\">\tA2\tattrA2</span>\n<span class=\"s2\">B\tattrB</span>\n<span class=\"s2\">\"\"\"</span>\n<span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">TexTree</span><span class=\"p\">()</span>\n<span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">to_node</span><span class=\"p\">(</span><span class=\"n\">tree_text</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">Attr</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">node</span> <span class=\"ow\">in</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">Nodes</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"p\">,</span><span class=\"n\">Attr</span><span class=\"p\">)</span>\n</pre>\n<h3>Deserialization of attributes</h3>\n<p>The user can embed the attribute analysis code freely. Of course you can also write code to serialize to text.</p>\n<p>The following code gives the node <code>my_name</code>.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MyNodeDeserializer</span><span class=\"p\">(</span><span class=\"n\">NodeDeserializer</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">deserialize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">ana</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"p\">,</span> <span class=\"n\">parents</span><span class=\"o\">=</span><span class=\"n\">Node</span><span class=\"p\">):</span>\n        <span class=\"n\">node</span> <span class=\"o\">=</span> <span class=\"n\">Node</span><span class=\"p\">(</span><span class=\"n\">ana</span><span class=\"o\">.</span><span class=\"n\">Line</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"n\">parent</span><span class=\"p\">)</span>\n        <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">my_name</span> <span class=\"o\">=</span> <span class=\"s1\">'My name is '</span> <span class=\"o\">+</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">Name</span>\n        <span class=\"k\">return</span> <span class=\"n\">node</span>\n</pre>\n<pre><span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">TexTree</span><span class=\"p\">(</span><span class=\"n\">node_deserializer</span><span class=\"o\">=</span><span class=\"n\">MyNodeDeserializer</span><span class=\"p\">())</span>\n<span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">to_node</span><span class=\"p\">(</span><span class=\"n\">tree_text</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">node</span> <span class=\"ow\">in</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">Nodes</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">my_name</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MyNodeAttributeSerializer</span><span class=\"p\">(</span><span class=\"n\">NodeAttributeSerializer</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">serialize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">attr</span><span class=\"p\">):</span> <span class=\"k\">return</span> <span class=\"s1\">'my_name='</span> <span class=\"o\">+</span> <span class=\"n\">attr</span>\n</pre>\n<pre><span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">TexTree</span><span class=\"p\">(</span><span class=\"n\">node_deserializer</span><span class=\"o\">=</span><span class=\"n\">MyNodeDeserializer</span><span class=\"p\">(),</span> <span class=\"n\">node_serializer</span><span class=\"o\">=</span><span class=\"n\">NodeSerializer</span><span class=\"p\">(</span><span class=\"n\">MyNodeAttributeSerializer</span><span class=\"p\">()))</span>\n<span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">to_node</span><span class=\"p\">(</span><span class=\"n\">tree_text</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">node</span> <span class=\"ow\">in</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">Nodes</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">my_name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">to_text</span><span class=\"p\">())</span>\n</pre>\n<h1>Note</h1>\n<ul>\n<li>Alpha version. Checking installation</li>\n</ul>\n<h1>Author</h1>\n<p>\u3000ytyaru</p>\n<ul>\n<li><a href=\"https://github.com/ytyaru\" rel=\"nofollow\" title=\"github\"><img alt=\"github\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5f2b6e5efa1adbabc4cf05a05b21733520c8ee4e/687474703a2f2f7777772e676f6f676c652e636f6d2f73322f66617669636f6e733f646f6d61696e3d6769746875622e636f6d\"></a></li>\n<li><a href=\"http://ytyaru.hatenablog.com/ytyaru\" rel=\"nofollow\" title=\"hatena\"><img alt=\"hatena\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c5cb5b75ec5256e20cd6bc4bd04db49fbb9e6f3/687474703a2f2f7777772e676f6f676c652e636f6d2f73322f66617669636f6e733f646f6d61696e3d7777772e686174656e612e6e652e6a70\"></a></li>\n<li><a href=\"https://mstdn.jp/web/accounts/233143\" rel=\"nofollow\" title=\"mastdon\"><img alt=\"mastodon\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34c4a8a29182aaecad12dad83e2559d01e5cb8a8/687474703a2f2f7777772e676f6f676c652e636f6d2f73322f66617669636f6e733f646f6d61696e3d6d7374646e2e6a70\"></a></li>\n</ul>\n<h1>License</h1>\n<p>This software is <a href=\"https://www.gnu.org/licenses/agpl-3.0.en.html\" rel=\"nofollow\">AGPLv3</a> licensed. (GNU Affero General Public License v3) <code>agpl-3.0</code></p>\n<p><a href=\"https://www.gnu.org/licenses/agpl-3.0.en.html\" rel=\"nofollow\"><img alt=\"agpl-3.0\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d70273b5f138dbf8d8c6e72d2da70c615d6af64c/2e2f646f632f7265732f4147504c76332e737667\"></a></p>\n\n          </div>"}, "last_serial": 6505190, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a51c7accf9c13f5f9b93c7f22d07e85d", "sha256": "e0759862aff56b6ea1656ce1b10d26188250767e340d31892da0903120632c03"}, "downloads": -1, "filename": "textree-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "a51c7accf9c13f5f9b93c7f22d07e85d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7", "size": 41927, "upload_time": "2020-01-23T08:33:21", "upload_time_iso_8601": "2020-01-23T08:33:21.603932Z", "url": "https://files.pythonhosted.org/packages/e6/5f/95fe9a70fdc6ba177654490815dc2a0c574806ac413f48f5ef71d5bf88b9/textree-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5db195f8edf3cb49118dc357d8bf1a65", "sha256": "429b8597ff6a9235fa31c18db572c697885383f5ed46f53f693b9cd6e995081c"}, "downloads": -1, "filename": "textree-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5db195f8edf3cb49118dc357d8bf1a65", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 41928, "upload_time": "2020-01-23T08:33:24", "upload_time_iso_8601": "2020-01-23T08:33:24.734354Z", "url": "https://files.pythonhosted.org/packages/a4/59/abe690a331aa3a85e60a8838e3cc2e11ae73e5913b553787d5657c79296b/textree-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2260f9ddc4390096f532d8d769f8c987", "sha256": "e7f5678aded8d91ac7939f73535bda2c0e516936bdc2889c1fb525aab47afcc8"}, "downloads": -1, "filename": "textree-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2260f9ddc4390096f532d8d769f8c987", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 41883, "upload_time": "2020-01-23T08:33:26", "upload_time_iso_8601": "2020-01-23T08:33:26.960207Z", "url": "https://files.pythonhosted.org/packages/1a/87/7b4e0afcf2ac8434c180df713d8de30bb4c28a390ed0445bd197b9bab00c/textree-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a51c7accf9c13f5f9b93c7f22d07e85d", "sha256": "e0759862aff56b6ea1656ce1b10d26188250767e340d31892da0903120632c03"}, "downloads": -1, "filename": "textree-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "a51c7accf9c13f5f9b93c7f22d07e85d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7", "size": 41927, "upload_time": "2020-01-23T08:33:21", "upload_time_iso_8601": "2020-01-23T08:33:21.603932Z", "url": "https://files.pythonhosted.org/packages/e6/5f/95fe9a70fdc6ba177654490815dc2a0c574806ac413f48f5ef71d5bf88b9/textree-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5db195f8edf3cb49118dc357d8bf1a65", "sha256": "429b8597ff6a9235fa31c18db572c697885383f5ed46f53f693b9cd6e995081c"}, "downloads": -1, "filename": "textree-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5db195f8edf3cb49118dc357d8bf1a65", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 41928, "upload_time": "2020-01-23T08:33:24", "upload_time_iso_8601": "2020-01-23T08:33:24.734354Z", "url": "https://files.pythonhosted.org/packages/a4/59/abe690a331aa3a85e60a8838e3cc2e11ae73e5913b553787d5657c79296b/textree-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2260f9ddc4390096f532d8d769f8c987", "sha256": "e7f5678aded8d91ac7939f73535bda2c0e516936bdc2889c1fb525aab47afcc8"}, "downloads": -1, "filename": "textree-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2260f9ddc4390096f532d8d769f8c987", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 41883, "upload_time": "2020-01-23T08:33:26", "upload_time_iso_8601": "2020-01-23T08:33:26.960207Z", "url": "https://files.pythonhosted.org/packages/1a/87/7b4e0afcf2ac8434c180df713d8de30bb4c28a390ed0445bd197b9bab00c/textree-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:57 2020"}