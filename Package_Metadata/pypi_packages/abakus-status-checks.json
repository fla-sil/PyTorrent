{"info": {"author": "Eirik Martiniussen Sylliaas", "author_email": "eirik@sylliaas.no", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5"], "description": "Abakus Status Checks\n====================\n\n.. image:: https://ci.frigg.io/eirsyl/abakus-status-checks.svg\n    :target: https://ci.frigg.io/eirsyl/abakus-status-checks/last/\n    :alt: Build Status\n\n.. image:: https://ci.frigg.io/eirsyl/abakus-status-checks/coverage.svg\n    :target: https://ci.frigg.io/eirsyl/abakus-status-checks/last/\n    :alt: Coverage Status\n\nThis package is used together with Sensu_. Checks is managed with Puppet and reported to our #devops\nchannel on Slack.\n\nSupported checks:\n\n- CPU percent\n- Load\n\n\nCreate a new check\n------------------\n\n- Create a new file in the abakus_checks/checks directory\n- Import abakus_checks.utils.check.StatusCheck and use this as a base for your check.\n- Give the check a name, decription and options\n\n::\n\n    name = 'load'\n    description = 'Trigger errors based on load threshold. Load is divided by core count.'\n    options = [\n        click.option('--warning', default='2,1.5,1', type=str),\n        click.option('--critical', default='3,2,1.5', type=str),\n    ]\n\n- Implement the run method. Call self.ok, self.warning, self.critical with a message based on the\nresult.\n\n- Register the check in abakus_checks/cli.py. Import the check in the check import block and\nregister the check.\n\n::\n\n    from .checks import load\n    register_check(load.LoadCheck)\n\n- You can use the tests.test_case.CLITestCase to test the check. This TestCase has a .invoke\nmethod you can use to call the check.\n\n::\n\n    class LoadCheckTestCase(CLITestCase):\n\n        @mock.patch('os.getloadavg', return_value=(0, 0, 0))\n        def test_load_ok(self, mock_loadavg):\n            result = self.invoke(['load', '--warning /'3.2.1/''])\n            self.assertEquals(result.exit_code, 0)\n\n.. _Sensu: https://sensuapp.org/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "git@github.com:eirsyl/abakus-status-checks.git", "keywords": "Monitoring,Status Checks,Abakus", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "abakus-status-checks", "package_url": "https://pypi.org/project/abakus-status-checks/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/abakus-status-checks/", "project_urls": {"Download": "UNKNOWN", "Homepage": "git@github.com:eirsyl/abakus-status-checks.git"}, "release_url": "https://pypi.org/project/abakus-status-checks/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Abakus Status Checks", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Abakus Status Checks<br>====================<br><br>.. image:: https://ci.frigg.io/eirsyl/abakus-status-checks.svg<br>    :target: https://ci.frigg.io/eirsyl/abakus-status-checks/last/<br>    :alt: Build Status<br><br>.. image:: https://ci.frigg.io/eirsyl/abakus-status-checks/coverage.svg<br>    :target: https://ci.frigg.io/eirsyl/abakus-status-checks/last/<br>    :alt: Coverage Status<br><br>This package is used together with Sensu_. Checks is managed with Puppet and reported to our #devops<br>channel on Slack.<br><br>Supported checks:<br><br>- CPU percent<br>- Load<br><br><br>Create a new check<br>------------------<br><br>- Create a new file in the abakus_checks/checks directory<br>- Import abakus_checks.utils.check.StatusCheck and use this as a base for your check.<br>- Give the check a name, decription and options<br><br>::<br><br>    name = 'load'<br>    description = 'Trigger errors based on load threshold. Load is divided by core count.'<br>    options = [<br>        click.option('--warning', default='2,1.5,1', type=str),<br>        click.option('--critical', default='3,2,1.5', type=str),<br>    ]<br><br>- Implement the run method. Call self.ok, self.warning, self.critical with a message based on the<br>result.<br><br>- Register the check in abakus_checks/cli.py. Import the check in the check import block and<br>register the check.<br><br>::<br><br>    from .checks import load<br>    register_check(load.LoadCheck)<br><br>- You can use the tests.test_case.CLITestCase to test the check. This TestCase has a .invoke<br>method you can use to call the check.<br><br>::<br><br>    class LoadCheckTestCase(CLITestCase):<br><br>        @mock.patch('os.getloadavg', return_value=(0, 0, 0))<br>        def test_load_ok(self, mock_loadavg):<br>            result = self.invoke(['load', '--warning /'3.2.1/''])<br>            self.assertEquals(result.exit_code, 0)<br><br>.. _Sensu: https://sensuapp.org/\n          </div>"}, "last_serial": 1912177, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "8b1ecff2c0267c78eb811e8dec2f8aac", "sha256": "9f3015ba94c180ddd32de093e59e8cad4ca590b84d1b4f7c341a670e048e7aa3"}, "downloads": -1, "filename": "abakus_status_checks-0.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8b1ecff2c0267c78eb811e8dec2f8aac", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9512, "upload_time": "2016-01-19T18:49:45", "upload_time_iso_8601": "2016-01-19T18:49:45.023400Z", "url": "https://files.pythonhosted.org/packages/b8/e0/798d4d87b14390e174a563636bf908cbc2415b27864f362405857b780fc4/abakus_status_checks-0.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63ae57baa16966557fb0b0ffb2f45474", "sha256": "a6a34c4f8672b33a87b85d53ea9f6277ae4c5fc7cb9c80400459dd1fd6e71def"}, "downloads": -1, "filename": "abakus-status-checks-0.0.0.tar.gz", "has_sig": false, "md5_digest": "63ae57baa16966557fb0b0ffb2f45474", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5988, "upload_time": "2016-01-19T18:49:39", "upload_time_iso_8601": "2016-01-19T18:49:39.231316Z", "url": "https://files.pythonhosted.org/packages/8e/9c/fe04f9d7102c95223a17ac7bfd248f65ae0d6c5df7b714809a333c5e70fc/abakus-status-checks-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "c25a4b40e846f08ab359216e37b920f8", "sha256": "80c8a4bf7b610acaebdb76d4a8f6ef4f488282b728f6b9ab86bf8a4ffc9fc0c1"}, "downloads": -1, "filename": "abakus_status_checks-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c25a4b40e846f08ab359216e37b920f8", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9551, "upload_time": "2016-01-19T19:38:48", "upload_time_iso_8601": "2016-01-19T19:38:48.442920Z", "url": "https://files.pythonhosted.org/packages/58/e1/f689116be8936ab47998e1fbf1e87b26472e155b261f542e100f870247e4/abakus_status_checks-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de2c70b555a2599f7bc145e4b9329ecc", "sha256": "9a4b6e5c9fc2315ad49dacd18f2b426915e21320786bd3367cccaf2cc29d7a25"}, "downloads": -1, "filename": "abakus-status-checks-0.0.1.tar.gz", "has_sig": false, "md5_digest": "de2c70b555a2599f7bc145e4b9329ecc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6014, "upload_time": "2016-01-19T19:38:39", "upload_time_iso_8601": "2016-01-19T19:38:39.935590Z", "url": "https://files.pythonhosted.org/packages/c1/ed/b23e0bfa195759e1f136b35b1014a9926707b2d68f1d5ebf5a0d7f921756/abakus-status-checks-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c25a4b40e846f08ab359216e37b920f8", "sha256": "80c8a4bf7b610acaebdb76d4a8f6ef4f488282b728f6b9ab86bf8a4ffc9fc0c1"}, "downloads": -1, "filename": "abakus_status_checks-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c25a4b40e846f08ab359216e37b920f8", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9551, "upload_time": "2016-01-19T19:38:48", "upload_time_iso_8601": "2016-01-19T19:38:48.442920Z", "url": "https://files.pythonhosted.org/packages/58/e1/f689116be8936ab47998e1fbf1e87b26472e155b261f542e100f870247e4/abakus_status_checks-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de2c70b555a2599f7bc145e4b9329ecc", "sha256": "9a4b6e5c9fc2315ad49dacd18f2b426915e21320786bd3367cccaf2cc29d7a25"}, "downloads": -1, "filename": "abakus-status-checks-0.0.1.tar.gz", "has_sig": false, "md5_digest": "de2c70b555a2599f7bc145e4b9329ecc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6014, "upload_time": "2016-01-19T19:38:39", "upload_time_iso_8601": "2016-01-19T19:38:39.935590Z", "url": "https://files.pythonhosted.org/packages/c1/ed/b23e0bfa195759e1f136b35b1014a9926707b2d68f1d5ebf5a0d7f921756/abakus-status-checks-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 15:55:21 2020"}