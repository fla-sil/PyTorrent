{"info": {"author": "Matt Daily", "author_email": "mdaily@lco.global", "bugtrack_url": null, "classifiers": [], "description": "# LCO Source Extraction Service CLI\n\n# sep-service-caller\n*Command line interface to LCO's source extraction service*\n\nThe source extraction service documentation can be found here: https://github.com/LCOGT/sextractor-service\n\n## Installation\n*pip install sep-service-caller*\n\n## Logging\nLogging is to STDOUT, with the ability to set the log level via the `--log-level` argument.\n\nExtraction results are posted to LCO's Elasticsearch instance, and by default set to populate\nthe `source-extraction` index.\n\nThe `source-extraction` index can be [viewed in Kibana](http://kibana.lco.gtn/goto/8429a1c456dd20b653a4f1f8ef4ff78f).\n\n## Usage\nTo view the help text, simply use the `-h` flag:\n\n`sep-service -h`\n\n```bash\nusage: sep-service [-h] {file,dates} ...\n\nPerform source extraction via the LCO source extraction service\n\npositional arguments:\n  {file,dates}  sep-service sub-commands\n    file        Specify a basename to perform source extraction on\n    dates       Specify a site/camera/date range to perform source extractions\n                on.\n\noptional arguments:\n  -h, --help    show this help message and exit\n```\n\nThe sep-service-caller has two sub-commands in order to facilitate two distict workflows:\n* **file**: perform source extraction on a single file, specified by basename\n* **dates**: perform source extraction on any number of files, specified by site/camera start and end date\n\nBoth commands accept the same optional parameters, allowing source extraction parameters to be provided. \n\nSee LCO's [Source Extraction Service Docs](https://github.com/LCOGT/sextractor-service)\n\n## Examples\nNote: All examples include `<archive-auth-token>`, which should be replaced by an Archive API Token that has access\nto the images that you wish to perform source extraction on.\n\n### Solve by file\nTo view the help text for this subcommand, simply type `sep-service file -h`. This will show all of the\noptional arguments available to you. Only a subset are showcased here.\n\nTo perform source extraction on a single file, `lsc1m005-fa15-20200214-0355-e91`\n```bash\nsep-service file lsc1m005-fa15-20200214-0355-e91 <archive-auth-token>\n```\n\nLet's try without DEFAULT values!\nNote, that you must specify `--sep-mode CUSTOM` to override the sep service's [default values](https://github.com/LCOGT/sextractor-service#extraction-modes)\n```bash\nsep-service file lsc1m005-fa15-20200214-0355-e91 <archive-auth-token> --sep-mode CUSTOM --threshold 8.0\n```\nIn this case, threshold will be set to 8.0, but all other tunable sep parameters will stay at their default\n\nYou can override as many values as you wish! Go crazy!\n```bash\nsep-service file lsc1m005-fa15-20200214-0355-e91 <archive-auth-token> --sep-mode CUSTOM --threshold 8.0 --min-area 2 --noise-model GLOBALRMS\n```\n\n### Solve by site/camera/date-range\nTo view the help text for this subcommand, simply type `sep-service dates -h`. This will show all of the\noptional arguments available to you. Only a subset are showcased here.\n\n\nTo perform source extraction on all reduced science images (e91) from LSC/fa15 on DAY-OBS 20200214, 20200215, and 20200216:\n```bash\nsep-service dates lsc fa15 20200214 20200216 <archive-auth-token>\n```\n\nLet's try without DEFAULT values!\nNote, that you must specify `--sep-mode CUSTOM` to override the sep service's [default values](https://github.com/LCOGT/sextractor-service#extraction-modes)\n```bash\nsep-service dates lsc fa15 20200214 20200216 <archive-auth-token> --sep-mode CUSTOM --deblend-n-threshold 24\n```\nIn this case, like before, the number of deblending thresholds will be set to 24 but all other tunable sep parameters will stay at their default values.\n\nYou can override as many values as you wish.\n```bash\nsep-service dates lsc fa15 20200214 20200216 <archive-auth-token> --sep-mode CUSTOM --threshold 8.0 --min-area 2 --noise-model GLOBALRMS\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LCOGT/sep-service-caller", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sep-service-caller", "package_url": "https://pypi.org/project/sep-service-caller/", "platform": "", "project_url": "https://pypi.org/project/sep-service-caller/", "project_urls": {"Homepage": "https://github.com/LCOGT/sep-service-caller"}, "release_url": "https://pypi.org/project/sep-service-caller/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Command line tool to call LCO source extraction service", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>LCO Source Extraction Service CLI</h1>\n<h1>sep-service-caller</h1>\n<p><em>Command line interface to LCO's source extraction service</em></p>\n<p>The source extraction service documentation can be found here: <a href=\"https://github.com/LCOGT/sextractor-service\" rel=\"nofollow\">https://github.com/LCOGT/sextractor-service</a></p>\n<h2>Installation</h2>\n<p><em>pip install sep-service-caller</em></p>\n<h2>Logging</h2>\n<p>Logging is to STDOUT, with the ability to set the log level via the <code>--log-level</code> argument.</p>\n<p>Extraction results are posted to LCO's Elasticsearch instance, and by default set to populate\nthe <code>source-extraction</code> index.</p>\n<p>The <code>source-extraction</code> index can be <a href=\"http://kibana.lco.gtn/goto/8429a1c456dd20b653a4f1f8ef4ff78f\" rel=\"nofollow\">viewed in Kibana</a>.</p>\n<h2>Usage</h2>\n<p>To view the help text, simply use the <code>-h</code> flag:</p>\n<p><code>sep-service -h</code></p>\n<pre>usage: sep-service <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">{</span>file,dates<span class=\"o\">}</span> ...\n\nPerform <span class=\"nb\">source</span> extraction via the LCO <span class=\"nb\">source</span> extraction service\n\npositional arguments:\n  <span class=\"o\">{</span>file,dates<span class=\"o\">}</span>  sep-service sub-commands\n    file        Specify a basename to perform <span class=\"nb\">source</span> extraction on\n    dates       Specify a site/camera/date range to perform <span class=\"nb\">source</span> extractions\n                on.\n\noptional arguments:\n  -h, --help    show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n</pre>\n<p>The sep-service-caller has two sub-commands in order to facilitate two distict workflows:</p>\n<ul>\n<li><strong>file</strong>: perform source extraction on a single file, specified by basename</li>\n<li><strong>dates</strong>: perform source extraction on any number of files, specified by site/camera start and end date</li>\n</ul>\n<p>Both commands accept the same optional parameters, allowing source extraction parameters to be provided.</p>\n<p>See LCO's <a href=\"https://github.com/LCOGT/sextractor-service\" rel=\"nofollow\">Source Extraction Service Docs</a></p>\n<h2>Examples</h2>\n<p>Note: All examples include <code>&lt;archive-auth-token&gt;</code>, which should be replaced by an Archive API Token that has access\nto the images that you wish to perform source extraction on.</p>\n<h3>Solve by file</h3>\n<p>To view the help text for this subcommand, simply type <code>sep-service file -h</code>. This will show all of the\noptional arguments available to you. Only a subset are showcased here.</p>\n<p>To perform source extraction on a single file, <code>lsc1m005-fa15-20200214-0355-e91</code></p>\n<pre>sep-service file lsc1m005-fa15-20200214-0355-e91 &lt;archive-auth-token&gt;\n</pre>\n<p>Let's try without DEFAULT values!\nNote, that you must specify <code>--sep-mode CUSTOM</code> to override the sep service's <a href=\"https://github.com/LCOGT/sextractor-service#extraction-modes\" rel=\"nofollow\">default values</a></p>\n<pre>sep-service file lsc1m005-fa15-20200214-0355-e91 &lt;archive-auth-token&gt; --sep-mode CUSTOM --threshold <span class=\"m\">8</span>.0\n</pre>\n<p>In this case, threshold will be set to 8.0, but all other tunable sep parameters will stay at their default</p>\n<p>You can override as many values as you wish! Go crazy!</p>\n<pre>sep-service file lsc1m005-fa15-20200214-0355-e91 &lt;archive-auth-token&gt; --sep-mode CUSTOM --threshold <span class=\"m\">8</span>.0 --min-area <span class=\"m\">2</span> --noise-model GLOBALRMS\n</pre>\n<h3>Solve by site/camera/date-range</h3>\n<p>To view the help text for this subcommand, simply type <code>sep-service dates -h</code>. This will show all of the\noptional arguments available to you. Only a subset are showcased here.</p>\n<p>To perform source extraction on all reduced science images (e91) from LSC/fa15 on DAY-OBS 20200214, 20200215, and 20200216:</p>\n<pre>sep-service dates lsc fa15 <span class=\"m\">20200214</span> <span class=\"m\">20200216</span> &lt;archive-auth-token&gt;\n</pre>\n<p>Let's try without DEFAULT values!\nNote, that you must specify <code>--sep-mode CUSTOM</code> to override the sep service's <a href=\"https://github.com/LCOGT/sextractor-service#extraction-modes\" rel=\"nofollow\">default values</a></p>\n<pre>sep-service dates lsc fa15 <span class=\"m\">20200214</span> <span class=\"m\">20200216</span> &lt;archive-auth-token&gt; --sep-mode CUSTOM --deblend-n-threshold <span class=\"m\">24</span>\n</pre>\n<p>In this case, like before, the number of deblending thresholds will be set to 24 but all other tunable sep parameters will stay at their default values.</p>\n<p>You can override as many values as you wish.</p>\n<pre>sep-service dates lsc fa15 <span class=\"m\">20200214</span> <span class=\"m\">20200216</span> &lt;archive-auth-token&gt; --sep-mode CUSTOM --threshold <span class=\"m\">8</span>.0 --min-area <span class=\"m\">2</span> --noise-model GLOBALRMS\n</pre>\n\n          </div>"}, "last_serial": 6751517, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "983433f5d628910fe00d3c15198be515", "sha256": "d372b682200e0637fef8bea025394f850a83c9cdd168bbb61d8ff9843ebd4c3f"}, "downloads": -1, "filename": "sep-service-caller-0.0.1.tar.gz", "has_sig": false, "md5_digest": "983433f5d628910fe00d3c15198be515", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4419, "upload_time": "2020-03-02T19:45:02", "upload_time_iso_8601": "2020-03-02T19:45:02.379218Z", "url": "https://files.pythonhosted.org/packages/c1/43/086158854e6504ab71d649fa7dba0a302bcf364f065be3fbec16389b676a/sep-service-caller-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "c792cb59801cff1752706bcab02cc1f0", "sha256": "e1813109a502b84a34772264ab023942ada85b5678b4f10e236312e3ee658cf2"}, "downloads": -1, "filename": "sep-service-caller-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c792cb59801cff1752706bcab02cc1f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5334, "upload_time": "2020-03-04T22:59:29", "upload_time_iso_8601": "2020-03-04T22:59:29.968826Z", "url": "https://files.pythonhosted.org/packages/17/74/e74066596e4be9a49aa471a74f814efcf69b734773cdf92d29e986e8e959/sep-service-caller-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c792cb59801cff1752706bcab02cc1f0", "sha256": "e1813109a502b84a34772264ab023942ada85b5678b4f10e236312e3ee658cf2"}, "downloads": -1, "filename": "sep-service-caller-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c792cb59801cff1752706bcab02cc1f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5334, "upload_time": "2020-03-04T22:59:29", "upload_time_iso_8601": "2020-03-04T22:59:29.968826Z", "url": "https://files.pythonhosted.org/packages/17/74/e74066596e4be9a49aa471a74f814efcf69b734773cdf92d29e986e8e959/sep-service-caller-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:54 2020"}