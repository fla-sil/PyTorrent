{"info": {"author": "Adafruit Industries", "author_email": "circuitpython@adafruit.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: System :: Hardware"], "description": "Introduction\n============\n\n.. image:: https://readthedocs.org/projects/adafruit-circuitpython-ds1841/badge/?version=latest\n    :target: https://circuitpython.readthedocs.io/projects/ds1841/en/latest/\n    :alt: Documentation Status\n\n.. image:: https://img.shields.io/discord/327254708534116352.svg\n    :target: https://discord.gg/nBQh6qu\n    :alt: Discord\n\n.. image:: https://github.com/adafruit/Adafruit_CircuitPython_DS1841/workflows/Build%20CI/badge.svg\n    :target: https://github.com/adafruit/Adafruit_CircuitPython_DS1841/actions\n    :alt: Build Status\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n    :alt: Code Style: Black\n\nCircuitPython library for the Maxim DS1841 I2C Logarithmic Resistor\n\n\nDependencies\n=============\nThis driver depends on:\n\n* `Adafruit CircuitPython <https://github.com/adafruit/circuitpython>`_\n* `Bus Device <https://github.com/adafruit/Adafruit_CircuitPython_BusDevice>`_\n* `Register <https://github.com/adafruit/Adafruit_CircuitPython_Register>`_\n\nPlease ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n`the Adafruit library and driver bundle <https://circuitpython.org/libraries>`_.\n\nInstalling from PyPI\n=====================\nOn supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `from\nPyPI <https://pypi.org/project/adafruit-circuitpython-ds1841/>`_. To install for current user:\n\n.. code-block:: shell\n\n    pip3 install adafruit-circuitpython-ds1841\n\nTo install system-wide (this may be required in some cases):\n\n.. code-block:: shell\n\n    sudo pip3 install adafruit-circuitpython-ds1841\n\nTo install in a virtual environment in your current project:\n\n.. code-block:: shell\n\n    mkdir project-name && cd project-name\n    python3 -m venv .env\n    source .env/bin/activate\n    pip3 install adafruit-circuitpython-ds1841\n\nUsage Example\n=============\n\n.. code-block:: python\n\n    from time import sleep\n    import board\n    import busio\n    import adafruit_ds1841\n    from analogio import AnalogIn\n\n    ####### NOTE ################\n    # this example will not work with Blinka/rasberry Pi due to the lack of analog pins.\n    # Blinka and Raspberry Pi users should run the \"ds1841_blinka_simpletest.py\" example\n\n    # WIRING:\n    # 1 Wire connecting  VCC to RH to make a voltage divider using the\n    #   internal resistor between RH and RW\n    # 2 Wire connecting RW to A0\n\n    i2c = busio.I2C(board.SCL, board.SDA)\n    ds1841 = adafruit_ds1841.DS1841(i2c)\n    wiper_output = AnalogIn(board.A0)\n\n    while True:\n\n        ds1841.wiper = 127\n        print(\"Wiper set to %d\"%ds1841.wiper)\n        voltage = wiper_output.value\n        voltage *= 3.3\n        voltage /= 65535\n        print(\"Wiper voltage: %.2f\"%voltage)\n        print(\"\")\n        sleep(1.0)\n\n        ds1841.wiper = 0\n        print(\"Wiper set to %d\"%ds1841.wiper)\n        voltage = wiper_output.value\n        voltage *= 3.3\n        voltage /= 65535\n        print(\"Wiper voltage: %.2f\"%voltage)\n        print(\"\")\n        sleep(1.0)\n\n        ds1841.wiper = 63\n        print(\"Wiper set to %d\"%ds1841.wiper)\n        voltage = wiper_output.value\n        voltage *= 3.3\n        voltage /= 65535\n        print(\"Wiper voltage: %.2f\"%voltage)\n        print(\"\")\n        sleep(1.0)\n\n\nContributing\n============\n\nContributions are welcome! Please read our `Code of Conduct\n<https://github.com/adafruit/Adafruit_CircuitPython_DS1841/blob/master/CODE_OF_CONDUCT.md>`_\nbefore contributing to help this project stay welcoming.\n\nDocumentation\n=============\n\nFor information on building library documentation, please check out `this guide <https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1>`_.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adafruit/Adafruit_CircuitPython_DS1841", "keywords": "adafruit blinka circuitpython micropython ds1841 Log Potentiometer pot bias", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "adafruit-circuitpython-ds1841", "package_url": "https://pypi.org/project/adafruit-circuitpython-ds1841/", "platform": "", "project_url": "https://pypi.org/project/adafruit-circuitpython-ds1841/", "project_urls": {"Homepage": "https://github.com/adafruit/Adafruit_CircuitPython_DS1841"}, "release_url": "https://pypi.org/project/adafruit-circuitpython-ds1841/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "I2C Logarithmic Resistor", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<a href=\"https://circuitpython.readthedocs.io/projects/ds1841/en/latest/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c32a8739feca447a97eee208c4c2aae6035bfda4/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61646166727569742d63697263756974707974686f6e2d6473313834312f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://discord.gg/nBQh6qu\" rel=\"nofollow\"><img alt=\"Discord\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2973e7de9caf359680953316fa3b541f702086c/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3332373235343730383533343131363335322e737667\"></a>\n<a href=\"https://github.com/adafruit/Adafruit_CircuitPython_DS1841/actions\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/24207c75dc5c745659586c78d2f0f71a25012846/68747470733a2f2f6769746875622e636f6d2f61646166727569742f41646166727569745f43697263756974507974686f6e5f4453313834312f776f726b666c6f77732f4275696c6425323043492f62616467652e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code Style: Black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<p>CircuitPython library for the Maxim DS1841 I2C Logarithmic Resistor</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>This driver depends on:</p>\n<ul>\n<li><a href=\"https://github.com/adafruit/circuitpython\" rel=\"nofollow\">Adafruit CircuitPython</a></li>\n<li><a href=\"https://github.com/adafruit/Adafruit_CircuitPython_BusDevice\" rel=\"nofollow\">Bus Device</a></li>\n<li><a href=\"https://github.com/adafruit/Adafruit_CircuitPython_Register\" rel=\"nofollow\">Register</a></li>\n</ul>\n<p>Please ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n<a href=\"https://circuitpython.org/libraries\" rel=\"nofollow\">the Adafruit library and driver bundle</a>.</p>\n</div>\n<div id=\"installing-from-pypi\">\n<h2>Installing from PyPI</h2>\n<p>On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally <a href=\"https://pypi.org/project/adafruit-circuitpython-ds1841/\" rel=\"nofollow\">from\nPyPI</a>. To install for current user:</p>\n<pre>pip3 install adafruit-circuitpython-ds1841\n</pre>\n<p>To install system-wide (this may be required in some cases):</p>\n<pre>sudo pip3 install adafruit-circuitpython-ds1841\n</pre>\n<p>To install in a virtual environment in your current project:</p>\n<pre>mkdir project-name <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> project-name\npython3 -m venv .env\n<span class=\"nb\">source</span> .env/bin/activate\npip3 install adafruit-circuitpython-ds1841\n</pre>\n</div>\n<div id=\"usage-example\">\n<h2>Usage Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">import</span> <span class=\"nn\">board</span>\n<span class=\"kn\">import</span> <span class=\"nn\">busio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">adafruit_ds1841</span>\n<span class=\"kn\">from</span> <span class=\"nn\">analogio</span> <span class=\"kn\">import</span> <span class=\"n\">AnalogIn</span>\n\n<span class=\"c1\">####### NOTE ################</span>\n<span class=\"c1\"># this example will not work with Blinka/rasberry Pi due to the lack of analog pins.</span>\n<span class=\"c1\"># Blinka and Raspberry Pi users should run the \"ds1841_blinka_simpletest.py\" example</span>\n\n<span class=\"c1\"># WIRING:</span>\n<span class=\"c1\"># 1 Wire connecting  VCC to RH to make a voltage divider using the</span>\n<span class=\"c1\">#   internal resistor between RH and RW</span>\n<span class=\"c1\"># 2 Wire connecting RW to A0</span>\n\n<span class=\"n\">i2c</span> <span class=\"o\">=</span> <span class=\"n\">busio</span><span class=\"o\">.</span><span class=\"n\">I2C</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">SCL</span><span class=\"p\">,</span> <span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">SDA</span><span class=\"p\">)</span>\n<span class=\"n\">ds1841</span> <span class=\"o\">=</span> <span class=\"n\">adafruit_ds1841</span><span class=\"o\">.</span><span class=\"n\">DS1841</span><span class=\"p\">(</span><span class=\"n\">i2c</span><span class=\"p\">)</span>\n<span class=\"n\">wiper_output</span> <span class=\"o\">=</span> <span class=\"n\">AnalogIn</span><span class=\"p\">(</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">A0</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n    <span class=\"n\">ds1841</span><span class=\"o\">.</span><span class=\"n\">wiper</span> <span class=\"o\">=</span> <span class=\"mi\">127</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Wiper set to </span><span class=\"si\">%d</span><span class=\"s2\">\"</span><span class=\"o\">%</span><span class=\"n\">ds1841</span><span class=\"o\">.</span><span class=\"n\">wiper</span><span class=\"p\">)</span>\n    <span class=\"n\">voltage</span> <span class=\"o\">=</span> <span class=\"n\">wiper_output</span><span class=\"o\">.</span><span class=\"n\">value</span>\n    <span class=\"n\">voltage</span> <span class=\"o\">*=</span> <span class=\"mf\">3.3</span>\n    <span class=\"n\">voltage</span> <span class=\"o\">/=</span> <span class=\"mi\">65535</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Wiper voltage: </span><span class=\"si\">%.2f</span><span class=\"s2\">\"</span><span class=\"o\">%</span><span class=\"n\">voltage</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"\"</span><span class=\"p\">)</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n\n    <span class=\"n\">ds1841</span><span class=\"o\">.</span><span class=\"n\">wiper</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Wiper set to </span><span class=\"si\">%d</span><span class=\"s2\">\"</span><span class=\"o\">%</span><span class=\"n\">ds1841</span><span class=\"o\">.</span><span class=\"n\">wiper</span><span class=\"p\">)</span>\n    <span class=\"n\">voltage</span> <span class=\"o\">=</span> <span class=\"n\">wiper_output</span><span class=\"o\">.</span><span class=\"n\">value</span>\n    <span class=\"n\">voltage</span> <span class=\"o\">*=</span> <span class=\"mf\">3.3</span>\n    <span class=\"n\">voltage</span> <span class=\"o\">/=</span> <span class=\"mi\">65535</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Wiper voltage: </span><span class=\"si\">%.2f</span><span class=\"s2\">\"</span><span class=\"o\">%</span><span class=\"n\">voltage</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"\"</span><span class=\"p\">)</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n\n    <span class=\"n\">ds1841</span><span class=\"o\">.</span><span class=\"n\">wiper</span> <span class=\"o\">=</span> <span class=\"mi\">63</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Wiper set to </span><span class=\"si\">%d</span><span class=\"s2\">\"</span><span class=\"o\">%</span><span class=\"n\">ds1841</span><span class=\"o\">.</span><span class=\"n\">wiper</span><span class=\"p\">)</span>\n    <span class=\"n\">voltage</span> <span class=\"o\">=</span> <span class=\"n\">wiper_output</span><span class=\"o\">.</span><span class=\"n\">value</span>\n    <span class=\"n\">voltage</span> <span class=\"o\">*=</span> <span class=\"mf\">3.3</span>\n    <span class=\"n\">voltage</span> <span class=\"o\">/=</span> <span class=\"mi\">65535</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Wiper voltage: </span><span class=\"si\">%.2f</span><span class=\"s2\">\"</span><span class=\"o\">%</span><span class=\"n\">voltage</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"\"</span><span class=\"p\">)</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions are welcome! Please read our <a href=\"https://github.com/adafruit/Adafruit_CircuitPython_DS1841/blob/master/CODE_OF_CONDUCT.md\" rel=\"nofollow\">Code of Conduct</a>\nbefore contributing to help this project stay welcoming.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>For information on building library documentation, please check out <a href=\"https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1\" rel=\"nofollow\">this guide</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6965111, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "84af5b51ce79f7b6db2070604b3ea4cd", "sha256": "b0d54c576298fa3298042d099d75b03d27a69bf60762229d21f0196e4fbf0b7c"}, "downloads": -1, "filename": "adafruit-circuitpython-ds1841-1.0.0.tar.gz", "has_sig": false, "md5_digest": "84af5b51ce79f7b6db2070604b3ea4cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22193, "upload_time": "2020-03-20T20:54:22", "upload_time_iso_8601": "2020-03-20T20:54:22.622168Z", "url": "https://files.pythonhosted.org/packages/44/13/0e2c6d0f2c40d78151d0a2d3ca153fdf196c0ceb96c3ed6afdce3c576a38/adafruit-circuitpython-ds1841-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "786cb215d003964802f887a29feddfc1", "sha256": "4bbdaa34758d68ad03ce7d76b100501da749f1a3a0f94ecdde8b777e6c6a2285"}, "downloads": -1, "filename": "adafruit-circuitpython-ds1841-1.0.1.tar.gz", "has_sig": false, "md5_digest": "786cb215d003964802f887a29feddfc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22177, "upload_time": "2020-04-06T22:11:47", "upload_time_iso_8601": "2020-04-06T22:11:47.310326Z", "url": "https://files.pythonhosted.org/packages/db/ce/4d9289a876258e4b037671e8c5c80f39925be5d8950dc0368a0d16f00586/adafruit-circuitpython-ds1841-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "786cb215d003964802f887a29feddfc1", "sha256": "4bbdaa34758d68ad03ce7d76b100501da749f1a3a0f94ecdde8b777e6c6a2285"}, "downloads": -1, "filename": "adafruit-circuitpython-ds1841-1.0.1.tar.gz", "has_sig": false, "md5_digest": "786cb215d003964802f887a29feddfc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22177, "upload_time": "2020-04-06T22:11:47", "upload_time_iso_8601": "2020-04-06T22:11:47.310326Z", "url": "https://files.pythonhosted.org/packages/db/ce/4d9289a876258e4b037671e8c5c80f39925be5d8950dc0368a0d16f00586/adafruit-circuitpython-ds1841-1.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:04 2020"}