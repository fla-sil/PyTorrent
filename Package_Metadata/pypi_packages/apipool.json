{"info": {"author": "Sanhe Hu", "author_email": "husanhe@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": ".. image:: https://travis-ci.org/MacHu-GWU/apipool-project.svg?branch=master\n    :target: https://travis-ci.org/MacHu-GWU/apipool-project?branch=master\n\n.. image:: https://codecov.io/gh/MacHu-GWU/apipool-project/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/MacHu-GWU/apipool-project\n\n.. image:: https://img.shields.io/pypi/v/apipool.svg\n    :target: https://pypi.python.org/pypi/apipool\n\n.. image:: https://img.shields.io/pypi/l/apipool.svg\n    :target: https://pypi.python.org/pypi/apipool\n\n.. image:: https://img.shields.io/pypi/pyversions/apipool.svg\n    :target: https://pypi.python.org/pypi/apipool\n\n.. image:: https://img.shields.io/badge/Star_Me_on_GitHub!--None.svg?style=social\n    :target: https://github.com/MacHu-GWU/apipool-project\n\n\nWelcome to ``apipool`` Documentation\n==============================================================================\n\n``apipool`` allows developer manipulate multi api key at same time. For example, if single api key has 1k/day quota, then you can register 10 api keys, and let ``apipool`` to automatically rotate the key.\n\n\n**Features**:\n\n- automatically rotate apikey.\n- built-in usage statistics, easy to search by ``time``, ``status``, ``apikey``. You can deploy stats collector on any cloud relational database.\n- clean api, minimal code is required to implement complex feature.\n\n\n**Example**:\n\nthere's a google geocoding example at: https://github.com/MacHu-GWU/apipool-project/blob/master/examples/google_geocoding.py\n\n\n**Tutorial**\n\nLet's walk through with a twitter api example, the api client we use is ``python-twitter``: https://github.com/bear/python-twitter.\n\nThe ``python-twitter`` usage:\n\n.. code-block:: python\n\n    import twitter\n\n    # create api client\n    api = twitter.Api(\n        consumer_key=\"consumer_key\"z,\n        consumer_secret=\"consumer_secret\",\n        access_token_key=\"access_token\",\n        access_token_secret=\"access_token_secret\",\n    )\n\n    # make api call\n    statuses = api.GetUserTimeline(screen_name=\"trump\")\n\n\nThe ``apipool`` usage:\n\n.. code-block:: python\n\n    import twitter\n    from apipool import ApiKey, ApiKeyManager\n\n    class TwitterApiKey(ApiKey):\n        def __init__(self,\n                     consumer_key,\n                     consumer_secret,\n                     access_token_key,\n                     access_token_secret)\n            self.consumer_key = consumer_key\n            self.consumer_secret = consumer_secret\n            self.access_token_key = access_token_key\n            self.access_token_secret = access_token_secret\n\n        def user_01_get_primary_key(self):\n            return self.access_token_key\n\n        def user_02_create_client(self):\n            return twitter.Api(\n                consumer_key=self.consumer_key,\n                consumer_secret=self.consumer_secret,\n                access_token_key=self.access_token_key,\n                access_token_secret=self.access_token_secret,\n            )\n\n        def user_03_test_usable(self, client):\n            statuses = client.GetUserTimeline(screen_name=\"trump\")\n            if len(statuses) >= 5:\n                return True\n            else:\n                return False\n\n    apikey_data_list = [\n        {\n            \"consumer_key\": xxx,\n            \"consumer_secret\": xxx,\n            \"access_token_key\": xxx,\n            \"access_token_secret\": xxx,\n        },\n        {...},\n        {...},\n    ]\n\n    apikey_list = [\n        TwitterApiKey(**apikey_data)\n        for apikey_data in apikey_data_list\n    ]\n\n    manager = ApiKeyManager(apikey_list=apikey_list)\n\n\n**DummyClient**:\n\nnow we can use the ``manager.dummyclient`` object like how we use the ``twitter.Api()`` object. However, the apikey is automatically rotated, and usage events are also automatically recorded.\n\n.. code-block:: python\n\n    manager.check_usable()\n\n    # the api key is automatically rotated under the hood\n    statuses = manager.dummyclient.GetUserTimeline(screen_name=\"trump\")\n\n    for _ in range(10):\n        manager.dummyclient.GetUserTimeline(screen_name=\"trump\")\n\n\n**StatsCollector**:\n\nnow we can use ``manager.stats`` object to access usage stats, and also query usage events.\n\n.. code-block:: python\n\n    >>> manager.stats.usage_count_stats_in_recent_n_seconds()\n    {\"xxx access_token_key\": 3, \"xxx access_token_key\": 4, \"xxx access_token_key\": 3}\n\n    >>> from apipool import StatusCollection\n    >>> events_list = list(manager.stats.query_event_in_recent_n_seconds(\n        n_seconds=24*3600,\n        status_id=StatusCollection.c1_Success.id,\n    ))\n    >>> events_list\n    [\n        Event(apikey_id=xxx, finished_at=datetime(xxx), status_id=xxx),\n        Event(...),\n        ...\n    ]\n\n\nQuick Links\n------------------------------------------------------------------------------\n- .. image:: https://img.shields.io/badge/Link-Document-red.svg\n      :target: https://apipool.readthedocs.io/index.html\n\n- .. image:: https://img.shields.io/badge/Link-API_Reference_and_Source_Code-red.svg\n      :target: https://apipool.readthedocs.io/py-modindex.html\n\n- .. image:: https://img.shields.io/badge/Link-Install-red.svg\n      :target: `install`_\n\n- .. image:: https://img.shields.io/badge/Link-GitHub-blue.svg\n      :target: https://github.com/MacHu-GWU/apipool-project\n\n- .. image:: https://img.shields.io/badge/Link-Submit_Issue_and_Feature_Request-blue.svg\n      :target: https://github.com/MacHu-GWU/apipool-project/issues\n\n- .. image:: https://img.shields.io/badge/Link-Download-blue.svg\n      :target: https://pypi.python.org/pypi/apipool#downloads\n\n\n.. _install:\n\nInstall\n------------------------------------------------------------------------------\n\n``apipool`` is released on PyPI, so all you need is:\n\n.. code-block:: console\n\n    $ pip install apipool\n\nTo upgrade to latest version:\n\n.. code-block:: console\n\n    $ pip install --upgrade apipool\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://pypi.python.org/pypi/apipool/0.0.2#downloads", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MacHu-GWU/", "keywords": "", "license": "MIT", "maintainer": "Sanhe Hu", "maintainer_email": "husanhe@gmail.com", "name": "apipool", "package_url": "https://pypi.org/project/apipool/", "platform": "Windows", "project_url": "https://pypi.org/project/apipool/", "project_urls": {"Download": "https://pypi.python.org/pypi/apipool/0.0.2#downloads", "Homepage": "https://github.com/MacHu-GWU/"}, "release_url": "https://pypi.org/project/apipool/0.0.2/", "requires_dist": ["sqlalchemy-mate (>=0.0.4)"], "requires_python": "", "summary": "Multiple API Key Manager", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/MacHu-GWU/apipool-project?branch=master\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/MacHu-GWU/apipool-project.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72c13fb8dd0c7800516bff186cbe00a98945a1d5/68747470733a2f2f7472617669732d63692e6f72672f4d616348752d4757552f617069706f6f6c2d70726f6a6563742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/MacHu-GWU/apipool-project\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/MacHu-GWU/apipool-project/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d2d99cb6adb16e2414880193ef6fafd2e43cd137/68747470733a2f2f636f6465636f762e696f2f67682f4d616348752d4757552f617069706f6f6c2d70726f6a6563742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/apipool\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/apipool.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed2e3e4fa999858f4f33cee60d0ea07c553e3d91/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f617069706f6f6c2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/apipool\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/apipool.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a4b68dc6c28a7448eb1d8d65669ad5c17a3798f4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f617069706f6f6c2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/apipool\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/apipool.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/130aabef73ead62890133b65d3b9da1738e84091/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f617069706f6f6c2e737667\"></a>\n<a href=\"https://github.com/MacHu-GWU/apipool-project\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Star_Me_on_GitHub!--None.svg?style=social\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91e8618c34f58a016f2ad17f11cbbd258aa3aefc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f537461725f4d655f6f6e5f476974487562212d2d4e6f6e652e7376673f7374796c653d736f6369616c\"></a>\n<div id=\"welcome-to-apipool-documentation\">\n<h2>Welcome to <tt>apipool</tt> Documentation</h2>\n<p><tt>apipool</tt> allows developer manipulate multi api key at same time. For example, if single api key has 1k/day quota, then you can register 10 api keys, and let <tt>apipool</tt> to automatically rotate the key.</p>\n<p><strong>Features</strong>:</p>\n<ul>\n<li>automatically rotate apikey.</li>\n<li>built-in usage statistics, easy to search by <tt>time</tt>, <tt>status</tt>, <tt>apikey</tt>. You can deploy stats collector on any cloud relational database.</li>\n<li>clean api, minimal code is required to implement complex feature.</li>\n</ul>\n<p><strong>Example</strong>:</p>\n<p>there\u2019s a google geocoding example at: <a href=\"https://github.com/MacHu-GWU/apipool-project/blob/master/examples/google_geocoding.py\" rel=\"nofollow\">https://github.com/MacHu-GWU/apipool-project/blob/master/examples/google_geocoding.py</a></p>\n<p><strong>Tutorial</strong></p>\n<p>Let\u2019s walk through with a twitter api example, the api client we use is <tt><span class=\"pre\">python-twitter</span></tt>: <a href=\"https://github.com/bear/python-twitter\" rel=\"nofollow\">https://github.com/bear/python-twitter</a>.</p>\n<p>The <tt><span class=\"pre\">python-twitter</span></tt> usage:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">twitter</span>\n\n<span class=\"c1\"># create api client</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">twitter</span><span class=\"o\">.</span><span class=\"n\">Api</span><span class=\"p\">(</span>\n    <span class=\"n\">consumer_key</span><span class=\"o\">=</span><span class=\"s2\">\"consumer_key\"</span><span class=\"n\">z</span><span class=\"p\">,</span>\n    <span class=\"n\">consumer_secret</span><span class=\"o\">=</span><span class=\"s2\">\"consumer_secret\"</span><span class=\"p\">,</span>\n    <span class=\"n\">access_token_key</span><span class=\"o\">=</span><span class=\"s2\">\"access_token\"</span><span class=\"p\">,</span>\n    <span class=\"n\">access_token_secret</span><span class=\"o\">=</span><span class=\"s2\">\"access_token_secret\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># make api call</span>\n<span class=\"n\">statuses</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">GetUserTimeline</span><span class=\"p\">(</span><span class=\"n\">screen_name</span><span class=\"o\">=</span><span class=\"s2\">\"trump\"</span><span class=\"p\">)</span>\n</pre>\n<p>The <tt>apipool</tt> usage:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">twitter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">apipool</span> <span class=\"kn\">import</span> <span class=\"n\">ApiKey</span><span class=\"p\">,</span> <span class=\"n\">ApiKeyManager</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TwitterApiKey</span><span class=\"p\">(</span><span class=\"n\">ApiKey</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span>\n                 <span class=\"n\">consumer_key</span><span class=\"p\">,</span>\n                 <span class=\"n\">consumer_secret</span><span class=\"p\">,</span>\n                 <span class=\"n\">access_token_key</span><span class=\"p\">,</span>\n                 <span class=\"n\">access_token_secret</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">consumer_key</span> <span class=\"o\">=</span> <span class=\"n\">consumer_key</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">consumer_secret</span> <span class=\"o\">=</span> <span class=\"n\">consumer_secret</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">access_token_key</span> <span class=\"o\">=</span> <span class=\"n\">access_token_key</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">access_token_secret</span> <span class=\"o\">=</span> <span class=\"n\">access_token_secret</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">user_01_get_primary_key</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">access_token_key</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">user_02_create_client</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">twitter</span><span class=\"o\">.</span><span class=\"n\">Api</span><span class=\"p\">(</span>\n            <span class=\"n\">consumer_key</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">consumer_key</span><span class=\"p\">,</span>\n            <span class=\"n\">consumer_secret</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">consumer_secret</span><span class=\"p\">,</span>\n            <span class=\"n\">access_token_key</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">access_token_key</span><span class=\"p\">,</span>\n            <span class=\"n\">access_token_secret</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">access_token_secret</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">user_03_test_usable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">):</span>\n        <span class=\"n\">statuses</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">GetUserTimeline</span><span class=\"p\">(</span><span class=\"n\">screen_name</span><span class=\"o\">=</span><span class=\"s2\">\"trump\"</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">statuses</span><span class=\"p\">)</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">5</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n<span class=\"n\">apikey_data_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">\"consumer_key\"</span><span class=\"p\">:</span> <span class=\"n\">xxx</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"consumer_secret\"</span><span class=\"p\">:</span> <span class=\"n\">xxx</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"access_token_key\"</span><span class=\"p\">:</span> <span class=\"n\">xxx</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"access_token_secret\"</span><span class=\"p\">:</span> <span class=\"n\">xxx</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"o\">...</span><span class=\"p\">},</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">apikey_list</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">TwitterApiKey</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">apikey_data</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">apikey_data</span> <span class=\"ow\">in</span> <span class=\"n\">apikey_data_list</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">manager</span> <span class=\"o\">=</span> <span class=\"n\">ApiKeyManager</span><span class=\"p\">(</span><span class=\"n\">apikey_list</span><span class=\"o\">=</span><span class=\"n\">apikey_list</span><span class=\"p\">)</span>\n</pre>\n<p><strong>DummyClient</strong>:</p>\n<p>now we can use the <tt>manager.dummyclient</tt> object like how we use the <tt>twitter.Api()</tt> object. However, the apikey is automatically rotated, and usage events are also automatically recorded.</p>\n<pre><span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">check_usable</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># the api key is automatically rotated under the hood</span>\n<span class=\"n\">statuses</span> <span class=\"o\">=</span> <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">dummyclient</span><span class=\"o\">.</span><span class=\"n\">GetUserTimeline</span><span class=\"p\">(</span><span class=\"n\">screen_name</span><span class=\"o\">=</span><span class=\"s2\">\"trump\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">dummyclient</span><span class=\"o\">.</span><span class=\"n\">GetUserTimeline</span><span class=\"p\">(</span><span class=\"n\">screen_name</span><span class=\"o\">=</span><span class=\"s2\">\"trump\"</span><span class=\"p\">)</span>\n</pre>\n<p><strong>StatsCollector</strong>:</p>\n<p>now we can use <tt>manager.stats</tt> object to access usage stats, and also query usage events.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">usage_count_stats_in_recent_n_seconds</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"s2\">\"xxx access_token_key\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s2\">\"xxx access_token_key\"</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s2\">\"xxx access_token_key\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">}</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">apipool</span> <span class=\"kn\">import</span> <span class=\"n\">StatusCollection</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">events_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">query_event_in_recent_n_seconds</span><span class=\"p\">(</span>\n    <span class=\"n\">n_seconds</span><span class=\"o\">=</span><span class=\"mi\">24</span><span class=\"o\">*</span><span class=\"mi\">3600</span><span class=\"p\">,</span>\n    <span class=\"n\">status_id</span><span class=\"o\">=</span><span class=\"n\">StatusCollection</span><span class=\"o\">.</span><span class=\"n\">c1_Success</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n<span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">events_list</span>\n<span class=\"p\">[</span>\n    <span class=\"n\">Event</span><span class=\"p\">(</span><span class=\"n\">apikey_id</span><span class=\"o\">=</span><span class=\"n\">xxx</span><span class=\"p\">,</span> <span class=\"n\">finished_at</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"n\">xxx</span><span class=\"p\">),</span> <span class=\"n\">status_id</span><span class=\"o\">=</span><span class=\"n\">xxx</span><span class=\"p\">),</span>\n    <span class=\"n\">Event</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<div id=\"quick-links\">\n<h3>Quick Links</h3>\n<ul>\n<li><a href=\"https://apipool.readthedocs.io/index.html\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Document-red.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/07d5df5ebfde6f244cdf6ce8228662d5f7a45385/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d446f63756d656e742d7265642e737667\"></a>\n</li>\n<li><a href=\"https://apipool.readthedocs.io/py-modindex.html\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-API_Reference_and_Source_Code-red.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/979006b753c870a8b60e999550b5b32f0d8b168f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d4150495f5265666572656e63655f616e645f536f757263655f436f64652d7265642e737667\"></a>\n</li>\n<li><a href=\"#install\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Install-red.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/144498b36867a7d312ce8b3502b4135af59d2fd0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d496e7374616c6c2d7265642e737667\"></a>\n</li>\n<li><a href=\"https://github.com/MacHu-GWU/apipool-project\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-GitHub-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40760fc6f9c2f034b2f44fb3441622fd43d33f71/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d4769744875622d626c75652e737667\"></a>\n</li>\n<li><a href=\"https://github.com/MacHu-GWU/apipool-project/issues\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Submit_Issue_and_Feature_Request-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90bfac7eda79e735dae17782a18d23c84a7fce77/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d5375626d69745f49737375655f616e645f466561747572655f526571756573742d626c75652e737667\"></a>\n</li>\n<li><a href=\"https://pypi.python.org/pypi/apipool#downloads\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Link-Download-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01616d53c2f6efee987f922046ed988550b12ff9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b2d446f776e6c6f61642d626c75652e737667\"></a>\n</li>\n</ul>\n</div>\n<div id=\"id1\">\n<span id=\"install\"></span><h3>Install</h3>\n<p><tt>apipool</tt> is released on PyPI, so all you need is:</p>\n<pre><span class=\"gp\">$</span> pip install apipool\n</pre>\n<p>To upgrade to latest version:</p>\n<pre><span class=\"gp\">$</span> pip install --upgrade apipool\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4194477, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "2733153de32a3efdceefed9be28ccde2", "sha256": "f92d808efe6b8106e642a06982c7db5ecdaf863398482f2e17278000690f1b42"}, "downloads": -1, "filename": "apipool-0.0.1.zip", "has_sig": false, "md5_digest": "2733153de32a3efdceefed9be28ccde2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13906, "upload_time": "2017-04-03T17:41:59", "upload_time_iso_8601": "2017-04-03T17:41:59.338956Z", "url": "https://files.pythonhosted.org/packages/99/ac/43f605114ca20ed122d5a2171e84c47097af8105b7c1c1b04da804fb97be/apipool-0.0.1.zip", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "1d8722a918c63119cb59501aa8647105", "sha256": "22de13f9edbe98e7bcfbcfb1eab5ac429bca6fbda4996f0d59f6df2a2503d8b6"}, "downloads": -1, "filename": "apipool-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "1d8722a918c63119cb59501aa8647105", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 43487, "upload_time": "2018-08-22T00:32:43", "upload_time_iso_8601": "2018-08-22T00:32:43.947781Z", "url": "https://files.pythonhosted.org/packages/19/14/31b3637c33a9b2374a0d708fb4b259edaa33b4a33f34e93c4eeba9d80d74/apipool-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe51eb27c9c09a3a6861bf42bced5108", "sha256": "dcc8f01519f2fe6f9e06e560a976dc26c691d40efd088e69a1cf28d58f159613"}, "downloads": -1, "filename": "apipool-0.0.2.tar.gz", "has_sig": false, "md5_digest": "fe51eb27c9c09a3a6861bf42bced5108", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25189, "upload_time": "2018-08-22T00:32:45", "upload_time_iso_8601": "2018-08-22T00:32:45.436173Z", "url": "https://files.pythonhosted.org/packages/f6/cd/e02256acb17d5692897f2b7b5b69ba863e3b926a1cd502402308905a8c18/apipool-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1d8722a918c63119cb59501aa8647105", "sha256": "22de13f9edbe98e7bcfbcfb1eab5ac429bca6fbda4996f0d59f6df2a2503d8b6"}, "downloads": -1, "filename": "apipool-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "1d8722a918c63119cb59501aa8647105", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 43487, "upload_time": "2018-08-22T00:32:43", "upload_time_iso_8601": "2018-08-22T00:32:43.947781Z", "url": "https://files.pythonhosted.org/packages/19/14/31b3637c33a9b2374a0d708fb4b259edaa33b4a33f34e93c4eeba9d80d74/apipool-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe51eb27c9c09a3a6861bf42bced5108", "sha256": "dcc8f01519f2fe6f9e06e560a976dc26c691d40efd088e69a1cf28d58f159613"}, "downloads": -1, "filename": "apipool-0.0.2.tar.gz", "has_sig": false, "md5_digest": "fe51eb27c9c09a3a6861bf42bced5108", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25189, "upload_time": "2018-08-22T00:32:45", "upload_time_iso_8601": "2018-08-22T00:32:45.436173Z", "url": "https://files.pythonhosted.org/packages/f6/cd/e02256acb17d5692897f2b7b5b69ba863e3b926a1cd502402308905a8c18/apipool-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:47 2020"}