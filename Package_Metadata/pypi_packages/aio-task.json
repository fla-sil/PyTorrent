{"info": {"author": "cdlr75", "author_email": "cdlr75@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Build Tools"], "description": "aio-task\n[![pipeline status](https://gitlab.com/cdlr75/aio-task/badges/master/pipeline.svg)](https://gitlab.com/cdlr75/aio-task/commits/master)\n[![coverage report](https://gitlab.com/cdlr75/aio-task/badges/master/coverage.svg)](https://gitlab.com/cdlr75/aio-task/commits/master)\n[![PEP8](https://img.shields.io/badge/code%20style-pep8-green.svg)](https://www.python.org/dev/peps/pep-0008/)\n[![Downloads](https://pepy.tech/badge/aio-task)](https://pepy.tech/project/aio-task)\n===\n\nReliable and perfoment asynchronous tasks manager that is asyncio friendly.\n\n\n## Key Features\n\n- A simple worker interface to register coroutines as tasks.\n- A simple broker interface to produce and fetch tasks.\n- Broker and worker(s) can be setup in a single program avoiding external service dependencies (by using dummies queue and cache).\n- Task is not lost if worker crash during processing it, it's kept in the queue and re-processed until a worker acknowledge it.\n- Task exceptions are not lost: you will retreive them in the task's result.\n- Support rabbitmq, redis and sentinel.\n- Easily hackable to add new queuing/caching services\n\n\n## Getting Started\n\n*Use `docker-compose -f examples/docker-compose.yml up` to bring up a rabbitmq and a redis to run this example.*\n\n#### Install\n```\npip install aio-task\n```\n\n#### Worker \u2192 run tasks\n```python\nimport asyncio\nfrom aio_task import Worker\n\nasync def addition(a, b):\n    \"\"\" Task example. \"\"\"\n    return a + b\n\nasync def start_worker():\n    rabbitmq_config = {\"url\": \"amqp://guest:guest@localhost:5672\",\n                       \"routing_key\": \"tasks_queue\"}\n    redis_config = {\"address\": \"redis://localhost\"}\n    worker = await Worker.create(\"rabbitmq\", rabbitmq_config,\n                                 \"redis\", redis_config)\n    worker.register_handler(addition)\n    await worker.start()\n    return worker\n\nloop = asyncio.get_event_loop()\nworker = loop.run_until_complete(start_worker())\n\ntry:\n    loop.run_forever()\nexcept KeyboardInterrupt:\n    loop.run_until_complete(worker.close())  # gracefull shutdown\n\nloop.close()\n```\n\n#### Broker \u2192 produce tasks\n```python\nimport asyncio\nfrom aio_task import Broker\n\nasync def sample_addition():\n    # setup broker\n    rabbitmq_config = {\"url\": \"amqp://guest:guest@localhost:5672\",\n                       \"routing_key\": \"tasks_queue\"}\n    redis_config = {\"address\": \"redis://localhost\"}\n    broker = await Broker.create(\"rabbitmq\", rabbitmq_config,\n                               \"redis\", redis_config)\n    # produce task\n    task_id = await broker.create_task(\"addition\", {\"a\": 1, \"b\": 2})\n    await asyncio.sleep(0.1)\n    # fetch task\n    task = await broker.get_task(task_id)\n    print(task)\n    await broker.close()  # gracefull shutdown\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(sample_addition())\nloop.run_until_complete(broker.close())\n```\n\nMore examples in examples/...\n\n\n## Run tests\n\n**unit tests**\n```\npip install -e .[test]\npytest -xvs tests/unit\n```\n\n**integration tests**\n```\npip install -e .[test]\ndocker-compose -f tests/integration/compose/docker-compose up -d\npytest -xvs tests/integration\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://cdlr75.gitlab.io/aio-task/", "keywords": "asyncio asynchronous tasks broker celery", "license": "", "maintainer": "", "maintainer_email": "", "name": "aio-task", "package_url": "https://pypi.org/project/aio-task/", "platform": "", "project_url": "https://pypi.org/project/aio-task/", "project_urls": {"Bug Reports": "https://gitlab.com/cdlr75/aio-task/issues", "Homepage": "https://cdlr75.gitlab.io/aio-task/", "Source": "https://gitlab.com/cdlr75/aio-task/"}, "release_url": "https://pypi.org/project/aio-task/1.0.3/", "requires_dist": ["aioredis (==1.3.0)", "aio-pika (==6.1.2)", "sphinx ; extra == 'doc'", "recommonmark ; extra == 'doc'", "changelogfromtags ; extra == 'doc'", "asynctest ; extra == 'test'", "pytest ; extra == 'test'", "pytest-cov ; extra == 'test'"], "requires_python": ">=3.6", "summary": "A simple and reliable tasks manager. Attempt for a celery like, asyncio friendly.", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aio-task\n<a href=\"https://gitlab.com/cdlr75/aio-task/commits/master\" rel=\"nofollow\"><img alt=\"pipeline status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/32f93c7655066895e3d192e9738f45577a663e4b/68747470733a2f2f6769746c61622e636f6d2f63646c7237352f61696f2d7461736b2f6261646765732f6d61737465722f706970656c696e652e737667\"></a>\n<a href=\"https://gitlab.com/cdlr75/aio-task/commits/master\" rel=\"nofollow\"><img alt=\"coverage report\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6c5321519911725bc1a70e04556d5ff784648fa6/68747470733a2f2f6769746c61622e636f6d2f63646c7237352f61696f2d7461736b2f6261646765732f6d61737465722f636f7665726167652e737667\"></a>\n<a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\"><img alt=\"PEP8\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6fb00dfb51e9ef50800acf286dab4c6c7b018f5b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d706570382d677265656e2e737667\"></a>\n<a href=\"https://pepy.tech/project/aio-task\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f12c6d990ee250c3a90fbd228d3c39379cc742e/68747470733a2f2f706570792e746563682f62616467652f61696f2d7461736b\"></a></h1>\n<p>Reliable and perfoment asynchronous tasks manager that is asyncio friendly.</p>\n<h2>Key Features</h2>\n<ul>\n<li>A simple worker interface to register coroutines as tasks.</li>\n<li>A simple broker interface to produce and fetch tasks.</li>\n<li>Broker and worker(s) can be setup in a single program avoiding external service dependencies (by using dummies queue and cache).</li>\n<li>Task is not lost if worker crash during processing it, it's kept in the queue and re-processed until a worker acknowledge it.</li>\n<li>Task exceptions are not lost: you will retreive them in the task's result.</li>\n<li>Support rabbitmq, redis and sentinel.</li>\n<li>Easily hackable to add new queuing/caching services</li>\n</ul>\n<h2>Getting Started</h2>\n<p><em>Use <code>docker-compose -f examples/docker-compose.yml up</code> to bring up a rabbitmq and a redis to run this example.</em></p>\n<h4>Install</h4>\n<pre><code>pip install aio-task\n</code></pre>\n<h4>Worker \u2192 run tasks</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aio_task</span> <span class=\"kn\">import</span> <span class=\"n\">Worker</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">addition</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\" Task example. \"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">start_worker</span><span class=\"p\">():</span>\n    <span class=\"n\">rabbitmq_config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"amqp://guest:guest@localhost:5672\"</span><span class=\"p\">,</span>\n                       <span class=\"s2\">\"routing_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"tasks_queue\"</span><span class=\"p\">}</span>\n    <span class=\"n\">redis_config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"address\"</span><span class=\"p\">:</span> <span class=\"s2\">\"redis://localhost\"</span><span class=\"p\">}</span>\n    <span class=\"n\">worker</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">Worker</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s2\">\"rabbitmq\"</span><span class=\"p\">,</span> <span class=\"n\">rabbitmq_config</span><span class=\"p\">,</span>\n                                 <span class=\"s2\">\"redis\"</span><span class=\"p\">,</span> <span class=\"n\">redis_config</span><span class=\"p\">)</span>\n    <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">register_handler</span><span class=\"p\">(</span><span class=\"n\">addition</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">worker</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">worker</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">start_worker</span><span class=\"p\">())</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n<span class=\"k\">except</span> <span class=\"ne\">KeyboardInterrupt</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">())</span>  <span class=\"c1\"># gracefull shutdown</span>\n\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<h4>Broker \u2192 produce tasks</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aio_task</span> <span class=\"kn\">import</span> <span class=\"n\">Broker</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">sample_addition</span><span class=\"p\">():</span>\n    <span class=\"c1\"># setup broker</span>\n    <span class=\"n\">rabbitmq_config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"amqp://guest:guest@localhost:5672\"</span><span class=\"p\">,</span>\n                       <span class=\"s2\">\"routing_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"tasks_queue\"</span><span class=\"p\">}</span>\n    <span class=\"n\">redis_config</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"address\"</span><span class=\"p\">:</span> <span class=\"s2\">\"redis://localhost\"</span><span class=\"p\">}</span>\n    <span class=\"n\">broker</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">Broker</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s2\">\"rabbitmq\"</span><span class=\"p\">,</span> <span class=\"n\">rabbitmq_config</span><span class=\"p\">,</span>\n                               <span class=\"s2\">\"redis\"</span><span class=\"p\">,</span> <span class=\"n\">redis_config</span><span class=\"p\">)</span>\n    <span class=\"c1\"># produce task</span>\n    <span class=\"n\">task_id</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">broker</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"s2\">\"addition\"</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s2\">\"a\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">\"b\"</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">})</span>\n    <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n    <span class=\"c1\"># fetch task</span>\n    <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">broker</span><span class=\"o\">.</span><span class=\"n\">get_task</span><span class=\"p\">(</span><span class=\"n\">task_id</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">broker</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>  <span class=\"c1\"># gracefull shutdown</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">sample_addition</span><span class=\"p\">())</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">broker</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">())</span>\n</pre>\n<p>More examples in examples/...</p>\n<h2>Run tests</h2>\n<p><strong>unit tests</strong></p>\n<pre><code>pip install -e .[test]\npytest -xvs tests/unit\n</code></pre>\n<p><strong>integration tests</strong></p>\n<pre><code>pip install -e .[test]\ndocker-compose -f tests/integration/compose/docker-compose up -d\npytest -xvs tests/integration\n</code></pre>\n\n          </div>"}, "last_serial": 6404076, "releases": {"0.0.0.1": [{"comment_text": "", "digests": {"md5": "e990f0b19d8d06abb78e82bc0de44ef7", "sha256": "26798b2369a53ec18cb8d46528e666489c0c53938995b6580d404a3e7ac943c8"}, "downloads": -1, "filename": "aio_task-0.0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e990f0b19d8d06abb78e82bc0de44ef7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27167, "upload_time": "2019-10-14T17:02:48", "upload_time_iso_8601": "2019-10-14T17:02:48.572507Z", "url": "https://files.pythonhosted.org/packages/42/15/f1267b3e9ecc1c881589b0b44a58cb4257a67edc75eef8ab36272bd8c91a/aio_task-0.0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0beeb2052688fed26db397586382207", "sha256": "e1c5df02f40277965627d6a003ebd982cb0c7dd9d2419d26256889a42f20462d"}, "downloads": -1, "filename": "aio-task-0.0.0.1.tar.gz", "has_sig": false, "md5_digest": "d0beeb2052688fed26db397586382207", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19477, "upload_time": "2019-10-14T17:02:51", "upload_time_iso_8601": "2019-10-14T17:02:51.762654Z", "url": "https://files.pythonhosted.org/packages/da/aa/99745520179b36227f12aa6acfebe508847a50677f1a83c384526cf8675d/aio-task-0.0.0.1.tar.gz", "yanked": false}], "1.0.0.2": [{"comment_text": "", "digests": {"md5": "8ae94e263689ff15daf7cb8d73fd1380", "sha256": "d78a5c249e013c08f777cd064b9c5b008e5aaa85261ce57c0b8c16c798a58108"}, "downloads": -1, "filename": "aio_task-1.0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8ae94e263689ff15daf7cb8d73fd1380", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27291, "upload_time": "2019-10-14T17:54:37", "upload_time_iso_8601": "2019-10-14T17:54:37.913917Z", "url": "https://files.pythonhosted.org/packages/d8/65/396bc2e7fce7ed6227cec727cb3621451ec35f0d0b8d235a893c1a71555c/aio_task-1.0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f425cb2db1f6d63a6bebb76fdce5c9e2", "sha256": "b49ef77e6ae200c10bebe156139201e16bc14ac20efe0ccca0dcbf3b57f864b0"}, "downloads": -1, "filename": "aio-task-1.0.0.2.tar.gz", "has_sig": false, "md5_digest": "f425cb2db1f6d63a6bebb76fdce5c9e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18334, "upload_time": "2019-10-14T17:54:39", "upload_time_iso_8601": "2019-10-14T17:54:39.459858Z", "url": "https://files.pythonhosted.org/packages/74/50/ad2b111a0c0aebfb406331a92f6555b06a185b1a583f608068118fc49800/aio-task-1.0.0.2.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "ffcc4850596af14ea0b657ca2f29b94b", "sha256": "6579247fca1fe10d6b3f8f41e3292eb52cb1116febf5bb6e6ef7a07712a2b7bb"}, "downloads": -1, "filename": "aio_task-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ffcc4850596af14ea0b657ca2f29b94b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27266, "upload_time": "2019-10-14T18:16:38", "upload_time_iso_8601": "2019-10-14T18:16:38.741893Z", "url": "https://files.pythonhosted.org/packages/e6/83/e1ad1ac79100764b1e9b58a2c3fe04743bb1a6965cebfb745c514afacef1/aio_task-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "507fcc460a5df9cd29d36cbbb351d184", "sha256": "fe3c68ea0c8f0c29998dc4ba73092d0dd531fe9365266802659058fa9203800a"}, "downloads": -1, "filename": "aio-task-1.0.1.tar.gz", "has_sig": false, "md5_digest": "507fcc460a5df9cd29d36cbbb351d184", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19496, "upload_time": "2019-10-14T18:16:40", "upload_time_iso_8601": "2019-10-14T18:16:40.344114Z", "url": "https://files.pythonhosted.org/packages/3a/de/4b6f5d71926a56dbe4e3f9f07a18240742643fbfaf91f46b75e9c8083205/aio-task-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "69e7edf1dc0b1e7a4c7cfad1707ae2e7", "sha256": "0f44258652b8d38c91f19e6a7cf09a3db477dd6ca99535ae1a9d790352d616fb"}, "downloads": -1, "filename": "aio_task-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "69e7edf1dc0b1e7a4c7cfad1707ae2e7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27525, "upload_time": "2019-10-14T20:11:54", "upload_time_iso_8601": "2019-10-14T20:11:54.046317Z", "url": "https://files.pythonhosted.org/packages/77/7c/519c208b9febe83bae21a997d807881d428d8c690cbb949512814c34c0af/aio_task-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6c501dc532c4c1c3e54921e2bdf4329", "sha256": "8ba46818398d69b07bc5b65309a6c549ba17593ad6fbf25ae6267ef315553302"}, "downloads": -1, "filename": "aio-task-1.0.2.tar.gz", "has_sig": false, "md5_digest": "e6c501dc532c4c1c3e54921e2bdf4329", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19662, "upload_time": "2019-10-14T20:11:55", "upload_time_iso_8601": "2019-10-14T20:11:55.864010Z", "url": "https://files.pythonhosted.org/packages/78/cf/67775267800d9f43d7c09f3353674ec13486d455583d50a5422891b6e917/aio-task-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "f34df478f81d3a2a97f47dcb37f45464", "sha256": "805aed6fa19457d9068ba92cdd1e144314aaeaf3fa988fee35730f38b356a5c5"}, "downloads": -1, "filename": "aio_task-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f34df478f81d3a2a97f47dcb37f45464", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27589, "upload_time": "2020-01-06T20:04:54", "upload_time_iso_8601": "2020-01-06T20:04:54.750345Z", "url": "https://files.pythonhosted.org/packages/06/30/38e053a9fe13b51df09d51b0e12e3807033387e69780d09a1479772bec26/aio_task-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07fa41b5f6696225781d6f8c8c0dbe66", "sha256": "9f6d41c03180812b7e5010474bdb7dada3a2408709339e1f6def066017a69729"}, "downloads": -1, "filename": "aio-task-1.0.3.tar.gz", "has_sig": false, "md5_digest": "07fa41b5f6696225781d6f8c8c0dbe66", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18561, "upload_time": "2020-01-06T20:04:56", "upload_time_iso_8601": "2020-01-06T20:04:56.285794Z", "url": "https://files.pythonhosted.org/packages/11/69/90d6f2df18cdf4b30ddd905d3fbb99919ce9621bbc1cad013a04b10a597a/aio-task-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f34df478f81d3a2a97f47dcb37f45464", "sha256": "805aed6fa19457d9068ba92cdd1e144314aaeaf3fa988fee35730f38b356a5c5"}, "downloads": -1, "filename": "aio_task-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f34df478f81d3a2a97f47dcb37f45464", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 27589, "upload_time": "2020-01-06T20:04:54", "upload_time_iso_8601": "2020-01-06T20:04:54.750345Z", "url": "https://files.pythonhosted.org/packages/06/30/38e053a9fe13b51df09d51b0e12e3807033387e69780d09a1479772bec26/aio_task-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07fa41b5f6696225781d6f8c8c0dbe66", "sha256": "9f6d41c03180812b7e5010474bdb7dada3a2408709339e1f6def066017a69729"}, "downloads": -1, "filename": "aio-task-1.0.3.tar.gz", "has_sig": false, "md5_digest": "07fa41b5f6696225781d6f8c8c0dbe66", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18561, "upload_time": "2020-01-06T20:04:56", "upload_time_iso_8601": "2020-01-06T20:04:56.285794Z", "url": "https://files.pythonhosted.org/packages/11/69/90d6f2df18cdf4b30ddd905d3fbb99919ce9621bbc1cad013a04b10a597a/aio-task-1.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:43 2020"}