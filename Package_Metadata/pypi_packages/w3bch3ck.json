{"info": {"author": "Anzhela", "author_email": "dev.anzhela@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# W3bch3ck\n\n**W3bch3ck** check http(s) domain status and title of html-page.\n\n## Description\n\n**W3bch3ck**:\n - check domain work: \n   - hostname of source domain\n   - ip of source domain hostname\n   - response HTTP-status code (200, 404, 500, etc.)\n   - response HTML-page title (<title>...</title>)\n   - response url (if domain was redirecting)\n   - hostname of response url\n   - ip of response url hostname\n - lets to make it with multiprocess usage\n - lets to make it at a time for multiple domains names\n\nYou can use **W3bch3ck** for print result data in console or saving it at file or database.\nJust realize this business logic at your callback function.\n\n## Install\n\n```bash\n$ pip install w3bch3ck\n```\n\n## Example\n\nNative usage:\n\n```python\nfrom w3bch3ck import pooled_check\nfrom pprint import pprint\n\n\nif __name__ == '__main__':\n    def your_callback(data):\n        pprint(data)\n\n\n    pooled_check(\n        domains=[\n            'https://ya.ru',\n            'http://ya.ru',\n            'ya.ru',\n            'http://yandx.ru',\n            'http://yondx.ru',\n            'https://market.yandex.ru',\n            'https://radio.yandex.ru',\n            'https://taxi.yandex.ru',\n            'https://www.bing.com',\n            'https://www.google.ru',\n        ],\n        processes_count=4,\n        callback_method=your_callback\n    )\n```\n\nresult:\n\n```text\nAdd pool check for: https://ya.ru\nAdd pool check for: http://ya.ru\nAdd pool check for: ya.ru\nAdd pool check for: http://yandx.ru\nAdd pool check for: http://yondx.ru\nAdd pool check for: https://market.yandex.ru\nAdd pool check for: https://radio.yandex.ru\nAdd pool check for: https://taxi.yandex.ru\nAdd pool check for: https://www.bing.com\nAdd pool check for: https://www.google.ru\nStart...\n{'error': None,\n 'response_hostname': 'ya.ru',\n 'response_ip': '87.250.250.242',\n 'response_page_title': '\u042f\u043d\u0434\u0435\u043a\u0441',\n 'response_status': 200,\n 'response_url': 'https://ya.ru/',\n 'source_domain': 'https://ya.ru',\n 'source_hostname': 'ya.ru',\n 'source_ip': '87.250.250.242'}\n{'error': 'ConnectionError(MaxRetryError(\"HTTPConnectionPool(host=\\'yondx.ru\\', '\n          'port=80): Max retries exceeded with url: / (Caused by '\n          \"NewConnectionError('<urllib3.connection.HTTPConnection object at \"\n          '0x7f8c6c163bb0>: Failed to establish a new connection: [Errno -2] '\n          'Name or service not known\\'))\"))',\n 'response_hostname': None,\n 'response_ip': None,\n 'response_page_title': None,\n 'response_status': None,\n 'response_url': None,\n 'source_domain': 'http://yondx.ru',\n 'source_hostname': None,\n 'source_ip': None}\n{'error': None,\n 'response_hostname': 'ya.ru',\n 'response_ip': '87.250.250.242',\n 'response_page_title': '\u042f\u043d\u0434\u0435\u043a\u0441',\n 'response_status': 200,\n 'response_url': 'https://ya.ru/',\n 'source_domain': 'ya.ru',\n 'source_hostname': None,\n 'source_ip': None}\n{'error': None,\n 'response_hostname': 'ya.ru',\n 'response_ip': '87.250.250.242',\n 'response_page_title': '\u042f\u043d\u0434\u0435\u043a\u0441',\n 'response_status': 200,\n 'response_url': 'https://ya.ru/',\n 'source_domain': 'http://ya.ru',\n 'source_hostname': 'ya.ru',\n 'source_ip': '87.250.250.242'}\n{'error': None,\n 'response_hostname': 'taxi.yandex.ru',\n 'response_ip': '5.45.217.5',\n 'response_page_title': '\u042f\u043d\u0434\u0435\u043a\u0441.\u0422\u0430\u043a\u0441\u0438 \u2014 \u0437\u0430\u043a\u0430\u0437 \u0442\u0430\u043a\u0441\u0438 \u043e\u043d\u043b\u0430\u0439\u043d',\n 'response_status': 200,\n 'response_url': 'https://taxi.yandex.ru/',\n 'source_domain': 'https://taxi.yandex.ru',\n 'source_hostname': 'taxi.yandex.ru',\n 'source_ip': '5.45.217.5'}\n{'error': None,\n 'response_hostname': 'radio.yandex.ru',\n 'response_ip': '77.88.21.186',\n 'response_page_title': '\u042f\u043d\u0434\u0435\u043a\u0441.\u0420\u0430\u0434\u0438\u043e',\n 'response_status': 200,\n 'response_url': 'https://radio.yandex.ru/',\n 'source_domain': 'https://radio.yandex.ru',\n 'source_hostname': 'radio.yandex.ru',\n 'source_ip': '77.88.21.186'}\n{'error': None,\n 'response_hostname': 'market.yandex.ru',\n 'response_ip': '87.250.250.22',\n 'response_page_title': '\u042f\u043d\u0434\u0435\u043a\u0441.\u041c\u0430\u0440\u043a\u0435\u0442 \u2014 \u0432\u044b\u0431\u043e\u0440 \u0438 \u043f\u043e\u043a\u0443\u043f\u043a\u0430 \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u0438\u0437 '\n                        '\u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u043c\u0430\u0433\u0430\u0437\u0438\u043d\u043e\u0432',\n 'response_status': 200,\n 'response_url': 'https://market.yandex.ru/',\n 'source_domain': 'https://market.yandex.ru',\n 'source_hostname': 'market.yandex.ru',\n 'source_ip': '87.250.250.22'}\n{'error': None,\n 'response_hostname': 'www.google.ru',\n 'response_ip': '64.233.161.94',\n 'response_page_title': 'Google',\n 'response_status': 200,\n 'response_url': 'https://www.google.ru/',\n 'source_domain': 'https://www.google.ru',\n 'source_hostname': 'www.google.ru',\n 'source_ip': '64.233.161.94'}\n{'error': None,\n 'response_hostname': 'yandex.ru',\n 'response_ip': '5.255.255.50',\n 'response_page_title': '\u042f\u043d\u0434\u0435\u043a\u0441',\n 'response_status': 200,\n 'response_url': 'https://yandex.ru',\n 'source_domain': 'http://yandx.ru',\n 'source_hostname': 'yandx.ru',\n 'source_ip': '213.180.204.242'}\n{'error': None,\n 'response_hostname': 'www.bing.com',\n 'response_ip': '13.107.21.200',\n 'response_page_title': 'Bing',\n 'response_status': 200,\n 'response_url': 'https://www.bing.com/',\n 'source_domain': 'https://www.bing.com',\n 'source_hostname': 'www.bing.com',\n 'source_ip': '204.79.197.200'}\nEnd.\n```\n## To be continue...", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "w3bch3ck", "package_url": "https://pypi.org/project/w3bch3ck/", "platform": "", "project_url": "https://pypi.org/project/w3bch3ck/", "project_urls": null, "release_url": "https://pypi.org/project/w3bch3ck/1.0.7/", "requires_dist": null, "requires_python": ">=3.4", "summary": "Package for primary check for web service.", "version": "1.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>W3bch3ck</h1>\n<p><strong>W3bch3ck</strong> check http(s) domain status and title of html-page.</p>\n<h2>Description</h2>\n<p><strong>W3bch3ck</strong>:</p>\n<ul>\n<li>check domain work:\n<ul>\n<li>hostname of source domain</li>\n<li>ip of source domain hostname</li>\n<li>response HTTP-status code (200, 404, 500, etc.)</li>\n<li>response HTML-page title (&lt;title&gt;...&lt;/title&gt;)</li>\n<li>response url (if domain was redirecting)</li>\n<li>hostname of response url</li>\n<li>ip of response url hostname</li>\n</ul>\n</li>\n<li>lets to make it with multiprocess usage</li>\n<li>lets to make it at a time for multiple domains names</li>\n</ul>\n<p>You can use <strong>W3bch3ck</strong> for print result data in console or saving it at file or database.\nJust realize this business logic at your callback function.</p>\n<h2>Install</h2>\n<pre>$ pip install w3bch3ck\n</pre>\n<h2>Example</h2>\n<p>Native usage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">w3bch3ck</span> <span class=\"kn\">import</span> <span class=\"n\">pooled_check</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">your_callback</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n\n    <span class=\"n\">pooled_check</span><span class=\"p\">(</span>\n        <span class=\"n\">domains</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"s1\">'https://ya.ru'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'http://ya.ru'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'ya.ru'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'http://yandx.ru'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'http://yondx.ru'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'https://market.yandex.ru'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'https://radio.yandex.ru'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'https://taxi.yandex.ru'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'https://www.bing.com'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'https://www.google.ru'</span><span class=\"p\">,</span>\n        <span class=\"p\">],</span>\n        <span class=\"n\">processes_count</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span>\n        <span class=\"n\">callback_method</span><span class=\"o\">=</span><span class=\"n\">your_callback</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>result:</p>\n<pre>Add pool check for: https://ya.ru\nAdd pool check for: http://ya.ru\nAdd pool check for: ya.ru\nAdd pool check for: http://yandx.ru\nAdd pool check for: http://yondx.ru\nAdd pool check for: https://market.yandex.ru\nAdd pool check for: https://radio.yandex.ru\nAdd pool check for: https://taxi.yandex.ru\nAdd pool check for: https://www.bing.com\nAdd pool check for: https://www.google.ru\nStart...\n{'error': None,\n 'response_hostname': 'ya.ru',\n 'response_ip': '87.250.250.242',\n 'response_page_title': '\u042f\u043d\u0434\u0435\u043a\u0441',\n 'response_status': 200,\n 'response_url': 'https://ya.ru/',\n 'source_domain': 'https://ya.ru',\n 'source_hostname': 'ya.ru',\n 'source_ip': '87.250.250.242'}\n{'error': 'ConnectionError(MaxRetryError(\"HTTPConnectionPool(host=\\'yondx.ru\\', '\n          'port=80): Max retries exceeded with url: / (Caused by '\n          \"NewConnectionError('&lt;urllib3.connection.HTTPConnection object at \"\n          '0x7f8c6c163bb0&gt;: Failed to establish a new connection: [Errno -2] '\n          'Name or service not known\\'))\"))',\n 'response_hostname': None,\n 'response_ip': None,\n 'response_page_title': None,\n 'response_status': None,\n 'response_url': None,\n 'source_domain': 'http://yondx.ru',\n 'source_hostname': None,\n 'source_ip': None}\n{'error': None,\n 'response_hostname': 'ya.ru',\n 'response_ip': '87.250.250.242',\n 'response_page_title': '\u042f\u043d\u0434\u0435\u043a\u0441',\n 'response_status': 200,\n 'response_url': 'https://ya.ru/',\n 'source_domain': 'ya.ru',\n 'source_hostname': None,\n 'source_ip': None}\n{'error': None,\n 'response_hostname': 'ya.ru',\n 'response_ip': '87.250.250.242',\n 'response_page_title': '\u042f\u043d\u0434\u0435\u043a\u0441',\n 'response_status': 200,\n 'response_url': 'https://ya.ru/',\n 'source_domain': 'http://ya.ru',\n 'source_hostname': 'ya.ru',\n 'source_ip': '87.250.250.242'}\n{'error': None,\n 'response_hostname': 'taxi.yandex.ru',\n 'response_ip': '5.45.217.5',\n 'response_page_title': '\u042f\u043d\u0434\u0435\u043a\u0441.\u0422\u0430\u043a\u0441\u0438 \u2014 \u0437\u0430\u043a\u0430\u0437 \u0442\u0430\u043a\u0441\u0438 \u043e\u043d\u043b\u0430\u0439\u043d',\n 'response_status': 200,\n 'response_url': 'https://taxi.yandex.ru/',\n 'source_domain': 'https://taxi.yandex.ru',\n 'source_hostname': 'taxi.yandex.ru',\n 'source_ip': '5.45.217.5'}\n{'error': None,\n 'response_hostname': 'radio.yandex.ru',\n 'response_ip': '77.88.21.186',\n 'response_page_title': '\u042f\u043d\u0434\u0435\u043a\u0441.\u0420\u0430\u0434\u0438\u043e',\n 'response_status': 200,\n 'response_url': 'https://radio.yandex.ru/',\n 'source_domain': 'https://radio.yandex.ru',\n 'source_hostname': 'radio.yandex.ru',\n 'source_ip': '77.88.21.186'}\n{'error': None,\n 'response_hostname': 'market.yandex.ru',\n 'response_ip': '87.250.250.22',\n 'response_page_title': '\u042f\u043d\u0434\u0435\u043a\u0441.\u041c\u0430\u0440\u043a\u0435\u0442 \u2014 \u0432\u044b\u0431\u043e\u0440 \u0438 \u043f\u043e\u043a\u0443\u043f\u043a\u0430 \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u0438\u0437 '\n                        '\u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u043c\u0430\u0433\u0430\u0437\u0438\u043d\u043e\u0432',\n 'response_status': 200,\n 'response_url': 'https://market.yandex.ru/',\n 'source_domain': 'https://market.yandex.ru',\n 'source_hostname': 'market.yandex.ru',\n 'source_ip': '87.250.250.22'}\n{'error': None,\n 'response_hostname': 'www.google.ru',\n 'response_ip': '64.233.161.94',\n 'response_page_title': 'Google',\n 'response_status': 200,\n 'response_url': 'https://www.google.ru/',\n 'source_domain': 'https://www.google.ru',\n 'source_hostname': 'www.google.ru',\n 'source_ip': '64.233.161.94'}\n{'error': None,\n 'response_hostname': 'yandex.ru',\n 'response_ip': '5.255.255.50',\n 'response_page_title': '\u042f\u043d\u0434\u0435\u043a\u0441',\n 'response_status': 200,\n 'response_url': 'https://yandex.ru',\n 'source_domain': 'http://yandx.ru',\n 'source_hostname': 'yandx.ru',\n 'source_ip': '213.180.204.242'}\n{'error': None,\n 'response_hostname': 'www.bing.com',\n 'response_ip': '13.107.21.200',\n 'response_page_title': 'Bing',\n 'response_status': 200,\n 'response_url': 'https://www.bing.com/',\n 'source_domain': 'https://www.bing.com',\n 'source_hostname': 'www.bing.com',\n 'source_ip': '204.79.197.200'}\nEnd.\n</pre>\n<h2>To be continue...</h2>\n\n          </div>"}, "last_serial": 6818052, "releases": {"1.0.4": [{"comment_text": "", "digests": {"md5": "efe40f157ce7e09a0f40010289110ed3", "sha256": "3b93fa64e4e37fede41a4be983ad80495ad02126671b1efa56a495b8c97bf7e0"}, "downloads": -1, "filename": "w3bch3ck-1.0.4.tar.gz", "has_sig": false, "md5_digest": "efe40f157ce7e09a0f40010289110ed3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 4240, "upload_time": "2020-03-15T21:04:21", "upload_time_iso_8601": "2020-03-15T21:04:21.057203Z", "url": "https://files.pythonhosted.org/packages/4d/61/84c2be6c23f65e0d691bccea3b129e90dd3f6ce06eb06d05d8592b362926/w3bch3ck-1.0.4.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "295c5a40b4194a59043638cf2b11fd55", "sha256": "9327085ecce32ddcb9c5b7acbf2e06f13edc598b569e9859649f6ed6a3a05b8d"}, "downloads": -1, "filename": "w3bch3ck-1.0.7.tar.gz", "has_sig": false, "md5_digest": "295c5a40b4194a59043638cf2b11fd55", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 4272, "upload_time": "2020-03-16T02:03:03", "upload_time_iso_8601": "2020-03-16T02:03:03.721327Z", "url": "https://files.pythonhosted.org/packages/6f/4e/6ea50097cc9a642cb7e40f384bf512501bc14e4db16c32859ddf0e4ccb25/w3bch3ck-1.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "295c5a40b4194a59043638cf2b11fd55", "sha256": "9327085ecce32ddcb9c5b7acbf2e06f13edc598b569e9859649f6ed6a3a05b8d"}, "downloads": -1, "filename": "w3bch3ck-1.0.7.tar.gz", "has_sig": false, "md5_digest": "295c5a40b4194a59043638cf2b11fd55", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 4272, "upload_time": "2020-03-16T02:03:03", "upload_time_iso_8601": "2020-03-16T02:03:03.721327Z", "url": "https://files.pythonhosted.org/packages/6f/4e/6ea50097cc9a642cb7e40f384bf512501bc14e4db16c32859ddf0e4ccb25/w3bch3ck-1.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:33:24 2020"}