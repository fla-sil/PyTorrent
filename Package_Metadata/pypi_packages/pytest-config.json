{"info": {"author": "Gerardo Orozco Mosqueda", "author_email": "gerard.mosqueda@buzzfeed.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3"], "description": "pytest-config\n===============\n\n.. image:: https://pypip.in/v/pytest-config/badge.svg\n    :target: https://crate.io/packages/pytest-config/\n    :alt: Latest PyPI version\n\n.. image:: https://pypip.in/d/pytest-config/badge.png\n    :target: https://crate.io/packages/pytest-config/\n    :alt: Number of PyPI downloads\n\n.. image:: https://pypip.in/format/pytest-config/badge.png\n    :target: https://pypi.python.org/pypi/pytest-config/\n    :alt: Download format\n\nBase configurations and utilities for developing your Python project test suite.\n\nInstallation\n============\n\n.. code-block::\n\n    pip install git+git://github.com/buzzfeed/pytest_config.git@<version>#egg=pytest_config==<version>\n\nThis will install:\n\n- pytest_config ``py.test`` plugin\n- a simple django app that extends the ``django-admin.py startapp`` (under development).\n- a ``pytest_config.init`` command to initialize new config files\n- a ``pytest_config.update`` command to interactively update your config files\n  against the lates default values.\n\nFeatures\n========\n\nAutomatic fix for the sys.path known issue.\n-------------------------------------------\n\n``pytest_config`` takes care of the ``sys.path`` known issue_ between pytest and pytest-django\nby automatically adding the current working directory to the ``PYTHONPATH`` before tests run.\n\n.. _issue: http://pytest-django.readthedocs.org/en/latest/faq.html#i-see-an-error-saying-could-not-import-myproject-settings\n\nManagement of configuration files\n---------------------------------\n\n.. code-block::\n\n    $ pytest_config.init [options]\n\nThis command will copy all the configuration files needed to easily configure\n``py.test`` and ``coverage``. Beware of this command as **it will simply replace any\nexisting config files in you current directory**.\n\n.. code-block::\n\n    $ pytest_config.update [options]\n\nThis command will read the default configuration files and your customized\nconfiguration files. If any of the options in you custom configuration differs\nfrom the defaults, you will be prompted if you want to keep the current one.\nIf you decline, the default will be saved to your local configuration.\n\nAvailable options\n-----------------\n\nThe two previous commands share a few of their interface, which is as follows:\n\n- ``pytest_config.[init|update] -h`` prints the help page.\n- ``pytest_config.[init|update] --coverage`` makes the command apply its operations\n  only for the ``.coveragerc`` file.\n- ``pytest_config.[init|update] --pytest-ini`` makes the command apply its operations\n- only for the ``pytest.ini`` file.\n\n``pytest_config.update`` has additional options, though:\n\n- ``pytest_config.update -y`` silences the process so that you are not prompted\n  about anything. All the defaults will be automatically applied if you use this.\n\nAutomatic test marking\n----------------------\n\n``pytest_config`` automatically marks your tests at runtime with markers based on\nwhat directories the tests are in, so under this architecture:\n\n.. code-block::\n\n    project_root/\n        app_name/\n        tests/  # root `tests` directory\n            \u251c\u2500\u2500 __init__.py\n            \u2514\u2500\u2500 app_name/\n                \u251c\u2500\u2500 __init__.py\n                \u251c\u2500\u2500 integration/\n                \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n                \u2502   \u2514\u2500\u2500 test_foo.py\n                \u2514\u2500\u2500 unit/\n                    \u251c\u2500\u2500 __init__.py\n                 \u00a0\u00a0 \u2514\u2500\u2500 test_bar.py\n\n- test functions/methods inside ``app_name/unit/*.py`` will be marked with\n  ``@pytest.mark.<app_name>`` and ``@pytest.mark.unit``\n- test functions/methods inside ``app_name/integration/*.py`` will be marked with\n  ``@pytest.mark.<app_name>`` and ``@pytest.mark.integration``\n\nand so on. This will allow you to run tests on a per-app and per-type basis by running:\n\n.. code-block::\n\n    $ py.test -m unit\n    $ py.test -m integration\n    $ py.test -m app_name\n    $ py.test -m 'app_name and <type>'\n    $ py.test -m '<type> and app_name'\n\nIntegration with Caliendo\n-------------------------\n\nThe following command line arguments have been added to `py.test` to integrate it\nsmoothly with Caliendo_:\n\n.. _Caliendo: https://github.com/buzzfeed/caliendo\n\n- ``py.test --caliendo``: Enable the overall use of `caliendo` in your tests.\n- ``py.test --caliendo-prefix path/to/caliendo/files``: Set the path to where the caliendo\n  files should live. If you are defining this yourself, it's recommended that you set it as a path\n  relative to your current working directory, i.e. ``caliendo``, ``./caliendo``,\n  ``whatever/caliendo`` and not as an absolute path. Defaults to ``$PWD/caliendo``.\n- ``py.test --caliendo --caliendo-purge``: Set the ``CALIENDO_PURGE`` environment variable so that\n  caliendo can get rid of unused cache, evs, etc.\n- ``py.test --caliendo --caliendo-prompt``: Set the ``CALIENDO_PROMPT`` environment variable\n  so that you may use the interactive prompt_ built in caliendo\n\n.. _prompt: https://github.com/buzzfeed/caliendo#configuration", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/buzzfeed/pytest_config", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "pytest-config", "package_url": "https://pypi.org/project/pytest-config/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pytest-config/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/buzzfeed/pytest_config"}, "release_url": "https://pypi.org/project/pytest-config/0.0.11/", "requires_dist": null, "requires_python": null, "summary": "Base configurations and utilities for developing\n    your Python project test suite with pytest.", "version": "0.0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pytest-config\">\n<h2>pytest-config</h2>\n<a href=\"https://crate.io/packages/pytest-config/\" rel=\"nofollow\"><img alt=\"Latest PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e929e8f026bc96b184acf4ad1634f123673d45fe/68747470733a2f2f70797069702e696e2f762f7079746573742d636f6e6669672f62616467652e737667\"></a>\n<a href=\"https://crate.io/packages/pytest-config/\" rel=\"nofollow\"><img alt=\"Number of PyPI downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/78d9823aa75c480e6030ff756c2370da2432d359/68747470733a2f2f70797069702e696e2f642f7079746573742d636f6e6669672f62616467652e706e67\"></a>\n<a href=\"https://pypi.python.org/pypi/pytest-config/\" rel=\"nofollow\"><img alt=\"Download format\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d2b0d5318315e448149a33c93c103f8d5de50c2a/68747470733a2f2f70797069702e696e2f666f726d61742f7079746573742d636f6e6669672f62616467652e706e67\"></a>\n<p>Base configurations and utilities for developing your Python project test suite.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install git+git://github.com/buzzfeed/pytest_config.git@&lt;version&gt;#egg=pytest_config==&lt;version&gt;\n</pre>\n<p>This will install:</p>\n<ul>\n<li>pytest_config <tt>py.test</tt> plugin</li>\n<li>a simple django app that extends the <tt><span class=\"pre\">django-admin.py</span> startapp</tt> (under development).</li>\n<li>a <tt>pytest_config.init</tt> command to initialize new config files</li>\n<li>a <tt>pytest_config.update</tt> command to interactively update your config files\nagainst the lates default values.</li>\n</ul>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<div id=\"automatic-fix-for-the-sys-path-known-issue\">\n<h3>Automatic fix for the sys.path known issue.</h3>\n<p><tt>pytest_config</tt> takes care of the <tt>sys.path</tt> known <a href=\"http://pytest-django.readthedocs.org/en/latest/faq.html#i-see-an-error-saying-could-not-import-myproject-settings\" rel=\"nofollow\">issue</a> between pytest and pytest-django\nby automatically adding the current working directory to the <tt>PYTHONPATH</tt> before tests run.</p>\n</div>\n<div id=\"management-of-configuration-files\">\n<h3>Management of configuration files</h3>\n<pre>$ pytest_config.init [options]\n</pre>\n<p>This command will copy all the configuration files needed to easily configure\n<tt>py.test</tt> and <tt>coverage</tt>. Beware of this command as <strong>it will simply replace any\nexisting config files in you current directory</strong>.</p>\n<pre>$ pytest_config.update [options]\n</pre>\n<p>This command will read the default configuration files and your customized\nconfiguration files. If any of the options in you custom configuration differs\nfrom the defaults, you will be prompted if you want to keep the current one.\nIf you decline, the default will be saved to your local configuration.</p>\n</div>\n<div id=\"available-options\">\n<h3>Available options</h3>\n<p>The two previous commands share a few of their interface, which is as follows:</p>\n<ul>\n<li><tt><span class=\"pre\">pytest_config.[init|update]</span> <span class=\"pre\">-h</span></tt> prints the help page.</li>\n<li><tt><span class=\"pre\">pytest_config.[init|update]</span> <span class=\"pre\">--coverage</span></tt> makes the command apply its operations\nonly for the <tt>.coveragerc</tt> file.</li>\n<li><tt><span class=\"pre\">pytest_config.[init|update]</span> <span class=\"pre\">--pytest-ini</span></tt> makes the command apply its operations</li>\n<li>only for the <tt>pytest.ini</tt> file.</li>\n</ul>\n<p><tt>pytest_config.update</tt> has additional options, though:</p>\n<ul>\n<li><tt>pytest_config.update <span class=\"pre\">-y</span></tt> silences the process so that you are not prompted\nabout anything. All the defaults will be automatically applied if you use this.</li>\n</ul>\n</div>\n<div id=\"automatic-test-marking\">\n<h3>Automatic test marking</h3>\n<p><tt>pytest_config</tt> automatically marks your tests at runtime with markers based on\nwhat directories the tests are in, so under this architecture:</p>\n<pre>project_root/\n    app_name/\n    tests/  # root `tests` directory\n        \u251c\u2500\u2500 __init__.py\n        \u2514\u2500\u2500 app_name/\n            \u251c\u2500\u2500 __init__.py\n            \u251c\u2500\u2500 integration/\n            \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n            \u2502   \u2514\u2500\u2500 test_foo.py\n            \u2514\u2500\u2500 unit/\n                \u251c\u2500\u2500 __init__.py\n             \u00a0\u00a0 \u2514\u2500\u2500 test_bar.py\n</pre>\n<ul>\n<li>test functions/methods inside <tt><span class=\"pre\">app_name/unit/*.py</span></tt> will be marked with\n<tt><span class=\"pre\">@pytest.mark.&lt;app_name&gt;</span></tt> and <tt>@pytest.mark.unit</tt></li>\n<li>test functions/methods inside <tt><span class=\"pre\">app_name/integration/*.py</span></tt> will be marked with\n<tt><span class=\"pre\">@pytest.mark.&lt;app_name&gt;</span></tt> and <tt>@pytest.mark.integration</tt></li>\n</ul>\n<p>and so on. This will allow you to run tests on a per-app and per-type basis by running:</p>\n<pre>$ py.test -m unit\n$ py.test -m integration\n$ py.test -m app_name\n$ py.test -m 'app_name and &lt;type&gt;'\n$ py.test -m '&lt;type&gt; and app_name'\n</pre>\n</div>\n<div id=\"integration-with-caliendo\">\n<h3>Integration with Caliendo</h3>\n<p>The following command line arguments have been added to <cite>py.test</cite> to integrate it\nsmoothly with <a href=\"https://github.com/buzzfeed/caliendo\" rel=\"nofollow\">Caliendo</a>:</p>\n<ul>\n<li><tt>py.test <span class=\"pre\">--caliendo</span></tt>: Enable the overall use of <cite>caliendo</cite> in your tests.</li>\n<li><tt>py.test <span class=\"pre\">--caliendo-prefix</span> path/to/caliendo/files</tt>: Set the path to where the caliendo\nfiles should live. If you are defining this yourself, it\u2019s recommended that you set it as a path\nrelative to your current working directory, i.e. <tt>caliendo</tt>, <tt>./caliendo</tt>,\n<tt>whatever/caliendo</tt> and not as an absolute path. Defaults to <tt>$PWD/caliendo</tt>.</li>\n<li><tt>py.test <span class=\"pre\">--caliendo</span> <span class=\"pre\">--caliendo-purge</span></tt>: Set the <tt>CALIENDO_PURGE</tt> environment variable so that\ncaliendo can get rid of unused cache, evs, etc.</li>\n<li><tt>py.test <span class=\"pre\">--caliendo</span> <span class=\"pre\">--caliendo-prompt</span></tt>: Set the <tt>CALIENDO_PROMPT</tt> environment variable\nso that you may use the interactive <a href=\"https://github.com/buzzfeed/caliendo#configuration\" rel=\"nofollow\">prompt</a> built in caliendo</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1298490, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "9deb0bc91b4dc8ee16a029b75b709136", "sha256": "52d3d2c6de970a3f8024cabe4d12247cc025080c2135938742a2f213f4f4dff3"}, "downloads": -1, "filename": "pytest-config-0.0.10.tar.gz", "has_sig": false, "md5_digest": "9deb0bc91b4dc8ee16a029b75b709136", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12025, "upload_time": "2014-07-13T03:41:26", "upload_time_iso_8601": "2014-07-13T03:41:26.422366Z", "url": "https://files.pythonhosted.org/packages/57/a1/feee7d04926eef6abe95f90b901bbff3dc94ecd3bb4158f7d0fc2c76085c/pytest-config-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "0cbfbeee0bc02ba49f6dae913daa9355", "sha256": "8536a8db760324f241132612658483af8cb5f234ed98a8f7c297dbb7d9c13b6c"}, "downloads": -1, "filename": "pytest-config-0.0.11.tar.gz", "has_sig": false, "md5_digest": "0cbfbeee0bc02ba49f6dae913daa9355", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12018, "upload_time": "2014-11-07T16:51:20", "upload_time_iso_8601": "2014-11-07T16:51:20.007743Z", "url": "https://files.pythonhosted.org/packages/8a/93/6de07b4258c451f44f77ca2ff2a6520ba6ce1f2f684309ced6152f14cbe7/pytest-config-0.0.11.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "b504682af3accb351218ee303d046113", "sha256": "e9e55c80ccfb5f287a2d2342429cd1a3eee3759ed4ed47507c6330287d4ad181"}, "downloads": -1, "filename": "pytest-config-0.0.8.tar.gz", "has_sig": false, "md5_digest": "b504682af3accb351218ee303d046113", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13509, "upload_time": "2014-06-19T19:49:58", "upload_time_iso_8601": "2014-06-19T19:49:58.500641Z", "url": "https://files.pythonhosted.org/packages/35/aa/8fc54d5049262d10c3e5dcd0ba8b2dd9f6d862da959d0b443b5da96d73cb/pytest-config-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "dc406cdf6d7d0ef38e038b0e75aae98f", "sha256": "87a624a4322b979442911094357b4dc47bc4f5cc22a8aa8f23c6c90e240336bf"}, "downloads": -1, "filename": "pytest-config-0.0.9.tar.gz", "has_sig": false, "md5_digest": "dc406cdf6d7d0ef38e038b0e75aae98f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14149, "upload_time": "2014-07-08T14:53:52", "upload_time_iso_8601": "2014-07-08T14:53:52.174713Z", "url": "https://files.pythonhosted.org/packages/35/f6/2ba5e0e23b744949724a4dd08270e9c412393c9979b16b318ec1d52e10fa/pytest-config-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0cbfbeee0bc02ba49f6dae913daa9355", "sha256": "8536a8db760324f241132612658483af8cb5f234ed98a8f7c297dbb7d9c13b6c"}, "downloads": -1, "filename": "pytest-config-0.0.11.tar.gz", "has_sig": false, "md5_digest": "0cbfbeee0bc02ba49f6dae913daa9355", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12018, "upload_time": "2014-11-07T16:51:20", "upload_time_iso_8601": "2014-11-07T16:51:20.007743Z", "url": "https://files.pythonhosted.org/packages/8a/93/6de07b4258c451f44f77ca2ff2a6520ba6ce1f2f684309ced6152f14cbe7/pytest-config-0.0.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:19 2020"}