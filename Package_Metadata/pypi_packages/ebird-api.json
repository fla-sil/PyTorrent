{"info": {"author": "ProjectBabbler", "author_email": "projectbabbler@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Internet", "Topic :: Utilities"], "description": "[![Build Status](https://travis-ci.org/ProjectBabbler/ebird-api.svg?branch=master)](https://travis-ci.org/ProjectBabbler/ebird-api)\n[![PyPI version](https://badge.fury.io/py/ebird-api.svg)](https://badge.fury.io/py/ebird-api)\n[![Supported Python Versions](https://img.shields.io/pypi/pyversions/ebird-api.svg)](https://img.shields.io/pypi/pyversions/ebird-api)\n\n# eBird API\n\neBird API provides a set of wrapper functions for accessing the end-points\nin the eBird API 2.0.\n\n## Install\n\n```sh\npip install ebird-api\n```\n\n## Usage\n\nEach of the functions map to a specific end-point in the API - with one or\ntwo exceptions where API calls are essentially identical. The functions can \nbe grouped into five activities: fetching observations, getting information \non hotspots, getting information on regions, getting lists of species and \ngetting statistics.\n\nAll functions support arguments (with sensible defaults) for all the query \nparameters supported by the eBird API. Check the docstring for each function \nfor more details. There you will also find a link to the documentation for \neach end-point.\n\nTo use the API you will need to register for an API key. All you need to do is \nfill out this [form](https://ebird.org/api/keygen) and the API key is generated \nautomatically.\n\nNOTE: Use the API with some restraint. Data costs money so don't go downloading \nall the checklists for the world or other excessive behaviour or your account will \nget banned. If you have a project in mind get in touch with eBird and tell them \nwhat you want to do - they will be interested to hear it.\n\n### Observations\n\n```python\nfrom ebird.api import get_observations\n\n# Get observations from Woodman Pond, Madison county, New York for the past week.\nrecords = get_observations(api_key, 'L227544', back=7)\n\n# Get observations from Madison county, New York\nrecords = get_observations(api_key, 'US-NY-053')\n\n# Get observations from New York\nrecords = get_observations(api_key, 'US-NY')\n\n# Get observations from the USA - don't overdo the data downloads\nrecords = get_observations(api_key, 'US')\n```\n\nAny where you pass in single location or region you can also pass in a \nlist or a comma-separated string. You can specify up to 10 locations or \nregions:\n\n```python\nfrom ebird.api import get_observations\n\n# Get the observations for the most visited locations in Madison county, New York:\n# Woodman Pond, Ditch Bank Rd., Cornell Biological Field Station and\n# Anne V Pickard Memorial Wildlife Overlook.\nlocations = ['L227544', 'L273783', 'L677871', 'L2313391']\nget_observations(api_key, locations, provisional=True, detail='full')\n\n# Get the observations for Suffolk, Nassau and Queens counties in New York state.\ncounties = 'US-NY-103,US-NY-059,US-NY-81'\nrecords = get_observations(api_key, locations, hotspot=False, category='species')\n```\n\nThe functions that return observations, checklists or taxonomy support allow\nthe common name for species to be returned in different languages:\n\n```python\nfrom ebird.api import get_observations\n\nrecords = get_observations(api_key, 'CA-QC', locale='fr')\n```\n\nIn addition to getting all the observations for a given location or in\nan area you can also get the latest observation of each species in a \ngeographical area - useful for finding the nearest place to see a given\nspecies:\n\n```python\nfrom ebird.api import get_nearby_observations\n\n# Get the most recent sightings of all species seen in the last week within \n# 10km of Point Reyes National Seashore.\nrecords = get_nearby_observations(api_key, 38.05, -122.94, dist=10, back=7)\n```\n\nThe calls to get_observations() and get_nearby_observation() return all the \navailable records. You can limit the set of records returned to only include \nnotable ones (locally or nationally rare species) or limit the records to \na small number of species:\n\n```python\nfrom ebird.api import get_notable_observations, get_nearby_notable, \\\n    get_species_observations, get_nearby_species\n\n# Get the interesting birds seen in New York state.\nrecords = get_notable_observations(api_key, 'US-NY')\n\n# Get the observations of Horned Lark (Eremophila alpestris) in New York state.\nrecords = get_species_observations(api_key, 'horlar', 'US-NY')\n\n# Get the interesting birds within 50kn of Point Reyes\nrecords = get_nearby_notable(api_key, 38.05, -122.94, dist=50)\n\n# Find out if Barn Swallows have been seen in the area in the past 10 days\nrecords = get_nearby_species(api_key, 'barswa', 38.05, -122.94, back=10)\n```\n\nFor the more travel-minded you can also find out where is th e nearest place \nto see a given species:\n\n```python\nfrom ebird.api import get_nearest_species\n\n# Where is the closest place to Cornell Lab of Ornithology to see\n# Tennessee Warbler. \nlocations = get_nearest_species('tenwar', 42.48, -76.45)\n```\n\nDepending on what time of year you try this, you might have a long way to go.\n\n### Checklists\n\nThere are two functions for finding out what has been seen at a given location.\nFirst you can get the list of checklists for a given country, region or location\nusing get_visits(). Each result returned has the unique identifier for the \nchecklist. You can then call get_checklist() to get the list of observations.\n\n```python\nfrom ebird.api import get_visits, get_checklist\n\n# Get visits made recently to locations in New York state:\nrecords = get_visits(api_key, 'US-NY')\n\n# Get visits made recently to locations in New York state on Jan 1st 2010\nrecords = get_visits(api_key, 'US-NY', '2010-01-01')\n\n# Get the details of a checklist\nchecklist = get_checklist(api_key, 'S22536787')\n```\n\n### Hotspots\n\nThere are two functions for discovering hotspots. get_hotspots() list all\nthe locations in a given area. You can find all the hotspots visited recently\nby given a value for the back argument. get_nearby_hotspots() is used to find\nhotspots within a given radius. get_hotspot() can be used to get information\non the location of a given hotspot.\n\n```python\nfrom ebird.api import get_hotspots, get_nearby_hotspots, get_hotspot\n\n# List all the hotspots in New York state.\nhotspots = get_hotspots(api_key, 'US-NY')\n\n# List all the hotspots in New York state visited in the past week.\nrecent = get_hotspots(api_key, 'US-NY', back=7)\n\n# List all the hotspots in New York state visited in the past week.\nrecent = get_hotspots(api_key, 'US-NY', back=7)\n\n# List all the hotspots in within 50kn of Point Reyes\nnearby = get_nearby_hotspots(api_key, 38.05, -122.94, dist=50)\n\n# Get the details of Anne V Pickard Memorial Wildlife Overlook in New York state.\ndetails = get_hotspot(api_key, 'L2313391')\n```\n\n### Regions\n\neBird divides the world into countries, subnational1 regions (states) or \nsubnational2 regions (counties). You can use get_regions() to get the \nlist of sub-regions for a given region. For the approximate area covered \nby a region use get_region().\n\n```python\nfrom ebird.api import get_regions, get_adjacent_regions, get_region\n\n# Get the list of countries in the world.\ncountries = get_regions(api_key, 'country', 'world')\n\n# Get the list of states in the US.\nstates = get_regions(api_key, 'subnational1', 'US')\n\n# Get the list of counties in New York state.\ncounties = get_regions(api_key, 'subnational2', 'US-NY')\n\n# Get the list of states which border New York state.\nnearby = get_adjacent_regions(api_key, 'US-NY')\n\n# Get the approximate area covered by New York state.\nbounds = get_region(api_key, 'US-NY')\n```\n\n### Taxonomy\n\nYou can get details of all the species, subspecies, forms\netc. in the taxonomy used by eBird. It's the easiest way\nof getting the codes for each species or subspecies, \ne.g. horlar (Horned Lark), cangoo (Canada Goose), etc.,\nthat are used in the other API calls.1\n\n```python\nfrom ebird.api import get_taxonomy, get_taxonomy_forms, get_taxonomy_versions\n\n# Get all the species in the eBird taxonomy.\ntaxonomy = get_taxonomy(api_key)\n\n# Get all the species in the eBird taxonomy with common names in Spanish\nnames = get_taxonomy(api_key, locale='es')\n\n# Get all the taxonomy for Horned Lark\nspecies = get_taxonomy(api_key, species='horlar')\n\n# Get the codes for all the subspecies and froms recognised for Barn Swallow.\nforms = get_taxonomy_forms(api_key, 'barswa')\n\n# Get information on all the taxonomy revisions, i.e. versions.\n# Usually only the latest is important.\nversions = get_taxonomy_versions(api_key)\n```\n\n### Statistics\n\nYou can also get some statistics from the eBird data. The most interesting\nis probably get_top_100() which return the list of observers who have seen\nthe most species or submitted the largest number of checklists. The list is\njust for a specific day so it is really only useful for \"Big Days\" when \nlots of people are out trying to get the greatest number of species.\n\n```python\nfrom datetime import date\nfrom ebird.api import get_top_100, get_totals\n\n# Get the winner of the Global Big Day in New York, on 5th May 2018\nwinners = get_top_100(api_key, 'US-NY', '2018-05-05')\n\n# Get the number of contributors, checklist submitted and species seen today\ntotals = get_totals(api_key, 'US-NY', date.today())\n```\n\n### Client\n\nThere is a simple Client class which wraps the various functions from the API.\nYou can set the API key and locale when creating a Client instance so you don't\nhave to keep passing them as arguments.\n\n```python\nfrom ebird.api import Client\n\napi_key = 'abc123'\nlocale = 'es'\n\nclient = Client(api_key, locale)\n\nclient.get_observations('MX-OAX')\n\n```\n\nThe client supports all the API functions.\n\n## Formats\n\nMost of the eBird API calls return JSON. Some of the calls such as getting \nthe hotspots for a region or getting the taxonomy also support CSV. Since \nconverting JSON to CSV is simple this library is opinionated in that it \nonly returns JSON.\n\n## Compatibility\n\nebird-api works with Python 3.5+. \n\n## Links\n\nDocumentation for the eBird API: https://documenter.getpostman.com/view/664302/S1ENwy59?version=latest#intro \nthough it could do with a little love and attention.\n\nAvailable translations for species names: http://help.ebird.org/customer/portal/articles/1596582\n\nInformation on the taxonomy used by eBird: http://help.ebird.org/customer/portal/articles/1006825-the-ebird-taxonomy\n\n## License\n\neBird API is available under the terms of the [MIT](https://opensource.org/licenses/MIT) licence.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/ebird-api/", "keywords": "eBird API client", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "ebird-api", "package_url": "https://pypi.org/project/ebird-api/", "platform": "", "project_url": "https://pypi.org/project/ebird-api/", "project_urls": {"Homepage": "http://pypi.python.org/pypi/ebird-api/"}, "release_url": "https://pypi.org/project/ebird-api/3.0.5/", "requires_dist": null, "requires_python": "", "summary": "Wrapper for accessing the eBird API", "version": "3.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/ProjectBabbler/ebird-api\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b3ce3a55603c0ce481a74e6570cf4f77df496666/68747470733a2f2f7472617669732d63692e6f72672f50726f6a656374426162626c65722f65626972642d6170692e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/ebird-api\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/83243eae54e58009a34c1a526ed5777f925d9aa5/68747470733a2f2f62616467652e667572792e696f2f70792f65626972642d6170692e737667\"></a>\n<a href=\"https://img.shields.io/pypi/pyversions/ebird-api\" rel=\"nofollow\"><img alt=\"Supported Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c27aebb4f78518d8c2ddba42caeb291b38ffc5a4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f65626972642d6170692e737667\"></a></p>\n<h1>eBird API</h1>\n<p>eBird API provides a set of wrapper functions for accessing the end-points\nin the eBird API 2.0.</p>\n<h2>Install</h2>\n<pre>pip install ebird-api\n</pre>\n<h2>Usage</h2>\n<p>Each of the functions map to a specific end-point in the API - with one or\ntwo exceptions where API calls are essentially identical. The functions can\nbe grouped into five activities: fetching observations, getting information\non hotspots, getting information on regions, getting lists of species and\ngetting statistics.</p>\n<p>All functions support arguments (with sensible defaults) for all the query\nparameters supported by the eBird API. Check the docstring for each function\nfor more details. There you will also find a link to the documentation for\neach end-point.</p>\n<p>To use the API you will need to register for an API key. All you need to do is\nfill out this <a href=\"https://ebird.org/api/keygen\" rel=\"nofollow\">form</a> and the API key is generated\nautomatically.</p>\n<p>NOTE: Use the API with some restraint. Data costs money so don't go downloading\nall the checklists for the world or other excessive behaviour or your account will\nget banned. If you have a project in mind get in touch with eBird and tell them\nwhat you want to do - they will be interested to hear it.</p>\n<h3>Observations</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ebird.api</span> <span class=\"kn\">import</span> <span class=\"n\">get_observations</span>\n\n<span class=\"c1\"># Get observations from Woodman Pond, Madison county, New York for the past week.</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">get_observations</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'L227544'</span><span class=\"p\">,</span> <span class=\"n\">back</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get observations from Madison county, New York</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">get_observations</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'US-NY-053'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get observations from New York</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">get_observations</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'US-NY'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get observations from the USA - don't overdo the data downloads</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">get_observations</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'US'</span><span class=\"p\">)</span>\n</pre>\n<p>Any where you pass in single location or region you can also pass in a\nlist or a comma-separated string. You can specify up to 10 locations or\nregions:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ebird.api</span> <span class=\"kn\">import</span> <span class=\"n\">get_observations</span>\n\n<span class=\"c1\"># Get the observations for the most visited locations in Madison county, New York:</span>\n<span class=\"c1\"># Woodman Pond, Ditch Bank Rd., Cornell Biological Field Station and</span>\n<span class=\"c1\"># Anne V Pickard Memorial Wildlife Overlook.</span>\n<span class=\"n\">locations</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'L227544'</span><span class=\"p\">,</span> <span class=\"s1\">'L273783'</span><span class=\"p\">,</span> <span class=\"s1\">'L677871'</span><span class=\"p\">,</span> <span class=\"s1\">'L2313391'</span><span class=\"p\">]</span>\n<span class=\"n\">get_observations</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"n\">locations</span><span class=\"p\">,</span> <span class=\"n\">provisional</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">detail</span><span class=\"o\">=</span><span class=\"s1\">'full'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the observations for Suffolk, Nassau and Queens counties in New York state.</span>\n<span class=\"n\">counties</span> <span class=\"o\">=</span> <span class=\"s1\">'US-NY-103,US-NY-059,US-NY-81'</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">get_observations</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"n\">locations</span><span class=\"p\">,</span> <span class=\"n\">hotspot</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">category</span><span class=\"o\">=</span><span class=\"s1\">'species'</span><span class=\"p\">)</span>\n</pre>\n<p>The functions that return observations, checklists or taxonomy support allow\nthe common name for species to be returned in different languages:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ebird.api</span> <span class=\"kn\">import</span> <span class=\"n\">get_observations</span>\n\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">get_observations</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'CA-QC'</span><span class=\"p\">,</span> <span class=\"n\">locale</span><span class=\"o\">=</span><span class=\"s1\">'fr'</span><span class=\"p\">)</span>\n</pre>\n<p>In addition to getting all the observations for a given location or in\nan area you can also get the latest observation of each species in a\ngeographical area - useful for finding the nearest place to see a given\nspecies:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ebird.api</span> <span class=\"kn\">import</span> <span class=\"n\">get_nearby_observations</span>\n\n<span class=\"c1\"># Get the most recent sightings of all species seen in the last week within </span>\n<span class=\"c1\"># 10km of Point Reyes National Seashore.</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">get_nearby_observations</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"mf\">38.05</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">122.94</span><span class=\"p\">,</span> <span class=\"n\">dist</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">back</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n</pre>\n<p>The calls to get_observations() and get_nearby_observation() return all the\navailable records. You can limit the set of records returned to only include\nnotable ones (locally or nationally rare species) or limit the records to\na small number of species:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ebird.api</span> <span class=\"kn\">import</span> <span class=\"n\">get_notable_observations</span><span class=\"p\">,</span> <span class=\"n\">get_nearby_notable</span><span class=\"p\">,</span> \\\n    <span class=\"n\">get_species_observations</span><span class=\"p\">,</span> <span class=\"n\">get_nearby_species</span>\n\n<span class=\"c1\"># Get the interesting birds seen in New York state.</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">get_notable_observations</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'US-NY'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the observations of Horned Lark (Eremophila alpestris) in New York state.</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">get_species_observations</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'horlar'</span><span class=\"p\">,</span> <span class=\"s1\">'US-NY'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the interesting birds within 50kn of Point Reyes</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">get_nearby_notable</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"mf\">38.05</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">122.94</span><span class=\"p\">,</span> <span class=\"n\">dist</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Find out if Barn Swallows have been seen in the area in the past 10 days</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">get_nearby_species</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'barswa'</span><span class=\"p\">,</span> <span class=\"mf\">38.05</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">122.94</span><span class=\"p\">,</span> <span class=\"n\">back</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p>For the more travel-minded you can also find out where is th e nearest place\nto see a given species:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ebird.api</span> <span class=\"kn\">import</span> <span class=\"n\">get_nearest_species</span>\n\n<span class=\"c1\"># Where is the closest place to Cornell Lab of Ornithology to see</span>\n<span class=\"c1\"># Tennessee Warbler. </span>\n<span class=\"n\">locations</span> <span class=\"o\">=</span> <span class=\"n\">get_nearest_species</span><span class=\"p\">(</span><span class=\"s1\">'tenwar'</span><span class=\"p\">,</span> <span class=\"mf\">42.48</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">76.45</span><span class=\"p\">)</span>\n</pre>\n<p>Depending on what time of year you try this, you might have a long way to go.</p>\n<h3>Checklists</h3>\n<p>There are two functions for finding out what has been seen at a given location.\nFirst you can get the list of checklists for a given country, region or location\nusing get_visits(). Each result returned has the unique identifier for the\nchecklist. You can then call get_checklist() to get the list of observations.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ebird.api</span> <span class=\"kn\">import</span> <span class=\"n\">get_visits</span><span class=\"p\">,</span> <span class=\"n\">get_checklist</span>\n\n<span class=\"c1\"># Get visits made recently to locations in New York state:</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">get_visits</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'US-NY'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get visits made recently to locations in New York state on Jan 1st 2010</span>\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">get_visits</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'US-NY'</span><span class=\"p\">,</span> <span class=\"s1\">'2010-01-01'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the details of a checklist</span>\n<span class=\"n\">checklist</span> <span class=\"o\">=</span> <span class=\"n\">get_checklist</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'S22536787'</span><span class=\"p\">)</span>\n</pre>\n<h3>Hotspots</h3>\n<p>There are two functions for discovering hotspots. get_hotspots() list all\nthe locations in a given area. You can find all the hotspots visited recently\nby given a value for the back argument. get_nearby_hotspots() is used to find\nhotspots within a given radius. get_hotspot() can be used to get information\non the location of a given hotspot.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ebird.api</span> <span class=\"kn\">import</span> <span class=\"n\">get_hotspots</span><span class=\"p\">,</span> <span class=\"n\">get_nearby_hotspots</span><span class=\"p\">,</span> <span class=\"n\">get_hotspot</span>\n\n<span class=\"c1\"># List all the hotspots in New York state.</span>\n<span class=\"n\">hotspots</span> <span class=\"o\">=</span> <span class=\"n\">get_hotspots</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'US-NY'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># List all the hotspots in New York state visited in the past week.</span>\n<span class=\"n\">recent</span> <span class=\"o\">=</span> <span class=\"n\">get_hotspots</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'US-NY'</span><span class=\"p\">,</span> <span class=\"n\">back</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># List all the hotspots in New York state visited in the past week.</span>\n<span class=\"n\">recent</span> <span class=\"o\">=</span> <span class=\"n\">get_hotspots</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'US-NY'</span><span class=\"p\">,</span> <span class=\"n\">back</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># List all the hotspots in within 50kn of Point Reyes</span>\n<span class=\"n\">nearby</span> <span class=\"o\">=</span> <span class=\"n\">get_nearby_hotspots</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"mf\">38.05</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">122.94</span><span class=\"p\">,</span> <span class=\"n\">dist</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the details of Anne V Pickard Memorial Wildlife Overlook in New York state.</span>\n<span class=\"n\">details</span> <span class=\"o\">=</span> <span class=\"n\">get_hotspot</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'L2313391'</span><span class=\"p\">)</span>\n</pre>\n<h3>Regions</h3>\n<p>eBird divides the world into countries, subnational1 regions (states) or\nsubnational2 regions (counties). You can use get_regions() to get the\nlist of sub-regions for a given region. For the approximate area covered\nby a region use get_region().</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ebird.api</span> <span class=\"kn\">import</span> <span class=\"n\">get_regions</span><span class=\"p\">,</span> <span class=\"n\">get_adjacent_regions</span><span class=\"p\">,</span> <span class=\"n\">get_region</span>\n\n<span class=\"c1\"># Get the list of countries in the world.</span>\n<span class=\"n\">countries</span> <span class=\"o\">=</span> <span class=\"n\">get_regions</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'country'</span><span class=\"p\">,</span> <span class=\"s1\">'world'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the list of states in the US.</span>\n<span class=\"n\">states</span> <span class=\"o\">=</span> <span class=\"n\">get_regions</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'subnational1'</span><span class=\"p\">,</span> <span class=\"s1\">'US'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the list of counties in New York state.</span>\n<span class=\"n\">counties</span> <span class=\"o\">=</span> <span class=\"n\">get_regions</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'subnational2'</span><span class=\"p\">,</span> <span class=\"s1\">'US-NY'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the list of states which border New York state.</span>\n<span class=\"n\">nearby</span> <span class=\"o\">=</span> <span class=\"n\">get_adjacent_regions</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'US-NY'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the approximate area covered by New York state.</span>\n<span class=\"n\">bounds</span> <span class=\"o\">=</span> <span class=\"n\">get_region</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'US-NY'</span><span class=\"p\">)</span>\n</pre>\n<h3>Taxonomy</h3>\n<p>You can get details of all the species, subspecies, forms\netc. in the taxonomy used by eBird. It's the easiest way\nof getting the codes for each species or subspecies,\ne.g. horlar (Horned Lark), cangoo (Canada Goose), etc.,\nthat are used in the other API calls.1</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ebird.api</span> <span class=\"kn\">import</span> <span class=\"n\">get_taxonomy</span><span class=\"p\">,</span> <span class=\"n\">get_taxonomy_forms</span><span class=\"p\">,</span> <span class=\"n\">get_taxonomy_versions</span>\n\n<span class=\"c1\"># Get all the species in the eBird taxonomy.</span>\n<span class=\"n\">taxonomy</span> <span class=\"o\">=</span> <span class=\"n\">get_taxonomy</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get all the species in the eBird taxonomy with common names in Spanish</span>\n<span class=\"n\">names</span> <span class=\"o\">=</span> <span class=\"n\">get_taxonomy</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"n\">locale</span><span class=\"o\">=</span><span class=\"s1\">'es'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get all the taxonomy for Horned Lark</span>\n<span class=\"n\">species</span> <span class=\"o\">=</span> <span class=\"n\">get_taxonomy</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"n\">species</span><span class=\"o\">=</span><span class=\"s1\">'horlar'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the codes for all the subspecies and froms recognised for Barn Swallow.</span>\n<span class=\"n\">forms</span> <span class=\"o\">=</span> <span class=\"n\">get_taxonomy_forms</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'barswa'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get information on all the taxonomy revisions, i.e. versions.</span>\n<span class=\"c1\"># Usually only the latest is important.</span>\n<span class=\"n\">versions</span> <span class=\"o\">=</span> <span class=\"n\">get_taxonomy_versions</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">)</span>\n</pre>\n<h3>Statistics</h3>\n<p>You can also get some statistics from the eBird data. The most interesting\nis probably get_top_100() which return the list of observers who have seen\nthe most species or submitted the largest number of checklists. The list is\njust for a specific day so it is really only useful for \"Big Days\" when\nlots of people are out trying to get the greatest number of species.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ebird.api</span> <span class=\"kn\">import</span> <span class=\"n\">get_top_100</span><span class=\"p\">,</span> <span class=\"n\">get_totals</span>\n\n<span class=\"c1\"># Get the winner of the Global Big Day in New York, on 5th May 2018</span>\n<span class=\"n\">winners</span> <span class=\"o\">=</span> <span class=\"n\">get_top_100</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'US-NY'</span><span class=\"p\">,</span> <span class=\"s1\">'2018-05-05'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get the number of contributors, checklist submitted and species seen today</span>\n<span class=\"n\">totals</span> <span class=\"o\">=</span> <span class=\"n\">get_totals</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"s1\">'US-NY'</span><span class=\"p\">,</span> <span class=\"n\">date</span><span class=\"o\">.</span><span class=\"n\">today</span><span class=\"p\">())</span>\n</pre>\n<h3>Client</h3>\n<p>There is a simple Client class which wraps the various functions from the API.\nYou can set the API key and locale when creating a Client instance so you don't\nhave to keep passing them as arguments.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ebird.api</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"s1\">'abc123'</span>\n<span class=\"n\">locale</span> <span class=\"o\">=</span> <span class=\"s1\">'es'</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"n\">locale</span><span class=\"p\">)</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_observations</span><span class=\"p\">(</span><span class=\"s1\">'MX-OAX'</span><span class=\"p\">)</span>\n</pre>\n<p>The client supports all the API functions.</p>\n<h2>Formats</h2>\n<p>Most of the eBird API calls return JSON. Some of the calls such as getting\nthe hotspots for a region or getting the taxonomy also support CSV. Since\nconverting JSON to CSV is simple this library is opinionated in that it\nonly returns JSON.</p>\n<h2>Compatibility</h2>\n<p>ebird-api works with Python 3.5+.</p>\n<h2>Links</h2>\n<p>Documentation for the eBird API: <a href=\"https://documenter.getpostman.com/view/664302/S1ENwy59?version=latest#intro\" rel=\"nofollow\">https://documenter.getpostman.com/view/664302/S1ENwy59?version=latest#intro</a>\nthough it could do with a little love and attention.</p>\n<p>Available translations for species names: <a href=\"http://help.ebird.org/customer/portal/articles/1596582\" rel=\"nofollow\">http://help.ebird.org/customer/portal/articles/1596582</a></p>\n<p>Information on the taxonomy used by eBird: <a href=\"http://help.ebird.org/customer/portal/articles/1006825-the-ebird-taxonomy\" rel=\"nofollow\">http://help.ebird.org/customer/portal/articles/1006825-the-ebird-taxonomy</a></p>\n<h2>License</h2>\n<p>eBird API is available under the terms of the <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT</a> licence.</p>\n\n          </div>"}, "last_serial": 5763955, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "b7d773b8069dcf12104326fc17695e9e", "sha256": "6128bc0a407c506ba9ead3d2b9bdccba9659e0bef7d0d444f7836cf0fef168c7"}, "downloads": -1, "filename": "ebird_api-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b7d773b8069dcf12104326fc17695e9e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5503, "upload_time": "2017-02-15T17:07:05", "upload_time_iso_8601": "2017-02-15T17:07:05.380874Z", "url": "https://files.pythonhosted.org/packages/33/d4/8a63fe27cad02cd71599461c28d2856684b3ddc0fa705e22c49c775035ab/ebird_api-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab8ea6a99543465b82f0849bfd45b3b5", "sha256": "37691c2443fb5de8d7dbb95814f85cd4c8a76270df8d21e3b6a708f68de981fd"}, "downloads": -1, "filename": "ebird-api-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ab8ea6a99543465b82f0849bfd45b3b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16808, "upload_time": "2017-02-15T17:08:04", "upload_time_iso_8601": "2017-02-15T17:08:04.268696Z", "url": "https://files.pythonhosted.org/packages/a5/18/6b01b44ea639c167658b3631a77ac74af52515be406a51cb6e65e6239c97/ebird-api-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d15e54f10f9a782c43064e073e4d2170", "sha256": "94177ec2f4cf5ab5b4483ee8508fff408000d52439407073086ef11846ca8b8f"}, "downloads": -1, "filename": "ebird_api-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d15e54f10f9a782c43064e073e4d2170", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5680, "upload_time": "2017-02-18T13:55:35", "upload_time_iso_8601": "2017-02-18T13:55:35.157343Z", "url": "https://files.pythonhosted.org/packages/08/e3/6ae295a3892c59fb852f001aac6843f81dbe00ac96b94371ce2605cf0365/ebird_api-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7790440fe2e27ed718582c926024e06a", "sha256": "41e1f5f71f6fc87f0e92c9f452695c5bc85b96c6d6ef6827fd7a0591fa4b6b57"}, "downloads": -1, "filename": "ebird-api-0.2.0.tar.gz", "has_sig": false, "md5_digest": "7790440fe2e27ed718582c926024e06a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18598, "upload_time": "2017-02-18T13:55:04", "upload_time_iso_8601": "2017-02-18T13:55:04.565606Z", "url": "https://files.pythonhosted.org/packages/d9/fb/7af58e5a8b34f03ef6ad742a2462e99f45605e3e67d91f789784fe3badd3/ebird-api-0.2.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "dbd70c2950c420d6fb9710fc70e8074c", "sha256": "e5e04960ddb75478b3a09809f52960f0b85588a631e10ec9a6fcb5f29cfc301b"}, "downloads": -1, "filename": "ebird_api-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dbd70c2950c420d6fb9710fc70e8074c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6341, "upload_time": "2017-02-21T16:52:17", "upload_time_iso_8601": "2017-02-21T16:52:17.981338Z", "url": "https://files.pythonhosted.org/packages/b7/4d/c3d37c8e2d29f62307a2d5e35e10d8fe1ee4f0d3d7f54ec0732606ba51b5/ebird_api-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "02b9b0ab60151f8eb222ea191edf1f30", "sha256": "11ef0548c7d9a8f1e828be9dc4a4bb606d8dee582094e938e10567a99107c703"}, "downloads": -1, "filename": "ebird-api-1.0.1.tar.gz", "has_sig": false, "md5_digest": "02b9b0ab60151f8eb222ea191edf1f30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20580, "upload_time": "2017-02-21T16:53:10", "upload_time_iso_8601": "2017-02-21T16:53:10.720894Z", "url": "https://files.pythonhosted.org/packages/78/9a/e472c63012ace9ce02cc9ec3dcf3df312c3f5cb2add293bfc21db5fbaa15/ebird-api-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "305ec7ca6302615797fd5750a58fbea3", "sha256": "e3489b8fd796d35572b34ae5b84d03f12b737772be89ea9be5e7f0323e8056d9"}, "downloads": -1, "filename": "ebird_api-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "305ec7ca6302615797fd5750a58fbea3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6340, "upload_time": "2017-02-23T17:48:41", "upload_time_iso_8601": "2017-02-23T17:48:41.896091Z", "url": "https://files.pythonhosted.org/packages/24/10/858f7147dc1ad32e2536c329f6605bbe8abc51bb0c8423bb455923bae727/ebird_api-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "224bc456ef22a676e57e00f4c85a28e8", "sha256": "7f68d2d47183ef3a64ee6a77602b0568d2d60e0760ea22aa36a612479ef54ae1"}, "downloads": -1, "filename": "ebird-api-1.0.2.tar.gz", "has_sig": false, "md5_digest": "224bc456ef22a676e57e00f4c85a28e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27677, "upload_time": "2017-02-23T17:49:10", "upload_time_iso_8601": "2017-02-23T17:49:10.219947Z", "url": "https://files.pythonhosted.org/packages/e3/a6/92452026eafb418f6cc4f486ebc889693dfd08ac005460af1fe4f6f7fc39/ebird-api-1.0.2.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "2ee5173484c591ff1f5fcce0bf6481ea", "sha256": "0f6b27cc3736b7d8d6633e2af373073791e26554b9c390cfdbe71b518d2adcef"}, "downloads": -1, "filename": "ebird_api-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2ee5173484c591ff1f5fcce0bf6481ea", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17092, "upload_time": "2017-02-27T19:18:02", "upload_time_iso_8601": "2017-02-27T19:18:02.221074Z", "url": "https://files.pythonhosted.org/packages/7c/90/729a91df50c2e4d22ca85934865f81c9cc586270b8a62118b03a6b1dc596/ebird_api-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e094bf2add9082b0ff289d7092ac3e1e", "sha256": "6af807b649c96f09b5db6adf723ad9a0447e3d4bfd0293ad8db310cd24273f60"}, "downloads": -1, "filename": "ebird-api-2.0.0.tar.gz", "has_sig": false, "md5_digest": "e094bf2add9082b0ff289d7092ac3e1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20390, "upload_time": "2017-02-27T19:17:20", "upload_time_iso_8601": "2017-02-27T19:17:20.594943Z", "url": "https://files.pythonhosted.org/packages/82/1b/1960d3061949a2370dbc658ff6b5cbf7b09b6010ef8a07d2a896fb642ab5/ebird-api-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "497dddb55097de5392f1fb9b751b8694", "sha256": "512e38bff2bee4e9ac24af1215a66cbfc9e793d769296fba6537897af65fcb4c"}, "downloads": -1, "filename": "ebird_api-2.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "497dddb55097de5392f1fb9b751b8694", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 18640, "upload_time": "2017-08-20T17:20:15", "upload_time_iso_8601": "2017-08-20T17:20:15.245876Z", "url": "https://files.pythonhosted.org/packages/84/c3/e0892078d1a9fa9d7aa3cb68556ddd7e3d29b2058526ccf3fbb25d6cfaa4/ebird_api-2.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad2cd045127b17966be02a03d8981c83", "sha256": "f22c651f9b38cec00e6b0c617978f9b92b22f5608e0415b51be236364933787b"}, "downloads": -1, "filename": "ebird-api-2.1.0.tar.gz", "has_sig": false, "md5_digest": "ad2cd045127b17966be02a03d8981c83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19877, "upload_time": "2017-08-20T17:20:06", "upload_time_iso_8601": "2017-08-20T17:20:06.087544Z", "url": "https://files.pythonhosted.org/packages/b8/f4/f13fd52da310548ac2c1a7e0189fd13f730e632fad9e98c2e3f94ef627e1/ebird-api-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "63e5afb61e074e34f15492081902b4c2", "sha256": "eb245589ce1617c96e77032efdd7338bbe120f62005c08b2d08842550adc7561"}, "downloads": -1, "filename": "ebird_api-2.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "63e5afb61e074e34f15492081902b4c2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27972, "upload_time": "2019-05-14T18:54:40", "upload_time_iso_8601": "2019-05-14T18:54:40.327366Z", "url": "https://files.pythonhosted.org/packages/5b/93/c5e06c3e87dde06ac0b6484d2fe31ca957abbec0d47fb5c338ea7b72ccbb/ebird_api-2.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11cb72bf81ad7c6dc7d1cd4b373fa693", "sha256": "2bd81f4837612c9f25a788b575ac44ac3a89cf2b30d6e135e05d31b896b598ea"}, "downloads": -1, "filename": "ebird-api-2.1.1.tar.gz", "has_sig": false, "md5_digest": "11cb72bf81ad7c6dc7d1cd4b373fa693", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19972, "upload_time": "2019-05-14T18:54:26", "upload_time_iso_8601": "2019-05-14T18:54:26.712018Z", "url": "https://files.pythonhosted.org/packages/0c/2c/434a8555ca1ae5bfbf5f43cdbba5cd36cef6c98274f772609ec5d62ce39e/ebird-api-2.1.1.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "2f8639645d45bc85e3b79b8c6db7d3ea", "sha256": "ce89838cfd47c429c6d3833be2dfefef5c83e7171b019a80ffc01e80bafdc56d"}, "downloads": -1, "filename": "ebird_api-3.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2f8639645d45bc85e3b79b8c6db7d3ea", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20676, "upload_time": "2019-06-05T21:36:14", "upload_time_iso_8601": "2019-06-05T21:36:14.358780Z", "url": "https://files.pythonhosted.org/packages/76/ef/41915005e2898eacf68ee7726438f9883b29d5baedc03ac663aef2b5712d/ebird_api-3.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a56d6a1b5a47e09edc4d1b56e2920725", "sha256": "41dbcf6b52b10518a03e85217442555300669125bdf030eaa71e59183bf9639e"}, "downloads": -1, "filename": "ebird-api-3.0.0.tar.gz", "has_sig": false, "md5_digest": "a56d6a1b5a47e09edc4d1b56e2920725", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20541, "upload_time": "2019-06-05T21:36:16", "upload_time_iso_8601": "2019-06-05T21:36:16.094969Z", "url": "https://files.pythonhosted.org/packages/62/93/b4d019eb92239cd5bfa8af9c6f1f06f310a0f29fedd4bb7d77a2bbfcd566/ebird-api-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "fcc958cca88132a3929af233c58dae4e", "sha256": "1da0d4eeba83974dfb6b47887a44482523b19d6d1ec72a9d426f4ec20b99be78"}, "downloads": -1, "filename": "ebird_api-3.0.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "fcc958cca88132a3929af233c58dae4e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26456, "upload_time": "2019-06-15T05:03:01", "upload_time_iso_8601": "2019-06-15T05:03:01.620315Z", "url": "https://files.pythonhosted.org/packages/4e/2e/116959c02feb0007ea8e0a78859a87cec1bbd90637c9ffecc58fe3348f0a/ebird_api-3.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "340c1672491663894ebf28a86f6b4995", "sha256": "a597e305856c38efd883844bf38785b98388803114248a9acdfb42d76ffac235"}, "downloads": -1, "filename": "ebird-api-3.0.1.tar.gz", "has_sig": true, "md5_digest": "340c1672491663894ebf28a86f6b4995", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25551, "upload_time": "2019-06-15T05:03:04", "upload_time_iso_8601": "2019-06-15T05:03:04.689725Z", "url": "https://files.pythonhosted.org/packages/26/d7/ba12b45afd101a09fd018e9fc633105e6ac79351cac330863de92a7c7ab7/ebird-api-3.0.1.tar.gz", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "990165ace2aab780a477ab2b3e85601c", "sha256": "c53d2377aee9b91fe7580244d30a139f8856d984110fa0a7023634996000abd8"}, "downloads": -1, "filename": "ebird_api-3.0.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "990165ace2aab780a477ab2b3e85601c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26528, "upload_time": "2019-06-22T09:22:32", "upload_time_iso_8601": "2019-06-22T09:22:32.371193Z", "url": "https://files.pythonhosted.org/packages/2b/44/618823b51839731ac05c76b5e115b2b741e7d7d85ae74925186f621b55ff/ebird_api-3.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5d12da0c1010510a2a12e167568cad6", "sha256": "9e013de162dffbfb3804db662863a7a8abeed1378c6585491d81ce666fbae6ed"}, "downloads": -1, "filename": "ebird-api-3.0.2.tar.gz", "has_sig": true, "md5_digest": "f5d12da0c1010510a2a12e167568cad6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25722, "upload_time": "2019-06-22T09:22:35", "upload_time_iso_8601": "2019-06-22T09:22:35.136246Z", "url": "https://files.pythonhosted.org/packages/d1/e2/3d9d4033cee0b8609091e462dc8b8a6bff143ecb6ef9d35fd8ba8f4e668b/ebird-api-3.0.2.tar.gz", "yanked": false}], "3.0.3": [{"comment_text": "", "digests": {"md5": "c2a1135caaf55106c0372877fffea8c6", "sha256": "7de7ea2e386c930155bf04307056b971c63ff002d2befdd04605b07810e366ff"}, "downloads": -1, "filename": "ebird_api-3.0.3-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "c2a1135caaf55106c0372877fffea8c6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23517, "upload_time": "2019-07-16T06:26:43", "upload_time_iso_8601": "2019-07-16T06:26:43.326615Z", "url": "https://files.pythonhosted.org/packages/4c/bb/1296f2b60d8e38c1ed0c174f0e87a0f98778e7aa9d483416571d6591d86c/ebird_api-3.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a08365e4327fe68e0d6fb99982e07077", "sha256": "4ca588e35dfd6f2ae3e70b27bd1034d145ffc1fd22de4eaaa4eada4a3a7f1e55"}, "downloads": -1, "filename": "ebird-api-3.0.3.tar.gz", "has_sig": true, "md5_digest": "a08365e4327fe68e0d6fb99982e07077", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23227, "upload_time": "2019-07-16T06:26:45", "upload_time_iso_8601": "2019-07-16T06:26:45.686686Z", "url": "https://files.pythonhosted.org/packages/ca/86/88c72b4711bbe5e35526e98bae4388158eb1274d3f261009a2900c405c4c/ebird-api-3.0.3.tar.gz", "yanked": false}], "3.0.4": [{"comment_text": "", "digests": {"md5": "540916cc08023221e8fe24a7f4c871f3", "sha256": "07eaa29d6b3bf1ed7f4604217681ae11cc38ad85dacb36f7cf64178c1591896f"}, "downloads": -1, "filename": "ebird_api-3.0.4-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "540916cc08023221e8fe24a7f4c871f3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23517, "upload_time": "2019-07-22T06:49:58", "upload_time_iso_8601": "2019-07-22T06:49:58.500961Z", "url": "https://files.pythonhosted.org/packages/cf/92/a58fa38183ef6a55e4236a874a702810cedfc795075a5b97770f6e4f15a7/ebird_api-3.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "647c0e3f75242d11329a322c667020a3", "sha256": "c08fcbac82cc475e2a1f123686c38353fff51244a1b0f2cb86f0e816f872ceee"}, "downloads": -1, "filename": "ebird-api-3.0.4.tar.gz", "has_sig": true, "md5_digest": "647c0e3f75242d11329a322c667020a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23295, "upload_time": "2019-07-22T06:50:01", "upload_time_iso_8601": "2019-07-22T06:50:01.063351Z", "url": "https://files.pythonhosted.org/packages/1a/4c/14cdd35d1f354175ae10e99f8b97c4c1d83a65db8bd55daf32828377ff82/ebird-api-3.0.4.tar.gz", "yanked": false}], "3.0.5": [{"comment_text": "", "digests": {"md5": "c4b415d2d09d23b785bb2548cbfb4021", "sha256": "4f9ffd44411a45ba080b9b27d9b81317b5d907d1c07c62e2eb4d24225ae2b9ef"}, "downloads": -1, "filename": "ebird_api-3.0.5-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "c4b415d2d09d23b785bb2548cbfb4021", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23701, "upload_time": "2019-08-31T09:26:32", "upload_time_iso_8601": "2019-08-31T09:26:32.260247Z", "url": "https://files.pythonhosted.org/packages/f5/de/dbb4b78288a486886cc16bca9f0eff5f92459610f5c3d77689c55f83b012/ebird_api-3.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d90731b86de1cee90459b3dc4e62aca", "sha256": "f8fb459e9bb0f585812f3993161390194357bd65dfaa2e26496c6cdb1fe0aa5e"}, "downloads": -1, "filename": "ebird-api-3.0.5.tar.gz", "has_sig": true, "md5_digest": "7d90731b86de1cee90459b3dc4e62aca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23391, "upload_time": "2019-08-31T09:26:34", "upload_time_iso_8601": "2019-08-31T09:26:34.403403Z", "url": "https://files.pythonhosted.org/packages/8c/67/920a751a58b61e1b5377546ab688630806bcfda8437b3a5fedccbc1284a9/ebird-api-3.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c4b415d2d09d23b785bb2548cbfb4021", "sha256": "4f9ffd44411a45ba080b9b27d9b81317b5d907d1c07c62e2eb4d24225ae2b9ef"}, "downloads": -1, "filename": "ebird_api-3.0.5-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "c4b415d2d09d23b785bb2548cbfb4021", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23701, "upload_time": "2019-08-31T09:26:32", "upload_time_iso_8601": "2019-08-31T09:26:32.260247Z", "url": "https://files.pythonhosted.org/packages/f5/de/dbb4b78288a486886cc16bca9f0eff5f92459610f5c3d77689c55f83b012/ebird_api-3.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d90731b86de1cee90459b3dc4e62aca", "sha256": "f8fb459e9bb0f585812f3993161390194357bd65dfaa2e26496c6cdb1fe0aa5e"}, "downloads": -1, "filename": "ebird-api-3.0.5.tar.gz", "has_sig": true, "md5_digest": "7d90731b86de1cee90459b3dc4e62aca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23391, "upload_time": "2019-08-31T09:26:34", "upload_time_iso_8601": "2019-08-31T09:26:34.403403Z", "url": "https://files.pythonhosted.org/packages/8c/67/920a751a58b61e1b5377546ab688630806bcfda8437b3a5fedccbc1284a9/ebird-api-3.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:09 2020"}