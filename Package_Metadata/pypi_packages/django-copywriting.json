{"info": {"author": "arteria GmbH", "author_email": "admin@arteria.ch", "bugtrack_url": null, "classifiers": [], "description": "Django Copywriting\n============\n\nCopywriting is the act of writing copy (text) for the purpose of advertising or marketing a product, business, person, \nopinion or idea. The addressee (reader, listener, etc.) of the copy is meant to be persuaded to buy the product advertised \nfor, or subscribe to the viewpoint the text shares.\n\nFeatures\n--------\n\n* Generic Author Model support\n* Articles\n* Automatically generated Feed \n* Tags / search by tags\n* Ping Google on publish\n* Workflow (Draft -> Review -> Ready to Publish -> Published)\n* Automatically register Articles for search if https://github.com/etianen/django-watson is installed\n* Get next/prev published article \n* Comments powered by https://disqus.com/ \n\nInstallation\n------------\n\nTo get the latest stable release from PyPi\n\n.. code-block:: bash\n\n    pip install django-copywriting (not pushed yet! use latest commit from GitHub)\n\nTo get the latest commit from GitHub\n\n.. code-block:: bash\n\n    pip install -e git+git://github.com/arteria/django-copywriting.git#egg=copywriting\n\nTODO: Describe further installation steps (edit / remove the examples below):\n\nAdd ``copywriting`` to your ``INSTALLED_APPS``\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...,\n        'copywriting',\n    )\n\nAdd the ``copywriting`` URLs to your ``urls.py``\n\n.. code-block:: python\n\n    urlpatterns = patterns('',\n        ...\n        url(r'^blog/', include('copywriting.urls')),\n    )\n\nBefore your tags/filters are available in your templates, load them by using\n\n.. code-block:: html\n\n\t{% load blogtags %}\n\n\nDon't forget to migrate your database\n\n.. code-block:: bash\n\n    ./manage.py migrate copywriting\n\n\nUsage\n-----\n\n\nSitemaps\n--------\n\nAdd the following lines to your ``urls.py``\n\n\t\n.. code-block:: python\n\n\tfrom copywriting.sitemaps import BlogSitemap\n\tsitemaps = {\n\t    'blog': BlogSitemap,\n\t}\n\t\n\t# in patterns... \n\t\n\turl(r'^sitemap\\.xml$', 'django.contrib.sitemaps.views.sitemap', {'sitemaps': sitemaps}),\n\n\nMake sure that ``'django.contrib.sitemaps'`` is in your ``INSTALLED_APPS``.\n\nComments\n--------\n\nTo use comments add a shortname and a context_processor to your settings:\n\n.. code-block:: python\n\n\tDISQUS_SHORTNAME = 'example'\n\t\n\tTEMPLATE_CONTEXT_PROCESSORS = (\n\t\t# ...\n\t\t'copywriting.context_processors.disqus_shortname',\n\t\t# ...\n\t)\n\n\nThe comments will render where the div with the id=\"disqus_thread\" is located:\n\n.. code-block:: html\n\n    \t<div id=\"disqus_thread\"></div>\n\nThe comments are controlled with the comments_enabled boolean in the article entity.\n\nSignals\n-------\n\nYou can catch a signal when a article changes to \"ready to review\" or \"ready to publish\". Here is an example:\n\n.. code-block:: python\n\n\tfrom django.dispatch import receiver\n\tfrom copywriting.signals import ready_to_review\n\tfrom copywriting.signals import ready_to_publish\n\t\n\t@receiver(ready_to_publish)\n\tdef notify_publisher(sender, **kwargs):\n\t    print \"New article with ID=%s\" % kwargs['articleID']\n\t\t\nTODO:\n\n- Describe usage or point to docs. Also describe available settings and templatetags.\n- Add dependencies\n- Better Installation Guide\n\nSet the FEED_SETTINGS in your projects settings.py file, here is an example:\n\n.. code-block:: python\n\n    FEED_SETTINGS = {\n        'title': \"My awesome Blog\",\n        'link': \"/blog/\",\n        'description': \"Don't miss any of my new posts\",\n        'author_email': \"me@domain.ch\",\n        'author_name': \"Scrooge McDuck\",\n        'author_link': \"https://www.domain.ch/\",\n        'feed_url': \"https://www.domain.ch/blog/feed/\",\n        'categories': [\n            'DuckTales',\n            'Daisy Duck',\n            ]\n    }\n\nKnown issues, TODOs and planned features\n----------------------------------------\n\n* ImageBucketObject is missing! Issue #5\n* ImageCropping dependencies\n* Translation added for ``desc`` so manual migrations of the DB are required. Add the new rows and rename ``desc`` to your primary language. This would be ``desc_de`` in case you start with German.\n\n\n\n\nContribute\n----------\n\nIf you want to contribute to this project, just send us your pull requests. Thanks.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/arteria/django-copywriting", "keywords": "django,app,blog,writing,copywriting,article", "license": "The MIT License", "maintainer": null, "maintainer_email": null, "name": "django-copywriting", "package_url": "https://pypi.org/project/django-copywriting/", "platform": "OS Independent", "project_url": "https://pypi.org/project/django-copywriting/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/arteria/django-copywriting"}, "release_url": "https://pypi.org/project/django-copywriting/0.1.12/", "requires_dist": null, "requires_python": null, "summary": "Copywriting is the act of writing copy (text) for the purpose of advertising or marketing a product, business, person, opinion or idea. The addressee (reader, listener, etc.) of the copy is meant to be persuaded to buy the product advertised for, or subscribe to the viewpoint the text shares.", "version": "0.1.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            Django Copywriting<br>============<br><br>Copywriting is the act of writing copy (text) for the purpose of advertising or marketing a product, business, person, <br>opinion or idea. The addressee (reader, listener, etc.) of the copy is meant to be persuaded to buy the product advertised <br>for, or subscribe to the viewpoint the text shares.<br><br>Features<br>--------<br><br>* Generic Author Model support<br>* Articles<br>* Automatically generated Feed <br>* Tags / search by tags<br>* Ping Google on publish<br>* Workflow (Draft -&gt; Review -&gt; Ready to Publish -&gt; Published)<br>* Automatically register Articles for search if https://github.com/etianen/django-watson is installed<br>* Get next/prev published article <br>* Comments powered by https://disqus.com/ <br><br>Installation<br>------------<br><br>To get the latest stable release from PyPi<br><br>.. code-block:: bash<br><br>    pip install django-copywriting (not pushed yet! use latest commit from GitHub)<br><br>To get the latest commit from GitHub<br><br>.. code-block:: bash<br><br>    pip install -e git+git://github.com/arteria/django-copywriting.git#egg=copywriting<br><br>TODO: Describe further installation steps (edit / remove the examples below):<br><br>Add ``copywriting`` to your ``INSTALLED_APPS``<br><br>.. code-block:: python<br><br>    INSTALLED_APPS = (<br>        ...,<br>        'copywriting',<br>    )<br><br>Add the ``copywriting`` URLs to your ``urls.py``<br><br>.. code-block:: python<br><br>    urlpatterns = patterns('',<br>        ...<br>        url(r'^blog/', include('copywriting.urls')),<br>    )<br><br>Before your tags/filters are available in your templates, load them by using<br><br>.. code-block:: html<br><br>\t{% load blogtags %}<br><br><br>Don't forget to migrate your database<br><br>.. code-block:: bash<br><br>    ./manage.py migrate copywriting<br><br><br>Usage<br>-----<br><br><br>Sitemaps<br>--------<br><br>Add the following lines to your ``urls.py``<br><br>\t<br>.. code-block:: python<br><br>\tfrom copywriting.sitemaps import BlogSitemap<br>\tsitemaps = {<br>\t    'blog': BlogSitemap,<br>\t}<br>\t<br>\t# in patterns... <br>\t<br>\turl(r'^sitemap\\.xml$', 'django.contrib.sitemaps.views.sitemap', {'sitemaps': sitemaps}),<br><br><br>Make sure that ``'django.contrib.sitemaps'`` is in your ``INSTALLED_APPS``.<br><br>Comments<br>--------<br><br>To use comments add a shortname and a context_processor to your settings:<br><br>.. code-block:: python<br><br>\tDISQUS_SHORTNAME = 'example'<br>\t<br>\tTEMPLATE_CONTEXT_PROCESSORS = (<br>\t\t# ...<br>\t\t'copywriting.context_processors.disqus_shortname',<br>\t\t# ...<br>\t)<br><br><br>The comments will render where the div with the id=\"disqus_thread\" is located:<br><br>.. code-block:: html<br><br>    \t&lt;div id=\"disqus_thread\"&gt;&lt;/div&gt;<br><br>The comments are controlled with the comments_enabled boolean in the article entity.<br><br>Signals<br>-------<br><br>You can catch a signal when a article changes to \"ready to review\" or \"ready to publish\". Here is an example:<br><br>.. code-block:: python<br><br>\tfrom django.dispatch import receiver<br>\tfrom copywriting.signals import ready_to_review<br>\tfrom copywriting.signals import ready_to_publish<br>\t<br>\t@receiver(ready_to_publish)<br>\tdef notify_publisher(sender, **kwargs):<br>\t    print \"New article with ID=%s\" % kwargs['articleID']<br>\t\t<br>TODO:<br><br>- Describe usage or point to docs. Also describe available settings and templatetags.<br>- Add dependencies<br>- Better Installation Guide<br><br>Set the FEED_SETTINGS in your projects settings.py file, here is an example:<br><br>.. code-block:: python<br><br>    FEED_SETTINGS = {<br>        'title': \"My awesome Blog\",<br>        'link': \"/blog/\",<br>        'description': \"Don't miss any of my new posts\",<br>        'author_email': \"me@domain.ch\",<br>        'author_name': \"Scrooge McDuck\",<br>        'author_link': \"https://www.domain.ch/\",<br>        'feed_url': \"https://www.domain.ch/blog/feed/\",<br>        'categories': [<br>            'DuckTales',<br>            'Daisy Duck',<br>            ]<br>    }<br><br>Known issues, TODOs and planned features<br>----------------------------------------<br><br>* ImageBucketObject is missing! Issue #5<br>* ImageCropping dependencies<br>* Translation added for ``desc`` so manual migrations of the DB are required. Add the new rows and rename ``desc`` to your primary language. This would be ``desc_de`` in case you start with German.<br><br><br><br><br>Contribute<br>----------<br><br>If you want to contribute to this project, just send us your pull requests. Thanks.\n          </div>"}, "last_serial": 1585539, "releases": {"0.1.12": [{"comment_text": "", "digests": {"md5": "a716e1d012f0368bb481834aff78cd5c", "sha256": "fce7586e4dbd85cc867c71f3f45883f3250372398dc0bda85f048f86032fcc18"}, "downloads": -1, "filename": "django-copywriting-0.1.12.tar.gz", "has_sig": false, "md5_digest": "a716e1d012f0368bb481834aff78cd5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12647, "upload_time": "2015-06-09T21:44:17", "upload_time_iso_8601": "2015-06-09T21:44:17.189156Z", "url": "https://files.pythonhosted.org/packages/74/95/f9974055d462d6f4c68583ac7437c4c666daa1ec69dd8aa4947ff9ddb748/django-copywriting-0.1.12.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a716e1d012f0368bb481834aff78cd5c", "sha256": "fce7586e4dbd85cc867c71f3f45883f3250372398dc0bda85f048f86032fcc18"}, "downloads": -1, "filename": "django-copywriting-0.1.12.tar.gz", "has_sig": false, "md5_digest": "a716e1d012f0368bb481834aff78cd5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12647, "upload_time": "2015-06-09T21:44:17", "upload_time_iso_8601": "2015-06-09T21:44:17.189156Z", "url": "https://files.pythonhosted.org/packages/74/95/f9974055d462d6f4c68583ac7437c4c666daa1ec69dd8aa4947ff9ddb748/django-copywriting-0.1.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:50 2020"}