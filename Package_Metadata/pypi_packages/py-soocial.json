{"info": {"author": "thruflo", "author_email": "thruflo@googlemail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: Public Domain", "Programming Language :: Python"], "description": "Introduction\r\n------------\r\n\r\nThis package provides a python wrapper to the `Soocial developer API <https://api.soocial.com>`_.  `Soocial <http://www.soocial.com>`_ is a web\r\nservice that facilitates contact management by syncing across mutliple devices.\r\n\r\n\r\nBasic Usage\r\n-----------\r\n\r\nImport Soocial and provide it with your Soocial email and password::\r\n\r\n    >>> from soocial import Soocial\r\n    >>> myemail = 'me@foo.com'\r\n    >>> mypassword '***'\r\n    >>> soo = Soocial(myemail, mypassword)\r\n\r\nYou have the following API available:\r\n\r\n- ``def __contains__(id)``: does the contact with id ``id`` exist?\r\n- ``def __iter__()``: for contact in soo: # do stuff with contact\r\n- ``def __len__()``: no_of_contacts = len(soo)\r\n- ``def __nonzero__()``: if soo: # do stuff\r\n- ``def __getitem__(id)``: mycontact = soo[id]\r\n- ``def __setitem__(id, postdata)``: soo[id] = {...} # n.b. rather limited atm\r\n- ``def __delitem__(id)``: del soo[id]\r\n- ``def add(postdata)``: soo.add({...}) # ltd\r\n- ``def get_all_vcards(parse=True)``: get all contacts as a list of vcards\r\n- ``def get_vcard(id, parse=True)``: get contact as vcard\r\n- ``def get_phones(id)``: get list of contact's telephone numbers\r\n- ``def get_emails(id)``: get list of contacts's emails\r\n- ``def get_urls(id)``: get list of contacts's urls\r\n- ``def get_addresses(id)``: get list of contacts's addresses\r\n- ``def get_organisations(id)``: get list of contacts's organisations\r\n- ``def get_user()``: get small set of user data\r\n- ``def get_connection_phones()``: get phone number of user's connections\r\n\r\n\r\nExample Usage\r\n-------------\r\n\r\nSee ``soocial.client.Soocial.__doc__``.\r\n\r\n\r\nTests\r\n-----\r\n\r\nTo run the tests create an empty soocial account, temporarily hack your email\r\nand password into .client.Soocial's doc string and run::\r\n\r\n    $ python setup.py nosetests --with-doctest\r\n\r\nThen perhaps remove your email and password from the doc string ;)\r\n\r\n\r\nNotes\r\n-----\r\n\r\n- the API doesn't support ``HEAD`` requests, which would be handy for checking\r\n  existence without incurring extra request size overhead of ``GET``\r\n  \r\n- the ``/contact*`` REST seems the wrong way round: using ``POST`` for add and ``PUT`` for edit\r\n  \r\n- parameter names don't correspond to returned XML element names (i.e.: ``first_name``\r\n  becomes ``given-name``\r\n  \r\n- write access to the elements contained by a contact (email, url, phone, etc.)\r\n  seems not to be working as documented; in fact, it would be nice to have some\r\n  documentation on the right URLs and the right parameters", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/thruflo/py-soocial/tree/master", "keywords": "", "license": "Public Domain", "maintainer": "", "maintainer_email": "", "name": "py-soocial", "package_url": "https://pypi.org/project/py-soocial/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/py-soocial/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/thruflo/py-soocial/tree/master"}, "release_url": "https://pypi.org/project/py-soocial/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Python bindings for the http://www.soocial.com developer API", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This package provides a python wrapper to the <a href=\"https://api.soocial.com\" rel=\"nofollow\">Soocial developer API</a>.  <a href=\"http://www.soocial.com\" rel=\"nofollow\">Soocial</a> is a web\nservice that facilitates contact management by syncing across mutliple devices.</p>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<p>Import Soocial and provide it with your Soocial email and password:</p>\n<pre>&gt;&gt;&gt; from soocial import Soocial\n&gt;&gt;&gt; myemail = 'me@foo.com'\n&gt;&gt;&gt; mypassword '***'\n&gt;&gt;&gt; soo = Soocial(myemail, mypassword)\n</pre>\n<p>You have the following API available:</p>\n<ul>\n<li><tt>def __contains__(id)</tt>: does the contact with id <tt>id</tt> exist?</li>\n<li><tt>def __iter__()</tt>: for contact in soo: # do stuff with contact</li>\n<li><tt>def __len__()</tt>: no_of_contacts = len(soo)</li>\n<li><tt>def __nonzero__()</tt>: if soo: # do stuff</li>\n<li><tt>def __getitem__(id)</tt>: mycontact = soo[id]</li>\n<li><tt>def __setitem__(id, postdata)</tt>: soo[id] = {\u2026} # n.b. rather limited atm</li>\n<li><tt>def __delitem__(id)</tt>: del soo[id]</li>\n<li><tt>def add(postdata)</tt>: soo.add({\u2026}) # ltd</li>\n<li><tt>def get_all_vcards(parse=True)</tt>: get all contacts as a list of vcards</li>\n<li><tt>def get_vcard(id, parse=True)</tt>: get contact as vcard</li>\n<li><tt>def get_phones(id)</tt>: get list of contact\u2019s telephone numbers</li>\n<li><tt>def get_emails(id)</tt>: get list of contacts\u2019s emails</li>\n<li><tt>def get_urls(id)</tt>: get list of contacts\u2019s urls</li>\n<li><tt>def get_addresses(id)</tt>: get list of contacts\u2019s addresses</li>\n<li><tt>def get_organisations(id)</tt>: get list of contacts\u2019s organisations</li>\n<li><tt>def get_user()</tt>: get small set of user data</li>\n<li><tt>def get_connection_phones()</tt>: get phone number of user\u2019s connections</li>\n</ul>\n</div>\n<div id=\"example-usage\">\n<h2>Example Usage</h2>\n<p>See <tt>soocial.client.Soocial.__doc__</tt>.</p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>To run the tests create an empty soocial account, temporarily hack your email\nand password into .client.Soocial\u2019s doc string and run:</p>\n<pre>$ python setup.py nosetests --with-doctest\n</pre>\n<p>Then perhaps remove your email and password from the doc string ;)</p>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<ul>\n<li>the API doesn\u2019t support <tt>HEAD</tt> requests, which would be handy for checking\nexistence without incurring extra request size overhead of <tt>GET</tt></li>\n<li>the <tt>/contact*</tt> REST seems the wrong way round: using <tt>POST</tt> for add and <tt>PUT</tt> for edit</li>\n<li>parameter names don\u2019t correspond to returned XML element names (i.e.: <tt>first_name</tt>\nbecomes <tt><span class=\"pre\">given-name</span></tt></li>\n<li>write access to the elements contained by a contact (email, url, phone, etc.)\nseems not to be working as documented; in fact, it would be nice to have some\ndocumentation on the right URLs and the right parameters</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 796864, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "6262f2159557335ca11cb25057beb322", "sha256": "789134502d32fdf3327fd3cb0a92db36c403dc886c7d32fe5cf875f7a4e9a22e"}, "downloads": -1, "filename": "py-soocial-0.1.tar.gz", "has_sig": false, "md5_digest": "6262f2159557335ca11cb25057beb322", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8089, "upload_time": "2009-03-17T12:02:49", "upload_time_iso_8601": "2009-03-17T12:02:49.917130Z", "url": "https://files.pythonhosted.org/packages/2b/0d/36ace53d8b1474afc92682895faf9540603bd848bbe5af5ea1e9122be11f/py-soocial-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "1a8dc27fc80f50b490446dd755cb2262", "sha256": "224a00d98e1e5f79763dbc5d8c5db12f7bfd556eb1896c48ecebbd3a08208a72"}, "downloads": -1, "filename": "py-soocial-0.2.tar.gz", "has_sig": false, "md5_digest": "1a8dc27fc80f50b490446dd755cb2262", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8326, "upload_time": "2009-03-17T12:22:57", "upload_time_iso_8601": "2009-03-17T12:22:57.777838Z", "url": "https://files.pythonhosted.org/packages/e4/7e/7fbacec0e3b987e26d44efda07a78d0cea452b41f0284507377253f97df7/py-soocial-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "323464da592a8b6274e7c43411e74d55", "sha256": "ada896adf72245f2abf401d14082eee826811081a3749c2e93ca19a29e9c6f94"}, "downloads": -1, "filename": "py-soocial-0.2.1.tar.gz", "has_sig": false, "md5_digest": "323464da592a8b6274e7c43411e74d55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7905, "upload_time": "2010-09-24T16:45:40", "upload_time_iso_8601": "2010-09-24T16:45:40.201870Z", "url": "https://files.pythonhosted.org/packages/1b/9c/a2ea66ff98277ddffef2de2dbbf32f81b3f1de75d4e9d2b4dad435f09bec/py-soocial-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "323464da592a8b6274e7c43411e74d55", "sha256": "ada896adf72245f2abf401d14082eee826811081a3749c2e93ca19a29e9c6f94"}, "downloads": -1, "filename": "py-soocial-0.2.1.tar.gz", "has_sig": false, "md5_digest": "323464da592a8b6274e7c43411e74d55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7905, "upload_time": "2010-09-24T16:45:40", "upload_time_iso_8601": "2010-09-24T16:45:40.201870Z", "url": "https://files.pythonhosted.org/packages/1b/9c/a2ea66ff98277ddffef2de2dbbf32f81b3f1de75d4e9d2b4dad435f09bec/py-soocial-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:21 2020"}