{"info": {"author": "Peter Schueller", "author_email": "schueller.p@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Java", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Utilities"], "description": "# Hexlite - Solver for a fragment of HEX\n\nThis is a solver for a fragment of the HEX language and for Python-based plugins\nwhich is based on Python interfaces of Clingo and does not contain any C++ code itself.\n\nThe intention is to provide a lightweight system for an easy start with HEX.\n\nThe vision is that HEXLite can use existing Python plugins and runs based on\nthe Clingo python interface, without realizing the full power of HEX.\n\nThe system is currently under development and only works for certain programs:\n* External atoms with only constant inputs are evaluated during grounding in Gringo\n* External atoms with predicate input(s) and no constant outputs are evaluated during solving in a clasp Propagator\n* External atoms with predicate input(s) and constant outputs that have a domain predicate can also be evaluated\n* Liberal Safety is not implemented\n* Properties of external atoms are not used\n* If it has a finite grounding, it will terminate, otherwise, it will not - as usual with Gringo\n* FLP Check is implemented explicitly and does not work with strong negation and weak constraints\n* FLP Check can be deactivated\n* There is a Java Plugin API (see below)\n\nThe system is described in the following publication.\n\n  Peter Sch\u00fcller (2019)\n  The Hexlite Solver.\n  In: Logics in Artificial Intelligence. JELIA 2019. Lecture Notes in Computer Science, vol 11468. Springer, Cham\n  https://doi.org/10.1007/978-3-030-19570-0_39\n\nIn case of bugs please report an issue here: https://github.com/hexhex/hexlite/issues\n\n* License: MIT\n* Author: Peter Sch\u00fcller <schueller.p@gmail.com>\n* Available at PyPi: https://pypi.python.org/pypi/hexlite\n* Installation with Conda:\n\n  The easiest way to install `hexlite` is Conda.\n  \n  First you need to install the `clingo` dependency:\n\n  ```$ conda install -c potassco clingo```\n\n  Then you install hexlite:\n\n  ```$ conda install -c peterschueller hexlite```\n\n  (If you wonder why we do not automatically install clingo as a dependency:\n  certain conda restrictions prevent that `clingo` is automatically installed\n  unless the potassco channel is **manually** added by the user.)\n\n  Then you test hexlite:\n\n  ```$ hexlite -h```\n\n* Installation with pip:\n\n  This will download, build, and locally install Python-enabled `clingo` modules.\n\n  * If you do not have it: install `python-pip`: for example under Ubuntu via\n    \n    ```$ sudo apt-get install python-pip```\n\n  * Install hexlite:\n\n    ```$ pip install hexlite --user```\n\n  * Setup Python to use the \"Userinstall\" environment that allows you\n    to install Python programs without overwriting system packages:\n\n    Add the following to your `.profile` or `.bashrc` file:\n\n    ```\n    export PYTHONUSERBASE=~/.local/\n    export PATH=$PATH:~/.local/bin\n    ```\n\n  * Run hexlite the first time. This will help to download and build pyclingo unless it is already usable via `import clingo`:\n\n    ```$ hexlite```\n\n    The first run of hexlite might ask you to enter the sudo password\n    to install several packages.\n    (You can do this manually. Simply abort and later run `hexlite` again.)\n\n  * Ubuntu 16.04 is tested\n  * Debian 8.6 (jessie) is tested\n  * Ubuntu 14.04 can not work without manual installation of cmake 3.1 or higher (for buildling clingo)\n\n* Using the Java API\n\n  Building the JAVA API is not automated, you need to install `Jpype >=0.7.2` and `ant` and `maven` and run\n\n  ```mvn clean compile package install```\n\n  See also `.travis.yml` how to build and install and test the Java plugin.\n\n* Using the Docker image\n\n  There is a Dockerfile that builds a docker image where hexlite and its source code is installed.\n\n  Build the image with\n\n  ```$ ./build-docker-image.sh```\n\n  Run the image and start a shell in the image with\n\n  ```$ ./run-docker-image.sh```\n  \n  In the image, run an example:\n\n  ```\n  # hexlite --pluginpath /opt/hexlite/plugins/ --plugin testplugin -- /opt/hexlite/tests/inputs/extatom2.hex\n  ```\n\n  Should give the following output (it is a set, the order of items does not matter):\n\n  `{prefix(\"test:\"),more(\"a\",\"b\",\"c\"),complete(\"test: a b c\")}`\n\n# Running Hexlite on Examples in the Repository\n\n* If `hexlite` by itself shows the help, you can run it on some examples in the repository.\n\n* Hexlite needs to know where to find plugins and what is the name of the Python modules of these plugins\n\n\t* The path for plugins is given as argument ``--pluginpath <path>``.\n\n\t  This argument can be given multiple times. You can use absolute or relative paths.\n\n\t* The python modules to load are given as argument ``--plugin <module> [<argument1> <argument2>]``.\n\t\n\t  Multiple plugins can be loaded.\n          Each plugin can have arguments.\n\n\t  !ATTENTION!:\n\t  If you specify the HEX input file after ``--plugin <module>``, it becomes the argument of the plugin.\n\t  In this case, you need to\n\t\n\t  * specify the HEX input files _before_ the other arguments\n\t  or\n\t  * indicate end of the argument list with the ``--`` option.\n\n* To run one of the examples in the ``tests/`` directory you can use one of the following methods to call hexlite:\n\n  ```\n  $ hexlite --pluginpath ./plugins/ --plugin testplugin -- tests/inputs/extatom3.hex\n  $ hexlite tests/inputs/extatom3.hex --pluginpath ./plugins/ --plugin testplugin\n  $ hexlite --pluginpath=./plugins/ --plugin=testplugin tests/inputs/extatom3.hex\n  ```\n\n# Developer Readme\n\n* For developing hexlite without uploading to anaconda repository:\n\n  * Install clingo with conda, but but do **not** install hexlite with conda.\n\n    ```$ conda install -c potassco clingo```\n\n  * checkout hexlite with git\n\n    ```$ git clone git@github.com:hexhex/hexlite.git```\n\n  * install `hexlite` in develop mode into your user-defined Python space:\n\n    ```$ python3 setup.py develop --user```\n\n  * If you want to remove this development installation:\n\n    ```\n    $ python3 setup.py develop --uninstall --user\n    $ rm ~/.local/bin/hexlite\n    ```\n\n  (Installed scripts are not automatically uninstalled.)\n\n* For building and uploading a new version to pip and conda (Note: conda requires to upload to pip first)\n  \n  * Update version in `setup.py`.\n\n  * Build pypi source package\n\n    `$ python setup.py sdist`\n\n\t* Verify that dist/ contains the right archives with the right content (no wheels etc.)\n\n\t* Upload to pypi\n\n    `$ twine upload dist/*`\n\n  * Update version in `meta.yaml`.\n\n  * Build for anaconda cloud\n  \n    First, some conda packages need to be installed via `conda install conda-build conda-verify anaconda`.\n\n    `$ conda build .`\n\n    (get upload command from last lines of output)\n\n    If conda is installed on an encrypted /home/ or similar, this will abort with a permission error.\n    You can make it work by creating a new directory on an unencrypted `/tmp/`, for example `/tmp/conda-build`,\n    and run conda build as follows:\n\n    `$ conda build --croot /tmp/conda-build/ .`\n\n  * Verify that archive to upload contains the right content (and no backup files, experimental results, etc...)\n\n    `$ anaconda upload <path-from-conda-build>`\n\n* Roadmap\n\n  - make it deployable via conda and pip\n\n* Jpype\n\n  - we need version 0.7.2 the versions below have a bug that affects us\n  - conda-forge has 0.7.2\n\n    $ conda install -c conda-forge jpype1", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hexhex/hexlite", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "hexlite", "package_url": "https://pypi.org/project/hexlite/", "platform": "", "project_url": "https://pypi.org/project/hexlite/", "project_urls": {"Homepage": "https://github.com/hexhex/hexlite"}, "release_url": "https://pypi.org/project/hexlite/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Hexlite - Solver for a fragment of HEX", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Hexlite - Solver for a fragment of HEX</h1>\n<p>This is a solver for a fragment of the HEX language and for Python-based plugins\nwhich is based on Python interfaces of Clingo and does not contain any C++ code itself.</p>\n<p>The intention is to provide a lightweight system for an easy start with HEX.</p>\n<p>The vision is that HEXLite can use existing Python plugins and runs based on\nthe Clingo python interface, without realizing the full power of HEX.</p>\n<p>The system is currently under development and only works for certain programs:</p>\n<ul>\n<li>External atoms with only constant inputs are evaluated during grounding in Gringo</li>\n<li>External atoms with predicate input(s) and no constant outputs are evaluated during solving in a clasp Propagator</li>\n<li>External atoms with predicate input(s) and constant outputs that have a domain predicate can also be evaluated</li>\n<li>Liberal Safety is not implemented</li>\n<li>Properties of external atoms are not used</li>\n<li>If it has a finite grounding, it will terminate, otherwise, it will not - as usual with Gringo</li>\n<li>FLP Check is implemented explicitly and does not work with strong negation and weak constraints</li>\n<li>FLP Check can be deactivated</li>\n<li>There is a Java Plugin API (see below)</li>\n</ul>\n<p>The system is described in the following publication.</p>\n<p>Peter Sch\u00fcller (2019)\nThe Hexlite Solver.\nIn: Logics in Artificial Intelligence. JELIA 2019. Lecture Notes in Computer Science, vol 11468. Springer, Cham\n<a href=\"https://doi.org/10.1007/978-3-030-19570-0_39\" rel=\"nofollow\">https://doi.org/10.1007/978-3-030-19570-0_39</a></p>\n<p>In case of bugs please report an issue here: <a href=\"https://github.com/hexhex/hexlite/issues\" rel=\"nofollow\">https://github.com/hexhex/hexlite/issues</a></p>\n<ul>\n<li>\n<p>License: MIT</p>\n</li>\n<li>\n<p>Author: Peter Sch\u00fcller <a href=\"mailto:schueller.p@gmail.com\">schueller.p@gmail.com</a></p>\n</li>\n<li>\n<p>Available at PyPi: <a href=\"https://pypi.python.org/pypi/hexlite\" rel=\"nofollow\">https://pypi.python.org/pypi/hexlite</a></p>\n</li>\n<li>\n<p>Installation with Conda:</p>\n<p>The easiest way to install <code>hexlite</code> is Conda.</p>\n<p>First you need to install the <code>clingo</code> dependency:</p>\n<p><code>$ conda install -c potassco clingo</code></p>\n<p>Then you install hexlite:</p>\n<p><code>$ conda install -c peterschueller hexlite</code></p>\n<p>(If you wonder why we do not automatically install clingo as a dependency:\ncertain conda restrictions prevent that <code>clingo</code> is automatically installed\nunless the potassco channel is <strong>manually</strong> added by the user.)</p>\n<p>Then you test hexlite:</p>\n<p><code>$ hexlite -h</code></p>\n</li>\n<li>\n<p>Installation with pip:</p>\n<p>This will download, build, and locally install Python-enabled <code>clingo</code> modules.</p>\n<ul>\n<li>\n<p>If you do not have it: install <code>python-pip</code>: for example under Ubuntu via</p>\n<p><code>$ sudo apt-get install python-pip</code></p>\n</li>\n<li>\n<p>Install hexlite:</p>\n<p><code>$ pip install hexlite --user</code></p>\n</li>\n<li>\n<p>Setup Python to use the \"Userinstall\" environment that allows you\nto install Python programs without overwriting system packages:</p>\n<p>Add the following to your <code>.profile</code> or <code>.bashrc</code> file:</p>\n<pre><code>export PYTHONUSERBASE=~/.local/\nexport PATH=$PATH:~/.local/bin\n</code></pre>\n</li>\n<li>\n<p>Run hexlite the first time. This will help to download and build pyclingo unless it is already usable via <code>import clingo</code>:</p>\n<p><code>$ hexlite</code></p>\n<p>The first run of hexlite might ask you to enter the sudo password\nto install several packages.\n(You can do this manually. Simply abort and later run <code>hexlite</code> again.)</p>\n</li>\n<li>\n<p>Ubuntu 16.04 is tested</p>\n</li>\n<li>\n<p>Debian 8.6 (jessie) is tested</p>\n</li>\n<li>\n<p>Ubuntu 14.04 can not work without manual installation of cmake 3.1 or higher (for buildling clingo)</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Using the Java API</p>\n<p>Building the JAVA API is not automated, you need to install <code>Jpype &gt;=0.7.2</code> and <code>ant</code> and <code>maven</code> and run</p>\n<p><code>mvn clean compile package install</code></p>\n<p>See also <code>.travis.yml</code> how to build and install and test the Java plugin.</p>\n</li>\n<li>\n<p>Using the Docker image</p>\n<p>There is a Dockerfile that builds a docker image where hexlite and its source code is installed.</p>\n<p>Build the image with</p>\n<p><code>$ ./build-docker-image.sh</code></p>\n<p>Run the image and start a shell in the image with</p>\n<p><code>$ ./run-docker-image.sh</code></p>\n<p>In the image, run an example:</p>\n<pre><code># hexlite --pluginpath /opt/hexlite/plugins/ --plugin testplugin -- /opt/hexlite/tests/inputs/extatom2.hex\n</code></pre>\n<p>Should give the following output (it is a set, the order of items does not matter):</p>\n<p><code>{prefix(\"test:\"),more(\"a\",\"b\",\"c\"),complete(\"test: a b c\")}</code></p>\n</li>\n</ul>\n<h1>Running Hexlite on Examples in the Repository</h1>\n<ul>\n<li>\n<p>If <code>hexlite</code> by itself shows the help, you can run it on some examples in the repository.</p>\n</li>\n<li>\n<p>Hexlite needs to know where to find plugins and what is the name of the Python modules of these plugins</p>\n<ul>\n<li>\n<p>The path for plugins is given as argument <code>--pluginpath &lt;path&gt;</code>.</p>\n<p>This argument can be given multiple times. You can use absolute or relative paths.</p>\n</li>\n<li>\n<p>The python modules to load are given as argument <code>--plugin &lt;module&gt; [&lt;argument1&gt; &lt;argument2&gt;]</code>.</p>\n<p>Multiple plugins can be loaded.\nEach plugin can have arguments.</p>\n<p>!ATTENTION!:\nIf you specify the HEX input file after <code>--plugin &lt;module&gt;</code>, it becomes the argument of the plugin.\nIn this case, you need to</p>\n<ul>\n<li>specify the HEX input files <em>before</em> the other arguments\nor</li>\n<li>indicate end of the argument list with the <code>--</code> option.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>To run one of the examples in the <code>tests/</code> directory you can use one of the following methods to call hexlite:</p>\n<pre><code>$ hexlite --pluginpath ./plugins/ --plugin testplugin -- tests/inputs/extatom3.hex\n$ hexlite tests/inputs/extatom3.hex --pluginpath ./plugins/ --plugin testplugin\n$ hexlite --pluginpath=./plugins/ --plugin=testplugin tests/inputs/extatom3.hex\n</code></pre>\n</li>\n</ul>\n<h1>Developer Readme</h1>\n<ul>\n<li>\n<p>For developing hexlite without uploading to anaconda repository:</p>\n<ul>\n<li>\n<p>Install clingo with conda, but but do <strong>not</strong> install hexlite with conda.</p>\n<p><code>$ conda install -c potassco clingo</code></p>\n</li>\n<li>\n<p>checkout hexlite with git</p>\n<p><code>$ git clone git@github.com:hexhex/hexlite.git</code></p>\n</li>\n<li>\n<p>install <code>hexlite</code> in develop mode into your user-defined Python space:</p>\n<p><code>$ python3 setup.py develop --user</code></p>\n</li>\n<li>\n<p>If you want to remove this development installation:</p>\n<pre><code>$ python3 setup.py develop --uninstall --user\n$ rm ~/.local/bin/hexlite\n</code></pre>\n</li>\n</ul>\n<p>(Installed scripts are not automatically uninstalled.)</p>\n</li>\n<li>\n<p>For building and uploading a new version to pip and conda (Note: conda requires to upload to pip first)</p>\n<ul>\n<li>\n<p>Update version in <code>setup.py</code>.</p>\n</li>\n<li>\n<p>Build pypi source package</p>\n<p><code>$ python setup.py sdist</code></p>\n<ul>\n<li>\n<p>Verify that dist/ contains the right archives with the right content (no wheels etc.)</p>\n</li>\n<li>\n<p>Upload to pypi</p>\n</li>\n</ul>\n<p><code>$ twine upload dist/*</code></p>\n</li>\n<li>\n<p>Update version in <code>meta.yaml</code>.</p>\n</li>\n<li>\n<p>Build for anaconda cloud</p>\n<p>First, some conda packages need to be installed via <code>conda install conda-build conda-verify anaconda</code>.</p>\n<p><code>$ conda build .</code></p>\n<p>(get upload command from last lines of output)</p>\n<p>If conda is installed on an encrypted /home/ or similar, this will abort with a permission error.\nYou can make it work by creating a new directory on an unencrypted <code>/tmp/</code>, for example <code>/tmp/conda-build</code>,\nand run conda build as follows:</p>\n<p><code>$ conda build --croot /tmp/conda-build/ .</code></p>\n</li>\n<li>\n<p>Verify that archive to upload contains the right content (and no backup files, experimental results, etc...)</p>\n<p><code>$ anaconda upload &lt;path-from-conda-build&gt;</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p>Roadmap</p>\n<ul>\n<li>make it deployable via conda and pip</li>\n</ul>\n</li>\n<li>\n<p>Jpype</p>\n<ul>\n<li>\n<p>we need version 0.7.2 the versions below have a bug that affects us</p>\n</li>\n<li>\n<p>conda-forge has 0.7.2</p>\n<p>$ conda install -c conda-forge jpype1</p>\n</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 7058822, "releases": {"0.1": [], "0.2": [], "0.3": [{"comment_text": "", "digests": {"md5": "94d0e0403afc22011f4e496ea746d3bc", "sha256": "afbf610c34eb7ac2fa39691e940b97f32040dfa2d0d3c75bfecabf4d536d273d"}, "downloads": -1, "filename": "hexlite-0.3.tar.gz", "has_sig": false, "md5_digest": "94d0e0403afc22011f4e496ea746d3bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21468, "upload_time": "2017-05-31T19:35:39", "upload_time_iso_8601": "2017-05-31T19:35:39.148318Z", "url": "https://files.pythonhosted.org/packages/1f/9b/5881ea3e9c1e34c1b76781f189dbc372d892754530df7ab59970d96066f9/hexlite-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "76652ff8bdcb083bf958ef7aeb44a00c", "sha256": "7e42927c7d3fd35e3ab57361991b9f07b4c31fe060a1cff17925bfcb01fb095f"}, "downloads": -1, "filename": "hexlite-0.3.1.tar.gz", "has_sig": false, "md5_digest": "76652ff8bdcb083bf958ef7aeb44a00c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21460, "upload_time": "2017-05-31T19:39:19", "upload_time_iso_8601": "2017-05-31T19:39:19.376491Z", "url": "https://files.pythonhosted.org/packages/74/cc/19efd9d32fbc302f295c86dca2056713d3e2c017fbc230b658dc8960bb87/hexlite-0.3.1.tar.gz", "yanked": false}], "0.3.10": [{"comment_text": "", "digests": {"md5": "b065b70e4b5ebff33e371e9e8b1608c3", "sha256": "eed54a2348d07f7debc35f6b2f0c239609bca7e85ed052f44297640458a139ec"}, "downloads": -1, "filename": "hexlite-0.3.10.tar.gz", "has_sig": false, "md5_digest": "b065b70e4b5ebff33e371e9e8b1608c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33947, "upload_time": "2017-06-01T07:07:13", "upload_time_iso_8601": "2017-06-01T07:07:13.045779Z", "url": "https://files.pythonhosted.org/packages/51/97/50dc0f402d93b7994d7c8b073aec0968a2bc25aca9ee240de941636191b6/hexlite-0.3.10.tar.gz", "yanked": false}], "0.3.11": [{"comment_text": "", "digests": {"md5": "0c6ca63c1b87d001c17dc693c5cbd003", "sha256": "07d24ea4ae1ef7f07c2e6b3d797371dd2a67c94ada633b715fc043b0fbbb8b84"}, "downloads": -1, "filename": "hexlite-0.3.11.tar.gz", "has_sig": false, "md5_digest": "0c6ca63c1b87d001c17dc693c5cbd003", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34074, "upload_time": "2017-06-01T07:13:14", "upload_time_iso_8601": "2017-06-01T07:13:14.286470Z", "url": "https://files.pythonhosted.org/packages/f1/bc/07130a3f46ac9e6eb8efe0b56d46c3fe2fcedfd398b79bf63500d4797275/hexlite-0.3.11.tar.gz", "yanked": false}], "0.3.12": [{"comment_text": "", "digests": {"md5": "d1af4f67f6835dbe8819a686e28946cb", "sha256": "1e1d89ce20e28313969f34f927ba80d120027c1d5f8af47df9254551864ae92b"}, "downloads": -1, "filename": "hexlite-0.3.12.tar.gz", "has_sig": false, "md5_digest": "d1af4f67f6835dbe8819a686e28946cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35074, "upload_time": "2017-06-02T04:40:13", "upload_time_iso_8601": "2017-06-02T04:40:13.445162Z", "url": "https://files.pythonhosted.org/packages/22/86/a95a9f844e353e4011ccec8ef644e525eb7d7ed569763fecebdc2db74a0f/hexlite-0.3.12.tar.gz", "yanked": false}], "0.3.13": [{"comment_text": "", "digests": {"md5": "d58eb43378b322e5491a263dfd10441a", "sha256": "3a763f11b61fa78e0fde26f22160b8b0134065f43e68f9e23917364e519bed60"}, "downloads": -1, "filename": "hexlite-0.3.13.tar.gz", "has_sig": false, "md5_digest": "d58eb43378b322e5491a263dfd10441a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33137, "upload_time": "2017-06-02T05:35:14", "upload_time_iso_8601": "2017-06-02T05:35:14.790029Z", "url": "https://files.pythonhosted.org/packages/0a/fd/b92fb08d32b072596c72f1d55ac790b83f0764cd9c73d083e9bacd5883ea/hexlite-0.3.13.tar.gz", "yanked": false}], "0.3.14": [{"comment_text": "", "digests": {"md5": "3351f29fb06fa811eeaaa8be0144ec64", "sha256": "aa155698c67565ceed5a9e02d5ce9b91926a5861dd139319e2d2907d1bc2f54a"}, "downloads": -1, "filename": "hexlite-0.3.14.tar.gz", "has_sig": false, "md5_digest": "3351f29fb06fa811eeaaa8be0144ec64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39531, "upload_time": "2017-06-08T20:18:17", "upload_time_iso_8601": "2017-06-08T20:18:17.691170Z", "url": "https://files.pythonhosted.org/packages/ea/c6/b7d31fecb2f4f247e4871493663a2ee19d347f9a7ea7fa6c3b3b57474e63/hexlite-0.3.14.tar.gz", "yanked": false}], "0.3.15": [{"comment_text": "", "digests": {"md5": "d639b67c46b749c9c4c3a7f36fa53f02", "sha256": "1af27933b997b866e581cddb310dbaf253b04d90cc83e987ccf4035d8dcea265"}, "downloads": -1, "filename": "hexlite-0.3.15.tar.gz", "has_sig": false, "md5_digest": "d639b67c46b749c9c4c3a7f36fa53f02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40338, "upload_time": "2017-06-08T20:29:35", "upload_time_iso_8601": "2017-06-08T20:29:35.127073Z", "url": "https://files.pythonhosted.org/packages/13/40/1c656e5091d8c19a92ace22413abc38753bc40bd5d755b00cb24b8687509/hexlite-0.3.15.tar.gz", "yanked": false}], "0.3.16": [{"comment_text": "", "digests": {"md5": "8d2e9b6a37280f226647b1e6d9fa615e", "sha256": "2c20eb430626b3fbc9b165a5c74adb2db039bdb3cf4ad1d3ce49c15c5921b32d"}, "downloads": -1, "filename": "hexlite-0.3.16.tar.gz", "has_sig": false, "md5_digest": "8d2e9b6a37280f226647b1e6d9fa615e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44104, "upload_time": "2017-06-15T12:29:50", "upload_time_iso_8601": "2017-06-15T12:29:50.307332Z", "url": "https://files.pythonhosted.org/packages/b3/bf/77e194fac4283fca3fee30da1bb99036c15fc9e64e85fc69ce33f649dfcf/hexlite-0.3.16.tar.gz", "yanked": false}], "0.3.17": [{"comment_text": "", "digests": {"md5": "a007dd2f083fcbb93b2c899d525fcdc0", "sha256": "4415d162d3c06aa41925c70bd0f8ede7745fe7e892a587781473c5ccb2059ac6"}, "downloads": -1, "filename": "hexlite-0.3.17.tar.gz", "has_sig": false, "md5_digest": "a007dd2f083fcbb93b2c899d525fcdc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44126, "upload_time": "2017-06-15T13:04:42", "upload_time_iso_8601": "2017-06-15T13:04:42.615030Z", "url": "https://files.pythonhosted.org/packages/81/db/f879974587fbdfb2ec5634645d9d746eaae8174756ca40335a712bbfbc7c/hexlite-0.3.17.tar.gz", "yanked": false}], "0.3.18": [{"comment_text": "", "digests": {"md5": "63aac5b6ab973c0b088334be691f6f85", "sha256": "4592617d0010ced9ebdc29084f637328eb49f2212ffa06040eedb42c42389455"}, "downloads": -1, "filename": "hexlite-0.3.18.tar.gz", "has_sig": false, "md5_digest": "63aac5b6ab973c0b088334be691f6f85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44122, "upload_time": "2017-06-15T13:07:38", "upload_time_iso_8601": "2017-06-15T13:07:38.976364Z", "url": "https://files.pythonhosted.org/packages/e2/81/d8bab77738ee884a0811bc4e82f41db5dd2e0c368065791795e689ad84ad/hexlite-0.3.18.tar.gz", "yanked": false}], "0.3.19": [{"comment_text": "", "digests": {"md5": "2612d41a2688ff6a792720c5ba869bea", "sha256": "8708d7bf0c5cf44ef679af5b8d86fa4cca8d7ceba3616f96bbb7605678d167c1"}, "downloads": -1, "filename": "hexlite-0.3.19.tar.gz", "has_sig": false, "md5_digest": "2612d41a2688ff6a792720c5ba869bea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43951, "upload_time": "2017-06-23T20:43:12", "upload_time_iso_8601": "2017-06-23T20:43:12.239459Z", "url": "https://files.pythonhosted.org/packages/f1/2b/a54e6b4f37fd46a308c67dd9b6fef40c4c3cb5d59692d77f4998cad48983/hexlite-0.3.19.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "afd8bb20ba1c60d13e1dfcf9db527ff0", "sha256": "e9a2b7dfdc41a224fa7c5879cba17aebb5f1fceede6e14094277ae0eabd04d29"}, "downloads": -1, "filename": "hexlite-0.3.2.tar.gz", "has_sig": false, "md5_digest": "afd8bb20ba1c60d13e1dfcf9db527ff0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21752, "upload_time": "2017-05-31T19:46:44", "upload_time_iso_8601": "2017-05-31T19:46:44.650103Z", "url": "https://files.pythonhosted.org/packages/cd/9e/1f854c7a2ddb12fe8a8603e490321337e1ad088b1535272a8fe3fa661a83/hexlite-0.3.2.tar.gz", "yanked": false}], "0.3.20": [{"comment_text": "", "digests": {"md5": "83044d32482036551e42956b05059df3", "sha256": "e7ae1f17ac0adc62c53cfaed86da84e56d08549b9bc181ed7c88abee9fd0a52b"}, "downloads": -1, "filename": "hexlite-0.3.20.tar.gz", "has_sig": false, "md5_digest": "83044d32482036551e42956b05059df3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44891, "upload_time": "2017-07-01T20:49:22", "upload_time_iso_8601": "2017-07-01T20:49:22.127845Z", "url": "https://files.pythonhosted.org/packages/c9/2e/fa1009b9afb61351f70accff263f9e6ee3398b52ed356182cd01253a91f5/hexlite-0.3.20.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "ecfd6cf84459aed66d9e09fbabee2a41", "sha256": "ecccf1aa54a6967f8f48911bcf638c6c9b2ec3e55cee43cba501def84560f23b"}, "downloads": -1, "filename": "hexlite-0.3.3.tar.gz", "has_sig": false, "md5_digest": "ecfd6cf84459aed66d9e09fbabee2a41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33040, "upload_time": "2017-05-31T19:53:04", "upload_time_iso_8601": "2017-05-31T19:53:04.290170Z", "url": "https://files.pythonhosted.org/packages/fd/17/01f9eb2c4237fd2aca7182c3dfcaa11249087826a68c43505478e819cbf5/hexlite-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "d7f986adc83f5245193c90c1d891bc8b", "sha256": "a1000733b8b2f253d0c1f8d587f783687b6999514be2df234d9a64c5fd5a3fd6"}, "downloads": -1, "filename": "hexlite-0.3.4.tar.gz", "has_sig": false, "md5_digest": "d7f986adc83f5245193c90c1d891bc8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33312, "upload_time": "2017-05-31T20:03:29", "upload_time_iso_8601": "2017-05-31T20:03:29.545830Z", "url": "https://files.pythonhosted.org/packages/23/14/f48830851e9f84702e006bcf5dc8e7df89a901d68f2374361a6b345d213a/hexlite-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "efb73f0e59788cd9bf7839c057cabaf5", "sha256": "46667b0005e26307daf1020527a11cca48e0e5da7014748fc8c9d5036074d79e"}, "downloads": -1, "filename": "hexlite-0.3.5.tar.gz", "has_sig": false, "md5_digest": "efb73f0e59788cd9bf7839c057cabaf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34944, "upload_time": "2017-05-31T21:13:32", "upload_time_iso_8601": "2017-05-31T21:13:32.159802Z", "url": "https://files.pythonhosted.org/packages/24/e6/302cdbf4aa54673803451aa5952682543fa33b0ecb59b08fb0fde91dee69/hexlite-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "e6bcf815420490b74843a5ea3f3bd91b", "sha256": "aeb16b757651d3ef420977a0d49c5f17c183fec96783999a2947183a1ac5c4e8"}, "downloads": -1, "filename": "hexlite-0.3.6.tar.gz", "has_sig": false, "md5_digest": "e6bcf815420490b74843a5ea3f3bd91b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33588, "upload_time": "2017-06-01T05:58:11", "upload_time_iso_8601": "2017-06-01T05:58:11.885167Z", "url": "https://files.pythonhosted.org/packages/76/b7/f4ea87d6c7011c88e4e1f597bf68f652223a9ba596e91c3e2523837a36f8/hexlite-0.3.6.tar.gz", "yanked": false}], "0.3.7": [{"comment_text": "", "digests": {"md5": "9cb6523f37813240fbc560263ec2e956", "sha256": "f90bfd134dd0a52a297da6c51e5d39ff829f5c100483abe599dbeccc74f06111"}, "downloads": -1, "filename": "hexlite-0.3.7.tar.gz", "has_sig": false, "md5_digest": "9cb6523f37813240fbc560263ec2e956", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33898, "upload_time": "2017-06-01T06:34:37", "upload_time_iso_8601": "2017-06-01T06:34:37.882499Z", "url": "https://files.pythonhosted.org/packages/5f/80/9680376d26c0df47e543543435feb92315b0908eb20eb95786633e134b63/hexlite-0.3.7.tar.gz", "yanked": false}], "0.3.8": [{"comment_text": "", "digests": {"md5": "c9f401f3b6baecb02d1ad9ff7b691c75", "sha256": "4738303d6c64711aca97b1f4e7b3379109d4232340f3d5dc8eba8b8b2a6f43b7"}, "downloads": -1, "filename": "hexlite-0.3.8.tar.gz", "has_sig": false, "md5_digest": "c9f401f3b6baecb02d1ad9ff7b691c75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33909, "upload_time": "2017-06-01T06:45:51", "upload_time_iso_8601": "2017-06-01T06:45:51.011786Z", "url": "https://files.pythonhosted.org/packages/c8/e6/58d30f98f8018ad56646e22ebb1802545d12943cc47ffd176cebe5ab3fc6/hexlite-0.3.8.tar.gz", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "2855e2aa079526263b2d91c3e2e55d1a", "sha256": "7c890b35d86f4e3a5faabf2414eabc19bf856b3b1525638cf8e39ec574708507"}, "downloads": -1, "filename": "hexlite-0.3.9.tar.gz", "has_sig": false, "md5_digest": "2855e2aa079526263b2d91c3e2e55d1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33906, "upload_time": "2017-06-01T07:00:45", "upload_time_iso_8601": "2017-06-01T07:00:45.083492Z", "url": "https://files.pythonhosted.org/packages/c5/6c/f331beec92c679735524307ca020ea968e6fda679f777bd1edae6004025f/hexlite-0.3.9.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "02d0052a5793ac8a2ccd3a35e92506db", "sha256": "5a85ef26cbe4749a098a5ab6f24ed1e2ff58301c9b1c4071881d06a85fa0fd26"}, "downloads": -1, "filename": "hexlite-1.0.0.tar.gz", "has_sig": false, "md5_digest": "02d0052a5793ac8a2ccd3a35e92506db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56022, "upload_time": "2018-10-24T12:41:54", "upload_time_iso_8601": "2018-10-24T12:41:54.203067Z", "url": "https://files.pythonhosted.org/packages/4b/6e/9d0f4e1b50342808e45765b2abb526b7c8f6c9b5dab709e9b35f6279fbaa/hexlite-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "b71ca53349cd579faac8f9505863f127", "sha256": "d5d7a3bfad137671e9fcb52c24da76951206b73bffdb8b26079be750473b1d0b"}, "downloads": -1, "filename": "hexlite-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b71ca53349cd579faac8f9505863f127", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61394, "upload_time": "2019-05-08T07:12:05", "upload_time_iso_8601": "2019-05-08T07:12:05.485035Z", "url": "https://files.pythonhosted.org/packages/12/47/7ba7f44d74317ff94a758b4b455a44deefcb25313e04792367c4c574e6b0/hexlite-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "4bd6edc1af25749fc76b39436325e736", "sha256": "e05f33699b76f499df2165b6907f576f7daa570800db5a9419d60a71ebbb356a"}, "downloads": -1, "filename": "hexlite-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4bd6edc1af25749fc76b39436325e736", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55210, "upload_time": "2020-04-20T09:41:47", "upload_time_iso_8601": "2020-04-20T09:41:47.113629Z", "url": "https://files.pythonhosted.org/packages/aa/e0/07baa8c10d6be94a6492902f715f68e3e191461cf1dce343aca157ea4846/hexlite-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4bd6edc1af25749fc76b39436325e736", "sha256": "e05f33699b76f499df2165b6907f576f7daa570800db5a9419d60a71ebbb356a"}, "downloads": -1, "filename": "hexlite-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4bd6edc1af25749fc76b39436325e736", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55210, "upload_time": "2020-04-20T09:41:47", "upload_time_iso_8601": "2020-04-20T09:41:47.113629Z", "url": "https://files.pythonhosted.org/packages/aa/e0/07baa8c10d6be94a6492902f715f68e3e191461cf1dce343aca157ea4846/hexlite-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:27 2020"}