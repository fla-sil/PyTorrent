{"info": {"author": "Keith Ma", "author_email": "itsallnans@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License"], "description": "# Intentionally Insulting Exceptions for Python\n\n[![CircleCI](https://circleci.com/gh/keithfma/insult_error.svg?style=shield)](https://circleci.com/gh/keithfma/insult_error) \n\nThis package provides a set of insulting exceptions you can use to make your\nfuture self laugh, bother your collaborators, or both.\n\nThe core feature is the `InsultError` exception class, which behaves just like\na normal exception with a few differences:\n1. The raised error is a given a randomly-selected insulting name\n2. If no message is provided, the error will use a random insulting message\n3. A special keyword argument `rating` provides some control over how offensive\n   you want the error and message to be (1 being tamest and 10 being meanest)\n\nTo start the abuse, you can either explicitly raise `InsultError`s in your code,\nor you can call `always_insult_me` to convert all unhandled exceptions to insults.\nThis works by wrapping `sys.excepthook` such that the error is changed, but your\n+stack trace is not.\n\nPlease contribute! This package will be much more fun if not limited to the\nmeasly initial set of options. Obviously, racist, sexist, or other bullshit\njokes are not welcome.\n\n### `InsultError` Example Usage\n\n```python\nfrom insult_error import InsultError\n\n# raise a random insult with a random message (defaults to rating=5)\nraise InsultError\n# >>> NotThisAgain: Don't believe everything you think.\n\n# raise a random insult with a user-specified message\nraise InsultError('This is my message')\n# >>> NotThisAgain: This is my message\n\n# raise a random insult with <= 2 rating\nraise InsultError(rating=2)\n# >>> ForGodsSake: I don\u2019t have the time or the crayons to explain this to you.\n\n# raise a random insult with <= 6 rating\nraise InsultError(rating=6)\n# >>> FuckYouBuddy: I envy people who have never met you.\n\n# handle InsultError exceptions (just like normal, non-insulting errors)\ntry:\n    raise InsultError\nexcept InsultError:\n    print('Better luck next time!')\n# >>> Better luck next time!\n```\n\n### `always_insult_me` Example Usage\n\n```python\nfrom insult_error import always_insult_me, dont_always_insult_me\n\n# turn on ubiquitous insults, uncaught exceptions will be converted to InsultErrors and messages replaced too\nalways_insult_me()\nraise ValueError('a normal message')\n# >>>\n# Traceback (most recent call last):\n#   File \"<stdin>\", line 1, in <module>\n# FuckYouBuddy: I don't have the time or the crayons to explain this to you\n\n# turn off insults, things go back to normal\ndont_always_insult_me()  \nraise ValueError('another normal message')\n# >>>\n# Traceback (most recent call last):\n#   File \"<stdin>\", line 1, in <module>\n# ValueError: another normal message\n\n# turn insults back on, but this time preserve error messages\nalways_insult_me(preserve_msg=True)\nraise ValueError('a normal message')\n# >>>\n# Traceback (most recent call last):\n#   File \"<stdin>\", line 1, in <module>\n# FuckYouBuddy: a normal message\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/keithfma/insult_error", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "insult-error", "package_url": "https://pypi.org/project/insult-error/", "platform": "", "project_url": "https://pypi.org/project/insult-error/", "project_urls": {"Homepage": "https://github.com/keithfma/insult_error"}, "release_url": "https://pypi.org/project/insult-error/0.3.1/", "requires_dist": null, "requires_python": "", "summary": "Intentionally insulting exceptions", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Intentionally Insulting Exceptions for Python</h1>\n<p><a href=\"https://circleci.com/gh/keithfma/insult_error\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4806a949c6a2860589dbd70266eed6dc9dc0c886/68747470733a2f2f636972636c6563692e636f6d2f67682f6b65697468666d612f696e73756c745f6572726f722e7376673f7374796c653d736869656c64\"></a></p>\n<p>This package provides a set of insulting exceptions you can use to make your\nfuture self laugh, bother your collaborators, or both.</p>\n<p>The core feature is the <code>InsultError</code> exception class, which behaves just like\na normal exception with a few differences:</p>\n<ol>\n<li>The raised error is a given a randomly-selected insulting name</li>\n<li>If no message is provided, the error will use a random insulting message</li>\n<li>A special keyword argument <code>rating</code> provides some control over how offensive\nyou want the error and message to be (1 being tamest and 10 being meanest)</li>\n</ol>\n<p>To start the abuse, you can either explicitly raise <code>InsultError</code>s in your code,\nor you can call <code>always_insult_me</code> to convert all unhandled exceptions to insults.\nThis works by wrapping <code>sys.excepthook</code> such that the error is changed, but your\n+stack trace is not.</p>\n<p>Please contribute! This package will be much more fun if not limited to the\nmeasly initial set of options. Obviously, racist, sexist, or other bullshit\njokes are not welcome.</p>\n<h3><code>InsultError</code> Example Usage</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">insult_error</span> <span class=\"kn\">import</span> <span class=\"n\">InsultError</span>\n\n<span class=\"c1\"># raise a random insult with a random message (defaults to rating=5)</span>\n<span class=\"k\">raise</span> <span class=\"n\">InsultError</span>\n<span class=\"c1\"># &gt;&gt;&gt; NotThisAgain: Don't believe everything you think.</span>\n\n<span class=\"c1\"># raise a random insult with a user-specified message</span>\n<span class=\"k\">raise</span> <span class=\"n\">InsultError</span><span class=\"p\">(</span><span class=\"s1\">'This is my message'</span><span class=\"p\">)</span>\n<span class=\"c1\"># &gt;&gt;&gt; NotThisAgain: This is my message</span>\n\n<span class=\"c1\"># raise a random insult with &lt;= 2 rating</span>\n<span class=\"k\">raise</span> <span class=\"n\">InsultError</span><span class=\"p\">(</span><span class=\"n\">rating</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"c1\"># &gt;&gt;&gt; ForGodsSake: I don\u2019t have the time or the crayons to explain this to you.</span>\n\n<span class=\"c1\"># raise a random insult with &lt;= 6 rating</span>\n<span class=\"k\">raise</span> <span class=\"n\">InsultError</span><span class=\"p\">(</span><span class=\"n\">rating</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"c1\"># &gt;&gt;&gt; FuckYouBuddy: I envy people who have never met you.</span>\n\n<span class=\"c1\"># handle InsultError exceptions (just like normal, non-insulting errors)</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"n\">InsultError</span>\n<span class=\"k\">except</span> <span class=\"n\">InsultError</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Better luck next time!'</span><span class=\"p\">)</span>\n<span class=\"c1\"># &gt;&gt;&gt; Better luck next time!</span>\n</pre>\n<h3><code>always_insult_me</code> Example Usage</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">insult_error</span> <span class=\"kn\">import</span> <span class=\"n\">always_insult_me</span><span class=\"p\">,</span> <span class=\"n\">dont_always_insult_me</span>\n\n<span class=\"c1\"># turn on ubiquitous insults, uncaught exceptions will be converted to InsultErrors and messages replaced too</span>\n<span class=\"n\">always_insult_me</span><span class=\"p\">()</span>\n<span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">'a normal message'</span><span class=\"p\">)</span>\n<span class=\"c1\"># &gt;&gt;&gt;</span>\n<span class=\"c1\"># Traceback (most recent call last):</span>\n<span class=\"c1\">#   File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;</span>\n<span class=\"c1\"># FuckYouBuddy: I don't have the time or the crayons to explain this to you</span>\n\n<span class=\"c1\"># turn off insults, things go back to normal</span>\n<span class=\"n\">dont_always_insult_me</span><span class=\"p\">()</span>  \n<span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">'another normal message'</span><span class=\"p\">)</span>\n<span class=\"c1\"># &gt;&gt;&gt;</span>\n<span class=\"c1\"># Traceback (most recent call last):</span>\n<span class=\"c1\">#   File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;</span>\n<span class=\"c1\"># ValueError: another normal message</span>\n\n<span class=\"c1\"># turn insults back on, but this time preserve error messages</span>\n<span class=\"n\">always_insult_me</span><span class=\"p\">(</span><span class=\"n\">preserve_msg</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">'a normal message'</span><span class=\"p\">)</span>\n<span class=\"c1\"># &gt;&gt;&gt;</span>\n<span class=\"c1\"># Traceback (most recent call last):</span>\n<span class=\"c1\">#   File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;</span>\n<span class=\"c1\"># FuckYouBuddy: a normal message</span>\n</pre>\n\n          </div>"}, "last_serial": 7046909, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2b9f1947d109bfe274cc254718c995cb", "sha256": "a65c0cb2dddd63ef01c906c2a92baecf0a5e6acb1210afd74f744aea8b24a5f8"}, "downloads": -1, "filename": "insult_error-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2b9f1947d109bfe274cc254718c995cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3657, "upload_time": "2018-10-26T05:17:31", "upload_time_iso_8601": "2018-10-26T05:17:31.462118Z", "url": "https://files.pythonhosted.org/packages/8d/3a/0934493682715948415cd2cbb54af0a55dd7602af0fad4d4b60508bc1831/insult_error-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9db61d0229d584a14ac7a607a0049466", "sha256": "ff025a00bac01ebedfd3ff346e2ed47c5dbf26e41417087e9d419830466db195"}, "downloads": -1, "filename": "insult_error-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9db61d0229d584a14ac7a607a0049466", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2580, "upload_time": "2018-10-26T05:17:32", "upload_time_iso_8601": "2018-10-26T05:17:32.792879Z", "url": "https://files.pythonhosted.org/packages/30/2c/b24e58af2bd276ec227f705c11ca70ea68cb9157432c29466bd1c78a9ff0/insult_error-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "19db3fda51ba08755d5bc94a288d8090", "sha256": "c5eb6b418bbd315aa812405720efece6abdf8db5a8fa3514b805704501d53eb7"}, "downloads": -1, "filename": "insult_error-0.1.2.tar.gz", "has_sig": false, "md5_digest": "19db3fda51ba08755d5bc94a288d8090", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2977, "upload_time": "2018-11-05T23:35:15", "upload_time_iso_8601": "2018-11-05T23:35:15.854696Z", "url": "https://files.pythonhosted.org/packages/d1/f7/12ffb0df48cc0fd6d29c78f4929dd5020c1bc000dc0bbb294dde91b6e9ea/insult_error-0.1.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "b958e36655a29e3d6cb00319682178a4", "sha256": "3c2d409f9508c8c807c57ccbb97169a0684ba097b865cf91227b08322e360fff"}, "downloads": -1, "filename": "insult_error-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b958e36655a29e3d6cb00319682178a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2996, "upload_time": "2018-11-09T01:43:58", "upload_time_iso_8601": "2018-11-09T01:43:58.179677Z", "url": "https://files.pythonhosted.org/packages/53/c6/8f84aee7845f381957bd84fa2df92e55b15d318b8c4cab710f48e614aa97/insult_error-0.2.1.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "47ff472ec6df61e066e8f58dc92cb1ac", "sha256": "3f3f3ee70a7cfbb97f5509e80af3ac39d277ac8c5fb50115f3a60a5d170a2e53"}, "downloads": -1, "filename": "insult_error-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "47ff472ec6df61e066e8f58dc92cb1ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5282, "upload_time": "2020-04-18T10:35:51", "upload_time_iso_8601": "2020-04-18T10:35:51.683888Z", "url": "https://files.pythonhosted.org/packages/03/b7/61b63361f24b0b1758ca3c9ae7d6693fe1d8e2b93f3b8db7e3ddd4e55fc5/insult_error-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0830523058c8ce9bd9ce67b9f2ff7fd8", "sha256": "47bce17c9f16ebaa4c209b44ceac6d857e4a05d58607125dd0bb53e7337f9af5"}, "downloads": -1, "filename": "insult_error-0.3.1.tar.gz", "has_sig": false, "md5_digest": "0830523058c8ce9bd9ce67b9f2ff7fd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4180, "upload_time": "2020-04-18T10:35:52", "upload_time_iso_8601": "2020-04-18T10:35:52.542455Z", "url": "https://files.pythonhosted.org/packages/22/01/7ee67b6fdd5c15e3e45aba3a49c2daa09ca56de06697e7bd546536fac96c/insult_error-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "47ff472ec6df61e066e8f58dc92cb1ac", "sha256": "3f3f3ee70a7cfbb97f5509e80af3ac39d277ac8c5fb50115f3a60a5d170a2e53"}, "downloads": -1, "filename": "insult_error-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "47ff472ec6df61e066e8f58dc92cb1ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5282, "upload_time": "2020-04-18T10:35:51", "upload_time_iso_8601": "2020-04-18T10:35:51.683888Z", "url": "https://files.pythonhosted.org/packages/03/b7/61b63361f24b0b1758ca3c9ae7d6693fe1d8e2b93f3b8db7e3ddd4e55fc5/insult_error-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0830523058c8ce9bd9ce67b9f2ff7fd8", "sha256": "47bce17c9f16ebaa4c209b44ceac6d857e4a05d58607125dd0bb53e7337f9af5"}, "downloads": -1, "filename": "insult_error-0.3.1.tar.gz", "has_sig": false, "md5_digest": "0830523058c8ce9bd9ce67b9f2ff7fd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4180, "upload_time": "2020-04-18T10:35:52", "upload_time_iso_8601": "2020-04-18T10:35:52.542455Z", "url": "https://files.pythonhosted.org/packages/22/01/7ee67b6fdd5c15e3e45aba3a49c2daa09ca56de06697e7bd546536fac96c/insult_error-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:35 2020"}