{"info": {"author": "Steven Troxler", "author_email": "steven.troxler@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7"], "description": "Monitor Memory\n==============\n\nThis package creates a command-line utility that will run a command\nand also run a daemon monitoring memory use as the command runs. The\ndaemon uses the `ps` command to check memory use, so this will only\nwork on `UNIX`-like systems.\n\nI've found this functionality to be particularly useful in batch\nprocessing jobs that run in docker containers, because the output\nof `ps aux` isolates only processes running in-container. So by\nrecording max memory use, you can track how large of containers you\nneed.\n\n\nUsage::\n  pip install monitor_memory\n  monitor_memory <some command>\n\nAll arguments after the command are forwarded to the command, as is standard\ninput. So, for example, to run an arbitrary bash script you can use a\nhere-document::\n  monitor_memory bash << \\EOF_\n  NAME=\"me\"\n  echo ${NAME}\n  EOF_", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stroxler/monitor_memory", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "monitor-memory", "package_url": "https://pypi.org/project/monitor-memory/", "platform": "", "project_url": "https://pypi.org/project/monitor-memory/", "project_urls": {"Homepage": "https://github.com/stroxler/monitor_memory"}, "release_url": "https://pypi.org/project/monitor-memory/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Tools for working with container types, command data operations, and concise exception handling", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            Monitor Memory<br>==============<br><br>This package creates a command-line utility that will run a command<br>and also run a daemon monitoring memory use as the command runs. The<br>daemon uses the `ps` command to check memory use, so this will only<br>work on `UNIX`-like systems.<br><br>I've found this functionality to be particularly useful in batch<br>processing jobs that run in docker containers, because the output<br>of `ps aux` isolates only processes running in-container. So by<br>recording max memory use, you can track how large of containers you<br>need.<br><br><br>Usage::<br>  pip install monitor_memory<br>  monitor_memory &lt;some command&gt;<br><br>All arguments after the command are forwarded to the command, as is standard<br>input. So, for example, to run an arbitrary bash script you can use a<br>here-document::<br>  monitor_memory bash &lt;&lt; \\EOF_<br>  NAME=\"me\"<br>  echo ${NAME}<br>  EOF_\n          </div>"}, "last_serial": 3391884, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ce6fd1436994cedb41d880c8773ae2d2", "sha256": "7a29678721056e21645415450bf8afdb29b0411670b769c1af97eeb1cd56e8a5"}, "downloads": -1, "filename": "monitor_memory-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ce6fd1436994cedb41d880c8773ae2d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4373, "upload_time": "2016-10-27T16:46:26", "upload_time_iso_8601": "2016-10-27T16:46:26.848157Z", "url": "https://files.pythonhosted.org/packages/27/fa/9c2d49bc0a88b7e325ee86ad680519fe1f82a364d8575f83d06ad0ba286a/monitor_memory-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "758fea883b46b817dbb08e7b7415bb28", "sha256": "fa26e7f155a3f42e302241ed8c0ecc0f66e541ac0c86d8171f99fe4161463ded"}, "downloads": -1, "filename": "monitor_memory-0.0.2.tar.gz", "has_sig": false, "md5_digest": "758fea883b46b817dbb08e7b7415bb28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4374, "upload_time": "2017-12-05T21:33:20", "upload_time_iso_8601": "2017-12-05T21:33:20.192971Z", "url": "https://files.pythonhosted.org/packages/9c/71/b98089381dfbf1fbada76f66b75579c78ba700c60a0f820b6313e1fcc18f/monitor_memory-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "758fea883b46b817dbb08e7b7415bb28", "sha256": "fa26e7f155a3f42e302241ed8c0ecc0f66e541ac0c86d8171f99fe4161463ded"}, "downloads": -1, "filename": "monitor_memory-0.0.2.tar.gz", "has_sig": false, "md5_digest": "758fea883b46b817dbb08e7b7415bb28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4374, "upload_time": "2017-12-05T21:33:20", "upload_time_iso_8601": "2017-12-05T21:33:20.192971Z", "url": "https://files.pythonhosted.org/packages/9c/71/b98089381dfbf1fbada76f66b75579c78ba700c60a0f820b6313e1fcc18f/monitor_memory-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:10 2020"}