{"info": {"author": "emredjan", "author_email": "emredjan@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Office/Business :: Financial"], "description": "# LEIPY\n\nA python wrapper / client for GLEIF public API. Suggestions, requests, contributions welcome.\n\n(I started this as a hobby / learning project, so it's rough around the edges. If you are looking for a better solution, check out [pygleif](https://github.com/ggravlingen/pygleif))\n\n## Dependencies\n\n1. Python >= 3.4\n2. [requests](http://docs.python-requests.org/en/master/): For API requests\n3. [dateutil](https://dateutil.readthedocs.io/en/stable/): For correctly parsing dates as datetime objects\n4. [pandas](https://pandas.pydata.org/): Optional, for returning output as DataFrame \n\n## Usage\n\nImport, instantiate and make the request:\n\n```python\nfrom leipy import GLEIF\n\ngleif = GLEIF(api_version='v1')\n\nraw_output, results, results_df = gleif.request(\n    ['HWUPKR0MPOU8FGXBT394','7ZW8QJWVPR4P1J1KQY45'], \n    return_dataframe=True\n)\n```\n\nAfter that, you can access the raw output from the API, results as a class with easy to access instance members, and results as a pandas DataFrame\n\n#### Raw output example\n\n```python\n[{'LEI': {'$': 'HWUPKR0MPOU8FGXBT394'},\n  'Entity': {'LegalName': {'$': 'Apple Inc.'},\n   'LegalAddress': {'Line1': {'$': 'C/O C T Corporation System'},\n    'Line2': {'$': '818 West 7th Street'},\n    'Line3': {'$': 'Suite 930'},\n    'City': {'$': 'Los Angeles'},\n    'Region': {'$': 'US-CA'},\n    'Country': {'$': 'US'},\n    'PostalCode': {'$': '90017'}},\n   'HeadquartersAddress': {'Line1': {'$': '1 Infinite Loop'},\n    'City': {'$': 'Cupertino'},\n    'Region': {'$': 'US-CA'},\n    'Country': {'$': 'US'},\n    'PostalCode': {'$': '95014'}},\n   'BusinessRegisterEntityID': {'@register': 'RA000598', '$': 'C0806592'},\n   'LegalJurisdiction': {'$': 'US'},\n   'LegalForm': {'$': 'INCORPORATED'},\n   'EntityStatus': {'$': 'ACTIVE'}},\n  'Registration': {'InitialRegistrationDate': {'$': '2012-06-06T15:53:00.000Z'},\n   'LastUpdateDate': {'$': '2017-12-12T21:19:00.000Z'},\n   'RegistrationStatus': {'$': 'ISSUED'},\n   'NextRenewalDate': {'$': '2018-12-13T00:31:00.000Z'},\n   'ManagingLOU': {'$': 'EVK05KS7XY1DEII3R011'},\n   'ValidationSources': {'$': 'FULLY_CORROBORATED'}}},\n {'LEI': {'$': '7ZW8QJWVPR4P1J1KQY45'},\n  'Entity': {'LegalName': {'$': 'Google LLC'},\n   'LegalAddress': {'Line1': {'$': 'C/O Corporation Service Company'},\n    'Line2': {'$': '251 Little Falls Drive'},\n    'City': {'$': 'Wilmington'},\n    'Region': {'$': 'US-DE'},\n    'Country': {'$': 'US'},\n    'PostalCode': {'$': '19808'}},\n   'HeadquartersAddress': {'Line1': {'$': '1600 Amphitheatre Parkway'},\n    'City': {'$': 'Mountain View'},\n    'Region': {'$': 'US-CA'},\n    'Country': {'$': 'US'},\n    'PostalCode': {'$': '94043'}},\n   'BusinessRegisterEntityID': {'@register': 'RA000602', '$': '3582691'},\n   'LegalJurisdiction': {'$': 'US'},\n   'LegalForm': {'$': 'LIMITED LIABILITY COMPANY'},\n   'EntityStatus': {'$': 'ACTIVE'}},\n  'Registration': {'InitialRegistrationDate': {'$': '2012-06-06T15:52:00.000Z'},\n   'LastUpdateDate': {'$': '2018-03-28T17:00:00.000Z'},\n   'RegistrationStatus': {'$': 'ISSUED'},\n   'NextRenewalDate': {'$': '2018-08-17T18:10:00.000Z'},\n   'ManagingLOU': {'$': 'EVK05KS7XY1DEII3R011'},\n   'ValidationSources': {'$': 'FULLY_CORROBORATED'}}}]\n```\n\n#### Results class example\n\n```python\n>>> print(results.legal_name)\n['Apple Inc.', 'Google LLC']\n\n>>> print(results.lei_reg_status)\n['ISSUED', 'ISSUED']\n\n>>> print(results.date_last_updated)\n[datetime.datetime(2017, 12, 12, 21, 19, tzinfo=tzutc()),\n datetime.datetime(2018, 3, 28, 17, 0, tzinfo=tzutc())]\n```\n\n#### Results DataFrame example\n\n```python\n>>>results_df\n```\n\n| |country_hq|country_legal|date_initial_reg|date_last_updated|date_next_renewal|legal_name|lei|lei_reg_status|status|\n|-|----------|-------------|----------------|-----------------|-----------------|----------|---|--------------|------|\n|0\t|US\t|US\t|2012-06-06 15:53:00+00:00\t|2017-12-12 21:19:00+00:00\t|2018-12-13 00:31:00+00:00\t|Apple Inc.\t|HWUPKR0MPOU8FGXBT394\t|ISSUED\t|ACTIVE|\n|1\t|US\t|US\t|2012-06-06 15:52:00+00:00\t|2018-03-28 17:00:00+00:00\t|2018-08-17 18:10:00+00:00\t|Google LLC\t|7ZW8QJWVPR4P1J1KQY45\t|ISSUED\t|ACTIVE|\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/emredjan/leipy", "keywords": "lei gleif api api-wrapper", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "leipy", "package_url": "https://pypi.org/project/leipy/", "platform": "", "project_url": "https://pypi.org/project/leipy/", "project_urls": {"Homepage": "https://github.com/emredjan/leipy"}, "release_url": "https://pypi.org/project/leipy/0.1.0/", "requires_dist": ["requests", "python-dateutil"], "requires_python": ">=3.4", "summary": "A python wrapper / client for GLEIF public API.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>LEIPY</h1>\n<p>A python wrapper / client for GLEIF public API. Suggestions, requests, contributions welcome.</p>\n<p>(I started this as a hobby / learning project, so it's rough around the edges. If you are looking for a better solution, check out <a href=\"https://github.com/ggravlingen/pygleif\" rel=\"nofollow\">pygleif</a>)</p>\n<h2>Dependencies</h2>\n<ol>\n<li>Python &gt;= 3.4</li>\n<li><a href=\"http://docs.python-requests.org/en/master/\" rel=\"nofollow\">requests</a>: For API requests</li>\n<li><a href=\"https://dateutil.readthedocs.io/en/stable/\" rel=\"nofollow\">dateutil</a>: For correctly parsing dates as datetime objects</li>\n<li><a href=\"https://pandas.pydata.org/\" rel=\"nofollow\">pandas</a>: Optional, for returning output as DataFrame</li>\n</ol>\n<h2>Usage</h2>\n<p>Import, instantiate and make the request:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">leipy</span> <span class=\"kn\">import</span> <span class=\"n\">GLEIF</span>\n\n<span class=\"n\">gleif</span> <span class=\"o\">=</span> <span class=\"n\">GLEIF</span><span class=\"p\">(</span><span class=\"n\">api_version</span><span class=\"o\">=</span><span class=\"s1\">'v1'</span><span class=\"p\">)</span>\n\n<span class=\"n\">raw_output</span><span class=\"p\">,</span> <span class=\"n\">results</span><span class=\"p\">,</span> <span class=\"n\">results_df</span> <span class=\"o\">=</span> <span class=\"n\">gleif</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span>\n    <span class=\"p\">[</span><span class=\"s1\">'HWUPKR0MPOU8FGXBT394'</span><span class=\"p\">,</span><span class=\"s1\">'7ZW8QJWVPR4P1J1KQY45'</span><span class=\"p\">],</span> \n    <span class=\"n\">return_dataframe</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n</pre>\n<p>After that, you can access the raw output from the API, results as a class with easy to access instance members, and results as a pandas DataFrame</p>\n<h4>Raw output example</h4>\n<pre><span class=\"p\">[{</span><span class=\"s1\">'LEI'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'HWUPKR0MPOU8FGXBT394'</span><span class=\"p\">},</span>\n  <span class=\"s1\">'Entity'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'LegalName'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'Apple Inc.'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'LegalAddress'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'Line1'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'C/O C T Corporation System'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'Line2'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'818 West 7th Street'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'Line3'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'Suite 930'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'City'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'Los Angeles'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'Region'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'US-CA'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'Country'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'PostalCode'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'90017'</span><span class=\"p\">}},</span>\n   <span class=\"s1\">'HeadquartersAddress'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'Line1'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'1 Infinite Loop'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'City'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'Cupertino'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'Region'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'US-CA'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'Country'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'PostalCode'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'95014'</span><span class=\"p\">}},</span>\n   <span class=\"s1\">'BusinessRegisterEntityID'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'@register'</span><span class=\"p\">:</span> <span class=\"s1\">'RA000598'</span><span class=\"p\">,</span> <span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'C0806592'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'LegalJurisdiction'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'LegalForm'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'INCORPORATED'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'EntityStatus'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'ACTIVE'</span><span class=\"p\">}},</span>\n  <span class=\"s1\">'Registration'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'InitialRegistrationDate'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'2012-06-06T15:53:00.000Z'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'LastUpdateDate'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'2017-12-12T21:19:00.000Z'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'RegistrationStatus'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'ISSUED'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'NextRenewalDate'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'2018-12-13T00:31:00.000Z'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'ManagingLOU'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'EVK05KS7XY1DEII3R011'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'ValidationSources'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'FULLY_CORROBORATED'</span><span class=\"p\">}}},</span>\n <span class=\"p\">{</span><span class=\"s1\">'LEI'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'7ZW8QJWVPR4P1J1KQY45'</span><span class=\"p\">},</span>\n  <span class=\"s1\">'Entity'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'LegalName'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'Google LLC'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'LegalAddress'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'Line1'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'C/O Corporation Service Company'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'Line2'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'251 Little Falls Drive'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'City'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'Wilmington'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'Region'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'US-DE'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'Country'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'PostalCode'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'19808'</span><span class=\"p\">}},</span>\n   <span class=\"s1\">'HeadquartersAddress'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'Line1'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'1600 Amphitheatre Parkway'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'City'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'Mountain View'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'Region'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'US-CA'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'Country'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'PostalCode'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'94043'</span><span class=\"p\">}},</span>\n   <span class=\"s1\">'BusinessRegisterEntityID'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'@register'</span><span class=\"p\">:</span> <span class=\"s1\">'RA000602'</span><span class=\"p\">,</span> <span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'3582691'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'LegalJurisdiction'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'LegalForm'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'LIMITED LIABILITY COMPANY'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'EntityStatus'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'ACTIVE'</span><span class=\"p\">}},</span>\n  <span class=\"s1\">'Registration'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'InitialRegistrationDate'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'2012-06-06T15:52:00.000Z'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'LastUpdateDate'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'2018-03-28T17:00:00.000Z'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'RegistrationStatus'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'ISSUED'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'NextRenewalDate'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'2018-08-17T18:10:00.000Z'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'ManagingLOU'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'EVK05KS7XY1DEII3R011'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'ValidationSources'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'$'</span><span class=\"p\">:</span> <span class=\"s1\">'FULLY_CORROBORATED'</span><span class=\"p\">}}}]</span>\n</pre>\n<h4>Results class example</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">legal_name</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s1\">'Apple Inc.'</span><span class=\"p\">,</span> <span class=\"s1\">'Google LLC'</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">lei_reg_status</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s1\">'ISSUED'</span><span class=\"p\">,</span> <span class=\"s1\">'ISSUED'</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">date_last_updated</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2017</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">19</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">tzutc</span><span class=\"p\">()),</span>\n <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2018</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">tzutc</span><span class=\"p\">())]</span>\n</pre>\n<h4>Results DataFrame example</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span><span class=\"n\">results_df</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>country_hq</th>\n<th>country_legal</th>\n<th>date_initial_reg</th>\n<th>date_last_updated</th>\n<th>date_next_renewal</th>\n<th>legal_name</th>\n<th>lei</th>\n<th>lei_reg_status</th>\n<th>status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>US</td>\n<td>US</td>\n<td>2012-06-06 15:53:00+00:00</td>\n<td>2017-12-12 21:19:00+00:00</td>\n<td>2018-12-13 00:31:00+00:00</td>\n<td>Apple Inc.</td>\n<td>HWUPKR0MPOU8FGXBT394</td>\n<td>ISSUED</td>\n<td>ACTIVE</td>\n</tr>\n<tr>\n<td>1</td>\n<td>US</td>\n<td>US</td>\n<td>2012-06-06 15:52:00+00:00</td>\n<td>2018-03-28 17:00:00+00:00</td>\n<td>2018-08-17 18:10:00+00:00</td>\n<td>Google LLC</td>\n<td>7ZW8QJWVPR4P1J1KQY45</td>\n<td>ISSUED</td>\n<td>ACTIVE</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 3778095, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e5d65d27d88d1951793b7ace8e4652a5", "sha256": "3bf9da54908a2614157056edcf40775cbfdf576c083ca73be48f13f4cd8ea6cd"}, "downloads": -1, "filename": "leipy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e5d65d27d88d1951793b7ace8e4652a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 5468, "upload_time": "2018-04-18T18:31:47", "upload_time_iso_8601": "2018-04-18T18:31:47.781976Z", "url": "https://files.pythonhosted.org/packages/98/c7/efb1725c16d12229af7d59cc03d7c3c8512de142d5fc8b4edab435d8244c/leipy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04fb9d380bcf4b5fc24c3b1cb7d59d06", "sha256": "50ce69046462321f35d3fe02fe2f1a5918d1fe6e8e19155a7652d6546ff414b1"}, "downloads": -1, "filename": "leipy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "04fb9d380bcf4b5fc24c3b1cb7d59d06", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 4760, "upload_time": "2018-04-18T18:31:48", "upload_time_iso_8601": "2018-04-18T18:31:48.927135Z", "url": "https://files.pythonhosted.org/packages/42/a8/33d759069dbef43a5f0e0221b1f75dd301c114445a90159e83019d0e56ec/leipy-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e5d65d27d88d1951793b7ace8e4652a5", "sha256": "3bf9da54908a2614157056edcf40775cbfdf576c083ca73be48f13f4cd8ea6cd"}, "downloads": -1, "filename": "leipy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e5d65d27d88d1951793b7ace8e4652a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 5468, "upload_time": "2018-04-18T18:31:47", "upload_time_iso_8601": "2018-04-18T18:31:47.781976Z", "url": "https://files.pythonhosted.org/packages/98/c7/efb1725c16d12229af7d59cc03d7c3c8512de142d5fc8b4edab435d8244c/leipy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04fb9d380bcf4b5fc24c3b1cb7d59d06", "sha256": "50ce69046462321f35d3fe02fe2f1a5918d1fe6e8e19155a7652d6546ff414b1"}, "downloads": -1, "filename": "leipy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "04fb9d380bcf4b5fc24c3b1cb7d59d06", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 4760, "upload_time": "2018-04-18T18:31:48", "upload_time_iso_8601": "2018-04-18T18:31:48.927135Z", "url": "https://files.pythonhosted.org/packages/42/a8/33d759069dbef43a5f0e0221b1f75dd301c114445a90159e83019d0e56ec/leipy-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:10 2020"}