{"info": {"author": "plotski", "author_email": "plotski@example.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 3"], "description": "**txs** (**t**est **x**264 **s**ettings) is a command line tool that can\ngenerate different combinations of x264 settings and make short test encodings\nwith [ffmpeg](https://ffmpeg.org). It also comes with a Lua script for\n[mpv](https://mpv.io) that allows you to visually compare the test encodes and\nfind the best one based on quality, estimated file size and estimated encoding\ntime. It looks like this:\n\n![Demo](https://github.com/plotski/txs/blob/master/demo.gif?raw=true)\n\nThis is the output of `txs tutorial`:\n\nThis is a tutorial that should get you started. Run `txs -h` and\n`txs SUBCOMMAND -h` for more information.\n\n    $ txs -s source.mkv -r 25:00 10 -x crf=19:me=umh samples \\\n      -xs subme=9/10:deblock=-2,-1/-3,-3:no-fast-pskip\n\nThe above command creates test encodes or samples with all possible combinations\nof the given values for \"subme\", \"deblock\" and \"no-fast-pskip\" in the directory\n\"samples.orig@25:00-1.subme:deblock:no-fast-pskip\". The samples are all encoded\nwith \"crf=19:me=umh\", they are all 10 seconds long and start at 25 minutes in\nsource.mkv:\n\n    source.sample@25:00-10.crf=19:me=umh:subme=10:deblock=-2,-1.mkv\n    source.sample@25:00-10.crf=19:me=umh:subme=10:deblock=-2,-1:no-fast-pskip.mkv\n    source.sample@25:00-10.crf=19:me=umh:subme=10:deblock=-3,-3.mkv\n    source.sample@25:00-10.crf=19:me=umh:subme=10:deblock=-3,-3:no-fast-pskip.mkv\n    source.sample@25:00-10.crf=19:me=umh:subme=9:deblock=-2,-1.mkv\n    source.sample@25:00-10.crf=19:me=umh:subme=9:deblock=-2,-1:no-fast-pskip.mkv\n    source.sample@25:00-10.crf=19:me=umh:subme=9:deblock=-3,-3.mkv\n    source.sample@25:00-10.crf=19:me=umh:subme=9:deblock=-3,-3:no-fast-pskip.mkv\n\nBy providing multiple sets of sample settings to -xs you can limit the number of\ncombinations:\n\n    $ txs -s source.mkv -r 25:00 10 -x crf=19:me=umh samples \\\n      -xs subme=10/11:no-deblock deblock=-2,-1/-3,-3\n\nThis creates the following samples:\n\n    source.sample@25:00-10.crf=19:me=umh:deblock=-2,-1.mkv\n    source.sample@25:00-10.crf=19:me=umh:deblock=-3,-3.mkv\n    source.sample@25:00-10.crf=19:me=umh:subme=10.mkv\n    source.sample@25:00-10.crf=19:me=umh:subme=10:no-deblock.mkv\n    source.sample@25:00-10.crf=19:me=umh:subme=11.mkv\n    source.sample@25:00-10.crf=19:me=umh:subme=11:no-deblock.mkv\n\nTo compare encodes, use the \"compare\" subcommand:\n\n    $ txs -s source.mkv compare samples.orig@25:00-1.subme:deblock:no-fast-pskip\n\nThis opens mpv in fullscreen mode with a playlist of two samples. Switch between\nsamples with \"j\" and \"k\" or toggle the original source with \"o\". Pick the better\nsample with \"b\", the worse with \"w\" or mark them as equal with \"e\". New samples\nare loaded automatically every time you make a decision. After you've rated all\nsamples once, any samples that were marked as equal are loaded again. This\nprocess will leave you with the best sample and its settings in the end.\n\nYou can adjust the playlist size with the -p (--playlist-size) option if you\nwant to compare more than two samples.\n\n\"Shift+w\" does the same thing as \"w\", but it also removes the sample and its log\nfile from the file system.\n\nShow and hide the playlist overlay with \"`\".\n\nSome final notes you might find useful:\n\n- Choose your sample range carefully. It should be representative of the full\n  video. 10 seconds or less is fine to check something quickly, but use 60\n  seconds or more for fine tuning.\n\n- Increasing gamma with \"6\" to around 10 to 15 makes differences more obvious.\n  (Decrease with \"5\".) Don't go too high or you'll watch pixels dance that\n  nobody else will ever see.\n\n- Try switching between samples while playing. txs should preserve playback\n  time, but there is a small delay when mpv seeks.\n\n- You can seek forward and backward by single frames with \".\" and \",\".\n\n### Installation\n\nInstall [pipx](https://pipxproject.github.io/pipx/) with your distro's package\nmanager or with pip:\n\n    $ python3 -m pip install --user pipx\n\nThen install txs with pipx:\n\n    $ pipx install txs\n\nUpgrade:\n\n    $ pipx upgrade txs\n\nInstall development version over current release:\n\n    $ pipx upgrade --spec git+https://github.com/plotski/txs.git txs\n\nInstall development version without an existing txs installation:\n\n    $ pipx install --spec git+https://github.com/plotski/txs.git txs\n\nUninstall:\n\n    $ pipx uninstall pipx\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/plotski/txs", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "txs", "package_url": "https://pypi.org/project/txs/", "platform": "", "project_url": "https://pypi.org/project/txs/", "project_urls": {"Homepage": "http://github.com/plotski/txs"}, "release_url": "https://pypi.org/project/txs/0.1.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Wrapper around ffmpeg and mpv that generates and compares x264 test encodes", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>txs</strong> (<strong>t</strong>est <strong>x</strong>264 <strong>s</strong>ettings) is a command line tool that can\ngenerate different combinations of x264 settings and make short test encodings\nwith <a href=\"https://ffmpeg.org\" rel=\"nofollow\">ffmpeg</a>. It also comes with a Lua script for\n<a href=\"https://mpv.io\" rel=\"nofollow\">mpv</a> that allows you to visually compare the test encodes and\nfind the best one based on quality, estimated file size and estimated encoding\ntime. It looks like this:</p>\n<p><img alt=\"Demo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3395a3f5b4e40ecbf6efe75c363b64bc37494886/68747470733a2f2f6769746875622e636f6d2f706c6f74736b692f7478732f626c6f622f6d61737465722f64656d6f2e6769663f7261773d74727565\"></p>\n<p>This is the output of <code>txs tutorial</code>:</p>\n<p>This is a tutorial that should get you started. Run <code>txs -h</code> and\n<code>txs SUBCOMMAND -h</code> for more information.</p>\n<pre><code>$ txs -s source.mkv -r 25:00 10 -x crf=19:me=umh samples \\\n  -xs subme=9/10:deblock=-2,-1/-3,-3:no-fast-pskip\n</code></pre>\n<p>The above command creates test encodes or samples with all possible combinations\nof the given values for \"subme\", \"deblock\" and \"no-fast-pskip\" in the directory\n\"samples.orig@25:00-1.subme:deblock:no-fast-pskip\". The samples are all encoded\nwith \"crf=19:me=umh\", they are all 10 seconds long and start at 25 minutes in\nsource.mkv:</p>\n<pre><code>source.sample@25:00-10.crf=19:me=umh:subme=10:deblock=-2,-1.mkv\nsource.sample@25:00-10.crf=19:me=umh:subme=10:deblock=-2,-1:no-fast-pskip.mkv\nsource.sample@25:00-10.crf=19:me=umh:subme=10:deblock=-3,-3.mkv\nsource.sample@25:00-10.crf=19:me=umh:subme=10:deblock=-3,-3:no-fast-pskip.mkv\nsource.sample@25:00-10.crf=19:me=umh:subme=9:deblock=-2,-1.mkv\nsource.sample@25:00-10.crf=19:me=umh:subme=9:deblock=-2,-1:no-fast-pskip.mkv\nsource.sample@25:00-10.crf=19:me=umh:subme=9:deblock=-3,-3.mkv\nsource.sample@25:00-10.crf=19:me=umh:subme=9:deblock=-3,-3:no-fast-pskip.mkv\n</code></pre>\n<p>By providing multiple sets of sample settings to -xs you can limit the number of\ncombinations:</p>\n<pre><code>$ txs -s source.mkv -r 25:00 10 -x crf=19:me=umh samples \\\n  -xs subme=10/11:no-deblock deblock=-2,-1/-3,-3\n</code></pre>\n<p>This creates the following samples:</p>\n<pre><code>source.sample@25:00-10.crf=19:me=umh:deblock=-2,-1.mkv\nsource.sample@25:00-10.crf=19:me=umh:deblock=-3,-3.mkv\nsource.sample@25:00-10.crf=19:me=umh:subme=10.mkv\nsource.sample@25:00-10.crf=19:me=umh:subme=10:no-deblock.mkv\nsource.sample@25:00-10.crf=19:me=umh:subme=11.mkv\nsource.sample@25:00-10.crf=19:me=umh:subme=11:no-deblock.mkv\n</code></pre>\n<p>To compare encodes, use the \"compare\" subcommand:</p>\n<pre><code>$ txs -s source.mkv compare samples.orig@25:00-1.subme:deblock:no-fast-pskip\n</code></pre>\n<p>This opens mpv in fullscreen mode with a playlist of two samples. Switch between\nsamples with \"j\" and \"k\" or toggle the original source with \"o\". Pick the better\nsample with \"b\", the worse with \"w\" or mark them as equal with \"e\". New samples\nare loaded automatically every time you make a decision. After you've rated all\nsamples once, any samples that were marked as equal are loaded again. This\nprocess will leave you with the best sample and its settings in the end.</p>\n<p>You can adjust the playlist size with the -p (--playlist-size) option if you\nwant to compare more than two samples.</p>\n<p>\"Shift+w\" does the same thing as \"w\", but it also removes the sample and its log\nfile from the file system.</p>\n<p>Show and hide the playlist overlay with \"`\".</p>\n<p>Some final notes you might find useful:</p>\n<ul>\n<li>\n<p>Choose your sample range carefully. It should be representative of the full\nvideo. 10 seconds or less is fine to check something quickly, but use 60\nseconds or more for fine tuning.</p>\n</li>\n<li>\n<p>Increasing gamma with \"6\" to around 10 to 15 makes differences more obvious.\n(Decrease with \"5\".) Don't go too high or you'll watch pixels dance that\nnobody else will ever see.</p>\n</li>\n<li>\n<p>Try switching between samples while playing. txs should preserve playback\ntime, but there is a small delay when mpv seeks.</p>\n</li>\n<li>\n<p>You can seek forward and backward by single frames with \".\" and \",\".</p>\n</li>\n</ul>\n<h3>Installation</h3>\n<p>Install <a href=\"https://pipxproject.github.io/pipx/\" rel=\"nofollow\">pipx</a> with your distro's package\nmanager or with pip:</p>\n<pre><code>$ python3 -m pip install --user pipx\n</code></pre>\n<p>Then install txs with pipx:</p>\n<pre><code>$ pipx install txs\n</code></pre>\n<p>Upgrade:</p>\n<pre><code>$ pipx upgrade txs\n</code></pre>\n<p>Install development version over current release:</p>\n<pre><code>$ pipx upgrade --spec git+https://github.com/plotski/txs.git txs\n</code></pre>\n<p>Install development version without an existing txs installation:</p>\n<pre><code>$ pipx install --spec git+https://github.com/plotski/txs.git txs\n</code></pre>\n<p>Uninstall:</p>\n<pre><code>$ pipx uninstall pipx\n</code></pre>\n\n          </div>"}, "last_serial": 6640014, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1e19b8e271b7d97ea63ceb3d52fc1ff0", "sha256": "54d44183151bd7ff27d76738b39d4b44716a0e2820efdd87f70219b746e6925e"}, "downloads": -1, "filename": "txs-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1e19b8e271b7d97ea63ceb3d52fc1ff0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17489, "upload_time": "2019-12-23T13:06:11", "upload_time_iso_8601": "2019-12-23T13:06:11.383888Z", "url": "https://files.pythonhosted.org/packages/d1/23/a452d8131b48db34f42b52a6646a910217494bbc9ec198e182d1a00a0c61/txs-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c08e8bd11aac7d345299c0d4bcd558c", "sha256": "09abcd691eb2da72ec75d7d3ad81a46ad8a906f08ea76e412a28312e1f324d72"}, "downloads": -1, "filename": "txs-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5c08e8bd11aac7d345299c0d4bcd558c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16456, "upload_time": "2019-12-23T13:06:14", "upload_time_iso_8601": "2019-12-23T13:06:14.505158Z", "url": "https://files.pythonhosted.org/packages/83/ca/8214009a6d8ca692af7323a85c124180b1c4dbbc44f5c204622dd504bc69/txs-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "799c5443adefe90a2fba3e4e0d5d5fee", "sha256": "a40e9899aa32c2ddc36c7c3780040d3376726a90aaaa90432d8d355ced705c31"}, "downloads": -1, "filename": "txs-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "799c5443adefe90a2fba3e4e0d5d5fee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18334, "upload_time": "2019-12-30T13:50:11", "upload_time_iso_8601": "2019-12-30T13:50:11.048362Z", "url": "https://files.pythonhosted.org/packages/aa/24/46e9c2df4982fb881140a40de9a449296adaf5f496f9d57faee08bd86c3e/txs-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "443652d842aa0bff30e90b3bdb60415b", "sha256": "0248acb43b4e321ec6b27d14749de81a3275b6e960a368f1dc2b1f579a432850"}, "downloads": -1, "filename": "txs-0.0.2.tar.gz", "has_sig": false, "md5_digest": "443652d842aa0bff30e90b3bdb60415b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 17386, "upload_time": "2019-12-30T13:50:12", "upload_time_iso_8601": "2019-12-30T13:50:12.704561Z", "url": "https://files.pythonhosted.org/packages/ac/fc/e028153200e3fa726b631d2ca4376515858cf70ef4131f98d6ac70ec95fc/txs-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "fb9334108a70bbaefb09f75be8794722", "sha256": "1a3e62b33f99648c77e0216698458f607cea47dea3ec01faaf07dc29f595b527"}, "downloads": -1, "filename": "txs-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "fb9334108a70bbaefb09f75be8794722", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18364, "upload_time": "2019-12-30T13:55:31", "upload_time_iso_8601": "2019-12-30T13:55:31.833241Z", "url": "https://files.pythonhosted.org/packages/67/2b/6c26a5161dbaa8617bedf8e42e661e99b58d21f187b06397930c1daab0a0/txs-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "216e6dc92e915ce14ae38b00cf5764e4", "sha256": "91b63a8be848c923f1388f91489c09b8c12ae9006cdb1698e1907d1ce7397bbc"}, "downloads": -1, "filename": "txs-0.0.3.tar.gz", "has_sig": false, "md5_digest": "216e6dc92e915ce14ae38b00cf5764e4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 17412, "upload_time": "2019-12-30T13:55:33", "upload_time_iso_8601": "2019-12-30T13:55:33.085246Z", "url": "https://files.pythonhosted.org/packages/ff/87/059fa4db7d363295910a4146252b1e2322c6602246625a9363cc963cb7d4/txs-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "30da1ccdb7cabf89359d001ce586a8f1", "sha256": "490d0a37c78ac1356c4fb4034872b02ebde5a7102bbe505dd5f1a20fde9ea1a0"}, "downloads": -1, "filename": "txs-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "30da1ccdb7cabf89359d001ce586a8f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18439, "upload_time": "2020-02-16T12:17:56", "upload_time_iso_8601": "2020-02-16T12:17:56.444370Z", "url": "https://files.pythonhosted.org/packages/e2/80/67509a36f41870c292e5405f33db1eec97d2a318c7572401d0094143a9ad/txs-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "690e6e88032f2ed9e235d71cbf361f0b", "sha256": "814a189e8fbd9442e46466960c8550f58646770e87617ea389418ba7eb2240e1"}, "downloads": -1, "filename": "txs-0.1.0.tar.gz", "has_sig": false, "md5_digest": "690e6e88032f2ed9e235d71cbf361f0b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 17513, "upload_time": "2020-02-16T12:17:58", "upload_time_iso_8601": "2020-02-16T12:17:58.102446Z", "url": "https://files.pythonhosted.org/packages/9a/54/6ec3670ed0cd92f165f884859929bc252da27deaad58e56a12456c94ee32/txs-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "30da1ccdb7cabf89359d001ce586a8f1", "sha256": "490d0a37c78ac1356c4fb4034872b02ebde5a7102bbe505dd5f1a20fde9ea1a0"}, "downloads": -1, "filename": "txs-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "30da1ccdb7cabf89359d001ce586a8f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18439, "upload_time": "2020-02-16T12:17:56", "upload_time_iso_8601": "2020-02-16T12:17:56.444370Z", "url": "https://files.pythonhosted.org/packages/e2/80/67509a36f41870c292e5405f33db1eec97d2a318c7572401d0094143a9ad/txs-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "690e6e88032f2ed9e235d71cbf361f0b", "sha256": "814a189e8fbd9442e46466960c8550f58646770e87617ea389418ba7eb2240e1"}, "downloads": -1, "filename": "txs-0.1.0.tar.gz", "has_sig": false, "md5_digest": "690e6e88032f2ed9e235d71cbf361f0b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 17513, "upload_time": "2020-02-16T12:17:58", "upload_time_iso_8601": "2020-02-16T12:17:58.102446Z", "url": "https://files.pythonhosted.org/packages/9a/54/6ec3670ed0cd92f165f884859929bc252da27deaad58e56a12456c94ee32/txs-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:08 2020"}