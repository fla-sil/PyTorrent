{"info": {"author": "Matt Carey", "author_email": "matt@authorityspoke.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Legal Industry", "License :: Free To Use But Restricted", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7", "Topic :: Sociology :: History"], "description": "# AuthoritySpoke\n\n[![CircleCI](https://circleci.com/gh/mscarey/AuthoritySpoke.svg?style=svg)](https://circleci.com/gh/mscarey/AuthoritySpoke) [![Coverage Status](https://coveralls.io/repos/github/mscarey/AuthoritySpoke/badge.svg?branch=master)](https://coveralls.io/github/mscarey/AuthoritySpoke?branch=master)\n\nAuthoritySpoke is the first open source legal authority automation tool.\n\n## Installing AuthoritySpoke\n\nAuthoritySpoke is a Python package [available on PyPI](https://pypi.org/project/AuthoritySpoke/), so you can install it with pip:\n\n```\n$ pip install authorityspoke\n```\n\nAuthoritySpoke is tested on Python 3.7 and is not yet working on Python 3.8.\n\n## Trying it Out\n\nHere's an example that discovers contradictory legal holdings in `Oracle America, Inc. v. Google Inc., 750 F.3d 1339` (a famous case that dealt with a claim that the Android operating system infringed the copyright on the Java language) and `Lotus Development Corporation v. Borland International, 49 F.3d 807` (an older case about whether a user interface was copyrightable).\n\nCopies of both opinions can be loaded from the `example_data` folder. (But you can also use AuthoritySpoke to retrieve opinions from the [Caselaw Access Project API](https://api.case.law/v1/).)\n\n```python\nfrom authorityspoke.io.loaders import load_and_read_decision\n\noracle = load_and_read_decision(\"oracle_h.json\")\nlotus = load_and_read_decision(\"lotus_h.json\")\n```\n\nThe `example_data` folder also contains legislation in XML files that can be organized by linking them to a `Regime` object.\n\n```python\nfrom authorityspoke import Regime\n\nfrom authorityspoke.io.loaders import load_and_read_code\n\nusa = Regime()\n\nusa.set_code(load_and_read_code(\"constitution.xml\"))\nusa.set_code(load_and_read_code(\"usc17.xml\"))\nusa.set_code(load_and_read_code(\"cfr37.xml\"))\n```\n\nStructured annotations about the holdings in _Oracle_ and _Lotus_ can also be loaded from the `example_data` folder, and can be linked to the `Decision` objects.\n\n```python\nfrom authorityspoke.io.loaders import load_and_read_holdings\n\noracle.posit(load_and_read_holdings(\"holding_oracle.json\", regime=usa))\nlotus.posit(load_and_read_holdings(\"holding_lotus.json\", regime=usa))\n```\n\nNow, each `Decision` has a `.contradicts` method that can return a boolean indicating whether its holdings conflict with the holdings of another `Decision`.\n\n```python\nprint(lotus.contradicts(oracle))\n```\n\n```\nTrue\n```\n\nThat's good to know, but we don't want to take it on faith that a contradiction exists. Let's use the `explain_contradiction` method to find the contradictory Holdings posited by the _Oracle_ and _Lotus_ cases, and to generate a rudimentary explanation of why they contradict.\n\n```python\nexplanation = lotus.explain_contradiction(oracle)\nprint(explanation)\n```\n\n```\nan Explanation of why there is a CONTRADICTION between\n  the Holding to ACCEPT\n    the Rule that the court MUST ALWAYS impose the\n      RESULT:\n        the Fact it is false that <the Lotus menu command hierarchy> was\n        copyrightable\n      GIVEN:\n        the Fact that <the Lotus menu command hierarchy> was a method of\n        operation\n      DESPITE:\n        the Fact that a text described <the Lotus menu command hierarchy>\n        the Fact that <the Lotus menu command hierarchy> was an original work\n      GIVEN the ENACTMENTS:\n        \"In no case does copyright protection for an original work of\n        authorship extend to any\" (Title 17, /us/usc/t17/s102/b)\n        \"method of operation\" (Title 17, /us/usc/t17/s102/b)\nand\n  the Holding to ACCEPT\n    the Rule that the court MUST SOMETIMES impose the\n      RESULT:\n        the Fact that <the Java API> was copyrightable\n      GIVEN:\n        the Fact that <the Java language> was a computer program\n        the Fact that <the Java API> was a set of application programming\n        interface declarations\n        the Fact that <the Java API> was an original work\n        the Fact that <the Java API> was a non-literal element of <the Java\n        language>\n        the Fact that <the Java API> was the expression of an idea\n        the Fact it is false that <the Java API> was essentially the only way\n        to express the idea that it embodied\n        the Fact that <the Java API> was creative\n        the Fact that it was possible to use <the Java language> without\n        copying <the Java API>\n      DESPITE:\n        the Fact that <the Java API> was a method of operation\n        the Fact that <the Java API> contained short phrases\n        the Fact that <the Java API> became so popular that it was the\n        industry standard\n        the Fact that there was a preexisting community of programmers\n        accustomed to using <the Java API>\n      GIVEN the ENACTMENT:\n        \"Copyright protection subsists, in accordance with this title, in\n        original works of authorship fixed in any tangible medium of\n        expression, now known or later developed, from which they can be\n        perceived, reproduced, or otherwise communicated, either directly or\n        with the aid of a machine or device.\" (Title 17, /us/usc/t17/s102/a)\n      DESPITE the ENACTMENTS:\n        \"In no case does copyright protection for an original work of\n        authorship extend to any\" (Title 17, /us/usc/t17/s102/b)\n        \"method of operation\" (Title 17, /us/usc/t17/s102/b)\n        \"The following are examples of works not subject to copyright and\n        applications for registration of such works cannot be entertained: (a)\n        Words and short phrases such as names, titles, and slogans;\" (Code of\n        Federal Regulations Title 37, /us/cfr/t37/s202.1)\nis that <the Lotus menu command hierarchy> is like <the Java API>\n```\n\n## Learning about AuthoritySpoke\n\nYou can find the example above and much more information about using AuthoritySpoke in the [Introduction to AuthoritySpoke](notebooks/introduction.ipynb) Jupyter notebook.\n\nUse the button below to interact with the notebook online through Binder. If you use Binder, you'll be shown the directory structure of this repo. Navigate to the `notebooks` folder to find the tutorials.\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/mscarey/AuthoritySpoke/master)\n\nYou can also find static versions of the tutorial notebooks, the API documentation, and more [in the project documentation](https://authorityspoke.readthedocs.io/en/latest/).\n\n## Contributing to AuthoritySpoke\n\nAll participants are expected to follow the [code of conduct](code_of_conduct.md). AuthoritySpoke uses the [Contributor Covenant, version 1.4](https://www.contributor-covenant.org/version/1/4/code-of-conduct.html).\n\nSubmitting a pull request or other code contribution to AuthoritySpoke requires acceptance of a [contributor license agreement](contributor_agreement.md). The agreement's provisions are based on the [Apache Software Foundation Individual Contributor License Agreement V2.0](http://www.apache.org/licenses/icla.pdf).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mscarey/AuthoritySpoke", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "AuthoritySpoke", "package_url": "https://pypi.org/project/AuthoritySpoke/", "platform": "", "project_url": "https://pypi.org/project/AuthoritySpoke/", "project_urls": {"Homepage": "https://github.com/mscarey/AuthoritySpoke"}, "release_url": "https://pypi.org/project/AuthoritySpoke/0.3.4/", "requires_dist": ["anchorpoint", "apispec", "beautifulsoup4", "lxml", "marshmallow", "pint", "requests"], "requires_python": ">=3.7, <3.8", "summary": "tool for managing structured data about legal authority", "version": "0.3.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>AuthoritySpoke</h1>\n<p><a href=\"https://circleci.com/gh/mscarey/AuthoritySpoke\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a2b4c97568c1b673c4c30d45244d754c9767d8f/68747470733a2f2f636972636c6563692e636f6d2f67682f6d7363617265792f417574686f7269747953706f6b652e7376673f7374796c653d737667\"></a> <a href=\"https://coveralls.io/github/mscarey/AuthoritySpoke?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ed334ad393640aa82078cf4c1ce8c64afd9c6f3/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d7363617265792f417574686f7269747953706f6b652f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>AuthoritySpoke is the first open source legal authority automation tool.</p>\n<h2>Installing AuthoritySpoke</h2>\n<p>AuthoritySpoke is a Python package <a href=\"https://pypi.org/project/AuthoritySpoke/\" rel=\"nofollow\">available on PyPI</a>, so you can install it with pip:</p>\n<pre><code>$ pip install authorityspoke\n</code></pre>\n<p>AuthoritySpoke is tested on Python 3.7 and is not yet working on Python 3.8.</p>\n<h2>Trying it Out</h2>\n<p>Here's an example that discovers contradictory legal holdings in <code>Oracle America, Inc. v. Google Inc., 750 F.3d 1339</code> (a famous case that dealt with a claim that the Android operating system infringed the copyright on the Java language) and <code>Lotus Development Corporation v. Borland International, 49 F.3d 807</code> (an older case about whether a user interface was copyrightable).</p>\n<p>Copies of both opinions can be loaded from the <code>example_data</code> folder. (But you can also use AuthoritySpoke to retrieve opinions from the <a href=\"https://api.case.law/v1/\" rel=\"nofollow\">Caselaw Access Project API</a>.)</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">authorityspoke.io.loaders</span> <span class=\"kn\">import</span> <span class=\"n\">load_and_read_decision</span>\n\n<span class=\"n\">oracle</span> <span class=\"o\">=</span> <span class=\"n\">load_and_read_decision</span><span class=\"p\">(</span><span class=\"s2\">\"oracle_h.json\"</span><span class=\"p\">)</span>\n<span class=\"n\">lotus</span> <span class=\"o\">=</span> <span class=\"n\">load_and_read_decision</span><span class=\"p\">(</span><span class=\"s2\">\"lotus_h.json\"</span><span class=\"p\">)</span>\n</pre>\n<p>The <code>example_data</code> folder also contains legislation in XML files that can be organized by linking them to a <code>Regime</code> object.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">authorityspoke</span> <span class=\"kn\">import</span> <span class=\"n\">Regime</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">authorityspoke.io.loaders</span> <span class=\"kn\">import</span> <span class=\"n\">load_and_read_code</span>\n\n<span class=\"n\">usa</span> <span class=\"o\">=</span> <span class=\"n\">Regime</span><span class=\"p\">()</span>\n\n<span class=\"n\">usa</span><span class=\"o\">.</span><span class=\"n\">set_code</span><span class=\"p\">(</span><span class=\"n\">load_and_read_code</span><span class=\"p\">(</span><span class=\"s2\">\"constitution.xml\"</span><span class=\"p\">))</span>\n<span class=\"n\">usa</span><span class=\"o\">.</span><span class=\"n\">set_code</span><span class=\"p\">(</span><span class=\"n\">load_and_read_code</span><span class=\"p\">(</span><span class=\"s2\">\"usc17.xml\"</span><span class=\"p\">))</span>\n<span class=\"n\">usa</span><span class=\"o\">.</span><span class=\"n\">set_code</span><span class=\"p\">(</span><span class=\"n\">load_and_read_code</span><span class=\"p\">(</span><span class=\"s2\">\"cfr37.xml\"</span><span class=\"p\">))</span>\n</pre>\n<p>Structured annotations about the holdings in <em>Oracle</em> and <em>Lotus</em> can also be loaded from the <code>example_data</code> folder, and can be linked to the <code>Decision</code> objects.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">authorityspoke.io.loaders</span> <span class=\"kn\">import</span> <span class=\"n\">load_and_read_holdings</span>\n\n<span class=\"n\">oracle</span><span class=\"o\">.</span><span class=\"n\">posit</span><span class=\"p\">(</span><span class=\"n\">load_and_read_holdings</span><span class=\"p\">(</span><span class=\"s2\">\"holding_oracle.json\"</span><span class=\"p\">,</span> <span class=\"n\">regime</span><span class=\"o\">=</span><span class=\"n\">usa</span><span class=\"p\">))</span>\n<span class=\"n\">lotus</span><span class=\"o\">.</span><span class=\"n\">posit</span><span class=\"p\">(</span><span class=\"n\">load_and_read_holdings</span><span class=\"p\">(</span><span class=\"s2\">\"holding_lotus.json\"</span><span class=\"p\">,</span> <span class=\"n\">regime</span><span class=\"o\">=</span><span class=\"n\">usa</span><span class=\"p\">))</span>\n</pre>\n<p>Now, each <code>Decision</code> has a <code>.contradicts</code> method that can return a boolean indicating whether its holdings conflict with the holdings of another <code>Decision</code>.</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lotus</span><span class=\"o\">.</span><span class=\"n\">contradicts</span><span class=\"p\">(</span><span class=\"n\">oracle</span><span class=\"p\">))</span>\n</pre>\n<pre><code>True\n</code></pre>\n<p>That's good to know, but we don't want to take it on faith that a contradiction exists. Let's use the <code>explain_contradiction</code> method to find the contradictory Holdings posited by the <em>Oracle</em> and <em>Lotus</em> cases, and to generate a rudimentary explanation of why they contradict.</p>\n<pre><span class=\"n\">explanation</span> <span class=\"o\">=</span> <span class=\"n\">lotus</span><span class=\"o\">.</span><span class=\"n\">explain_contradiction</span><span class=\"p\">(</span><span class=\"n\">oracle</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">explanation</span><span class=\"p\">)</span>\n</pre>\n<pre><code>an Explanation of why there is a CONTRADICTION between\n  the Holding to ACCEPT\n    the Rule that the court MUST ALWAYS impose the\n      RESULT:\n        the Fact it is false that &lt;the Lotus menu command hierarchy&gt; was\n        copyrightable\n      GIVEN:\n        the Fact that &lt;the Lotus menu command hierarchy&gt; was a method of\n        operation\n      DESPITE:\n        the Fact that a text described &lt;the Lotus menu command hierarchy&gt;\n        the Fact that &lt;the Lotus menu command hierarchy&gt; was an original work\n      GIVEN the ENACTMENTS:\n        \"In no case does copyright protection for an original work of\n        authorship extend to any\" (Title 17, /us/usc/t17/s102/b)\n        \"method of operation\" (Title 17, /us/usc/t17/s102/b)\nand\n  the Holding to ACCEPT\n    the Rule that the court MUST SOMETIMES impose the\n      RESULT:\n        the Fact that &lt;the Java API&gt; was copyrightable\n      GIVEN:\n        the Fact that &lt;the Java language&gt; was a computer program\n        the Fact that &lt;the Java API&gt; was a set of application programming\n        interface declarations\n        the Fact that &lt;the Java API&gt; was an original work\n        the Fact that &lt;the Java API&gt; was a non-literal element of &lt;the Java\n        language&gt;\n        the Fact that &lt;the Java API&gt; was the expression of an idea\n        the Fact it is false that &lt;the Java API&gt; was essentially the only way\n        to express the idea that it embodied\n        the Fact that &lt;the Java API&gt; was creative\n        the Fact that it was possible to use &lt;the Java language&gt; without\n        copying &lt;the Java API&gt;\n      DESPITE:\n        the Fact that &lt;the Java API&gt; was a method of operation\n        the Fact that &lt;the Java API&gt; contained short phrases\n        the Fact that &lt;the Java API&gt; became so popular that it was the\n        industry standard\n        the Fact that there was a preexisting community of programmers\n        accustomed to using &lt;the Java API&gt;\n      GIVEN the ENACTMENT:\n        \"Copyright protection subsists, in accordance with this title, in\n        original works of authorship fixed in any tangible medium of\n        expression, now known or later developed, from which they can be\n        perceived, reproduced, or otherwise communicated, either directly or\n        with the aid of a machine or device.\" (Title 17, /us/usc/t17/s102/a)\n      DESPITE the ENACTMENTS:\n        \"In no case does copyright protection for an original work of\n        authorship extend to any\" (Title 17, /us/usc/t17/s102/b)\n        \"method of operation\" (Title 17, /us/usc/t17/s102/b)\n        \"The following are examples of works not subject to copyright and\n        applications for registration of such works cannot be entertained: (a)\n        Words and short phrases such as names, titles, and slogans;\" (Code of\n        Federal Regulations Title 37, /us/cfr/t37/s202.1)\nis that &lt;the Lotus menu command hierarchy&gt; is like &lt;the Java API&gt;\n</code></pre>\n<h2>Learning about AuthoritySpoke</h2>\n<p>You can find the example above and much more information about using AuthoritySpoke in the <a href=\"notebooks/introduction.ipynb\" rel=\"nofollow\">Introduction to AuthoritySpoke</a> Jupyter notebook.</p>\n<p>Use the button below to interact with the notebook online through Binder. If you use Binder, you'll be shown the directory structure of this repo. Navigate to the <code>notebooks</code> folder to find the tutorials.</p>\n<p><a href=\"https://mybinder.org/v2/gh/mscarey/AuthoritySpoke/master\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a></p>\n<p>You can also find static versions of the tutorial notebooks, the API documentation, and more <a href=\"https://authorityspoke.readthedocs.io/en/latest/\" rel=\"nofollow\">in the project documentation</a>.</p>\n<h2>Contributing to AuthoritySpoke</h2>\n<p>All participants are expected to follow the <a href=\"code_of_conduct.md\" rel=\"nofollow\">code of conduct</a>. AuthoritySpoke uses the <a href=\"https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\" rel=\"nofollow\">Contributor Covenant, version 1.4</a>.</p>\n<p>Submitting a pull request or other code contribution to AuthoritySpoke requires acceptance of a <a href=\"contributor_agreement.md\" rel=\"nofollow\">contributor license agreement</a>. The agreement's provisions are based on the <a href=\"http://www.apache.org/licenses/icla.pdf\" rel=\"nofollow\">Apache Software Foundation Individual Contributor License Agreement V2.0</a>.</p>\n\n          </div>"}, "last_serial": 6388564, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d8d92da2bf25342f902fd0c9d5be30bc", "sha256": "53175f377f4ab5148e8ad86564c2a84ca6442499c5cd2a4311538a92cc3185a0"}, "downloads": -1, "filename": "AuthoritySpoke-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d8d92da2bf25342f902fd0c9d5be30bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 44818, "upload_time": "2019-06-11T07:14:29", "upload_time_iso_8601": "2019-06-11T07:14:29.462637Z", "url": "https://files.pythonhosted.org/packages/b4/c1/f6bf15c7847be22ccf899f31c5f97723697e247c33e461d08905c8f88de8/AuthoritySpoke-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a052a97ce1dad9a375b0acdd2fe05ba", "sha256": "8778598da9eb19697b05a49ecfd065f899672cb1e1f89b39764438e411791e70"}, "downloads": -1, "filename": "AuthoritySpoke-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3a052a97ce1dad9a375b0acdd2fe05ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75981, "upload_time": "2019-06-11T07:14:32", "upload_time_iso_8601": "2019-06-11T07:14:32.042015Z", "url": "https://files.pythonhosted.org/packages/c2/69/b7c44333fb1fefd914cf296091f54d74f15747ac21c00e5ff8f31aa2e20b/AuthoritySpoke-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c26e314a787eae394ab353adb7e35a41", "sha256": "0d5607295cbf3ba249ee97051a17e01bc1eadd9d9fbd55ac25361216e52310bd"}, "downloads": -1, "filename": "AuthoritySpoke-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c26e314a787eae394ab353adb7e35a41", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 71801, "upload_time": "2019-09-13T02:39:28", "upload_time_iso_8601": "2019-09-13T02:39:28.957263Z", "url": "https://files.pythonhosted.org/packages/bd/17/dad77ef37b87761316145ccf134bf5444944f9965ce0b435ee94b990cf1a/AuthoritySpoke-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7baaf3d01d71575a105e6aff7457ee8", "sha256": "2846a65367ee9fd9c21d0c0b767c77ecf68c5e1ac76f56cf2fdd85548b7106c9"}, "downloads": -1, "filename": "AuthoritySpoke-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a7baaf3d01d71575a105e6aff7457ee8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102396, "upload_time": "2019-09-13T02:39:30", "upload_time_iso_8601": "2019-09-13T02:39:30.700007Z", "url": "https://files.pythonhosted.org/packages/20/16/7a5e5ef1039228a77ad9c4e1d9aa95acbf5f232a1e9ac58a2b6be7b4d00c/AuthoritySpoke-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "dd4dccb63c56eb666e9ac92eb94b4c2a", "sha256": "9669e37031ba0b62a925d91c04737311d3e301a4edb2d873cee2138f7a201df1"}, "downloads": -1, "filename": "AuthoritySpoke-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dd4dccb63c56eb666e9ac92eb94b4c2a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7, <3.8", "size": 90060, "upload_time": "2019-12-07T09:08:50", "upload_time_iso_8601": "2019-12-07T09:08:50.569403Z", "url": "https://files.pythonhosted.org/packages/52/dd/8aa840b5add103762c0970c37f6020070df5c1508cf0311b11fb500ef707/AuthoritySpoke-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d393afd774eb976c034fedafb555023a", "sha256": "b4c726eb2e411108fecf08adfbb387957bd15ff90ac88e86c7bf6a764399cc84"}, "downloads": -1, "filename": "AuthoritySpoke-0.3.0.tar.gz", "has_sig": false, "md5_digest": "d393afd774eb976c034fedafb555023a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <3.8", "size": 103079, "upload_time": "2019-12-07T09:08:51", "upload_time_iso_8601": "2019-12-07T09:08:51.965112Z", "url": "https://files.pythonhosted.org/packages/d0/33/1bd1b200c1ff3e8df88cb1d6225b3d1c4bc20693ea135ba6129285153ba8/AuthoritySpoke-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "c6ab3db4e71dae191c468926b3c63a8d", "sha256": "09fc9554869c5221ac3ed28411f8e869308260afff626f4675ff2060e5ed78dc"}, "downloads": -1, "filename": "AuthoritySpoke-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c6ab3db4e71dae191c468926b3c63a8d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7, <3.8", "size": 89604, "upload_time": "2020-01-02T00:47:03", "upload_time_iso_8601": "2020-01-02T00:47:03.253102Z", "url": "https://files.pythonhosted.org/packages/f0/ef/2bfec18984faa8560f419931f1d52ded9bd0ba5de227cf5fa3bcf928fe1b/AuthoritySpoke-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3dd855078d715c0fcb613ab686b7f459", "sha256": "7a1e2d4d0f5ef971c2f6810b17444b5238bf637cfa78756961a7fc6ded6bc113"}, "downloads": -1, "filename": "AuthoritySpoke-0.3.1.tar.gz", "has_sig": false, "md5_digest": "3dd855078d715c0fcb613ab686b7f459", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <3.8", "size": 106925, "upload_time": "2020-01-02T00:47:05", "upload_time_iso_8601": "2020-01-02T00:47:05.121962Z", "url": "https://files.pythonhosted.org/packages/98/a3/1536627dfee472ae4cbb83086633ffb10da1d7c2ac3d3359b7a1164a5fef/AuthoritySpoke-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "49d5d8f7d9c53f0b1f8b4d2bfa42b3c6", "sha256": "2736876c40931193af74fbe495281218f3830d9a45ef6a952922991debaa73f7"}, "downloads": -1, "filename": "AuthoritySpoke-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "49d5d8f7d9c53f0b1f8b4d2bfa42b3c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7, <3.8", "size": 90937, "upload_time": "2020-01-02T03:48:27", "upload_time_iso_8601": "2020-01-02T03:48:27.557014Z", "url": "https://files.pythonhosted.org/packages/60/ce/b66cd394a75d51a60fc13ac9425341821ac298bb421cb7b27f27f2ab8ea0/AuthoritySpoke-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8aa1203a818b38635be5384607f446e", "sha256": "a0a77fe1d0ed0e96235cf3e8f89f2cdd4dcfdd46c03a923153277a843042f6ee"}, "downloads": -1, "filename": "AuthoritySpoke-0.3.2.tar.gz", "has_sig": false, "md5_digest": "d8aa1203a818b38635be5384607f446e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <3.8", "size": 106562, "upload_time": "2020-01-02T03:48:29", "upload_time_iso_8601": "2020-01-02T03:48:29.469910Z", "url": "https://files.pythonhosted.org/packages/1a/f1/80cda71ae368156c130ebce74c8af99a02e1e9d779b6ddc7c47d8d8e16b4/AuthoritySpoke-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "3cb4a12ed983092a49cb44e1bbccc174", "sha256": "472236709e054fa4a6309cc9a346b0643d72dfc11c3e498bda59dd666a74d101"}, "downloads": -1, "filename": "AuthoritySpoke-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3cb4a12ed983092a49cb44e1bbccc174", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7, <3.8", "size": 93784, "upload_time": "2020-01-02T04:09:35", "upload_time_iso_8601": "2020-01-02T04:09:35.737173Z", "url": "https://files.pythonhosted.org/packages/8c/4a/480a77661827bc6977d1fea3091a84eadebe02185e964d6bdb7f0771e6da/AuthoritySpoke-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de9ea4ff4125f13ed3df98f4cf7ab591", "sha256": "3c1ad855acb9692024d841bf4446a8a3f70f9b7900d12f80d34f3a540733fb58"}, "downloads": -1, "filename": "AuthoritySpoke-0.3.3.tar.gz", "has_sig": false, "md5_digest": "de9ea4ff4125f13ed3df98f4cf7ab591", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <3.8", "size": 108847, "upload_time": "2020-01-02T04:09:37", "upload_time_iso_8601": "2020-01-02T04:09:37.428458Z", "url": "https://files.pythonhosted.org/packages/e6/ae/7b86b41088137a55c5f57857030aebb86afe095514f00b0b630ace9b0ae2/AuthoritySpoke-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "aa02fd2e90510e9a6820e906ad260599", "sha256": "5df43958d1f32c447b861a3ea3d4d47cd746a0db6a09eeb2989a3762ac127222"}, "downloads": -1, "filename": "AuthoritySpoke-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "aa02fd2e90510e9a6820e906ad260599", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7, <3.8", "size": 94234, "upload_time": "2020-01-02T22:41:18", "upload_time_iso_8601": "2020-01-02T22:41:18.516215Z", "url": "https://files.pythonhosted.org/packages/e2/a4/5552e180a659a59a902eceef246fc1200efe6f749f6f2db9548db1c1b246/AuthoritySpoke-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17b172bdd9149d6c48f13c2fb335c4b9", "sha256": "57b4c4713bdd139bc7bb3505678993ce918c6a3670f182a77d7bcf99406315ec"}, "downloads": -1, "filename": "AuthoritySpoke-0.3.4.tar.gz", "has_sig": false, "md5_digest": "17b172bdd9149d6c48f13c2fb335c4b9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <3.8", "size": 109532, "upload_time": "2020-01-02T22:41:20", "upload_time_iso_8601": "2020-01-02T22:41:20.065036Z", "url": "https://files.pythonhosted.org/packages/97/2a/8e10d2ee1790c13a57cd26ed5bf371c4b1466d079899ca887a05d280abb9/AuthoritySpoke-0.3.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aa02fd2e90510e9a6820e906ad260599", "sha256": "5df43958d1f32c447b861a3ea3d4d47cd746a0db6a09eeb2989a3762ac127222"}, "downloads": -1, "filename": "AuthoritySpoke-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "aa02fd2e90510e9a6820e906ad260599", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7, <3.8", "size": 94234, "upload_time": "2020-01-02T22:41:18", "upload_time_iso_8601": "2020-01-02T22:41:18.516215Z", "url": "https://files.pythonhosted.org/packages/e2/a4/5552e180a659a59a902eceef246fc1200efe6f749f6f2db9548db1c1b246/AuthoritySpoke-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17b172bdd9149d6c48f13c2fb335c4b9", "sha256": "57b4c4713bdd139bc7bb3505678993ce918c6a3670f182a77d7bcf99406315ec"}, "downloads": -1, "filename": "AuthoritySpoke-0.3.4.tar.gz", "has_sig": false, "md5_digest": "17b172bdd9149d6c48f13c2fb335c4b9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7, <3.8", "size": 109532, "upload_time": "2020-01-02T22:41:20", "upload_time_iso_8601": "2020-01-02T22:41:20.065036Z", "url": "https://files.pythonhosted.org/packages/97/2a/8e10d2ee1790c13a57cd26ed5bf371c4b1466d079899ca887a05d280abb9/AuthoritySpoke-0.3.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:22 2020"}