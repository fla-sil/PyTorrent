{"info": {"author": "Joey Sham", "author_email": "sham.joey@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Nested Print\n============\n\nA lightweight nested printing, for all your function within loops within\nfunction needs\n\nInstallation\n------------\n\nYou can install using pip with\n\n.. code:: bash\n\n    pip3 install --user nested_print\n\nUsage\n-----\n\nThis functions like an extension to the python print API, so you can use\n``end`` and ``sep`` and everything else listed in the `print\nAPI <https://docs.python.org/3/library/functions.html#print>`__. Only\nadditional fields are added:\n\n-  level\n-  nest\n\nBasic Example\n~~~~~~~~~~~~~\n\n.. code:: python\n\n    from nested_print import nprint\n\n    nprint(\"hi\", \"there\", level=2)              # prints \\t\\t hi there\n    nprint(\"hi\", \"there\", level=1, nest=\"--\")   # prints -- hi there\n\nMotivation Example\n~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from nested_print import nprint\n\n    nprint(\"here\")\n    for i in range(10):\n        nprint(i, level=1)\n        for j in range(3):\n            nprint(j, level=2)\n\nwhich prints\n\n.. code:: bash\n\n    here\n        0\n            0\n            1\n            2\n        1\n            0\n            1\n            2\n    ...\n\nso it becomes easier for me to debug\n\nAPI\n~~~\n\nlevel\n^^^^^\n\nThis describes how many \u201cnest\u201d or \u201cindentations\u201d to add. Setting\n``level=0`` is the same as using print. ``level=1`` indents the output\nonce, such that a ``\\t`` is added in front when printing.\n\nnest\n^^^^\n\nBy default, nest is set to ``\\t``. This value can be set if you want to\nmodify the indentation. For example, instead of using ``\\t``, you can\nset ``nest=\"  \"`` to just add 2 spaces as the indentation. Or set\n``nest=\"--\"`` to set two dashes for every indentation.\n\nVersions\n--------\n\n**1.0.x** \\* Original publish and its fixes\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/joeyism/py-nprint", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "nprint", "package_url": "https://pypi.org/project/nprint/", "platform": "", "project_url": "https://pypi.org/project/nprint/", "project_urls": {"Homepage": "https://github.com/joeyism/py-nprint"}, "release_url": "https://pypi.org/project/nprint/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "A lightweight nested printing, for all your function within loops within function needs", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A lightweight nested printing, for all your function within loops within\nfunction needs</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install using pip with</p>\n<pre>pip3 install --user nested_print\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>This functions like an extension to the python print API, so you can use\n<tt>end</tt> and <tt>sep</tt> and everything else listed in the <a href=\"https://docs.python.org/3/library/functions.html#print\" rel=\"nofollow\">print\nAPI</a>. Only\nadditional fields are added:</p>\n<ul>\n<li>level</li>\n<li>nest</li>\n</ul>\n<div id=\"basic-example\">\n<h3>Basic Example</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nested_print</span> <span class=\"kn\">import</span> <span class=\"n\">nprint</span>\n\n<span class=\"n\">nprint</span><span class=\"p\">(</span><span class=\"s2\">\"hi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"there\"</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>              <span class=\"c1\"># prints \\t\\t hi there</span>\n<span class=\"n\">nprint</span><span class=\"p\">(</span><span class=\"s2\">\"hi\"</span><span class=\"p\">,</span> <span class=\"s2\">\"there\"</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">nest</span><span class=\"o\">=</span><span class=\"s2\">\"--\"</span><span class=\"p\">)</span>   <span class=\"c1\"># prints -- hi there</span>\n</pre>\n</div>\n<div id=\"motivation-example\">\n<h3>Motivation Example</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nested_print</span> <span class=\"kn\">import</span> <span class=\"n\">nprint</span>\n\n<span class=\"n\">nprint</span><span class=\"p\">(</span><span class=\"s2\">\"here\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">nprint</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n        <span class=\"n\">nprint</span><span class=\"p\">(</span><span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre>\n<p>which prints</p>\n<pre>here\n    <span class=\"m\">0</span>\n        <span class=\"m\">0</span>\n        <span class=\"m\">1</span>\n        <span class=\"m\">2</span>\n    <span class=\"m\">1</span>\n        <span class=\"m\">0</span>\n        <span class=\"m\">1</span>\n        <span class=\"m\">2</span>\n...\n</pre>\n<p>so it becomes easier for me to debug</p>\n</div>\n<div id=\"api\">\n<h3>API</h3>\n<div id=\"level\">\n<h4>level</h4>\n<p>This describes how many \u201cnest\u201d or \u201cindentations\u201d to add. Setting\n<tt>level=0</tt> is the same as using print. <tt>level=1</tt> indents the output\nonce, such that a <tt>\\t</tt> is added in front when printing.</p>\n</div>\n<div id=\"nest\">\n<h4>nest</h4>\n<p>By default, nest is set to <tt>\\t</tt>. This value can be set if you want to\nmodify the indentation. For example, instead of using <tt>\\t</tt>, you can\nset <tt>nest=\"\u00a0 \"</tt> to just add 2 spaces as the indentation. Or set\n<tt><span class=\"pre\">nest=\"--\"</span></tt> to set two dashes for every indentation.</p>\n</div>\n</div>\n</div>\n<div id=\"versions\">\n<h2>Versions</h2>\n<p><strong>1.0.x</strong> * Original publish and its fixes</p>\n</div>\n\n          </div>"}, "last_serial": 3422595, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "bc72886f09e240929c349a4a5394e3e4", "sha256": "2ccd8e7b1cd82764bad39f66257dfe96694a6221a0859adeb79857d70c219ba6"}, "downloads": -1, "filename": "nprint-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bc72886f09e240929c349a4a5394e3e4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3894, "upload_time": "2017-12-17T05:06:44", "upload_time_iso_8601": "2017-12-17T05:06:44.760265Z", "url": "https://files.pythonhosted.org/packages/22/e7/15f03285cb140d2556ffbc4e5e16ada31246afb955f1951ac3bc953feb80/nprint-1.0.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bc72886f09e240929c349a4a5394e3e4", "sha256": "2ccd8e7b1cd82764bad39f66257dfe96694a6221a0859adeb79857d70c219ba6"}, "downloads": -1, "filename": "nprint-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bc72886f09e240929c349a4a5394e3e4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3894, "upload_time": "2017-12-17T05:06:44", "upload_time_iso_8601": "2017-12-17T05:06:44.760265Z", "url": "https://files.pythonhosted.org/packages/22/e7/15f03285cb140d2556ffbc4e5e16ada31246afb955f1951ac3bc953feb80/nprint-1.0.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:44:31 2020"}