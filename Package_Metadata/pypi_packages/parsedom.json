{"info": {"author": "Thomas Amland", "author_email": "thomas.amland@googlemail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Markup :: HTML", "Topic :: Text Processing :: Markup :: XML"], "description": "parsedom\n=========\n\nThis is a fork of `Common Functions and ParseDOM <https://github.com/HenrikDK/xbmc-common-plugin-functions>`_ for use outside of XBMC.\n\n\nGetting element content.\n-------------------------\n\n.. code:: python\n\n    from parsedom import parseDOM\n    link_html = \"<a href='bla.html'>Link Test</a>\"\n    ret = parseDOM(link_html, \"a\")\n    print repr(ret) # Prints ['Link Test']\n\n\n\nGetting an element attribute.\n-----------------------------\n\n.. code:: python\n\n    link_html = \"<a href='bla.html'>Link Test</a>\"\n    ret = parseDOM(link_html, \"a\", ret = \"href\")\n    print repr(ret) # Prints ['bla.html']\n\n\nGet element with matching attribute.\n---------------------------------------\n\n.. code:: python\n\n    link_html = \"<a href='bla1.html' id='link1'>Link Test1</a><a href='bla2.html' id='link2'>Link Test2</a><a href='bla3.html' id='link3'>Link Test3</a>\"\n    ret1 = parseDOM(link_html, \"a\", attrs = { \"id\": \"link1\" }, ret = \"href\")\n    ret2 = parseDOM(link_html, \"a\", attrs = { \"id\": \"link2\" })\n    ret3 = parseDOM(link_html, \"a\", attrs = { \"id\": \"link3\" }, ret = \"id\")\n    print repr(ret1) # Prints ['bla1.html']\n    print repr(ret2) # Prints ['Link Test2']\n    print repr(ret3) # Prints ['link3']\n\nWhen scraping sites it is prudent to scrape in steps, since real websites are often complicated.\n\nTake this example where you want to get all the user uploads.\n\n.. code:: html\n\n     &lt;div id=\"content\"&gt;\n      &lt;div id=\"sidebar\"&gt;\n       &lt;div id=\"latest\"&gt;\n        <a href=\"/video?8wxOVn99FTE\">Miley Cyrus - When I Look At You</a>&gt;br /&lt;\n        <a href=\"/video?46\">Puppet theater</a>&lt;br /&gt;\n        <a href=\"/video?98\">VBLOG #42</a>&lt;br /&gt;\n        <a href=\"/video?11\">Fourth upload</a>&lt;br /&gt;\n       &lt;/div&gt;\n      &lt;/div&gt;\n      &lt;div id=\"user\"&gt;\n       &lt;div id=\"uploads\"&gt;\n        <a href=\"/video?12\">First upload</a>&lt;br /&gt;\n        <a href=\"/video?23\">Second upload</a>&lt;br /&gt;\n        <a href=\"/video?34\">Third upload</a>&lt;br /&gt;\n        <a href=\"/video?41\">Fourth upload</a>&lt;br /&gt;\n       &lt;/div&gt;\n      &lt;/div&gt;\n     &lt;/div&gt;\n\n\nThe first step is to limit your search to the correct area.\n\nOne should always find the inner most DOM element that contains the needed data.\n\n.. code:: python\n\n    ret = parseDOM(html, \"div\", attrs = { \"id\": \"uploads\" })\n\n\nThe variable ret now contains\n\n.. code:: python\n\n    ['<a href=\"/video?12\">First upload</a>&lt;br /&gt;\n    <a href=\"/video?23\">Second upload</a>&lt;br /&gt;\n    <a href=\"/video?34\">Third upload</a>&lt;br /&gt;\n    <a href=\"/video?41\">Fourth upload</a>&lt;br /&gt;']\n\nAnd now we get the video url.\n\n.. code:: python\n\n    videos = parseDOM(ret, \"a\", ret = \"href\")\n    print repr(videos) # Prints [ \"video?12\", \"video?23\", \"video?34\", \"video?41\" ]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tamland/parsedom", "keywords": null, "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "parsedom", "package_url": "https://pypi.org/project/parsedom/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/parsedom/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/tamland/parsedom"}, "release_url": "https://pypi.org/project/parsedom/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "A fast DOM parser", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a fork of <a href=\"https://github.com/HenrikDK/xbmc-common-plugin-functions\" rel=\"nofollow\">Common Functions and ParseDOM</a> for use outside of XBMC.</p>\n<div id=\"getting-element-content\">\n<h2>Getting element content.</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">parsedom</span> <span class=\"kn\">import</span> <span class=\"n\">parseDOM</span>\n<span class=\"n\">link_html</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;a href='bla.html'&gt;Link Test&lt;/a&gt;\"</span>\n<span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">parseDOM</span><span class=\"p\">(</span><span class=\"n\">link_html</span><span class=\"p\">,</span> <span class=\"s2\">\"a\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span> <span class=\"c1\"># Prints ['Link Test']</span>\n</pre>\n</div>\n<div id=\"getting-an-element-attribute\">\n<h2>Getting an element attribute.</h2>\n<pre><span class=\"n\">link_html</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;a href='bla.html'&gt;Link Test&lt;/a&gt;\"</span>\n<span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">parseDOM</span><span class=\"p\">(</span><span class=\"n\">link_html</span><span class=\"p\">,</span> <span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"s2\">\"href\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">)</span> <span class=\"c1\"># Prints ['bla.html']</span>\n</pre>\n</div>\n<div id=\"get-element-with-matching-attribute\">\n<h2>Get element with matching attribute.</h2>\n<pre><span class=\"n\">link_html</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;a href='bla1.html' id='link1'&gt;Link Test1&lt;/a&gt;&lt;a href='bla2.html' id='link2'&gt;Link Test2&lt;/a&gt;&lt;a href='bla3.html' id='link3'&gt;Link Test3&lt;/a&gt;\"</span>\n<span class=\"n\">ret1</span> <span class=\"o\">=</span> <span class=\"n\">parseDOM</span><span class=\"p\">(</span><span class=\"n\">link_html</span><span class=\"p\">,</span> <span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">attrs</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"link1\"</span> <span class=\"p\">},</span> <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"s2\">\"href\"</span><span class=\"p\">)</span>\n<span class=\"n\">ret2</span> <span class=\"o\">=</span> <span class=\"n\">parseDOM</span><span class=\"p\">(</span><span class=\"n\">link_html</span><span class=\"p\">,</span> <span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">attrs</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"link2\"</span> <span class=\"p\">})</span>\n<span class=\"n\">ret3</span> <span class=\"o\">=</span> <span class=\"n\">parseDOM</span><span class=\"p\">(</span><span class=\"n\">link_html</span><span class=\"p\">,</span> <span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">attrs</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"link3\"</span> <span class=\"p\">},</span> <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"s2\">\"id\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">ret1</span><span class=\"p\">)</span> <span class=\"c1\"># Prints ['bla1.html']</span>\n<span class=\"nb\">print</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">ret2</span><span class=\"p\">)</span> <span class=\"c1\"># Prints ['Link Test2']</span>\n<span class=\"nb\">print</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">ret3</span><span class=\"p\">)</span> <span class=\"c1\"># Prints ['link3']</span>\n</pre>\n<p>When scraping sites it is prudent to scrape in steps, since real websites are often complicated.</p>\n<p>Take this example where you want to get all the user uploads.</p>\n<pre><span class=\"ni\">&amp;lt;</span>div id=\"content\"<span class=\"ni\">&amp;gt;</span>\n <span class=\"ni\">&amp;lt;</span>div id=\"sidebar\"<span class=\"ni\">&amp;gt;</span>\n  <span class=\"ni\">&amp;lt;</span>div id=\"latest\"<span class=\"ni\">&amp;gt;</span>\n   <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"/video?8wxOVn99FTE\"</span><span class=\"p\">&gt;</span>Miley Cyrus - When I Look At You<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span><span class=\"ni\">&amp;gt;</span>br /<span class=\"ni\">&amp;lt;</span>\n   <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"/video?46\"</span><span class=\"p\">&gt;</span>Puppet theater<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span><span class=\"ni\">&amp;lt;</span>br /<span class=\"ni\">&amp;gt;</span>\n   <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"/video?98\"</span><span class=\"p\">&gt;</span>VBLOG #42<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span><span class=\"ni\">&amp;lt;</span>br /<span class=\"ni\">&amp;gt;</span>\n   <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"/video?11\"</span><span class=\"p\">&gt;</span>Fourth upload<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span><span class=\"ni\">&amp;lt;</span>br /<span class=\"ni\">&amp;gt;</span>\n  <span class=\"ni\">&amp;lt;</span>/div<span class=\"ni\">&amp;gt;</span>\n <span class=\"ni\">&amp;lt;</span>/div<span class=\"ni\">&amp;gt;</span>\n <span class=\"ni\">&amp;lt;</span>div id=\"user\"<span class=\"ni\">&amp;gt;</span>\n  <span class=\"ni\">&amp;lt;</span>div id=\"uploads\"<span class=\"ni\">&amp;gt;</span>\n   <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"/video?12\"</span><span class=\"p\">&gt;</span>First upload<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span><span class=\"ni\">&amp;lt;</span>br /<span class=\"ni\">&amp;gt;</span>\n   <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"/video?23\"</span><span class=\"p\">&gt;</span>Second upload<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span><span class=\"ni\">&amp;lt;</span>br /<span class=\"ni\">&amp;gt;</span>\n   <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"/video?34\"</span><span class=\"p\">&gt;</span>Third upload<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span><span class=\"ni\">&amp;lt;</span>br /<span class=\"ni\">&amp;gt;</span>\n   <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"/video?41\"</span><span class=\"p\">&gt;</span>Fourth upload<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span><span class=\"ni\">&amp;lt;</span>br /<span class=\"ni\">&amp;gt;</span>\n  <span class=\"ni\">&amp;lt;</span>/div<span class=\"ni\">&amp;gt;</span>\n <span class=\"ni\">&amp;lt;</span>/div<span class=\"ni\">&amp;gt;</span>\n<span class=\"ni\">&amp;lt;</span>/div<span class=\"ni\">&amp;gt;</span>\n</pre>\n<p>The first step is to limit your search to the correct area.</p>\n<p>One should always find the inner most DOM element that contains the needed data.</p>\n<pre><span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">parseDOM</span><span class=\"p\">(</span><span class=\"n\">html</span><span class=\"p\">,</span> <span class=\"s2\">\"div\"</span><span class=\"p\">,</span> <span class=\"n\">attrs</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"uploads\"</span> <span class=\"p\">})</span>\n</pre>\n<p>The variable ret now contains</p>\n<pre><span class=\"p\">[</span><span class=\"s1\">'&lt;a href=\"/video?12\"&gt;First upload&lt;/a&gt;&amp;lt;br /&amp;gt;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">a</span> <span class=\"n\">href</span><span class=\"o\">=</span><span class=\"s2\">\"/video?23\"</span><span class=\"o\">&gt;</span><span class=\"n\">Second</span> <span class=\"n\">upload</span><span class=\"o\">&lt;/</span><span class=\"n\">a</span><span class=\"o\">&gt;&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"n\">br</span> <span class=\"o\">/&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">a</span> <span class=\"n\">href</span><span class=\"o\">=</span><span class=\"s2\">\"/video?34\"</span><span class=\"o\">&gt;</span><span class=\"n\">Third</span> <span class=\"n\">upload</span><span class=\"o\">&lt;/</span><span class=\"n\">a</span><span class=\"o\">&gt;&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"n\">br</span> <span class=\"o\">/&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span>\n<span class=\"o\">&lt;</span><span class=\"n\">a</span> <span class=\"n\">href</span><span class=\"o\">=</span><span class=\"s2\">\"/video?41\"</span><span class=\"o\">&gt;</span><span class=\"n\">Fourth</span> <span class=\"n\">upload</span><span class=\"o\">&lt;/</span><span class=\"n\">a</span><span class=\"o\">&gt;&amp;</span><span class=\"n\">lt</span><span class=\"p\">;</span><span class=\"n\">br</span> <span class=\"o\">/&amp;</span><span class=\"n\">gt</span><span class=\"p\">;</span><span class=\"s1\">']</span>\n</pre>\n<p>And now we get the video url.</p>\n<pre><span class=\"n\">videos</span> <span class=\"o\">=</span> <span class=\"n\">parseDOM</span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"s2\">\"href\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">videos</span><span class=\"p\">)</span> <span class=\"c1\"># Prints [ \"video?12\", \"video?23\", \"video?34\", \"video?41\" ]</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1039274, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "4247bc3bab09a6166773cf55d398ce2c", "sha256": "09c15a77c9115127d38b330bc8d688506d5282b4ed0aaa910604587f23ca43b8"}, "downloads": -1, "filename": "parsedom-1.0.0.tar.gz", "has_sig": false, "md5_digest": "4247bc3bab09a6166773cf55d398ce2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16789, "upload_time": "2014-03-24T12:56:40", "upload_time_iso_8601": "2014-03-24T12:56:40.932440Z", "url": "https://files.pythonhosted.org/packages/b2/cb/dd97f8e212095cb947b40cbc3748d05a003b0bfe1ca85a1a4a24548305ae/parsedom-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4247bc3bab09a6166773cf55d398ce2c", "sha256": "09c15a77c9115127d38b330bc8d688506d5282b4ed0aaa910604587f23ca43b8"}, "downloads": -1, "filename": "parsedom-1.0.0.tar.gz", "has_sig": false, "md5_digest": "4247bc3bab09a6166773cf55d398ce2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16789, "upload_time": "2014-03-24T12:56:40", "upload_time_iso_8601": "2014-03-24T12:56:40.932440Z", "url": "https://files.pythonhosted.org/packages/b2/cb/dd97f8e212095cb947b40cbc3748d05a003b0bfe1ca85a1a4a24548305ae/parsedom-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:21 2020"}