{"info": {"author": "Alessandro Molina", "author_email": "amol@turbogears.org", "bugtrack_url": null, "classifiers": ["Framework :: TurboGears"], "description": "About tgext.matplotrender\r\n-------------------------\r\n\r\n.. image:: https://travis-ci.org/amol-/tgext.matplotrender.png\r\n    :target: https://travis-ci.org/amol-/tgext.matplotrender\r\n\r\n.. image:: https://coveralls.io/repos/amol-/tgext.matplotrender/badge.png\r\n    :target: https://coveralls.io/r/amol-/tgext.matplotrender\r\n\r\n.. image:: https://img.shields.io/:license-mit-blue.svg?style=flat-square\r\n    :target: https://pypi.python.org/pypi/tgext.matplotrender\r\n\r\ntgext.matplotrender is a TurboGears2 extension that provides a Rendering Engine\r\nfor MatplotLib Figures.\r\n\r\nInstalling\r\n----------\r\n\r\ntgext.matplotrender can be installed from pypi::\r\n\r\n    pip install tgext.matplotrender\r\n\r\nshould just work for most of the users.\r\n\r\nEnabling\r\n--------\r\n\r\nTo enable tgext.matplotrender add the ``matplotfig`` renderer to your\r\nconfiguration:\r\n\r\n.. code-block:: python\r\n\r\n    base_config.renderers.append('matplotfig')\r\n\r\nand plug the rendering engine inside your ``config/app_cfg.py``:\r\n\r\n.. code-block:: python\r\n\r\n    import tgext.matplotrender\r\n    tgext.matplotrender.plugme(base_config)\r\n\r\nUsage\r\n-----\r\n\r\nUsing tgext.matplotrender is as simple as exposing an action with\r\nthe ``matplotfig`` template and returning the figure itself inside\r\nthe ``fig`` key of action returned dictionary.\r\n\r\nGiven the following figure:\r\n\r\n.. code-block:: python\r\n\r\n    def _make_fig():\r\n        fig = matplotlib.figure.Figure(figsize=(9, 6))\r\n        fig.Name = \"Sinewave\"\r\n        ax = fig.add_subplot(111)\r\n        ax.set_xlabel(\"angle\")\r\n        ax.set_ylabel(\"amplitude\")\r\n        t = numpy.arange(0.0, 2.0, 0.01)\r\n        s1 = numpy.sin(2 * numpy.pi * t)\r\n        ax.plot(t, s1, color=\"k\")\r\n        return fig\r\n\r\nIt can be exposed through TurboGears actions as:\r\n\r\n.. code-block:: python\r\n\r\n    class RootController(TGController):\r\n        @expose('matplotfig')\r\n        def figure(self, *args, **kwargs):\r\n            return dict(fig=_make_fig())\r\n\r\n        @expose('matplotfig', render_params=dict(dpi=36))\r\n        def lowres(self, *args, **kwargs):\r\n            return dict(fig=_make_fig())\r\n\r\n        @expose('matplotfig')\r\n        def customres(self, *args, **kwargs):\r\n            options = {}\r\n            try:\r\n                options['dpi'] = int(kwargs['dpi'])\r\n            except:\r\n                pass\r\n            return dict(fig=_make_fig(), **options)\r\n\r\nAny other value provided in the dictionary will be used as\r\na ``print_figure`` argument in ``matplotlib``", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/amol-/tgext.matplotrender", "keywords": "turbogears2.extension", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tgext.matplotrender", "package_url": "https://pypi.org/project/tgext.matplotrender/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tgext.matplotrender/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/amol-/tgext.matplotrender"}, "release_url": "https://pypi.org/project/tgext.matplotrender/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Renderer to expose matplotlib figures", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about-tgext-matplotrender\">\n<h2>About tgext.matplotrender</h2>\n<a href=\"https://travis-ci.org/amol-/tgext.matplotrender\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/amol-/tgext.matplotrender.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db82c2ec16d0459c5b3dc541088ad87665d45daa/68747470733a2f2f7472617669732d63692e6f72672f616d6f6c2d2f74676578742e6d6174706c6f7472656e6465722e706e67\"></a>\n<a href=\"https://coveralls.io/r/amol-/tgext.matplotrender\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/amol-/tgext.matplotrender/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/464257302d4dd31ddd6bd88ee0e9c9437461d0f1/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f616d6f6c2d2f74676578742e6d6174706c6f7472656e6465722f62616467652e706e67\"></a>\n<a href=\"https://pypi.python.org/pypi/tgext.matplotrender\" rel=\"nofollow\"><img alt=\"https://img.shields.io/:license-mit-blue.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4e5138d142be9d4e321df7416f74d51bb4474f73/68747470733a2f2f696d672e736869656c64732e696f2f3a6c6963656e73652d6d69742d626c75652e7376673f7374796c653d666c61742d737175617265\"></a>\n<p>tgext.matplotrender is a TurboGears2 extension that provides a Rendering Engine\nfor MatplotLib Figures.</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>tgext.matplotrender can be installed from pypi:</p>\n<pre>pip install tgext.matplotrender\n</pre>\n<p>should just work for most of the users.</p>\n</div>\n<div id=\"enabling\">\n<h2>Enabling</h2>\n<p>To enable tgext.matplotrender add the <tt>matplotfig</tt> renderer to your\nconfiguration:</p>\n<pre><span class=\"n\">base_config</span><span class=\"o\">.</span><span class=\"n\">renderers</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">'matplotfig'</span><span class=\"p\">)</span>\n</pre>\n<p>and plug the rendering engine inside your <tt>config/app_cfg.py</tt>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tgext.matplotrender</span>\n<span class=\"n\">tgext</span><span class=\"o\">.</span><span class=\"n\">matplotrender</span><span class=\"o\">.</span><span class=\"n\">plugme</span><span class=\"p\">(</span><span class=\"n\">base_config</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Using tgext.matplotrender is as simple as exposing an action with\nthe <tt>matplotfig</tt> template and returning the figure itself inside\nthe <tt>fig</tt> key of action returned dictionary.</p>\n<p>Given the following figure:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">_make_fig</span><span class=\"p\">():</span>\n    <span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">matplotlib</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"o\">.</span><span class=\"n\">Figure</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">))</span>\n    <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">Name</span> <span class=\"o\">=</span> <span class=\"s2\">\"Sinewave\"</span>\n    <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">add_subplot</span><span class=\"p\">(</span><span class=\"mi\">111</span><span class=\"p\">)</span>\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s2\">\"angle\"</span><span class=\"p\">)</span>\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_ylabel</span><span class=\"p\">(</span><span class=\"s2\">\"amplitude\"</span><span class=\"p\">)</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">)</span>\n    <span class=\"n\">s1</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">*</span> <span class=\"n\">t</span><span class=\"p\">)</span>\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">s1</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s2\">\"k\"</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">fig</span>\n</pre>\n<p>It can be exposed through TurboGears actions as:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">RootController</span><span class=\"p\">(</span><span class=\"n\">TGController</span><span class=\"p\">):</span>\n    <span class=\"nd\">@expose</span><span class=\"p\">(</span><span class=\"s1\">'matplotfig'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">figure</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">fig</span><span class=\"o\">=</span><span class=\"n\">_make_fig</span><span class=\"p\">())</span>\n\n    <span class=\"nd\">@expose</span><span class=\"p\">(</span><span class=\"s1\">'matplotfig'</span><span class=\"p\">,</span> <span class=\"n\">render_params</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">dpi</span><span class=\"o\">=</span><span class=\"mi\">36</span><span class=\"p\">))</span>\n    <span class=\"k\">def</span> <span class=\"nf\">lowres</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">fig</span><span class=\"o\">=</span><span class=\"n\">_make_fig</span><span class=\"p\">())</span>\n\n    <span class=\"nd\">@expose</span><span class=\"p\">(</span><span class=\"s1\">'matplotfig'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">customres</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">options</span><span class=\"p\">[</span><span class=\"s1\">'dpi'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s1\">'dpi'</span><span class=\"p\">])</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">return</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">fig</span><span class=\"o\">=</span><span class=\"n\">_make_fig</span><span class=\"p\">(),</span> <span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n</pre>\n<p>Any other value provided in the dictionary will be used as\na <tt>print_figure</tt> argument in <tt>matplotlib</tt></p>\n</div>\n\n          </div>"}, "last_serial": 2243195, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ab21cade25152d7c7c53cd32846959dd", "sha256": "6defa801397021524e25f9b59ed028b61e051f238a8dd5d343569254a97ec67f"}, "downloads": -1, "filename": "tgext.matplotrender-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ab21cade25152d7c7c53cd32846959dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3345, "upload_time": "2016-06-06T20:52:28", "upload_time_iso_8601": "2016-06-06T20:52:28.705567Z", "url": "https://files.pythonhosted.org/packages/a2/59/83b6a484ee7fa8e75a1213184e8d44b1892813e6ef27643736ececf7e737/tgext.matplotrender-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ab21cade25152d7c7c53cd32846959dd", "sha256": "6defa801397021524e25f9b59ed028b61e051f238a8dd5d343569254a97ec67f"}, "downloads": -1, "filename": "tgext.matplotrender-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ab21cade25152d7c7c53cd32846959dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3345, "upload_time": "2016-06-06T20:52:28", "upload_time_iso_8601": "2016-06-06T20:52:28.705567Z", "url": "https://files.pythonhosted.org/packages/a2/59/83b6a484ee7fa8e75a1213184e8d44b1892813e6ef27643736ececf7e737/tgext.matplotrender-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:14 2020"}