{"info": {"author": "Souheil Chelfouh", "author_email": "souheil@chelfouh.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Other Audience", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "``menhir.contenttype.folder`` provides a folderish content for\n`Dolmen` based `Grok` applications. This folderish type has several\nways to display itself, allowing the editor to chose wether it should\ndisplay a summary of the content or a structured and pagined rendering.\n\nSchema\n======\n\nA `Folder` does not have a particular schema. It uses only the\n`IDescriptiveSchema` from ``dolmen.app.content``, exposing only the\n`title` and `description` attributes::\n\n    >>> from dolmen.content import schema\n    >>> from menhir.contenttype.folder import Folder\n    >>> print schema.bind().get(Folder)\n    [<InterfaceClass dolmen.app.content.interfaces.IDescriptiveSchema>]\n\nThe instanciation provides a fully functionnal folderish object::\n\n    >>> from zope.container.interfaces import IContainer\n    >>> folder = Folder(title=u\"Some title\")\n    >>> IContainer.providedBy(folder)\n    True\n\nThe `Folder` class inherits from the ``grokcore.content``\nOrderedContainer: the keys of container are orderable (read mutable)::\n\n    >>> from grokcore.content import OrderedContainer\n    >>> isinstance(folder, OrderedContainer)\n    True\n\n\nTest in-situ\n============\n\nSetup the environment\n\n    >>> from zope.component.hooks import getSite\n    >>> root = getSite()\n\nCreate a Folder.\n\n    >>> from menhir.contenttype.folder import Folder\n    >>> root[u'folder'] = Folder()\n    >>> folder = root.get(u'folder')\n\nCreate a dummy content type, so that we can put dummy content in the folder.\n\n    >>> import dolmen.content as content\n    >>> class Dummy(content.Content):\n    ...     content.name(\"Dummy\")\n    ...     # content.icon(\"dummy.png\")\n\nFill the folder with some dummies.\n\n    >>> folder[u'books'] = Dummy(title=u\"Books\")\n    >>> folder[u'films'] = Dummy(title=u\"Films\")\n    >>> folder[u'music'] = Dummy(title=u\"Music\")\n\n    >>> folder[u'subfolder'] = Folder(title=u\"SubFolder\")\n    >>> folder[u'subfolder'][u'subfolder2'] = Folder(title=u'SubFolder Two')\n    >>> folder[u'subfolder'][u'bogus'] = Dummy(title=u'Bogus') \n    >>> folder[u'subfolder'][u'subfolder2'][u'hocus'] = Dummy(title=u\"hocus\")\n\nVerify the contents are correct.\n\n    >>> dict([x for x in folder.items()])\n    {u'films': <menhir.contenttype.folder.Dummy object at ...>,\n     u'books': <menhir.contenttype.folder.Dummy object at ...>,\n     u'music': <menhir.contenttype.folder.Dummy object at ...>,\n     u'subfolder': <menhir.contenttype.folder.folder.Folder object at ...>}\n\nLet's take a look at it from the browser's point-of-view.\n\n    >>> from zope.publisher.browser import TestRequest\n    >>> from zope.component import getMultiAdapter\n    >>> request = TestRequest()\n\n    >>> view = getMultiAdapter((folder, request), name=folder.selected_view)\n    >>> view.__class__.__name__\n    'FolderListing'\n\n    >>> view.update()\n    >>> print view.render()\n    <div class=\"folder-listing\">\n      <h1>Content of the folder</h1>\n      <div><table class=\"listing sortable\">\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Modification date</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"even\">\n          <td><a href=\"http://127.0.0.1/folder/books\">books</a></td>\n          <td></td>\n        </tr>\n        <tr class=\"odd\">\n          <td><a href=\"http://127.0.0.1/folder/films\">films</a></td>\n          <td></td>\n        </tr>\n        <tr class=\"even\">\n          <td><a href=\"http://127.0.0.1/folder/music\">music</a></td>\n          <td></td>\n        </tr>\n        <tr class=\"odd\">\n          <td><img src=\"http://127.0.0.1/@@/menhir-contenttype-folder-folder-IFolder-icon.png\" alt=\"Folder\" width=\"16\" height=\"16\" border=\"0\" /> <a href=\"http://127.0.0.1/folder/subfolder\">SubFolder</a></td>\n          <td></td>\n        </tr>\n      </tbody>\n    </table></div>\n    </div>\n\nWe should have a look at the default view (index) as well.\n\n    >>> view = getMultiAdapter((folder, request), name='index')\n    >>> view.__class__.__name__\n    'SelectedView'\n\n    >>> view.update()\n    >>> print view.render()\n    <div class=\"folder-listing\">\n      <h1>Content of the folder</h1>\n      <div><table class=\"listing sortable\">\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Modification date</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"even\">\n          <td><a href=\"http://127.0.0.1/folder/books\">books</a></td>\n          <td></td>\n        </tr>\n        <tr class=\"odd\">\n          <td><a href=\"http://127.0.0.1/folder/films\">films</a></td>\n          <td></td>\n        </tr>\n        <tr class=\"even\">\n          <td><a href=\"http://127.0.0.1/folder/music\">music</a></td>\n          <td></td>\n        </tr>\n        <tr class=\"odd\">\n          <td><img src=\"http://127.0.0.1/@@/menhir-contenttype-folder-folder-IFolder-icon.png\" alt=\"Folder\" width=\"16\" height=\"16\" border=\"0\" /> <a href=\"http://127.0.0.1/folder/subfolder\">SubFolder</a></td>\n          <td></td>\n        </tr>\n      </tbody>\n    </table></div>\n    </div>\n\nLastly, let's change the folder layout to the full rendering view\nprovided in this package.\n\n    >>> folder.selected_view = u'compositeview'\n    >>> view = getMultiAdapter((folder, request), name=folder.selected_view)\n    >>> view.__class__.__name__\n    'CompositeView'\n\n    >>> view.update()\n    >>> print view.content()\n    <div class=\"composite-view\">\n      <h1></h1>\n      <div class=\"composite-body sequence-block\">\n        <div><form action=\"http://127.0.0.1\" method=\"post\"\n          enctype=\"multipart/form-data\">\n      <h1>books</h1>\n    </form>\n    </div>\n      </div>\n      <div class=\"composite-body sequence-block\">\n        <div><form action=\"http://127.0.0.1\" method=\"post\"\n          enctype=\"multipart/form-data\">\n      <h1>films</h1>\n    </form>\n    </div>\n      </div>\n      <div class=\"composite-body sequence-block\">\n        <div><form action=\"http://127.0.0.1\" method=\"post\"\n          enctype=\"multipart/form-data\">\n      <h1>music</h1>\n    </form>\n    </div>\n      </div>\n      <div class=\"composite-body sequence-block\">\n        <div><div class=\"folder-listing\">\n      <h1>Content of the folder</h1>\n      <div><table class=\"listing sortable\">\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Modification date</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr class=\"even\">\n          <td><img src=\"http://127.0.0.1/@@/menhir-contenttype-folder-folder-IFolder-icon.png\" alt=\"Folder\" width=\"16\" height=\"16\" border=\"0\" /> <a href=\"http://127.0.0.1/folder/subfolder/subfolder2\">SubFolder Two</a></td>\n          <td></td>\n        </tr>\n        <tr class=\"odd\">\n          <td><a href=\"http://127.0.0.1/folder/subfolder/bogus\">bogus</a></td>\n          <td></td>\n        </tr>\n      </tbody>\n    </table></div>\n    <BLANKLINE>\n    </div>\n    </div>\n      </div>\n    </div>\n\nChangelog\n=========\n\n0.4 (2011-02-14)\n----------------\n\n* The schema no longer includes `IViewSelector`. This prevents the\n  field from showing up in the auto-generated forms.\n\n* `IFolder` now inherits from ``zope.container`` `IContainer`.\n\n* Consolidated the \"composite view\" using a normalized way to get the\n  default view name. We now test if the view exists and if it's a\n  valid `IPage`.\n\n\n0.3 (2011-02-14)\n----------------\n\n* Updated for the latest changes in ``dolmen.content``,\n  ``dolmen.app.content`` and ``dolmen.app.container``.\n\n* Cleaned up dependencies.\n\n\n0.2 (2010-07-27)\n----------------\n\n* Corrected packaging (missing icon)\n\n\n0.1 (2010-07-19)\n----------------\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "http://pypi.python.org/pypi/menhir.contenttype.folder", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.dolmen-project.org/", "keywords": "Grok Zope3 CMS Dolmen", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "menhir.contenttype.folder", "package_url": "https://pypi.org/project/menhir.contenttype.folder/", "platform": "Any", "project_url": "https://pypi.org/project/menhir.contenttype.folder/", "project_urls": {"Download": "http://pypi.python.org/pypi/menhir.contenttype.folder", "Homepage": "http://www.dolmen-project.org/"}, "release_url": "https://pypi.org/project/menhir.contenttype.folder/0.4/", "requires_dist": null, "requires_python": null, "summary": "Dolmen contenttype extension : folder", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>menhir.contenttype.folder</tt> provides a folderish content for\n<cite>Dolmen</cite> based <cite>Grok</cite> applications. This folderish type has several\nways to display itself, allowing the editor to chose wether it should\ndisplay a summary of the content or a structured and pagined rendering.</p>\n<div id=\"schema\">\n<h2>Schema</h2>\n<p>A <cite>Folder</cite> does not have a particular schema. It uses only the\n<cite>IDescriptiveSchema</cite> from <tt>dolmen.app.content</tt>, exposing only the\n<cite>title</cite> and <cite>description</cite> attributes:</p>\n<pre>&gt;&gt;&gt; from dolmen.content import schema\n&gt;&gt;&gt; from menhir.contenttype.folder import Folder\n&gt;&gt;&gt; print schema.bind().get(Folder)\n[&lt;InterfaceClass dolmen.app.content.interfaces.IDescriptiveSchema&gt;]\n</pre>\n<p>The instanciation provides a fully functionnal folderish object:</p>\n<pre>&gt;&gt;&gt; from zope.container.interfaces import IContainer\n&gt;&gt;&gt; folder = Folder(title=u\"Some title\")\n&gt;&gt;&gt; IContainer.providedBy(folder)\nTrue\n</pre>\n<p>The <cite>Folder</cite> class inherits from the <tt>grokcore.content</tt>\nOrderedContainer: the keys of container are orderable (read mutable):</p>\n<pre>&gt;&gt;&gt; from grokcore.content import OrderedContainer\n&gt;&gt;&gt; isinstance(folder, OrderedContainer)\nTrue\n</pre>\n</div>\n<div id=\"test-in-situ\">\n<h2>Test in-situ</h2>\n<p>Setup the environment</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from zope.component.hooks import getSite\n&gt;&gt;&gt; root = getSite()\n</pre>\n</blockquote>\n<p>Create a Folder.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from menhir.contenttype.folder import Folder\n&gt;&gt;&gt; root[u'folder'] = Folder()\n&gt;&gt;&gt; folder = root.get(u'folder')\n</pre>\n</blockquote>\n<p>Create a dummy content type, so that we can put dummy content in the folder.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import dolmen.content as content\n&gt;&gt;&gt; class Dummy(content.Content):\n...     content.name(\"Dummy\")\n...     # content.icon(\"dummy.png\")\n</pre>\n</blockquote>\n<p>Fill the folder with some dummies.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; folder[u'books'] = Dummy(title=u\"Books\")\n&gt;&gt;&gt; folder[u'films'] = Dummy(title=u\"Films\")\n&gt;&gt;&gt; folder[u'music'] = Dummy(title=u\"Music\")\n</pre>\n<pre>&gt;&gt;&gt; folder[u'subfolder'] = Folder(title=u\"SubFolder\")\n&gt;&gt;&gt; folder[u'subfolder'][u'subfolder2'] = Folder(title=u'SubFolder Two')\n&gt;&gt;&gt; folder[u'subfolder'][u'bogus'] = Dummy(title=u'Bogus')\n&gt;&gt;&gt; folder[u'subfolder'][u'subfolder2'][u'hocus'] = Dummy(title=u\"hocus\")\n</pre>\n</blockquote>\n<p>Verify the contents are correct.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; dict([x for x in folder.items()])\n{u'films': &lt;menhir.contenttype.folder.Dummy object at ...&gt;,\n u'books': &lt;menhir.contenttype.folder.Dummy object at ...&gt;,\n u'music': &lt;menhir.contenttype.folder.Dummy object at ...&gt;,\n u'subfolder': &lt;menhir.contenttype.folder.folder.Folder object at ...&gt;}\n</pre>\n</blockquote>\n<p>Let\u2019s take a look at it from the browser\u2019s point-of-view.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from zope.publisher.browser import TestRequest\n&gt;&gt;&gt; from zope.component import getMultiAdapter\n&gt;&gt;&gt; request = TestRequest()\n</pre>\n<pre>&gt;&gt;&gt; view = getMultiAdapter((folder, request), name=folder.selected_view)\n&gt;&gt;&gt; view.__class__.__name__\n'FolderListing'\n</pre>\n<pre>&gt;&gt;&gt; view.update()\n&gt;&gt;&gt; print view.render()\n&lt;div class=\"folder-listing\"&gt;\n  &lt;h1&gt;Content of the folder&lt;/h1&gt;\n  &lt;div&gt;&lt;table class=\"listing sortable\"&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th&gt;Title&lt;/th&gt;\n      &lt;th&gt;Modification date&lt;/th&gt;\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    &lt;tr class=\"even\"&gt;\n      &lt;td&gt;&lt;a href=\"http://127.0.0.1/folder/books\"&gt;books&lt;/a&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr class=\"odd\"&gt;\n      &lt;td&gt;&lt;a href=\"http://127.0.0.1/folder/films\"&gt;films&lt;/a&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr class=\"even\"&gt;\n      &lt;td&gt;&lt;a href=\"http://127.0.0.1/folder/music\"&gt;music&lt;/a&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr class=\"odd\"&gt;\n      &lt;td&gt;&lt;img src=\"http://127.0.0.1/@@/menhir-contenttype-folder-folder-IFolder-icon.png\" alt=\"Folder\" width=\"16\" height=\"16\" border=\"0\" /&gt; &lt;a href=\"http://127.0.0.1/folder/subfolder\"&gt;SubFolder&lt;/a&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;&lt;/div&gt;\n&lt;/div&gt;\n</pre>\n</blockquote>\n<p>We should have a look at the default view (index) as well.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; view = getMultiAdapter((folder, request), name='index')\n&gt;&gt;&gt; view.__class__.__name__\n'SelectedView'\n</pre>\n<pre>&gt;&gt;&gt; view.update()\n&gt;&gt;&gt; print view.render()\n&lt;div class=\"folder-listing\"&gt;\n  &lt;h1&gt;Content of the folder&lt;/h1&gt;\n  &lt;div&gt;&lt;table class=\"listing sortable\"&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th&gt;Title&lt;/th&gt;\n      &lt;th&gt;Modification date&lt;/th&gt;\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    &lt;tr class=\"even\"&gt;\n      &lt;td&gt;&lt;a href=\"http://127.0.0.1/folder/books\"&gt;books&lt;/a&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr class=\"odd\"&gt;\n      &lt;td&gt;&lt;a href=\"http://127.0.0.1/folder/films\"&gt;films&lt;/a&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr class=\"even\"&gt;\n      &lt;td&gt;&lt;a href=\"http://127.0.0.1/folder/music\"&gt;music&lt;/a&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr class=\"odd\"&gt;\n      &lt;td&gt;&lt;img src=\"http://127.0.0.1/@@/menhir-contenttype-folder-folder-IFolder-icon.png\" alt=\"Folder\" width=\"16\" height=\"16\" border=\"0\" /&gt; &lt;a href=\"http://127.0.0.1/folder/subfolder\"&gt;SubFolder&lt;/a&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;&lt;/div&gt;\n&lt;/div&gt;\n</pre>\n</blockquote>\n<p>Lastly, let\u2019s change the folder layout to the full rendering view\nprovided in this package.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; folder.selected_view = u'compositeview'\n&gt;&gt;&gt; view = getMultiAdapter((folder, request), name=folder.selected_view)\n&gt;&gt;&gt; view.__class__.__name__\n'CompositeView'\n</pre>\n<pre>&gt;&gt;&gt; view.update()\n&gt;&gt;&gt; print view.content()\n&lt;div class=\"composite-view\"&gt;\n  &lt;h1&gt;&lt;/h1&gt;\n  &lt;div class=\"composite-body sequence-block\"&gt;\n    &lt;div&gt;&lt;form action=\"http://127.0.0.1\" method=\"post\"\n      enctype=\"multipart/form-data\"&gt;\n  &lt;h1&gt;books&lt;/h1&gt;\n&lt;/form&gt;\n&lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div class=\"composite-body sequence-block\"&gt;\n    &lt;div&gt;&lt;form action=\"http://127.0.0.1\" method=\"post\"\n      enctype=\"multipart/form-data\"&gt;\n  &lt;h1&gt;films&lt;/h1&gt;\n&lt;/form&gt;\n&lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div class=\"composite-body sequence-block\"&gt;\n    &lt;div&gt;&lt;form action=\"http://127.0.0.1\" method=\"post\"\n      enctype=\"multipart/form-data\"&gt;\n  &lt;h1&gt;music&lt;/h1&gt;\n&lt;/form&gt;\n&lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div class=\"composite-body sequence-block\"&gt;\n    &lt;div&gt;&lt;div class=\"folder-listing\"&gt;\n  &lt;h1&gt;Content of the folder&lt;/h1&gt;\n  &lt;div&gt;&lt;table class=\"listing sortable\"&gt;\n  &lt;thead&gt;\n    &lt;tr&gt;\n      &lt;th&gt;Title&lt;/th&gt;\n      &lt;th&gt;Modification date&lt;/th&gt;\n    &lt;/tr&gt;\n  &lt;/thead&gt;\n  &lt;tbody&gt;\n    &lt;tr class=\"even\"&gt;\n      &lt;td&gt;&lt;img src=\"http://127.0.0.1/@@/menhir-contenttype-folder-folder-IFolder-icon.png\" alt=\"Folder\" width=\"16\" height=\"16\" border=\"0\" /&gt; &lt;a href=\"http://127.0.0.1/folder/subfolder/subfolder2\"&gt;SubFolder Two&lt;/a&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr class=\"odd\"&gt;\n      &lt;td&gt;&lt;a href=\"http://127.0.0.1/folder/subfolder/bogus\"&gt;bogus&lt;/a&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;&lt;/div&gt;\n&lt;BLANKLINE&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</pre>\n</blockquote>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.4 (2011-02-14)</h3>\n<ul>\n<li>The schema no longer includes <cite>IViewSelector</cite>. This prevents the\nfield from showing up in the auto-generated forms.</li>\n<li><cite>IFolder</cite> now inherits from <tt>zope.container</tt> <cite>IContainer</cite>.</li>\n<li>Consolidated the \u201ccomposite view\u201d using a normalized way to get the\ndefault view name. We now test if the view exists and if it\u2019s a\nvalid <cite>IPage</cite>.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.3 (2011-02-14)</h3>\n<ul>\n<li>Updated for the latest changes in <tt>dolmen.content</tt>,\n<tt>dolmen.app.content</tt> and <tt>dolmen.app.container</tt>.</li>\n<li>Cleaned up dependencies.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.2 (2010-07-27)</h3>\n<ul>\n<li>Corrected packaging (missing icon)</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1 (2010-07-19)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 794695, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d80d4a291f9c1b0f267159430e76ff4e", "sha256": "c1c69b3e87e696ab3e76cac51c49609aef9b7790cb42d290d2671282219a5f64"}, "downloads": -1, "filename": "menhir.contenttype.folder-0.1.tar.gz", "has_sig": false, "md5_digest": "d80d4a291f9c1b0f267159430e76ff4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6553, "upload_time": "2010-07-19T17:37:10", "upload_time_iso_8601": "2010-07-19T17:37:10.220786Z", "url": "https://files.pythonhosted.org/packages/7c/d3/4322136b44b7297960b75d0798d05590acd4a34c5c31dbb7cf316ecec9b5/menhir.contenttype.folder-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "d0b4f1d7957686cc03e2608522024da9", "sha256": "681b5aea50750ec47b85896701b073d1f1734a12b02e19f770c03f8f538ab971"}, "downloads": -1, "filename": "menhir.contenttype.folder-0.2.tar.gz", "has_sig": false, "md5_digest": "d0b4f1d7957686cc03e2608522024da9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7451, "upload_time": "2010-07-27T20:18:14", "upload_time_iso_8601": "2010-07-27T20:18:14.723755Z", "url": "https://files.pythonhosted.org/packages/de/12/11db371e72e190c364d11f0cb0b96b9739d33ec7b9c4cfffdb5597dd041e/menhir.contenttype.folder-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "cf973a4c7b0b478d0e13160081159033", "sha256": "10d6a5e05156e7c7c3faf7f85436cda008bbebf5edf97801a93beebff5415945"}, "downloads": -1, "filename": "menhir.contenttype.folder-0.3.tar.gz", "has_sig": false, "md5_digest": "cf973a4c7b0b478d0e13160081159033", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7649, "upload_time": "2011-02-14T15:51:49", "upload_time_iso_8601": "2011-02-14T15:51:49.268293Z", "url": "https://files.pythonhosted.org/packages/d2/e8/836a62fdf601a5b8378d1d2de78d31146ae1d65fe6de4a6b55cd128b66f9/menhir.contenttype.folder-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "0bee4bc138c00d8f9f48e0d30e4b22c1", "sha256": "3bd4ed44aac5e38054999a330a193bc774e33a117515fc1f0022ac5b7e271cc2"}, "downloads": -1, "filename": "menhir.contenttype.folder-0.4.tar.gz", "has_sig": false, "md5_digest": "0bee4bc138c00d8f9f48e0d30e4b22c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8038, "upload_time": "2011-02-14T23:46:43", "upload_time_iso_8601": "2011-02-14T23:46:43.188869Z", "url": "https://files.pythonhosted.org/packages/ae/8c/da2ff43d87030d53ec9c377e2dc2fe25d74f62b1c433db2841029030cea5/menhir.contenttype.folder-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0bee4bc138c00d8f9f48e0d30e4b22c1", "sha256": "3bd4ed44aac5e38054999a330a193bc774e33a117515fc1f0022ac5b7e271cc2"}, "downloads": -1, "filename": "menhir.contenttype.folder-0.4.tar.gz", "has_sig": false, "md5_digest": "0bee4bc138c00d8f9f48e0d30e4b22c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8038, "upload_time": "2011-02-14T23:46:43", "upload_time_iso_8601": "2011-02-14T23:46:43.188869Z", "url": "https://files.pythonhosted.org/packages/ae/8c/da2ff43d87030d53ec9c377e2dc2fe25d74f62b1c433db2841029030cea5/menhir.contenttype.folder-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:17 2020"}