{"info": {"author": "Curtis Jiang", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Communications :: Chat", "Topic :: Software Development :: Libraries :: Application Frameworks", "Typing :: Typed"], "description": "# UnifiedMessageRelay\n\n![shields](https://img.shields.io/badge/python-3.7%2B-blue.svg?style=flat-square) [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg?style=flat-square)](https://opensource.org/licenses/MIT)\n[![Telegram support group](https://img.shields.io/badge/support-telegram-blue)](https://t.me/s/UnifiedMessageRelay)\n[![Telegram developer group](https://img.shields.io/badge/developer-telegram-blue)](https://t.me/s/UnifiedMessageRelayDev)\n\nUnifiedMessageRelay is a framework for the purpose of bringing messages from different chat platform together. With UnifiedMessageRelay,\nuser no longer need to view messages on different platform, or different groups. UnifiedMessageRelay brings powerful\n message forwarding functionality and flexible plugin API to meet your custom need. A driver API specification is also\n provided, so one can compose their own backend driver, and the framework will load and utilize the driver automatically.\n\n\n## Demo\n\nTelegram <-> QQ:\n\n<img src=\"image/telegram.png\" height=\"400\" alt=\"Telegram\">\n\n<img src=\"image/qq.png\" height=\"600\" alt=\"QQ\">\n\nTelegram <-> Discord:\n\n<img src=\"image/tg-discord1.png\" height=\"500\" alt=\"Discord\">\n\n<img src=\"image/tg-discord2.png\" height=\"500\" alt=\"Telegram\">\n\nAll four platforms: QQ, Telegram, Line and Discord can forward between each other directly.\n\n## Supported platforms\n\n- QQ API based on [CoolQ HTTP API](https://github.com/richardchien/coolq-http-api) [aiocqhttp](https://github.com/cqmoe/python-aiocqhttp)\n- Mirai API based on multiple repos from [Mamoe Technologies](https://github.com/mamoe)\n- Telegram API based on [aiogram](https://aiogram.dev)\n- Line API based on [linebotx](https://github.com/Shivelight/line-bot-sdk-python-extra) [linebot](https://github.com/line/line-bot-sdk-python)\n- Discord API based on [Discord.py](https://github.com/Rapptz/discord.py)\n\n## Update\n\n[ChangeLog.md](ChangeLog.md)\n\n## Features\n\n- Forward text and image between all supported platforms\n- Image is converted to supported format automatically\n- Reply is preserved with best effort\n- Markdown format is preserved for supported platforms\n- Command API for customize triggers\n- Message Hook API for even more customized needs\n\nLimited support for Coolq Air. image sending is available for Coolq Pro.\n\n## Installation\n\n### Framework Setup\n### Install python dependencies on host os\n\nMake sure Python 3.7+ and `pip` are installed. Run:\n\n`pip3 install unified-message-relay`\n\n### TLDR\n\nTo install every python module in one line:\n\n`pip3 install -U umr_telegram_driver umr_line_driver umr_discord_driver umr_coolq_driver umr_mirai_driver umr_extensions_demo`\n\n### Install other required package on host os\n\n`apt install libcairo2 ffmpeg libmagickwand-dev`\n\n## Configurations\n\nCreate `~/.umr/`\n\n```bash\nmkdir ~/.umr\n```\n\nCopy config.yaml to `~/.umr`\n\n[Why yaml instead of json?](https://www.quora.com/What-situation-would-you-use-YAML-instead-of-JSON-or-XML)\n\n[Full Example config](config.yaml)\n\nThe \"QQ\", \"Telegram\" or \"Line\" above are all custom names. Real bot driver should be configure throgh \"Driver\" list.\n\n### Follow the guide for your platform\n\n[QQ](Installation/QQ.md)\n\n[Mirai](Installation/Mirai.md)\n\n[Telegram](Installation/Telegram.md)\n\n[Line](Installation/Line.md)\n\n[Discord](Installation/Discord.md)\n\n## Start the bot\n\n### Viewing CLI Help\n\n```shell\nunified-message-relay -h\n```\n\n### Background process\n\n- Start background service\n\n```shell\nunified-message-relay start\n```\n\nor\n\n```shell\nunified-message-relay restart\n```\n\nBy default, log will be stored in `/var/log/umr/bot.log`, and cache will be cleared out upon start.\n\n- Stop the background service\n\n```shell\nunified-message-relay stop\n```\n\n### Foreground process (for debugging purpose)\n\nIf you need to see the log output for debugging purpose, stop the running daemon first. Then follow this command.\n\nRemember to enable debug option in config.\n\n```shell\nunified-message-relay run\n```\n\nHit Ctrl + C to stop.\n\n## Extensions and Commands\n\nExample extensions and commands now require extension `umr-extensions-demo`:\n\n```bash\npip install umr-extensions-demo\n```\n\nand put `- umr_extensions_demo` under `Extensions` section of `config.yaml`.\n\n### Available commands\n#### Help\n\nSend `!!help` to show available commands.\n\nThis command requires no extra module. \n\n#### Show chat id\n\nSend `!!id` anywhere to see chat id.\n\nReply message with `!!id` to reveal source chat id.\n\nThis command requires `cmd_id.py` under umr_extension_demo. \n\n#### Delete QQ Message\n\nReply to the message you want to delete with `!!del`\n\nThis command requires `QQ_recall.py` under umr_extension_demo and using coolq driver. \nMirai recall is not supported at this time. \n\n#### Add telegram blocked keyword\n\nMessage containing these keyword will not be forwarded to any other chat\n\nSend `!!bk` and keywords separated by space\n\nThis command requires `Telegram_watermeter.py` under umr_extension_demo and using telegram driver.\n\n#### Add telegram blocked channel\n\nMessage originated from these channel will not be forwarded to any other chat\n\nReply forwarded channel message with `!!bc`\n\nThis command requires `Telegram_watermeter.py` under umr_extension_demo and using telegram driver.\n\nTo modify saved keywords and channels, edit `ExtensionConfig` section in `config.yaml`.\n\n### Available Extensions\n\n#### Comment filter\n\nAdd `//` at the beginning of the message to avoid forwarding to any other chat.\n\n# Issue Format\n\n## Check these before opening an issue\n\n1. Use `unified-message-relay run` to print log to stdout\n2. Check if you are using Python 3.7+\n3. Check if binary dependencies are installed (search apt in this page)\n4. (If using Coolq) Check if cq-http-api is enabled in Coolq\n5. Check if the log suggests any missing configuration\n6. Check if you are on Dev branch, please switch back to master (dev may be unstable)\n\n## Issues must provide\n\n1. Descriptions about the issue\n2. Logs of python3 daemon.py run (Desensitization)\n3. Steps to reproduce", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jqqqqqqqqqq/UnifiedMessageRelay", "keywords": "UMR,UnifiedMessageRelay,Group chat relay,IM,messaging", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "unified-message-relay", "package_url": "https://pypi.org/project/unified-message-relay/", "platform": "", "project_url": "https://pypi.org/project/unified-message-relay/", "project_urls": {"Homepage": "https://github.com/jqqqqqqqqqq/UnifiedMessageRelay", "Telegram Chat": "https://t.me/s/UnifiedMessageRelayDev"}, "release_url": "https://pypi.org/project/unified-message-relay/4.2/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Group Message Forward Framework (supports QQ Telegram Line Discord)", "version": "4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>UnifiedMessageRelay</h1>\n<p><img alt=\"shields\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/73d30717f0a64a8ba5fb469abb609a7477323ac4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e372532422d626c75652e7376673f7374796c653d666c61742d737175617265\"> <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ad268a0941cc3d473c881205ac205aed86a95c5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://t.me/s/UnifiedMessageRelay\" rel=\"nofollow\"><img alt=\"Telegram support group\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e3e8c79810b864a9635b3f593e74a763161e970a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737570706f72742d74656c656772616d2d626c7565\"></a>\n<a href=\"https://t.me/s/UnifiedMessageRelayDev\" rel=\"nofollow\"><img alt=\"Telegram developer group\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb41ab9a018ed34f7506b8091dfb553949420249/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646576656c6f7065722d74656c656772616d2d626c7565\"></a></p>\n<p>UnifiedMessageRelay is a framework for the purpose of bringing messages from different chat platform together. With UnifiedMessageRelay,\nuser no longer need to view messages on different platform, or different groups. UnifiedMessageRelay brings powerful\nmessage forwarding functionality and flexible plugin API to meet your custom need. A driver API specification is also\nprovided, so one can compose their own backend driver, and the framework will load and utilize the driver automatically.</p>\n<h2>Demo</h2>\n<p>Telegram &lt;-&gt; QQ:</p>\n<img alt=\"Telegram\" height=\"400\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8db12c13d754642a9ac43c6bb1c423423574503/696d6167652f74656c656772616d2e706e67\">\n<img alt=\"QQ\" height=\"600\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e3f1174cf4eca83c1b958bf1e274fa046e9cb620/696d6167652f71712e706e67\">\n<p>Telegram &lt;-&gt; Discord:</p>\n<img alt=\"Discord\" height=\"500\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c75fd471ea2f361baf09539b5105460fc6c988c1/696d6167652f74672d646973636f7264312e706e67\">\n<img alt=\"Telegram\" height=\"500\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2f0d129798dc669f335f588a81323030e54e8015/696d6167652f74672d646973636f7264322e706e67\">\n<p>All four platforms: QQ, Telegram, Line and Discord can forward between each other directly.</p>\n<h2>Supported platforms</h2>\n<ul>\n<li>QQ API based on <a href=\"https://github.com/richardchien/coolq-http-api\" rel=\"nofollow\">CoolQ HTTP API</a> <a href=\"https://github.com/cqmoe/python-aiocqhttp\" rel=\"nofollow\">aiocqhttp</a></li>\n<li>Mirai API based on multiple repos from <a href=\"https://github.com/mamoe\" rel=\"nofollow\">Mamoe Technologies</a></li>\n<li>Telegram API based on <a href=\"https://aiogram.dev\" rel=\"nofollow\">aiogram</a></li>\n<li>Line API based on <a href=\"https://github.com/Shivelight/line-bot-sdk-python-extra\" rel=\"nofollow\">linebotx</a> <a href=\"https://github.com/line/line-bot-sdk-python\" rel=\"nofollow\">linebot</a></li>\n<li>Discord API based on <a href=\"https://github.com/Rapptz/discord.py\" rel=\"nofollow\">Discord.py</a></li>\n</ul>\n<h2>Update</h2>\n<p><a href=\"ChangeLog.md\" rel=\"nofollow\">ChangeLog.md</a></p>\n<h2>Features</h2>\n<ul>\n<li>Forward text and image between all supported platforms</li>\n<li>Image is converted to supported format automatically</li>\n<li>Reply is preserved with best effort</li>\n<li>Markdown format is preserved for supported platforms</li>\n<li>Command API for customize triggers</li>\n<li>Message Hook API for even more customized needs</li>\n</ul>\n<p>Limited support for Coolq Air. image sending is available for Coolq Pro.</p>\n<h2>Installation</h2>\n<h3>Framework Setup</h3>\n<h3>Install python dependencies on host os</h3>\n<p>Make sure Python 3.7+ and <code>pip</code> are installed. Run:</p>\n<p><code>pip3 install unified-message-relay</code></p>\n<h3>TLDR</h3>\n<p>To install every python module in one line:</p>\n<p><code>pip3 install -U umr_telegram_driver umr_line_driver umr_discord_driver umr_coolq_driver umr_mirai_driver umr_extensions_demo</code></p>\n<h3>Install other required package on host os</h3>\n<p><code>apt install libcairo2 ffmpeg libmagickwand-dev</code></p>\n<h2>Configurations</h2>\n<p>Create <code>~/.umr/</code></p>\n<pre>mkdir ~/.umr\n</pre>\n<p>Copy config.yaml to <code>~/.umr</code></p>\n<p><a href=\"https://www.quora.com/What-situation-would-you-use-YAML-instead-of-JSON-or-XML\" rel=\"nofollow\">Why yaml instead of json?</a></p>\n<p><a href=\"config.yaml\" rel=\"nofollow\">Full Example config</a></p>\n<p>The \"QQ\", \"Telegram\" or \"Line\" above are all custom names. Real bot driver should be configure throgh \"Driver\" list.</p>\n<h3>Follow the guide for your platform</h3>\n<p><a href=\"Installation/QQ.md\" rel=\"nofollow\">QQ</a></p>\n<p><a href=\"Installation/Mirai.md\" rel=\"nofollow\">Mirai</a></p>\n<p><a href=\"Installation/Telegram.md\" rel=\"nofollow\">Telegram</a></p>\n<p><a href=\"Installation/Line.md\" rel=\"nofollow\">Line</a></p>\n<p><a href=\"Installation/Discord.md\" rel=\"nofollow\">Discord</a></p>\n<h2>Start the bot</h2>\n<h3>Viewing CLI Help</h3>\n<pre>unified-message-relay -h\n</pre>\n<h3>Background process</h3>\n<ul>\n<li>Start background service</li>\n</ul>\n<pre>unified-message-relay start\n</pre>\n<p>or</p>\n<pre>unified-message-relay restart\n</pre>\n<p>By default, log will be stored in <code>/var/log/umr/bot.log</code>, and cache will be cleared out upon start.</p>\n<ul>\n<li>Stop the background service</li>\n</ul>\n<pre>unified-message-relay stop\n</pre>\n<h3>Foreground process (for debugging purpose)</h3>\n<p>If you need to see the log output for debugging purpose, stop the running daemon first. Then follow this command.</p>\n<p>Remember to enable debug option in config.</p>\n<pre>unified-message-relay run\n</pre>\n<p>Hit Ctrl + C to stop.</p>\n<h2>Extensions and Commands</h2>\n<p>Example extensions and commands now require extension <code>umr-extensions-demo</code>:</p>\n<pre>pip install umr-extensions-demo\n</pre>\n<p>and put <code>- umr_extensions_demo</code> under <code>Extensions</code> section of <code>config.yaml</code>.</p>\n<h3>Available commands</h3>\n<h4>Help</h4>\n<p>Send <code>!!help</code> to show available commands.</p>\n<p>This command requires no extra module.</p>\n<h4>Show chat id</h4>\n<p>Send <code>!!id</code> anywhere to see chat id.</p>\n<p>Reply message with <code>!!id</code> to reveal source chat id.</p>\n<p>This command requires <code>cmd_id.py</code> under umr_extension_demo.</p>\n<h4>Delete QQ Message</h4>\n<p>Reply to the message you want to delete with <code>!!del</code></p>\n<p>This command requires <code>QQ_recall.py</code> under umr_extension_demo and using coolq driver.\nMirai recall is not supported at this time.</p>\n<h4>Add telegram blocked keyword</h4>\n<p>Message containing these keyword will not be forwarded to any other chat</p>\n<p>Send <code>!!bk</code> and keywords separated by space</p>\n<p>This command requires <code>Telegram_watermeter.py</code> under umr_extension_demo and using telegram driver.</p>\n<h4>Add telegram blocked channel</h4>\n<p>Message originated from these channel will not be forwarded to any other chat</p>\n<p>Reply forwarded channel message with <code>!!bc</code></p>\n<p>This command requires <code>Telegram_watermeter.py</code> under umr_extension_demo and using telegram driver.</p>\n<p>To modify saved keywords and channels, edit <code>ExtensionConfig</code> section in <code>config.yaml</code>.</p>\n<h3>Available Extensions</h3>\n<h4>Comment filter</h4>\n<p>Add <code>//</code> at the beginning of the message to avoid forwarding to any other chat.</p>\n<h1>Issue Format</h1>\n<h2>Check these before opening an issue</h2>\n<ol>\n<li>Use <code>unified-message-relay run</code> to print log to stdout</li>\n<li>Check if you are using Python 3.7+</li>\n<li>Check if binary dependencies are installed (search apt in this page)</li>\n<li>(If using Coolq) Check if cq-http-api is enabled in Coolq</li>\n<li>Check if the log suggests any missing configuration</li>\n<li>Check if you are on Dev branch, please switch back to master (dev may be unstable)</li>\n</ol>\n<h2>Issues must provide</h2>\n<ol>\n<li>Descriptions about the issue</li>\n<li>Logs of python3 daemon.py run (Desensitization)</li>\n<li>Steps to reproduce</li>\n</ol>\n\n          </div>"}, "last_serial": 7102393, "releases": {"4.1": [{"comment_text": "", "digests": {"md5": "901a5285bcb68a03de860d04dbb056b4", "sha256": "5749ecd9d57e1f41ea88b09490164f27fd2aaa50a32480556d4063d9f6f7b69d"}, "downloads": -1, "filename": "unified-message-relay-4.1.tar.gz", "has_sig": false, "md5_digest": "901a5285bcb68a03de860d04dbb056b4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 22970, "upload_time": "2020-03-21T05:57:42", "upload_time_iso_8601": "2020-03-21T05:57:42.499224Z", "url": "https://files.pythonhosted.org/packages/6e/40/4f9494639ebd4020363c22b9352e92e070f973e99c7d7ba07c4c03a6193e/unified-message-relay-4.1.tar.gz", "yanked": false}], "4.1.1": [{"comment_text": "", "digests": {"md5": "b24021928e6c2a49d130ab28b5202c1a", "sha256": "4133152fa0b6ebfdc607b3d0df061dbc6e7dc448435bdf273e410e6b47e6df1b"}, "downloads": -1, "filename": "unified-message-relay-4.1.1.tar.gz", "has_sig": false, "md5_digest": "b24021928e6c2a49d130ab28b5202c1a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 23187, "upload_time": "2020-04-07T04:31:11", "upload_time_iso_8601": "2020-04-07T04:31:11.067417Z", "url": "https://files.pythonhosted.org/packages/05/b4/bd2bbc213b79a26c7781fff08b008f07f3d6145cf78ee03c6493a886a740/unified-message-relay-4.1.1.tar.gz", "yanked": false}], "4.1.3": [{"comment_text": "", "digests": {"md5": "b050220cf2125426228be033f9a3518e", "sha256": "038769373db78042f1923587023cb4bc5c7c152e9224d8d8d5028dcfd3b874f0"}, "downloads": -1, "filename": "unified-message-relay-4.1.3.tar.gz", "has_sig": false, "md5_digest": "b050220cf2125426228be033f9a3518e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 23218, "upload_time": "2020-04-23T17:59:51", "upload_time_iso_8601": "2020-04-23T17:59:51.864239Z", "url": "https://files.pythonhosted.org/packages/95/70/2203e5de1d50448d04d99f4919c85533a6e754e33c87b269b9d1afc25890/unified-message-relay-4.1.3.tar.gz", "yanked": false}], "4.2": [{"comment_text": "", "digests": {"md5": "f0ade6f32ed25bd4fe6fd95eb0033a76", "sha256": "a0bed277bb193ac1503fdafa6b6ca2e2f4abe0a033e471adf0d14f37938a5155"}, "downloads": -1, "filename": "unified-message-relay-4.2.tar.gz", "has_sig": false, "md5_digest": "f0ade6f32ed25bd4fe6fd95eb0033a76", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 22953, "upload_time": "2020-04-26T02:51:49", "upload_time_iso_8601": "2020-04-26T02:51:49.380006Z", "url": "https://files.pythonhosted.org/packages/26/14/dbd4e6671df858204faf6a0b5f3c7fa2fc1fcd98fd5899ae362adfee3492/unified-message-relay-4.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f0ade6f32ed25bd4fe6fd95eb0033a76", "sha256": "a0bed277bb193ac1503fdafa6b6ca2e2f4abe0a033e471adf0d14f37938a5155"}, "downloads": -1, "filename": "unified-message-relay-4.2.tar.gz", "has_sig": false, "md5_digest": "f0ade6f32ed25bd4fe6fd95eb0033a76", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 22953, "upload_time": "2020-04-26T02:51:49", "upload_time_iso_8601": "2020-04-26T02:51:49.380006Z", "url": "https://files.pythonhosted.org/packages/26/14/dbd4e6671df858204faf6a0b5f3c7fa2fc1fcd98fd5899ae362adfee3492/unified-message-relay-4.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:40:33 2020"}