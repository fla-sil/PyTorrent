{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "===============================\ntxrwlock\n===============================\n.. image:: https://travis-ci.org/Stibbons/txrwlock.svg?branch=master\n    :target: https://travis-ci.org/Stibbons/txrwlock\n.. image:: https://ci.appveyor.com/api/projects/status/gsnw64oow1mlf72e?svg=true\n    :target: https://ci.appveyor.com/project/Stibbons/txrwlock\n.. image:: https://readthedocs.org/projects/txrwlock/badge/?version=latest\n    :target: http://txrwlock.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n.. image:: https://coveralls.io/repos/github/Stibbons/txrwlock/badge.svg\n    :target: https://coveralls.io/github/Stibbons/txrwlock\n.. image:: https://badge.fury.io/py/txrwlock.svg\n    :target: https://pypi.python.org/pypi/txrwlock/\n    :alt: Pypi package\n.. image:: https://img.shields.io/badge/license-MIT-blue.svg\n    :target: ./LICENSE\n    :alt: MIT licensed\n\nReaders/Writer Lock for Twisted\n\n- Free software: MIT\n- Documentation: http://txrwlock.readthedocs.io/en/latest/\n- Source: https://github.com/Stibbons/txrwlock\n- Presentation: http://www.great-a-blog.co/readerswriter-lock-for-twisted/\n\nFeatures\n--------\n\nTwisted implementation of a  `Readers/Writer Lock\n<https://en.wikipedia.org/wiki/Readers\u2013writer_lock>`_. This synchronization primitive allows to lock\na share depending on two access roles: \"reader\" which only access to the data without modifying it,\nand \"writer\" which may want to change the data in the share.\n\n- Multiple readers can access to the data at the same time. There is no locking at all when only\n  readers require access to the share\n- When a write requires access to the share, it prevents any new reader request to fullfil and put\n  these requests into a waiting queue. It will wait for all ongoing reads to finish\n- Only one writer can act at the same time\n- This Lock is well suited for share with more readers than writer. Write requests must be at least\n  an order of magnitude less often that read requests\n\nThis implementation brings this mechanism to the Twisted's deferred. Please note they are\nindependent with other multithreading RW lock.\n\nFor example, a data structure is shared by a different deferreds, triggered on different contexts.\nObviously, only one deferred can be writing to the data structure at a time. If more than one was\nwriting, then they could potentially overwrite each other's data. To prevent this from happening,\nthe writing deferred obtain a \"writer\" lock in an exclusive manner, meaning that it and only it  has\naccess to the data structure. Note that the exclusivity of the access is controlled strictly by\nvoluntary means. The opposite occurs with readers; since reading a data area is a non-destructive\noperation, any number of concurent deferred can be reading the data.\n\nHowever, you should protect all parts that will read data in a coherence way. For example, the\nreading deferred may be confused by reading a part of the data, getting preempted by a writing\ndeferred, and then, when the reading deferred \"resumes\", continue reading data, but from a newer\n\"update\" of the data. A data inconsistency would then result.\n\nHeavily inspirated `by this example <http://code.activestate.com/recipes/577803-reader-writer-lock-\nwith-priority-for-writers/>`_.\n\nUsage\n-----\n\nAn Inlinecallbacks deferred that needs \"read\" access to a share use the following pattern:\n\n.. code-block:: python\n\n    from twisted.internet import defer\n    from txrwlock import TxReadersWriterLock\n\n    ...\n\n    class MySharedObject(object):\n\n        def __init__(self):\n            self._readWriteLock = TxReadersWriterLock()\n\n        @defer.inlineCallbacks\n        def aReaderMethod(...):\n            try:\n                yield rwlocker.readerAcquire()\n                # ... any treatment ...\n            finally:\n                yield rwlocker.readerRelease()\n\nAn Inlinecallbacks deferred that needs \"write\" access to a share uses the following pattern:\n\n.. code-block:: python\n\n    @defer.inlineCallbacks\n    def aWriterMethod(...):\n        try:\n            yield rwlocker.writerAcquire()\n            # ... any treatment ...\n        finally:\n            yield rwlocker.writerRelease()\n\nDevelopment\n-----------\n\nPlease note the following magical feature of this repository:\n\n- This package use PBR to compute automatically the version number, generate `ChangeLog` and\n  `AUTHORS`.\n- Deployment to Pypi is automatically made by Travis on successful tag build. Dependencies declared\n  on\n- `requirements.txt` declares the strict minimum of dependencies for external modules that want to\n  use `txrwlock`. These dependencies are not version frozen.\n- For development, unit test, style checks, you **need** to install `requirements-dev.txt` as well.\n- Travis validates txrwlock on Linux and AppVeyor on Windows\n\nSetup for development and unit tests\n\n.. code-block:: bash\n\n    $ make dev\n\nBuild source package, binary package and wheel:\n\n.. code-block:: bash\n\n    make dists\n\nThese builds automatically generate `ChangeLog` and `AUTHOR` files from the git commit history,\nthanks PBR.\n\nExecute unit test:\n\n.. code-block:: bash\n\n    make test\n\nExecute coverage:\n\n.. code-block:: bash\n\n    make coverage", "description_content_type": null, "docs_url": "https://pythonhosted.org/txrwlock/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "txrwlock", "package_url": "https://pypi.org/project/txrwlock/", "platform": "", "project_url": "https://pypi.org/project/txrwlock/", "project_urls": null, "release_url": "https://pypi.org/project/txrwlock/1.1.4/", "requires_dist": null, "requires_python": "", "summary": "Readers/Writer Lock for Twisted", "version": "1.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/Stibbons/txrwlock\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/Stibbons/txrwlock.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c193f188cf8106e3c586ecca0eb426b0b1af9562/68747470733a2f2f7472617669732d63692e6f72672f53746962626f6e732f747872776c6f636b2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/Stibbons/txrwlock\" rel=\"nofollow\"><img alt=\"https://ci.appveyor.com/api/projects/status/gsnw64oow1mlf72e?svg=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7692de7b1f1a0db9ad4c498705911bb7660b2844/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f67736e7736346f6f77316d6c663732653f7376673d74727565\"></a>\n<a href=\"http://txrwlock.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/78cdce0ffdead7f5d9f7c138a28a9521295b1fe8/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f747872776c6f636b2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://coveralls.io/github/Stibbons/txrwlock\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/Stibbons/txrwlock/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f3ec2a64211ec7773b754e100abd600e745c28af/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f53746962626f6e732f747872776c6f636b2f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/txrwlock/\" rel=\"nofollow\"><img alt=\"Pypi package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9df5672f7a438ebc2da94cee783fb082553c9955/68747470733a2f2f62616467652e667572792e696f2f70792f747872776c6f636b2e737667\"></a>\n<a href=\"./LICENSE\" rel=\"nofollow\"><img alt=\"MIT licensed\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c88fab50b4a1dc0cd91faeb7ba5654d56e380260/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667\"></a>\n<p>Readers/Writer Lock for Twisted</p>\n<ul>\n<li>Free software: MIT</li>\n<li>Documentation: <a href=\"http://txrwlock.readthedocs.io/en/latest/\" rel=\"nofollow\">http://txrwlock.readthedocs.io/en/latest/</a></li>\n<li>Source: <a href=\"https://github.com/Stibbons/txrwlock\" rel=\"nofollow\">https://github.com/Stibbons/txrwlock</a></li>\n<li>Presentation: <a href=\"http://www.great-a-blog.co/readerswriter-lock-for-twisted/\" rel=\"nofollow\">http://www.great-a-blog.co/readerswriter-lock-for-twisted/</a></li>\n</ul>\n<div id=\"features\">\n<h2>Features</h2>\n<p>Twisted implementation of a  <a href=\"https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock\" rel=\"nofollow\">Readers/Writer Lock</a>. This synchronization primitive allows to lock\na share depending on two access roles: \u201creader\u201d which only access to the data without modifying it,\nand \u201cwriter\u201d which may want to change the data in the share.</p>\n<ul>\n<li>Multiple readers can access to the data at the same time. There is no locking at all when only\nreaders require access to the share</li>\n<li>When a write requires access to the share, it prevents any new reader request to fullfil and put\nthese requests into a waiting queue. It will wait for all ongoing reads to finish</li>\n<li>Only one writer can act at the same time</li>\n<li>This Lock is well suited for share with more readers than writer. Write requests must be at least\nan order of magnitude less often that read requests</li>\n</ul>\n<p>This implementation brings this mechanism to the Twisted\u2019s deferred. Please note they are\nindependent with other multithreading RW lock.</p>\n<p>For example, a data structure is shared by a different deferreds, triggered on different contexts.\nObviously, only one deferred can be writing to the data structure at a time. If more than one was\nwriting, then they could potentially overwrite each other\u2019s data. To prevent this from happening,\nthe writing deferred obtain a \u201cwriter\u201d lock in an exclusive manner, meaning that it and only it  has\naccess to the data structure. Note that the exclusivity of the access is controlled strictly by\nvoluntary means. The opposite occurs with readers; since reading a data area is a non-destructive\noperation, any number of concurent deferred can be reading the data.</p>\n<p>However, you should protect all parts that will read data in a coherence way. For example, the\nreading deferred may be confused by reading a part of the data, getting preempted by a writing\ndeferred, and then, when the reading deferred \u201cresumes\u201d, continue reading data, but from a newer\n\u201cupdate\u201d of the data. A data inconsistency would then result.</p>\n<p>Heavily inspirated <a href=\"http://code.activestate.com/recipes/577803-reader-writer-lock-with-priority-for-writers/\" rel=\"nofollow\">by this example</a>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>An Inlinecallbacks deferred that needs \u201cread\u201d access to a share use the following pattern:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">twisted.internet</span> <span class=\"kn\">import</span> <span class=\"n\">defer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">txrwlock</span> <span class=\"kn\">import</span> <span class=\"n\">TxReadersWriterLock</span>\n\n<span class=\"o\">...</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MySharedObject</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_readWriteLock</span> <span class=\"o\">=</span> <span class=\"n\">TxReadersWriterLock</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@defer</span><span class=\"o\">.</span><span class=\"n\">inlineCallbacks</span>\n    <span class=\"k\">def</span> <span class=\"nf\">aReaderMethod</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">yield</span> <span class=\"n\">rwlocker</span><span class=\"o\">.</span><span class=\"n\">readerAcquire</span><span class=\"p\">()</span>\n            <span class=\"c1\"># ... any treatment ...</span>\n        <span class=\"k\">finally</span><span class=\"p\">:</span>\n            <span class=\"k\">yield</span> <span class=\"n\">rwlocker</span><span class=\"o\">.</span><span class=\"n\">readerRelease</span><span class=\"p\">()</span>\n</pre>\n<p>An Inlinecallbacks deferred that needs \u201cwrite\u201d access to a share uses the following pattern:</p>\n<pre><span class=\"nd\">@defer</span><span class=\"o\">.</span><span class=\"n\">inlineCallbacks</span>\n<span class=\"k\">def</span> <span class=\"nf\">aWriterMethod</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">):</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">yield</span> <span class=\"n\">rwlocker</span><span class=\"o\">.</span><span class=\"n\">writerAcquire</span><span class=\"p\">()</span>\n        <span class=\"c1\"># ... any treatment ...</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"k\">yield</span> <span class=\"n\">rwlocker</span><span class=\"o\">.</span><span class=\"n\">writerRelease</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>Please note the following magical feature of this repository:</p>\n<ul>\n<li>This package use PBR to compute automatically the version number, generate <cite>ChangeLog</cite> and\n<cite>AUTHORS</cite>.</li>\n<li>Deployment to Pypi is automatically made by Travis on successful tag build. Dependencies declared\non</li>\n<li><cite>requirements.txt</cite> declares the strict minimum of dependencies for external modules that want to\nuse <cite>txrwlock</cite>. These dependencies are not version frozen.</li>\n<li>For development, unit test, style checks, you <strong>need</strong> to install <cite>requirements-dev.txt</cite> as well.</li>\n<li>Travis validates txrwlock on Linux and AppVeyor on Windows</li>\n</ul>\n<p>Setup for development and unit tests</p>\n<pre>$ make dev\n</pre>\n<p>Build source package, binary package and wheel:</p>\n<pre>make dists\n</pre>\n<p>These builds automatically generate <cite>ChangeLog</cite> and <cite>AUTHOR</cite> files from the git commit history,\nthanks PBR.</p>\n<p>Execute unit test:</p>\n<pre>make <span class=\"nb\">test</span>\n</pre>\n<p>Execute coverage:</p>\n<pre>make coverage\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3276138, "releases": {"0.0.1.dev7": [{"comment_text": "", "digests": {"md5": "6d6ae230094932699cebc88d5ecb6059", "sha256": "4bc35ece85c502f96d3b442d921de4009656a56a0d89e5c661f17324eee1f63a"}, "downloads": -1, "filename": "txrwlock-0.0.1.dev7.tar.gz", "has_sig": false, "md5_digest": "6d6ae230094932699cebc88d5ecb6059", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6374, "upload_time": "2016-09-27T23:12:16", "upload_time_iso_8601": "2016-09-27T23:12:16.527381Z", "url": "https://files.pythonhosted.org/packages/d2/eb/16223c6091b64da6e5a502f9d7cbd55e2c1fb8f4b31f7e96594bbf12cd11/txrwlock-0.0.1.dev7.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "1da15b28a192a6f3c47a48a095ecbf17", "sha256": "570826f8af6b996d3ba527e46eac7b9cc9a61970aad668e920d7686c932dd89f"}, "downloads": -1, "filename": "txrwlock-0.4.2.tar.gz", "has_sig": false, "md5_digest": "1da15b28a192a6f3c47a48a095ecbf17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17101, "upload_time": "2016-09-28T12:05:38", "upload_time_iso_8601": "2016-09-28T12:05:38.024113Z", "url": "https://files.pythonhosted.org/packages/cf/b3/5ce2d92f83fa1145f5d8d9ebc513a0b255f5909192af2f067b9e6a9fe5e9/txrwlock-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "dbb6be2e5719afe507ca041771940dcf", "sha256": "c2a362ce6bbe279130bbc3dc04596e9f0169c4e381549c9b49d4dfda1a78b817"}, "downloads": -1, "filename": "txrwlock-0.4.3.tar.gz", "has_sig": false, "md5_digest": "dbb6be2e5719afe507ca041771940dcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17841, "upload_time": "2016-09-28T13:34:26", "upload_time_iso_8601": "2016-09-28T13:34:26.482591Z", "url": "https://files.pythonhosted.org/packages/bb/5b/40fbe7aa25397e3b99499308142fdf1c39fea44bb2a028fddcd840783a6a/txrwlock-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "c97be64b35a9a7ac3288c3537f4c9423", "sha256": "c6fb755d6d92e54119f61ece0461e93851359a8b44538d91ca09e3ecf7e3dda0"}, "downloads": -1, "filename": "txrwlock-0.4.4.tar.gz", "has_sig": false, "md5_digest": "c97be64b35a9a7ac3288c3537f4c9423", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17664, "upload_time": "2016-09-28T14:07:27", "upload_time_iso_8601": "2016-09-28T14:07:27.888653Z", "url": "https://files.pythonhosted.org/packages/52/c6/7080e9357314aa3b9cf2533040133b49e84d319b1533747b29af7cda492a/txrwlock-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "bbe962785cc1d97dae714b07411dbf7c", "sha256": "6be2321a36287d295c7b766be0f9a59643bb21e3430df5bc614531c49aeb52cd"}, "downloads": -1, "filename": "txrwlock-0.4.5.tar.gz", "has_sig": false, "md5_digest": "bbe962785cc1d97dae714b07411dbf7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17959, "upload_time": "2016-09-28T14:38:54", "upload_time_iso_8601": "2016-09-28T14:38:54.397691Z", "url": "https://files.pythonhosted.org/packages/d6/b4/2375af53d11aaa0d319774c837d6b968d12a9bb4e56dff973533a2b90887/txrwlock-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "5c76ee88962f0b59e1776601af4517fe", "sha256": "4bd00a4434a48a4b2ab4190343cfac434cf9a8960cf9c43e4dd033e6351ca1d2"}, "downloads": -1, "filename": "txrwlock-0.4.6.tar.gz", "has_sig": false, "md5_digest": "5c76ee88962f0b59e1776601af4517fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18591, "upload_time": "2016-09-28T20:31:45", "upload_time_iso_8601": "2016-09-28T20:31:45.158477Z", "url": "https://files.pythonhosted.org/packages/37/98/c433587d18636cba04e9eefe2a42533b1cfe3aa9732806739efd2ac8a803/txrwlock-0.4.6.tar.gz", "yanked": false}], "0.4.7": [{"comment_text": "", "digests": {"md5": "73bd3ba41f7e1f39116b36a54ce6e01e", "sha256": "e77412614b76c1cc5eb20c816263763c3c720ec6f44e8b490b303b2b4a208fd7"}, "downloads": -1, "filename": "txrwlock-0.4.7.tar.gz", "has_sig": false, "md5_digest": "73bd3ba41f7e1f39116b36a54ce6e01e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18658, "upload_time": "2016-09-28T21:35:50", "upload_time_iso_8601": "2016-09-28T21:35:50.549209Z", "url": "https://files.pythonhosted.org/packages/70/5c/3b697b103b439c317000200f8413dba5f464eb023b6d551b70aaa613dd2e/txrwlock-0.4.7.tar.gz", "yanked": false}], "0.4.8": [{"comment_text": "", "digests": {"md5": "21c1c6300ed065fabd62596221e77123", "sha256": "662c7baecd34d40142c4843394ba94d6ec6798a6dd4cbf680c743ea9ed1a2199"}, "downloads": -1, "filename": "txrwlock-0.4.8.tar.gz", "has_sig": false, "md5_digest": "21c1c6300ed065fabd62596221e77123", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25051, "upload_time": "2016-10-01T09:13:07", "upload_time_iso_8601": "2016-10-01T09:13:07.695386Z", "url": "https://files.pythonhosted.org/packages/22/41/e714bc62c1a83d4a7039d593f2fd6057c644494902f2162800e019d9ae6e/txrwlock-0.4.8.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "e69aab8d1e43b49aa68eaad87ba988f5", "sha256": "81c0dc99d98ed8f0362f18a664e63378ffc1dfb5391b1ec8cc3071e916efc1bf"}, "downloads": -1, "filename": "txrwlock-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e69aab8d1e43b49aa68eaad87ba988f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25718, "upload_time": "2017-10-21T16:54:51", "upload_time_iso_8601": "2017-10-21T16:54:51.909970Z", "url": "https://files.pythonhosted.org/packages/46/c6/86d97ad4efdea067a44bc1e5112da98b390d8e099444c53d62324679754a/txrwlock-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "b823da087dc848d8618da98be3f607ac", "sha256": "db6f9a33dc7a1c982aec67383ccba3d5e00daa7409e5ad32784375bd76437c66"}, "downloads": -1, "filename": "txrwlock-1.1.0.tar.gz", "has_sig": false, "md5_digest": "b823da087dc848d8618da98be3f607ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25376, "upload_time": "2017-10-23T16:44:25", "upload_time_iso_8601": "2017-10-23T16:44:25.785990Z", "url": "https://files.pythonhosted.org/packages/2f/87/ee28f5d0aa698a6fb41d57c1b35111397750482c19636289d92d07224f0b/txrwlock-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "4624715eb551c827f7703054ec259a67", "sha256": "8f0ed657fcb8e5c3f9f6e817a9c5993b482ec981a8aa1c5d0037ba15b727b942"}, "downloads": -1, "filename": "txrwlock-1.1.1.tar.gz", "has_sig": false, "md5_digest": "4624715eb551c827f7703054ec259a67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25390, "upload_time": "2017-10-23T20:18:12", "upload_time_iso_8601": "2017-10-23T20:18:12.535106Z", "url": "https://files.pythonhosted.org/packages/53/82/5fe0090a04b2a703f947bba44da4884bffeefe61d17368bbbbcf3ca941d5/txrwlock-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "378cc01c467dff716c7a79311b2f98c5", "sha256": "4cddb5a9cd2fb5b22fa6d80ed3f4e2c60ac18eeb72ea3eab8d8ae3532636e96e"}, "downloads": -1, "filename": "txrwlock-1.1.2.tar.gz", "has_sig": false, "md5_digest": "378cc01c467dff716c7a79311b2f98c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25395, "upload_time": "2017-10-23T21:57:15", "upload_time_iso_8601": "2017-10-23T21:57:15.051526Z", "url": "https://files.pythonhosted.org/packages/05/e2/88d2871e2da0be9d72b32de40d86310859df68091982cb9b86154db00d3f/txrwlock-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "31dfc3df213eaa924620bcf335aeee77", "sha256": "f837ba3f3337c940a333455ec0efc9565fe17138787c8c03eb19383dbe4a5630"}, "downloads": -1, "filename": "txrwlock-1.1.3.tar.gz", "has_sig": false, "md5_digest": "31dfc3df213eaa924620bcf335aeee77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25382, "upload_time": "2017-10-24T20:07:59", "upload_time_iso_8601": "2017-10-24T20:07:59.885225Z", "url": "https://files.pythonhosted.org/packages/95/4d/242fa317e1979fd98c86c9516761740d97d98d98c4f11a187af8e3fe2fa7/txrwlock-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "383542c852bbe62d674131a376db6baf", "sha256": "7d7923689014ed39f0663a6f33944166e34b044bcf288c0b6029f6642fe070b1"}, "downloads": -1, "filename": "txrwlock-1.1.4.tar.gz", "has_sig": false, "md5_digest": "383542c852bbe62d674131a376db6baf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25429, "upload_time": "2017-10-24T20:24:32", "upload_time_iso_8601": "2017-10-24T20:24:32.823910Z", "url": "https://files.pythonhosted.org/packages/1d/7e/85bf379a1c4241b9837b9e1b9ef7e73ed008bca26dc328590dbb532a7d2c/txrwlock-1.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "383542c852bbe62d674131a376db6baf", "sha256": "7d7923689014ed39f0663a6f33944166e34b044bcf288c0b6029f6642fe070b1"}, "downloads": -1, "filename": "txrwlock-1.1.4.tar.gz", "has_sig": false, "md5_digest": "383542c852bbe62d674131a376db6baf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25429, "upload_time": "2017-10-24T20:24:32", "upload_time_iso_8601": "2017-10-24T20:24:32.823910Z", "url": "https://files.pythonhosted.org/packages/1d/7e/85bf379a1c4241b9837b9e1b9ef7e73ed008bca26dc328590dbb532a7d2c/txrwlock-1.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:08 2020"}