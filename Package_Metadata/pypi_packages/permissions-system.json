{"info": {"author": "Shubham Biswas", "author_email": "shubhambiswas.zero@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8"], "description": "# Permissions Systems\n##### _It's plugin for fastapi (but can be used with similar frameworks), that provides a minimal_\n##### _setup for maintaining resources and related permissions for user-groups._\n\n#### How to use it?\n\n**application.py**\n\n```python\nfrom fastapi import FastAPI\nimport databases\nimport sqlalchemy\nimport os\nfrom permissions_system.PermissionsSystemDatabases import PermissionsS\n\napp = FastAPI()\n\nDB_URI = os.environ[\"DB_URI\"]\n\ndatabase = databases.Database(DB_URI)\nmetadata = sqlalchemy.MetaData()\nps = PermissionsS(metadata, database, DB_URI)\n\n\napp.add_event_handler(\"startup\", startup)\napp.add_event_handler(\"shutdown\", shutdown)\n\nasync def startup():\n    await database.connect()\n    await ps.setup()\n```\n*Step1 -* __instantiate PermissionsS class.__\n\n*Step2 -* __during startup event after database is connected make a call to setup()__\n*_________________________________________________________________________________________*\n\n__*PermissionsS will then detect your tables add them to resources, add super-admin user-group, if there aren't already. Everytime there is a new resource that gets added automatically to resources table. User-group super-admin by default has all CRUD permissions for all resources. To add a new user-group and related permissions use built-in functions add_user_group and add_permissions.*__\n\n*PermissionsSystem is not like django-admin or flask-admin. It doesn't provide a front-end admin dashboard, but a minimal setup to manage resources and permissions. It aims to provide autonomy and more control over to the developer. For front-end you will end up using something more custom or [React-admin](https://marmelab.com/react-admin/) or [vue-element-admin](https://github.com/PanJiaChen/vue-element-admin)*\n\n#### What's next?\n* Provide examples.\n* Support for GINO.\n* Support for mongoDB (using motor).\n* Support for TortoiseORM.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zero-shubham/permissions_system", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "permissions-system", "package_url": "https://pypi.org/project/permissions-system/", "platform": "", "project_url": "https://pypi.org/project/permissions-system/", "project_urls": {"Homepage": "https://github.com/zero-shubham/permissions_system"}, "release_url": "https://pypi.org/project/permissions-system/0.1.1/", "requires_dist": ["asyncpg (==0.20.1)", "autopep8 (==1.5.2)", "databases (==0.3.2)", "gino (==1.0.0)", "pycodestyle (==2.5.0)", "sqlalchemy (==1.3.16)"], "requires_python": "", "summary": "Alternative to admin utilities for more autonomy, targeted towards FastAPI.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Permissions Systems</h1>\n<h5><em>It's plugin for fastapi (but can be used with similar frameworks), that provides a minimal</em></h5>\n<h5><em>setup for maintaining resources and related permissions for user-groups.</em></h5>\n<h4>How to use it?</h4>\n<p><strong>application.py</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fastapi</span> <span class=\"kn\">import</span> <span class=\"n\">FastAPI</span>\n<span class=\"kn\">import</span> <span class=\"nn\">databases</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sqlalchemy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">permissions_system.PermissionsSystemDatabases</span> <span class=\"kn\">import</span> <span class=\"n\">PermissionsS</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">FastAPI</span><span class=\"p\">()</span>\n\n<span class=\"n\">DB_URI</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"DB_URI\"</span><span class=\"p\">]</span>\n\n<span class=\"n\">database</span> <span class=\"o\">=</span> <span class=\"n\">databases</span><span class=\"o\">.</span><span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"n\">DB_URI</span><span class=\"p\">)</span>\n<span class=\"n\">metadata</span> <span class=\"o\">=</span> <span class=\"n\">sqlalchemy</span><span class=\"o\">.</span><span class=\"n\">MetaData</span><span class=\"p\">()</span>\n<span class=\"n\">ps</span> <span class=\"o\">=</span> <span class=\"n\">PermissionsS</span><span class=\"p\">(</span><span class=\"n\">metadata</span><span class=\"p\">,</span> <span class=\"n\">database</span><span class=\"p\">,</span> <span class=\"n\">DB_URI</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">add_event_handler</span><span class=\"p\">(</span><span class=\"s2\">\"startup\"</span><span class=\"p\">,</span> <span class=\"n\">startup</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">add_event_handler</span><span class=\"p\">(</span><span class=\"s2\">\"shutdown\"</span><span class=\"p\">,</span> <span class=\"n\">shutdown</span><span class=\"p\">)</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">startup</span><span class=\"p\">():</span>\n    <span class=\"k\">await</span> <span class=\"n\">database</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n    <span class=\"k\">await</span> <span class=\"n\">ps</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">()</span>\n</pre>\n<p><em>Step1 -</em> <strong>instantiate PermissionsS class.</strong></p>\n<p><em>Step2 -</em> <strong>during startup event after database is connected make a call to setup()</strong>\n<em>_________________________________________________________________________________________</em></p>\n<p><strong><em>PermissionsS will then detect your tables add them to resources, add super-admin user-group, if there aren't already. Everytime there is a new resource that gets added automatically to resources table. User-group super-admin by default has all CRUD permissions for all resources. To add a new user-group and related permissions use built-in functions add_user_group and add_permissions.</em></strong></p>\n<p><em>PermissionsSystem is not like django-admin or flask-admin. It doesn't provide a front-end admin dashboard, but a minimal setup to manage resources and permissions. It aims to provide autonomy and more control over to the developer. For front-end you will end up using something more custom or <a href=\"https://marmelab.com/react-admin/\" rel=\"nofollow\">React-admin</a> or <a href=\"https://github.com/PanJiaChen/vue-element-admin\" rel=\"nofollow\">vue-element-admin</a></em></p>\n<h4>What's next?</h4>\n<ul>\n<li>Provide examples.</li>\n<li>Support for GINO.</li>\n<li>Support for mongoDB (using motor).</li>\n<li>Support for TortoiseORM.</li>\n</ul>\n\n          </div>"}, "last_serial": 7156792, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "dedf60ae4b49367000cef23c6eec00cb", "sha256": "9b0bf0846dce790cc17ea3c7c7d4f0fb04b1ce5e0c0f8bf725c20156824d1598"}, "downloads": -1, "filename": "permissions_system-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dedf60ae4b49367000cef23c6eec00cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4867, "upload_time": "2020-05-03T12:52:49", "upload_time_iso_8601": "2020-05-03T12:52:49.545163Z", "url": "https://files.pythonhosted.org/packages/95/c0/ba23572475da572dbdbd31a121cf40d737e552aa1b2ed5c9152d058ec85d/permissions_system-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70f5ebd68e6a40c07ba3eb1dbf7e5390", "sha256": "f3cad3ae26d705e1b325a093e865585242644cef7908df7b20c561f057ed7b14"}, "downloads": -1, "filename": "permissions-system-0.1.0.tar.gz", "has_sig": false, "md5_digest": "70f5ebd68e6a40c07ba3eb1dbf7e5390", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4407, "upload_time": "2020-05-03T12:52:51", "upload_time_iso_8601": "2020-05-03T12:52:51.895288Z", "url": "https://files.pythonhosted.org/packages/3a/44/9b154827d69f5b6041867317e870df4d7f9c68532b4725271d29dc58b494/permissions-system-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3a204a5822e7207c0e37513de922d046", "sha256": "5f038b802c4a8931778c2ea486dded45c571d5770c37af6e36d62199892db2d7"}, "downloads": -1, "filename": "permissions_system-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3a204a5822e7207c0e37513de922d046", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4870, "upload_time": "2020-05-03T13:13:43", "upload_time_iso_8601": "2020-05-03T13:13:43.299221Z", "url": "https://files.pythonhosted.org/packages/23/0a/a1b853d510ea3a08dd7373a555c078d04df00b0ec6fb1edc865a2bc3ffc3/permissions_system-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc5621bcc3e2dc010b755e5c18cec96e", "sha256": "af130505b0ff5d716dd26a9db3f4b77ba26cf874a2bde8737572b302c45ae7cf"}, "downloads": -1, "filename": "permissions-system-0.1.1.tar.gz", "has_sig": false, "md5_digest": "dc5621bcc3e2dc010b755e5c18cec96e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4404, "upload_time": "2020-05-03T13:13:44", "upload_time_iso_8601": "2020-05-03T13:13:44.672089Z", "url": "https://files.pythonhosted.org/packages/b4/da/237a856e384bd0d18614a808baec6607bee99bf8376a1da118bb4cb4135b/permissions-system-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3a204a5822e7207c0e37513de922d046", "sha256": "5f038b802c4a8931778c2ea486dded45c571d5770c37af6e36d62199892db2d7"}, "downloads": -1, "filename": "permissions_system-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3a204a5822e7207c0e37513de922d046", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4870, "upload_time": "2020-05-03T13:13:43", "upload_time_iso_8601": "2020-05-03T13:13:43.299221Z", "url": "https://files.pythonhosted.org/packages/23/0a/a1b853d510ea3a08dd7373a555c078d04df00b0ec6fb1edc865a2bc3ffc3/permissions_system-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc5621bcc3e2dc010b755e5c18cec96e", "sha256": "af130505b0ff5d716dd26a9db3f4b77ba26cf874a2bde8737572b302c45ae7cf"}, "downloads": -1, "filename": "permissions-system-0.1.1.tar.gz", "has_sig": false, "md5_digest": "dc5621bcc3e2dc010b755e5c18cec96e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4404, "upload_time": "2020-05-03T13:13:44", "upload_time_iso_8601": "2020-05-03T13:13:44.672089Z", "url": "https://files.pythonhosted.org/packages/b4/da/237a856e384bd0d18614a808baec6607bee99bf8376a1da118bb4cb4135b/permissions-system-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:15 2020"}