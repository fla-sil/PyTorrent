{"info": {"author": "realbucksavage", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Java Libraries"], "description": "# spring-config-client\n\nA Python client for [Spring Config Server](https://spring.io/projects/spring-cloud-config).\n\nThis library is inspired by [amenezes/config-client](https://github.com/amenezes/config-client) and is essentially a toned-down fork that I customized to fit my own needs.\n\n## Project goals\n\n- [x] Provide a basic client\n- [x] Provide basic authentication\n- [ ] Add support for CloudFoundry\n\n## Installation\n\nInstall using `pip`\n\n```shell\n$ pip install spring-config-client\n```\n\n## Usage\n\nThe very basic usage of this library looks like this:\n\n```python\nfrom spring_config import ClientConfigurationBuilder\nfrom spring_config.client import SpringConfigClient\n\nconfig = ClientConfigurationBuilder().app_name(\"test-application\").build()\n\nc = SpringConfigClient(config)\nc.get_config()\n```\n\nBy default, `ClientConfigurationBuilder` builds a `ClientConfiguration` object with server address and application profile set to `http://localhost:8888` and `development`. These can be changed like this:\n\nHere are some examples:\n\n```python\n# Fetch from http://someserver.com using profile \"development\"\nconfig = (\n    ClientConfigurationBuilder()\n    .app_name(\"test-application\")\n    .address(\"http://someserver.com\")\n    .build()\n)\n\n# Fetch from http://someserver.com using profile \"production\"\nconfig = (\n    ClientConfigurationBuilder()\n    .app_name(\"test-application\")\n    .address(\"http://someserver.com\")\n    .profile(\"production\")\n    .build()\n)\n```\n\n### Authentication\n\nIf your configuration server requires to use basic authentication, you can create the client configuration like this:\n\n```python\nfrom spring_config import ClientConfigurationBuilder\n\nconfig = (\n    ClientConfigurationBuilder()\n    .app_name(\"test-application\")\n    .authentication((\"username\", \"password\"))\n    .build()\n)\n```\n\n### Configuration options\n\nThe `ClientConfigurationBuilder` allow controlling these parameters.\n\n- Application Name : `app_name(\"some-app\")` - Default `None`, required.\n- Server Address : `address(\"http://some-server\")` - Default `http://localhost:8888`, optional.\n- Profile : `profile(\"production\")` - Default `development`, optional.\n- Branch : `branch(\"devel/0.1\")` - Default `master`, optional.\n\n## Requesting features\n\nPlease use the [issues section](https://github.com/realbucksavage/spring-config-client/issues) to request new features and I will try to take out my time to work on them. Contributions in any sorts are always welcome :)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://realbucksavage.github.io/spring-config-client", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "spring-config-client", "package_url": "https://pypi.org/project/spring-config-client/", "platform": "", "project_url": "https://pypi.org/project/spring-config-client/", "project_urls": {"Code": "https://github.com/realbucksavage/spring-config-client", "Documentation": "https://github.com/realbucksavage/spring-config-client", "Homepage": "https://realbucksavage.github.io/spring-config-client", "Issue tracker": "https://github.com/realbucksavage/spring-config-client/issues"}, "release_url": "https://pypi.org/project/spring-config-client/0.2/", "requires_dist": ["requests (>=2.22.0)"], "requires_python": ">=3.6.0", "summary": "A client for Spring Config Server", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>spring-config-client</h1>\n<p>A Python client for <a href=\"https://spring.io/projects/spring-cloud-config\" rel=\"nofollow\">Spring Config Server</a>.</p>\n<p>This library is inspired by <a href=\"https://github.com/amenezes/config-client\" rel=\"nofollow\">amenezes/config-client</a> and is essentially a toned-down fork that I customized to fit my own needs.</p>\n<h2>Project goals</h2>\n<ul>\n<li>[x] Provide a basic client</li>\n<li>[x] Provide basic authentication</li>\n<li>[ ] Add support for CloudFoundry</li>\n</ul>\n<h2>Installation</h2>\n<p>Install using <code>pip</code></p>\n<pre>$ pip install spring-config-client\n</pre>\n<h2>Usage</h2>\n<p>The very basic usage of this library looks like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">spring_config</span> <span class=\"kn\">import</span> <span class=\"n\">ClientConfigurationBuilder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">spring_config.client</span> <span class=\"kn\">import</span> <span class=\"n\">SpringConfigClient</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">ClientConfigurationBuilder</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">app_name</span><span class=\"p\">(</span><span class=\"s2\">\"test-application\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">SpringConfigClient</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get_config</span><span class=\"p\">()</span>\n</pre>\n<p>By default, <code>ClientConfigurationBuilder</code> builds a <code>ClientConfiguration</code> object with server address and application profile set to <code>http://localhost:8888</code> and <code>development</code>. These can be changed like this:</p>\n<p>Here are some examples:</p>\n<pre><span class=\"c1\"># Fetch from http://someserver.com using profile \"development\"</span>\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"n\">ClientConfigurationBuilder</span><span class=\"p\">()</span>\n    <span class=\"o\">.</span><span class=\"n\">app_name</span><span class=\"p\">(</span><span class=\"s2\">\"test-application\"</span><span class=\"p\">)</span>\n    <span class=\"o\">.</span><span class=\"n\">address</span><span class=\"p\">(</span><span class=\"s2\">\"http://someserver.com\"</span><span class=\"p\">)</span>\n    <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Fetch from http://someserver.com using profile \"production\"</span>\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"n\">ClientConfigurationBuilder</span><span class=\"p\">()</span>\n    <span class=\"o\">.</span><span class=\"n\">app_name</span><span class=\"p\">(</span><span class=\"s2\">\"test-application\"</span><span class=\"p\">)</span>\n    <span class=\"o\">.</span><span class=\"n\">address</span><span class=\"p\">(</span><span class=\"s2\">\"http://someserver.com\"</span><span class=\"p\">)</span>\n    <span class=\"o\">.</span><span class=\"n\">profile</span><span class=\"p\">(</span><span class=\"s2\">\"production\"</span><span class=\"p\">)</span>\n    <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>Authentication</h3>\n<p>If your configuration server requires to use basic authentication, you can create the client configuration like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">spring_config</span> <span class=\"kn\">import</span> <span class=\"n\">ClientConfigurationBuilder</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"n\">ClientConfigurationBuilder</span><span class=\"p\">()</span>\n    <span class=\"o\">.</span><span class=\"n\">app_name</span><span class=\"p\">(</span><span class=\"s2\">\"test-application\"</span><span class=\"p\">)</span>\n    <span class=\"o\">.</span><span class=\"n\">authentication</span><span class=\"p\">((</span><span class=\"s2\">\"username\"</span><span class=\"p\">,</span> <span class=\"s2\">\"password\"</span><span class=\"p\">))</span>\n    <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>Configuration options</h3>\n<p>The <code>ClientConfigurationBuilder</code> allow controlling these parameters.</p>\n<ul>\n<li>Application Name : <code>app_name(\"some-app\")</code> - Default <code>None</code>, required.</li>\n<li>Server Address : <code>address(\"http://some-server\")</code> - Default <code>http://localhost:8888</code>, optional.</li>\n<li>Profile : <code>profile(\"production\")</code> - Default <code>development</code>, optional.</li>\n<li>Branch : <code>branch(\"devel/0.1\")</code> - Default <code>master</code>, optional.</li>\n</ul>\n<h2>Requesting features</h2>\n<p>Please use the <a href=\"https://github.com/realbucksavage/spring-config-client/issues\" rel=\"nofollow\">issues section</a> to request new features and I will try to take out my time to work on them. Contributions in any sorts are always welcome :)</p>\n\n          </div>"}, "last_serial": 5902893, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "daaaf5752538cde2118248b6e6a3291e", "sha256": "706b88d591b3f54745939338ec552bd7d84b103e866cc366da4884e6ffd29d45"}, "downloads": -1, "filename": "spring_config_client-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "daaaf5752538cde2118248b6e6a3291e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 4555, "upload_time": "2019-09-18T13:20:06", "upload_time_iso_8601": "2019-09-18T13:20:06.960317Z", "url": "https://files.pythonhosted.org/packages/ac/c9/27a3b22c0515a795ab7b67d21a65d182da02551fd0d9e0973886ae075f5b/spring_config_client-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a94d0ac796de742c576bd9158914f086", "sha256": "92e1eec98d8626de85d9eca180b386d7c0dee35760fca2937dc245dc466374b7"}, "downloads": -1, "filename": "spring-config-client-0.1.tar.gz", "has_sig": false, "md5_digest": "a94d0ac796de742c576bd9158914f086", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 3188, "upload_time": "2019-09-18T13:20:30", "upload_time_iso_8601": "2019-09-18T13:20:30.261709Z", "url": "https://files.pythonhosted.org/packages/b3/1f/da4bc90ec16c9609c3a1568fcfde5e983e99c67e0439ff024dbef8424ed7/spring-config-client-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "cd06bde1f5b6a28ba789e5cf13f3b79b", "sha256": "f847e673f1f7b8c2cde4a74bf41821d365819fe3c3f3092957d954f0c9c452a3"}, "downloads": -1, "filename": "spring_config_client-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cd06bde1f5b6a28ba789e5cf13f3b79b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 5137, "upload_time": "2019-09-29T15:31:07", "upload_time_iso_8601": "2019-09-29T15:31:07.242960Z", "url": "https://files.pythonhosted.org/packages/a1/a9/3001f191231ada44271decc421380bd420a8b07dcbeff5e57a50562362a1/spring_config_client-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aebd298d004c76f74e528b609535241b", "sha256": "a794610c9eb2d3b082f7058b63c6c9cb45fa66b70bde1b96a86aeee41fc1f16c"}, "downloads": -1, "filename": "spring-config-client-0.2.tar.gz", "has_sig": false, "md5_digest": "aebd298d004c76f74e528b609535241b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 3695, "upload_time": "2019-09-29T15:31:09", "upload_time_iso_8601": "2019-09-29T15:31:09.005835Z", "url": "https://files.pythonhosted.org/packages/05/5d/424c72107948fef2f44d30e0336bea150caad96d4b569cf36485846fcf15/spring-config-client-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cd06bde1f5b6a28ba789e5cf13f3b79b", "sha256": "f847e673f1f7b8c2cde4a74bf41821d365819fe3c3f3092957d954f0c9c452a3"}, "downloads": -1, "filename": "spring_config_client-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cd06bde1f5b6a28ba789e5cf13f3b79b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 5137, "upload_time": "2019-09-29T15:31:07", "upload_time_iso_8601": "2019-09-29T15:31:07.242960Z", "url": "https://files.pythonhosted.org/packages/a1/a9/3001f191231ada44271decc421380bd420a8b07dcbeff5e57a50562362a1/spring_config_client-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aebd298d004c76f74e528b609535241b", "sha256": "a794610c9eb2d3b082f7058b63c6c9cb45fa66b70bde1b96a86aeee41fc1f16c"}, "downloads": -1, "filename": "spring-config-client-0.2.tar.gz", "has_sig": false, "md5_digest": "aebd298d004c76f74e528b609535241b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 3695, "upload_time": "2019-09-29T15:31:09", "upload_time_iso_8601": "2019-09-29T15:31:09.005835Z", "url": "https://files.pythonhosted.org/packages/05/5d/424c72107948fef2f44d30e0336bea150caad96d4b569cf36485846fcf15/spring-config-client-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:24 2020"}