{"info": {"author": "Rodney", "author_email": "rodney@rodney.io", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: Microsoft", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Games/Entertainment"], "description": "# Legendary\n## A free and open-source Epic Games Launcher replacement\n\nLegendary is an open-source game launcher that can download and install games from the Epic Games Store on Linux and Windows.\nIt's name as a tongue-in-cheek play on tiers of [item rarity in many MMORPGs](https://wow.gamepedia.com/Quality).\n\nRight now it is in an early public testing stage and still needs a lot of work to work. But it does work!\n\n**What works:**\n - Authenticating with Epic's service\n - Downloading and installing your games and their DLC\n - Delta patching/updating of installed games\n - Launching games with online authentication (for multiplayer)\n - Running games with WINE on Linux\n\n**Planned:**\n - Simple GUI for managing/launching games\n - Importing installed games from the EGS launcher\n - Better interfaces for other developers to use Legendary in their projects\n - Lots and lots of bug fixes, optimizations, and refactoring...\n\n## Requirements\n\n- python 3.8+ (64-bit on Windows)\n- requests\n- setuptools (only when installing/building)\n\n## How to run/install\n\n### Package Manager\n\nSome distros already have (unofficial) packages available, check out the [Available Linux Packages](https://github.com/derrod/legendary/wiki/Available-Linux-Packages) wiki page for details.\n\nCurrently this includes [Arch](https://github.com/derrod/legendary/wiki/Available-Linux-Packages#arch-aur) and [Fedora](https://github.com/derrod/legendary/wiki/Available-Linux-Packages#fedora) but more will be available in the future.\n\n### Standalone\nDownload the latest `legendary` or `legendary.exe` binary from [the latest release](https://github.com/derrod/legendary/releases/latest)\nand move it to somewhere in your `$PATH`/`%PATH%`. Don't forget to `chmod +x` it on Linux.\n\nThe Windows .exe and Linux executable were created with PyInstaller and will run standalone even without python being installed.\nNote that on Linux glibc >= 2.25 is required, so older distributions such as Ubuntu 16.04 or Debian stretch will not work.\n\n### Python package\n\nThe package is available on [PyPI](https://pypi.org/project/legendary-gl/), to install simply run:\n```bash\npip install legendary-gl\n```\n\nManually:\n- Install python3.8, setuptools and requests\n- Clone the git repository\n- Run `python3.8 setup.py install`\n\n#### Ubuntu 20.04 example\n\nUbuntu 20.04's standard repositories include everything needed to install legendary:\n````bash\nsudo apt install python3 python3-requests python3-setuptools-git\ngit clone https://github.com/derrod/legendary.git\ncd legendary\nsudo python3 setup.py install\n````\n\nNote that in this example we used `sudo` to install the package on the system, this may not be advisable depending on your setup.\n\n### Directly from the repo (for dev/testing)\n\n- Install python3.8 and requests (optionally in a venv)\n- cd into `legendary/` (the folder with `cli.py`)\n- run `PYTHONPATH=.. python3.8 cli.py`\n\n## Quickstart\n\nTo log in:\n````\n$ legendary auth\n````\nAuthentication is a little finicky since we have to go through the Epic website. The login page should open in your browser and after logging in you should be presented with a JSON response that contains a code, just copy and paste the code into your terminal to log in.\n\nListing your games\n````\n$ legendary list-games\n````\nThis will fetch a list of games available on your account, the first time may take a while depending on how many games you have.\n\nInstalling a game\n````\n$ legendary install Anemone\n````\n**Important:** the name used for these commands is the app name, *not* the game's name! The app name is in the parentheses after the game title in the games list.\n\nList installed games and check for updates\n````\n$ legendary list-installed --check-updates\n````\n\nLaunch (run) a game with online authentication\n````\n$ legendary launch Anemone\n````\n**Tip:** most games will run fine offline (`--offline`), and thus won't require launching through legendary for online authentication. You can run `legendary launch <App Name> --offline --dry-run` to get a command line that will launch the game with all parameters that would be used by the Epic Launcher. These can then be entered into any other game launcher (e.g. Lutris/Steam) if the game requires them.\n\n## Usage\n\n````\nusage: legendary [-h] [-v] [-y] [-V] {auth,install,download,update,uninstall,launch,list-games,list-installed,list-files} ...\n\nLegendary v0.0.X - \"Codename\"\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v                    Set loglevel to debug\n  -y                    Default to yes for all prompts\n  -V                    Print version and exit\n\nCommands:\n  {auth,install,download,update,uninstall,launch,list-games,list-installed,list-files}\n    auth                Authenticate with EPIC\n    install (download,update)\n                        Download a game\n    uninstall           Uninstall (delete) a game\n    launch              Launch a game\n    list-games          List available (installable) games\n    list-installed      List installed games\n    list-files          List files in manifest\n\nIndividual command help:\n\nCommand: auth\nusage: legendary auth [-h] [--import]\n\noptional arguments:\n  -h, --help  show this help message and exit\n  --import    Import EGS authentication data\n\n\nCommand: install\nusage: legendary install <App Name> [options]\n\nAliases: download, update\n\npositional arguments:\n  <App Name>            Name of the app\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --base-path <path>    Path for game installations (defaults to ~/legendary)\n  --game-folder <path>  Folder for game installation (defaults to folder in metadata)\n  --max-shared-memory <size>\n                        Maximum amount of shared memory to use (in MiB), default: 1 GiB\n  --max-workers <num>   Maximum amount of download workers, default: 2 * logical CPU\n  --manifest <uri>      Manifest URL or path to use instead of the CDN one (e.g. for downgrading)\n  --old-manifest <uri>  Manifest URL or path to use as the old one (e.g. for testing patching)\n  --base-url <url>      Base URL to download from (e.g. to test or switch to a different CDNs)\n  --force               Ignore existing files (overwrite)\n  --disable-patching    Do not attempt to patch existing installations (download entire changed file)\n  --download-only, --no-install\n                        Do not mark game as intalled and do not run prereq installers after download\n  --update-only         Abort if game is not already installed (for automation)\n  --dlm-debug           Set download manager and worker processes' loglevel to debug\n  --platform <Platform>\n                        Platform override for download (disables install)\n  --prefix <prefix>     Only fetch files whose path starts with <prefix> (case insensitive)\n  --exclude <prefix>    Exclude files starting with <prefix> (case insensitive)\n  --install-tag <tag>   Only download files with the specified install tag (testing)\n  --enable-reordering   Enable reordering to attempt to optimize RAM usage during download\n  --dl-timeout <sec>    Connection timeout for downloader (default: 10 seconds)\n\n\nCommand: uninstall\nusage: legendary uninstall [-h] <App Name>\n\npositional arguments:\n  <App Name>  Name of the app\n\noptional arguments:\n  -h, --help  show this help message and exit\n\n\nCommand: launch\nusage: legendary launch <App Name> [options]\n\nNote: additional arguments are passed to the game\n\npositional arguments:\n  <App Name>            Name of the app\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --offline             Skip login and launch game without online authentication\n  --skip-version-check  Skip version check when launching game in online mode\n  --override-username <username>\n                        Override username used when launching the game (only works with some titles)\n  --dry-run             Print the command line that would have been used to launch the game and exit\n\n\nCommand: list-games\nusage: legendary list-games [-h] [--platform <Platform>] [--include-ue] [--csv] [--tsv]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --platform <Platform>\n                        Override platform that games are shown for\n  --include-ue          Also include Unreal Engine content in list\n  --csv                 List games in CSV format\n  --tsv                 List games in TSV format\n\n\nCommand: list-installed\nusage: legendary list-installed [-h] [--check-updates] [--csv] [--tsv]\n\noptional arguments:\n  -h, --help       show this help message and exit\n  --check-updates  Check for updates when listing installed games\n  --csv            List games in CSV format\n  --tsv            List games in TSV format\n\n\nCommand: list-files\nusage: legendary list-files [-h] [--force-download] [--platform <Platform>] [--manifest <uri>] [--csv] [--tsv] [--hashlist] [--install-tag <tag>] [<App Name>]\n\npositional arguments:\n  <App Name>            Name of the app\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --force-download      Always download instead of using on-disk manifest\n  --platform <Platform>\n                        Platform override for download (disables install)\n  --manifest <uri>      Manifest URL or path to use instead of the CDN one\n  --csv                 Output in CSV format\n  --tsv                 Output in TSV format\n  --hashlist            Output file hash list in hashcheck/sha1sum compatible format\n  --install-tag <tag>   Show only files with specified install tag\n````\n\n\n## Config file\n\nLegendary supports some options as well as game specific configuration in `~/.config/legendary/config.ini`:\n````ini\n[Legendary]\nlog_level = debug\n; maximum shared memory (in MiB) to use for installation\nmax_memory = 1024\n; default install directory\ninstall_dir = /mnt/tank/games\n\n; default settings to use (currently limited to WINE executable)\n[default]\n; (linux) specify wine executable to use\nwine_executable = wine\n\n; default environment variables to set (overriden by game specific ones)\n[default.env]\nWINEPREFIX = /home/user/legendary/.wine\n\n; Settings to only use for \"AppName\"\n[AppName]\n; launch game without online authentication by default\noffline = true\n; Skip checking for updates when launching this game\nskip_update_check = true\n; start parameters to use (in addition to the required ones)\nstart_params = -windowed\nwine_executable = proton\n\n[AppName.env]\n; environment variables to set for this game (mostly useful on linux)\nWINEPREFIX = /mnt/tank/games/Game/.wine\nDXVK_CONFIG_FILE = /mnt/tank/games/Game/dxvk.conf\n````\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/derrod/legendary", "keywords": "", "license": "GPL-3", "maintainer": "", "maintainer_email": "", "name": "legendary-gl", "package_url": "https://pypi.org/project/legendary-gl/", "platform": "", "project_url": "https://pypi.org/project/legendary-gl/", "project_urls": {"Homepage": "https://github.com/derrod/legendary"}, "release_url": "https://pypi.org/project/legendary-gl/0.0.10/", "requires_dist": ["requests (<3.0)", "setuptools", "wheel"], "requires_python": ">=3.8", "summary": "Free and open-source replacement for the Epic Games Launcher application", "version": "0.0.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Legendary</h1>\n<h2>A free and open-source Epic Games Launcher replacement</h2>\n<p>Legendary is an open-source game launcher that can download and install games from the Epic Games Store on Linux and Windows.\nIt's name as a tongue-in-cheek play on tiers of <a href=\"https://wow.gamepedia.com/Quality\" rel=\"nofollow\">item rarity in many MMORPGs</a>.</p>\n<p>Right now it is in an early public testing stage and still needs a lot of work to work. But it does work!</p>\n<p><strong>What works:</strong></p>\n<ul>\n<li>Authenticating with Epic's service</li>\n<li>Downloading and installing your games and their DLC</li>\n<li>Delta patching/updating of installed games</li>\n<li>Launching games with online authentication (for multiplayer)</li>\n<li>Running games with WINE on Linux</li>\n</ul>\n<p><strong>Planned:</strong></p>\n<ul>\n<li>Simple GUI for managing/launching games</li>\n<li>Importing installed games from the EGS launcher</li>\n<li>Better interfaces for other developers to use Legendary in their projects</li>\n<li>Lots and lots of bug fixes, optimizations, and refactoring...</li>\n</ul>\n<h2>Requirements</h2>\n<ul>\n<li>python 3.8+ (64-bit on Windows)</li>\n<li>requests</li>\n<li>setuptools (only when installing/building)</li>\n</ul>\n<h2>How to run/install</h2>\n<h3>Package Manager</h3>\n<p>Some distros already have (unofficial) packages available, check out the <a href=\"https://github.com/derrod/legendary/wiki/Available-Linux-Packages\" rel=\"nofollow\">Available Linux Packages</a> wiki page for details.</p>\n<p>Currently this includes <a href=\"https://github.com/derrod/legendary/wiki/Available-Linux-Packages#arch-aur\" rel=\"nofollow\">Arch</a> and <a href=\"https://github.com/derrod/legendary/wiki/Available-Linux-Packages#fedora\" rel=\"nofollow\">Fedora</a> but more will be available in the future.</p>\n<h3>Standalone</h3>\n<p>Download the latest <code>legendary</code> or <code>legendary.exe</code> binary from <a href=\"https://github.com/derrod/legendary/releases/latest\" rel=\"nofollow\">the latest release</a>\nand move it to somewhere in your <code>$PATH</code>/<code>%PATH%</code>. Don't forget to <code>chmod +x</code> it on Linux.</p>\n<p>The Windows .exe and Linux executable were created with PyInstaller and will run standalone even without python being installed.\nNote that on Linux glibc &gt;= 2.25 is required, so older distributions such as Ubuntu 16.04 or Debian stretch will not work.</p>\n<h3>Python package</h3>\n<p>The package is available on <a href=\"https://pypi.org/project/legendary-gl/\" rel=\"nofollow\">PyPI</a>, to install simply run:</p>\n<pre>pip install legendary-gl\n</pre>\n<p>Manually:</p>\n<ul>\n<li>Install python3.8, setuptools and requests</li>\n<li>Clone the git repository</li>\n<li>Run <code>python3.8 setup.py install</code></li>\n</ul>\n<h4>Ubuntu 20.04 example</h4>\n<p>Ubuntu 20.04's standard repositories include everything needed to install legendary:</p>\n<pre>sudo apt install python3 python3-requests python3-setuptools-git\ngit clone https://github.com/derrod/legendary.git\n<span class=\"nb\">cd</span> legendary\nsudo python3 setup.py install\n</pre>\n<p>Note that in this example we used <code>sudo</code> to install the package on the system, this may not be advisable depending on your setup.</p>\n<h3>Directly from the repo (for dev/testing)</h3>\n<ul>\n<li>Install python3.8 and requests (optionally in a venv)</li>\n<li>cd into <code>legendary/</code> (the folder with <code>cli.py</code>)</li>\n<li>run <code>PYTHONPATH=.. python3.8 cli.py</code></li>\n</ul>\n<h2>Quickstart</h2>\n<p>To log in:</p>\n<pre><code>$ legendary auth\n</code></pre>\n<p>Authentication is a little finicky since we have to go through the Epic website. The login page should open in your browser and after logging in you should be presented with a JSON response that contains a code, just copy and paste the code into your terminal to log in.</p>\n<p>Listing your games</p>\n<pre><code>$ legendary list-games\n</code></pre>\n<p>This will fetch a list of games available on your account, the first time may take a while depending on how many games you have.</p>\n<p>Installing a game</p>\n<pre><code>$ legendary install Anemone\n</code></pre>\n<p><strong>Important:</strong> the name used for these commands is the app name, <em>not</em> the game's name! The app name is in the parentheses after the game title in the games list.</p>\n<p>List installed games and check for updates</p>\n<pre><code>$ legendary list-installed --check-updates\n</code></pre>\n<p>Launch (run) a game with online authentication</p>\n<pre><code>$ legendary launch Anemone\n</code></pre>\n<p><strong>Tip:</strong> most games will run fine offline (<code>--offline</code>), and thus won't require launching through legendary for online authentication. You can run <code>legendary launch &lt;App Name&gt; --offline --dry-run</code> to get a command line that will launch the game with all parameters that would be used by the Epic Launcher. These can then be entered into any other game launcher (e.g. Lutris/Steam) if the game requires them.</p>\n<h2>Usage</h2>\n<pre><code>usage: legendary [-h] [-v] [-y] [-V] {auth,install,download,update,uninstall,launch,list-games,list-installed,list-files} ...\n\nLegendary v0.0.X - \"Codename\"\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v                    Set loglevel to debug\n  -y                    Default to yes for all prompts\n  -V                    Print version and exit\n\nCommands:\n  {auth,install,download,update,uninstall,launch,list-games,list-installed,list-files}\n    auth                Authenticate with EPIC\n    install (download,update)\n                        Download a game\n    uninstall           Uninstall (delete) a game\n    launch              Launch a game\n    list-games          List available (installable) games\n    list-installed      List installed games\n    list-files          List files in manifest\n\nIndividual command help:\n\nCommand: auth\nusage: legendary auth [-h] [--import]\n\noptional arguments:\n  -h, --help  show this help message and exit\n  --import    Import EGS authentication data\n\n\nCommand: install\nusage: legendary install &lt;App Name&gt; [options]\n\nAliases: download, update\n\npositional arguments:\n  &lt;App Name&gt;            Name of the app\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --base-path &lt;path&gt;    Path for game installations (defaults to ~/legendary)\n  --game-folder &lt;path&gt;  Folder for game installation (defaults to folder in metadata)\n  --max-shared-memory &lt;size&gt;\n                        Maximum amount of shared memory to use (in MiB), default: 1 GiB\n  --max-workers &lt;num&gt;   Maximum amount of download workers, default: 2 * logical CPU\n  --manifest &lt;uri&gt;      Manifest URL or path to use instead of the CDN one (e.g. for downgrading)\n  --old-manifest &lt;uri&gt;  Manifest URL or path to use as the old one (e.g. for testing patching)\n  --base-url &lt;url&gt;      Base URL to download from (e.g. to test or switch to a different CDNs)\n  --force               Ignore existing files (overwrite)\n  --disable-patching    Do not attempt to patch existing installations (download entire changed file)\n  --download-only, --no-install\n                        Do not mark game as intalled and do not run prereq installers after download\n  --update-only         Abort if game is not already installed (for automation)\n  --dlm-debug           Set download manager and worker processes' loglevel to debug\n  --platform &lt;Platform&gt;\n                        Platform override for download (disables install)\n  --prefix &lt;prefix&gt;     Only fetch files whose path starts with &lt;prefix&gt; (case insensitive)\n  --exclude &lt;prefix&gt;    Exclude files starting with &lt;prefix&gt; (case insensitive)\n  --install-tag &lt;tag&gt;   Only download files with the specified install tag (testing)\n  --enable-reordering   Enable reordering to attempt to optimize RAM usage during download\n  --dl-timeout &lt;sec&gt;    Connection timeout for downloader (default: 10 seconds)\n\n\nCommand: uninstall\nusage: legendary uninstall [-h] &lt;App Name&gt;\n\npositional arguments:\n  &lt;App Name&gt;  Name of the app\n\noptional arguments:\n  -h, --help  show this help message and exit\n\n\nCommand: launch\nusage: legendary launch &lt;App Name&gt; [options]\n\nNote: additional arguments are passed to the game\n\npositional arguments:\n  &lt;App Name&gt;            Name of the app\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --offline             Skip login and launch game without online authentication\n  --skip-version-check  Skip version check when launching game in online mode\n  --override-username &lt;username&gt;\n                        Override username used when launching the game (only works with some titles)\n  --dry-run             Print the command line that would have been used to launch the game and exit\n\n\nCommand: list-games\nusage: legendary list-games [-h] [--platform &lt;Platform&gt;] [--include-ue] [--csv] [--tsv]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --platform &lt;Platform&gt;\n                        Override platform that games are shown for\n  --include-ue          Also include Unreal Engine content in list\n  --csv                 List games in CSV format\n  --tsv                 List games in TSV format\n\n\nCommand: list-installed\nusage: legendary list-installed [-h] [--check-updates] [--csv] [--tsv]\n\noptional arguments:\n  -h, --help       show this help message and exit\n  --check-updates  Check for updates when listing installed games\n  --csv            List games in CSV format\n  --tsv            List games in TSV format\n\n\nCommand: list-files\nusage: legendary list-files [-h] [--force-download] [--platform &lt;Platform&gt;] [--manifest &lt;uri&gt;] [--csv] [--tsv] [--hashlist] [--install-tag &lt;tag&gt;] [&lt;App Name&gt;]\n\npositional arguments:\n  &lt;App Name&gt;            Name of the app\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --force-download      Always download instead of using on-disk manifest\n  --platform &lt;Platform&gt;\n                        Platform override for download (disables install)\n  --manifest &lt;uri&gt;      Manifest URL or path to use instead of the CDN one\n  --csv                 Output in CSV format\n  --tsv                 Output in TSV format\n  --hashlist            Output file hash list in hashcheck/sha1sum compatible format\n  --install-tag &lt;tag&gt;   Show only files with specified install tag\n</code></pre>\n<h2>Config file</h2>\n<p>Legendary supports some options as well as game specific configuration in <code>~/.config/legendary/config.ini</code>:</p>\n<pre><span class=\"k\">[Legendary]</span>\n<span class=\"na\">log_level</span> <span class=\"o\">=</span> <span class=\"s\">debug</span>\n<span class=\"c1\">; maximum shared memory (in MiB) to use for installation</span>\n<span class=\"na\">max_memory</span> <span class=\"o\">=</span> <span class=\"s\">1024</span>\n<span class=\"c1\">; default install directory</span>\n<span class=\"na\">install_dir</span> <span class=\"o\">=</span> <span class=\"s\">/mnt/tank/games</span>\n\n<span class=\"c1\">; default settings to use (currently limited to WINE executable)</span>\n<span class=\"k\">[default]</span>\n<span class=\"c1\">; (linux) specify wine executable to use</span>\n<span class=\"na\">wine_executable</span> <span class=\"o\">=</span> <span class=\"s\">wine</span>\n\n<span class=\"c1\">; default environment variables to set (overriden by game specific ones)</span>\n<span class=\"k\">[default.env]</span>\n<span class=\"na\">WINEPREFIX</span> <span class=\"o\">=</span> <span class=\"s\">/home/user/legendary/.wine</span>\n\n<span class=\"c1\">; Settings to only use for \"AppName\"</span>\n<span class=\"k\">[AppName]</span>\n<span class=\"c1\">; launch game without online authentication by default</span>\n<span class=\"na\">offline</span> <span class=\"o\">=</span> <span class=\"s\">true</span>\n<span class=\"c1\">; Skip checking for updates when launching this game</span>\n<span class=\"na\">skip_update_check</span> <span class=\"o\">=</span> <span class=\"s\">true</span>\n<span class=\"c1\">; start parameters to use (in addition to the required ones)</span>\n<span class=\"na\">start_params</span> <span class=\"o\">=</span> <span class=\"s\">-windowed</span>\n<span class=\"na\">wine_executable</span> <span class=\"o\">=</span> <span class=\"s\">proton</span>\n\n<span class=\"k\">[AppName.env]</span>\n<span class=\"c1\">; environment variables to set for this game (mostly useful on linux)</span>\n<span class=\"na\">WINEPREFIX</span> <span class=\"o\">=</span> <span class=\"s\">/mnt/tank/games/Game/.wine</span>\n<span class=\"na\">DXVK_CONFIG_FILE</span> <span class=\"o\">=</span> <span class=\"s\">/mnt/tank/games/Game/dxvk.conf</span>\n</pre>\n\n          </div>"}, "last_serial": 7172352, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "af833d1eabbbd69ccc2586092c47c45b", "sha256": "623a75af26fc9c0a029a325c46b25c3ea4364f00bb1f827cf18a002070292fce"}, "downloads": -1, "filename": "legendary_gl-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "af833d1eabbbd69ccc2586092c47c45b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 60269, "upload_time": "2020-05-05T14:29:51", "upload_time_iso_8601": "2020-05-05T14:29:51.382626Z", "url": "https://files.pythonhosted.org/packages/99/24/71b1feb085dddf81fd94ec538b08c60a366bdc84261a92c2e119f0779410/legendary_gl-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f42e3039e6c44e9537082b02db242ebc", "sha256": "5c06428e54c6ff497858031fe1c4138c9ce5c11b45fc65f7896eb2052d624d0c"}, "downloads": -1, "filename": "legendary-gl-0.0.10.tar.gz", "has_sig": false, "md5_digest": "f42e3039e6c44e9537082b02db242ebc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 46494, "upload_time": "2020-05-05T14:29:52", "upload_time_iso_8601": "2020-05-05T14:29:52.267265Z", "url": "https://files.pythonhosted.org/packages/c6/d5/15b541e63a41d2ddee290d5a36d6cebac07d03331b8c2e552fea8779d9a5/legendary-gl-0.0.10.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "77ad12f4edef985e48391c1ead50e1b7", "sha256": "49654036744f50b71c1074f7e62edc661baa164167d64bf570b177e179792035"}, "downloads": -1, "filename": "legendary_gl-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "77ad12f4edef985e48391c1ead50e1b7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 57316, "upload_time": "2020-04-30T14:36:30", "upload_time_iso_8601": "2020-04-30T14:36:30.912982Z", "url": "https://files.pythonhosted.org/packages/49/d6/97bbf7722eb5efb3a16762d3f1ee962ddcb9e25a4ed5204b6d6309ac97ce/legendary_gl-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8366b2996d882fa1b7e493d9caf3496e", "sha256": "d7ce4cb5cbfc8538574892e57dd89fb54d5210938d8260f1726683f3310c7894"}, "downloads": -1, "filename": "legendary-gl-0.0.6.tar.gz", "has_sig": false, "md5_digest": "8366b2996d882fa1b7e493d9caf3496e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 43345, "upload_time": "2020-04-30T14:36:32", "upload_time_iso_8601": "2020-04-30T14:36:32.687418Z", "url": "https://files.pythonhosted.org/packages/0a/2c/df4fbafe51810adfc77de835f203bee6d820003d234ff21b8140052479ac/legendary-gl-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "76fe9d7d15c8db257ab1c13557f55dc9", "sha256": "10d4dfe9f57f01b4e3d00e10458a9981ef8701ef41c3395f012c1eca79b020d2"}, "downloads": -1, "filename": "legendary_gl-0.0.7-3-py3-none-any.whl", "has_sig": false, "md5_digest": "76fe9d7d15c8db257ab1c13557f55dc9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 60127, "upload_time": "2020-05-04T14:17:07", "upload_time_iso_8601": "2020-05-04T14:17:07.948806Z", "url": "https://files.pythonhosted.org/packages/96/f8/a00b8b905d44d13578408f7f4385332eb865be6bee86e5ae5281799bf83f/legendary_gl-0.0.7-3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a823a56eb7c9ce95a9ea94642f9588f1", "sha256": "2a1c10781586de00eb155650f8ad3e9aca8366d743761000290832e2d349476b"}, "downloads": -1, "filename": "legendary-gl-0.0.7-3.tar.gz", "has_sig": false, "md5_digest": "a823a56eb7c9ce95a9ea94642f9588f1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 46511, "upload_time": "2020-05-04T14:17:08", "upload_time_iso_8601": "2020-05-04T14:17:08.894302Z", "url": "https://files.pythonhosted.org/packages/fe/93/2c2df59311c6181035bf397a81265bce3d316167d380106b33ac7100ef13/legendary-gl-0.0.7-3.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "dbda842450cb94917a454a6fc6348983", "sha256": "fdac34b9f8606e55bffb54b23c7c156e580e8977a90ea158c5cbb3ed58430c7c"}, "downloads": -1, "filename": "legendary_gl-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "dbda842450cb94917a454a6fc6348983", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 60127, "upload_time": "2020-05-04T14:33:54", "upload_time_iso_8601": "2020-05-04T14:33:54.414902Z", "url": "https://files.pythonhosted.org/packages/e9/a0/31bf1b1085c14a046e508e64473bb2b269bb095ddf9b5a0b1b36a540978b/legendary_gl-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74328092d367d93838a74f22481d18ef", "sha256": "3c9367f844144b47b7f4c292640d00ac94406f7fd2cb32dc2fdcb8ba4f560e15"}, "downloads": -1, "filename": "legendary-gl-0.0.8.tar.gz", "has_sig": false, "md5_digest": "74328092d367d93838a74f22481d18ef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 46499, "upload_time": "2020-05-04T14:33:55", "upload_time_iso_8601": "2020-05-04T14:33:55.309338Z", "url": "https://files.pythonhosted.org/packages/cd/99/6ab7417206a2bf48a8800f1e1e17b8e50c2619c7f25c786a7b1cc10ff0a8/legendary-gl-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "919658d5fd277488019e961a6fb92a28", "sha256": "f458e3aac4e611f9f76061fe8ec436c7e440b2a2c1c84779b847adf24c5aa4e3"}, "downloads": -1, "filename": "legendary_gl-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "919658d5fd277488019e961a6fb92a28", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 60207, "upload_time": "2020-05-04T17:54:57", "upload_time_iso_8601": "2020-05-04T17:54:57.924055Z", "url": "https://files.pythonhosted.org/packages/35/ff/65cea0419679f9ef33a5a79374f81e8a8a32711bd62ba8ae5ec824cc8876/legendary_gl-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce2ca2afdc4cd4bbd27bf5a955739130", "sha256": "aaa64bc0f862b04a0b44d6f4496fdd3ca8508bcb119ff35483938c143266c29a"}, "downloads": -1, "filename": "legendary-gl-0.0.9.tar.gz", "has_sig": false, "md5_digest": "ce2ca2afdc4cd4bbd27bf5a955739130", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 46585, "upload_time": "2020-05-04T17:54:59", "upload_time_iso_8601": "2020-05-04T17:54:59.048959Z", "url": "https://files.pythonhosted.org/packages/92/4f/c067da0ae1852b8db0e6fa89d0d61172cbe11e8629c45c3c6e9e19d66a36/legendary-gl-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "af833d1eabbbd69ccc2586092c47c45b", "sha256": "623a75af26fc9c0a029a325c46b25c3ea4364f00bb1f827cf18a002070292fce"}, "downloads": -1, "filename": "legendary_gl-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "af833d1eabbbd69ccc2586092c47c45b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 60269, "upload_time": "2020-05-05T14:29:51", "upload_time_iso_8601": "2020-05-05T14:29:51.382626Z", "url": "https://files.pythonhosted.org/packages/99/24/71b1feb085dddf81fd94ec538b08c60a366bdc84261a92c2e119f0779410/legendary_gl-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f42e3039e6c44e9537082b02db242ebc", "sha256": "5c06428e54c6ff497858031fe1c4138c9ce5c11b45fc65f7896eb2052d624d0c"}, "downloads": -1, "filename": "legendary-gl-0.0.10.tar.gz", "has_sig": false, "md5_digest": "f42e3039e6c44e9537082b02db242ebc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 46494, "upload_time": "2020-05-05T14:29:52", "upload_time_iso_8601": "2020-05-05T14:29:52.267265Z", "url": "https://files.pythonhosted.org/packages/c6/d5/15b541e63a41d2ddee290d5a36d6cebac07d03331b8c2e552fea8779d9a5/legendary-gl-0.0.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:12 2020"}