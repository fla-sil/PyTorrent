{"info": {"author": "ramusus, Romeno", "author_email": "ramusus@gmail.com, RomenoEx@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Django Odnoklassniki Photos\n===========================\n\n[![PyPI version](https://badge.fury.io/py/django-odnoklassniki-photos.png)](http://badge.fury.io/py/django-odnoklassniki-photos) [![Build Status](https://travis-ci.org/ramusus/django-odnoklassniki-photos.png?branch=master)](https://travis-ci.org/ramusus/django-odnoklassniki-photos) [![Coverage Status](https://coveralls.io/repos/ramusus/django-odnoklassniki-photos/badge.png?branch=master)](https://coveralls.io/r/ramusus/django-odnoklassniki-photos)\n\n\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u044f\u043c\u0438 \u0438 \u0430\u043b\u044c\u0431\u043e\u043c\u0430\u043c\u0438 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0439 \u0441\u043e\u0446. \u0441\u0435\u0442\u0438 \u041e\u0434\u043d\u043e\u043a\u043b\u0430\u0441\u0441\u043d\u0438\u043a\u0438, \u0438\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u043e\u0439 \u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u0433\u0440\u0443\u043f\u043f \u0447\u0435\u0440\u0435\u0437 OK API \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 Django\n\n\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\n---------\n\n    pip install django-odnoklassniki-photos\n\n\u0412 `settings.py` \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c:\n\n    INSTALLED_APPS = (\n        ...\n        'oauth_tokens',\n        'taggit',\n        'odnoklassniki_api',\n        'odnoklassniki_groups',\n        'odnoklassniki_users',\n        'odnoklassniki_photos',\n    )\n\n    # oauth-tokens settings\n    OAUTH_TOKENS_HISTORY = True                                             # to keep in DB expired access tokens\n    OAUTH_TOKENS_ODNOKLASSNIKI_CLIENT_ID = 12345678                         # application id\n    OAUTH_TOKENS_ODNOKLASSNIKI_CLIENT_PUBLIC = ''                           # application public key\n    OAUTH_TOKENS_ODNOKLASSNIKI_CLIENT_SECRET = ''                           # application secret key\n    OAUTH_TOKENS_ODNOKLASSNIKI_SCOPE = ['']                                 # application scopes\n    OAUTH_TOKENS_ODNOKLASSNIKI_USERNAME = ''                                # user login\n    OAUTH_TOKENS_ODNOKLASSNIKI_PASSWORD = ''                                # user password\n\n\u041f\u043e\u043a\u0440\u044b\u0442\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 API\n--------------------\n\n* [photo.getAlbums](http://apiok.ru/wiki/display/api/photo.getAlbums) \u2013 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0430\u043b\u044c\u0431\u043e\u043c\u043e\u0432 \u0433\u0440\u0443\u043f\u043f\u044b;\n* [photo.getAlbumInfo](http://apiok.ru/wiki/display/api/photo.getAlbumInfo) \u2013 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043f\u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c\u0443 \u0430\u043b\u044c\u0431\u043e\u043c\u0443;\n* [photo.getAlbumLikes](http://apiok.ru/wiki/display/api/photo.getAlbumLikes) \u2013 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0432\u0448\u0438\u0445 \"\u041a\u043b\u0430\u0441\u0441\" \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c\u0443 \u0430\u043b\u044c\u0431\u043e\u043c\u0443;\n* [photo.getInfo](http://apiok.ru/wiki/display/api/photo.getInfo) \u2013 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043f\u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0444\u043e\u0442\u043a\u0435;\n* [photo.getPhotos](http://apiok.ru/wiki/display/api/photo.getPhotos) \u2013 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0439 \u0430\u043b\u044c\u0431\u043e\u043c\u0430 \u0433\u0440\u0443\u043f\u043f\u044b;\n* [photo.getPhotoLikes](http://apiok.ru/wiki/display/api/photo.getPhotoLikes) \u2013 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0432\u0448\u0438\u0445 \"\u041a\u043b\u0430\u0441\u0441\" \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0444\u043e\u0442\u043a\u0435;\n\n\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f\n---------------------\n\n\u0412\u0441\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0430\u043d\u0438\u044f \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0432 \u0442\u0435\u0441\u0442\u0430\u0445 (test.py). \u041d\u0438\u0436\u0435 \u043a\u0440\u0430\u0442\u043a\u0438\u0439 \u043f\u0435\u0440\u0435\u0447\u0435\u043d\u044c\n\n### \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0430\u043b\u044c\u0431\u043e\u043c\u043e\u0432 \u0433\u0440\u0443\u043f\u043f\u044b\n\n    >>> from odnoklassniki_photos.models import Album\n    >>> from odnoklassniki_groups.models import Group\n    >>> group = Group.remote.fetch(ids=[50415375614101])[0]\n    >>> Album.remote.fetch_group_specific(group=group, ids=[51836162801813, 51751246299285])\n    [<Album: Album object>, <Album: Album object>]\n    >>> Album.remote.fetch(group=group, all=True)\n    [<Album: Album object>, <Album: Album object>, <Album: Album object>, ... ]\n\n### \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0439 \u0433\u0440\u0443\u043f\u043f\u044b\n\n    >>> from odnoklassniki_groups.models import Group\n    >>> from odnoklassniki_photos.models import Album, Photo\n    >>> group = Group.remote.fetch(ids=[50415375614101])[0]\n    >>> album = Album.remote.fetch_group_specific(group=group, ids=[51836162801813])[0]\n    >>> Photo.remote.fetch(group=group, album=album, all=True)\n    [<Photo: Photo object>, <Photo: Photo object>, <Photo: Photo object>, ... ]\n\n### \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043b\u0430\u0439\u043a\u043e\u0432 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438\u0438\n\n\u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f:\n[`django-odnoklassniki-users`](http://github.com/ramusus/django-odnoklassniki-users/) \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0435\u0433\u043e \u0432 `INSTALLED_APPS`\n[`django-m2m-history`](http://github.com/ramusus/django-m2m-history/)\n\n    >>> from odnoklassniki_groups.models import Group\n    >>> from odnoklassniki_photos.models import Album, Photo\n    >>> group = Group.remote.fetch(ids=[44257342587000])[0]\n    >>> album = Album.remote.fetch_group_specific(group=group, ids=[53047339778168])[0]\n    >>> photo = Photo.remote.fetch_group_specific(group=group, album=album, ids=[545406014072])[0]\n    >>> users = photo.fetch_likes()\n    >>> users.count()\n    146", "description_content_type": null, "docs_url": null, "download_url": "http://pypi.python.org/pypi/django-odnoklassniki-photos", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ramusus/django-odnoklassniki-photos", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-odnoklassniki-photos", "package_url": "https://pypi.org/project/django-odnoklassniki-photos/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-odnoklassniki-photos/", "project_urls": {"Download": "http://pypi.python.org/pypi/django-odnoklassniki-photos", "Homepage": "https://github.com/ramusus/django-odnoklassniki-photos"}, "release_url": "https://pypi.org/project/django-odnoklassniki-photos/0.1.5/", "requires_dist": null, "requires_python": null, "summary": "Django implementation for odnoklassniki Photo and Album API", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            Django Odnoklassniki Photos<br>===========================<br><br>[![PyPI version](https://badge.fury.io/py/django-odnoklassniki-photos.png)](http://badge.fury.io/py/django-odnoklassniki-photos) [![Build Status](https://travis-ci.org/ramusus/django-odnoklassniki-photos.png?branch=master)](https://travis-ci.org/ramusus/django-odnoklassniki-photos) [![Coverage Status](https://coveralls.io/repos/ramusus/django-odnoklassniki-photos/badge.png?branch=master)](https://coveralls.io/r/ramusus/django-odnoklassniki-photos)<br><br>\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u044f\u043c\u0438 \u0438 \u0430\u043b\u044c\u0431\u043e\u043c\u0430\u043c\u0438 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0439 \u0441\u043e\u0446. \u0441\u0435\u0442\u0438 \u041e\u0434\u043d\u043e\u043a\u043b\u0430\u0441\u0441\u043d\u0438\u043a\u0438, \u0438\u0445 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u043e\u0439 \u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u0433\u0440\u0443\u043f\u043f \u0447\u0435\u0440\u0435\u0437 OK API \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 Django<br><br>\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430<br>---------<br><br>    pip install django-odnoklassniki-photos<br><br>\u0412 `settings.py` \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c:<br><br>    INSTALLED_APPS = (<br>        ...<br>        'oauth_tokens',<br>        'taggit',<br>        'odnoklassniki_api',<br>        'odnoklassniki_groups',<br>        'odnoklassniki_users',<br>        'odnoklassniki_photos',<br>    )<br><br>    # oauth-tokens settings<br>    OAUTH_TOKENS_HISTORY = True                                             # to keep in DB expired access tokens<br>    OAUTH_TOKENS_ODNOKLASSNIKI_CLIENT_ID = 12345678                         # application id<br>    OAUTH_TOKENS_ODNOKLASSNIKI_CLIENT_PUBLIC = ''                           # application public key<br>    OAUTH_TOKENS_ODNOKLASSNIKI_CLIENT_SECRET = ''                           # application secret key<br>    OAUTH_TOKENS_ODNOKLASSNIKI_SCOPE = ['']                                 # application scopes<br>    OAUTH_TOKENS_ODNOKLASSNIKI_USERNAME = ''                                # user login<br>    OAUTH_TOKENS_ODNOKLASSNIKI_PASSWORD = ''                                # user password<br><br>\u041f\u043e\u043a\u0440\u044b\u0442\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 API<br>--------------------<br><br>* [photo.getAlbums](http://apiok.ru/wiki/display/api/photo.getAlbums) \u2013 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0430\u043b\u044c\u0431\u043e\u043c\u043e\u0432 \u0433\u0440\u0443\u043f\u043f\u044b;<br>* [photo.getAlbumInfo](http://apiok.ru/wiki/display/api/photo.getAlbumInfo) \u2013 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043f\u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c\u0443 \u0430\u043b\u044c\u0431\u043e\u043c\u0443;<br>* [photo.getAlbumLikes](http://apiok.ru/wiki/display/api/photo.getAlbumLikes) \u2013 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0432\u0448\u0438\u0445 \"\u041a\u043b\u0430\u0441\u0441\" \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c\u0443 \u0430\u043b\u044c\u0431\u043e\u043c\u0443;<br>* [photo.getInfo](http://apiok.ru/wiki/display/api/photo.getInfo) \u2013 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043f\u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0444\u043e\u0442\u043a\u0435;<br>* [photo.getPhotos](http://apiok.ru/wiki/display/api/photo.getPhotos) \u2013 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0439 \u0430\u043b\u044c\u0431\u043e\u043c\u0430 \u0433\u0440\u0443\u043f\u043f\u044b;<br>* [photo.getPhotoLikes](http://apiok.ru/wiki/display/api/photo.getPhotoLikes) \u2013 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0432\u0448\u0438\u0445 \"\u041a\u043b\u0430\u0441\u0441\" \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0444\u043e\u0442\u043a\u0435;<br><br>\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f<br>---------------------<br><br>\u0412\u0441\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0430\u043d\u0438\u044f \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0432 \u0442\u0435\u0441\u0442\u0430\u0445 (test.py). \u041d\u0438\u0436\u0435 \u043a\u0440\u0430\u0442\u043a\u0438\u0439 \u043f\u0435\u0440\u0435\u0447\u0435\u043d\u044c<br><br>### \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0430\u043b\u044c\u0431\u043e\u043c\u043e\u0432 \u0433\u0440\u0443\u043f\u043f\u044b<br><br>    &gt;&gt;&gt; from odnoklassniki_photos.models import Album<br>    &gt;&gt;&gt; from odnoklassniki_groups.models import Group<br>    &gt;&gt;&gt; group = Group.remote.fetch(ids=[50415375614101])[0]<br>    &gt;&gt;&gt; Album.remote.fetch_group_specific(group=group, ids=[51836162801813, 51751246299285])<br>    [&lt;Album: Album object&gt;, &lt;Album: Album object&gt;]<br>    &gt;&gt;&gt; Album.remote.fetch(group=group, all=True)<br>    [&lt;Album: Album object&gt;, &lt;Album: Album object&gt;, &lt;Album: Album object&gt;, ... ]<br><br>### \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0439 \u0433\u0440\u0443\u043f\u043f\u044b<br><br>    &gt;&gt;&gt; from odnoklassniki_groups.models import Group<br>    &gt;&gt;&gt; from odnoklassniki_photos.models import Album, Photo<br>    &gt;&gt;&gt; group = Group.remote.fetch(ids=[50415375614101])[0]<br>    &gt;&gt;&gt; album = Album.remote.fetch_group_specific(group=group, ids=[51836162801813])[0]<br>    &gt;&gt;&gt; Photo.remote.fetch(group=group, album=album, all=True)<br>    [&lt;Photo: Photo object&gt;, &lt;Photo: Photo object&gt;, &lt;Photo: Photo object&gt;, ... ]<br><br>### \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043b\u0430\u0439\u043a\u043e\u0432 \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438\u0438<br><br>\u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f:<br>[`django-odnoklassniki-users`](http://github.com/ramusus/django-odnoklassniki-users/) \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0435\u0433\u043e \u0432 `INSTALLED_APPS`<br>[`django-m2m-history`](http://github.com/ramusus/django-m2m-history/)<br><br>    &gt;&gt;&gt; from odnoklassniki_groups.models import Group<br>    &gt;&gt;&gt; from odnoklassniki_photos.models import Album, Photo<br>    &gt;&gt;&gt; group = Group.remote.fetch(ids=[44257342587000])[0]<br>    &gt;&gt;&gt; album = Album.remote.fetch_group_specific(group=group, ids=[53047339778168])[0]<br>    &gt;&gt;&gt; photo = Photo.remote.fetch_group_specific(group=group, album=album, ids=[545406014072])[0]<br>    &gt;&gt;&gt; users = photo.fetch_likes()<br>    &gt;&gt;&gt; users.count()<br>    146\n          </div>"}, "last_serial": 1805946, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "640f6b399e99b289d6dad08196ace9ca", "sha256": "2b31f97a3db2b728d4c896a6013c06b5d82a5de22525a6b98aa2afa5790745a4"}, "downloads": -1, "filename": "django-odnoklassniki-photos-0.1.0.tar.gz", "has_sig": false, "md5_digest": "640f6b399e99b289d6dad08196ace9ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22004, "upload_time": "2014-05-11T19:31:56", "upload_time_iso_8601": "2014-05-11T19:31:56.668100Z", "url": "https://files.pythonhosted.org/packages/60/9d/213d65f52639e53e9ff938600956820cc591f3de93bafd0a85ffa49f75fb/django-odnoklassniki-photos-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a2bafafb91598fb3822c81b2652be43e", "sha256": "e29e78a63e957047a6c0e0f01b10f61010282db8600eb4512cd7c31c14007140"}, "downloads": -1, "filename": "django-odnoklassniki-photos-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a2bafafb91598fb3822c81b2652be43e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25134, "upload_time": "2014-07-19T09:02:43", "upload_time_iso_8601": "2014-07-19T09:02:43.763921Z", "url": "https://files.pythonhosted.org/packages/fc/ba/3926a87db338b1e956ee8c475330f7502b232e615d38ccc24e8c628ceaef/django-odnoklassniki-photos-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a236ead23ba8db47146641d7868e67ee", "sha256": "e90eae94e040b9b473fe2d48912f105cebb4fabf9a32fe35cf7e3f7f083a036f"}, "downloads": -1, "filename": "django-odnoklassniki-photos-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a236ead23ba8db47146641d7868e67ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26282, "upload_time": "2014-10-09T11:59:44", "upload_time_iso_8601": "2014-10-09T11:59:44.988735Z", "url": "https://files.pythonhosted.org/packages/43/d7/24e0b8ff883a5459c80a25ec3acb08062ace25d946db4da8ce4fced779db/django-odnoklassniki-photos-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "1fd9f076f1f144383a9acbdaf449fce4", "sha256": "2fdceef8117a16edaa3cca441d8f8718222e676187e9fef2c99f79c03b9e6d5c"}, "downloads": -1, "filename": "django-odnoklassniki-photos-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1fd9f076f1f144383a9acbdaf449fce4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27832, "upload_time": "2014-11-02T12:59:59", "upload_time_iso_8601": "2014-11-02T12:59:59.589257Z", "url": "https://files.pythonhosted.org/packages/cd/4c/1e2951adb77baf724dea26b5d487d968ad10100b44756a2cf8ae8bfc7ede/django-odnoklassniki-photos-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "f4a09d2f928ae9688925879520301f63", "sha256": "b7e5e4ae91c2d4c564b0a28541c35d96c1e8459b0956fac6baf3688331020749"}, "downloads": -1, "filename": "django-odnoklassniki-photos-0.1.4.tar.gz", "has_sig": false, "md5_digest": "f4a09d2f928ae9688925879520301f63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29014, "upload_time": "2015-04-10T10:05:43", "upload_time_iso_8601": "2015-04-10T10:05:43.789465Z", "url": "https://files.pythonhosted.org/packages/5e/26/921d712196e020b21c605789bdc13646bd19efa11b1c77cefac11abb284c/django-odnoklassniki-photos-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "034b771c259a7f06481be030508743eb", "sha256": "49f40a395f362c553f2483be692da971f4ec70336e6e35ea85245904bbb8d1d6"}, "downloads": -1, "filename": "django-odnoklassniki-photos-0.1.5.tar.gz", "has_sig": false, "md5_digest": "034b771c259a7f06481be030508743eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27721, "upload_time": "2015-11-07T20:06:48", "upload_time_iso_8601": "2015-11-07T20:06:48.755034Z", "url": "https://files.pythonhosted.org/packages/3a/fe/405fee5d73e7957a5fd29b70663184fa3908f3d19ea8ac47f28445ce745f/django-odnoklassniki-photos-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "034b771c259a7f06481be030508743eb", "sha256": "49f40a395f362c553f2483be692da971f4ec70336e6e35ea85245904bbb8d1d6"}, "downloads": -1, "filename": "django-odnoklassniki-photos-0.1.5.tar.gz", "has_sig": false, "md5_digest": "034b771c259a7f06481be030508743eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27721, "upload_time": "2015-11-07T20:06:48", "upload_time_iso_8601": "2015-11-07T20:06:48.755034Z", "url": "https://files.pythonhosted.org/packages/3a/fe/405fee5d73e7957a5fd29b70663184fa3908f3d19ea8ac47f28445ce745f/django-odnoklassniki-photos-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:33 2020"}