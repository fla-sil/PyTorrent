{"info": {"author": "Simon Pamies", "author_email": "s.pamies@banality.de", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Abstract\n========\n\n    ATSchemaEditorNG is a framework to provide flexible\n    schema editing for AT content-types.                               \n\nRequirements:\n=============\n\n    3.x \n    (for 2.5.x use version 0.5.x)\n\nInstallation:\n=============\n\n    See docs/INSTALL.txt.\n\n    Short (buildout): \n    Add ``Products.ATSchemaEditorNG`` to eggs= section and\n    in the context of your instance to zcml= section. Goto\n    portal_quickinstaller and install ATSE. If you want to have\n    demo types go to config.py and enable them.\n\nCurrent Maintainer:\n===================\n\n    Simon Pamies (spamsch)\n    EMail: s.pamies at banality dot  de\n\nOriginal Author:\n================\n\n    Andreas Jung, ZOPYX Ltd. & Co. KG\n    D-72070 Tuebingen, Germany\n\nLicense:\n========\n\n    ATSchemaEditorNG is (C) by Andreas Jung, Simon Pamies, Rob Miller, and\n    contributors, and published as open-source under the GNU Lesser\n    General Public License V 2.1 (see LICENSE.txt).  If this license\n    does not meet your requirements, contact the maintainers for\n    releasing ATSchemaEditorNG under a suitable license.\n\nDocumentation:\n==============\n\n    NOTICE: Please notice that since 0.4 objects that get created\n    no longer automatically sync schema with editor schema. If you have\n    changes in your editor and then create a new object this object\n    will not get changes unless you call self.updateSchemaFromEditor() in\n    manage_afterAdd. Please make sure the call is the first one *before*\n    you call things like BaseContent.manage_afterAdd\n\n    Example for initializing content object based on ParentManagedSchema or such:\n\n    def manage_afterAdd(self, item, container):\n        self.updateSchemaFromEditor()\n        BaseContent.manage_afterAdd(self, item, container)\n\n    Look at the examples directory and make sure you read\n    docstrings in ParentManagedSchema.py. Also read the\n    howto (doc/HOWTO.txt).\n\nContributions:\n==============\n\n    Thanks to gocept for sponsoring some work in 0.4.5\n\n    Thanks to Aaron VanDerlip for useful\n    hints about portal_factory failures in 0.4.1\n\n    Many thanks to coreblox (http://coreblox.com)\n    for sponsoring all work on 0.4.0\n\n    Whit Morriss: examples and tests\n\n    Rob Miller (rafrombrc): Maintainership until 0.4 - much work\n    for 0.3.x line.\n\n    Simon Pamies: fixes, code cleanup, schema update mechanism\n                   revisited (and most of the stuff in V 0.2 and 0.4)\n\n    Sasha Vincic: storage registry implementation\n\n\n0.6 (unreleased)\n    - Eggified completely\n      [spamsch]\n\n    - REST fixes\n      [ajung]\n\n    - Various Plone 3 fixes\n      [macadames]\n\n0.5.1 (24.03.2010)\n\n    - change atse_updateManagedSchema so it's waking up only objects\n      that need to be updated [amleczko]\n\n0.5.0 (16.03.2010)\n\n    - Added Select to the StringField selection\n      [spamsch]\n\n    - Fixed #13: Error during tool access via ZMI.\n      [spamsch]\n\n    - Get rid of CMFCorePermissions\n      [naro]\n\n    - Added new atse_addOrReplaceField method.\n      [spamsch]\n\n    - Added more configuration options for text fields and for\n      storage selection. Look at config.py.\n      [spamsch]\n\n0.4.7 (01.10.2007)\n\n    - Added schema template editor - allows defining re-usable schemata. \n      [mkoch,ctheune]\n\n0.4.6 (never released)\n\n    - Fixed #12: isEmpty always shown als activated validator.\n      [spamsch]\n\n    - Fixed #11: ReferenceBrowserWidget was not available. Thanks to\n      Alexander Pilz for finding this.\n      [spamsch]\n\n    - supplied missing import: this fixes #9 Broken uninstall method\n      [lzdych]\n\n0.4.6rc1 (17.08.2007)\n\n    - Started writing some simple howto (doc/HOWTO.txt)\n      [spamsch]\n\n    - Added new feature flag HAS_MANAGEMENT_UI_FUNCTIONALITY that\n      can be used to control if management functions are displayed.\n      [spamsch]\n\n    - UI p0rn (much more to come)\n      [spamsch]\n\n    - Fixed bug where a security check did not success for TTW added\n      schemas. Thanks to Hedley Roos.\n      [spamsch]\n\n    - Added a patch for Products.validation.RangeValidator to relax the\n      max value check (instead of value < maxval we check value <= maxval)\n      and added there tolerance to string typed max and min.\n      [spamsch]\n\n    - Extended editor so that you can pass your own parameters to each\n      validator that supports parameters (like inNumericRange). Also\n      added a bridge to non-registered RegexValidator so that users\n      can input their own regular expression.\n      [spamsch]\n\n    - Extended editor so that you can now upload a file to each field.\n      Usecase: Fields based upon editor defined fields want to have a\n      template.\n\n      Example:\n\n        atse_config.field_registry.update({'ExcelField': {'field': ExcelField, \n                                                 'allowed_widgets':['ExcelWidget', 'FileWidget', ],\n                                                 'post_method':'atse_attachFilePostMethod',\n                                                 'post_macro':'here/fileattach_macros/macros/upload'}})\n\n      Simply define post_method and post_macro as defined here. For this\n      example an excel file can be uploaded to excel fields and serve as template.\n      You can then access the attached file: schemaeditor.atse_getAttachedFieldFile(<fieldname>).\n      [spamsch]\n\n    - Revamped validator selection so that it shows a list of available\n      validators instead of having the user input them.\n      [spamsch]\n\n    - Added support for ATVocabularyManager including UI selection of vocabularies.\n      [spamsch]\n\n    - Introduced new flag HAS_FIELD_VISIBILITY_ENABLED that controls\n      if the UI should show the visibility controls for a field.\n      [spamsch]\n\n    - Introduced a new flag HAS_SECURITY_MANAGEMENT_ENABLED that controls\n      if the UI shows field security management related stuff.\n      [spamsch]\n\n    - Introduced new method atse_hasFeature(name) that can be used to\n      check if a given feature (defined in config.py) is available.\n      [spamsch]\n\n    - Fixed field->widget associations defined in config.py. The complete\n      select line (like Flex or Radio) were not included.\n      [spamsch]\n\n    - Added methode atse_reinitializeRegistries because upon fresh registration\n      of fields and widgets instances do not get the changes.\n      [spamsch]\n\n    - documentation updates - clarify maintainership and add contributions\n      [spamsch]\n\n0.4.5 (never released)\n\n    - Fixed uninstall procedure - CMFQI does not remove configlets\n      Thanks to IOhannes m zmoelnig for the fix.\n      [spamsch]\n\n    - Added permission handling for fields. For each field you can\n      now select the permission from an predefined list \n      (from site_properties/atsePossible*Permissions)\n      [spamsch]\n\n    - Added some constraints for allowed widgets. Look at config.py\n      to see what changed (allowed_widgets). For each field we now\n      define a set of acceptable widgets. Now you can't select an IntWidget\n      for a ReferenceField anymore :-)\n      [spamsch]\n\n    - Added type support for DataGridField. That means that you can specify a types\n      for each of the fields you define. Needs patched version of DataGridField!\n      Please make sure to apply the included diff (in doc/datagridfield-validatecolumn.diff)\n      to a 1.5.0 version of DataGridField (MoreFieldsAndWidgets/DataGridField/tags/1.5.0).\n      If you don't do this ATSE will not include DataGridFieldSupport!\n\n      Do the following to patch correctly:\n      $ cd <path_to_DataGridField>\n      $ cat version.txt\n      1.5.0\n      $ patch -p 0 < ../ATSchemaEditorNG/doc/datagridfield-validatedcolumn.diff\n      [spamsch]\n\n0.4.4 (18.04.2007)\n\n    - Fixed DataGridWidget failure\n      [spamsch]\n\n    - Fixed references to zLOG replacing with logging package\n      [spamsch]\n\n    - added MultiCheckbox widget - defined as MultiSelectionWidget(format=\"checkbox\")\n      [naro]\n\n    - added vocabulary proxy method and option to use python scripts as vocabulary source.\n      Additionaly to key|value and method:methodname as vocabulary source, there can be \n      'script:' (without script name). Script name is computed automaticaly as\n      atse_<portal type>_<fieldname>Vocabulary. \n\n      Example:: \n\n          Portal type: 'Target 1', field countryType::\n\n          atse_Target1_countryTypeVocabulary - this is name of the python script or external method \n          [naro]\n  \n    \n    - portal_status_message is encoded to utf8 before sent to browser.\n      Plone 2.5 returns translated strings in unicode.\n      [naro]\n\n    - made use of FD in atse_update consistent. Now you can\n      always use dictionaries.\n      [spamsch]\n\n    - added one more test that uses atse_update to create field\n      [spamsch]\n\n0.4.3 (10.10.2006)\n\n    - more tests for portal_factory madness\n      [spamsch]\n\n    - fixed DataGridField templates related to atseng: schema editor template\n      was broken after DataGridField was selected as field type\n      [lzdych]\n\n    - ATSE tool is no longer implicitly available\n      [spamsch]\n\n    - fixed broken schema editor template after new schema is created\n      [lzdych]\n\n    - Added one more check for portal_factory types. Could not model\n      a test for parent of a folder being TempFolder when using\n      PortalFactory but it seems that it fixes some errors on other\n      instances and has no impact on running ones \n      [spamsch]\n\n0.4.2 (27.06.2006)\n\n    - disabled automatic creation of backup file. This configuration\n      is done over property atseAutomaticBackupWhenUpdateSchema in\n      site_properties. If users want to have automatic backup\n      then this property needs to be enabled.\n      [spamsch]\n\n    - disabled installation of example types in config.py\n      If types should be installed then enable property in config.py\n      [spamsch]\n\n    - some bugfixes to make ParentManagedSchema play nicely with\n      portal_factory managed types. Bug reported by Aaron VanDerlip\n      [spamsch]\n\n    - added support for DataGridField/Widget (if DG is available)\n      Please read doc/DATAGRID.txt\n      [naro]\n\n    - updated i18n, updated Czech translation\n      [naro]\n\n    - fixed minor bug in ReferenceField/Widget handling\n      [naro]\n\n0.4.1 (08.06.2006)\n\n    - Fixed some documentation lack: Newly created objects\n      not longer automatically update schema from Editor since\n      0.4. Added extensive documentation about this change.\n      [spamsch]\n\n    - Added tests to test changes since 0.4\n      [spamsch]\n\n0.4 (19.05.2006)\n\n    - SchemaEditor: \n        - Added xml import and export functionality\n        - Bugfix for non working ordering mode\n        - Fixes for schema syncing - Schemas are now never synced w/o explicit user action\n        - Added dynamic object registering support\n        - Added role based field permission settings\n          [spamsch]\n\n    - reworked some of the template stuff to make dynamic registration of types possible\n      [spamsch]\n\n0.3.3 (02.04.2006)\n\n   - added support for ImageField max_size and sizes properties\n\n   - added support for AnnotationStorage and MetadataStorage\n\n   - moved \"Create index\" checkbox from widget setting so the field\n     settings (field is indexed, not widget!) and renamed to\n     \"Searchable\"\n\n   - installation of ATSchemaEditorNG now installs the schema editor\n     tool.  Additionaly, a configlet is registered that makes the\n     schema editor available in the Plone control panel.\n\n   - use prefs_main_template macro (instead of main macro) when\n     rendering schema editor\n\n   - handle the absence of a default schema gracefully by displaying a\n     message instead of raising an exception\n\n   - handle more ReferenceField properties like\n     'vocabulary_display_path_bound', 'multiValued', 'allowed_types'\n     and 'checkbox_bound'.\n\n   - allow setting 'startup_directory' for ReferenceBrowserWidget.\n\n   - Fixed bug when computing default value for field.\n\n   - Allow selection of ReferenceWidget in addition to\n     ReferenceBrowserWidget for reference fields.\n\n   - added support for allowable_content_types, default_output_type\n     and default_content_type in TextField\n\n0.3.2 (24.09.2005)\n\n   - SchemaEditor now overrides __setstate__ to do instance variable\n     initialization, if necessary.\n\n   - added special edit accessor for ReferenceFields\n\n   - schema selector bug fix\n\n0.3.1 (unreleased)\n\n   - added support for sync'ing unmanaged and new fields from the\n     source code, to bring cached ATSE schemas into sync w/ any\n     changes in the source.  NOTE: must run\n     schema_editor._migrateObjPtype() for each schema editor to\n     convert the _obj_ptype attribute from a list to an OOBTree\n\n0.3.0 (unreleased)\n\n   - added field, widget, and storage registry functionality\n\n   - added support for atse_managed field attribute\n\n   - schema editor now honors accessors and mutators explicitly defined\n     in python schema, but only if the methods are actually defined on\n     the object\n\n0.23 (unreleased)\n\n   - fixed handling of widget.help\n\n0.22 (08.01.2005)\n\n    - schemas can be exported as text\n\n    - Schemas can now be managed through a tool (SchemaEditorTool.py)\n      and not only through a folder.\n\n    - new client mixin class ToolManagedSchema\n\n    - persistency fix in schema registration\n\n0.21 (2.11.2004)\n\n    - added support for validators\n\n    - fixed some missing parameters in redirection URLs\n\n0.2 (1.10.2004)\n\n    - Added developer mode: Look @ config.py for information\n\n    - Beautyfied view a little bit\n\n    - Added a selection box where you can select registered objects\n      \n    - Added methods to register objects not only schematas\n\n    - Moved updateSchema method to SchemaEditor.py\n\n    - Fixed bug that caused the objects' id to be saved in unicode\n\n    - Fixed tests\n\n    - Added some field to control if widget is visible\n\n    - added schema registration infrastructure (support for multiple schemas)\n\n    - lots of API changes\n\n\n0.1 (17.09.2004)\n\n    - initial release (backport from PloneCollectorNG)\n\n    - refactored", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/Products.ATSchemaEditorNG", "keywords": "plone archetypes schema", "license": "LGPL", "maintainer": null, "maintainer_email": null, "name": "Products.ATSchemaEditorNG", "package_url": "https://pypi.org/project/Products.ATSchemaEditorNG/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Products.ATSchemaEditorNG/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/Products.ATSchemaEditorNG"}, "release_url": "https://pypi.org/project/Products.ATSchemaEditorNG/0.6/", "requires_dist": null, "requires_python": null, "summary": "ATSchemaEditorNG is a framework to provide flexible schema editing for AT content-types", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"abstract\">\n<h2>Abstract</h2>\n<blockquote>\nATSchemaEditorNG is a framework to provide flexible\nschema editing for AT content-types.</blockquote>\n</div>\n<div id=\"requirements\">\n<h2>Requirements:</h2>\n<blockquote>\n3.x\n(for 2.5.x use version 0.5.x)</blockquote>\n</div>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<blockquote>\n<p>See docs/INSTALL.txt.</p>\n<p>Short (buildout):\nAdd <tt>Products.ATSchemaEditorNG</tt> to eggs= section and\nin the context of your instance to zcml= section. Goto\nportal_quickinstaller and install ATSE. If you want to have\ndemo types go to config.py and enable them.</p>\n</blockquote>\n</div>\n<div id=\"current-maintainer\">\n<h2>Current Maintainer:</h2>\n<blockquote>\nSimon Pamies (spamsch)\nEMail: s.pamies at banality dot  de</blockquote>\n</div>\n<div id=\"original-author\">\n<h2>Original Author:</h2>\n<blockquote>\nAndreas Jung, ZOPYX Ltd. &amp; Co. KG\nD-72070 Tuebingen, Germany</blockquote>\n</div>\n<div id=\"license\">\n<h2>License:</h2>\n<blockquote>\nATSchemaEditorNG is (C) by Andreas Jung, Simon Pamies, Rob Miller, and\ncontributors, and published as open-source under the GNU Lesser\nGeneral Public License V 2.1 (see LICENSE.txt).  If this license\ndoes not meet your requirements, contact the maintainers for\nreleasing ATSchemaEditorNG under a suitable license.</blockquote>\n</div>\n<div id=\"documentation\">\n<h2>Documentation:</h2>\n<blockquote>\n<p>NOTICE: Please notice that since 0.4 objects that get created\nno longer automatically sync schema with editor schema. If you have\nchanges in your editor and then create a new object this object\nwill not get changes unless you call self.updateSchemaFromEditor() in\nmanage_afterAdd. Please make sure the call is the first one <em>before</em>\nyou call things like BaseContent.manage_afterAdd</p>\n<p>Example for initializing content object based on ParentManagedSchema or such:</p>\n<dl>\n<dt>def manage_afterAdd(self, item, container):</dt>\n<dd>self.updateSchemaFromEditor()\nBaseContent.manage_afterAdd(self, item, container)</dd>\n</dl>\n<p>Look at the examples directory and make sure you read\ndocstrings in ParentManagedSchema.py. Also read the\nhowto (doc/HOWTO.txt).</p>\n</blockquote>\n</div>\n<div id=\"contributions\">\n<h2>Contributions:</h2>\n<blockquote>\n<p>Thanks to gocept for sponsoring some work in 0.4.5</p>\n<p>Thanks to Aaron VanDerlip for useful\nhints about portal_factory failures in 0.4.1</p>\n<p>Many thanks to coreblox (<a href=\"http://coreblox.com\" rel=\"nofollow\">http://coreblox.com</a>)\nfor sponsoring all work on 0.4.0</p>\n<p>Whit Morriss: examples and tests</p>\n<p>Rob Miller (rafrombrc): Maintainership until 0.4 - much work\nfor 0.3.x line.</p>\n<dl>\n<dt>Simon Pamies: fixes, code cleanup, schema update mechanism</dt>\n<dd>revisited (and most of the stuff in V 0.2 and 0.4)</dd>\n</dl>\n<p>Sasha Vincic: storage registry implementation</p>\n</blockquote>\n<dl>\n<dt>0.6 (unreleased)</dt>\n<dd><ul>\n<li>Eggified completely\n[spamsch]</li>\n<li>REST fixes\n[ajung]</li>\n<li>Various Plone 3 fixes\n[macadames]</li>\n</ul>\n</dd>\n</dl>\n<p>0.5.1 (24.03.2010)</p>\n<blockquote>\n<ul>\n<li>change atse_updateManagedSchema so it\u2019s waking up only objects\nthat need to be updated [amleczko]</li>\n</ul>\n</blockquote>\n<p>0.5.0 (16.03.2010)</p>\n<blockquote>\n<ul>\n<li>Added Select to the StringField selection\n[spamsch]</li>\n<li>Fixed #13: Error during tool access via ZMI.\n[spamsch]</li>\n<li>Get rid of CMFCorePermissions\n[naro]</li>\n<li>Added new atse_addOrReplaceField method.\n[spamsch]</li>\n<li>Added more configuration options for text fields and for\nstorage selection. Look at config.py.\n[spamsch]</li>\n</ul>\n</blockquote>\n<p>0.4.7 (01.10.2007)</p>\n<blockquote>\n<ul>\n<li>Added schema template editor - allows defining re-usable schemata.\n[mkoch,ctheune]</li>\n</ul>\n</blockquote>\n<p>0.4.6 (never released)</p>\n<blockquote>\n<ul>\n<li>Fixed #12: isEmpty always shown als activated validator.\n[spamsch]</li>\n<li>Fixed #11: ReferenceBrowserWidget was not available. Thanks to\nAlexander Pilz for finding this.\n[spamsch]</li>\n<li>supplied missing import: this fixes #9 Broken uninstall method\n[lzdych]</li>\n</ul>\n</blockquote>\n<p>0.4.6rc1 (17.08.2007)</p>\n<blockquote>\n<ul>\n<li><p>Started writing some simple howto (doc/HOWTO.txt)\n[spamsch]</p>\n</li>\n<li><p>Added new feature flag HAS_MANAGEMENT_UI_FUNCTIONALITY that\ncan be used to control if management functions are displayed.\n[spamsch]</p>\n</li>\n<li><p>UI p0rn (much more to come)\n[spamsch]</p>\n</li>\n<li><p>Fixed bug where a security check did not success for TTW added\nschemas. Thanks to Hedley Roos.\n[spamsch]</p>\n</li>\n<li><p>Added a patch for Products.validation.RangeValidator to relax the\nmax value check (instead of value &lt; maxval we check value &lt;= maxval)\nand added there tolerance to string typed max and min.\n[spamsch]</p>\n</li>\n<li><p>Extended editor so that you can pass your own parameters to each\nvalidator that supports parameters (like inNumericRange). Also\nadded a bridge to non-registered RegexValidator so that users\ncan input their own regular expression.\n[spamsch]</p>\n</li>\n<li><p>Extended editor so that you can now upload a file to each field.\nUsecase: Fields based upon editor defined fields want to have a\ntemplate.</p>\n<p>Example:</p>\n<blockquote>\n<dl>\n<dt>atse_config.field_registry.update({\u2018ExcelField\u2019: {\u2018field\u2019: ExcelField,</dt>\n<dd><p>\u2018allowed_widgets\u2019:[\u2018ExcelWidget\u2019, \u2018FileWidget\u2019, ],\n\u2018post_method\u2019:\u2019atse_attachFilePostMethod\u2019,\n\u2018post_macro\u2019:\u2019here/fileattach_macros/macros/upload\u2019}})</p>\n</dd>\n</dl>\n</blockquote>\n<p>Simply define post_method and post_macro as defined here. For this\nexample an excel file can be uploaded to excel fields and serve as template.\nYou can then access the attached file: schemaeditor.atse_getAttachedFieldFile(&lt;fieldname&gt;).\n[spamsch]</p>\n</li>\n<li><p>Revamped validator selection so that it shows a list of available\nvalidators instead of having the user input them.\n[spamsch]</p>\n</li>\n<li><p>Added support for ATVocabularyManager including UI selection of vocabularies.\n[spamsch]</p>\n</li>\n<li><p>Introduced new flag HAS_FIELD_VISIBILITY_ENABLED that controls\nif the UI should show the visibility controls for a field.\n[spamsch]</p>\n</li>\n<li><p>Introduced a new flag HAS_SECURITY_MANAGEMENT_ENABLED that controls\nif the UI shows field security management related stuff.\n[spamsch]</p>\n</li>\n<li><p>Introduced new method atse_hasFeature(name) that can be used to\ncheck if a given feature (defined in config.py) is available.\n[spamsch]</p>\n</li>\n<li><p>Fixed field-&gt;widget associations defined in config.py. The complete\nselect line (like Flex or Radio) were not included.\n[spamsch]</p>\n</li>\n<li><p>Added methode atse_reinitializeRegistries because upon fresh registration\nof fields and widgets instances do not get the changes.\n[spamsch]</p>\n</li>\n<li><p>documentation updates - clarify maintainership and add contributions\n[spamsch]</p>\n</li>\n</ul>\n</blockquote>\n<p>0.4.5 (never released)</p>\n<blockquote>\n<ul>\n<li><p>Fixed uninstall procedure - CMFQI does not remove configlets\nThanks to IOhannes m zmoelnig for the fix.\n[spamsch]</p>\n</li>\n<li><p>Added permission handling for fields. For each field you can\nnow select the permission from an predefined list\n(from site_properties/atsePossible*Permissions)\n[spamsch]</p>\n</li>\n<li><p>Added some constraints for allowed widgets. Look at config.py\nto see what changed (allowed_widgets). For each field we now\ndefine a set of acceptable widgets. Now you can\u2019t select an IntWidget\nfor a ReferenceField anymore :-)\n[spamsch]</p>\n</li>\n<li><p>Added type support for DataGridField. That means that you can specify a types\nfor each of the fields you define. Needs patched version of DataGridField!\nPlease make sure to apply the included diff (in doc/datagridfield-validatecolumn.diff)\nto a 1.5.0 version of DataGridField (MoreFieldsAndWidgets/DataGridField/tags/1.5.0).\nIf you don\u2019t do this ATSE will not include DataGridFieldSupport!</p>\n<p>Do the following to patch correctly:\n$ cd &lt;path_to_DataGridField&gt;\n$ cat version.txt\n1.5.0\n$ patch -p 0 &lt; ../ATSchemaEditorNG/doc/datagridfield-validatedcolumn.diff\n[spamsch]</p>\n</li>\n</ul>\n</blockquote>\n<p>0.4.4 (18.04.2007)</p>\n<blockquote>\n<ul>\n<li><p>Fixed DataGridWidget failure\n[spamsch]</p>\n</li>\n<li><p>Fixed references to zLOG replacing with logging package\n[spamsch]</p>\n</li>\n<li><p>added MultiCheckbox widget - defined as MultiSelectionWidget(format=\u201dcheckbox\u201d)\n[naro]</p>\n</li>\n<li><p>added vocabulary proxy method and option to use python scripts as vocabulary source.\nAdditionaly to key|value and method:methodname as vocabulary source, there can be\n\u2018script:\u2019 (without script name). Script name is computed automaticaly as\natse_&lt;portal type&gt;_&lt;fieldname&gt;Vocabulary.</p>\n<p>Example:</p>\n<pre>Portal type: 'Target 1', field countryType::\n\natse_Target1_countryTypeVocabulary - this is name of the python script or external method\n[naro]\n</pre>\n</li>\n<li><p>portal_status_message is encoded to utf8 before sent to browser.\nPlone 2.5 returns translated strings in unicode.\n[naro]</p>\n</li>\n<li><p>made use of FD in atse_update consistent. Now you can\nalways use dictionaries.\n[spamsch]</p>\n</li>\n<li><p>added one more test that uses atse_update to create field\n[spamsch]</p>\n</li>\n</ul>\n</blockquote>\n<p>0.4.3 (10.10.2006)</p>\n<blockquote>\n<ul>\n<li>more tests for portal_factory madness\n[spamsch]</li>\n<li>fixed DataGridField templates related to atseng: schema editor template\nwas broken after DataGridField was selected as field type\n[lzdych]</li>\n<li>ATSE tool is no longer implicitly available\n[spamsch]</li>\n<li>fixed broken schema editor template after new schema is created\n[lzdych]</li>\n<li>Added one more check for portal_factory types. Could not model\na test for parent of a folder being TempFolder when using\nPortalFactory but it seems that it fixes some errors on other\ninstances and has no impact on running ones\n[spamsch]</li>\n</ul>\n</blockquote>\n<p>0.4.2 (27.06.2006)</p>\n<blockquote>\n<ul>\n<li>disabled automatic creation of backup file. This configuration\nis done over property atseAutomaticBackupWhenUpdateSchema in\nsite_properties. If users want to have automatic backup\nthen this property needs to be enabled.\n[spamsch]</li>\n<li>disabled installation of example types in config.py\nIf types should be installed then enable property in config.py\n[spamsch]</li>\n<li>some bugfixes to make ParentManagedSchema play nicely with\nportal_factory managed types. Bug reported by Aaron VanDerlip\n[spamsch]</li>\n<li>added support for DataGridField/Widget (if DG is available)\nPlease read doc/DATAGRID.txt\n[naro]</li>\n<li>updated i18n, updated Czech translation\n[naro]</li>\n<li>fixed minor bug in ReferenceField/Widget handling\n[naro]</li>\n</ul>\n</blockquote>\n<p>0.4.1 (08.06.2006)</p>\n<blockquote>\n<ul>\n<li>Fixed some documentation lack: Newly created objects\nnot longer automatically update schema from Editor since\n0.4. Added extensive documentation about this change.\n[spamsch]</li>\n<li>Added tests to test changes since 0.4\n[spamsch]</li>\n</ul>\n</blockquote>\n<p>0.4 (19.05.2006)</p>\n<blockquote>\n<ul>\n<li><dl>\n<dt>SchemaEditor:</dt>\n<dd><ul>\n<li>Added xml import and export functionality</li>\n<li>Bugfix for non working ordering mode</li>\n<li>Fixes for schema syncing - Schemas are now never synced w/o explicit user action</li>\n<li>Added dynamic object registering support</li>\n<li>Added role based field permission settings\n[spamsch]</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>reworked some of the template stuff to make dynamic registration of types possible\n[spamsch]</li>\n</ul>\n</blockquote>\n<p>0.3.3 (02.04.2006)</p>\n<blockquote>\n<ul>\n<li>added support for ImageField max_size and sizes properties</li>\n<li>added support for AnnotationStorage and MetadataStorage</li>\n<li>moved \u201cCreate index\u201d checkbox from widget setting so the field\nsettings (field is indexed, not widget!) and renamed to\n\u201cSearchable\u201d</li>\n<li>installation of ATSchemaEditorNG now installs the schema editor\ntool.  Additionaly, a configlet is registered that makes the\nschema editor available in the Plone control panel.</li>\n<li>use prefs_main_template macro (instead of main macro) when\nrendering schema editor</li>\n<li>handle the absence of a default schema gracefully by displaying a\nmessage instead of raising an exception</li>\n<li>handle more ReferenceField properties like\n\u2018vocabulary_display_path_bound\u2019, \u2018multiValued\u2019, \u2018allowed_types\u2019\nand \u2018checkbox_bound\u2019.</li>\n<li>allow setting \u2018startup_directory\u2019 for ReferenceBrowserWidget.</li>\n<li>Fixed bug when computing default value for field.</li>\n<li>Allow selection of ReferenceWidget in addition to\nReferenceBrowserWidget for reference fields.</li>\n<li>added support for allowable_content_types, default_output_type\nand default_content_type in TextField</li>\n</ul>\n</blockquote>\n<p>0.3.2 (24.09.2005)</p>\n<blockquote>\n<ul>\n<li>SchemaEditor now overrides __setstate__ to do instance variable\ninitialization, if necessary.</li>\n<li>added special edit accessor for ReferenceFields</li>\n<li>schema selector bug fix</li>\n</ul>\n</blockquote>\n<p>0.3.1 (unreleased)</p>\n<blockquote>\n<ul>\n<li>added support for sync\u2019ing unmanaged and new fields from the\nsource code, to bring cached ATSE schemas into sync w/ any\nchanges in the source.  NOTE: must run\nschema_editor._migrateObjPtype() for each schema editor to\nconvert the _obj_ptype attribute from a list to an OOBTree</li>\n</ul>\n</blockquote>\n<p>0.3.0 (unreleased)</p>\n<blockquote>\n<ul>\n<li>added field, widget, and storage registry functionality</li>\n<li>added support for atse_managed field attribute</li>\n<li>schema editor now honors accessors and mutators explicitly defined\nin python schema, but only if the methods are actually defined on\nthe object</li>\n</ul>\n</blockquote>\n<p>0.23 (unreleased)</p>\n<blockquote>\n<ul>\n<li>fixed handling of widget.help</li>\n</ul>\n</blockquote>\n<p>0.22 (08.01.2005)</p>\n<blockquote>\n<ul>\n<li>schemas can be exported as text</li>\n<li>Schemas can now be managed through a tool (SchemaEditorTool.py)\nand not only through a folder.</li>\n<li>new client mixin class ToolManagedSchema</li>\n<li>persistency fix in schema registration</li>\n</ul>\n</blockquote>\n<p>0.21 (2.11.2004)</p>\n<blockquote>\n<ul>\n<li>added support for validators</li>\n<li>fixed some missing parameters in redirection URLs</li>\n</ul>\n</blockquote>\n<p>0.2 (1.10.2004)</p>\n<blockquote>\n<ul>\n<li>Added developer mode: Look @ config.py for information</li>\n<li>Beautyfied view a little bit</li>\n<li>Added a selection box where you can select registered objects</li>\n<li>Added methods to register objects not only schematas</li>\n<li>Moved updateSchema method to SchemaEditor.py</li>\n<li>Fixed bug that caused the objects\u2019 id to be saved in unicode</li>\n<li>Fixed tests</li>\n<li>Added some field to control if widget is visible</li>\n<li>added schema registration infrastructure (support for multiple schemas)</li>\n<li>lots of API changes</li>\n</ul>\n</blockquote>\n<p>0.1 (17.09.2004)</p>\n<blockquote>\n<ul>\n<li>initial release (backport from PloneCollectorNG)</li>\n<li>refactored</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 784963, "releases": {"0.4.8.-UNRELEASED-SVN-": [], "0.5.0": [{"comment_text": "", "digests": {"md5": "47e31e4008d6791ff532f894923ae8a3", "sha256": "eda6fc633fdf96b30c4b45a2d926b46aabfcc2e649e2aaff9468318067be5a1d"}, "downloads": -1, "filename": "Products.ATSchemaEditorNG-0.5.0.tar.gz", "has_sig": false, "md5_digest": "47e31e4008d6791ff532f894923ae8a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 99142, "upload_time": "2009-02-28T16:56:01", "upload_time_iso_8601": "2009-02-28T16:56:01.350981Z", "url": "https://files.pythonhosted.org/packages/98/80/8a0689eb6699acc8ab18b6bc88479aa76541a0fe46f9f88578b711e229bc/Products.ATSchemaEditorNG-0.5.0.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "a20d1b46264ac05a0a0f4eb0ceb7bbf8", "sha256": "ed8ad87954f6fa6453b0b8e58aaa93e4f68aef48ef5ddeef9d3d960df7df90a6"}, "downloads": -1, "filename": "Products.ATSchemaEditorNG-0.6.tar.gz", "has_sig": false, "md5_digest": "a20d1b46264ac05a0a0f4eb0ceb7bbf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89105, "upload_time": "2010-04-15T10:54:08", "upload_time_iso_8601": "2010-04-15T10:54:08.047576Z", "url": "https://files.pythonhosted.org/packages/f8/f7/72fc947d06510c337fc629adcdd9817122b832b7d2d459bfcd824dff1b0c/Products.ATSchemaEditorNG-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a20d1b46264ac05a0a0f4eb0ceb7bbf8", "sha256": "ed8ad87954f6fa6453b0b8e58aaa93e4f68aef48ef5ddeef9d3d960df7df90a6"}, "downloads": -1, "filename": "Products.ATSchemaEditorNG-0.6.tar.gz", "has_sig": false, "md5_digest": "a20d1b46264ac05a0a0f4eb0ceb7bbf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 89105, "upload_time": "2010-04-15T10:54:08", "upload_time_iso_8601": "2010-04-15T10:54:08.047576Z", "url": "https://files.pythonhosted.org/packages/f8/f7/72fc947d06510c337fc629adcdd9817122b832b7d2d459bfcd824dff1b0c/Products.ATSchemaEditorNG-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:18:40 2020"}