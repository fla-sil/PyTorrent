{"info": {"author": "ZopeSkel Team: Steve McMahon", "author_email": "zopeskel@lists.plone.org", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Framework :: Zope3", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Introduction\n============\n\nThis is a ZopeSkel template package for creating a skeleton Plone add-on\npackage. The skeleton package creates a Diazo (plone.app.theming) theme package\nand associated css and js resources for use with plone.app.theming in\nPlone 4.2+.\n\nUse this package when you want to package a Diazo theme as a Plone add on,\nparticularly if you need to override viewlet or skin templates in the process.\n\nThis is a development tool. You should be familiar with Plone and buildout to\nuse it.\n\nInstallation\n============\n\nAdd these lines into buildout::\n\n  [buildout]\n  parts =\n     zopeskel\n\n  [zopeskel]\n  recipe = zc.recipe.egg\n  eggs =\n     ZopeSkel\n     Paste\n     PasteDeploy\n     PasteScript\n     zopeskel.diazotheme\n\nAnd run the buildout\n\nUsage\n======\n\nAdd ons under development are typically created in your buildout's src\ndirectory. Command line for creating a package named diazotheme.mytheme would be::\n\n  ../bin/zopeskel diazotheme diazotheme.mytheme\n\nThis will create a Python package with a directory structure like this::\n\n    diazotheme.mytheme/\n    |-- diazotheme\n    |   +-- mytheme\n    |       |-- diazo_resources\n    |       |   +-- static\n    |       |-- locales\n    |       |-- profiles\n    |       |   +-- default\n    |       +-- template_overrides\n    |-- diazotheme.mytheme.egg-info\n    +-- docs\n\nThe typically customized parts are in the diazotheme.mytheme/diazotheme/mytheme subdirectory.\n\ndiazo_resources\n---------------\n\nThis is where you'll put your Diazo resources including a rules XML file and\none or more template HTML files. You may wish to interactively develop these\ntheme elements in the theming editor (for Plone 4.3+), then export the\nresources and add them here.\n\nA sample theme is included to use as a starting point. Just replace it if you\ndon't need it. The sample theme's key feature is that it makes use of all of\nPlone's CSS and JavaScript as a starting point.\n\nEverything you put in this directory and its subdirectories is publicly\navailable at ++theme++namespace.package/resourcename.ext.\n\nNOTE: The Diazo theme will be available in Plone even if you have not\ninstalled the package. It will not be applied, though, until enabled in the\nTheme configlet of site setup.\n\ndiazo_resources/static\n----------------------\n\nThis is the conventional place to put static resources like CSS, JS and image files.\nThere's nothing magic about \"static\". Remove or replace it if it fits your needs.\n\nEverything you put in this directory and its subdirectories is publicly\navailable at ++theme++namespace.package/static/resourcename.ext.\n\nlocales\n-------\n\nIf your templates include translatable messages, you may provide translation\nfiles in this directory. Ignore it if you don't need translations.\n\nprofiles, profiles/default\n--------------------------\n\nThis is the Generic Setup profile for the add on. The is applied when you use\nthe \"add ons\" configlet in site setup to install the package.\n\nThis profile has a couple of important features:\n\n* It sets up a BrowserLayer, which insures tha template overrides and registry\nsettings do not affect other Plone installations unless this theme is\ninstalled.\n\n* It has sample resource registrations for CSS and JavaScript resource\nregistries.   These allow you to incorporate static resources which are part\nof the theme into the Plone resource registries for efficient merging with\nother CSS and JS resources. The samples are commented out. If you remove the\ncomment markers and install/reinstall the theme, the main.css and main.js\nfiles from your diazo_resources/static directory will be incorporated into the\nCSS and JS delivered by Plone -- even if the Diazo theme is not active.\n\nThe alternative to adding your resources to the registries is to load them\ndirectly in your theme's index.html. This is a better approach if you don't\nintend to use Plone's own CSS and JS resources. If you do, registering your\nown resources will allow them to be merged for more efficient delivery.\n\ntemplate_overrides\n------------------\n\nYou may use this directory to override any Plone viewlet, portlet or skin template.\n\nTo override a template, copy or create a template in this directory using the\nfull dotted name of the template you wish to override.\n\nFor example, if you wish to override the standard Plone footer, you would find the original at::\n\n    plone.app.layout/plone/app/layout/viewlets/footer.pt\n\nThe full, dotted name for this resource is::\n\n    plone.app.layout.viewlets.footer.pt\n\nTemplate overrides are only applied when the BrowserLayer is installed by\ninstalling your package. So, they won't affect Plone installations where this\npackage is not installed.\n\nA sample override for the Plone footer is included. Delete it if you don't need it.\n\nFor details on template overrides, see the documentation for `z3c.jbot\n<https://pypi.python.org/pypi/z3c.jbot>`_.\n\nChangelog\n=========\n\n1.1 (2013-04-21)\n----------------\n\n- Added z3c.jbot to setup.py requires for created theme.\n\n- Changed ++resource++ to ++theme++ in profile/defaults.\n\n- Tuned up documentation.\n\n\n1.0 (2013-04-10)\n----------------\n\n* Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/collective/zopeskel.diazotheme", "keywords": "plone zope diazo", "license": "GPL 2", "maintainer": null, "maintainer_email": null, "name": "zopeskel.diazotheme", "package_url": "https://pypi.org/project/zopeskel.diazotheme/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/zopeskel.diazotheme/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/collective/zopeskel.diazotheme"}, "release_url": "https://pypi.org/project/zopeskel.diazotheme/1.1/", "requires_dist": null, "requires_python": null, "summary": "Paster templates for Plone Diazo theme package", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Introduction<br>============<br><br>This is a ZopeSkel template package for creating a skeleton Plone add-on<br>package. The skeleton package creates a Diazo (plone.app.theming) theme package<br>and associated css and js resources for use with plone.app.theming in<br>Plone 4.2+.<br><br>Use this package when you want to package a Diazo theme as a Plone add on,<br>particularly if you need to override viewlet or skin templates in the process.<br><br>This is a development tool. You should be familiar with Plone and buildout to<br>use it.<br><br>Installation<br>============<br><br>Add these lines into buildout::<br><br>  [buildout]<br>  parts =<br>     zopeskel<br><br>  [zopeskel]<br>  recipe = zc.recipe.egg<br>  eggs =<br>     ZopeSkel<br>     Paste<br>     PasteDeploy<br>     PasteScript<br>     zopeskel.diazotheme<br><br>And run the buildout<br><br>Usage<br>======<br><br>Add ons under development are typically created in your buildout's src<br>directory. Command line for creating a package named diazotheme.mytheme would be::<br><br>  ../bin/zopeskel diazotheme diazotheme.mytheme<br><br>This will create a Python package with a directory structure like this::<br><br>    diazotheme.mytheme/<br>    |-- diazotheme<br>    |   +-- mytheme<br>    |       |-- diazo_resources<br>    |       |   +-- static<br>    |       |-- locales<br>    |       |-- profiles<br>    |       |   +-- default<br>    |       +-- template_overrides<br>    |-- diazotheme.mytheme.egg-info<br>    +-- docs<br><br>The typically customized parts are in the diazotheme.mytheme/diazotheme/mytheme subdirectory.<br><br>diazo_resources<br>---------------<br><br>This is where you'll put your Diazo resources including a rules XML file and<br>one or more template HTML files. You may wish to interactively develop these<br>theme elements in the theming editor (for Plone 4.3+), then export the<br>resources and add them here.<br><br>A sample theme is included to use as a starting point. Just replace it if you<br>don't need it. The sample theme's key feature is that it makes use of all of<br>Plone's CSS and JavaScript as a starting point.<br><br>Everything you put in this directory and its subdirectories is publicly<br>available at ++theme++namespace.package/resourcename.ext.<br><br>NOTE: The Diazo theme will be available in Plone even if you have not<br>installed the package. It will not be applied, though, until enabled in the<br>Theme configlet of site setup.<br><br>diazo_resources/static<br>----------------------<br><br>This is the conventional place to put static resources like CSS, JS and image files.<br>There's nothing magic about \"static\". Remove or replace it if it fits your needs.<br><br>Everything you put in this directory and its subdirectories is publicly<br>available at ++theme++namespace.package/static/resourcename.ext.<br><br>locales<br>-------<br><br>If your templates include translatable messages, you may provide translation<br>files in this directory. Ignore it if you don't need translations.<br><br>profiles, profiles/default<br>--------------------------<br><br>This is the Generic Setup profile for the add on. The is applied when you use<br>the \"add ons\" configlet in site setup to install the package.<br><br>This profile has a couple of important features:<br><br>* It sets up a BrowserLayer, which insures tha template overrides and registry<br>settings do not affect other Plone installations unless this theme is<br>installed.<br><br>* It has sample resource registrations for CSS and JavaScript resource<br>registries.   These allow you to incorporate static resources which are part<br>of the theme into the Plone resource registries for efficient merging with<br>other CSS and JS resources. The samples are commented out. If you remove the<br>comment markers and install/reinstall the theme, the main.css and main.js<br>files from your diazo_resources/static directory will be incorporated into the<br>CSS and JS delivered by Plone -- even if the Diazo theme is not active.<br><br>The alternative to adding your resources to the registries is to load them<br>directly in your theme's index.html. This is a better approach if you don't<br>intend to use Plone's own CSS and JS resources. If you do, registering your<br>own resources will allow them to be merged for more efficient delivery.<br><br>template_overrides<br>------------------<br><br>You may use this directory to override any Plone viewlet, portlet or skin template.<br><br>To override a template, copy or create a template in this directory using the<br>full dotted name of the template you wish to override.<br><br>For example, if you wish to override the standard Plone footer, you would find the original at::<br><br>    plone.app.layout/plone/app/layout/viewlets/footer.pt<br><br>The full, dotted name for this resource is::<br><br>    plone.app.layout.viewlets.footer.pt<br><br>Template overrides are only applied when the BrowserLayer is installed by<br>installing your package. So, they won't affect Plone installations where this<br>package is not installed.<br><br>A sample override for the Plone footer is included. Delete it if you don't need it.<br><br>For details on template overrides, see the documentation for `z3c.jbot<br>&lt;https://pypi.python.org/pypi/z3c.jbot&gt;`_.<br><br>Changelog<br>=========<br><br>1.1 (2013-04-21)<br>----------------<br><br>- Added z3c.jbot to setup.py requires for created theme.<br><br>- Changed ++resource++ to ++theme++ in profile/defaults.<br><br>- Tuned up documentation.<br><br><br>1.0 (2013-04-10)<br>----------------<br><br>* Initial release.\n          </div>"}, "last_serial": 802411, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "4484cb2c63c6311bf26b30802e04e73a", "sha256": "8dc0e7fb31af4b7f820cc96811d7e4851998f7d4779ead2b801706b555286962"}, "downloads": -1, "filename": "zopeskel.diazotheme-1.0.zip", "has_sig": false, "md5_digest": "4484cb2c63c6311bf26b30802e04e73a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36668, "upload_time": "2013-04-10T21:53:15", "upload_time_iso_8601": "2013-04-10T21:53:15.445025Z", "url": "https://files.pythonhosted.org/packages/da/85/9cbe3b8593be5d224a2db0adfee44ee6ecf47d1ab7116315be4d41553e69/zopeskel.diazotheme-1.0.zip", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "a1245c342bff5d791bbe09fc75b453b4", "sha256": "f5333dbb346749db4a2c0f362813406e8c08aae9d426ab6a24c76b414fe0b7c9"}, "downloads": -1, "filename": "zopeskel.diazotheme-1.1.zip", "has_sig": false, "md5_digest": "a1245c342bff5d791bbe09fc75b453b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38065, "upload_time": "2013-04-22T00:36:20", "upload_time_iso_8601": "2013-04-22T00:36:20.724253Z", "url": "https://files.pythonhosted.org/packages/ba/2d/b82b628057add6202e666e3f927bfb3d4a7188e1bce0c5ab812fc4606350/zopeskel.diazotheme-1.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a1245c342bff5d791bbe09fc75b453b4", "sha256": "f5333dbb346749db4a2c0f362813406e8c08aae9d426ab6a24c76b414fe0b7c9"}, "downloads": -1, "filename": "zopeskel.diazotheme-1.1.zip", "has_sig": false, "md5_digest": "a1245c342bff5d791bbe09fc75b453b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38065, "upload_time": "2013-04-22T00:36:20", "upload_time_iso_8601": "2013-04-22T00:36:20.724253Z", "url": "https://files.pythonhosted.org/packages/ba/2d/b82b628057add6202e666e3f927bfb3d4a7188e1bce0c5ab812fc4606350/zopeskel.diazotheme-1.1.zip", "yanked": false}], "timestamp": "Fri May  8 03:12:15 2020"}