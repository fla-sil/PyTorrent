{"info": {"author": "Aleksandr Mezin", "author_email": "mezin.alexander@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Utilities"], "description": "django-db-quick-setup\r\n=====================\r\n\r\n.. image:: https://travis-ci.org/amezin/django-db-quick-setup.svg\r\n    :target: https://travis-ci.org/amezin/django-db-quick-setup\r\n\r\n.. image:: https://img.shields.io/pypi/v/django-db-quick-setup.svg\r\n    :target: https://pypi.python.org/pypi/django-db-quick-setup\r\n\r\nCreate and start MySQL/PostgreSQL containers with a single management command.\r\n\r\n* If an image isn't available, it will be pulled.\r\n* If a container with the specified configuration doesn't exist, it will be\r\n  created.\r\n* If a container is not running, it will be started.\r\n\r\nNecessary settings are taken from settings.py.\r\n\r\n* SQLite databases are ignored.\r\n* For MySQL and PostgreSQL, one container is created per database.\r\n\r\nAlso, Docker settings are picked up from standard ``DOCKER_*`` environment\r\nvariables.\r\n\r\n\r\nUsage\r\n-----\r\n\r\n.. code:: shell\r\n\r\n    ./manage.py db_quick_setup\r\n\r\n``'db_quick_setup'`` should be added to ``INSTALLED_APPS``:\r\n\r\n.. code:: python\r\n\r\n    INSTALLED_APPS = (\r\n        'django.contrib.auth',\r\n        'django.contrib.contenttypes',\r\n        'django.contrib.sessions',\r\n        'django.contrib.sites',\r\n        'django.contrib.messages',\r\n        'django.contrib.staticfiles',\r\n        'django.contrib.admin',\r\n        'db_quick_setup'\r\n    )\r\n\r\n``'HOST'`` in database settings should point to Docker hostname/IP. You can\r\nuse `find_docker_host()` to auto-detect it.\r\n\r\n.. code:: python\r\n\r\n    from db_quick_setup import find_docker_host\r\n\r\n    DATABASES = {\r\n        'default': {\r\n            'ENGINE': 'django.db.backends.mysql',\r\n            'NAME': 'mysql_db',\r\n            'USER': 'mysql_db',\r\n            'PASSWORD': 'mysql_db_pass',\r\n            'HOST': find_docker_host(),\r\n            'PORT': 53308\r\n        }\r\n    }\r\n\r\n``'NAME'``, ``'USER'``, ``'PASSWORD'`` and ``'PORT'`` can have arbitrary values,\r\nthe container will be configured accordingly.\r\n\r\n* For MySQL ``'NAME'`` and ``'USER'`` should have the same value, it's a\r\n  limitation of the official image.\r\n\r\n\r\nSettings\r\n--------\r\n\r\n``DOCKER_MYSQL_IMAGE``: Docker image to use for MySQL databases. Default is the\r\nofficial image - ``mysql:latest``.\r\n\r\n``DOCKER_POSTGRES_IMAGE``: Docker image for PostgreSQL databases. Default is\r\nthe official image - ``postgresql:latest``.\r\n\r\n``DOCKER_ASSERT_HOSTNAME``: enable SSL hostname validation (boolean). ``True``\r\nby default.\r\n\r\n``DOCKER_PRIVILEGED``: create privileged containers. Currently used as a\r\nworkaround for permission problems on Travis CI. It is disabled by default,\r\nand shouldn't be enabled usually.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/amezin/django-db-quick-setup/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/amezin/django-db-quick-setup", "keywords": "django,mysql,postgresql,docker", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "django-db-quick-setup", "package_url": "https://pypi.org/project/django-db-quick-setup/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-db-quick-setup/", "project_urls": {"Download": "https://github.com/amezin/django-db-quick-setup/releases", "Homepage": "https://github.com/amezin/django-db-quick-setup"}, "release_url": "https://pypi.org/project/django-db-quick-setup/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Create and start MySQL/PostgreSQL containers with a single management command", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/amezin/django-db-quick-setup\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/amezin/django-db-quick-setup.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f36b297cc815c40ec0596e91b8a09122dbf6b51/68747470733a2f2f7472617669732d63692e6f72672f616d657a696e2f646a616e676f2d64622d717569636b2d73657475702e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-db-quick-setup\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/django-db-quick-setup.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c20b2cc0eaf1104dac425f027a65a65015f2d7f0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d64622d717569636b2d73657475702e737667\"></a>\n<p>Create and start MySQL/PostgreSQL containers with a single management command.</p>\n<ul>\n<li>If an image isn\u2019t available, it will be pulled.</li>\n<li>If a container with the specified configuration doesn\u2019t exist, it will be\ncreated.</li>\n<li>If a container is not running, it will be started.</li>\n</ul>\n<p>Necessary settings are taken from settings.py.</p>\n<ul>\n<li>SQLite databases are ignored.</li>\n<li>For MySQL and PostgreSQL, one container is created per database.</li>\n</ul>\n<p>Also, Docker settings are picked up from standard <tt>DOCKER_*</tt> environment\nvariables.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>./manage.py db_quick_setup\n</pre>\n<p><tt>'db_quick_setup'</tt> should be added to <tt>INSTALLED_APPS</tt>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s1\">'django.contrib.auth'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.contenttypes'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.sessions'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.sites'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.messages'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.staticfiles'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.admin'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'db_quick_setup'</span>\n<span class=\"p\">)</span>\n</pre>\n<p><tt>'HOST'</tt> in database settings should point to Docker hostname/IP. You can\nuse <cite>find_docker_host()</cite> to auto-detect it.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">db_quick_setup</span> <span class=\"kn\">import</span> <span class=\"n\">find_docker_host</span>\n\n<span class=\"n\">DATABASES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ENGINE'</span><span class=\"p\">:</span> <span class=\"s1\">'django.db.backends.mysql'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'NAME'</span><span class=\"p\">:</span> <span class=\"s1\">'mysql_db'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'USER'</span><span class=\"p\">:</span> <span class=\"s1\">'mysql_db'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'PASSWORD'</span><span class=\"p\">:</span> <span class=\"s1\">'mysql_db_pass'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'HOST'</span><span class=\"p\">:</span> <span class=\"n\">find_docker_host</span><span class=\"p\">(),</span>\n        <span class=\"s1\">'PORT'</span><span class=\"p\">:</span> <span class=\"mi\">53308</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p><tt>'NAME'</tt>, <tt>'USER'</tt>, <tt>'PASSWORD'</tt> and <tt>'PORT'</tt> can have arbitrary values,\nthe container will be configured accordingly.</p>\n<ul>\n<li>For MySQL <tt>'NAME'</tt> and <tt>'USER'</tt> should have the same value, it\u2019s a\nlimitation of the official image.</li>\n</ul>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p><tt>DOCKER_MYSQL_IMAGE</tt>: Docker image to use for MySQL databases. Default is the\nofficial image - <tt>mysql:latest</tt>.</p>\n<p><tt>DOCKER_POSTGRES_IMAGE</tt>: Docker image for PostgreSQL databases. Default is\nthe official image - <tt>postgresql:latest</tt>.</p>\n<p><tt>DOCKER_ASSERT_HOSTNAME</tt>: enable SSL hostname validation (boolean). <tt>True</tt>\nby default.</p>\n<p><tt>DOCKER_PRIVILEGED</tt>: create privileged containers. Currently used as a\nworkaround for permission problems on Travis CI. It is disabled by default,\nand shouldn\u2019t be enabled usually.</p>\n</div>\n\n          </div>"}, "last_serial": 1732074, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "86851e5fa9c4d43aba592a7f71f54114", "sha256": "b94947a9cb8655470b680c77bfbe22e70217a8af2c90a75d2defbebc7b926b9a"}, "downloads": -1, "filename": "django-db-quick-setup-0.0.2.tar.gz", "has_sig": false, "md5_digest": "86851e5fa9c4d43aba592a7f71f54114", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8404, "upload_time": "2015-09-20T22:24:48", "upload_time_iso_8601": "2015-09-20T22:24:48.186095Z", "url": "https://files.pythonhosted.org/packages/8b/69/5d46f3bee3958dbf36d0a80eb76c6c9b2cef18e3ad69c2acf1d8a94e803b/django-db-quick-setup-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "86851e5fa9c4d43aba592a7f71f54114", "sha256": "b94947a9cb8655470b680c77bfbe22e70217a8af2c90a75d2defbebc7b926b9a"}, "downloads": -1, "filename": "django-db-quick-setup-0.0.2.tar.gz", "has_sig": false, "md5_digest": "86851e5fa9c4d43aba592a7f71f54114", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8404, "upload_time": "2015-09-20T22:24:48", "upload_time_iso_8601": "2015-09-20T22:24:48.186095Z", "url": "https://files.pythonhosted.org/packages/8b/69/5d46f3bee3958dbf36d0a80eb76c6c9b2cef18e3ad69c2acf1d8a94e803b/django-db-quick-setup-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:38 2020"}