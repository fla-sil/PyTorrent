{"info": {"author": "Sondre Lilleb\u00f8 Gundersen", "author_email": "sondrelg@live.no", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Rust", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: General"], "description": "\n#######\nrs-case\n#######\n\n.. image:: https://img.shields.io/pypi/v/rscase.svg\n    :target: https://pypi.org/project/rscase/\n\n.. image:: https://github.com/sondrelg/rs-case/workflows/tests/badge.svg\n    :target: https://github.com/sondrelg/rs-case\n\n.. image:: https://img.shields.io/badge/Python-v3.8-blue.svg\n    :target: https://github.com/sondrelg/rs-case\n\n.. image:: https://img.shields.io/badge/Rust-v1.43.0--nightly-red.svg\n    :target: https://github.com/sondrelg/rs-case\n\n.. image:: https://codecov.io/gh/sondrelg/rscase/branch/master/graph/badge.svg\n    :target: https://github.com/sondrelg/rs-case\n\nThis module offers a handful of case-formatting utility functions. It is a very simple Python package, written in Rust_ and implemented using pyo3_ which offers you easy Rust bindings for the Python interpreter.\n\n.. _Rust: https://www.rust-lang.org/learn\n.. _pyo3: https://github.com/PyO3/pyo3\n\nInstallation\n############\n\nInstall with pip using:\n\n.. code:: shell\n\n    pip install rscase\n\nNote: This package requires :code:`Rust nightly 2020-02-06` or an equivalent future release.\n\nUsage\n#####\n\nThe package provides utility functions for generating strings formatted in several different case standards. \n\nThe case-standards and their functions are listed below.\n\n+-----------------+-------------+-------------------+\n| Supported cases | Function    | Format example    |\n+=================+=============+===================+\n|    camel case   | camel_case  | camelCasedValue   |\n+-----------------+-------------+-------------------+\n|    snake case   | snake_case  | snake_cased_value |\n+-----------------+-------------+-------------------+\n|    pascal case  | pascal_case | PascalCasedValue  |\n+-----------------+-------------+-------------------+\n|    kebab case   | kebab_case  | kebab-cased-value |\n+-----------------+-------------+-------------------+\n|    train case   | train_case  | TRAIN-CASED-VALUE |\n+-----------------+-------------+-------------------+\n\nAll functions are imported and accessed the same way:\n\n.. code:: shell\n\n    >> [in] from rscase import rscase\n    >> [in] rscase.camel_case('this_is-a_Test')\n    >> [out] thisIsATest\n\n\nIf you want to use this package, please note that the case functions are written to successfully convert camel case and snake case to the remaining formats. Formatting train case to itself doesn't really make sense, and the way I would use this would be to, e.g., serialize out response data to a camelCased format.\n\nBenchmarking Performance\n########################\n\nThis repo is a bit of an experiment, and because the functions contained in this package only do some very simple string manipulation, they seem like they might actually be good candidates for Python vs Rust performance benchmarking.\n\nTo try and make this a fair comparison - to make sure we're comparing apples to apples - I decided to test the Rust function `snake_case` (see the Rust function here_) to an identical Python function. The Python version is shown below:\n\n.. _here: https://github.com/sondrelg/rs-case/blob/master/src/lib.rs\n\n.. code:: python\n\n    from rscase import rscase\n\n    test_string = \"thisIsALongCamelCasedAlphabeticKey\"\n\n    # Test functions\n\n    def original_snake_case():\n        string = test_string\n        new_string = \"\"\n        dash = \"-\"\n        for index in range(len(string)):\n            if index == 0:\n                new_string += string[index].lower()\n            elif string[index] == dash:\n                new_string += '_'\n            elif string[index].upper() == string[index]:\n                new_string += f'_{string[index]}'\n            else:\n                new_string += string[index]\n        return new_string\n\n    def rust_snake_case():\n        string = test_string\n        return rscase.snake_case(string)\n\n\nThe main difference between the two functions, flow-wise, is only that Rust won't let you just iterate over a string, so you have to create a vector of `char`'s instead - or at least that's how I did it.\n\nResults\n#######\n\nAfter running the tests, the results seems to be pretty promising - in favor of the Rust implementation. \n\n+-------------+---------------------+-----------------------+------------+\n| Reps        | Rust Execution Time | Python Execution Time | Difference |\n+=============+=====================+=======================+============+\n| 1           | 18.30 us            | 14.20 us              | 0.78x*     |\n+-------------+---------------------+-----------------------+------------+\n| 10          | 55.20 us            | 114.20 us             | 2.07x      |\n+-------------+---------------------+-----------------------+------------+\n| 100         | .49 ms              | 1.11 ms               | 2.27x      |\n+-------------+---------------------+-----------------------+------------+\n| 1000        | 4.88 ms             | 11.18 ms              | 2.28x      |\n+-------------+---------------------+-----------------------+------------+\n| 10 000      | 47.20 ms            | 109.13 ms             | 2.31x      |\n+-------------+---------------------+-----------------------+------------+\n| 100 000     | .47 s               | 1.08 s                | 2.31x      |\n+-------------+---------------------+-----------------------+------------+\n| 1000 000    | 4.83 s              | 11.12 s               | 2.30x      |\n+-------------+---------------------+-----------------------+------------+\n| 10 000 000  | 46.67 s             | 109.27 s              | 2.34x      |\n+-------------+---------------------+-----------------------+------------+\n| 100 000 000 | 484 s               | 1102 s                | 2.28x      |\n+-------------+---------------------+-----------------------+------------+\n\nThe results are pretty clear: after only 100 reps, the results seem to stabilize, and flatten out at around a 2.3x longer execution time for the Python implementation.\n\n``*`` the 1-rep result seems to show that Python actually outperforms Rust in the scenario that would normally *actually* matter. Since it makes sense that variance would be high when trying to measure something at the microsecond level I decided to run this individual scenario again, another one million times, to increase the sample size. With a larger sample, the average `difference` for 1 rep averages to `1.85x` slower in Python, and the median is `1.88x`. In short, the Rust implementation seems to outperform the Python across the board.\n\nBenchmarking Performance - Update\n##################################\n\nThanks to `Thomas Hartmann <https://github.com/t-hart>`__ for suggesting a significant performance improvement in the packaged Rust code.\n\nUsing some experimental features, we're able to improve the performance of the Rust code considerably. The :code:`snake_case` test from above is replicated below, with the performance difference settling at 5x the Python performance.\n\n+-------------+---------------------+-----------------------+------------+\n| Reps        | Rust Execution Time | Python Execution Time | Difference |\n+=============+=====================+=======================+============+\n| 1           | 10.70 us            | 15.20 us              | 1.42x      |\n+-------------+---------------------+-----------------------+------------+\n| 10          | 28.70 us            | 113.30 us             | 3.95x      |\n+-------------+---------------------+-----------------------+------------+\n| 100         | .24 ms              | 1.11 ms               | 4.56x      |\n+-------------+---------------------+-----------------------+------------+\n| 1000        | 2.24 ms             | 11.28 ms              | 5.03x      |\n+-------------+---------------------+-----------------------+------------+\n| 10 000      | 22.16 ms            | 107.79 ms             | 4.86x      |\n+-------------+---------------------+-----------------------+------------+\n| 100 000     | .24 s               | 1.09 s                | 4.44x      |\n+-------------+---------------------+-----------------------+------------+\n| 1000 000    | 2.21 s              | 11.02 s               | 4.99x      |\n+-------------+---------------------+-----------------------+------------+\n| 10 000 000  | 22.09 s             | 110.47 s              | 5.00x      |\n+-------------+---------------------+-----------------------+------------+\n| 100 000 000 | 222 s               | 1086 s                | 4.88x      |\n+-------------+---------------------+-----------------------+------------+\n\nRunning the :code:`1 rep` scenario one million times, gives an average Rust execution time of 3.84 us compared to an average Python execution time of 12.61 us (~3.3x slower for Python).\n\nThis time around, I also decided to test the camel case implementations, as the logic does behave a bit differently:\n\n+-------------+---------------------+-----------------------+------------+\n| Reps        | Rust Execution Time | Python Execution Time | Difference |\n+=============+=====================+=======================+============+\n| 1           | 10.99 us            | 14.40 us              | 1.31x      |\n+-------------+---------------------+-----------------------+------------+\n| 10          | 39.79 us            | 106.90 us             | 2.69x      |\n+-------------+---------------------+-----------------------+------------+\n| 100         | .25 ms              | 1.02 ms               | 4.07x      |\n+-------------+---------------------+-----------------------+------------+\n| 1000        | 2.40 ms             | 10.24 ms              | 4.26x      |\n+-------------+---------------------+-----------------------+------------+\n| 10 000      | 23.55 ms            | 100.17 ms             | 4.25x      |\n+-------------+---------------------+-----------------------+------------+\n| 100 000     | .23 s               | 0.98 s                | 4.26x      |\n+-------------+---------------------+-----------------------+------------+\n| 1000 000    | 2.34 s              | 9.92 s                | 4.23x      |\n+-------------+---------------------+-----------------------+------------+\n| 10 000 000  | 23.23 s             | 98.91 s               | 4.26x      |\n+-------------+---------------------+-----------------------+------------+\n| 100 000 000 | 232 s               | 990 s                 | 4.26x      |\n+-------------+---------------------+-----------------------+------------+\n\nRunning the :code:`1 rep` scenario one million times, gives an average Rust execution time of 3.90 us compared to an average Python execution time of 11.48 us (almost ~3x slower for Python).\n\nIn summary, the benchmarked performed similarly, with Rust pulling ahead even more, for these two implementations. At the same time, there's probably room for improvement for both implementations still, and probably especially for the Python one.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "https://pypi.python.org/pypi/rscase", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sondrelg/rs-case", "keywords": "snake camel pascal train kebab case", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "rscase", "package_url": "https://pypi.org/project/rscase/", "platform": "OS Independent", "project_url": "https://pypi.org/project/rscase/", "project_urls": {"Download": "https://pypi.python.org/pypi/rscase", "Homepage": "https://github.com/sondrelg/rs-case"}, "release_url": "https://pypi.org/project/rscase/1.1.1/", "requires_dist": ["setuptools-rust (>=0.10.1)", "wheel", "setuptools"], "requires_python": "", "summary": "Python package for string case formatting; implemented in Rust.", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/rscase/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/rscase.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7b111bfbdace81b1c33ad7c5477aec75cca34c10/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7273636173652e737667\"></a>\n<a href=\"https://github.com/sondrelg/rs-case\" rel=\"nofollow\"><img alt=\"https://github.com/sondrelg/rs-case/workflows/tests/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8cd8c7260904a69a74025d3215f5ed92d64b4d2a/68747470733a2f2f6769746875622e636f6d2f736f6e6472656c672f72732d636173652f776f726b666c6f77732f74657374732f62616467652e737667\"></a>\n<a href=\"https://github.com/sondrelg/rs-case\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Python-v3.8-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a968a4ea3e6ed72d99d1a6fbbdb1253726180960/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d76332e382d626c75652e737667\"></a>\n<a href=\"https://github.com/sondrelg/rs-case\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Rust-v1.43.0--nightly-red.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1833fe777dac7084f82ebd67a38d81e1c779625/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f527573742d76312e34332e302d2d6e696768746c792d7265642e737667\"></a>\n<a href=\"https://github.com/sondrelg/rs-case\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/sondrelg/rscase/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45224a757c19377a7bfa4e703a64533011dc2d47/68747470733a2f2f636f6465636f762e696f2f67682f736f6e6472656c672f7273636173652f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p>This module offers a handful of case-formatting utility functions. It is a very simple Python package, written in <a href=\"https://www.rust-lang.org/learn\" rel=\"nofollow\">Rust</a> and implemented using <a href=\"https://github.com/PyO3/pyo3\" rel=\"nofollow\">pyo3</a> which offers you easy Rust bindings for the Python interpreter.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install with pip using:</p>\n<pre>pip install rscase\n</pre>\n<p>Note: This package requires <code>Rust nightly 2020-02-06</code> or an equivalent future release.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The package provides utility functions for generating strings formatted in several different case standards.</p>\n<p>The case-standards and their functions are listed below.</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Supported cases</th>\n<th>Function</th>\n<th>Format example</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>camel case</td>\n<td>camel_case</td>\n<td>camelCasedValue</td>\n</tr>\n<tr><td>snake case</td>\n<td>snake_case</td>\n<td>snake_cased_value</td>\n</tr>\n<tr><td>pascal case</td>\n<td>pascal_case</td>\n<td>PascalCasedValue</td>\n</tr>\n<tr><td>kebab case</td>\n<td>kebab_case</td>\n<td>kebab-cased-value</td>\n</tr>\n<tr><td>train case</td>\n<td>train_case</td>\n<td>TRAIN-CASED-VALUE</td>\n</tr>\n</tbody>\n</table>\n<p>All functions are imported and accessed the same way:</p>\n<pre>&gt;&gt; <span class=\"o\">[</span>in<span class=\"o\">]</span> from rscase import rscase\n&gt;&gt; <span class=\"o\">[</span>in<span class=\"o\">]</span> rscase.camel_case<span class=\"o\">(</span><span class=\"s1\">'this_is-a_Test'</span><span class=\"o\">)</span>\n&gt;&gt; <span class=\"o\">[</span>out<span class=\"o\">]</span> thisIsATest\n</pre>\n<p>If you want to use this package, please note that the case functions are written to successfully convert camel case and snake case to the remaining formats. Formatting train case to itself doesn\u2019t really make sense, and the way I would use this would be to, e.g., serialize out response data to a camelCased format.</p>\n</div>\n<div id=\"benchmarking-performance\">\n<h2>Benchmarking Performance</h2>\n<p>This repo is a bit of an experiment, and because the functions contained in this package only do some very simple string manipulation, they seem like they might actually be good candidates for Python vs Rust performance benchmarking.</p>\n<p>To try and make this a fair comparison - to make sure we\u2019re comparing apples to apples - I decided to test the Rust function <cite>snake_case</cite> (see the Rust function <a href=\"https://github.com/sondrelg/rs-case/blob/master/src/lib.rs\" rel=\"nofollow\">here</a>) to an identical Python function. The Python version is shown below:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rscase</span> <span class=\"kn\">import</span> <span class=\"n\">rscase</span>\n\n<span class=\"n\">test_string</span> <span class=\"o\">=</span> <span class=\"s2\">\"thisIsALongCamelCasedAlphabeticKey\"</span>\n\n<span class=\"c1\"># Test functions</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">original_snake_case</span><span class=\"p\">():</span>\n    <span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"n\">test_string</span>\n    <span class=\"n\">new_string</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n    <span class=\"n\">dash</span> <span class=\"o\">=</span> <span class=\"s2\">\"-\"</span>\n    <span class=\"k\">for</span> <span class=\"n\">index</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">string</span><span class=\"p\">)):</span>\n        <span class=\"k\">if</span> <span class=\"n\">index</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">new_string</span> <span class=\"o\">+=</span> <span class=\"n\">string</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n        <span class=\"k\">elif</span> <span class=\"n\">string</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">dash</span><span class=\"p\">:</span>\n            <span class=\"n\">new_string</span> <span class=\"o\">+=</span> <span class=\"s1\">'_'</span>\n        <span class=\"k\">elif</span> <span class=\"n\">string</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">string</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]:</span>\n            <span class=\"n\">new_string</span> <span class=\"o\">+=</span> <span class=\"sa\">f</span><span class=\"s1\">'_</span><span class=\"si\">{</span><span class=\"n\">string</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s1\">'</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">new_string</span> <span class=\"o\">+=</span> <span class=\"n\">string</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">new_string</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">rust_snake_case</span><span class=\"p\">():</span>\n    <span class=\"n\">string</span> <span class=\"o\">=</span> <span class=\"n\">test_string</span>\n    <span class=\"k\">return</span> <span class=\"n\">rscase</span><span class=\"o\">.</span><span class=\"n\">snake_case</span><span class=\"p\">(</span><span class=\"n\">string</span><span class=\"p\">)</span>\n</pre>\n<p>The main difference between the two functions, flow-wise, is only that Rust won\u2019t let you just iterate over a string, so you have to create a vector of <cite>char</cite>\u2019s instead - or at least that\u2019s how I did it.</p>\n</div>\n<div id=\"results\">\n<h2>Results</h2>\n<p>After running the tests, the results seems to be pretty promising - in favor of the Rust implementation.</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Reps</th>\n<th>Rust Execution Time</th>\n<th>Python Execution Time</th>\n<th>Difference</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>1</td>\n<td>18.30 us</td>\n<td>14.20 us</td>\n<td>0.78x*</td>\n</tr>\n<tr><td>10</td>\n<td>55.20 us</td>\n<td>114.20 us</td>\n<td>2.07x</td>\n</tr>\n<tr><td>100</td>\n<td>.49 ms</td>\n<td>1.11 ms</td>\n<td>2.27x</td>\n</tr>\n<tr><td>1000</td>\n<td>4.88 ms</td>\n<td>11.18 ms</td>\n<td>2.28x</td>\n</tr>\n<tr><td>10 000</td>\n<td>47.20 ms</td>\n<td>109.13 ms</td>\n<td>2.31x</td>\n</tr>\n<tr><td>100 000</td>\n<td>.47 s</td>\n<td>1.08 s</td>\n<td>2.31x</td>\n</tr>\n<tr><td>1000 000</td>\n<td>4.83 s</td>\n<td>11.12 s</td>\n<td>2.30x</td>\n</tr>\n<tr><td>10 000 000</td>\n<td>46.67 s</td>\n<td>109.27 s</td>\n<td>2.34x</td>\n</tr>\n<tr><td>100 000 000</td>\n<td>484 s</td>\n<td>1102 s</td>\n<td>2.28x</td>\n</tr>\n</tbody>\n</table>\n<p>The results are pretty clear: after only 100 reps, the results seem to stabilize, and flatten out at around a 2.3x longer execution time for the Python implementation.</p>\n<p><tt>*</tt> the 1-rep result seems to show that Python actually outperforms Rust in the scenario that would normally <em>actually</em> matter. Since it makes sense that variance would be high when trying to measure something at the microsecond level I decided to run this individual scenario again, another one million times, to increase the sample size. With a larger sample, the average <cite>difference</cite> for 1 rep averages to <cite>1.85x</cite> slower in Python, and the median is <cite>1.88x</cite>. In short, the Rust implementation seems to outperform the Python across the board.</p>\n</div>\n<div id=\"benchmarking-performance-update\">\n<h2>Benchmarking Performance - Update</h2>\n<p>Thanks to <a href=\"https://github.com/t-hart\" rel=\"nofollow\">Thomas Hartmann</a> for suggesting a significant performance improvement in the packaged Rust code.</p>\n<p>Using some experimental features, we\u2019re able to improve the performance of the Rust code considerably. The <code>snake_case</code> test from above is replicated below, with the performance difference settling at 5x the Python performance.</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Reps</th>\n<th>Rust Execution Time</th>\n<th>Python Execution Time</th>\n<th>Difference</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>1</td>\n<td>10.70 us</td>\n<td>15.20 us</td>\n<td>1.42x</td>\n</tr>\n<tr><td>10</td>\n<td>28.70 us</td>\n<td>113.30 us</td>\n<td>3.95x</td>\n</tr>\n<tr><td>100</td>\n<td>.24 ms</td>\n<td>1.11 ms</td>\n<td>4.56x</td>\n</tr>\n<tr><td>1000</td>\n<td>2.24 ms</td>\n<td>11.28 ms</td>\n<td>5.03x</td>\n</tr>\n<tr><td>10 000</td>\n<td>22.16 ms</td>\n<td>107.79 ms</td>\n<td>4.86x</td>\n</tr>\n<tr><td>100 000</td>\n<td>.24 s</td>\n<td>1.09 s</td>\n<td>4.44x</td>\n</tr>\n<tr><td>1000 000</td>\n<td>2.21 s</td>\n<td>11.02 s</td>\n<td>4.99x</td>\n</tr>\n<tr><td>10 000 000</td>\n<td>22.09 s</td>\n<td>110.47 s</td>\n<td>5.00x</td>\n</tr>\n<tr><td>100 000 000</td>\n<td>222 s</td>\n<td>1086 s</td>\n<td>4.88x</td>\n</tr>\n</tbody>\n</table>\n<p>Running the <code>1 rep</code> scenario one million times, gives an average Rust execution time of 3.84 us compared to an average Python execution time of 12.61 us (~3.3x slower for Python).</p>\n<p>This time around, I also decided to test the camel case implementations, as the logic does behave a bit differently:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Reps</th>\n<th>Rust Execution Time</th>\n<th>Python Execution Time</th>\n<th>Difference</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>1</td>\n<td>10.99 us</td>\n<td>14.40 us</td>\n<td>1.31x</td>\n</tr>\n<tr><td>10</td>\n<td>39.79 us</td>\n<td>106.90 us</td>\n<td>2.69x</td>\n</tr>\n<tr><td>100</td>\n<td>.25 ms</td>\n<td>1.02 ms</td>\n<td>4.07x</td>\n</tr>\n<tr><td>1000</td>\n<td>2.40 ms</td>\n<td>10.24 ms</td>\n<td>4.26x</td>\n</tr>\n<tr><td>10 000</td>\n<td>23.55 ms</td>\n<td>100.17 ms</td>\n<td>4.25x</td>\n</tr>\n<tr><td>100 000</td>\n<td>.23 s</td>\n<td>0.98 s</td>\n<td>4.26x</td>\n</tr>\n<tr><td>1000 000</td>\n<td>2.34 s</td>\n<td>9.92 s</td>\n<td>4.23x</td>\n</tr>\n<tr><td>10 000 000</td>\n<td>23.23 s</td>\n<td>98.91 s</td>\n<td>4.26x</td>\n</tr>\n<tr><td>100 000 000</td>\n<td>232 s</td>\n<td>990 s</td>\n<td>4.26x</td>\n</tr>\n</tbody>\n</table>\n<p>Running the <code>1 rep</code> scenario one million times, gives an average Rust execution time of 3.90 us compared to an average Python execution time of 11.48 us (almost ~3x slower for Python).</p>\n<p>In summary, the benchmarked performed similarly, with Rust pulling ahead even more, for these two implementations. At the same time, there\u2019s probably room for improvement for both implementations still, and probably especially for the Python one.</p>\n</div>\n\n          </div>"}, "last_serial": 6656791, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "eb2533e1ce93cc7e35def6f0adf217cf", "sha256": "585f2928aba806ec712cc036c4068ceb4fd7d37c3f81ab72d48414b3fe5bc569"}, "downloads": -1, "filename": "rscase-0.0.1-cp38-none-win_amd64.whl", "has_sig": false, "md5_digest": "eb2533e1ce93cc7e35def6f0adf217cf", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 113493, "upload_time": "2020-02-01T18:01:59", "upload_time_iso_8601": "2020-02-01T18:01:59.810906Z", "url": "https://files.pythonhosted.org/packages/2c/7c/628bbe10f6ff7abf629b6e789bdd4596b36fdbb774759ff0d0d381925cba/rscase-0.0.1-cp38-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ad691465e6dfbd118fd2f5c83b7ef18", "sha256": "aef8399f5f29736b3d73ff0244e923cc1c2af7062502e034432dcca5c5a6e277"}, "downloads": -1, "filename": "rscase-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3ad691465e6dfbd118fd2f5c83b7ef18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3627, "upload_time": "2020-02-01T18:02:02", "upload_time_iso_8601": "2020-02-01T18:02:02.513560Z", "url": "https://files.pythonhosted.org/packages/60/e2/44b495e3792352f0d7b784ab4d864c99a8e5c0ad1dbe342e792ef7c260fa/rscase-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "77a40e87de250ccd4a41e6d6337cb874", "sha256": "91653109c744c95d7a7db285af917a5a4d742bf61e7a3737fdd6b842e5e394d9"}, "downloads": -1, "filename": "rscase-0.0.2-cp38-none-win_amd64.whl", "has_sig": false, "md5_digest": "77a40e87de250ccd4a41e6d6337cb874", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">= 3.5", "size": 113586, "upload_time": "2020-02-01T23:58:01", "upload_time_iso_8601": "2020-02-01T23:58:01.498674Z", "url": "https://files.pythonhosted.org/packages/57/9a/031d00655d54d3cd532d4b28ad0a17ed2f41fcc0b412b23c8fcf98fb06b6/rscase-0.0.2-cp38-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce860339e7d152e6b1e6b7b15ab085ea", "sha256": "d983aa9a5470efb6c23320b951fc144b739bbaa2c056a3045329411e46989540"}, "downloads": -1, "filename": "rscase-0.0.2.tar.gz", "has_sig": false, "md5_digest": "ce860339e7d152e6b1e6b7b15ab085ea", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 4654, "upload_time": "2020-02-01T23:58:03", "upload_time_iso_8601": "2020-02-01T23:58:03.140242Z", "url": "https://files.pythonhosted.org/packages/4e/b6/9777e20a7a7a32818d64102eeb1ef2a6ae08cd008f466c5d3276a558d070/rscase-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "727f82d1f76d043640a0db5619457b99", "sha256": "942ae6c7e0877502757bb02a5169f9eb30118434377ca07031fca5029e1ede2e"}, "downloads": -1, "filename": "rscase-0.1.0-cp38-none-win_amd64.whl", "has_sig": false, "md5_digest": "727f82d1f76d043640a0db5619457b99", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">= 3.5", "size": 113669, "upload_time": "2020-02-02T13:53:36", "upload_time_iso_8601": "2020-02-02T13:53:36.319410Z", "url": "https://files.pythonhosted.org/packages/5b/3a/cb0a579dbf2123b55d2cc5ce7faf14273eb4f9935603c998f15ba9debd38/rscase-0.1.0-cp38-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "68fd320af6af9850a4fa4f6a5578ba49", "sha256": "13a11f402473f39acbd26b32dde4c41d411ff54c1c3407bb81ae994d49011985"}, "downloads": -1, "filename": "rscase-0.1.0.tar.gz", "has_sig": false, "md5_digest": "68fd320af6af9850a4fa4f6a5578ba49", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 4935, "upload_time": "2020-02-02T13:53:37", "upload_time_iso_8601": "2020-02-02T13:53:37.963447Z", "url": "https://files.pythonhosted.org/packages/d5/c8/2e5b0916d124ab8ba151c7d76550ecc40a0861be14f037ab69dfca963e79/rscase-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "90a3e5529a36dc92ea78c52ecc86cc4a", "sha256": "8c142eb2143a3806e7a0b531789c47822023981c35c166011b5b36f397204abd"}, "downloads": -1, "filename": "rscase-1.0.0-cp38-none-win_amd64.whl", "has_sig": false, "md5_digest": "90a3e5529a36dc92ea78c52ecc86cc4a", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">= 3.5", "size": 113690, "upload_time": "2020-02-02T14:42:26", "upload_time_iso_8601": "2020-02-02T14:42:26.481349Z", "url": "https://files.pythonhosted.org/packages/35/2f/3b1d928051ee459085a3d2d9479dccb9ff4e3cb2d1d0841316236c5043e8/rscase-1.0.0-cp38-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "570132edb1324ae805d05575169e6201", "sha256": "8362bb02a36a008d9fa4b8093c01dd5831808c7e0233d1a89709e17b8412ad48"}, "downloads": -1, "filename": "rscase-1.0.0.tar.gz", "has_sig": false, "md5_digest": "570132edb1324ae805d05575169e6201", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 4703, "upload_time": "2020-02-02T14:42:28", "upload_time_iso_8601": "2020-02-02T14:42:28.413358Z", "url": "https://files.pythonhosted.org/packages/fd/65/c6261673499a8b3c36dc73462e8491aff51a419097196a05a71e1c1978d5/rscase-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "9b0c93fb0c1f290cb115ec82e40da51d", "sha256": "a914b0840b3bb48c4e5737ad7ca3e4c662c4a48e2060058aeac441f3634534c1"}, "downloads": -1, "filename": "rscase-1.0.1-cp38-none-win_amd64.whl", "has_sig": false, "md5_digest": "9b0c93fb0c1f290cb115ec82e40da51d", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">= 3.5", "size": 113661, "upload_time": "2020-02-02T14:54:30", "upload_time_iso_8601": "2020-02-02T14:54:30.587464Z", "url": "https://files.pythonhosted.org/packages/f8/c1/ef3da246eaf1c4aa2282eed63e72e51154c4952042cd50b42b011b6fb065/rscase-1.0.1-cp38-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9a4b248870e7e4738616d75b65472ae", "sha256": "4faf0b5ba756b967f786ef89ad1ba83dc8727ec557cbdc99def85fa5cc1aff2d"}, "downloads": -1, "filename": "rscase-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f9a4b248870e7e4738616d75b65472ae", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 4683, "upload_time": "2020-02-02T14:54:32", "upload_time_iso_8601": "2020-02-02T14:54:32.612914Z", "url": "https://files.pythonhosted.org/packages/d2/50/592cc0ab408c67bc3910f958bc12161a5baf7553af5a3cb5a67be56f189d/rscase-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "42976d73011e4cd1b18f784c729a3ba0", "sha256": "f74d84fe87449c4df5b937b93611eb6c1ea2d5dc7456419dedfe7c0f46efb70d"}, "downloads": -1, "filename": "rscase-1.0.2-cp38-none-win_amd64.whl", "has_sig": false, "md5_digest": "42976d73011e4cd1b18f784c729a3ba0", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">= 3.5", "size": 5884, "upload_time": "2020-02-07T09:20:22", "upload_time_iso_8601": "2020-02-07T09:20:22.066658Z", "url": "https://files.pythonhosted.org/packages/42/bf/383d24370cc40a5e2f38c0a55094a2134d0863e822a4b6964063ec7b1619/rscase-1.0.2-cp38-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c3daf8c4140da240aeacc19c3dfbf82", "sha256": "8554d21fd63fe2f8df7b6861d12ad795538edc5c0af935c7d43dc24952cf75b5"}, "downloads": -1, "filename": "rscase-1.0.2.tar.gz", "has_sig": false, "md5_digest": "3c3daf8c4140da240aeacc19c3dfbf82", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 5829, "upload_time": "2020-02-07T09:20:23", "upload_time_iso_8601": "2020-02-07T09:20:23.886535Z", "url": "https://files.pythonhosted.org/packages/4b/ea/01d9e6458d7703cf550f0a7eb137b8bc1f07c0d4fe5f9465cf9128b9fd12/rscase-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "2a645c13716a499631a81b6fb035d065", "sha256": "2a074f55f2012f1dd8c221fe0692bcb9b595869d47842f40312eeb84cfdedb75"}, "downloads": -1, "filename": "rscase-1.0.3-cp38-none-win_amd64.whl", "has_sig": false, "md5_digest": "2a645c13716a499631a81b6fb035d065", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">= 3.5", "size": 5875, "upload_time": "2020-02-07T09:23:44", "upload_time_iso_8601": "2020-02-07T09:23:44.207870Z", "url": "https://files.pythonhosted.org/packages/bb/76/b0fc2379059faeb105cec15488cb3f5323f645b7cd89f9b0562697154f42/rscase-1.0.3-cp38-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9469c1933fbd48ad62986f9c5d3ea57", "sha256": "281fb239e7cf4b19d90b208d51e2019fd9bf09571c7e4fff8c3f6004ba698983"}, "downloads": -1, "filename": "rscase-1.0.3.tar.gz", "has_sig": false, "md5_digest": "c9469c1933fbd48ad62986f9c5d3ea57", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 5820, "upload_time": "2020-02-07T09:23:45", "upload_time_iso_8601": "2020-02-07T09:23:45.967847Z", "url": "https://files.pythonhosted.org/packages/80/6c/802f0b962e7489184f8b632925bdec1fde492070ac8e1d690294b88f2720/rscase-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "b85997c4ec2e98793ecc775fa8160c25", "sha256": "4ea24f55608faa7e88bbb2f37ad1cb0eaf0edca76be11040d0468cf459da26fb"}, "downloads": -1, "filename": "rscase-1.0.4-cp38-none-win_amd64.whl", "has_sig": false, "md5_digest": "b85997c4ec2e98793ecc775fa8160c25", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">= 3.5", "size": 113758, "upload_time": "2020-02-07T09:32:29", "upload_time_iso_8601": "2020-02-07T09:32:29.096242Z", "url": "https://files.pythonhosted.org/packages/17/6f/1c7a28f74580e56dd9e463cead5709d0463810d6d2c29abe9a7ff75cf3ab/rscase-1.0.4-cp38-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac06f9524699d4f4b506e2f5930b55ba", "sha256": "b83ada79b34cb3e7fe2a2661d25ef67f90f6c015776f7b789552e729bd2df18e"}, "downloads": -1, "filename": "rscase-1.0.4.tar.gz", "has_sig": false, "md5_digest": "ac06f9524699d4f4b506e2f5930b55ba", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 5800, "upload_time": "2020-02-07T09:32:30", "upload_time_iso_8601": "2020-02-07T09:32:30.643773Z", "url": "https://files.pythonhosted.org/packages/9c/b4/0a661fdaa1d65d2724cd82491885231bc7ae8dd8402366c82c65456dbd95/rscase-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "7508006e6d65695b64e0ed575eaffb9d", "sha256": "ce4cbf28a548ebe33e62e20c263983753c4a3cac89e57bdc468d2057e2625037"}, "downloads": -1, "filename": "rscase-1.0.5-cp38-none-win_amd64.whl", "has_sig": false, "md5_digest": "7508006e6d65695b64e0ed575eaffb9d", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">= 3.5", "size": 113762, "upload_time": "2020-02-07T09:37:02", "upload_time_iso_8601": "2020-02-07T09:37:02.022663Z", "url": "https://files.pythonhosted.org/packages/99/98/044ea0ad32ce974bf3a7659ca77bdc79e4c5ee99b8784052abe971ec1c8f/rscase-1.0.5-cp38-none-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ec40473bb3399cd0236e4bd9c02b6ba", "sha256": "1aa8bbf07818ce7f66e165959a5edd0055c07e6595ad33f6f955d05a957601d5"}, "downloads": -1, "filename": "rscase-1.0.5.tar.gz", "has_sig": false, "md5_digest": "6ec40473bb3399cd0236e4bd9c02b6ba", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 5802, "upload_time": "2020-02-07T09:37:03", "upload_time_iso_8601": "2020-02-07T09:37:03.635589Z", "url": "https://files.pythonhosted.org/packages/23/3d/b747c7a7fa28444e1170fbce8955c0eb7449c3c0e88fd048d5ef4fe24b43/rscase-1.0.5.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "6f9bcb83e277f6b73f37dcab482cdf1c", "sha256": "b81492e4b6e07067a590cfd3d7ec19ce9f268271149d1753d1c191d7649db78e"}, "downloads": -1, "filename": "rscase-1.1.0-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "6f9bcb83e277f6b73f37dcab482cdf1c", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 115740, "upload_time": "2020-02-11T22:19:57", "upload_time_iso_8601": "2020-02-11T22:19:57.282125Z", "url": "https://files.pythonhosted.org/packages/d8/0d/4d01d241beae32845f99c16e506a608704f09a0022a6ba88aba78e746945/rscase-1.1.0-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3030dbd46002df5ab645c19cff30b8b", "sha256": "7982e66dee9623e53805fc282f5d9d3b622b67837524d8e4e7d8ceb97a115950"}, "downloads": -1, "filename": "rscase-1.1.0.tar.gz", "has_sig": false, "md5_digest": "d3030dbd46002df5ab645c19cff30b8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8602, "upload_time": "2020-02-11T22:19:59", "upload_time_iso_8601": "2020-02-11T22:19:59.433555Z", "url": "https://files.pythonhosted.org/packages/d4/cc/256454f834a7601592b62f8ce731ebf8c621115209407ed0bfb8f318dd58/rscase-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "29c27d915c426134a90cc3d2fbf3ebfa", "sha256": "975ef8a8386107626433455b677a12750015838e797dc559939108363e4e7fb3"}, "downloads": -1, "filename": "rscase-1.1.1-cp37-cp37m-manylinux1_i686.whl", "has_sig": false, "md5_digest": "29c27d915c426134a90cc3d2fbf3ebfa", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 791959, "upload_time": "2020-02-18T22:21:42", "upload_time_iso_8601": "2020-02-18T22:21:42.849892Z", "url": "https://files.pythonhosted.org/packages/0f/ab/bdeac3d82a79727acae20beba1f241dcdbc8bf69114688d8f82b1e371797/rscase-1.1.1-cp37-cp37m-manylinux1_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7c2bdec32e5fccbae436280761eea19", "sha256": "bd3a5a78bdcd9f41df95f40bbdd552fd4004416e27a10ad865106d400c384e5c"}, "downloads": -1, "filename": "rscase-1.1.1-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "a7c2bdec32e5fccbae436280761eea19", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 716614, "upload_time": "2020-02-18T22:21:44", "upload_time_iso_8601": "2020-02-18T22:21:44.465656Z", "url": "https://files.pythonhosted.org/packages/f3/6f/0b1f6c50c2d8f969351406da0ab78b78743ab47e193148f5d02fbeaf1edc/rscase-1.1.1-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1041bfc2b2e567648d29bf9c78fafb6", "sha256": "ce6e8e0dddfd1ac2ef56bb20fb3f26e59e945428819f0115348472999a922c5a"}, "downloads": -1, "filename": "rscase-1.1.1-cp37-cp37m-manylinux2010_i686.whl", "has_sig": false, "md5_digest": "c1041bfc2b2e567648d29bf9c78fafb6", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 791962, "upload_time": "2020-02-18T22:21:45", "upload_time_iso_8601": "2020-02-18T22:21:45.932673Z", "url": "https://files.pythonhosted.org/packages/88/ed/ad9730001d4ba77a76b7a083cc93b74035ec9e49b23bc4f05898f66b39e8/rscase-1.1.1-cp37-cp37m-manylinux2010_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7c467d34489b7b30fc1d89492ec2bae", "sha256": "93ea03597a1144a85022bf835fddcca9962a74b7517c326ca297b87b01b46b65"}, "downloads": -1, "filename": "rscase-1.1.1-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "f7c467d34489b7b30fc1d89492ec2bae", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 716616, "upload_time": "2020-02-18T22:21:47", "upload_time_iso_8601": "2020-02-18T22:21:47.426885Z", "url": "https://files.pythonhosted.org/packages/95/35/bcda6c0e53736b0f75b6e50297260bd1552064f363e79a4ed694987d2168/rscase-1.1.1-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f768a9b9a798b524fe69f41360180698", "sha256": "6c52f9cf4e7a29d8568c8d53f889f1a0bfdff59aefc511ba039ad5e05f512873"}, "downloads": -1, "filename": "rscase-1.1.1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "f768a9b9a798b524fe69f41360180698", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 115572, "upload_time": "2020-02-18T22:23:23", "upload_time_iso_8601": "2020-02-18T22:23:23.445924Z", "url": "https://files.pythonhosted.org/packages/47/2d/cb2ee293b34f62f8ae7bdcfb2a089d898851bb1e4ba9053171fbd4c5cbcd/rscase-1.1.1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bd7d1e6651a48d0a4ce9aaba66e7a78", "sha256": "72b365936d90ec4ed11267bc3c1e7a79b0be4b48981a6711d257aef2c889d91d"}, "downloads": -1, "filename": "rscase-1.1.1-cp38-cp38-manylinux1_i686.whl", "has_sig": false, "md5_digest": "9bd7d1e6651a48d0a4ce9aaba66e7a78", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 791942, "upload_time": "2020-02-18T22:22:23", "upload_time_iso_8601": "2020-02-18T22:22:23.579448Z", "url": "https://files.pythonhosted.org/packages/3c/f0/db36f59b38a6858018d22749eac8c351aa99fb7c42993a04be377c254d60/rscase-1.1.1-cp38-cp38-manylinux1_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8608c118f5df42e84821d08df05d2d6", "sha256": "2eb21dddcb0a8df88e5477b85c9e84a1ebd5d4c901afbe78d1e929ab8d0dc647"}, "downloads": -1, "filename": "rscase-1.1.1-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e8608c118f5df42e84821d08df05d2d6", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 716658, "upload_time": "2020-02-18T22:22:25", "upload_time_iso_8601": "2020-02-18T22:22:25.234904Z", "url": "https://files.pythonhosted.org/packages/e3/ed/8aa11ab698f4fdba2b516305fb6126c7e30f2463da27d6512e155b868e2f/rscase-1.1.1-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "829e2ca8e47d31e6040a653663900d9f", "sha256": "6c654e21f302233acbe9e56641fe9c3cd52415ae103616f78bdbbbc309ea3fa6"}, "downloads": -1, "filename": "rscase-1.1.1-cp38-cp38-manylinux2010_i686.whl", "has_sig": false, "md5_digest": "829e2ca8e47d31e6040a653663900d9f", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 791946, "upload_time": "2020-02-18T22:22:26", "upload_time_iso_8601": "2020-02-18T22:22:26.886402Z", "url": "https://files.pythonhosted.org/packages/61/08/792457f7d291b3b7fc676c8e91724596d3fd31c8a9ea61765da4501a5e2b/rscase-1.1.1-cp38-cp38-manylinux2010_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "121e6366b7858c60c50667a4745cd544", "sha256": "f99d904afe40b57c8f260db8e64826ae49582c2396dbd3373b5243127262cdf7"}, "downloads": -1, "filename": "rscase-1.1.1-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "121e6366b7858c60c50667a4745cd544", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 716659, "upload_time": "2020-02-18T22:22:28", "upload_time_iso_8601": "2020-02-18T22:22:28.505831Z", "url": "https://files.pythonhosted.org/packages/9f/14/c3e95ac9d3c917389b4c60d30d14239d622d21b2bc92aa03cc5be79eaa38/rscase-1.1.1-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3aa25dcf2695736e6fe41fa1d3262cc2", "sha256": "0093eaf411dc95dc485f0f083450ed481cf0e09ea66f09d133f9a674d7128b55"}, "downloads": -1, "filename": "rscase-1.1.1-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "3aa25dcf2695736e6fe41fa1d3262cc2", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 115567, "upload_time": "2020-02-18T22:22:41", "upload_time_iso_8601": "2020-02-18T22:22:41.005598Z", "url": "https://files.pythonhosted.org/packages/f7/c9/5182f80f06d7d452bc9fcc6ab2d0815ded0e7fe8fcabf85521d691039773/rscase-1.1.1-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60fc6fc586f6d35883de24e8e7862c34", "sha256": "ff729b1c83fd6c3b2062004a60f50accb635337b55998debc5f2841efec0f17c"}, "downloads": -1, "filename": "rscase-1.1.1.tar.gz", "has_sig": false, "md5_digest": "60fc6fc586f6d35883de24e8e7862c34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7316, "upload_time": "2020-02-18T22:21:49", "upload_time_iso_8601": "2020-02-18T22:21:49.521905Z", "url": "https://files.pythonhosted.org/packages/58/92/3cf1c0947d20400bef9090c74287c66053b75b05f3e3247f3542be3521bb/rscase-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "29c27d915c426134a90cc3d2fbf3ebfa", "sha256": "975ef8a8386107626433455b677a12750015838e797dc559939108363e4e7fb3"}, "downloads": -1, "filename": "rscase-1.1.1-cp37-cp37m-manylinux1_i686.whl", "has_sig": false, "md5_digest": "29c27d915c426134a90cc3d2fbf3ebfa", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 791959, "upload_time": "2020-02-18T22:21:42", "upload_time_iso_8601": "2020-02-18T22:21:42.849892Z", "url": "https://files.pythonhosted.org/packages/0f/ab/bdeac3d82a79727acae20beba1f241dcdbc8bf69114688d8f82b1e371797/rscase-1.1.1-cp37-cp37m-manylinux1_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7c2bdec32e5fccbae436280761eea19", "sha256": "bd3a5a78bdcd9f41df95f40bbdd552fd4004416e27a10ad865106d400c384e5c"}, "downloads": -1, "filename": "rscase-1.1.1-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "a7c2bdec32e5fccbae436280761eea19", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 716614, "upload_time": "2020-02-18T22:21:44", "upload_time_iso_8601": "2020-02-18T22:21:44.465656Z", "url": "https://files.pythonhosted.org/packages/f3/6f/0b1f6c50c2d8f969351406da0ab78b78743ab47e193148f5d02fbeaf1edc/rscase-1.1.1-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1041bfc2b2e567648d29bf9c78fafb6", "sha256": "ce6e8e0dddfd1ac2ef56bb20fb3f26e59e945428819f0115348472999a922c5a"}, "downloads": -1, "filename": "rscase-1.1.1-cp37-cp37m-manylinux2010_i686.whl", "has_sig": false, "md5_digest": "c1041bfc2b2e567648d29bf9c78fafb6", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 791962, "upload_time": "2020-02-18T22:21:45", "upload_time_iso_8601": "2020-02-18T22:21:45.932673Z", "url": "https://files.pythonhosted.org/packages/88/ed/ad9730001d4ba77a76b7a083cc93b74035ec9e49b23bc4f05898f66b39e8/rscase-1.1.1-cp37-cp37m-manylinux2010_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7c467d34489b7b30fc1d89492ec2bae", "sha256": "93ea03597a1144a85022bf835fddcca9962a74b7517c326ca297b87b01b46b65"}, "downloads": -1, "filename": "rscase-1.1.1-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "f7c467d34489b7b30fc1d89492ec2bae", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 716616, "upload_time": "2020-02-18T22:21:47", "upload_time_iso_8601": "2020-02-18T22:21:47.426885Z", "url": "https://files.pythonhosted.org/packages/95/35/bcda6c0e53736b0f75b6e50297260bd1552064f363e79a4ed694987d2168/rscase-1.1.1-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f768a9b9a798b524fe69f41360180698", "sha256": "6c52f9cf4e7a29d8568c8d53f889f1a0bfdff59aefc511ba039ad5e05f512873"}, "downloads": -1, "filename": "rscase-1.1.1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "f768a9b9a798b524fe69f41360180698", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 115572, "upload_time": "2020-02-18T22:23:23", "upload_time_iso_8601": "2020-02-18T22:23:23.445924Z", "url": "https://files.pythonhosted.org/packages/47/2d/cb2ee293b34f62f8ae7bdcfb2a089d898851bb1e4ba9053171fbd4c5cbcd/rscase-1.1.1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bd7d1e6651a48d0a4ce9aaba66e7a78", "sha256": "72b365936d90ec4ed11267bc3c1e7a79b0be4b48981a6711d257aef2c889d91d"}, "downloads": -1, "filename": "rscase-1.1.1-cp38-cp38-manylinux1_i686.whl", "has_sig": false, "md5_digest": "9bd7d1e6651a48d0a4ce9aaba66e7a78", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 791942, "upload_time": "2020-02-18T22:22:23", "upload_time_iso_8601": "2020-02-18T22:22:23.579448Z", "url": "https://files.pythonhosted.org/packages/3c/f0/db36f59b38a6858018d22749eac8c351aa99fb7c42993a04be377c254d60/rscase-1.1.1-cp38-cp38-manylinux1_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8608c118f5df42e84821d08df05d2d6", "sha256": "2eb21dddcb0a8df88e5477b85c9e84a1ebd5d4c901afbe78d1e929ab8d0dc647"}, "downloads": -1, "filename": "rscase-1.1.1-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e8608c118f5df42e84821d08df05d2d6", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 716658, "upload_time": "2020-02-18T22:22:25", "upload_time_iso_8601": "2020-02-18T22:22:25.234904Z", "url": "https://files.pythonhosted.org/packages/e3/ed/8aa11ab698f4fdba2b516305fb6126c7e30f2463da27d6512e155b868e2f/rscase-1.1.1-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "829e2ca8e47d31e6040a653663900d9f", "sha256": "6c654e21f302233acbe9e56641fe9c3cd52415ae103616f78bdbbbc309ea3fa6"}, "downloads": -1, "filename": "rscase-1.1.1-cp38-cp38-manylinux2010_i686.whl", "has_sig": false, "md5_digest": "829e2ca8e47d31e6040a653663900d9f", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 791946, "upload_time": "2020-02-18T22:22:26", "upload_time_iso_8601": "2020-02-18T22:22:26.886402Z", "url": "https://files.pythonhosted.org/packages/61/08/792457f7d291b3b7fc676c8e91724596d3fd31c8a9ea61765da4501a5e2b/rscase-1.1.1-cp38-cp38-manylinux2010_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "121e6366b7858c60c50667a4745cd544", "sha256": "f99d904afe40b57c8f260db8e64826ae49582c2396dbd3373b5243127262cdf7"}, "downloads": -1, "filename": "rscase-1.1.1-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "121e6366b7858c60c50667a4745cd544", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 716659, "upload_time": "2020-02-18T22:22:28", "upload_time_iso_8601": "2020-02-18T22:22:28.505831Z", "url": "https://files.pythonhosted.org/packages/9f/14/c3e95ac9d3c917389b4c60d30d14239d622d21b2bc92aa03cc5be79eaa38/rscase-1.1.1-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3aa25dcf2695736e6fe41fa1d3262cc2", "sha256": "0093eaf411dc95dc485f0f083450ed481cf0e09ea66f09d133f9a674d7128b55"}, "downloads": -1, "filename": "rscase-1.1.1-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "3aa25dcf2695736e6fe41fa1d3262cc2", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 115567, "upload_time": "2020-02-18T22:22:41", "upload_time_iso_8601": "2020-02-18T22:22:41.005598Z", "url": "https://files.pythonhosted.org/packages/f7/c9/5182f80f06d7d452bc9fcc6ab2d0815ded0e7fe8fcabf85521d691039773/rscase-1.1.1-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60fc6fc586f6d35883de24e8e7862c34", "sha256": "ff729b1c83fd6c3b2062004a60f50accb635337b55998debc5f2841efec0f17c"}, "downloads": -1, "filename": "rscase-1.1.1.tar.gz", "has_sig": false, "md5_digest": "60fc6fc586f6d35883de24e8e7862c34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7316, "upload_time": "2020-02-18T22:21:49", "upload_time_iso_8601": "2020-02-18T22:21:49.521905Z", "url": "https://files.pythonhosted.org/packages/58/92/3cf1c0947d20400bef9090c74287c66053b75b05f3e3247f3542be3521bb/rscase-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:42 2020"}