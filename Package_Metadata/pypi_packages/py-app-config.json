{"info": {"author": "Maples7", "author_email": "maples7@163.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=========\npy-config\n=========\n\n.. image:: https://travis-ci.org/Maples7/py-config.svg?branch=master\n    :target: https://travis-ci.org/Maples7/py-config\n\n.. image:: https://img.shields.io/pypi/v/py-app-config.svg\n    :target: https://pypi.python.org/pypi/py-app-config\n\nPython Application Configuration. Py-config organizes hierarchical configurations for your app deployments.\n\n\nUsage\n=====\n\nInstallation\n------------\n\n.. code:: shell\n\n    pip install py-app-config\n\n\nBest Practice\n-------------\n\nFirstly, you should have a ``config`` folder under the codebase of your application, like this:\n\n.. code:: shell\n\n    .\n    \u251c\u2500\u2500 config\n    \u2502   \u251c\u2500\u2500 __init__.py\n    \u2502   \u251c\u2500\u2500 default.json\n    \u2502   \u251c\u2500\u2500 development.json\n    \u2502   \u251c\u2500\u2500 production.json\n    \u2502   \u2514\u2500\u2500 test.json\n    .\n\n\nSecondly, set environment variable ``PY_ENV`` to one of the names of JOSN files in the ``config`` folder, and it defaults to be ``development``.\n\nIn your ``__init__.py`` under ``config`` folder, these codes can be used:\n\n.. code:: python\n\n    import os\n    from py_config import set_config_dir, get_config\n\n    config_dir = os.path.abspath(os.path.dirname(__file__))\n    set_config_dir(config_dir)\n    config = get_config()\n\nThen, you can use ``from config import config`` to import your app config in any other places in you codebase.\n\nThe final ``config`` would **merge** ``default.json`` and ``<PY_ENV>.json``. See `dict-recursive-update <https://github.com/Maples7/dict-recursive-update>`_ for the **recursive** update rules.\n\n\nAPIs\n----\n\n.. code:: python\n\n    # Set the config directory path\n    set_config_dir(\n        config_dir=None  # Directory path of `config` folder\n    )\n\n    # Get final config according to the `config_dir`. \n    # It should be executed every time after a new `config_dir` is set.\n    get_config()\n\n\nRelatives\n=========\n\n- `dict-recursive-update <https://github.com/Maples7/dict-recursive-update>`_\n- `node-config <https://github.com/lorenwest/node-config>`_\n\n\nLicense\n=======\n`MIT <./LICENSE.txt>`_\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Maples7/py-config", "keywords": "application configuration recursive update read config", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "py-app-config", "package_url": "https://pypi.org/project/py-app-config/", "platform": "", "project_url": "https://pypi.org/project/py-app-config/", "project_urls": {"Homepage": "https://github.com/Maples7/py-config"}, "release_url": "https://pypi.org/project/py-app-config/1.0.0/", "requires_dist": ["dict-recursive-update (==1.0.1)"], "requires_python": "", "summary": "Python Application Configuration.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/Maples7/py-config\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/Maples7/py-config.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/603ed08715575fbac2b09efc259830b3064e8e8d/68747470733a2f2f7472617669732d63692e6f72672f4d61706c6573372f70792d636f6e6669672e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/py-app-config\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/py-app-config.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a79b4c487412162480dec3e7d0b535ee3c9096d0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70792d6170702d636f6e6669672e737667\"></a>\n<p>Python Application Configuration. Py-config organizes hierarchical configurations for your app deployments.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>pip install py-app-config\n</pre>\n</div>\n<div id=\"best-practice\">\n<h3>Best Practice</h3>\n<p>Firstly, you should have a <tt>config</tt> folder under the codebase of your application, like this:</p>\n<pre>.\n\u251c\u2500\u2500 config\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 default.json\n\u2502   \u251c\u2500\u2500 development.json\n\u2502   \u251c\u2500\u2500 production.json\n\u2502   \u2514\u2500\u2500 test.json\n.\n</pre>\n<p>Secondly, set environment variable <tt>PY_ENV</tt> to one of the names of JOSN files in the <tt>config</tt> folder, and it defaults to be <tt>development</tt>.</p>\n<p>In your <tt>__init__.py</tt> under <tt>config</tt> folder, these codes can be used:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">py_config</span> <span class=\"kn\">import</span> <span class=\"n\">set_config_dir</span><span class=\"p\">,</span> <span class=\"n\">get_config</span>\n\n<span class=\"n\">config_dir</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">))</span>\n<span class=\"n\">set_config_dir</span><span class=\"p\">(</span><span class=\"n\">config_dir</span><span class=\"p\">)</span>\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">get_config</span><span class=\"p\">()</span>\n</pre>\n<p>Then, you can use <tt>from config import config</tt> to import your app config in any other places in you codebase.</p>\n<p>The final <tt>config</tt> would <strong>merge</strong> <tt>default.json</tt> and <tt><span class=\"pre\">&lt;PY_ENV&gt;.json</span></tt>. See <a href=\"https://github.com/Maples7/dict-recursive-update\" rel=\"nofollow\">dict-recursive-update</a> for the <strong>recursive</strong> update rules.</p>\n</div>\n<div id=\"apis\">\n<h3>APIs</h3>\n<pre><span class=\"c1\"># Set the config directory path</span>\n<span class=\"n\">set_config_dir</span><span class=\"p\">(</span>\n    <span class=\"n\">config_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span>  <span class=\"c1\"># Directory path of `config` folder</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Get final config according to the `config_dir`.</span>\n<span class=\"c1\"># It should be executed every time after a new `config_dir` is set.</span>\n<span class=\"n\">get_config</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"relatives\">\n<h2>Relatives</h2>\n<ul>\n<li><a href=\"https://github.com/Maples7/dict-recursive-update\" rel=\"nofollow\">dict-recursive-update</a></li>\n<li><a href=\"https://github.com/lorenwest/node-config\" rel=\"nofollow\">node-config</a></li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><a href=\"./LICENSE.txt\" rel=\"nofollow\">MIT</a></p>\n</div>\n\n          </div>"}, "last_serial": 3927632, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "e663f2b687d049499e75bbaee2fd7312", "sha256": "21678da979ee5e42703f175b53df73b4f807a1923dfb2f1f692b653b79f2bd25"}, "downloads": -1, "filename": "py_app_config-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e663f2b687d049499e75bbaee2fd7312", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4852, "upload_time": "2018-06-04T10:56:23", "upload_time_iso_8601": "2018-06-04T10:56:23.717796Z", "url": "https://files.pythonhosted.org/packages/1a/96/12d273ab1e62aae7ccc54a6d329188ced6dffac44bd9ca4dec1930219958/py_app_config-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95ba3bd7bd3cf8057c1d84d8a61cc4b7", "sha256": "caf679cc3338a3c767925dcf15168b73e8a04f2407817904f2b4dd952f0a2df0"}, "downloads": -1, "filename": "py-app-config-1.0.0.tar.gz", "has_sig": false, "md5_digest": "95ba3bd7bd3cf8057c1d84d8a61cc4b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2735, "upload_time": "2018-06-04T10:56:24", "upload_time_iso_8601": "2018-06-04T10:56:24.762848Z", "url": "https://files.pythonhosted.org/packages/5a/14/0bee1d4aec62434064347fefa93e1c50cd98ec977e321aa71201f02a6643/py-app-config-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e663f2b687d049499e75bbaee2fd7312", "sha256": "21678da979ee5e42703f175b53df73b4f807a1923dfb2f1f692b653b79f2bd25"}, "downloads": -1, "filename": "py_app_config-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e663f2b687d049499e75bbaee2fd7312", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4852, "upload_time": "2018-06-04T10:56:23", "upload_time_iso_8601": "2018-06-04T10:56:23.717796Z", "url": "https://files.pythonhosted.org/packages/1a/96/12d273ab1e62aae7ccc54a6d329188ced6dffac44bd9ca4dec1930219958/py_app_config-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95ba3bd7bd3cf8057c1d84d8a61cc4b7", "sha256": "caf679cc3338a3c767925dcf15168b73e8a04f2407817904f2b4dd952f0a2df0"}, "downloads": -1, "filename": "py-app-config-1.0.0.tar.gz", "has_sig": false, "md5_digest": "95ba3bd7bd3cf8057c1d84d8a61cc4b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2735, "upload_time": "2018-06-04T10:56:24", "upload_time_iso_8601": "2018-06-04T10:56:24.762848Z", "url": "https://files.pythonhosted.org/packages/5a/14/0bee1d4aec62434064347fefa93e1c50cd98ec977e321aa71201f02a6643/py-app-config-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:26 2020"}