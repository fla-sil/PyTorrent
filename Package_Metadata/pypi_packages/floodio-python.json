{"info": {"author": "Devon Meunier", "author_email": "devon@eventmobi.com", "bugtrack_url": null, "classifiers": [], "description": "==============\r\nfloodio-python\r\n==============\r\n\r\nA Flood.io client for Python 2 and 3.\r\n\r\nInstallation\r\n============\r\n\r\n.. code:: sh\r\n\r\n    $ pip install floodio-python\r\n\r\nUsage\r\n=====\r\n\r\nInstantiate a client with your Flood API key:\r\n\r\n.. code:: python\r\n\r\n    from floodio.client import Client\r\n    \r\n    client = Client('YOURAPIKEY')\r\n\r\nFlood API\r\n---------\r\n\r\n:code:`client.floods` is iterable:\r\n\r\n.. code:: python\r\n\r\n    for flood in client.floods:\r\n        print(flood)\r\n\r\nor you can get a flood by its uuid:\r\n\r\n.. code:: python\r\n\r\n    flood = client.floods['SOMEUUID']\r\n    \r\nA flood has :code:`stop`, :code:`repeat`, and :code:`refresh` methods.\r\n\r\n.. code:: python\r\n\r\n    flood.stop()\r\n    # keyword arguments are optional.\r\n    flood.repeat(grid='SOMEGRIDUUID', region='AWSREGION')\r\n    flood.refresh()  # pulls the latest state of this flood\r\n\r\nAccessing :code:`flood.status` performs an implicit refresh.\r\n\r\n.. code:: python\r\n\r\n    flood.status\r\n    >>> 'queued'\r\n    flood.status\r\n    >>> 'running'\r\n    flood.status\r\n    >>> 'finished'\r\n    \r\nCondensed results are available with :code:`flood.report`.\r\n\r\n.. code:: python\r\n\r\n    flood.report.summary\r\n    flood.report.mean_response_time\r\n    flood.report.mean_concurrency\r\n    flood.report.mean_throughput\r\n    flood.report.mean_error_rate\r\n    flood.report.mean_apdex\r\n    \r\nand the detailed results are available with :code:`flood.results`, directly loading the JSON-response.\r\n\r\nAny times returned by `Flood API V2`_ are parsed into native Python datetime objects.\r\n\r\neg. :code:`flood.started` and :code:`flood.ended`.\r\n\r\nYou can create a new flood with :code:`client.floods.create`. Test files are a list of two-tuples\r\nwith a filename, and either a file-like object or a string.\r\n\r\n.. code:: python\r\n\r\n    flood = client.floods.create(\r\n        'jmeter-2.13',\r\n        [('test.jmx', your_test_data)],\r\n        name='client-test',\r\n        duration=300,\r\n        threads=200,\r\n        rampup=300,\r\n        grids='SOMEGRIDUUID',\r\n    )\r\n\r\nGrid API\r\n--------\r\n\r\n.. _Flood API V2: https://help.flood.io/docs/flood-api\r\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/EventMobi/floodio-python", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "floodio-python", "package_url": "https://pypi.org/project/floodio-python/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/floodio-python/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/EventMobi/floodio-python"}, "release_url": "https://pypi.org/project/floodio-python/0.3/", "requires_dist": null, "requires_python": null, "summary": "Flood.io client for Python 2 and 3", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Flood.io client for Python 2 and 3.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install floodio-python\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Instantiate a client with your Flood API key:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">floodio.client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'YOURAPIKEY'</span><span class=\"p\">)</span>\n</pre>\n<div id=\"flood-api\">\n<h3>Flood API</h3>\n<p><code>client.floods</code> is iterable:</p>\n<pre><span class=\"k\">for</span> <span class=\"n\">flood</span> <span class=\"ow\">in</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">floods</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">flood</span><span class=\"p\">)</span>\n</pre>\n<p>or you can get a flood by its uuid:</p>\n<pre><span class=\"n\">flood</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">floods</span><span class=\"p\">[</span><span class=\"s1\">'SOMEUUID'</span><span class=\"p\">]</span>\n</pre>\n<p>A flood has <code>stop</code>, <code>repeat</code>, and <code>refresh</code> methods.</p>\n<pre><span class=\"n\">flood</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n<span class=\"c1\"># keyword arguments are optional.</span>\n<span class=\"n\">flood</span><span class=\"o\">.</span><span class=\"n\">repeat</span><span class=\"p\">(</span><span class=\"n\">grid</span><span class=\"o\">=</span><span class=\"s1\">'SOMEGRIDUUID'</span><span class=\"p\">,</span> <span class=\"n\">region</span><span class=\"o\">=</span><span class=\"s1\">'AWSREGION'</span><span class=\"p\">)</span>\n<span class=\"n\">flood</span><span class=\"o\">.</span><span class=\"n\">refresh</span><span class=\"p\">()</span>  <span class=\"c1\"># pulls the latest state of this flood</span>\n</pre>\n<p>Accessing <code>flood.status</code> performs an implicit refresh.</p>\n<pre><span class=\"n\">flood</span><span class=\"o\">.</span><span class=\"n\">status</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'queued'</span>\n<span class=\"n\">flood</span><span class=\"o\">.</span><span class=\"n\">status</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'running'</span>\n<span class=\"n\">flood</span><span class=\"o\">.</span><span class=\"n\">status</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'finished'</span>\n</pre>\n<p>Condensed results are available with <code>flood.report</code>.</p>\n<pre><span class=\"n\">flood</span><span class=\"o\">.</span><span class=\"n\">report</span><span class=\"o\">.</span><span class=\"n\">summary</span>\n<span class=\"n\">flood</span><span class=\"o\">.</span><span class=\"n\">report</span><span class=\"o\">.</span><span class=\"n\">mean_response_time</span>\n<span class=\"n\">flood</span><span class=\"o\">.</span><span class=\"n\">report</span><span class=\"o\">.</span><span class=\"n\">mean_concurrency</span>\n<span class=\"n\">flood</span><span class=\"o\">.</span><span class=\"n\">report</span><span class=\"o\">.</span><span class=\"n\">mean_throughput</span>\n<span class=\"n\">flood</span><span class=\"o\">.</span><span class=\"n\">report</span><span class=\"o\">.</span><span class=\"n\">mean_error_rate</span>\n<span class=\"n\">flood</span><span class=\"o\">.</span><span class=\"n\">report</span><span class=\"o\">.</span><span class=\"n\">mean_apdex</span>\n</pre>\n<p>and the detailed results are available with <code>flood.results</code>, directly loading the JSON-response.</p>\n<p>Any times returned by <a href=\"https://help.flood.io/docs/flood-api\" rel=\"nofollow\">Flood API V2</a> are parsed into native Python datetime objects.</p>\n<p>eg. <code>flood.started</code> and <code>flood.ended</code>.</p>\n<p>You can create a new flood with <code>client.floods.create</code>. Test files are a list of two-tuples\nwith a filename, and either a file-like object or a string.</p>\n<pre><span class=\"n\">flood</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">floods</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n    <span class=\"s1\">'jmeter-2.13'</span><span class=\"p\">,</span>\n    <span class=\"p\">[(</span><span class=\"s1\">'test.jmx'</span><span class=\"p\">,</span> <span class=\"n\">your_test_data</span><span class=\"p\">)],</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'client-test'</span><span class=\"p\">,</span>\n    <span class=\"n\">duration</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span>\n    <span class=\"n\">threads</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span>\n    <span class=\"n\">rampup</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span>\n    <span class=\"n\">grids</span><span class=\"o\">=</span><span class=\"s1\">'SOMEGRIDUUID'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"grid-api\">\n<h3>Grid API</h3>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1726820, "releases": {"0.0.0": [], "0.1": [], "0.3": [{"comment_text": "", "digests": {"md5": "31850872923b7dca2d23baa239072f84", "sha256": "41ddb80f21486a8b7f4f6a9e447e90227713cb2f4de56eac1e6b4cf47d2d7146"}, "downloads": -1, "filename": "floodio-python-0.3.tar.gz", "has_sig": false, "md5_digest": "31850872923b7dca2d23baa239072f84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3902, "upload_time": "2015-09-17T15:33:54", "upload_time_iso_8601": "2015-09-17T15:33:54.091655Z", "url": "https://files.pythonhosted.org/packages/f6/3c/bd41d4b8aa3c6e83059c74d31e7dbcb03bcb3008b565f54a4e2013b46090/floodio-python-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "31850872923b7dca2d23baa239072f84", "sha256": "41ddb80f21486a8b7f4f6a9e447e90227713cb2f4de56eac1e6b4cf47d2d7146"}, "downloads": -1, "filename": "floodio-python-0.3.tar.gz", "has_sig": false, "md5_digest": "31850872923b7dca2d23baa239072f84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3902, "upload_time": "2015-09-17T15:33:54", "upload_time_iso_8601": "2015-09-17T15:33:54.091655Z", "url": "https://files.pythonhosted.org/packages/f6/3c/bd41d4b8aa3c6e83059c74d31e7dbcb03bcb3008b565f54a4e2013b46090/floodio-python-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:01:46 2020"}