{"info": {"author": "Andrey Kolotev", "author_email": "kolotev@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "django-enumfield-named-choices\n==============================\n\nThi package is based on `django-enumfield`.\nIt was extended to make django form filters happy\nat the time of validating input for named attributes\nrather than for enumerated values like 1,2,...\n\n.. image:: https://img.shields.io/pypi/v/django-enumfield-named-choices.svg\n    :target: https://pypi.python.org/pypi/django-enumfield-named-choices\n\n.. image:: https://img.shields.io/pypi/l/django-enumfield-named-choices.svg\n    :target: https://pypi.python.org/pypi/django-enumfield-named-choices\n\n.. image:: https://img.shields.io/pypi/pyversions/django-enumfield-named-choices.svg\n    :target: https://pypi.python.org/pypi/django-enumfield-named-choices\n\n.. image:: https://img.shields.io/pypi/wheel/django-enumfield-named-choices.svg\n    :target: https://pypi.python.org/pypi/django-enumfield-named-choices\n\n\nInstallation\n------------\n\nInstall ``django-enumfield-named-choices`` in your Python environment:\n\n.. code:: sh\n\n    $ pip install django-enumfield-named-choices\n\n\nUsage\n-----\n\nCreate an Enum-class and pass it as first argument to the Django model EnumField.\n\n.. code:: python\n\n    from django.db import models\n    from django_enumfield_named_choices import enum\n\n    class BeerStyle(enum.Enum):\n        LAGER = 0\n        STOUT = 1\n        WEISSBIER = 2\n\n    class Beer(models.Model):\n        style = enum.EnumField(BeerStyle, default=BeerStyle.LAGER)\n\n.. code:: python\n\n    Beer.objects.create(style=BeerStyle.STOUT)\n    Beer.objects.filter(style=BeerStyle.STOUT)\n\nYou can use your own labels for Enum items\n\n.. code:: python\n\n    class Animals(enum.Enum):\n        CAT = 1\n        DOG = 2\n\n        labels = {\n            CAT: 'Cat',\n            DOG: 'Dog'\n        }\n\nThe Enum-class provides the possibility to use transition validation.\n\n.. code:: python\n\n    from django.db import models\n    from django_enumfield_named_choices import enum\n\n    class PersonStatus(enum.Enum):\n        ALIVE = 1\n        DEAD = 2\n        REANIMATED = 3\n\n        _transitions = {\n            DEAD: (ALIVE,),\n            REANIMATED: (DEAD,)\n        }\n\n    class Person(models.Model):\n        status = enum.EnumField(PersonStatus)\n\nThese transitions state that a PersonStatus can only go to DEAD from ALIVE and to REANIMATED from DEAD.\n\n.. code:: python\n\n    person = Person.objects.create(status=PersonStatus.ALIVE)\n    try:\n        person.status = PersonStatus.REANIMATED\n        person.save()\n    except InvalidStatusOperationError:\n        print(\"Person status can not go from ALIVE to REANIMATED\")\n\nThe Enum-class can also be used without the EnumField. This is very useful in Django form ChoiceFields.\n\n.. code:: python\n\n    from django.forms import Form\n    from django_enumfield_named_choices import enum\n\n    class GenderEnum(enum.Enum):\n        MALE = 1\n        FEMALE = 2\n\n        labels = {\n            MALE: 'Male',\n            FEMALE: 'Female',\n        }\n\n    class PersonForm(forms.Form)\n        gender = forms.TypedChoiceField(choices=GenderEnum.choices(), coerce=int)\n\nRendering PersonForm in a template will generate a select-box with \"Male\" and \"Female\" as option labels for the gender field.\n\nIf you want to use this package along with `django restful framework` and `django-filter`,\n`django-url-filter`, and `djangorestframework-filters` packages to make filtering on the named\nvalues of Enum type instead of their numerical counterparts you can use extra attribute on your\nenum type `interface` with value type `str`, by default it is set to `int` type as following.\n\n.. code:: python\n\n    # in enums.py\n\n    from django_enumfield_named_choices import enum\n\n    class GenderEnum(enum.Enum):\n        MALE = 1\n        FEMALE = 2\n\n        labels = {\n            MALE: 'Male',\n            FEMALE: 'Female',\n        }\n\n        interface = str\n\n    # in models.py\n\n    from django_enumfield_named_choices.db.fields import EnumField\n\n    class Person(models.Model):\n    name = ...\n    gender = EnumField(GenderEnum)\n\n    # and then when you expose you model through API endpoint\n    # you can filter it with following URL request\n    # /person/?gender=male\n    # instead of\n    # /person/?gender=1\n    # thought the actual values of enum in the database are still integers.\n\n\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/kolotev/django-enumfield-named-choices/tarball/1.0a2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/kolotev/django-enumfield-named-choices", "keywords": "django,enum,field,status,state,choices,form,model", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-enumfield-named-choices", "package_url": "https://pypi.org/project/django-enumfield-named-choices/", "platform": "any", "project_url": "https://pypi.org/project/django-enumfield-named-choices/", "project_urls": {"Download": "https://github.com/kolotev/django-enumfield-named-choices/tarball/1.0a2", "Homepage": "http://github.com/kolotev/django-enumfield-named-choices"}, "release_url": "https://pypi.org/project/django-enumfield-named-choices/1.0a2/", "requires_dist": null, "requires_python": "", "summary": "Custom Django field for using enumerations of named constants", "version": "1.0a2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Thi package is based on <cite>django-enumfield</cite>.\nIt was extended to make django form filters happy\nat the time of validating input for named attributes\nrather than for enumerated values like 1,2,\u2026</p>\n<a href=\"https://pypi.python.org/pypi/django-enumfield-named-choices\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/django-enumfield-named-choices.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58cf851255cfa9e19e987458cdada38e6e944e7c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d656e756d6669656c642d6e616d65642d63686f696365732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-enumfield-named-choices\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/django-enumfield-named-choices.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/378e08be7f1418112553105f53abae6189a0470a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f646a616e676f2d656e756d6669656c642d6e616d65642d63686f696365732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-enumfield-named-choices\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/django-enumfield-named-choices.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/99c09b99df8ed3600ec4e36dd4995cc0fbc84889/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f646a616e676f2d656e756d6669656c642d6e616d65642d63686f696365732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-enumfield-named-choices\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/wheel/django-enumfield-named-choices.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f28a0f18b1f74a9d09d315a6741b9bb8e410d12c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f646a616e676f2d656e756d6669656c642d6e616d65642d63686f696365732e737667\"></a>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install <tt><span class=\"pre\">django-enumfield-named-choices</span></tt> in your Python environment:</p>\n<pre>$ pip install django-enumfield-named-choices\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Create an Enum-class and pass it as first argument to the Django model EnumField.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_enumfield_named_choices</span> <span class=\"kn\">import</span> <span class=\"n\">enum</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">BeerStyle</span><span class=\"p\">(</span><span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n    <span class=\"n\">LAGER</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">STOUT</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">WEISSBIER</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Beer</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">style</span> <span class=\"o\">=</span> <span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">EnumField</span><span class=\"p\">(</span><span class=\"n\">BeerStyle</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">BeerStyle</span><span class=\"o\">.</span><span class=\"n\">LAGER</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"n\">Beer</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">style</span><span class=\"o\">=</span><span class=\"n\">BeerStyle</span><span class=\"o\">.</span><span class=\"n\">STOUT</span><span class=\"p\">)</span>\n<span class=\"n\">Beer</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">style</span><span class=\"o\">=</span><span class=\"n\">BeerStyle</span><span class=\"o\">.</span><span class=\"n\">STOUT</span><span class=\"p\">)</span>\n</pre>\n<p>You can use your own labels for Enum items</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Animals</span><span class=\"p\">(</span><span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n    <span class=\"n\">CAT</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">DOG</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n    <span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"n\">CAT</span><span class=\"p\">:</span> <span class=\"s1\">'Cat'</span><span class=\"p\">,</span>\n        <span class=\"n\">DOG</span><span class=\"p\">:</span> <span class=\"s1\">'Dog'</span>\n    <span class=\"p\">}</span>\n</pre>\n<p>The Enum-class provides the possibility to use transition validation.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_enumfield_named_choices</span> <span class=\"kn\">import</span> <span class=\"n\">enum</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonStatus</span><span class=\"p\">(</span><span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n    <span class=\"n\">ALIVE</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">DEAD</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n    <span class=\"n\">REANIMATED</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n\n    <span class=\"n\">_transitions</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"n\">DEAD</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">ALIVE</span><span class=\"p\">,),</span>\n        <span class=\"n\">REANIMATED</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">DEAD</span><span class=\"p\">,)</span>\n    <span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">EnumField</span><span class=\"p\">(</span><span class=\"n\">PersonStatus</span><span class=\"p\">)</span>\n</pre>\n<p>These transitions state that a PersonStatus can only go to DEAD from ALIVE and to REANIMATED from DEAD.</p>\n<pre><span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"o\">=</span><span class=\"n\">PersonStatus</span><span class=\"o\">.</span><span class=\"n\">ALIVE</span><span class=\"p\">)</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">PersonStatus</span><span class=\"o\">.</span><span class=\"n\">REANIMATED</span>\n    <span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n<span class=\"k\">except</span> <span class=\"n\">InvalidStatusOperationError</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Person status can not go from ALIVE to REANIMATED\"</span><span class=\"p\">)</span>\n</pre>\n<p>The Enum-class can also be used without the EnumField. This is very useful in Django form ChoiceFields.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.forms</span> <span class=\"kn\">import</span> <span class=\"n\">Form</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_enumfield_named_choices</span> <span class=\"kn\">import</span> <span class=\"n\">enum</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">GenderEnum</span><span class=\"p\">(</span><span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n    <span class=\"n\">MALE</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">FEMALE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n    <span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"n\">MALE</span><span class=\"p\">:</span> <span class=\"s1\">'Male'</span><span class=\"p\">,</span>\n        <span class=\"n\">FEMALE</span><span class=\"p\">:</span> <span class=\"s1\">'Female'</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonForm</span><span class=\"p\">(</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">)</span>\n    <span class=\"n\">gender</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">TypedChoiceField</span><span class=\"p\">(</span><span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"n\">GenderEnum</span><span class=\"o\">.</span><span class=\"n\">choices</span><span class=\"p\">(),</span> <span class=\"n\">coerce</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n</pre>\n<p>Rendering PersonForm in a template will generate a select-box with \u201cMale\u201d and \u201cFemale\u201d as option labels for the gender field.</p>\n<p>If you want to use this package along with <cite>django restful framework</cite> and <cite>django-filter</cite>,\n<cite>django-url-filter</cite>, and <cite>djangorestframework-filters</cite> packages to make filtering on the named\nvalues of Enum type instead of their numerical counterparts you can use extra attribute on your\nenum type <cite>interface</cite> with value type <cite>str</cite>, by default it is set to <cite>int</cite> type as following.</p>\n<pre><span class=\"c1\"># in enums.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django_enumfield_named_choices</span> <span class=\"kn\">import</span> <span class=\"n\">enum</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">GenderEnum</span><span class=\"p\">(</span><span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n    <span class=\"n\">MALE</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">FEMALE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n    <span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"n\">MALE</span><span class=\"p\">:</span> <span class=\"s1\">'Male'</span><span class=\"p\">,</span>\n        <span class=\"n\">FEMALE</span><span class=\"p\">:</span> <span class=\"s1\">'Female'</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">interface</span> <span class=\"o\">=</span> <span class=\"nb\">str</span>\n\n<span class=\"c1\"># in models.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django_enumfield_named_choices.db.fields</span> <span class=\"kn\">import</span> <span class=\"n\">EnumField</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"o\">...</span>\n<span class=\"n\">gender</span> <span class=\"o\">=</span> <span class=\"n\">EnumField</span><span class=\"p\">(</span><span class=\"n\">GenderEnum</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># and then when you expose you model through API endpoint</span>\n<span class=\"c1\"># you can filter it with following URL request</span>\n<span class=\"c1\"># /person/?gender=male</span>\n<span class=\"c1\"># instead of</span>\n<span class=\"c1\"># /person/?gender=1</span>\n<span class=\"c1\"># thought the actual values of enum in the database are still integers.</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5716819, "releases": {"1.0a1": [{"comment_text": "", "digests": {"md5": "c9e461172ef674e32d2867d0516820ec", "sha256": "dc0dc76cf782406d824526a75663fce5114e211461765151839bc3a6dcb06c9f"}, "downloads": -1, "filename": "django_enumfield_named_choices-1.0a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c9e461172ef674e32d2867d0516820ec", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 37258, "upload_time": "2019-08-21T00:42:03", "upload_time_iso_8601": "2019-08-21T00:42:03.838696Z", "url": "https://files.pythonhosted.org/packages/c9/01/568855883f49882e40038c33246f65c7c071ba087a52358ad3fc6c4c0f0e/django_enumfield_named_choices-1.0a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2adcd160143e5aa2a0793d4aeb8e4a0", "sha256": "85fe7ff244130cb3225d43d95d6258bc328d4747cdb878f185b71ec8f7773576"}, "downloads": -1, "filename": "django-enumfield-named-choices-1.0a1.tar.gz", "has_sig": false, "md5_digest": "f2adcd160143e5aa2a0793d4aeb8e4a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26771, "upload_time": "2019-08-21T00:42:07", "upload_time_iso_8601": "2019-08-21T00:42:07.196436Z", "url": "https://files.pythonhosted.org/packages/52/f4/02625d4d6d37bd8ca40074310a07dfee31e2769f343b9a6205fc47a8443a/django-enumfield-named-choices-1.0a1.tar.gz", "yanked": false}], "1.0a2": [{"comment_text": "", "digests": {"md5": "ec9b55c14f7596ce0a9a77b553aa16ce", "sha256": "f9ee98e22d34111b48d123bc09ad3db34f7870e67dbead4afdb73265ccbfa259"}, "downloads": -1, "filename": "django_enumfield_named_choices-1.0a2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ec9b55c14f7596ce0a9a77b553aa16ce", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 37277, "upload_time": "2019-08-22T19:00:33", "upload_time_iso_8601": "2019-08-22T19:00:33.342766Z", "url": "https://files.pythonhosted.org/packages/a3/15/1e8a603515df4665fac730a576ccf9a3efd702a74f7dd197631eeec45fff/django_enumfield_named_choices-1.0a2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b349a817dafa244ca03a7e9166814529", "sha256": "5f64846c74b61e5a893db8fbc8f37851d8abd90e3d9b2c30ed470e564843efe4"}, "downloads": -1, "filename": "django-enumfield-named-choices-1.0a2.tar.gz", "has_sig": false, "md5_digest": "b349a817dafa244ca03a7e9166814529", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26785, "upload_time": "2019-08-22T19:00:34", "upload_time_iso_8601": "2019-08-22T19:00:34.979644Z", "url": "https://files.pythonhosted.org/packages/92/62/2b1c8552caefe62781ab1fa971029ebfe331a66046cbff0e075a74dca001/django-enumfield-named-choices-1.0a2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ec9b55c14f7596ce0a9a77b553aa16ce", "sha256": "f9ee98e22d34111b48d123bc09ad3db34f7870e67dbead4afdb73265ccbfa259"}, "downloads": -1, "filename": "django_enumfield_named_choices-1.0a2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ec9b55c14f7596ce0a9a77b553aa16ce", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 37277, "upload_time": "2019-08-22T19:00:33", "upload_time_iso_8601": "2019-08-22T19:00:33.342766Z", "url": "https://files.pythonhosted.org/packages/a3/15/1e8a603515df4665fac730a576ccf9a3efd702a74f7dd197631eeec45fff/django_enumfield_named_choices-1.0a2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b349a817dafa244ca03a7e9166814529", "sha256": "5f64846c74b61e5a893db8fbc8f37851d8abd90e3d9b2c30ed470e564843efe4"}, "downloads": -1, "filename": "django-enumfield-named-choices-1.0a2.tar.gz", "has_sig": false, "md5_digest": "b349a817dafa244ca03a7e9166814529", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26785, "upload_time": "2019-08-22T19:00:34", "upload_time_iso_8601": "2019-08-22T19:00:34.979644Z", "url": "https://files.pythonhosted.org/packages/92/62/2b1c8552caefe62781ab1fa971029ebfe331a66046cbff0e075a74dca001/django-enumfield-named-choices-1.0a2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:21 2020"}