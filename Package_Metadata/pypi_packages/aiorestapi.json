{"info": {"author": "Alessio Pinna", "author_email": "alessio.pinna@aiselis.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: AsyncIO", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP"], "description": "Rapid rest resources for aiohttp\n================================\n\n[![Latest PyPI package version](https://badge.fury.io/py/aiorestapi.svg)](https://pypi.org/project/aiorestapi)\n\nKey Features\n------------\n\n-   Supports both client and server side of HTTP protocol.\n\nGetting started\n---------------\n\n`aiorestapi` allows you to quickly create a rest resource in a few steps. It automatically creates the resource routes on the collections or individual items; it's simply to specify the suffix '_collection' or '_item' on the methods.\nThe serialization / deserialization of results / requests occurs transparently using  python dictionaries.\n\nAn example creating a simple rest resource\n```python\nfrom aiohttp import web\nfrom aiorestapi import RestView, routes\n\n@routes.resource(\"/views\")\nclass RestResource(RestView):\n\n    # example call: GET to <server>/views?start=10\n    async def on_get_collection(self, start=0) -> list:\n        return [\n            {\"id\": int(start)+1, \"value\": 1},\n            {\"id\": int(start)+2, \"value\": 2},\n        ]\n\n    # example call: GET <server>/views/80\n    async def on_get_item(self, id: str) -> dict:\n        return self.key\n\n    # example call: POST to <server>/views\n    async def on_post_collection(self, body: dict) -> dict:\n        return body\n\n\napp = web.Application()\napp.add_routes(routes)\napp['key'] = [1, 2, 4, 5]\n\nif __name__ == '__main__':\n    web.run_app(app)\n```\n\nInstallation\n------------\nIt's very simple to install aiorestapi:\n```sh\npip install aiorestapi\n```\n\nNotes\n-----\n\n- @routes.resource decorator the decorator automatically adds the routes to '<server>/myresources' and '<server>/myresources/{id}'\n- From the RestView object it is possible to access the aiohttp request with self.request\n- The query parameters are automatically converted into parameters of the view method.\n- If requests have a body it is necessary to specify in the method a parameter called 'body'\n- If requests are to the single item it is necessary to specify a parameter called 'id'\n- The items stored as 'app[<key>]' are accessible into view as properties 'self.<key>'\n\nTo Do\n-----\n\n- Tests!!\n- Documentation\n- Configurable custom serializers/deserializers\n\nRequirements\n------------\n\n-   Python \\>= 3.6\n-   [aiohttp](https://pypi.python.org/pypi/aiohttp)\n\nLicense\n-------\n\n`aiorestapi` is offered under the Apache 2 license.\n\nSource code\n-----------\n\nThe latest developer version is available in a GitHub repository:\n<https://github.com/aiselis/aiorestapi>\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aiselis/aiorestapi", "keywords": "", "license": "Apache 2", "maintainer": "Alessio Pinna <alessio.pinna@aiselis.com>", "maintainer_email": "", "name": "aiorestapi", "package_url": "https://pypi.org/project/aiorestapi/", "platform": "", "project_url": "https://pypi.org/project/aiorestapi/", "project_urls": {"Bug Reports": "https://github.com/aiselis/aiorestapi/issues", "Homepage": "https://github.com/aiselis/aiorestapi", "Source": "https://github.com/aiselis/aiorestapi"}, "release_url": "https://pypi.org/project/aiorestapi/0.1.2/", "requires_dist": ["aiohttp"], "requires_python": ">=3.6", "summary": "Rapid rest resources for aiohttp", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Rapid rest resources for aiohttp</h1>\n<p><a href=\"https://pypi.org/project/aiorestapi\" rel=\"nofollow\"><img alt=\"Latest PyPI package version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d42b22d88788cb1e7aed3546d4bdb7e282873f5f/68747470733a2f2f62616467652e667572792e696f2f70792f61696f726573746170692e737667\"></a></p>\n<h2>Key Features</h2>\n<ul>\n<li>Supports both client and server side of HTTP protocol.</li>\n</ul>\n<h2>Getting started</h2>\n<p><code>aiorestapi</code> allows you to quickly create a rest resource in a few steps. It automatically creates the resource routes on the collections or individual items; it's simply to specify the suffix '_collection' or '_item' on the methods.\nThe serialization / deserialization of results / requests occurs transparently using  python dictionaries.</p>\n<p>An example creating a simple rest resource</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">web</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiorestapi</span> <span class=\"kn\">import</span> <span class=\"n\">RestView</span><span class=\"p\">,</span> <span class=\"n\">routes</span>\n\n<span class=\"nd\">@routes</span><span class=\"o\">.</span><span class=\"n\">resource</span><span class=\"p\">(</span><span class=\"s2\">\"/views\"</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">RestResource</span><span class=\"p\">(</span><span class=\"n\">RestView</span><span class=\"p\">):</span>\n\n    <span class=\"c1\"># example call: GET to &lt;server&gt;/views?start=10</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_get_collection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">list</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">\"value\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span>\n            <span class=\"p\">{</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">\"value\"</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">},</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"c1\"># example call: GET &lt;server&gt;/views/80</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_get_item</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">key</span>\n\n    <span class=\"c1\"># example call: POST to &lt;server&gt;/views</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_post_collection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">body</span>\n\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">()</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">add_routes</span><span class=\"p\">(</span><span class=\"n\">routes</span><span class=\"p\">)</span>\n<span class=\"n\">app</span><span class=\"p\">[</span><span class=\"s1\">'key'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">run_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n<h2>Installation</h2>\n<p>It's very simple to install aiorestapi:</p>\n<pre>pip install aiorestapi\n</pre>\n<h2>Notes</h2>\n<ul>\n<li>@routes.resource decorator the decorator automatically adds the routes to '&lt;server&gt;/myresources' and '&lt;server&gt;/myresources/{id}'</li>\n<li>From the RestView object it is possible to access the aiohttp request with self.request</li>\n<li>The query parameters are automatically converted into parameters of the view method.</li>\n<li>If requests have a body it is necessary to specify in the method a parameter called 'body'</li>\n<li>If requests are to the single item it is necessary to specify a parameter called 'id'</li>\n<li>The items stored as 'app[&lt;key&gt;]' are accessible into view as properties 'self.&lt;key&gt;'</li>\n</ul>\n<h2>To Do</h2>\n<ul>\n<li>Tests!!</li>\n<li>Documentation</li>\n<li>Configurable custom serializers/deserializers</li>\n</ul>\n<h2>Requirements</h2>\n<ul>\n<li>Python &gt;= 3.6</li>\n<li><a href=\"https://pypi.python.org/pypi/aiohttp\" rel=\"nofollow\">aiohttp</a></li>\n</ul>\n<h2>License</h2>\n<p><code>aiorestapi</code> is offered under the Apache 2 license.</p>\n<h2>Source code</h2>\n<p>The latest developer version is available in a GitHub repository:\n<a href=\"https://github.com/aiselis/aiorestapi\" rel=\"nofollow\">https://github.com/aiselis/aiorestapi</a></p>\n\n          </div>"}, "last_serial": 6997376, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "01634eb767947c0cf0dec2d6f553abe0", "sha256": "313d31f971dd7fabdaec7acb9e7bb1a7e6bb39c7748e5483ea7666a6c084bdc3"}, "downloads": -1, "filename": "aiorestapi-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "01634eb767947c0cf0dec2d6f553abe0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9234, "upload_time": "2019-11-10T12:02:41", "upload_time_iso_8601": "2019-11-10T12:02:41.957477Z", "url": "https://files.pythonhosted.org/packages/9a/58/14a38a6baad9f19f663e0b527850d9528785997b3efaba34b68dbf8a203b/aiorestapi-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "218986b85e060270e60f442a4871cbc8", "sha256": "5f32ef395c263b8497e5516da7eacfc57b6929638b5ad2fad23d22e4002b7f11"}, "downloads": -1, "filename": "aiorestapi-0.1.1.tar.gz", "has_sig": false, "md5_digest": "218986b85e060270e60f442a4871cbc8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4482, "upload_time": "2019-11-10T12:02:43", "upload_time_iso_8601": "2019-11-10T12:02:43.548205Z", "url": "https://files.pythonhosted.org/packages/51/8d/98e3fe0ede1baad13dcfb1891c95bc53b9c69f96bdc6ff8fd1c7a64bc310/aiorestapi-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "4562c84dce48bc53aa31833810c25082", "sha256": "8227451e69c16c2f043300cc30db8a9e770279e24804cb1c9f2419f2cdb21f34"}, "downloads": -1, "filename": "aiorestapi-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4562c84dce48bc53aa31833810c25082", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9352, "upload_time": "2020-04-11T00:00:47", "upload_time_iso_8601": "2020-04-11T00:00:47.206182Z", "url": "https://files.pythonhosted.org/packages/37/1f/3453deaee231e2613334a24b7b073049a1c30baba7a4d9f69a417fa988f2/aiorestapi-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e096cfbd5a1d883a950df0d40e6dcc76", "sha256": "bb9380122c14886dc7c9a4d88eb7862ed93f400f0e6e2a1691be0441ffc35cc8"}, "downloads": -1, "filename": "aiorestapi-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e096cfbd5a1d883a950df0d40e6dcc76", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8281, "upload_time": "2020-04-11T00:00:48", "upload_time_iso_8601": "2020-04-11T00:00:48.364165Z", "url": "https://files.pythonhosted.org/packages/b4/62/d902dcac436c3990342969e1b230bd4eb3f724b20e0467147b9ecc993846/aiorestapi-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4562c84dce48bc53aa31833810c25082", "sha256": "8227451e69c16c2f043300cc30db8a9e770279e24804cb1c9f2419f2cdb21f34"}, "downloads": -1, "filename": "aiorestapi-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4562c84dce48bc53aa31833810c25082", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9352, "upload_time": "2020-04-11T00:00:47", "upload_time_iso_8601": "2020-04-11T00:00:47.206182Z", "url": "https://files.pythonhosted.org/packages/37/1f/3453deaee231e2613334a24b7b073049a1c30baba7a4d9f69a417fa988f2/aiorestapi-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e096cfbd5a1d883a950df0d40e6dcc76", "sha256": "bb9380122c14886dc7c9a4d88eb7862ed93f400f0e6e2a1691be0441ffc35cc8"}, "downloads": -1, "filename": "aiorestapi-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e096cfbd5a1d883a950df0d40e6dcc76", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8281, "upload_time": "2020-04-11T00:00:48", "upload_time_iso_8601": "2020-04-11T00:00:48.364165Z", "url": "https://files.pythonhosted.org/packages/b4/62/d902dcac436c3990342969e1b230bd4eb3f724b20e0467147b9ecc993846/aiorestapi-0.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:52 2020"}