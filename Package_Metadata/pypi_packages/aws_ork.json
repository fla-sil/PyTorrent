{"info": {"author": "Stefan Reimer", "author_email": "stefan@trinimbus.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python"], "description": "|Logo| AWS-Ork\n==============\n\nA Python daemon to sign and remove Salt minion keys for instances being\nspawned or terminated via Auto Scaling groups (ASGs).\n\n| The ASG sends messages for launch and termination events via SNS to\n  SQS. The daemon is listening to the SQS messages and:\n| - removes Salt minion keys on termination messages\n| - accepts minion keys matching the instance-id in the launch messages\n\nIf an S3 URL is configured, the content of ``/etc/salt/pki`` gets synced\nto S3.\n\nBuilding / Tests\n----------------\n\nCan be used as is or packaged via ``setuptools``, ``setup.py`` etc.\n\nIn order run tests and verify running on mutiple versions of Python use:\n\n::\n\n    tox\n\nIf successful it should look something like this:\n\n::\n\n    flake8: commands succeeded\n    py27: commands succeeded\n    py34: commands succeeded\n    congratulations :)\n\nInstallation\n------------\n\nPyPi\n~~~~\n\n::\n\n    pip install aws_ork\n\nlocal dev version\n~~~~~~~~~~~~~~~~~\n\nYou can find a pip compatible zip file in ``.tox/dist``, which you can\ninstall via:\n\n::\n\n    pip install .tox/dist/aws_ork-<VERSION>.zip\n\nUsage\n-----\n\n::\n\n    usage: aws_ork [-h] [-v] [-d] [--syslog] [--purge]\n\n    Listens to an SQS queue and accepts and removes Salt minion keys\n\n    optional arguments:\n      -h, --help     show this help message and exit\n      -v, --verbose  Enable debug logging\n      -d, --daemon   Daemonize and enable logging to file\n      --syslog       Log to syslog rather than file, only in daemon mode\n      --purge        Purge all message from queue at startup\n\nConfig File\n-----------\n\nThe daemon looks for an optional config file in ``/etc``, see:\n\n::\n\n    data/aws_ork.conf\n\nOptions\n~~~~~~~\n\n+-----------------------------+-----------------------------+\n| Option                      | Default                     |\n+=============================+=============================+\n| ``SQS_Region``              | ``\"us-west-2\"``             |\n+-----------------------------+-----------------------------+\n| ``QueueName``               | ``\"SaltMasterTestQueue\"``   |\n+-----------------------------+-----------------------------+\n| ``PollPause``               | ``0``                       |\n+-----------------------------+-----------------------------+\n| ``BucketUrl``               | ``None``                    |\n+-----------------------------+-----------------------------+\n| ``BucketRegion``            | ``None``                    |\n+-----------------------------+-----------------------------+\n| ``DeleteUnknownMessages``   | ``True``                    |\n+-----------------------------+-----------------------------+\n\nUnix service\n------------\n\nExample SysV style init file provided, see:\n\n::\n\n    data/sys_init/aws_ork\n\nExample SystemD style config, see:\n\n::\n\n    data/systemd/*\n\nFAQ\n---\n\n-  *Where is this daemon supposed to run?*\n\n   The daemon is supposed to run on the Salt master instance as it\n   requires file system access to the Salt master's keystore.\n\n-  *Why is ``/etc/salt/pki`` backed up to S3?*\n\n   Normally the Salt master instance uses a storage type that is not\n   persistent (e.g. EBS). Therefore, the keystore is synced to S3 on\n   each change in order to be restored during boot in case the Salt\n   master instance needs to replaced (not covered by this service).\n\n-  *What does the PollPause option do ?*\n\n   | AWS charges each request to SQS. AWS Ork already uses long polling,\n     but if some delayed processing is acceptable, pausing between read\n     requests can further reduces costs.\n   |  Using the default value of \"0\" (no pause):\n     ``( 365*24*3600 ) / 20 * 0.0000004 $ = 0.63$ / year``\n\n-  *Who should have access to the S3 location?*\n\n   As the key store contains private keys which could be used to\n   impersonate Salt minions, download configuration data and potentially\n   passwords for other services, access should be limited accordingly.\n\n.. |Logo| image:: https://github.com/TriNimbus/aws-ork/blob/master/logo.png", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TriNimbus/aws-ork", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aws_ork", "package_url": "https://pypi.org/project/aws_ork/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/aws_ork/", "project_urls": {"Homepage": "https://github.com/TriNimbus/aws-ork"}, "release_url": "https://pypi.org/project/aws_ork/0.4.5/", "requires_dist": ["boto3", "python-daemon", "salt"], "requires_python": "", "summary": "Daemon listening on SQS for messages from an ASG", "version": "0.4.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Python daemon to sign and remove Salt minion keys for instances being\nspawned or terminated via Auto Scaling groups (ASGs).</p>\n<div>\n<div>The ASG sends messages for launch and termination events via SNS to\nSQS. The daemon is listening to the SQS messages and:</div>\n<div>- removes Salt minion keys on termination messages</div>\n<div>- accepts minion keys matching the instance-id in the launch messages</div>\n</div>\n<p>If an S3 URL is configured, the content of <tt>/etc/salt/pki</tt> gets synced\nto S3.</p>\n<div id=\"building-tests\">\n<h2>Building / Tests</h2>\n<p>Can be used as is or packaged via <tt>setuptools</tt>, <tt>setup.py</tt> etc.</p>\n<p>In order run tests and verify running on mutiple versions of Python use:</p>\n<pre>tox\n</pre>\n<p>If successful it should look something like this:</p>\n<pre>flake8: commands succeeded\npy27: commands succeeded\npy34: commands succeeded\ncongratulations :)\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"pypi\">\n<h3>PyPi</h3>\n<pre>pip install aws_ork\n</pre>\n</div>\n<div id=\"local-dev-version\">\n<h3>local dev version</h3>\n<p>You can find a pip compatible zip file in <tt>.tox/dist</tt>, which you can\ninstall via:</p>\n<pre>pip install .tox/dist/aws_ork-&lt;VERSION&gt;.zip\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>usage: aws_ork [-h] [-v] [-d] [--syslog] [--purge]\n\nListens to an SQS queue and accepts and removes Salt minion keys\n\noptional arguments:\n  -h, --help     show this help message and exit\n  -v, --verbose  Enable debug logging\n  -d, --daemon   Daemonize and enable logging to file\n  --syslog       Log to syslog rather than file, only in daemon mode\n  --purge        Purge all message from queue at startup\n</pre>\n</div>\n<div id=\"config-file\">\n<h2>Config File</h2>\n<p>The daemon looks for an optional config file in <tt>/etc</tt>, see:</p>\n<pre>data/aws_ork.conf\n</pre>\n<div id=\"options\">\n<h3>Options</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Option</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>SQS_Region</tt></td>\n<td><tt><span class=\"pre\">\"us-west-2\"</span></tt></td>\n</tr>\n<tr><td><tt>QueueName</tt></td>\n<td><tt>\"SaltMasterTestQueue\"</tt></td>\n</tr>\n<tr><td><tt>PollPause</tt></td>\n<td><tt>0</tt></td>\n</tr>\n<tr><td><tt>BucketUrl</tt></td>\n<td><tt>None</tt></td>\n</tr>\n<tr><td><tt>BucketRegion</tt></td>\n<td><tt>None</tt></td>\n</tr>\n<tr><td><tt>DeleteUnknownMessages</tt></td>\n<td><tt>True</tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"unix-service\">\n<h2>Unix service</h2>\n<p>Example SysV style init file provided, see:</p>\n<pre>data/sys_init/aws_ork\n</pre>\n<p>Example SystemD style config, see:</p>\n<pre>data/systemd/*\n</pre>\n</div>\n<div id=\"faq\">\n<h2>FAQ</h2>\n<ul>\n<li><p><em>Where is this daemon supposed to run?</em></p>\n<p>The daemon is supposed to run on the Salt master instance as it\nrequires file system access to the Salt master\u2019s keystore.</p>\n</li>\n<li><p><em>Why is ``/etc/salt/pki`` backed up to S3?</em></p>\n<p>Normally the Salt master instance uses a storage type that is not\npersistent (e.g. EBS). Therefore, the keystore is synced to S3 on\neach change in order to be restored during boot in case the Salt\nmaster instance needs to replaced (not covered by this service).</p>\n</li>\n<li><p><em>What does the PollPause option do ?</em></p>\n<div>\n<div>AWS charges each request to SQS. AWS Ork already uses long polling,\nbut if some delayed processing is acceptable, pausing between read\nrequests can further reduces costs.</div>\n<div>\n<div>Using the default value of \u201c0\u201d (no pause):\n<tt>( 365*24*3600 ) / 20 * 0.0000004 $ = 0.63$ / year</tt></div>\n</div>\n</div>\n</li>\n<li><p><em>Who should have access to the S3 location?</em></p>\n<p>As the key store contains private keys which could be used to\nimpersonate Salt minions, download configuration data and potentially\npasswords for other services, access should be limited accordingly.</p>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2899422, "releases": {"0.4.1": [{"comment_text": "", "digests": {"md5": "1d1c79e92041686777e805f77f68267f", "sha256": "4823f1c8ad485cb156cb50bfa42475b5f8a49aedd61054efed9d0f84e4a34957"}, "downloads": -1, "filename": "aws_ork-0.4.1.tar.gz", "has_sig": false, "md5_digest": "1d1c79e92041686777e805f77f68267f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6540, "upload_time": "2016-12-09T21:56:21", "upload_time_iso_8601": "2016-12-09T21:56:21.274894Z", "url": "https://files.pythonhosted.org/packages/08/85/b72f72202099c66fea34632964770cd1a3f4ee0ce227d24c7053f12f87f9/aws_ork-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "9422711934758aabe500fdc9c96f0459", "sha256": "bb1e3dd6104e5ba7145043679c505d9353fabc646c59a34ee2ea3f29cd89bb57"}, "downloads": -1, "filename": "aws_ork-0.4.2.tar.gz", "has_sig": false, "md5_digest": "9422711934758aabe500fdc9c96f0459", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6605, "upload_time": "2016-12-09T22:29:09", "upload_time_iso_8601": "2016-12-09T22:29:09.615974Z", "url": "https://files.pythonhosted.org/packages/df/26/8fdb0309e92eb3424c2e89f4e8ae642d2e8df01b260c7dba80eacf9b6a3e/aws_ork-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "33a6880f2cb8a5c71a4deab16ce495f6", "sha256": "3522c16d686a91b376db338279da04d21e9bdaf44868e6dd17f5d8949c46cead"}, "downloads": -1, "filename": "aws_ork-0.4.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "33a6880f2cb8a5c71a4deab16ce495f6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9775, "upload_time": "2016-12-12T20:24:26", "upload_time_iso_8601": "2016-12-12T20:24:26.590878Z", "url": "https://files.pythonhosted.org/packages/76/d7/cd66759301d64c1649772a2c32dfbbd548fbe28645b888d1d140762ac0c1/aws_ork-0.4.3-py2.py3-none-any.whl", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "334b8aa56ad9fcc2eb2e4805167cb48b", "sha256": "1d821e73f8356ab30e6da08f313c9466f5d5e122a664cfa2948783a7fcf61f76"}, "downloads": -1, "filename": "aws_ork-0.4.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "334b8aa56ad9fcc2eb2e4805167cb48b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10641, "upload_time": "2017-01-06T00:49:05", "upload_time_iso_8601": "2017-01-06T00:49:05.706936Z", "url": "https://files.pythonhosted.org/packages/62/cf/029f29261e297c47227c5776ede88e8943767eed55a3bb6a11a7f5b34430/aws_ork-0.4.4-py2.py3-none-any.whl", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "6df862a4307827f065db289b017a61aa", "sha256": "da6323b5501d5feb198502ab24e2e8dc3e83483fe63326579e3c5ec164ac4e3c"}, "downloads": -1, "filename": "aws_ork-0.4.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6df862a4307827f065db289b017a61aa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11018, "upload_time": "2017-05-26T01:22:14", "upload_time_iso_8601": "2017-05-26T01:22:14.023130Z", "url": "https://files.pythonhosted.org/packages/87/06/b5baab07df13d05599624627acf9c1af72b9143940cb8405d0564a70c3c5/aws_ork-0.4.5-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6df862a4307827f065db289b017a61aa", "sha256": "da6323b5501d5feb198502ab24e2e8dc3e83483fe63326579e3c5ec164ac4e3c"}, "downloads": -1, "filename": "aws_ork-0.4.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6df862a4307827f065db289b017a61aa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11018, "upload_time": "2017-05-26T01:22:14", "upload_time_iso_8601": "2017-05-26T01:22:14.023130Z", "url": "https://files.pythonhosted.org/packages/87/06/b5baab07df13d05599624627acf9c1af72b9143940cb8405d0564a70c3c5/aws_ork-0.4.5-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 18:15:37 2020"}