{"info": {"author": "Yuji Tomita", "author_email": "yuji@yujitomita.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "What is it? \n============\n\nA simple django app that makes using an WYSIWYG editor (CLEditor) extremely easy.\nOptionally includes a mixin that activates file upload handling.\n\n![Screenshot](https://github.com/yuchant/django-cleditor/raw/master/cleditor.png)\n\n\n\nInstallation instructions\n=========================\n\nDownload and add ``django-cleditor`` to your packages however you wish.\n\n- The easiest method is to use pip: `pip install django-cleditor`\n- Add ``cleditor`` to your ``INSTALLED_APPS``\n- Run the ``python manage.py collectstatic`` management command to ... collect the static files.\n- Use `cleditor.widgets.CLEditorWidget` anywhere a django form widget is expected.\n- For admin upload handling subclass `cleditor.admin.CLEditorUploadAdmin` and use `cleditor.widgets.CLEditorUploadWidget` instead.\n\n\n\nUsage instructions\n==================\n\n\nEditor only\n-----------\n\nThis package supplies a ``CLEditorWidget`` form widget in ``cleditor.widgets`` that you can use anywhere the django forms framework expects a widget.\n\nTo replace all textfields in a ``ModelAdmin`` with ``CLEditors`` simply paste two lines:\n    \n```python\nfrom django.db import models\nfrom cleditor.widgets import CLEditorWidget\n\nclass MyModelAdmin(admin.ModelAdmin):\n    formfield_overrides = { models.TextField: {'widget': CLEditorWidget()}}\n```\n\n_Note: If you need finer control over which textfields get overriden, look into ``ModelAdmin.formfield_for_dbfield``_\n\nYou're done!\n\n\nEasy admin upload handler\n-------------------------\n\nTo allow users to upload via a the insert image widget, you must use the `CLEditorUploadWidget` widget and you must subclass the included `ModelAdmin` which adds a fully csrf protected upload handler to your admin site.\n\nYou can specify a new upload directory by adding an `upload_to` attribute to the `ModelAdmin`\n\n```python\nfrom django.db import models\nfrom cleditor.widgets import CLEditorUploadWidget\nfrom cleditor.admin import CLEditorUploadAdmin\n\nclass MyModelAdmin(CLEditorUploadAdmin):\n    # upload_to = 'cleditorupload/' # default \n    formfield_overrides = { models.TextField: {'widget': CLEditorUploadWidget()}}\n```\n\n\nStand alone uploader (non admin)\n--------------------------------\n\nTo upload images without the admin panel, you'll have to map a URL to the upload handler and pass in your custom handler URL to the widget.\n\n\n```python\n# urls.py\n\nfrom cleditor.admin import cleditor_upload_handler\n\nurlpatterns = patterns('',\n\t(r'^my-upload-handler/$', cleditor_upload_handler, {'upload_to': 'my_upload_directory'}),\n)\n```\n\n\n```python\n# widget instantiation\n\nclass MyForm(forms.Form):\n    myfield = forms.TextField(widget=CLEditorUploadAdmin(upload_url='path-to-my-upload-handler'))\n```\n\n\nCredits\n========\n* Chris Landowski - original cleditor image upload plugin\nhttps://github.com/dmitry-dedukhin/cleditor-extimage-plugin\n\n* Dmitry Dedukhim - cleditor jquery plugin creator\nhttp://premiumsoftware.net/cleditor/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yuchant/django-cleditor", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-cleditor", "package_url": "https://pypi.org/project/django-cleditor/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-cleditor/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/yuchant/django-cleditor"}, "release_url": "https://pypi.org/project/django-cleditor/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "A django form widget for CLEditor (a super clean, MIT licensed WYSIWYG HTML editor) that handles uploading", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            What is it? <br>============<br><br>A simple django app that makes using an WYSIWYG editor (CLEditor) extremely easy.<br>Optionally includes a mixin that activates file upload handling.<br><br>![Screenshot](https://github.com/yuchant/django-cleditor/raw/master/cleditor.png)<br><br><br><br>Installation instructions<br>=========================<br><br>Download and add ``django-cleditor`` to your packages however you wish.<br><br>- The easiest method is to use pip: `pip install django-cleditor`<br>- Add ``cleditor`` to your ``INSTALLED_APPS``<br>- Run the ``python manage.py collectstatic`` management command to ... collect the static files.<br>- Use `cleditor.widgets.CLEditorWidget` anywhere a django form widget is expected.<br>- For admin upload handling subclass `cleditor.admin.CLEditorUploadAdmin` and use `cleditor.widgets.CLEditorUploadWidget` instead.<br><br><br><br>Usage instructions<br>==================<br><br><br>Editor only<br>-----------<br><br>This package supplies a ``CLEditorWidget`` form widget in ``cleditor.widgets`` that you can use anywhere the django forms framework expects a widget.<br><br>To replace all textfields in a ``ModelAdmin`` with ``CLEditors`` simply paste two lines:<br>    <br>```python<br>from django.db import models<br>from cleditor.widgets import CLEditorWidget<br><br>class MyModelAdmin(admin.ModelAdmin):<br>    formfield_overrides = { models.TextField: {'widget': CLEditorWidget()}}<br>```<br><br>_Note: If you need finer control over which textfields get overriden, look into ``ModelAdmin.formfield_for_dbfield``_<br><br>You're done!<br><br><br>Easy admin upload handler<br>-------------------------<br><br>To allow users to upload via a the insert image widget, you must use the `CLEditorUploadWidget` widget and you must subclass the included `ModelAdmin` which adds a fully csrf protected upload handler to your admin site.<br><br>You can specify a new upload directory by adding an `upload_to` attribute to the `ModelAdmin`<br><br>```python<br>from django.db import models<br>from cleditor.widgets import CLEditorUploadWidget<br>from cleditor.admin import CLEditorUploadAdmin<br><br>class MyModelAdmin(CLEditorUploadAdmin):<br>    # upload_to = 'cleditorupload/' # default <br>    formfield_overrides = { models.TextField: {'widget': CLEditorUploadWidget()}}<br>```<br><br><br>Stand alone uploader (non admin)<br>--------------------------------<br><br>To upload images without the admin panel, you'll have to map a URL to the upload handler and pass in your custom handler URL to the widget.<br><br><br>```python<br># urls.py<br><br>from cleditor.admin import cleditor_upload_handler<br><br>urlpatterns = patterns('',<br>\t(r'^my-upload-handler/$', cleditor_upload_handler, {'upload_to': 'my_upload_directory'}),<br>)<br>```<br><br><br>```python<br># widget instantiation<br><br>class MyForm(forms.Form):<br>    myfield = forms.TextField(widget=CLEditorUploadAdmin(upload_url='path-to-my-upload-handler'))<br>```<br><br><br>Credits<br>========<br>* Chris Landowski - original cleditor image upload plugin<br>https://github.com/dmitry-dedukhin/cleditor-extimage-plugin<br><br>* Dmitry Dedukhim - cleditor jquery plugin creator<br>http://premiumsoftware.net/cleditor/\n          </div>"}, "last_serial": 789301, "releases": {"0.1": [], "0.1.5": [{"comment_text": "", "digests": {"md5": "1f4eb002a0adf3d0c321068e8216d492", "sha256": "08448e81cf44eeabcf7853b66a3d53a628502c000775d0b44ac03d7af1a63000"}, "downloads": -1, "filename": "django-cleditor-0.1.5.macosx-10.7-intel.exe", "has_sig": false, "md5_digest": "1f4eb002a0adf3d0c321068e8216d492", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 119990, "upload_time": "2011-12-29T20:20:26", "upload_time_iso_8601": "2011-12-29T20:20:26.804522Z", "url": "https://files.pythonhosted.org/packages/7a/4d/03b0d1d6deda0c0782d7eee596e0d71c8b726d74f914a9b7494cca4bfb89/django-cleditor-0.1.5.macosx-10.7-intel.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c977b5659236f32cf68ce654c81d03f", "sha256": "63e70aeae091eaf5da848e2c39aabca562ade849192b3bc231d4ebb51e158259"}, "downloads": -1, "filename": "django-cleditor-0.1.5.tar.gz", "has_sig": false, "md5_digest": "0c977b5659236f32cf68ce654c81d03f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 203215, "upload_time": "2011-12-29T20:20:25", "upload_time_iso_8601": "2011-12-29T20:20:25.160438Z", "url": "https://files.pythonhosted.org/packages/1c/c9/e6bc03691ba97f3e85bc0da96f9d23cc3122838bc92495d16b7e020b3423/django-cleditor-0.1.5.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ecfb71114c784e657c09e71efe3b9b08", "sha256": "6e568110b7efc19f9a2dc2be9e4ce7d15472cd0fcd8deb420c0dc4afce7e04d4"}, "downloads": -1, "filename": "django-cleditor-0.2.0.macosx-10.7-intel.exe", "has_sig": false, "md5_digest": "ecfb71114c784e657c09e71efe3b9b08", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 126828, "upload_time": "2012-01-24T09:43:00", "upload_time_iso_8601": "2012-01-24T09:43:00.463381Z", "url": "https://files.pythonhosted.org/packages/d7/1d/61b1773fa52f9e863c3b4c94938967555537e1044a0109e0393c1c3e8155/django-cleditor-0.2.0.macosx-10.7-intel.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4163e77f6d478d286ba22b8bae485ac", "sha256": "2cb35b56d7736b2263e2e005a948976e4fb70c131f0c0a5b4eeaf10649c3aafd"}, "downloads": -1, "filename": "django_cleditor-0.2.0-py2.7.egg", "has_sig": false, "md5_digest": "a4163e77f6d478d286ba22b8bae485ac", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 65901, "upload_time": "2012-01-25T20:28:28", "upload_time_iso_8601": "2012-01-25T20:28:28.907580Z", "url": "https://files.pythonhosted.org/packages/e8/c9/ecbf832d01ccd87a623eeaa1d6bcd6f61d15d3eed4b88569d666c3cff866/django_cleditor-0.2.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2caa0a7010f61540c24ffcb444f80682", "sha256": "1fa605164883bcc7207ed1b2a1a93397db0887e54714ecd10769a94723ef9a97"}, "downloads": -1, "filename": "django-cleditor-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2caa0a7010f61540c24ffcb444f80682", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 286075, "upload_time": "2012-01-24T09:42:58", "upload_time_iso_8601": "2012-01-24T09:42:58.992274Z", "url": "https://files.pythonhosted.org/packages/6d/35/fc497b6889336dc1df577c61837b1dc91f7be3a1270074229c85b981569e/django-cleditor-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "ec1f4120d752c2d4bbc16475653a3f00", "sha256": "bad9de6c3f627ea7c3d89622cf1af6651f272b79f21b25a4eb191d441e534e4b"}, "downloads": -1, "filename": "django-cleditor-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ec1f4120d752c2d4bbc16475653a3f00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1303391, "upload_time": "2012-05-15T20:54:00", "upload_time_iso_8601": "2012-05-15T20:54:00.847789Z", "url": "https://files.pythonhosted.org/packages/83/3a/f67befaf231a3f4da2a930cf4ecc824c8fa7d0e6c7616231eee2247b521d/django-cleditor-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ec1f4120d752c2d4bbc16475653a3f00", "sha256": "bad9de6c3f627ea7c3d89622cf1af6651f272b79f21b25a4eb191d441e534e4b"}, "downloads": -1, "filename": "django-cleditor-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ec1f4120d752c2d4bbc16475653a3f00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1303391, "upload_time": "2012-05-15T20:54:00", "upload_time_iso_8601": "2012-05-15T20:54:00.847789Z", "url": "https://files.pythonhosted.org/packages/83/3a/f67befaf231a3f4da2a930cf4ecc824c8fa7d0e6c7616231eee2247b521d/django-cleditor-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:07 2020"}