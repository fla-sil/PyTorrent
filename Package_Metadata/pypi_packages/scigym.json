{"info": {"author": "HendrikPN", "author_email": "hendrik.poulsen-nautrup@uibk.ac.at", "bugtrack_url": null, "classifiers": [], "description": "**Status:** Development (expect bug fixes, minor updates and new\nenvironments)\n\n<a href=\"https://unitary.fund/\">\n    <img src=\"https://img.shields.io/badge/Supported%20By-UNITARY%20FUND-brightgreen.svg?style=for-the-badge\"\n    />\n</a>\n\n# SciGym\n\n<a href=\"https://scigym.ai\">\n    <img src=\"https://raw.githubusercontent.com/HendrikPN/scigym/master/assets/scigym-logo.png\" width=\"120px\" align=\"bottom\"\n    />\n</a>\n\n**SciGym is a curated library for reinforcement learning environments in science.**\nThis is the `scigym` open-source library which gives you access to a standardized set of science environments.\nVisit our webpage at [scigym.ai]. This website serves as a open-source database for science environments: A port where science and reinforcement learning meet.\n\n<a href=\"https://travis-ci.org/HendrikPN/scigym\">\n    <img src=\"https://travis-ci.org/HendrikPN/scigym.svg?branch=master\" align=\"bottom\"\n    />\n</a>\n\n[See What's New section below](#whats-new)\n\n## Basics\n\nThis project is in line with the policies of the [OpenAI gym]:\n\nThere are two basic concepts in reinforcement learning: the environment\n(namely, the outside world) and the agent (namely, the algorithm you are\nwriting). The agent sends `actions` to the environment, and\nthe environment replies with `observations` and\n`rewards` (that is, a score).\n\nThe core `gym` interface is [Env], which is the unified\nenvironment interface. There is no interface for agents; that part is\nleft to you. The following are the `Env` methods you should know:\n\n* `reset(self)`: Reset the environment's state. Returns `observation`.\n* `step(self, action)`: Step the environment by one timestep. Returns `observation`, `reward`, `done`, `info`.\n* `render(self, mode='human', close=False)`: Render one frame of the environment. The default mode will do something human friendly, such as pop up a window. Passing the `close` flag signals the renderer to close any such windows.\n\n## Installation\n\nThere are two main options for the installation of `scigym`:\n\n#### (a) minimal install (recommended)\n\nThis method allows you to install the package with no environment specific dependencies, and later add the dependencies for specific environments as you need them.\n\nYou can perform a minimal install of `scigym` with:\n\n  ```sh\n  pip install scigym\n  ```\nor\n  ```sh\n  git clone https://github.com/hendrikpn/scigym.git\n  cd scigym\n  pip install -e .\n  ```\n\nTo later add the dependencies for a particular `environment_name`, run the following command:\n\n  ```sh\n  pip install scigym[environment_name]\n  ```\nor from the folder containing `setup.py`\n  ```sh\n  pip install -e .[environment_name]\n  ```\n\n#### (b) full install\n\nThis method allows you to install the package, along with all dependencies required for all environments. Be careful, scigym is growing, and this method may install a large number of packages. To view all packages that will be installed during a full install, see the `requirements.txt` file in the root directory. If you wish to perform a full installation you can run:\n\n  ```sh\n  pip install scigym['all']\n  ```\nor\n  ```sh\n  git clone https://github.com/hendrikpn/scigym.git\n  cd scigym\n  pip install -e .['all']\n  ```\n\n## Available Environments\n\nAt this point we have the following environments available for you to play with:\n\n- [`surfacecode-decoding`](https://github.com/HendrikPN/scigym/tree/master/scigym/envs/quantum_physics/quantum_computing/surfacecode_decoding)\n- [`teleportation`](https://github.com/HendrikPN/scigym/tree/master/scigym/envs/quantum_physics/quantum_computing/teleportation)\n\n## What's New\n\n- 2019-08-30 This is `scigym` version 0.0.2!\n- 2019-08-30 `scigym` is now available as a package on [PyPI](https://pypi.org/project/scigym/).\n- 2019-08-06 Added [Travis-CI](https://travis-ci.org/HendrikPN/scigym).\n- 2019-08-06: Added [teleportation](https://github.com/HendrikPN/scigym/tree/master/scigym/envs/quantum_physics/quantum_computing/teleportation) environment.\n- 2019-07-21: Added standardized unit testing for all scigym environments.\n- 2019-03-04: Added <a href=\"https://github.com/R-Sweke/gym-surfacecode\">surfacecode</a> environment.\n- 2019-02-09: Initial commit. Hello world :)\n\n  [image]: https://img.shields.io/badge/Supported%20By-UNITARY%20FUND-brightgreen.svg?style=for-the-badge\n  [OpenAI gym]: https://github.com/openai/gym\n  [scigym.ai]: https://scigym.ai\n  [Env]: https://github.com/openai/gym/blob/master/gym/core.py", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/HendrikPN/scigym", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "scigym", "package_url": "https://pypi.org/project/scigym/", "platform": "", "project_url": "https://pypi.org/project/scigym/", "project_urls": {"Homepage": "https://github.com/HendrikPN/scigym"}, "release_url": "https://pypi.org/project/scigym/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "SciGym -- The OpenAI Gym for Science: A platform for your scientific reinforcement learning problem.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Status:</strong> Development (expect bug fixes, minor updates and new\nenvironments)</p>\n<a href=\"https://unitary.fund/\" rel=\"nofollow\">\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/892f7e8ba0c9932db72df2645ecbb48c3daff841/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f537570706f7274656425323042792d554e495441525925323046554e442d627269676874677265656e2e7376673f7374796c653d666f722d7468652d6261646765\">\n</a>\n<h1>SciGym</h1>\n<a href=\"https://scigym.ai\" rel=\"nofollow\">\n    <img align=\"bottom\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a08ae85efb15cdf72e88fbd5997fca46fdc88458/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f48656e6472696b504e2f73636967796d2f6d61737465722f6173736574732f73636967796d2d6c6f676f2e706e67\" width=\"120px\">\n</a>\n<p><strong>SciGym is a curated library for reinforcement learning environments in science.</strong>\nThis is the <code>scigym</code> open-source library which gives you access to a standardized set of science environments.\nVisit our webpage at <a href=\"https://scigym.ai\" rel=\"nofollow\">scigym.ai</a>. This website serves as a open-source database for science environments: A port where science and reinforcement learning meet.</p>\n<a href=\"https://travis-ci.org/HendrikPN/scigym\" rel=\"nofollow\">\n    <img align=\"bottom\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6da4ef6f7878dd241a1b6b779bdc136bf597dc3f/68747470733a2f2f7472617669732d63692e6f72672f48656e6472696b504e2f73636967796d2e7376673f6272616e63683d6d6173746572\">\n</a>\n<p><a href=\"#whats-new\" rel=\"nofollow\">See What's New section below</a></p>\n<h2>Basics</h2>\n<p>This project is in line with the policies of the <a href=\"https://github.com/openai/gym\" rel=\"nofollow\">OpenAI gym</a>:</p>\n<p>There are two basic concepts in reinforcement learning: the environment\n(namely, the outside world) and the agent (namely, the algorithm you are\nwriting). The agent sends <code>actions</code> to the environment, and\nthe environment replies with <code>observations</code> and\n<code>rewards</code> (that is, a score).</p>\n<p>The core <code>gym</code> interface is <a href=\"https://github.com/openai/gym/blob/master/gym/core.py\" rel=\"nofollow\">Env</a>, which is the unified\nenvironment interface. There is no interface for agents; that part is\nleft to you. The following are the <code>Env</code> methods you should know:</p>\n<ul>\n<li><code>reset(self)</code>: Reset the environment's state. Returns <code>observation</code>.</li>\n<li><code>step(self, action)</code>: Step the environment by one timestep. Returns <code>observation</code>, <code>reward</code>, <code>done</code>, <code>info</code>.</li>\n<li><code>render(self, mode='human', close=False)</code>: Render one frame of the environment. The default mode will do something human friendly, such as pop up a window. Passing the <code>close</code> flag signals the renderer to close any such windows.</li>\n</ul>\n<h2>Installation</h2>\n<p>There are two main options for the installation of <code>scigym</code>:</p>\n<h4>(a) minimal install (recommended)</h4>\n<p>This method allows you to install the package with no environment specific dependencies, and later add the dependencies for specific environments as you need them.</p>\n<p>You can perform a minimal install of <code>scigym</code> with:</p>\n<pre>pip install scigym\n</pre>\n<p>or</p>\n<pre>git clone https://github.com/hendrikpn/scigym.git\n<span class=\"nb\">cd</span> scigym\npip install -e .\n</pre>\n<p>To later add the dependencies for a particular <code>environment_name</code>, run the following command:</p>\n<pre>pip install scigym<span class=\"o\">[</span>environment_name<span class=\"o\">]</span>\n</pre>\n<p>or from the folder containing <code>setup.py</code></p>\n<pre>pip install -e .<span class=\"o\">[</span>environment_name<span class=\"o\">]</span>\n</pre>\n<h4>(b) full install</h4>\n<p>This method allows you to install the package, along with all dependencies required for all environments. Be careful, scigym is growing, and this method may install a large number of packages. To view all packages that will be installed during a full install, see the <code>requirements.txt</code> file in the root directory. If you wish to perform a full installation you can run:</p>\n<pre>pip install scigym<span class=\"o\">[</span><span class=\"s1\">'all'</span><span class=\"o\">]</span>\n</pre>\n<p>or</p>\n<pre>git clone https://github.com/hendrikpn/scigym.git\n<span class=\"nb\">cd</span> scigym\npip install -e .<span class=\"o\">[</span><span class=\"s1\">'all'</span><span class=\"o\">]</span>\n</pre>\n<h2>Available Environments</h2>\n<p>At this point we have the following environments available for you to play with:</p>\n<ul>\n<li><a href=\"https://github.com/HendrikPN/scigym/tree/master/scigym/envs/quantum_physics/quantum_computing/surfacecode_decoding\" rel=\"nofollow\"><code>surfacecode-decoding</code></a></li>\n<li><a href=\"https://github.com/HendrikPN/scigym/tree/master/scigym/envs/quantum_physics/quantum_computing/teleportation\" rel=\"nofollow\"><code>teleportation</code></a></li>\n</ul>\n<h2>What's New</h2>\n<ul>\n<li>2019-08-30 This is <code>scigym</code> version 0.0.2!</li>\n<li>2019-08-30 <code>scigym</code> is now available as a package on <a href=\"https://pypi.org/project/scigym/\" rel=\"nofollow\">PyPI</a>.</li>\n<li>2019-08-06 Added <a href=\"https://travis-ci.org/HendrikPN/scigym\" rel=\"nofollow\">Travis-CI</a>.</li>\n<li>2019-08-06: Added <a href=\"https://github.com/HendrikPN/scigym/tree/master/scigym/envs/quantum_physics/quantum_computing/teleportation\" rel=\"nofollow\">teleportation</a> environment.</li>\n<li>2019-07-21: Added standardized unit testing for all scigym environments.</li>\n<li>2019-03-04: Added <a href=\"https://github.com/R-Sweke/gym-surfacecode\" rel=\"nofollow\">surfacecode</a> environment.</li>\n<li>2019-02-09: Initial commit. Hello world :)</li>\n</ul>\n\n          </div>"}, "last_serial": 5760933, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "efb4c794d6a1755d736abfa028bbc365", "sha256": "8f1e16908f70110f655f7971a63f90af4e15d9a8c842878f4018db2612ed9198"}, "downloads": -1, "filename": "scigym-0.0.1.tar.gz", "has_sig": false, "md5_digest": "efb4c794d6a1755d736abfa028bbc365", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13550374, "upload_time": "2019-08-30T12:51:03", "upload_time_iso_8601": "2019-08-30T12:51:03.590854Z", "url": "https://files.pythonhosted.org/packages/5c/fb/f87dadbd7f71c5f12dbea3e1bd77270f32f526849124be4366c6ca1f57fd/scigym-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "b10f5760f43fa0ebc7013de1c834d95e", "sha256": "66802bc21a01d1bc7c87e39c90adc40328f545e8188aec219d291eb24505eb1b"}, "downloads": -1, "filename": "scigym-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b10f5760f43fa0ebc7013de1c834d95e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13552686, "upload_time": "2019-08-30T15:46:43", "upload_time_iso_8601": "2019-08-30T15:46:43.964268Z", "url": "https://files.pythonhosted.org/packages/33/92/9f3beabf17d0ceb6a84c7b383f2e504d3614bba8a9e72434270d715fb46b/scigym-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b10f5760f43fa0ebc7013de1c834d95e", "sha256": "66802bc21a01d1bc7c87e39c90adc40328f545e8188aec219d291eb24505eb1b"}, "downloads": -1, "filename": "scigym-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b10f5760f43fa0ebc7013de1c834d95e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13552686, "upload_time": "2019-08-30T15:46:43", "upload_time_iso_8601": "2019-08-30T15:46:43.964268Z", "url": "https://files.pythonhosted.org/packages/33/92/9f3beabf17d0ceb6a84c7b383f2e504d3614bba8a9e72434270d715fb46b/scigym-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:38 2020"}