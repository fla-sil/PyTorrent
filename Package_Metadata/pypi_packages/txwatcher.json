{"info": {"author": "Thomas Sileo", "author_email": "thomas.sileo@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Programming Language :: Python"], "description": "===========\n TxWatcher\n===========\n\nA little Python utility that lets you monitor Bitcoin addresses through `Blockchain Websocket API <http://blockchain.info/api/api_websocket>`_ and perform custom callbacks.\n\n\n.. image:: https://pypip.in/v/txwatcher/badge.png\n        :target: https://crate.io/packages/txwatcher\n\n.. image:: https://pypip.in/d/txwatcher/badge.png\n        :target: https://crate.io/packages/txwatcher\n\n\nInstallation\n============\n\n.. code-block::\n\n    $ pip install txwatcher\n\n\nQuickStart\n==========\n\n.. code-block:: python\n\n\tfrom txwatcher import TxWatcher\n\n\tw = TxWatcher(['18eGUUxUsSetQYxJcQXEQTjSCUETEFeA4E'])\n\n\tdef tx_printer(tx):\n\t\tprint(tx)\n\n\t# You can add as many callbacks as you want\n\tw.on_tx += tx_printer\n\n\tw.run_forever()\n\t# or\n\timport thread\n\tthread.start_new_thread(w.run_forever, ())\n\t\n\t# Do some work\n\n\tw.add_addresses(*['16xg9kBKUR2S6bmyccCyPichCpMNMPATAH'])\n\n\nTransactions format\n-------------------\n\n.. code-block:: python\n\n\t{\n\t    \"op\": \"utx\",\n\t    \"x\": {\n\t        \"hash\": \"f6c51463ea867ce58588fec2a77e9056046657b984fd28b1482912cdadd16374\",\n\t        \"ver\": 1,\n\t        \"vin_sz\": 4,\n\t        \"vout_sz\": 2,\n\t        \"lock_time\": \"Unavailable\",\n\t        \"size\": 796,\n\t        \"relayed_by\": \"209.15.238.250\",\n\t        \"tx_index\": 3187820,\n\t        \"time\": 1331300839,\n\t        \"inputs\": [\n\t            {\n\t                \"prev_out\": {\n\t                    \"value\": 10000000,\n\t                    \"type\": 0,\n\t                    \"addr\": \"12JSirdrJnQ8QWUaGZGiBPBYD19LxSPXho\"\n\t                }\n\t            }\n\t        ],\n\t        \"out\": [\n\t            {\n\t                \"value\": 2800000000,\n\t                \"type\": 0,\n\t                \"addr\": \"1FzzMfNt46cBeS41r6WHDH1iqxSyzmxChw\"\n\t            }\n\t        ]\n\t    }\n\t}\n\n\nMisc\n----\n\nUsing TxWatcher within Flask\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can start TxWatcher in a separate thread and have it running within your Flask app (or any Python web framework).\n\n.. code-block:: python\n\n\tfrom flask import Flask\n\tapp = Flask(__name__)\n\n\t@app.route(\"/\")\n\tdef hello():\n\t    return \"Hello World!\"\n\n\tif __name__ == \"__main__\":\n\t    #\u00a0First, start TxWatcher\n\t    tw = TxWatcher([a['address'] for a in col_urls.find()])\n\t    tw.on_tx += new_tx\n\n\t    thread.start_new_thread(tw.run_forever, ())\n\n\t    # Then, start the Flask app\n\t    app.run()\n\n\nChangelog\n=========\n\nSee CHANGES.rst.\n\n\nContribution\n============\n\nFeel free to submit a pull request!\n\n\nDonation\n========\n\nIf you like my work, please consider donating:\n\nBTC 18eGUUxUsSetQYxJcQXEQTjSCUETEFeA4E\n\n\nLicense (MIT)\n=============\n\nCopyright (c) 2013 Thomas Sileo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tsileo/txwatcher", "keywords": "txwatcher bitcoin", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "txwatcher", "package_url": "https://pypi.org/project/txwatcher/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/txwatcher/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/tsileo/txwatcher"}, "release_url": "https://pypi.org/project/txwatcher/0.1.2/", "requires_dist": null, "requires_python": null, "summary": ".", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A little Python utility that lets you monitor Bitcoin addresses through <a href=\"http://blockchain.info/api/api_websocket\" rel=\"nofollow\">Blockchain Websocket API</a> and perform custom callbacks.</p>\n<a href=\"https://crate.io/packages/txwatcher\" rel=\"nofollow\"><img alt=\"https://pypip.in/v/txwatcher/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/48eb9ccf2ffeb828af86e46e2a909dd824c3584d/68747470733a2f2f70797069702e696e2f762f7478776174636865722f62616467652e706e67\"></a>\n<a href=\"https://crate.io/packages/txwatcher\" rel=\"nofollow\"><img alt=\"https://pypip.in/d/txwatcher/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/98b4330fee6c10c0b595ef284724f8d74dcc4b54/68747470733a2f2f70797069702e696e2f642f7478776174636865722f62616467652e706e67\"></a>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install txwatcher\n</pre>\n</div>\n<div id=\"quickstart\">\n<h2>QuickStart</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">txwatcher</span> <span class=\"kn\">import</span> <span class=\"n\">TxWatcher</span>\n\n<span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">TxWatcher</span><span class=\"p\">([</span><span class=\"s1\">'18eGUUxUsSetQYxJcQXEQTjSCUETEFeA4E'</span><span class=\"p\">])</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">tx_printer</span><span class=\"p\">(</span><span class=\"n\">tx</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tx</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You can add as many callbacks as you want</span>\n<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">on_tx</span> <span class=\"o\">+=</span> <span class=\"n\">tx_printer</span>\n\n<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n<span class=\"c1\"># or</span>\n<span class=\"kn\">import</span> <span class=\"nn\">thread</span>\n<span class=\"n\">thread</span><span class=\"o\">.</span><span class=\"n\">start_new_thread</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">,</span> <span class=\"p\">())</span>\n\n<span class=\"c1\"># Do some work</span>\n\n<span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">add_addresses</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">[</span><span class=\"s1\">'16xg9kBKUR2S6bmyccCyPichCpMNMPATAH'</span><span class=\"p\">])</span>\n</pre>\n<div id=\"transactions-format\">\n<h3>Transactions format</h3>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"op\"</span><span class=\"p\">:</span> <span class=\"s2\">\"utx\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"x\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"hash\"</span><span class=\"p\">:</span> <span class=\"s2\">\"f6c51463ea867ce58588fec2a77e9056046657b984fd28b1482912cdadd16374\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"ver\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"vin_sz\"</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"vout_sz\"</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"lock_time\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Unavailable\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"size\"</span><span class=\"p\">:</span> <span class=\"mi\">796</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"relayed_by\"</span><span class=\"p\">:</span> <span class=\"s2\">\"209.15.238.250\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"tx_index\"</span><span class=\"p\">:</span> <span class=\"mi\">3187820</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"time\"</span><span class=\"p\">:</span> <span class=\"mi\">1331300839</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"inputs\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">\"prev_out\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s2\">\"value\"</span><span class=\"p\">:</span> <span class=\"mi\">10000000</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"addr\"</span><span class=\"p\">:</span> <span class=\"s2\">\"12JSirdrJnQ8QWUaGZGiBPBYD19LxSPXho\"</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">],</span>\n        <span class=\"s2\">\"out\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">\"value\"</span><span class=\"p\">:</span> <span class=\"mi\">2800000000</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"addr\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1FzzMfNt46cBeS41r6WHDH1iqxSyzmxChw\"</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"misc\">\n<h3>Misc</h3>\n<h3 id=\"using-txwatcher-within-flask\"><span class=\"section-subtitle\">Using TxWatcher within Flask</span></h3>\n<p>You can start TxWatcher in a separate thread and have it running within your Flask app (or any Python web framework).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s2\">\"Hello World!\"</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"c1\">#\u00a0First, start TxWatcher</span>\n    <span class=\"n\">tw</span> <span class=\"o\">=</span> <span class=\"n\">TxWatcher</span><span class=\"p\">([</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"s1\">'address'</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"n\">col_urls</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">()])</span>\n    <span class=\"n\">tw</span><span class=\"o\">.</span><span class=\"n\">on_tx</span> <span class=\"o\">+=</span> <span class=\"n\">new_tx</span>\n\n    <span class=\"n\">thread</span><span class=\"o\">.</span><span class=\"n\">start_new_thread</span><span class=\"p\">(</span><span class=\"n\">tw</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">,</span> <span class=\"p\">())</span>\n\n    <span class=\"c1\"># Then, start the Flask app</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p>See CHANGES.rst.</p>\n</div>\n<div id=\"contribution\">\n<h2>Contribution</h2>\n<p>Feel free to submit a pull request!</p>\n</div>\n<div id=\"donation\">\n<h2>Donation</h2>\n<p>If you like my work, please consider donating:</p>\n<p>BTC 18eGUUxUsSetQYxJcQXEQTjSCUETEFeA4E</p>\n</div>\n<div id=\"license-mit\">\n<h2>License (MIT)</h2>\n<p>Copyright (c) 2013 Thomas Sileo</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n</div>\n\n          </div>"}, "last_serial": 893412, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4f536f27b42ef1d277575fc01d252ef5", "sha256": "3964a2630058b41dff71b31fbc95c0070083494cd0ef2006dc7b59ed0c04debb"}, "downloads": -1, "filename": "txwatcher-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4f536f27b42ef1d277575fc01d252ef5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3923, "upload_time": "2013-10-10T08:24:03", "upload_time_iso_8601": "2013-10-10T08:24:03.619295Z", "url": "https://files.pythonhosted.org/packages/59/be/ff571be00486b17dc2653dad8d3aa06fcce039fb8b7332a8b769cdbe7966/txwatcher-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b1dbd445f813f22be21131c20fe2f3cf", "sha256": "88ac378a11a29fe5ee32e4a4cd3bb2b4ecd08c0cf25b3f680371a1a502afb45e"}, "downloads": -1, "filename": "txwatcher-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b1dbd445f813f22be21131c20fe2f3cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4150, "upload_time": "2013-10-11T19:59:42", "upload_time_iso_8601": "2013-10-11T19:59:42.680680Z", "url": "https://files.pythonhosted.org/packages/d4/89/b8f38bb5288dd624ffb9a6ea30426aaa52c23aa01112c8f8fb916852ed67/txwatcher-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "dc8f1b1c8656e62cef0ea9f7cbaa70b4", "sha256": "b577ead82d0b7ddc999085ba18f7fd0b46e37768179a3ebf935d136922c3372f"}, "downloads": -1, "filename": "txwatcher-0.1.2.tar.gz", "has_sig": false, "md5_digest": "dc8f1b1c8656e62cef0ea9f7cbaa70b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4348, "upload_time": "2013-10-13T14:46:19", "upload_time_iso_8601": "2013-10-13T14:46:19.946649Z", "url": "https://files.pythonhosted.org/packages/a0/35/70633b8ab0cd34f1ac12651f6b80def7fc03d94847f819ebd1ecdbe65d06/txwatcher-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dc8f1b1c8656e62cef0ea9f7cbaa70b4", "sha256": "b577ead82d0b7ddc999085ba18f7fd0b46e37768179a3ebf935d136922c3372f"}, "downloads": -1, "filename": "txwatcher-0.1.2.tar.gz", "has_sig": false, "md5_digest": "dc8f1b1c8656e62cef0ea9f7cbaa70b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4348, "upload_time": "2013-10-13T14:46:19", "upload_time_iso_8601": "2013-10-13T14:46:19.946649Z", "url": "https://files.pythonhosted.org/packages/a0/35/70633b8ab0cd34f1ac12651f6b80def7fc03d94847f819ebd1ecdbe65d06/txwatcher-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:01 2020"}