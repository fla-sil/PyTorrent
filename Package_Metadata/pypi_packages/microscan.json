{"info": {"author": "Jonas Neubert", "author_email": "jn@jonasneubert.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: No Input/Output (Daemon)", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: System :: Hardware :: Hardware Drivers"], "description": "# microscan-driver\n\n[![Build Status](https://travis-ci.org/jonemo/microscan-driver.svg?branch=master)](https://travis-ci.org/jonemo/microscan-driver)\n[![PyPI version](https://badge.fury.io/py/microscan.svg)](https://badge.fury.io/py/microscan)\n\nPython driver for Microscan barcode readers\n\nThe author of this software is not affiliated with Microscan Systems Inc.\n\n\"Microscan\" and \"MS3\" are trademarks of Microscan Systems Inc. and are used in this software and its accompanying documentation to the benefit of the trademark owner, with no intention of infringement.\n\n\n## How to install\n\nClone this git repository or download the repository as a [zip package](https://github.com/jonemo/microscan-driver/archive/master.zip) and extract.\nThen, from the root folder of the repository, run\n\n```\n$ python setup.py install\n```\n\nDepending on your setup and environment, you might want to consider doing so inside a [virtualenv](https://virtualenv.pypa.io/).\n\nThis package only has a single requirement (which is automatically installed when running the above command):\nThe [`pyserial` library](https://pythonhosted.org/pyserial/) provides access to the serial port and is implemented in pure Python.\nIn other words: This driver does not use any C extensions and should work in many Python implementations.\n\n\n## How to run unit tests\n\nFrom the root folder of the repo, run:\n\n```\n$ python -m unittest\n```\n\nNo additional dependencies are required.\n\n\n## Supported devices\n\nCurrently, this library aims to implement all features documented in the MS3device user manual (with exceptions listed below).\n\n\n## Not (yet) supported features\n\n### Specific Settings\n\nThe configuration settings listed below are not currently implemented in this library:\n\n* For the Host Port Protocol setting, the values \"Multidrop\", \"User Defined\", and \"User Defined Multidrop\"\n* Matchcode (all functionality described in chapter 7 of the user manual)\n* Configuration settings for the Codabar, Interleaved2Of5, and Pharmacode symbologies\n\nA workaround for applications that require these features, is to send the corresponding configuration strings directly using the `MicroscanDriver.write()` method, for example, to only output symbol data on match, but as soon as data is available:\n\n```\ndriver = MicroscanDriver('COM3')\ndriver.write(b'<K705,1,0>')\ndriver.close()\n```\n\n### General Functionality\n\nNo sanity checking is performed on the combinations of settings in a configuration. Only individual settings and their subsettings are (to limited degree) validated against the specification.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jonemo/microscan-driver", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "microscan", "package_url": "https://pypi.org/project/microscan/", "platform": "", "project_url": "https://pypi.org/project/microscan/", "project_urls": {"Homepage": "https://github.com/jonemo/microscan-driver"}, "release_url": "https://pypi.org/project/microscan/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Python driver from Microscan barcode readers", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># microscan-driver</p>\n<p>[![Build Status](<a href=\"https://travis-ci.org/jonemo/microscan-driver.svg?branch=master)%5D(https://travis-ci.org/jonemo/microscan-driver\" rel=\"nofollow\">https://travis-ci.org/jonemo/microscan-driver.svg?branch=master)](https://travis-ci.org/jonemo/microscan-driver</a>)\n[![PyPI version](<a href=\"https://badge.fury.io/py/microscan.svg)%5D(https://badge.fury.io/py/microscan\" rel=\"nofollow\">https://badge.fury.io/py/microscan.svg)](https://badge.fury.io/py/microscan</a>)</p>\n<p>Python driver for Microscan barcode readers</p>\n<p>The author of this software is not affiliated with Microscan Systems Inc.</p>\n<p>\u201cMicroscan\u201d and \u201cMS3\u201d are trademarks of Microscan Systems Inc. and are used in this software and its accompanying documentation to the benefit of the trademark owner, with no intention of infringement.</p>\n<p>## How to install</p>\n<p>Clone this git repository or download the repository as a [zip package](<a href=\"https://github.com/jonemo/microscan-driver/archive/master.zip\" rel=\"nofollow\">https://github.com/jonemo/microscan-driver/archive/master.zip</a>) and extract.\nThen, from the root folder of the repository, run</p>\n<p><tt>`\n$ python setup.py install\n`</tt></p>\n<p>Depending on your setup and environment, you might want to consider doing so inside a [virtualenv](<a href=\"https://virtualenv.pypa.io/\" rel=\"nofollow\">https://virtualenv.pypa.io/</a>).</p>\n<p>This package only has a single requirement (which is automatically installed when running the above command):\nThe [<cite>pyserial</cite> library](<a href=\"https://pythonhosted.org/pyserial/\" rel=\"nofollow\">https://pythonhosted.org/pyserial/</a>) provides access to the serial port and is implemented in pure Python.\nIn other words: This driver does not use any C extensions and should work in many Python implementations.</p>\n<p>## How to run unit tests</p>\n<p>From the root folder of the repo, run:</p>\n<p><tt>`\n$ python <span class=\"pre\">-m</span> unittest\n`</tt></p>\n<p>No additional dependencies are required.</p>\n<p>## Supported devices</p>\n<p>Currently, this library aims to implement all features documented in the MS3device user manual (with exceptions listed below).</p>\n<p>## Not (yet) supported features</p>\n<p>### Specific Settings</p>\n<p>The configuration settings listed below are not currently implemented in this library:</p>\n<ul>\n<li>For the Host Port Protocol setting, the values \u201cMultidrop\u201d, \u201cUser Defined\u201d, and \u201cUser Defined Multidrop\u201d</li>\n<li>Matchcode (all functionality described in chapter 7 of the user manual)</li>\n<li>Configuration settings for the Codabar, Interleaved2Of5, and Pharmacode symbologies</li>\n</ul>\n<p>A workaround for applications that require these features, is to send the corresponding configuration strings directly using the <cite>MicroscanDriver.write()</cite> method, for example, to only output symbol data on match, but as soon as data is available:</p>\n<p><tt>`\ndriver = <span class=\"pre\">MicroscanDriver('COM3')</span>\n<span class=\"pre\">driver.write(b'&lt;K705,1,0&gt;')</span>\ndriver.close()\n`</tt></p>\n<p>### General Functionality</p>\n<p>No sanity checking is performed on the combinations of settings in a configuration. Only individual settings and their subsettings are (to limited degree) validated against the specification.</p>\n\n          </div>"}, "last_serial": 3840086, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "585074be71f808d00e18fc2047b65acb", "sha256": "3531a8489c3e2d795fe34300a0f2bdecbd52082e418c012a3a4c09304c270ad0"}, "downloads": -1, "filename": "microscan-0.0.1.tar.gz", "has_sig": false, "md5_digest": "585074be71f808d00e18fc2047b65acb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15510, "upload_time": "2017-05-18T16:36:18", "upload_time_iso_8601": "2017-05-18T16:36:18.739967Z", "url": "https://files.pythonhosted.org/packages/4e/37/668e730d82b1782d8993bcaf18443129a0f37dd349117ea268cc05f7fe3f/microscan-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "042082f246a8f930cf977ca5ef5bb0c1", "sha256": "e9a10ea150697bdf27744e4f1bc29e72ed0319431f062c685061c0750dfcc276"}, "downloads": -1, "filename": "microscan-0.0.2.tar.gz", "has_sig": false, "md5_digest": "042082f246a8f930cf977ca5ef5bb0c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15800, "upload_time": "2018-05-07T07:30:35", "upload_time_iso_8601": "2018-05-07T07:30:35.612289Z", "url": "https://files.pythonhosted.org/packages/22/13/8bf28fe3f1c46026185e67496642049355e018301ba665384aba42e3b7a3/microscan-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "042082f246a8f930cf977ca5ef5bb0c1", "sha256": "e9a10ea150697bdf27744e4f1bc29e72ed0319431f062c685061c0750dfcc276"}, "downloads": -1, "filename": "microscan-0.0.2.tar.gz", "has_sig": false, "md5_digest": "042082f246a8f930cf977ca5ef5bb0c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15800, "upload_time": "2018-05-07T07:30:35", "upload_time_iso_8601": "2018-05-07T07:30:35.612289Z", "url": "https://files.pythonhosted.org/packages/22/13/8bf28fe3f1c46026185e67496642049355e018301ba665384aba42e3b7a3/microscan-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:57 2020"}