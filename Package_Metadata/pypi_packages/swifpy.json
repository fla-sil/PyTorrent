{"info": {"author": "koher", "author_email": "koher@koherent.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Topic :: Utilities"], "description": "Swifpy\n======\n\n*Swifpy* makes Python Swifty. It provides some types which have similar\nAPIs with Swift's.\n\n.. code:: python\n\n    from swifpy import Array, Dictionary, Int, Optional, Some, String\n\n    array: Array[Int] = Array([2, 3, 5])\n    squared: Array[Int] = array.map(lambda x: x * x)  # [4, 9, 25]\n    count: Int = array.count  # 3\n\n    dictionary: Dictionary[String, Int] = Dictionary({'a': 2, 'b': 3, 'c': 5})\n    a: Optional[Int] = dictionary['a']  # Optional(2)\n    b: Optional[Int] = dictionary['b']  # Optional(3)\n\n    sum: Optional[Int] = a.flat_map(lambda x: b.map(lambda y: x + y))  # Optional(5)\n\nUsage\n-----\n\nBool, Float, Int, String\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nThey are just type aliases of ``bool``, ``float``, ``int`` and ``str``\nrespectivly.\n\nArray\n~~~~~\n\n.. code:: python\n\n    from swifpy import Array, Int, Optional, Some\n\n    numbers: Array[Int] = Array([2, 3, 5])\n\n    second: Int = numbers[1]    # 3\n    count: Int = numbers.count  # 3\n\n    squared: Array[Int] = numbers.map(lambda x: x * x)             # [4, 9, 25]\n    odd: Array[Int] = numbers.filter(lambda x: x % 2 != 0)         # [3, 5]\n    sum: Array[Int] = numbers.reduce(0, lambda r, x: r + x)        # 10\n    twice: Array[Int] = numbers.flat_map(lambda x: Array([x, x]))  # [2, 2, 3, 3, 5, 5]\n\n    first: Optional[Int] = numbers.first  # Optional(2)\n    third: Optional[Int] = numbers.last   # Optional(5)\n\n    for number in numbers:\n        print(number)\n\nDictionary\n~~~~~~~~~~\n\n.. code:: python\n\n    from swifpy import Dictionary, Int, Optional, Some, String\n\n    dictionary: Dictionary[String, Int] = Dictionary({'a': 2, 'b': 3, 'c': 5})\n\n    a: Optional[Int] = dictionary['a']  # Optional(2)\n    dictionary['d'] = 7\n    count: Int = dictionary.count  # 4\n\n    for key, value in dictionary:\n        print(\"%s -> %d\" % (key, value))\n\nOptional\n~~~~~~~~\n\n.. code:: python\n\n    from swifpy import Int, Nil, Optional, Some, NilError\n\n    a: Optional[Int] = Some(2)\n    b: Optional[Int] = Some(3)\n    n: Optional[Int] = Nil\n\n    if a:\n        print('Reaches here.')\n\n    if not n:\n        print('Reaches here.')\n\n    squared1: Optional[Int] = a.map(lambda x: x * x)                    # Optional(4)\n    squared2: Optional[Int] = n.map(lambda x: x * x)                    # Nil\n    sum1: Optional[Int] = a.flat_map(lambda x: b.map(lambda y: x + y))  # Optional(5)\n    sum2: Optional[Int] = a.flat_map(lambda x: n.map(lambda y: x + y))  # Nil\n\n    unwrapped: Int = a.x  # `!` in Swift: `x` of e*x*clamation marks\n    _ = n.x  # NilError\n\n    # `??` in Swift: `q` of *q*uestion marks\n    coalesced1: Int = a.qq(0)  ## 2\n    coalesced2: Int = n.qq(0)  ## 0\n\nLicense\n-------\n\n`The MIT License <LICENSE>`__\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/koher/swifpy", "keywords": "swift swifty", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "swifpy", "package_url": "https://pypi.org/project/swifpy/", "platform": "", "project_url": "https://pypi.org/project/swifpy/", "project_urls": {"Homepage": "https://github.com/koher/swifpy"}, "release_url": "https://pypi.org/project/swifpy/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Makes Python Swifty", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><em>Swifpy</em> makes Python Swifty. It provides some types which have similar\nAPIs with Swift\u2019s.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">swifpy</span> <span class=\"kn\">import</span> <span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">Dictionary</span><span class=\"p\">,</span> <span class=\"n\">Int</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Some</span><span class=\"p\">,</span> <span class=\"n\">String</span>\n\n<span class=\"n\">array</span><span class=\"p\">:</span> <span class=\"n\">Array</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"n\">squared</span><span class=\"p\">:</span> <span class=\"n\">Array</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">)</span>  <span class=\"c1\"># [4, 9, 25]</span>\n<span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"n\">Int</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"o\">.</span><span class=\"n\">count</span>  <span class=\"c1\"># 3</span>\n\n<span class=\"n\">dictionary</span><span class=\"p\">:</span> <span class=\"n\">Dictionary</span><span class=\"p\">[</span><span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Dictionary</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'c'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">})</span>\n<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">dictionary</span><span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">]</span>  <span class=\"c1\"># Optional(2)</span>\n<span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">dictionary</span><span class=\"p\">[</span><span class=\"s1\">'b'</span><span class=\"p\">]</span>  <span class=\"c1\"># Optional(3)</span>\n\n<span class=\"nb\">sum</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">flat_map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span><span class=\"p\">))</span>  <span class=\"c1\"># Optional(5)</span>\n</pre>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"bool-float-int-string\">\n<h3>Bool, Float, Int, String</h3>\n<p>They are just type aliases of <tt>bool</tt>, <tt>float</tt>, <tt>int</tt> and <tt>str</tt>\nrespectivly.</p>\n</div>\n<div id=\"array\">\n<h3>Array</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">swifpy</span> <span class=\"kn\">import</span> <span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">Int</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Some</span>\n\n<span class=\"n\">numbers</span><span class=\"p\">:</span> <span class=\"n\">Array</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])</span>\n\n<span class=\"n\">second</span><span class=\"p\">:</span> <span class=\"n\">Int</span> <span class=\"o\">=</span> <span class=\"n\">numbers</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>    <span class=\"c1\"># 3</span>\n<span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"n\">Int</span> <span class=\"o\">=</span> <span class=\"n\">numbers</span><span class=\"o\">.</span><span class=\"n\">count</span>  <span class=\"c1\"># 3</span>\n\n<span class=\"n\">squared</span><span class=\"p\">:</span> <span class=\"n\">Array</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numbers</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">)</span>             <span class=\"c1\"># [4, 9, 25]</span>\n<span class=\"n\">odd</span><span class=\"p\">:</span> <span class=\"n\">Array</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numbers</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>         <span class=\"c1\"># [3, 5]</span>\n<span class=\"nb\">sum</span><span class=\"p\">:</span> <span class=\"n\">Array</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numbers</span><span class=\"o\">.</span><span class=\"n\">reduce</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">r</span> <span class=\"o\">+</span> <span class=\"n\">x</span><span class=\"p\">)</span>        <span class=\"c1\"># 10</span>\n<span class=\"n\">twice</span><span class=\"p\">:</span> <span class=\"n\">Array</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numbers</span><span class=\"o\">.</span><span class=\"n\">flat_map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Array</span><span class=\"p\">([</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">]))</span>  <span class=\"c1\"># [2, 2, 3, 3, 5, 5]</span>\n\n<span class=\"n\">first</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numbers</span><span class=\"o\">.</span><span class=\"n\">first</span>  <span class=\"c1\"># Optional(2)</span>\n<span class=\"n\">third</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">numbers</span><span class=\"o\">.</span><span class=\"n\">last</span>   <span class=\"c1\"># Optional(5)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">number</span> <span class=\"ow\">in</span> <span class=\"n\">numbers</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"dictionary\">\n<h3>Dictionary</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">swifpy</span> <span class=\"kn\">import</span> <span class=\"n\">Dictionary</span><span class=\"p\">,</span> <span class=\"n\">Int</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Some</span><span class=\"p\">,</span> <span class=\"n\">String</span>\n\n<span class=\"n\">dictionary</span><span class=\"p\">:</span> <span class=\"n\">Dictionary</span><span class=\"p\">[</span><span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Dictionary</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'c'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">})</span>\n\n<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">dictionary</span><span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">]</span>  <span class=\"c1\"># Optional(2)</span>\n<span class=\"n\">dictionary</span><span class=\"p\">[</span><span class=\"s1\">'d'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">7</span>\n<span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"n\">Int</span> <span class=\"o\">=</span> <span class=\"n\">dictionary</span><span class=\"o\">.</span><span class=\"n\">count</span>  <span class=\"c1\"># 4</span>\n\n<span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">dictionary</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">%s</span><span class=\"s2\"> -&gt; </span><span class=\"si\">%d</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"optional\">\n<h3>Optional</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">swifpy</span> <span class=\"kn\">import</span> <span class=\"n\">Int</span><span class=\"p\">,</span> <span class=\"n\">Nil</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Some</span><span class=\"p\">,</span> <span class=\"n\">NilError</span>\n\n<span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Some</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Some</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Nil</span>\n\n<span class=\"k\">if</span> <span class=\"n\">a</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Reaches here.'</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">n</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Reaches here.'</span><span class=\"p\">)</span>\n\n<span class=\"n\">squared1</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">)</span>                    <span class=\"c1\"># Optional(4)</span>\n<span class=\"n\">squared2</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">)</span>                    <span class=\"c1\"># Nil</span>\n<span class=\"n\">sum1</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">flat_map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span><span class=\"p\">))</span>  <span class=\"c1\"># Optional(5)</span>\n<span class=\"n\">sum2</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">flat_map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span><span class=\"p\">))</span>  <span class=\"c1\"># Nil</span>\n\n<span class=\"n\">unwrapped</span><span class=\"p\">:</span> <span class=\"n\">Int</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">x</span>  <span class=\"c1\"># `!` in Swift: `x` of e*x*clamation marks</span>\n<span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">x</span>  <span class=\"c1\"># NilError</span>\n\n<span class=\"c1\"># `??` in Swift: `q` of *q*uestion marks</span>\n<span class=\"n\">coalesced1</span><span class=\"p\">:</span> <span class=\"n\">Int</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">qq</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>  <span class=\"c1\">## 2</span>\n<span class=\"n\">coalesced2</span><span class=\"p\">:</span> <span class=\"n\">Int</span> <span class=\"o\">=</span> <span class=\"n\">n</span><span class=\"o\">.</span><span class=\"n\">qq</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>  <span class=\"c1\">## 0</span>\n</pre>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><a href=\"LICENSE\" rel=\"nofollow\">The MIT License</a></p>\n</div>\n\n          </div>"}, "last_serial": 2649714, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "107c8d1e9d96a31cb58ea9847fdc05c1", "sha256": "4cb60f5e081539b5b2dab2464d9117c77a2a5e0b5351cf60c48f9f2351689e31"}, "downloads": -1, "filename": "swifpy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "107c8d1e9d96a31cb58ea9847fdc05c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5219, "upload_time": "2017-02-17T14:53:57", "upload_time_iso_8601": "2017-02-17T14:53:57.725878Z", "url": "https://files.pythonhosted.org/packages/9b/2f/89b0c8a177fd9a7052c7520957cee45be03a4114b843e2494a4a67fcc5f2/swifpy-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "107c8d1e9d96a31cb58ea9847fdc05c1", "sha256": "4cb60f5e081539b5b2dab2464d9117c77a2a5e0b5351cf60c48f9f2351689e31"}, "downloads": -1, "filename": "swifpy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "107c8d1e9d96a31cb58ea9847fdc05c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5219, "upload_time": "2017-02-17T14:53:57", "upload_time_iso_8601": "2017-02-17T14:53:57.725878Z", "url": "https://files.pythonhosted.org/packages/9b/2f/89b0c8a177fd9a7052c7520957cee45be03a4114b843e2494a4a67fcc5f2/swifpy-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:31 2020"}