{"info": {"author": "Souheil Chelfouh", "author_email": "trollfot@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Other Audience", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "*****************************\nmenhir.contenttype.photoalbum\n*****************************\n\n``menhir.contenttype.photoalbum`` provides a single content type\nuseable to display images as a collection. The content type has two\ndifferent rendering views, allowing to render the images as static\nthumbnails or as an animated gallery.\n\nInterfaces\n==========\n\nThe ``menhir.contenttype.photoalbum`` `IPhotoAlbum` interface extends\n`IDescriptiveSchema` from ``dolmen.app.content`` and `IContainer` from\n``zope.container``::\n\n  >>> from zope.container.interfaces import IContainer\n  >>> from dolmen.app.content import IDescriptiveSchema\n  >>> from menhir.contenttype.photoalbum import IPhotoAlbum\n\n  >>> IPhotoAlbum.isOrExtends(IContainer)\n  True\n\n  >>> IPhotoAlbum.isOrExtends(IDescriptiveSchema)\n  True\n\nThis interface is applied as a schema for the `PhotoAlbum`::\n\n  >>> from dolmen.content import schema\n  >>> from menhir.contenttype.photoalbum import PhotoAlbum\n  >>> schema.bind().get(PhotoAlbum)\n  [<InterfaceClass menhir.contenttype.photoalbum.album.IPhotoAlbum>]\n\nThe `IPhotoAlbum` interface defines a containership constraint,\nallowing only `IImage` contents, from ``menhir.contenttype.image``::\n\n  >>> album = PhotoAlbum(title=u\"My nice images\")\n\n  >>> from zope.container.constraints import checkObject\n  >>> checkObject(album, 'temporary', object())\n  Traceback (most recent call last):\n  ...\n  InvalidItemType: (<menhir.contenttype.photoalbum.album.PhotoAlbum ...>,\n  <object object at ...>, (<InterfaceClass menhir.contenttype...IImage>,))\n\nA `PhotoAlbum` object provides the `IPhotoAlbum` interface but also\nthe `IViewSelector` interface, defining the name of the view used to\nrender the object::\n\n  >>> IPhotoAlbum.providedBy(album)\n  True\n\n  >>> from dolmen.app.viewselector import IViewSelector\n  >>> IViewSelector.providedBy(album)\n  True\n\n\nFactory\n=======\n\nThe factory is protected by a common ``dolmen.app.security`` right::\n\n  >>> from dolmen.content import require\n  >>> print require.bind().get(album)\n  dolmen.content.Add\n\n\nIcon\n====\n\nThe content registers an icon, thanks to the ``dolmen.app.content``\npackage::\n\n  >>> from zope.component import getMultiAdapter\n  >>> from zope.publisher.browser import TestRequest\n\n  >>> request = TestRequest()\n  >>> icon = getMultiAdapter((album, request), name=\"icon\")\n  >>> print icon\n  <zope.browserresource.icon.IconView object at ...>\n\n\nPopulation\n==========\n\n  >>> import os.path\n  >>> from menhir.contenttype.image import Image\n\n  >>> testpath = os.path.join(os.path.dirname(__file__), 'tests')\n  >>> path1 = os.path.join(testpath, 'dolmen.png')\n  >>> path2 = os.path.join(testpath, 'dolmen-test-site.png')\n\n  >>> imagefile = open(path1)\n  >>> image1 = Image(title=u\"Logo\", image=imagefile)\n  >>> imagefile.close()\n\n  >>> imagefile = open(path2)\n  >>> image2 = Image(title=u\"Example\", image=imagefile)\n  >>> imagefile.close()\n\n  >>> from zope.component.hooks import getSite\n  >>> site = getSite()\n  >>> site['album'] = album\n  >>> site['album']['dolmen_logo'] = image1\n  >>> site['album']['dolmen_site_example'] = image2\n\n\nViews\n=====\n\nThumbnails view\n---------------\n\n  >>> print album.selected_view\t\n  thumbnails_view\n\n  >>> import fanstatic\n  >>> fanstatic.init_needed()\n  <fanstatic.core.NeededResources object at ...>\n\n  >>> index = getMultiAdapter((album, request), name=\"index\")\n\n  >>> index.update()\n  >>> print index.content()\n  <h1>My nice images</h1>\n  <div class=\"photo-album\">   \n    <div class=\"gallery-thumbs\">\n       <ul class=\"thumbs noscript\">\n         <li>\n    \t   <a class=\"thumb image-link\" \n              href=\"http://127.0.0.1/album/dolmen_logo/++thumbnail++image.preview\"\n              title=\"Logo\" rel=\"gallery-...\">\n    \t      <img src=\"http://127.0.0.1/album/dolmen_logo/++thumbnail++image.square\"\n                   title=\"Logo\" alt=\"Logo\" />\n    \t   </a>\n        </li>\n        <li>\n    \t   <a class=\"thumb image-link\"\n              href=\"http://127.0.0.1/album/dolmen_site_example/++thumbnail++image.preview\"\n              title=\"Example\" rel=\"gallery-...\">\n    \t      <img src=\"http://127.0.0.1/album/dolmen_site_example/++thumbnail++image.square\"\n                   title=\"Example\" alt=\"Example\" />\n    \t  </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  >>> fanstatic.get_needed().resources()\n  [<Resource 'css/slimbox2.css' in library 'jquery_slimbox'>,\n   <Resource 'gallery.css' in library 'photoalbum.resources'>,\n   <Resource 'jquery.js' in library 'jquery'>,\n   <Resource 'js/slimbox2.js' in library 'jquery_slimbox'>,\n   <Resource 'popup.js' in library 'menhir.contenttype.image'>]\n\n\nAnimated view\n-------------\n\n  >>> album.selected_view = \"gallery_view\"\n  \n  >>> fanstatic.init_needed()\n  <fanstatic.core.NeededResources object at ...>\n\n  >>> index = getMultiAdapter((album, request), name=\"index\")\n\n  >>> index.update()\n  >>> print index.content()\n  <h1>My nice images</h1>\n  <div class=\"photo-album\">   \n    <div class=\"gallery-thumbs navigation\">\n      <ul class=\"thumbs noscript\">\n        <li style=\"opacity: 0.67\">\n    \t  <a class=\"thumb\"\n             href=\"http://127.0.0.1/album/dolmen_logo/++thumbnail++image.preview\"\n\t     title=\"Logo\">\n  \t     <img src=\"http://127.0.0.1/album/dolmen_logo/++thumbnail++image.square\"\n                  title=\"Logo\" alt=\"Logo\" />\n    \t  </a>\n    \t  <div class=\"caption\">Logo</div>\n    \t</li>\n    \t<li style=\"opacity: 0.67\">\n    \t  <a class=\"thumb\"\n             href=\"http://127.0.0.1/album/dolmen_site_example/++thumbnail++image.preview\"\n\t     title=\"Example\">\n    \t     <img src=\"http://127.0.0.1/album/dolmen_site_example/++thumbnail++image.square\"\n                  title=\"Example\" alt=\"Example\" />\n    \t  </a>\n    \t  <div class=\"caption\">Example</div>\n    \t</li>\n      </ul>\n    </div>\n    <div class=\"gallery\">\n      <div class=\"controls\"></div>\n      <div class=\"loader\"></div>\n      <div class=\"slideshow\"></div>\n      <div class=\"caption\"></div>\n    </div>    \n    <div class=\"gallery-footer\" />\n  </div>\n\n  >>> fanstatic.get_needed().resources()\n  [<Resource 'gallery.css' in library 'photoalbum.resources'>,\n   <Resource 'jquery.js' in library 'jquery'>,\n   <Resource 'jquery.galleriffic.js' in library 'galleriffic'>,\n   <Resource 'gallery.js' in library 'photoalbum.resources'>]\n\n\nChangelog\n=========\n\n0.4 (2011-02-14)\n----------------\n\n* The schema now inherits from `IDescriptiveSchema` from\n  ``dolmen.app.content`` and no longer from `IBaseContent` from\n  ``dolmen.content``. This adds a `description` attribute along with\n  the already existing `title`.\n\n\n0.3 (2011-02-02)\n----------------\n\n* Fixed the animated gallery page for Galleriffic 2.0.1-1.\n\n\n0.2 (2011-02-02)\n----------------\n\n* Added missing resources entry point.\n\n* Updated for Grok 1.3.\n\n\n0.1 (2011-01-19)\n----------------\n\n* Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.dolmen-project.org", "keywords": "Grok Zope3 CMS Dolmen", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "menhir.contenttype.photoalbum", "package_url": "https://pypi.org/project/menhir.contenttype.photoalbum/", "platform": "Any", "project_url": "https://pypi.org/project/menhir.contenttype.photoalbum/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.dolmen-project.org"}, "release_url": "https://pypi.org/project/menhir.contenttype.photoalbum/0.4/", "requires_dist": null, "requires_python": null, "summary": "Dolmen contenttype extension : photoalbum", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>menhir.contenttype.photoalbum</tt> provides a single content type\nuseable to display images as a collection. The content type has two\ndifferent rendering views, allowing to render the images as static\nthumbnails or as an animated gallery.</p>\n<div id=\"interfaces\">\n<h2>Interfaces</h2>\n<p>The <tt>menhir.contenttype.photoalbum</tt> <cite>IPhotoAlbum</cite> interface extends\n<cite>IDescriptiveSchema</cite> from <tt>dolmen.app.content</tt> and <cite>IContainer</cite> from\n<tt>zope.container</tt>:</p>\n<pre>&gt;&gt;&gt; from zope.container.interfaces import IContainer\n&gt;&gt;&gt; from dolmen.app.content import IDescriptiveSchema\n&gt;&gt;&gt; from menhir.contenttype.photoalbum import IPhotoAlbum\n\n&gt;&gt;&gt; IPhotoAlbum.isOrExtends(IContainer)\nTrue\n\n&gt;&gt;&gt; IPhotoAlbum.isOrExtends(IDescriptiveSchema)\nTrue\n</pre>\n<p>This interface is applied as a schema for the <cite>PhotoAlbum</cite>:</p>\n<pre>&gt;&gt;&gt; from dolmen.content import schema\n&gt;&gt;&gt; from menhir.contenttype.photoalbum import PhotoAlbum\n&gt;&gt;&gt; schema.bind().get(PhotoAlbum)\n[&lt;InterfaceClass menhir.contenttype.photoalbum.album.IPhotoAlbum&gt;]\n</pre>\n<p>The <cite>IPhotoAlbum</cite> interface defines a containership constraint,\nallowing only <cite>IImage</cite> contents, from <tt>menhir.contenttype.image</tt>:</p>\n<pre>&gt;&gt;&gt; album = PhotoAlbum(title=u\"My nice images\")\n\n&gt;&gt;&gt; from zope.container.constraints import checkObject\n&gt;&gt;&gt; checkObject(album, 'temporary', object())\nTraceback (most recent call last):\n...\nInvalidItemType: (&lt;menhir.contenttype.photoalbum.album.PhotoAlbum ...&gt;,\n&lt;object object at ...&gt;, (&lt;InterfaceClass menhir.contenttype...IImage&gt;,))\n</pre>\n<p>A <cite>PhotoAlbum</cite> object provides the <cite>IPhotoAlbum</cite> interface but also\nthe <cite>IViewSelector</cite> interface, defining the name of the view used to\nrender the object:</p>\n<pre>&gt;&gt;&gt; IPhotoAlbum.providedBy(album)\nTrue\n\n&gt;&gt;&gt; from dolmen.app.viewselector import IViewSelector\n&gt;&gt;&gt; IViewSelector.providedBy(album)\nTrue\n</pre>\n</div>\n<div id=\"factory\">\n<h2>Factory</h2>\n<p>The factory is protected by a common <tt>dolmen.app.security</tt> right:</p>\n<pre>&gt;&gt;&gt; from dolmen.content import require\n&gt;&gt;&gt; print require.bind().get(album)\ndolmen.content.Add\n</pre>\n</div>\n<div id=\"icon\">\n<h2>Icon</h2>\n<p>The content registers an icon, thanks to the <tt>dolmen.app.content</tt>\npackage:</p>\n<pre>&gt;&gt;&gt; from zope.component import getMultiAdapter\n&gt;&gt;&gt; from zope.publisher.browser import TestRequest\n\n&gt;&gt;&gt; request = TestRequest()\n&gt;&gt;&gt; icon = getMultiAdapter((album, request), name=\"icon\")\n&gt;&gt;&gt; print icon\n&lt;zope.browserresource.icon.IconView object at ...&gt;\n</pre>\n</div>\n<div id=\"population\">\n<h2>Population</h2>\n<blockquote>\n<pre>&gt;&gt;&gt; import os.path\n&gt;&gt;&gt; from menhir.contenttype.image import Image\n</pre>\n<pre>&gt;&gt;&gt; testpath = os.path.join(os.path.dirname(__file__), 'tests')\n&gt;&gt;&gt; path1 = os.path.join(testpath, 'dolmen.png')\n&gt;&gt;&gt; path2 = os.path.join(testpath, 'dolmen-test-site.png')\n</pre>\n<pre>&gt;&gt;&gt; imagefile = open(path1)\n&gt;&gt;&gt; image1 = Image(title=u\"Logo\", image=imagefile)\n&gt;&gt;&gt; imagefile.close()\n</pre>\n<pre>&gt;&gt;&gt; imagefile = open(path2)\n&gt;&gt;&gt; image2 = Image(title=u\"Example\", image=imagefile)\n&gt;&gt;&gt; imagefile.close()\n</pre>\n<pre>&gt;&gt;&gt; from zope.component.hooks import getSite\n&gt;&gt;&gt; site = getSite()\n&gt;&gt;&gt; site['album'] = album\n&gt;&gt;&gt; site['album']['dolmen_logo'] = image1\n&gt;&gt;&gt; site['album']['dolmen_site_example'] = image2\n</pre>\n</blockquote>\n</div>\n<div id=\"views\">\n<h2>Views</h2>\n<div id=\"thumbnails-view\">\n<h3>Thumbnails view</h3>\n<blockquote>\n<pre>&gt;&gt;&gt; print album.selected_view\nthumbnails_view\n</pre>\n<pre>&gt;&gt;&gt; import fanstatic\n&gt;&gt;&gt; fanstatic.init_needed()\n&lt;fanstatic.core.NeededResources object at ...&gt;\n</pre>\n<pre>&gt;&gt;&gt; index = getMultiAdapter((album, request), name=\"index\")\n</pre>\n<pre>&gt;&gt;&gt; index.update()\n&gt;&gt;&gt; print index.content()\n&lt;h1&gt;My nice images&lt;/h1&gt;\n&lt;div class=\"photo-album\"&gt;\n  &lt;div class=\"gallery-thumbs\"&gt;\n     &lt;ul class=\"thumbs noscript\"&gt;\n       &lt;li&gt;\n         &lt;a class=\"thumb image-link\"\n            href=\"http://127.0.0.1/album/dolmen_logo/++thumbnail++image.preview\"\n            title=\"Logo\" rel=\"gallery-...\"&gt;\n            &lt;img src=\"http://127.0.0.1/album/dolmen_logo/++thumbnail++image.square\"\n                 title=\"Logo\" alt=\"Logo\" /&gt;\n         &lt;/a&gt;\n      &lt;/li&gt;\n      &lt;li&gt;\n         &lt;a class=\"thumb image-link\"\n            href=\"http://127.0.0.1/album/dolmen_site_example/++thumbnail++image.preview\"\n            title=\"Example\" rel=\"gallery-...\"&gt;\n            &lt;img src=\"http://127.0.0.1/album/dolmen_site_example/++thumbnail++image.square\"\n                 title=\"Example\" alt=\"Example\" /&gt;\n        &lt;/a&gt;\n      &lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</pre>\n<pre>&gt;&gt;&gt; fanstatic.get_needed().resources()\n[&lt;Resource 'css/slimbox2.css' in library 'jquery_slimbox'&gt;,\n &lt;Resource 'gallery.css' in library 'photoalbum.resources'&gt;,\n &lt;Resource 'jquery.js' in library 'jquery'&gt;,\n &lt;Resource 'js/slimbox2.js' in library 'jquery_slimbox'&gt;,\n &lt;Resource 'popup.js' in library 'menhir.contenttype.image'&gt;]\n</pre>\n</blockquote>\n</div>\n<div id=\"animated-view\">\n<h3>Animated view</h3>\n<blockquote>\n<pre>&gt;&gt;&gt; album.selected_view = \"gallery_view\"\n</pre>\n<pre>&gt;&gt;&gt; fanstatic.init_needed()\n&lt;fanstatic.core.NeededResources object at ...&gt;\n</pre>\n<pre>&gt;&gt;&gt; index = getMultiAdapter((album, request), name=\"index\")\n</pre>\n<pre>&gt;&gt;&gt; index.update()\n&gt;&gt;&gt; print index.content()\n&lt;h1&gt;My nice images&lt;/h1&gt;\n&lt;div class=\"photo-album\"&gt;\n  &lt;div class=\"gallery-thumbs navigation\"&gt;\n    &lt;ul class=\"thumbs noscript\"&gt;\n      &lt;li style=\"opacity: 0.67\"&gt;\n        &lt;a class=\"thumb\"\n           href=\"http://127.0.0.1/album/dolmen_logo/++thumbnail++image.preview\"\n           title=\"Logo\"&gt;\n           &lt;img src=\"http://127.0.0.1/album/dolmen_logo/++thumbnail++image.square\"\n                title=\"Logo\" alt=\"Logo\" /&gt;\n        &lt;/a&gt;\n        &lt;div class=\"caption\"&gt;Logo&lt;/div&gt;\n      &lt;/li&gt;\n      &lt;li style=\"opacity: 0.67\"&gt;\n        &lt;a class=\"thumb\"\n           href=\"http://127.0.0.1/album/dolmen_site_example/++thumbnail++image.preview\"\n           title=\"Example\"&gt;\n           &lt;img src=\"http://127.0.0.1/album/dolmen_site_example/++thumbnail++image.square\"\n                title=\"Example\" alt=\"Example\" /&gt;\n        &lt;/a&gt;\n        &lt;div class=\"caption\"&gt;Example&lt;/div&gt;\n      &lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/div&gt;\n  &lt;div class=\"gallery\"&gt;\n    &lt;div class=\"controls\"&gt;&lt;/div&gt;\n    &lt;div class=\"loader\"&gt;&lt;/div&gt;\n    &lt;div class=\"slideshow\"&gt;&lt;/div&gt;\n    &lt;div class=\"caption\"&gt;&lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div class=\"gallery-footer\" /&gt;\n&lt;/div&gt;\n</pre>\n<pre>&gt;&gt;&gt; fanstatic.get_needed().resources()\n[&lt;Resource 'gallery.css' in library 'photoalbum.resources'&gt;,\n &lt;Resource 'jquery.js' in library 'jquery'&gt;,\n &lt;Resource 'jquery.galleriffic.js' in library 'galleriffic'&gt;,\n &lt;Resource 'gallery.js' in library 'photoalbum.resources'&gt;]\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.4 (2011-02-14)</h3>\n<ul>\n<li>The schema now inherits from <cite>IDescriptiveSchema</cite> from\n<tt>dolmen.app.content</tt> and no longer from <cite>IBaseContent</cite> from\n<tt>dolmen.content</tt>. This adds a <cite>description</cite> attribute along with\nthe already existing <cite>title</cite>.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.3 (2011-02-02)</h3>\n<ul>\n<li>Fixed the animated gallery page for Galleriffic 2.0.1-1.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.2 (2011-02-02)</h3>\n<ul>\n<li>Added missing resources entry point.</li>\n<li>Updated for Grok 1.3.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1 (2011-01-19)</h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 794697, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9b2d591869d3912089f58a7259cd0721", "sha256": "460bf7559c1701943fa4b388ca7abaf3b82227360d9859a224bdac728b67c463"}, "downloads": -1, "filename": "menhir.contenttype.photoalbum-0.1.tar.gz", "has_sig": false, "md5_digest": "9b2d591869d3912089f58a7259cd0721", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 223884, "upload_time": "2011-01-19T19:15:40", "upload_time_iso_8601": "2011-01-19T19:15:40.374617Z", "url": "https://files.pythonhosted.org/packages/51/13/f1e7e95757c3046220b3c205cbb5d7b298156ea6475557cd99ab7c45f1db/menhir.contenttype.photoalbum-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "d781b652134b2a712918ab0ad23a17f7", "sha256": "39fda64ceb58551e6327ca3d9a2d231596de29d37ea8a4244095bbe511fbf683"}, "downloads": -1, "filename": "menhir.contenttype.photoalbum-0.2.tar.gz", "has_sig": false, "md5_digest": "d781b652134b2a712918ab0ad23a17f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 224133, "upload_time": "2011-02-02T13:58:27", "upload_time_iso_8601": "2011-02-02T13:58:27.334338Z", "url": "https://files.pythonhosted.org/packages/5b/2f/dc8bab6c4423413e3a104710f0471de5fed5fb59b0a3f5d72c9039b5fd19/menhir.contenttype.photoalbum-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "71276388d62765da4caccb3325a94f93", "sha256": "dbe641b34bab50f47c4a67fdad12cec43aaa2708b5bc566e8bd8bbfecd24ed14"}, "downloads": -1, "filename": "menhir.contenttype.photoalbum-0.3.tar.gz", "has_sig": false, "md5_digest": "71276388d62765da4caccb3325a94f93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 224126, "upload_time": "2011-02-02T19:00:25", "upload_time_iso_8601": "2011-02-02T19:00:25.513601Z", "url": "https://files.pythonhosted.org/packages/7e/cf/ceebd011c3b3aa4df68721b5bcae565f33aa8a7e3bcdcca86e87389d9be1/menhir.contenttype.photoalbum-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "9bad13dbd5f1000121da52c37747a61f", "sha256": "df2350791b18d475c9eb2b38c63168b53065ffa0fff960ec059628762f7a7dd8"}, "downloads": -1, "filename": "menhir.contenttype.photoalbum-0.4.tar.gz", "has_sig": false, "md5_digest": "9bad13dbd5f1000121da52c37747a61f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 224502, "upload_time": "2011-02-14T17:23:39", "upload_time_iso_8601": "2011-02-14T17:23:39.267590Z", "url": "https://files.pythonhosted.org/packages/f2/28/7b29156775208079616828b122c3a598581a64f961ebfcf307f1b4344a81/menhir.contenttype.photoalbum-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9bad13dbd5f1000121da52c37747a61f", "sha256": "df2350791b18d475c9eb2b38c63168b53065ffa0fff960ec059628762f7a7dd8"}, "downloads": -1, "filename": "menhir.contenttype.photoalbum-0.4.tar.gz", "has_sig": false, "md5_digest": "9bad13dbd5f1000121da52c37747a61f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 224502, "upload_time": "2011-02-14T17:23:39", "upload_time_iso_8601": "2011-02-14T17:23:39.267590Z", "url": "https://files.pythonhosted.org/packages/f2/28/7b29156775208079616828b122c3a598581a64f961ebfcf307f1b4344a81/menhir.contenttype.photoalbum-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:16 2020"}