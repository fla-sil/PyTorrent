{"info": {"author": "Donald Stufft", "author_email": "donald@e.vilgeni.us", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Utilities"], "description": "Django BlockedEmails\n====================\n\ndjango-blockedemails is a reusable app that provides a form field,\nvalidators, and models that check if an email is being blocked, or\nis disposable/throwaway.\n\nInstallation\n------------\n\nYou can install django-blockedemails with pip by typing::\n\n    pip install django-blockedemails\n    \nOr with easy_install by typing::\n\n    easy_install django-blockedemails\n    \nOr manually by downloading a tarball and typing::\n\n    python setup.py install\n    \nSettings\n--------\n\ndjango-blockedemails adds 3 settings\n\n    Specifies an API_KEY to use with http://www.block-disposable-email.com/::\n\n        BLOCK_DISPOSABLE_EMAIL_API_KEY = \"\" # Defaults to None which disables this validator\n\n    Specifies a different url to use for the block-disposable-email.com api::\n\n        BLOCK_DISPOSABLE_EMAIL_URL = \"\" # Will be string formated with a dictionary with api_key and domain\n\n    Specifies if we should block an email if an exception occurs trying to check block-disposable-email.com::\n\n        BLOCK_EMAIL_ON_URLERROR = False # Defaults to False\n\nUsage\n-----\n\n    To use the formfield simply import it and use it::\n\n        from django import forms\n        from blockedemails.fields import EmailField\n\n        class ExampleForm(forms.Form):\n            email = EmailField()", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/dstufft/django-blockedemails/", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-blockedemails", "package_url": "https://pypi.org/project/django-blockedemails/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-blockedemails/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/dstufft/django-blockedemails/"}, "release_url": "https://pypi.org/project/django-blockedemails/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "A Django reusable app that provides a form field, models and validators for blocking email addresses", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>django-blockedemails is a reusable app that provides a form field,\nvalidators, and models that check if an email is being blocked, or\nis disposable/throwaway.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install django-blockedemails with pip by typing:</p>\n<pre>pip install django-blockedemails\n</pre>\n<p>Or with easy_install by typing:</p>\n<pre>easy_install django-blockedemails\n</pre>\n<p>Or manually by downloading a tarball and typing:</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>django-blockedemails adds 3 settings</p>\n<blockquote>\n<p>Specifies an API_KEY to use with <a href=\"http://www.block-disposable-email.com/\" rel=\"nofollow\">http://www.block-disposable-email.com/</a>:</p>\n<pre>BLOCK_DISPOSABLE_EMAIL_API_KEY = \"\" # Defaults to None which disables this validator\n</pre>\n<p>Specifies a different url to use for the block-disposable-email.com api:</p>\n<pre>BLOCK_DISPOSABLE_EMAIL_URL = \"\" # Will be string formated with a dictionary with api_key and domain\n</pre>\n<p>Specifies if we should block an email if an exception occurs trying to check block-disposable-email.com:</p>\n<pre>BLOCK_EMAIL_ON_URLERROR = False # Defaults to False\n</pre>\n</blockquote>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<blockquote>\n<p>To use the formfield simply import it and use it:</p>\n<pre>from django import forms\nfrom blockedemails.fields import EmailField\n\nclass ExampleForm(forms.Form):\n    email = EmailField()\n</pre>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 635161, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a3772e8c48987edb960e8952869f33a2", "sha256": "6c53e1c4f175a3c27d3cedb980e44e56f0b1a908ff2a5fd967c888cc2d9f0f1b"}, "downloads": -1, "filename": "django-blockedemails-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a3772e8c48987edb960e8952869f33a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3336, "upload_time": "2011-06-10T01:09:51", "upload_time_iso_8601": "2011-06-10T01:09:51.211169Z", "url": "https://files.pythonhosted.org/packages/c8/31/74156effbdba6f8f216e618f5e40e07e1aaa86eca3fdbfe5c6fd2925d693/django-blockedemails-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a3772e8c48987edb960e8952869f33a2", "sha256": "6c53e1c4f175a3c27d3cedb980e44e56f0b1a908ff2a5fd967c888cc2d9f0f1b"}, "downloads": -1, "filename": "django-blockedemails-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a3772e8c48987edb960e8952869f33a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3336, "upload_time": "2011-06-10T01:09:51", "upload_time_iso_8601": "2011-06-10T01:09:51.211169Z", "url": "https://files.pythonhosted.org/packages/c8/31/74156effbdba6f8f216e618f5e40e07e1aaa86eca3fdbfe5c6fd2925d693/django-blockedemails-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:25 2020"}