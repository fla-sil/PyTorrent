{"info": {"author": "Brandon R. Stoner", "author_email": "monokrome@monokro.me", "bugtrack_url": null, "classifiers": [], "description": "cliTunes\n=========\n\nFor now, this is just a command-line interface to iTunes. It's pretty\nsimple, but I am considering making it do a lot of more interesting\nthings as time goes by.\n\nInstallation\n------------\n\nTo install, simply use **pip** or **easy_install**:\n\n    easy_install clitunes\n\nUsage\n-----\n\nPut bin/clitunes somewhere in your path. Now, you can handle playback like\nthis:\n\n    clitunes play\n    clitunes pause\n    clitunes stop\n\nYou can also navigate files like this:\n\n    clitunes rewind\n    clitunes fast forward\n    clitunes resume\n\nor perform a lot of other useful actions:\n\n    clitunes subscribe \\\"http://example.com/podcast.xml\\\"\n\nRunning clitunes without any options will assume that you want to use the\n\"playpause\" command. This will play unless already playing, at which time\nit will pause instead.\n\nTODO\n----\n\n- Figure out how to be smarter about stringifying things. Passing strings to\n  iTunes shouldn't require a user to escape every quote manually.\n\n\n\n0.0.2\n-----\n\n- Fixed error reporting\n- Added ability to perform multi word commands (next track, previous track)\n- Added shortcuts to some operations (ff=fast forward, rw=rewind, next=next\n  track, prev=previous track, etc.)\n\n0.0.1\n-----\n\n- Initial version. Basic play/stop functionality.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "cliTunes", "package_url": "https://pypi.org/project/cliTunes/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cliTunes/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/cliTunes/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "Python wrapper for tmux", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>For now, this is just a command-line interface to iTunes. It\u2019s pretty\nsimple, but I am considering making it do a lot of more interesting\nthings as time goes by.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install, simply use <strong>pip</strong> or <strong>easy_install</strong>:</p>\n<blockquote>\neasy_install clitunes</blockquote>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Put bin/clitunes somewhere in your path. Now, you can handle playback like\nthis:</p>\n<blockquote>\nclitunes play\nclitunes pause\nclitunes stop</blockquote>\n<p>You can also navigate files like this:</p>\n<blockquote>\nclitunes rewind\nclitunes fast forward\nclitunes resume</blockquote>\n<p>or perform a lot of other useful actions:</p>\n<blockquote>\nclitunes subscribe \u201c<a href=\"http://example.com/podcast.xml\" rel=\"nofollow\">http://example.com/podcast.xml</a>\u201d</blockquote>\n<p>Running clitunes without any options will assume that you want to use the\n\u201cplaypause\u201d command. This will play unless already playing, at which time\nit will pause instead.</p>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Figure out how to be smarter about stringifying things. Passing strings to\niTunes shouldn\u2019t require a user to escape every quote manually.</li>\n</ul>\n</div>\n<div id=\"id1\">\n<h2>0.0.2</h2>\n<ul>\n<li>Fixed error reporting</li>\n<li>Added ability to perform multi word commands (next track, previous track)</li>\n<li>Added shortcuts to some operations (ff=fast forward, rw=rewind, next=next\ntrack, prev=previous track, etc.)</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>0.0.1</h2>\n<ul>\n<li>Initial version. Basic play/stop functionality.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1080275, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1a622f1daa2bed74684e5ffdac061b5c", "sha256": "72d9740d974cdee42b7fe91fd6b359c29ff55e6a954fe42b5f940c007b587d3e"}, "downloads": -1, "filename": "cliTunes-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1a622f1daa2bed74684e5ffdac061b5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2388, "upload_time": "2013-04-15T06:36:03", "upload_time_iso_8601": "2013-04-15T06:36:03.950745Z", "url": "https://files.pythonhosted.org/packages/d0/18/3c0317c6e4dcb2dc862d9bc4285d0e12ff5562ac945fcd350eb8559951c6/cliTunes-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "79bc16cf3df9ed63154bee7658a2b296", "sha256": "cbc09636a9945ecae4405b848cf93dec8a32a19d208ad62eaa8c1a7064b496e3"}, "downloads": -1, "filename": "cliTunes-0.0.2.tar.gz", "has_sig": false, "md5_digest": "79bc16cf3df9ed63154bee7658a2b296", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2961, "upload_time": "2013-04-15T07:10:07", "upload_time_iso_8601": "2013-04-15T07:10:07.004977Z", "url": "https://files.pythonhosted.org/packages/4d/03/044b40109ffe434894fa4747d73a66bb53598e9dbde786f9ffc069aaa1b8/cliTunes-0.0.2.tar.gz", "yanked": false}], "0.0.3": []}, "urls": [], "timestamp": "Thu May  7 22:18:55 2020"}