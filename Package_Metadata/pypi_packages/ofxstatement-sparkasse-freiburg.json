{"info": {"author": "Omar Kohl", "author_email": "omarkohl@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Office/Business :: Financial :: Accounting", "Topic :: Utilities"], "description": "# ofxstatement plugin for Sparkasse Freiburg-N\u00f6rdlicher Breisgau\n\n[![Build Status](https://travis-ci.org/omarkohl/ofxstatement-sparkasse-freiburg.svg?branch=master)](https://travis-ci.org/omarkohl/ofxstatement-sparkasse-freiburg)\n[![PyPI](https://img.shields.io/pypi/v/ofxstatement-sparkasse-freiburg.svg)](https://pypi.python.org/pypi/ofxstatement-sparkasse-freiburg)\n\nThis is an ofxstatement plugin for the German bank Sparkasse\nFreiburg-N\u00f6rdlicher Breisgau (short: Sparkasse Freiburg).\n\nThis plugin has no affiliation with or endorsement by [Sparkasse\nFreiburg-N\u00f6rdlicher Breisgau](https://www.sparkasse-freiburg.de/). The only\nreason for using the name is to aid people looking for a tool to convert that\nbank's CSV transaction exports to OFX.\n\n[ofxstatement](https://github.com/kedder/ofxstatement) is a tool to convert\nproprietary bank statement to OFX format, suitable for importing to GnuCash.\nPlugin for ofxstatement parses a particular proprietary bank statement format\nand produces common data structure, that is then formatted into an OFX file.\n\nUsers of ofxstatement have developed several plugins for their banks. They are\nlisted on the main [ofxstatement](https://github.com/kedder/ofxstatement) site.\nIf your bank is missing, you can develop your own plugin.\n\n\n## Usage\n\nTo use this plugin install it. For example:\n\n```bash\npip3 install --user ofxstatement-sparkasse-freiburg\n```\n\nEdit the configuration:\n\n```bash\nofxstatement edit-config\n```\n\nAdd something like this:\n\n```\n[sparkasse_freiburg]\nplugin = germany_sparkasse_freiburg\naccount = 123456789\n```\n\n*account* is you bank account number (Kontonummer).\n\nOther possible settings are:\n\n* **encoding:** The encoding of the CSV file (default is Windows 1252 ANSI:\n  cp1252)\n\nThen download the CSV files (CSV-CAMT format) from you online banking account\nand convert it as follows:\n\n```bash\nofxstatement convert -t sparkasse_freiburg EXAMPLE.csv EXAMPLE.ofx\n```\n\nThe resulting .ofx file can then be imported in gnuCash or similar software.\n\n**Note:** Beware that some things (such as balance calculation) were left out\nbecause they are not needed by gnuCash. Open a ticket or send a pull request if\nsomething is missing for your use case.\n\n\n# Development\n\nIt is recommended to use *virtualenv* to make a clean development environment.\n\n```bash\ngit clone https://github.com/omarkohl/ofxstatement-sparkasse-freiburg\ncd ofxstatement-sparkasse-freiburg\nmake venv\nsource .venv/bin/activate\n```\n\nThis will download all the dependencies and install them into your virtual\nenvironment. After this, you should be able to do::\n\n```bash\nofxstatement list-plugins\n```\n\nExpected output:\n\n```\nThe following plugins are available:\n\n  germany_sparkasse_freiburg Plugin for German bank Sparkasse Freiburg\n```\n\n## Tests\n\nExecute:\n\n```bash\nmake test\n```\n\n### Integration tests\n\nPart of the tests are integration (or end to end) tests that test the complete\nconversion from CSV to OFX files. You can find these files under *tests/data* .\nEvery *.csv* file is verified to be converted to the corresponding *.ofx* file.\nAdditionally the *-pretty.xml* files contain a pretty version of the resulting\nOFX (which actually is just XML).\n\nTo add a new .csv example simply include it in said directory and edit\n*tests/test_integration.py* . Set `OVERWRITE_EXPECTED_FILES` to `True` and then\nexecute the tests. Commit the content of *tests/data* .\n\nSince unfortunately the *ofxstatement* config is a global file with no option\nto pass in another path the integration tests overwrite this file before each\ntest and then restore it. This is done using a *pytest* fixture. Running\nintegration tests and any other *ofxstatement* operation at the same time with\nthe same user on the same system is therefore a bad idea.\n\n\n## Improvements\n\nIn general the plugin tries to be simple and not convert any values that are\ncurrently not needed. If something is missing feel free to open an issue or\neven better send a pull requests.\n\nSome things which may be worth modifying:\n\n* The bank_id is currently hardcoded to Sparkasse Freiburg's BIC\n* The currency of the account is also hardcoded to EUR\n* The StatementLine.id (becomes OFX's FITID) is calculated by hashing date,\n  payee, memo and amount and then truncated. FITID should always be unique for\n  the entire account history to detect transaction duplicates.\n* OFX's NAME field (.payee in the code) is made out of the sender/receiver +\n  the subject (Verwendungszweck). This could be made configurable.\n* OFX's MEMO field (.memo in the code) is made out of Buchungstext, Kontonummer\n  and BIC.\n* trntype is currently only ever set to DEBIT or CREDIT. Using 'Buchungstext'\n  it could be improved.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/omarkohl/ofxstatement-sparkasse-freiburg", "keywords": "ofx,banking,statement", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ofxstatement-sparkasse-freiburg", "package_url": "https://pypi.org/project/ofxstatement-sparkasse-freiburg/", "platform": "", "project_url": "https://pypi.org/project/ofxstatement-sparkasse-freiburg/", "project_urls": {"Homepage": "https://github.com/omarkohl/ofxstatement-sparkasse-freiburg"}, "release_url": "https://pypi.org/project/ofxstatement-sparkasse-freiburg/0.0.3/", "requires_dist": ["ofxstatement"], "requires_python": "", "summary": "ofxstatement plugin for German bank Sparkasse Freiburg-N\u00f6rdlicher Breisgau", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ofxstatement plugin for Sparkasse Freiburg-N\u00f6rdlicher Breisgau</h1>\n<p><a href=\"https://travis-ci.org/omarkohl/ofxstatement-sparkasse-freiburg\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b2e402b764ed001ce7c062c0a5e010a5d48cf74e/68747470733a2f2f7472617669732d63692e6f72672f6f6d61726b6f686c2f6f667873746174656d656e742d737061726b617373652d66726569627572672e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/ofxstatement-sparkasse-freiburg\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7050d2bcc031c4daad3f0f50c466cefd42ddd4a9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6f667873746174656d656e742d737061726b617373652d66726569627572672e737667\"></a></p>\n<p>This is an ofxstatement plugin for the German bank Sparkasse\nFreiburg-N\u00f6rdlicher Breisgau (short: Sparkasse Freiburg).</p>\n<p>This plugin has no affiliation with or endorsement by <a href=\"https://www.sparkasse-freiburg.de/\" rel=\"nofollow\">Sparkasse\nFreiburg-N\u00f6rdlicher Breisgau</a>. The only\nreason for using the name is to aid people looking for a tool to convert that\nbank's CSV transaction exports to OFX.</p>\n<p><a href=\"https://github.com/kedder/ofxstatement\" rel=\"nofollow\">ofxstatement</a> is a tool to convert\nproprietary bank statement to OFX format, suitable for importing to GnuCash.\nPlugin for ofxstatement parses a particular proprietary bank statement format\nand produces common data structure, that is then formatted into an OFX file.</p>\n<p>Users of ofxstatement have developed several plugins for their banks. They are\nlisted on the main <a href=\"https://github.com/kedder/ofxstatement\" rel=\"nofollow\">ofxstatement</a> site.\nIf your bank is missing, you can develop your own plugin.</p>\n<h2>Usage</h2>\n<p>To use this plugin install it. For example:</p>\n<pre>pip3 install --user ofxstatement-sparkasse-freiburg\n</pre>\n<p>Edit the configuration:</p>\n<pre>ofxstatement edit-config\n</pre>\n<p>Add something like this:</p>\n<pre><code>[sparkasse_freiburg]\nplugin = germany_sparkasse_freiburg\naccount = 123456789\n</code></pre>\n<p><em>account</em> is you bank account number (Kontonummer).</p>\n<p>Other possible settings are:</p>\n<ul>\n<li><strong>encoding:</strong> The encoding of the CSV file (default is Windows 1252 ANSI:\ncp1252)</li>\n</ul>\n<p>Then download the CSV files (CSV-CAMT format) from you online banking account\nand convert it as follows:</p>\n<pre>ofxstatement convert -t sparkasse_freiburg EXAMPLE.csv EXAMPLE.ofx\n</pre>\n<p>The resulting .ofx file can then be imported in gnuCash or similar software.</p>\n<p><strong>Note:</strong> Beware that some things (such as balance calculation) were left out\nbecause they are not needed by gnuCash. Open a ticket or send a pull request if\nsomething is missing for your use case.</p>\n<h1>Development</h1>\n<p>It is recommended to use <em>virtualenv</em> to make a clean development environment.</p>\n<pre>git clone https://github.com/omarkohl/ofxstatement-sparkasse-freiburg\n<span class=\"nb\">cd</span> ofxstatement-sparkasse-freiburg\nmake venv\n<span class=\"nb\">source</span> .venv/bin/activate\n</pre>\n<p>This will download all the dependencies and install them into your virtual\nenvironment. After this, you should be able to do::</p>\n<pre>ofxstatement list-plugins\n</pre>\n<p>Expected output:</p>\n<pre><code>The following plugins are available:\n\n  germany_sparkasse_freiburg Plugin for German bank Sparkasse Freiburg\n</code></pre>\n<h2>Tests</h2>\n<p>Execute:</p>\n<pre>make <span class=\"nb\">test</span>\n</pre>\n<h3>Integration tests</h3>\n<p>Part of the tests are integration (or end to end) tests that test the complete\nconversion from CSV to OFX files. You can find these files under <em>tests/data</em> .\nEvery <em>.csv</em> file is verified to be converted to the corresponding <em>.ofx</em> file.\nAdditionally the <em>-pretty.xml</em> files contain a pretty version of the resulting\nOFX (which actually is just XML).</p>\n<p>To add a new .csv example simply include it in said directory and edit\n<em>tests/test_integration.py</em> . Set <code>OVERWRITE_EXPECTED_FILES</code> to <code>True</code> and then\nexecute the tests. Commit the content of <em>tests/data</em> .</p>\n<p>Since unfortunately the <em>ofxstatement</em> config is a global file with no option\nto pass in another path the integration tests overwrite this file before each\ntest and then restore it. This is done using a <em>pytest</em> fixture. Running\nintegration tests and any other <em>ofxstatement</em> operation at the same time with\nthe same user on the same system is therefore a bad idea.</p>\n<h2>Improvements</h2>\n<p>In general the plugin tries to be simple and not convert any values that are\ncurrently not needed. If something is missing feel free to open an issue or\neven better send a pull requests.</p>\n<p>Some things which may be worth modifying:</p>\n<ul>\n<li>The bank_id is currently hardcoded to Sparkasse Freiburg's BIC</li>\n<li>The currency of the account is also hardcoded to EUR</li>\n<li>The StatementLine.id (becomes OFX's FITID) is calculated by hashing date,\npayee, memo and amount and then truncated. FITID should always be unique for\nthe entire account history to detect transaction duplicates.</li>\n<li>OFX's NAME field (.payee in the code) is made out of the sender/receiver +\nthe subject (Verwendungszweck). This could be made configurable.</li>\n<li>OFX's MEMO field (.memo in the code) is made out of Buchungstext, Kontonummer\nand BIC.</li>\n<li>trntype is currently only ever set to DEBIT or CREDIT. Using 'Buchungstext'\nit could be improved.</li>\n</ul>\n\n          </div>"}, "last_serial": 3732677, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b7960c0dc96a59eb8309c83d4f297165", "sha256": "ef94f015fdb4a2173ba5a56c47d82f17b804785e52dd12c25e8db458b98fe966"}, "downloads": -1, "filename": "ofxstatement-sparkasse-freiburg-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b7960c0dc96a59eb8309c83d4f297165", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4491, "upload_time": "2018-04-02T12:01:39", "upload_time_iso_8601": "2018-04-02T12:01:39.206901Z", "url": "https://files.pythonhosted.org/packages/82/ed/87a61becd6935b7d7d40392d91a5d6e4aadf70f64bd627d93a9750e96974/ofxstatement-sparkasse-freiburg-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "6599c506d374f5aa7605d3e5bae8c6ca", "sha256": "adfea8004bf2e054640df3f50533841e4219d2dc5f6efbf71b055702b3a8ee16"}, "downloads": -1, "filename": "ofxstatement_sparkasse_freiburg-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6599c506d374f5aa7605d3e5bae8c6ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6612, "upload_time": "2018-04-02T19:36:09", "upload_time_iso_8601": "2018-04-02T19:36:09.118979Z", "url": "https://files.pythonhosted.org/packages/11/e2/26b49e4bbc360f77a8b5c7636a957e81407d26217628875a72357ceb1ddf/ofxstatement_sparkasse_freiburg-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ce62585fcb2484603da39ab71ab06f7", "sha256": "6bdb631a01b2c6d5a1ed9d1bd41debd0923ba0437512edcf802d98fbbd6e5e99"}, "downloads": -1, "filename": "ofxstatement-sparkasse-freiburg-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8ce62585fcb2484603da39ab71ab06f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5507, "upload_time": "2018-04-02T19:36:10", "upload_time_iso_8601": "2018-04-02T19:36:10.198538Z", "url": "https://files.pythonhosted.org/packages/1d/03/14a893eab4c32287ab5b4f258b8b37fc56036e3f05c20f49faf32c7e6d99/ofxstatement-sparkasse-freiburg-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "df0750a30248154b95262c2bfd19f261", "sha256": "5f4b63849481cc1cca50f3942d2f8e00f7cc81921e9f90733b14212251ce93d1"}, "downloads": -1, "filename": "ofxstatement_sparkasse_freiburg-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "df0750a30248154b95262c2bfd19f261", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6878, "upload_time": "2018-04-04T06:30:53", "upload_time_iso_8601": "2018-04-04T06:30:53.586150Z", "url": "https://files.pythonhosted.org/packages/f7/fb/050f8edff37ead0d7b41858e9004fd05bca109383e75563bf804506d40d2/ofxstatement_sparkasse_freiburg-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30e970f8eaca5430d279fbc9a7c429ec", "sha256": "761a88899080fee6ad18a6b320b83b916ed8c2c03eb8c815916f0a478948f37b"}, "downloads": -1, "filename": "ofxstatement-sparkasse-freiburg-0.0.3.tar.gz", "has_sig": false, "md5_digest": "30e970f8eaca5430d279fbc9a7c429ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5814, "upload_time": "2018-04-04T06:30:54", "upload_time_iso_8601": "2018-04-04T06:30:54.745141Z", "url": "https://files.pythonhosted.org/packages/fc/e4/ce71acc4c5788aff2f6b9dedc3769e75e703452c334d7fcf5c33be14bb9a/ofxstatement-sparkasse-freiburg-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "df0750a30248154b95262c2bfd19f261", "sha256": "5f4b63849481cc1cca50f3942d2f8e00f7cc81921e9f90733b14212251ce93d1"}, "downloads": -1, "filename": "ofxstatement_sparkasse_freiburg-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "df0750a30248154b95262c2bfd19f261", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6878, "upload_time": "2018-04-04T06:30:53", "upload_time_iso_8601": "2018-04-04T06:30:53.586150Z", "url": "https://files.pythonhosted.org/packages/f7/fb/050f8edff37ead0d7b41858e9004fd05bca109383e75563bf804506d40d2/ofxstatement_sparkasse_freiburg-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30e970f8eaca5430d279fbc9a7c429ec", "sha256": "761a88899080fee6ad18a6b320b83b916ed8c2c03eb8c815916f0a478948f37b"}, "downloads": -1, "filename": "ofxstatement-sparkasse-freiburg-0.0.3.tar.gz", "has_sig": false, "md5_digest": "30e970f8eaca5430d279fbc9a7c429ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5814, "upload_time": "2018-04-04T06:30:54", "upload_time_iso_8601": "2018-04-04T06:30:54.745141Z", "url": "https://files.pythonhosted.org/packages/fc/e4/ce71acc4c5788aff2f6b9dedc3769e75e703452c334d7fcf5c33be14bb9a/ofxstatement-sparkasse-freiburg-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:55 2020"}