{"info": {"author": "Gregory Johnson", "author_email": "gregj@alleninstitute.org", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: Free for non-commercial use", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# scheduler_tools\n\n[![Build Status](https://github.com/AllenCellModeling/scheduler_tools/workflows/Build%20Master/badge.svg)](https://github.com/AllenCellModeling/scheduler_tools/actions)\n[![Documentation](https://github.com/AllenCellModeling/scheduler_tools/workflows/Documentation/badge.svg)](https://AllenCellModeling.github.io/scheduler_tools)\n[![Code Coverage](https://codecov.io/gh/AllenCellModeling/scheduler_tools/branch/master/graph/badge.svg)](https://codecov.io/gh/AllenCellModeling/scheduler_tools)\n\nTools for composing interdependent tasks on a scheduler (i.e. SLURM)\n\n---\n\n## Setup requirements for launching prefect / dask-distributed on the cluster from your local desktop\n\n### On your local system\n\nFor whatever project you are working on add scheduler_tools to your dependency\nlist. \n\n```bash\nconda activate {your_env_name}\npip install -e {your_project_name}\nmkdir ~/.aics_dask\n```\ncreate file `~/.aics_dask/ssh.json` with contents\n```json\n{\"gateway\":{\n\t\"url\": \"slurm-machine.bettertech.com\",\n\t\"user\": \"flanders\",\n\t\"identityfile\": \"/Users/flanders/ssh/flandersPrivateKey\"\n\t},\n    \"dashboard_port\": 8787,\n    \"dask_port\": 34009\n}\n```\n\n### On the cluster \n```bash\nconda activate {your_env_name}\npip install -e {your_project_name}\nmkdir ~/.aics_dask\n```\n\n\n## programmatically launch remote server and create tunnel\n```python\nfrom scheduler_tools import Connector\nfrom pathlib import Path\n\nprefs = {'gateway': {}}\nprefs['gateway']['url'] = 'slurm-machine.bettertech.com'\nprefs['gateway']['user'] = 'flanders'\nprefs['gateway']['identityfile'] = '~/.ssh/id_rsa'\nprefs['dask_port'] = 34009\nprefs['dashboard_port'] = 8787\n\n\ndask_prefs = {'cluster_obj_name': {'module': 'dask_jobqueue', 'object': 'SLURMCluster'},\n                      'cluster_conf': {},\n                      'worker_conf': {},\n                      'remote_conf': {}\n                      }\ndask_prefs['cluster_obj_name'] = {'module': 'dask_jobqueue', 'object': 'SLURMCluster'}\n\ndask_prefs['cluster_conf']['queue'] = 'aics_cpu_general'\ndask_prefs['cluster_conf']['cores'] = 2\ndask_prefs['cluster_conf']['memory'] = '4GB'\ndask_prefs['cluster_conf']['walltime'] = \"02:00:00\"\ndask_prefs['worker_conf']['minimum_jobs'] = 2\ndask_prefs['worker_conf']['maximum_jobs'] = 40\n\ndask_prefs['remote_conf']['env'] = 'dask-scheduler' # whatever you named your remote conda env\ndask_prefs['remote_conf']['command'] = 'setup_and_spawn.bash'\ndask_prefs['remote_conf']['path'] = '/home/<username>/.aics_dask' # where your preferences live for this\n\n\nconn = Connector(dask_prefs=dask_prefs, pref_path=Path('~/.aics_dask/ssh.json'))\nconn.run_command()\nconn.stop_forward_if_running()\nconn.forward_ports()\n```\n\n## programmatically shutdown remote server and tunnel\n```python\nfrom scheduler_tools import Connector\nfrom pathlib import Path\n\nconn = Connector(pref_path=Path('~/.aics_dask/ssh.json'))\nconn.stop_dask()\n```\n\n## cluster creation context example\n```python\nfrom scheduler_tools import Connector, default_dask_prefs\nfrom pathlib import Path\n\ndask_prefs = default_dask_prefs()\n\n\nwith Connector(dask_prefs=dask_prefs, prefs=Path('~/.aics_dask/ssh.json')) as conn:\n    print(f\"local dashboard on: {conn.local_dashboard_port}\")\n    print(f\"local dask port: {conn.local_dask_port}\")\n    # !!! your code here !!!\n```\n\n## Command line interface \n\n### CLI start Dask Cluster command\nspawn_dask_cluster -s ~/.aics_dask_gpu/ssh.json -q aics_gpu_general -r <remote_env_name>\n\n### CLI stop Dask Cluster command\nshutdown_dask_cluster -s ~/.aics_dask/ssh.json\n\n\n***Free software: Allen Institute Software License***\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AllenCellModeling/scheduler_tools", "keywords": "scheduler_tools", "license": "Allen Institute Software License", "maintainer": "", "maintainer_email": "", "name": "scheduler-tools", "package_url": "https://pypi.org/project/scheduler-tools/", "platform": "", "project_url": "https://pypi.org/project/scheduler-tools/", "project_urls": {"Homepage": "https://github.com/AllenCellModeling/scheduler_tools"}, "release_url": "https://pypi.org/project/scheduler-tools/0.1.5/", "requires_dist": ["asyncssh", "asyncio", "aicsdaemon", "bokeh", "dask", "dask-cuda", "dask-jobqueue", "typing-extensions", "asyncssh ; extra == 'all'", "asyncio ; extra == 'all'", "aicsdaemon ; extra == 'all'", "bokeh ; extra == 'all'", "dask ; extra == 'all'", "dask-cuda ; extra == 'all'", "dask-jobqueue ; extra == 'all'", "typing-extensions ; extra == 'all'", "codecov ; extra == 'all'", "flake8 ; extra == 'all'", "pytest ; extra == 'all'", "pytest-cov ; extra == 'all'", "pytest-raises ; extra == 'all'", "pytest-runner ; extra == 'all'", "bumpversion (>=0.5.3) ; extra == 'all'", "coverage (>=5.0a4) ; extra == 'all'", "flake8 (>=3.7.7) ; extra == 'all'", "ipython (>=7.5.0) ; extra == 'all'", "m2r (>=0.2.1) ; extra == 'all'", "pytest (>=4.3.0) ; extra == 'all'", "pytest-cov (==2.6.1) ; extra == 'all'", "pytest-raises (>=0.10) ; extra == 'all'", "pytest-runner (>=4.4) ; extra == 'all'", "Sphinx (>=2.0.0b1) ; extra == 'all'", "sphinx-rtd-theme (>=0.1.5) ; extra == 'all'", "tox (>=3.5.2) ; extra == 'all'", "twine (>=1.13.0) ; extra == 'all'", "wheel (>=0.33.1) ; extra == 'all'", "altair ; extra == 'all'", "jupyterlab ; extra == 'all'", "matplotlib ; extra == 'all'", "bumpversion (>=0.5.3) ; extra == 'dev'", "coverage (>=5.0a4) ; extra == 'dev'", "flake8 (>=3.7.7) ; extra == 'dev'", "ipython (>=7.5.0) ; extra == 'dev'", "m2r (>=0.2.1) ; extra == 'dev'", "pytest (>=4.3.0) ; extra == 'dev'", "pytest-cov (==2.6.1) ; extra == 'dev'", "pytest-raises (>=0.10) ; extra == 'dev'", "pytest-runner (>=4.4) ; extra == 'dev'", "Sphinx (>=2.0.0b1) ; extra == 'dev'", "sphinx-rtd-theme (>=0.1.5) ; extra == 'dev'", "tox (>=3.5.2) ; extra == 'dev'", "twine (>=1.13.0) ; extra == 'dev'", "wheel (>=0.33.1) ; extra == 'dev'", "altair ; extra == 'interactive'", "jupyterlab ; extra == 'interactive'", "matplotlib ; extra == 'interactive'", "pytest-runner ; extra == 'setup'", "codecov ; extra == 'test'", "flake8 ; extra == 'test'", "pytest ; extra == 'test'", "pytest-cov ; extra == 'test'", "pytest-raises ; extra == 'test'"], "requires_python": ">=3.6", "summary": "Tools for composing interdependent tasks on a scheduler (i.e. SLURM)", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>scheduler_tools</h1>\n<p><a href=\"https://github.com/AllenCellModeling/scheduler_tools/actions\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/39e91eb29b9d0e2e7aeb633b83a3b39b9cd45f19/68747470733a2f2f6769746875622e636f6d2f416c6c656e43656c6c4d6f64656c696e672f7363686564756c65725f746f6f6c732f776f726b666c6f77732f4275696c642532304d61737465722f62616467652e737667\"></a>\n<a href=\"https://AllenCellModeling.github.io/scheduler_tools\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/868499cb27ec72fa9e666f90d13f3ff61bbc6cf0/68747470733a2f2f6769746875622e636f6d2f416c6c656e43656c6c4d6f64656c696e672f7363686564756c65725f746f6f6c732f776f726b666c6f77732f446f63756d656e746174696f6e2f62616467652e737667\"></a>\n<a href=\"https://codecov.io/gh/AllenCellModeling/scheduler_tools\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5ba90b24f794c8f318f93c2f02b5e9561a4fb000/68747470733a2f2f636f6465636f762e696f2f67682f416c6c656e43656c6c4d6f64656c696e672f7363686564756c65725f746f6f6c732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p>Tools for composing interdependent tasks on a scheduler (i.e. SLURM)</p>\n<hr>\n<h2>Setup requirements for launching prefect / dask-distributed on the cluster from your local desktop</h2>\n<h3>On your local system</h3>\n<p>For whatever project you are working on add scheduler_tools to your dependency\nlist.</p>\n<pre>conda activate <span class=\"o\">{</span>your_env_name<span class=\"o\">}</span>\npip install -e <span class=\"o\">{</span>your_project_name<span class=\"o\">}</span>\nmkdir ~/.aics_dask\n</pre>\n<p>create file <code>~/.aics_dask/ssh.json</code> with contents</p>\n<pre><span class=\"p\">{</span><span class=\"nt\">\"gateway\"</span><span class=\"p\">:{</span>\n\t<span class=\"nt\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"slurm-machine.bettertech.com\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"user\"</span><span class=\"p\">:</span> <span class=\"s2\">\"flanders\"</span><span class=\"p\">,</span>\n\t<span class=\"nt\">\"identityfile\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/Users/flanders/ssh/flandersPrivateKey\"</span>\n\t<span class=\"p\">},</span>\n    <span class=\"nt\">\"dashboard_port\"</span><span class=\"p\">:</span> <span class=\"mi\">8787</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"dask_port\"</span><span class=\"p\">:</span> <span class=\"mi\">34009</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>On the cluster</h3>\n<pre>conda activate <span class=\"o\">{</span>your_env_name<span class=\"o\">}</span>\npip install -e <span class=\"o\">{</span>your_project_name<span class=\"o\">}</span>\nmkdir ~/.aics_dask\n</pre>\n<h2>programmatically launch remote server and create tunnel</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">scheduler_tools</span> <span class=\"kn\">import</span> <span class=\"n\">Connector</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"n\">prefs</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'gateway'</span><span class=\"p\">:</span> <span class=\"p\">{}}</span>\n<span class=\"n\">prefs</span><span class=\"p\">[</span><span class=\"s1\">'gateway'</span><span class=\"p\">][</span><span class=\"s1\">'url'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'slurm-machine.bettertech.com'</span>\n<span class=\"n\">prefs</span><span class=\"p\">[</span><span class=\"s1\">'gateway'</span><span class=\"p\">][</span><span class=\"s1\">'user'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'flanders'</span>\n<span class=\"n\">prefs</span><span class=\"p\">[</span><span class=\"s1\">'gateway'</span><span class=\"p\">][</span><span class=\"s1\">'identityfile'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'~/.ssh/id_rsa'</span>\n<span class=\"n\">prefs</span><span class=\"p\">[</span><span class=\"s1\">'dask_port'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">34009</span>\n<span class=\"n\">prefs</span><span class=\"p\">[</span><span class=\"s1\">'dashboard_port'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">8787</span>\n\n\n<span class=\"n\">dask_prefs</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'cluster_obj_name'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'module'</span><span class=\"p\">:</span> <span class=\"s1\">'dask_jobqueue'</span><span class=\"p\">,</span> <span class=\"s1\">'object'</span><span class=\"p\">:</span> <span class=\"s1\">'SLURMCluster'</span><span class=\"p\">},</span>\n                      <span class=\"s1\">'cluster_conf'</span><span class=\"p\">:</span> <span class=\"p\">{},</span>\n                      <span class=\"s1\">'worker_conf'</span><span class=\"p\">:</span> <span class=\"p\">{},</span>\n                      <span class=\"s1\">'remote_conf'</span><span class=\"p\">:</span> <span class=\"p\">{}</span>\n                      <span class=\"p\">}</span>\n<span class=\"n\">dask_prefs</span><span class=\"p\">[</span><span class=\"s1\">'cluster_obj_name'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'module'</span><span class=\"p\">:</span> <span class=\"s1\">'dask_jobqueue'</span><span class=\"p\">,</span> <span class=\"s1\">'object'</span><span class=\"p\">:</span> <span class=\"s1\">'SLURMCluster'</span><span class=\"p\">}</span>\n\n<span class=\"n\">dask_prefs</span><span class=\"p\">[</span><span class=\"s1\">'cluster_conf'</span><span class=\"p\">][</span><span class=\"s1\">'queue'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'aics_cpu_general'</span>\n<span class=\"n\">dask_prefs</span><span class=\"p\">[</span><span class=\"s1\">'cluster_conf'</span><span class=\"p\">][</span><span class=\"s1\">'cores'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"n\">dask_prefs</span><span class=\"p\">[</span><span class=\"s1\">'cluster_conf'</span><span class=\"p\">][</span><span class=\"s1\">'memory'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'4GB'</span>\n<span class=\"n\">dask_prefs</span><span class=\"p\">[</span><span class=\"s1\">'cluster_conf'</span><span class=\"p\">][</span><span class=\"s1\">'walltime'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"02:00:00\"</span>\n<span class=\"n\">dask_prefs</span><span class=\"p\">[</span><span class=\"s1\">'worker_conf'</span><span class=\"p\">][</span><span class=\"s1\">'minimum_jobs'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"n\">dask_prefs</span><span class=\"p\">[</span><span class=\"s1\">'worker_conf'</span><span class=\"p\">][</span><span class=\"s1\">'maximum_jobs'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">40</span>\n\n<span class=\"n\">dask_prefs</span><span class=\"p\">[</span><span class=\"s1\">'remote_conf'</span><span class=\"p\">][</span><span class=\"s1\">'env'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'dask-scheduler'</span> <span class=\"c1\"># whatever you named your remote conda env</span>\n<span class=\"n\">dask_prefs</span><span class=\"p\">[</span><span class=\"s1\">'remote_conf'</span><span class=\"p\">][</span><span class=\"s1\">'command'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'setup_and_spawn.bash'</span>\n<span class=\"n\">dask_prefs</span><span class=\"p\">[</span><span class=\"s1\">'remote_conf'</span><span class=\"p\">][</span><span class=\"s1\">'path'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'/home/&lt;username&gt;/.aics_dask'</span> <span class=\"c1\"># where your preferences live for this</span>\n\n\n<span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"n\">Connector</span><span class=\"p\">(</span><span class=\"n\">dask_prefs</span><span class=\"o\">=</span><span class=\"n\">dask_prefs</span><span class=\"p\">,</span> <span class=\"n\">pref_path</span><span class=\"o\">=</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'~/.aics_dask/ssh.json'</span><span class=\"p\">))</span>\n<span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">run_command</span><span class=\"p\">()</span>\n<span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">stop_forward_if_running</span><span class=\"p\">()</span>\n<span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">forward_ports</span><span class=\"p\">()</span>\n</pre>\n<h2>programmatically shutdown remote server and tunnel</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">scheduler_tools</span> <span class=\"kn\">import</span> <span class=\"n\">Connector</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"n\">Connector</span><span class=\"p\">(</span><span class=\"n\">pref_path</span><span class=\"o\">=</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'~/.aics_dask/ssh.json'</span><span class=\"p\">))</span>\n<span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">stop_dask</span><span class=\"p\">()</span>\n</pre>\n<h2>cluster creation context example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">scheduler_tools</span> <span class=\"kn\">import</span> <span class=\"n\">Connector</span><span class=\"p\">,</span> <span class=\"n\">default_dask_prefs</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n\n<span class=\"n\">dask_prefs</span> <span class=\"o\">=</span> <span class=\"n\">default_dask_prefs</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">with</span> <span class=\"n\">Connector</span><span class=\"p\">(</span><span class=\"n\">dask_prefs</span><span class=\"o\">=</span><span class=\"n\">dask_prefs</span><span class=\"p\">,</span> <span class=\"n\">prefs</span><span class=\"o\">=</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'~/.aics_dask/ssh.json'</span><span class=\"p\">))</span> <span class=\"k\">as</span> <span class=\"n\">conn</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"local dashboard on: </span><span class=\"si\">{</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">local_dashboard_port</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"local dask port: </span><span class=\"si\">{</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">local_dask_port</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"c1\"># !!! your code here !!!</span>\n</pre>\n<h2>Command line interface</h2>\n<h3>CLI start Dask Cluster command</h3>\n<p>spawn_dask_cluster -s ~/.aics_dask_gpu/ssh.json -q aics_gpu_general -r &lt;remote_env_name&gt;</p>\n<h3>CLI stop Dask Cluster command</h3>\n<p>shutdown_dask_cluster -s ~/.aics_dask/ssh.json</p>\n<p><em><strong>Free software: Allen Institute Software License</strong></em></p>\n\n          </div>"}, "last_serial": 6751470, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "318aa84f7173a9ca55a7ddf93782fbec", "sha256": "9e34bb6365962cddf9042920b8b940cbffe84e2a75fa12fa9e8225363ee46480"}, "downloads": -1, "filename": "scheduler_tools-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "318aa84f7173a9ca55a7ddf93782fbec", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 25228, "upload_time": "2020-02-07T00:45:41", "upload_time_iso_8601": "2020-02-07T00:45:41.406430Z", "url": "https://files.pythonhosted.org/packages/f4/bb/129b7489c81d7a13864154872857a28709195bbcb72c30afe7e342bf648b/scheduler_tools-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "833b83cbf67f23470c7455d821e15dde", "sha256": "92d930e2d8ede2b44900c0aef4144053a61b55da8858bf3ef56245b9a8168fc3"}, "downloads": -1, "filename": "scheduler_tools-0.1.0.tar.gz", "has_sig": false, "md5_digest": "833b83cbf67f23470c7455d821e15dde", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22022, "upload_time": "2020-02-07T00:45:44", "upload_time_iso_8601": "2020-02-07T00:45:44.068998Z", "url": "https://files.pythonhosted.org/packages/8c/55/b1ca6b7243de14b5d675d933058e013b737015476662313831de43cbaf60/scheduler_tools-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b9d209b55417f9e3ada72441a8d90af7", "sha256": "adc0f1e3089e281954e2ac59cee21dabe9956239b01a01acaa675e5217030dff"}, "downloads": -1, "filename": "scheduler_tools-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b9d209b55417f9e3ada72441a8d90af7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 25533, "upload_time": "2020-02-11T19:47:32", "upload_time_iso_8601": "2020-02-11T19:47:32.435930Z", "url": "https://files.pythonhosted.org/packages/ec/33/b6b5a38214e2dfd1cd98500c486a1a322720960c747ce280e88fc16e648c/scheduler_tools-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2cdd7a549abcdf0e36b6337ad7e90748", "sha256": "f444b2a789231b42986fed94735a02bda8ba1a0d21bd6acf9334d83772e2f8ad"}, "downloads": -1, "filename": "scheduler_tools-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2cdd7a549abcdf0e36b6337ad7e90748", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22282, "upload_time": "2020-02-11T19:47:34", "upload_time_iso_8601": "2020-02-11T19:47:34.150167Z", "url": "https://files.pythonhosted.org/packages/e2/fa/4f4618a39cc459fb373c13c8368428fbf02b16aca170072eadd3f72775a7/scheduler_tools-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "76333ee052baab3348d439b0da5feaf1", "sha256": "5f07d007cbf611ea34eddcaf67df044d144fbaa2daf5f2013821ec46a9a02b9b"}, "downloads": -1, "filename": "scheduler_tools-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "76333ee052baab3348d439b0da5feaf1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 25698, "upload_time": "2020-02-11T23:11:00", "upload_time_iso_8601": "2020-02-11T23:11:00.215830Z", "url": "https://files.pythonhosted.org/packages/3e/76/903c72b6ebe8dc73c8808440507369ad2f16d5ce49c7714275c149bd2016/scheduler_tools-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5665e964866f3d0e88beed74f4e4f55", "sha256": "f90facfb897ec4b2a600c3aeb8a6e72f4ae8adf20ef9fdc1fb9d075a7fbb9b86"}, "downloads": -1, "filename": "scheduler_tools-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c5665e964866f3d0e88beed74f4e4f55", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 22619, "upload_time": "2020-02-11T23:11:01", "upload_time_iso_8601": "2020-02-11T23:11:01.494120Z", "url": "https://files.pythonhosted.org/packages/24/de/a54c20e9ad7ba2f94887327ebd21a67f7b0643a80c530d7d8c116fbe11c9/scheduler_tools-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f8ac4dbe32e4518de8efcbf7730dee0d", "sha256": "deff3dae5264087cefb17be73cb853b5945449dda1b9c97b9042d1350195c4c3"}, "downloads": -1, "filename": "scheduler_tools-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f8ac4dbe32e4518de8efcbf7730dee0d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 26715, "upload_time": "2020-02-15T01:27:52", "upload_time_iso_8601": "2020-02-15T01:27:52.148411Z", "url": "https://files.pythonhosted.org/packages/d9/d8/68e907d57cb499770247e8446373ee009a43ee02569749f26d64c76f6123/scheduler_tools-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42b3493455f66d8f2159d95c2b540e05", "sha256": "67e4b17ed70d36536945e5a9db19db98e96abab95a22c44ae00f40f11e4f5517"}, "downloads": -1, "filename": "scheduler_tools-0.1.3.tar.gz", "has_sig": false, "md5_digest": "42b3493455f66d8f2159d95c2b540e05", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23273, "upload_time": "2020-02-15T01:27:53", "upload_time_iso_8601": "2020-02-15T01:27:53.874211Z", "url": "https://files.pythonhosted.org/packages/c5/87/bef6b0f9a9f89d9a5cc580a72d870ec2530140821459de71c6eb1103ed34/scheduler_tools-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "c34bf6573c36f82d9cf100b6b303da21", "sha256": "24aedeebd2a8ab7357c837adeb0aa50f25af9366a26d2e2d144c49aedc458947"}, "downloads": -1, "filename": "scheduler_tools-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c34bf6573c36f82d9cf100b6b303da21", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 28202, "upload_time": "2020-02-25T18:59:44", "upload_time_iso_8601": "2020-02-25T18:59:44.389836Z", "url": "https://files.pythonhosted.org/packages/1c/21/5314a8814e7165482f49abb5186f6113a6c017a5327d8d5e8ee4af514c37/scheduler_tools-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3cf1d0c5b9cb9c10a271b0657a552ad1", "sha256": "0752f924ee3c03618b0f756760e4d9fc3fe69878a21b2f17b5cefe43be426bd0"}, "downloads": -1, "filename": "scheduler_tools-0.1.4.tar.gz", "has_sig": false, "md5_digest": "3cf1d0c5b9cb9c10a271b0657a552ad1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24242, "upload_time": "2020-02-25T18:59:46", "upload_time_iso_8601": "2020-02-25T18:59:46.082241Z", "url": "https://files.pythonhosted.org/packages/09/4d/7ce996c5d385db8005439138d7f687ccf0b26d6f2d5ff10a9142bf722194/scheduler_tools-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "8deefe980ff5a1781358c75a83b2bbdc", "sha256": "58d3c9019d00391b4daadbbea418d1ef703ac6df893dad790ca7ecbfe3dbf47e"}, "downloads": -1, "filename": "scheduler_tools-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8deefe980ff5a1781358c75a83b2bbdc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 27947, "upload_time": "2020-03-04T22:49:46", "upload_time_iso_8601": "2020-03-04T22:49:46.655946Z", "url": "https://files.pythonhosted.org/packages/7b/7c/eaaf8e68ddefb861b0b90c09563237c1db372d163201bb3f57531e7d5e1c/scheduler_tools-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "25114ded7c5837ea0fd5dfe866f6d4a8", "sha256": "aef59d081231f50d7f03f0aea2b48d6c37f4d4bf3607c371ec12a88163d052a4"}, "downloads": -1, "filename": "scheduler_tools-0.1.5.tar.gz", "has_sig": false, "md5_digest": "25114ded7c5837ea0fd5dfe866f6d4a8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24147, "upload_time": "2020-03-04T22:49:48", "upload_time_iso_8601": "2020-03-04T22:49:48.616805Z", "url": "https://files.pythonhosted.org/packages/f5/b0/278310e96d462b5c840e65139e48dc5343dca18ce1abbf0804a46b3239b2/scheduler_tools-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8deefe980ff5a1781358c75a83b2bbdc", "sha256": "58d3c9019d00391b4daadbbea418d1ef703ac6df893dad790ca7ecbfe3dbf47e"}, "downloads": -1, "filename": "scheduler_tools-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8deefe980ff5a1781358c75a83b2bbdc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 27947, "upload_time": "2020-03-04T22:49:46", "upload_time_iso_8601": "2020-03-04T22:49:46.655946Z", "url": "https://files.pythonhosted.org/packages/7b/7c/eaaf8e68ddefb861b0b90c09563237c1db372d163201bb3f57531e7d5e1c/scheduler_tools-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "25114ded7c5837ea0fd5dfe866f6d4a8", "sha256": "aef59d081231f50d7f03f0aea2b48d6c37f4d4bf3607c371ec12a88163d052a4"}, "downloads": -1, "filename": "scheduler_tools-0.1.5.tar.gz", "has_sig": false, "md5_digest": "25114ded7c5837ea0fd5dfe866f6d4a8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24147, "upload_time": "2020-03-04T22:49:48", "upload_time_iso_8601": "2020-03-04T22:49:48.616805Z", "url": "https://files.pythonhosted.org/packages/f5/b0/278310e96d462b5c840e65139e48dc5343dca18ce1abbf0804a46b3239b2/scheduler_tools-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:53 2020"}