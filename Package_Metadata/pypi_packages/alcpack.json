{"info": {"author": "Amit Kumar Pal", "author_email": "amitsweb@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# `ALCPack`\n\nA python package to create an edge between any two given nodes in a simple, connected, and undirected graph via a sequence of local complementation operations.\n\n\n## Requirements\n\n`ALCPack` is developed based on [**Python 3.0**](https://www.python.org/download/releases/3.0/) (or more recent releases), and uses [**NetworkX**](https://networkx.github.io) -- A python package to analyze complex networks\n\n\n## Installation\n\nTo install `ALCPack` using [**pip**](https://pip.pypa.io/en/stable/):\n\n>\n>$ python3 -m pip install --upgrade pip\n>\n>$ python3 -m pip install alcpack\n>\n\nThe steps to build the package locally for installation via [**pip**](https://pip.pypa.io/en/stable/) are given in **ALCPack_References**, available in the ***documentation*** folder. \n\n\n## Description \n\n`ALCPack` provides three functions, as listed below.\n\n1. **local_complementation**(G, target): *Performs a local complementation operation on the input graph G w.r.t. the node 'target' and returns the transformed graph* \n\n2. **path_category**(G, path): *Determines the category of a simple path connecting two chosen nodes in a simple, connected, and undirected graph, and distills a category 1 path out of the chosen path, if the chosen path is of category 2. Returns the category (category 1 or category 2) of the chosenn path, and a distilled category 1 path (chosen path) if the chosen path is of category 2 (category 1)*  \n\n3. **alc_function**(G, path): *Performs adaptive local complementation operation on the input graph G w.r.t. the chosen simple path 'path'. Returns the modified graph with an edge between the source and the destination nodes*  \n\n\n## Use\n\nTo call `ALCPack` functions in the Python 3.0 (or higher) environment, \n\n>\\>\\>\\> import alcpack as alc\n\nTo use `ALCPack` functions in the Python 3.0 (or higher) environment, \n\n>\n>\\>\\>\\> H=alc.local_complementation(G,target)\n>\n>\\>\\>\\> n,newpath=alc.path_category(G,path)\n>\n>\\>\\>\\> H=alc.alc_function(G,path)\n>\n\nThe parameters used in the functions are as below.\n\n**Input**\n\n>\n>**G**: Networkx graph, Input parameter\n>\n\n\n>\n>**path**: List of nodes, Input parameter\n>\n>Represents a path between a source (first node in 'path') and a destination (last node in 'path')\n>\n\n> \n>**target**: Node, Input parameter\n>\n>Represents a node with respect to which the local complementation operation is performed\n>\n\n\n**Output**        \n\n>   \n>**H**: NetworkX graph, Output parameter\n>\n>Transformed graph due to ALCPack functions\n>\n\n>\n>**n**: Integer, Output parameter \n>\n>Takes value 1 or 2, represents the category of the input 'path'\n>\n\n>\n>**newpath**: List of nodes, Output parameter\n>\n>Category 1 path\n>\n\n\nInformation on the theoretical background of `ALCPack` is given in  **ALCPack_References**, which is available in the ***documentation*** folder. \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/amitkpal/alcpack/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "network simple connected graph local complementation creation of an edge", "license": "Apache 2", "maintainer": "", "maintainer_email": "", "name": "alcpack", "package_url": "https://pypi.org/project/alcpack/", "platform": "", "project_url": "https://pypi.org/project/alcpack/", "project_urls": {"Download": "https://github.com/amitkpal/alcpack/archive/master.zip"}, "release_url": "https://pypi.org/project/alcpack/1.1.1/", "requires_dist": ["networkx"], "requires_python": "", "summary": "Adaptive Local Complementation Package", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><code>ALCPack</code></h1>\n<p>A python package to create an edge between any two given nodes in a simple, connected, and undirected graph via a sequence of local complementation operations.</p>\n<h2>Requirements</h2>\n<p><code>ALCPack</code> is developed based on <a href=\"https://www.python.org/download/releases/3.0/\" rel=\"nofollow\"><strong>Python 3.0</strong></a> (or more recent releases), and uses <a href=\"https://networkx.github.io\" rel=\"nofollow\"><strong>NetworkX</strong></a> -- A python package to analyze complex networks</p>\n<h2>Installation</h2>\n<p>To install <code>ALCPack</code> using <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\"><strong>pip</strong></a>:</p>\n<blockquote>\n<p>$ python3 -m pip install --upgrade pip</p>\n<p>$ python3 -m pip install alcpack</p>\n</blockquote>\n<p>The steps to build the package locally for installation via <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\"><strong>pip</strong></a> are given in <strong>ALCPack_References</strong>, available in the <em><strong>documentation</strong></em> folder.</p>\n<h2>Description</h2>\n<p><code>ALCPack</code> provides three functions, as listed below.</p>\n<ol>\n<li>\n<p><strong>local_complementation</strong>(G, target): <em>Performs a local complementation operation on the input graph G w.r.t. the node 'target' and returns the transformed graph</em></p>\n</li>\n<li>\n<p><strong>path_category</strong>(G, path): <em>Determines the category of a simple path connecting two chosen nodes in a simple, connected, and undirected graph, and distills a category 1 path out of the chosen path, if the chosen path is of category 2. Returns the category (category 1 or category 2) of the chosenn path, and a distilled category 1 path (chosen path) if the chosen path is of category 2 (category 1)</em></p>\n</li>\n<li>\n<p><strong>alc_function</strong>(G, path): <em>Performs adaptive local complementation operation on the input graph G w.r.t. the chosen simple path 'path'. Returns the modified graph with an edge between the source and the destination nodes</em></p>\n</li>\n</ol>\n<h2>Use</h2>\n<p>To call <code>ALCPack</code> functions in the Python 3.0 (or higher) environment,</p>\n<blockquote>\n<p>&gt;&gt;&gt; import alcpack as alc</p>\n</blockquote>\n<p>To use <code>ALCPack</code> functions in the Python 3.0 (or higher) environment,</p>\n<blockquote>\n<p>&gt;&gt;&gt; H=alc.local_complementation(G,target)</p>\n<p>&gt;&gt;&gt; n,newpath=alc.path_category(G,path)</p>\n<p>&gt;&gt;&gt; H=alc.alc_function(G,path)</p>\n</blockquote>\n<p>The parameters used in the functions are as below.</p>\n<p><strong>Input</strong></p>\n<blockquote>\n<p><strong>G</strong>: Networkx graph, Input parameter</p>\n</blockquote>\n<blockquote>\n<p><strong>path</strong>: List of nodes, Input parameter</p>\n<p>Represents a path between a source (first node in 'path') and a destination (last node in 'path')</p>\n</blockquote>\n<blockquote>\n<p><strong>target</strong>: Node, Input parameter</p>\n<p>Represents a node with respect to which the local complementation operation is performed</p>\n</blockquote>\n<p><strong>Output</strong></p>\n<blockquote>\n<p><strong>H</strong>: NetworkX graph, Output parameter</p>\n<p>Transformed graph due to ALCPack functions</p>\n</blockquote>\n<blockquote>\n<p><strong>n</strong>: Integer, Output parameter</p>\n<p>Takes value 1 or 2, represents the category of the input 'path'</p>\n</blockquote>\n<blockquote>\n<p><strong>newpath</strong>: List of nodes, Output parameter</p>\n<p>Category 1 path</p>\n</blockquote>\n<p>Information on the theoretical background of <code>ALCPack</code> is given in  <strong>ALCPack_References</strong>, which is available in the <em><strong>documentation</strong></em> folder.</p>\n\n          </div>"}, "last_serial": 5477689, "releases": {"1.1.1": [{"comment_text": "", "digests": {"md5": "f379f5c42f7db5c713df8636fad03272", "sha256": "85bb4e49ed472fc3d21bac7af08672509afef7481d1e02a506c7ed796c70f0d6"}, "downloads": -1, "filename": "alcpack-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f379f5c42f7db5c713df8636fad03272", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7582, "upload_time": "2019-07-02T17:46:42", "upload_time_iso_8601": "2019-07-02T17:46:42.458630Z", "url": "https://files.pythonhosted.org/packages/c2/6c/8769389c6960fa19d903e31e31a559973ab019aa220250d6a3a87941533c/alcpack-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16b49b2ec5efddeee5f169e37422295d", "sha256": "a129ec8c6ec7038a1668deb7b3715b241b8f1ce64e6b2589d5f7b648b3b65488"}, "downloads": -1, "filename": "alcpack-1.1.1.tar.gz", "has_sig": false, "md5_digest": "16b49b2ec5efddeee5f169e37422295d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3183, "upload_time": "2019-07-02T17:46:43", "upload_time_iso_8601": "2019-07-02T17:46:43.975073Z", "url": "https://files.pythonhosted.org/packages/b5/4c/05c702eb9faa751dcbb944bc9e3895d086b9e3225aa2c1c98818170a0307/alcpack-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f379f5c42f7db5c713df8636fad03272", "sha256": "85bb4e49ed472fc3d21bac7af08672509afef7481d1e02a506c7ed796c70f0d6"}, "downloads": -1, "filename": "alcpack-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f379f5c42f7db5c713df8636fad03272", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7582, "upload_time": "2019-07-02T17:46:42", "upload_time_iso_8601": "2019-07-02T17:46:42.458630Z", "url": "https://files.pythonhosted.org/packages/c2/6c/8769389c6960fa19d903e31e31a559973ab019aa220250d6a3a87941533c/alcpack-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16b49b2ec5efddeee5f169e37422295d", "sha256": "a129ec8c6ec7038a1668deb7b3715b241b8f1ce64e6b2589d5f7b648b3b65488"}, "downloads": -1, "filename": "alcpack-1.1.1.tar.gz", "has_sig": false, "md5_digest": "16b49b2ec5efddeee5f169e37422295d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3183, "upload_time": "2019-07-02T17:46:43", "upload_time_iso_8601": "2019-07-02T17:46:43.975073Z", "url": "https://files.pythonhosted.org/packages/b5/4c/05c702eb9faa751dcbb944bc9e3895d086b9e3225aa2c1c98818170a0307/alcpack-1.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:01 2020"}