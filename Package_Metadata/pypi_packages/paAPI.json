{"info": {"author": "oznu", "author_email": "dev@oz.nu", "bugtrack_url": null, "classifiers": [], "description": "paAPI\r\n========\r\n\r\n.. image:: https://pypip.in/v/paAPI/badge.png\r\n        :target: https://crate.io/packages/paAPI\r\n\r\n.. image:: https://pypip.in/d/paAPI/badge.png\r\n        :target: https://crate.io/packages/paAPI\r\n\r\n\r\nA python client for the Parallels Operations Automation (POA) and Parallels Business Automation Enterprise (PBA) APIs.\r\n\r\n.. contents::\r\n    :local:\r\n    \r\n\r\n============\r\nInstallation\r\n============\r\n\r\nUsing pip::\r\n\r\n    $ pip install paAPI\r\n    \r\n\r\n=============================\r\nConnecting and Authenticating\r\n=============================\r\n\r\n.. code:: python\r\n\r\n    POA(host,user=None,password=None,ssl=False,verbose=False,port=8440)\r\n    \r\n    PBA(host,user=None,password=None,ssl=False,verbose=False,port=5224)\r\n\r\n\r\nDefault Connection\r\n------------------\r\n\r\n.. code:: python\r\n\r\n    from paAPI import POA, PBA\r\n\r\n    # connect to POA\r\n    pem = POA('mn.hostname.com')\r\n    \r\n    # connect to PBA\r\n    api = PBA('pba.hostname.com')\r\n\r\nBasic HTTP Authentication\r\n-------------------------\r\n\r\n.. code:: python\r\n\r\n    from paAPI import POA, PBA\r\n    \r\n    # connect to POA \r\n    pem = POA('mn.hostname.com', user='admin', password='setup')\r\n    \r\n\r\nSSL\r\n---\r\n\r\n.. code:: python\r\n\r\n    from paAPI import POA, PBA\r\n    \r\n    # connect to POA \r\n    pem = POA('mn.hostname.com', ssl=True)\r\n    \r\nCustom Port\r\n-----------\r\n\r\n.. code:: python\r\n\r\n    from paAPI import POA, PBA\r\n    \r\n    # connect to POA \r\n    pem = POA('mn.hostname.com', port=8888)\r\n\r\n=========================================\r\nParallels Operations Automation (POA) API\r\n=========================================\r\n\r\nAll but three of the POA API calls start with 'pem', for this reason it is recommended you name your POA connection object 'pem' so you can call functions exactly how they are documented in the POA API as has been done in the examples in this Readme.\r\n\r\nThe full POA Public API Reference can be found here:\r\n\r\nhttp://download.pa.parallels.com/poa/5.5/doc/index.htm?fileName=56781.htm\r\n\r\nBasic API Call\r\n--------------\r\n\r\nThis example will show the pem.getAccountInfo_ method being called.\r\n\r\n.. _pem.getAccountInfo: http://download.pa.parallels.com/poa/5.5/doc/7915.htm\r\n\r\n.. code:: python\r\n\r\n    from paAPI import POA\r\n\r\n    pem = POA('mn.hostname.com')\r\n    \r\n    d = {\r\n        'account_id' : 1002242\r\n    }\r\n    \r\n    print pem.getAccountInfo(**d)\r\n    \r\n    # {'status': 0, 'result': {'fax': {'phone_num': '', 'ext_num': '', 'area_code': '', 'country_code': ''}, 'account_type': 'C', 'phone': {'phone_num': '00000000', 'ext_num': '', 'area_code': '04', 'country_code': '61'}, 'brand': {'brand_id': 191, 'domain_name': 'brandingdomain.com', 'name': 'brandname'}, 'email': 'noreply@example.com', 'person': {'first_name': 'John', 'last_name': 'Smith', 'middle_name': '', 'company_name': 'Test Account', 'title': ''}, 'address': {'city': 'Canberra', 'country': 'au', 'street_name': '1 Test Street', 'zipcode': '2621', 'state': 'ACT', 'house_num': '', 'address2': ''}, 'parent_account_id': 1002241}}\r\n\r\nAPI Call with 'array of struct'\r\n-------------------------------\r\n\r\nThe POA API often calls for values and settings to be sent as an 'array of struct'. This example shows how to send these values using the paAPI client.\r\n\r\nThis example is based on the pem.activateSubscription_ method with resources types called 'DiskSpace' and 'Bandwidth' and a domain name.\r\n\r\n.. _pem.activateSubscription: http://download.pa.parallels.com/poa/5.5/doc/39160.htm\r\n\r\n.. code:: python\r\n\r\n    from paAPI import POA\r\n\r\n    pem = POA('mn.hostname.com')\r\n    \r\n    # define the resource limits:\r\n    DiskSpace = {\r\n        \"resource_id\" : 1002486,\r\n        \"resource_limit\" : 1024\r\n    }\r\n    Bandwidth = {\r\n        \"resource_id\" : 1002487,\r\n        \"resource_limit\" : -1\r\n    }\r\n    \r\n    # define the paramaters:\r\n    DomainName = {\r\n        \"var_name\"  : \"DomainID\",\r\n        \"var_value\" : \"example.com.au\"\r\n    }\r\n    \r\n    # setup the call:\r\n    d = {\r\n        \"account_id\"           : 1002242,\r\n        \"subscription_name\"    : \"Hosting (example.com.au)\",\r\n        \"subscription_id\"      : 1006754,\r\n        \"service_template_id\"  : 204,\r\n        \"resource_limits\"      : [DiskSpace, Bandwidth],\r\n        \"paramaters\"           : [DomainName],\r\n    }\r\n    \r\n    # execute the call:\r\n    result = pem.activateSubscription(**d)\r\n\r\n\r\nTransactions\r\n------------\r\n\r\nThere are three POA API calls that do not start with pem in the official documentation. When using paAPI you can use these API calls as documented but you will still need to prefix them with your POA connection object (the examples on this page use 'pem' as the connection object name).\r\n    \r\n.. code:: python\r\n\r\n    from paAPI import POA\r\n\r\n    pem = POA('mn.hostname.com')\r\n    \r\n    # being transaction\r\n    pem.txn.Begin()\r\n    \r\n    # commit transaction\r\n    pem.txn.Commit()\r\n    \r\n    # rollback transaction\r\n    pem.txn.Rollback()\r\n   \r\n   \r\nError Handling\r\n--------------\r\n\r\nThe POA API has quite good responces when an error occurs during an API call. The below example shows the responce format for POA API errors:\r\n\r\n\r\n.. code:: python\r\n\r\n    {\r\n        'status'         : -1, \r\n        'extype_id'      : 21, \r\n        'module_id'      : 'OpenAPI', \r\n        'error_message'  : 'Invalid set of arguments. There should be specified EITHER external_info OR person, address, phone, [fax], [locale], email.', \r\n        'properties'     : { \r\n                               'reason': 'Invalid set of arguments. There should be specified EITHER external_info OR person, address, phone, [fax], [locale], email.'\r\n                           }\r\n    }\r\n\r\n   \r\n==================================================\r\nParallels Business Automation (PBA) API\r\n==================================================\r\n\r\nThe PBA API is quite different from the POA API, and not quite as user friendly. The paAPI client makes using the PBA a little easier by standardizing the returned responces, providing status codes, and decoding any error messages.\r\n\r\nThe major difference between the POA and PBA api is how values are sent and received. In PBA params are sent and responces are received as a list in a specific order to know what each value represents.\r\n\r\nThe full PBA Public API Reference can be found here:\r\n\r\nhttp://download.pa.parallels.com/pba/5.5/doc/pdf/SDK_API/pba_5.5_public_api_reference.pdf\r\n\r\nBasic API Call\r\n--------------\r\n\r\nThis example will show the **AccountDetailsGet_API** method being called.\r\n\r\n.. code:: python\r\n\r\n    from paAPI import PBA\r\n    \r\n    api = PBA('pba.hostname.com')\r\n    \r\n    print api.Execute('AccountDetailsGet_API', params=['1002242'])\r\n    \r\n    # {'status': 0, 'result': [1002242, 1002241, 'Test Account  5543', '1 Test Street', '', 'Canberra', '', '2621', 'au', '', 'John', 'D', 'Smith', 'noreply@example.com', '61', '04', '000000000', '', '', '', '', '', 1351787114, 2, 0]}\r\n    \r\nAlternate Server\r\n----------------\r\n\r\nMost PBA API method calls use the \"BM\" server. Some methods use alternate servers such as \"PEMGATE\" or \"DOMAINGATE\". This example shows how to specify an alternate server:\r\n\r\n.. code:: python\r\n\r\n    from paAPI import PBA\r\n    \r\n    api = PBA('pba.hostname.com')\r\n    \r\n    api.Execute('DomainExpirationDateGet_API', params=params, server='DOMAINGATE')\r\n    \r\nError Handling\r\n--------------\r\n\r\npaAPI takes the way POA returns errors natively and applies it to the PBA API. The status on each responce will either be **0** for a succesfull call, or **-1** if PBA returned an error.\r\n\r\nThis is an example of what is returned in the case of an error:\r\n\r\n.. code:: python\r\n\r\n    {\r\n        'status'        : -1, \r\n        'error_message' : 'Table Account does not contain row with ID 99999999.', \r\n        'server'        : 'BM', \r\n        'host'          : 'pba.hostname.com', \r\n        'params'        : ['99999999'], \r\n        'result'        : None, \r\n        'method'        : 'AccountDetailsGet_API'\r\n    }", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/oznu/paAPI", "keywords": "", "license": "Apache License", "maintainer": "", "maintainer_email": "", "name": "paAPI", "package_url": "https://pypi.org/project/paAPI/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/paAPI/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/oznu/paAPI"}, "release_url": "https://pypi.org/project/paAPI/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Notice: This module is depreciated in favour of ingrammicro's osaAPI", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://crate.io/packages/paAPI\" rel=\"nofollow\"><img alt=\"https://pypip.in/v/paAPI/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1fd6dcea5e5e3b83e45110e37a03af9c0f8d9d73/68747470733a2f2f70797069702e696e2f762f70614150492f62616467652e706e67\"></a>\n<a href=\"https://crate.io/packages/paAPI\" rel=\"nofollow\"><img alt=\"https://pypip.in/d/paAPI/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9c3d22e3b58981b04940efb89cdfdae753f2d19d/68747470733a2f2f70797069702e696e2f642f70614150492f62616467652e706e67\"></a>\n<p>A python client for the Parallels Operations Automation (POA) and Parallels Business Automation Enterprise (PBA) APIs.</p>\n<div id=\"contents\">\n<ul>\n<li><a href=\"#installation\" id=\"id3\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#connecting-and-authenticating\" id=\"id4\" rel=\"nofollow\">Connecting and Authenticating</a><ul>\n<li><a href=\"#default-connection\" id=\"id5\" rel=\"nofollow\">Default Connection</a></li>\n<li><a href=\"#basic-http-authentication\" id=\"id6\" rel=\"nofollow\">Basic HTTP Authentication</a></li>\n<li><a href=\"#ssl\" id=\"id7\" rel=\"nofollow\">SSL</a></li>\n<li><a href=\"#custom-port\" id=\"id8\" rel=\"nofollow\">Custom Port</a></li>\n</ul>\n</li>\n<li><a href=\"#parallels-operations-automation-poa-api\" id=\"id9\" rel=\"nofollow\">Parallels Operations Automation (POA) API</a><ul>\n<li><a href=\"#basic-api-call\" id=\"id10\" rel=\"nofollow\">Basic API Call</a></li>\n<li><a href=\"#api-call-with-array-of-struct\" id=\"id11\" rel=\"nofollow\">API Call with \u2018array of struct\u2019</a></li>\n<li><a href=\"#transactions\" id=\"id12\" rel=\"nofollow\">Transactions</a></li>\n<li><a href=\"#error-handling\" id=\"id13\" rel=\"nofollow\">Error Handling</a></li>\n</ul>\n</li>\n<li><a href=\"#parallels-business-automation-pba-api\" id=\"id14\" rel=\"nofollow\">Parallels Business Automation (PBA) API</a><ul>\n<li><a href=\"#id1\" id=\"id15\" rel=\"nofollow\">Basic API Call</a></li>\n<li><a href=\"#alternate-server\" id=\"id16\" rel=\"nofollow\">Alternate Server</a></li>\n<li><a href=\"#id2\" id=\"id17\" rel=\"nofollow\">Error Handling</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Installation</a></h2>\n<p>Using pip:</p>\n<pre>$ pip install paAPI\n</pre>\n</div>\n<div id=\"connecting-and-authenticating\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Connecting and Authenticating</a></h2>\n<pre><span class=\"n\">POA</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"p\">,</span><span class=\"n\">user</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span><span class=\"n\">password</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span><span class=\"n\">ssl</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span><span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">8440</span><span class=\"p\">)</span>\n\n<span class=\"n\">PBA</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"p\">,</span><span class=\"n\">user</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span><span class=\"n\">password</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span><span class=\"n\">ssl</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span><span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5224</span><span class=\"p\">)</span>\n</pre>\n<div id=\"default-connection\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Default Connection</a></h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paAPI</span> <span class=\"kn\">import</span> <span class=\"n\">POA</span><span class=\"p\">,</span> <span class=\"n\">PBA</span>\n\n<span class=\"c1\"># connect to POA</span>\n<span class=\"n\">pem</span> <span class=\"o\">=</span> <span class=\"n\">POA</span><span class=\"p\">(</span><span class=\"s1\">'mn.hostname.com'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># connect to PBA</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">PBA</span><span class=\"p\">(</span><span class=\"s1\">'pba.hostname.com'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"basic-http-authentication\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Basic HTTP Authentication</a></h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paAPI</span> <span class=\"kn\">import</span> <span class=\"n\">POA</span><span class=\"p\">,</span> <span class=\"n\">PBA</span>\n\n<span class=\"c1\"># connect to POA</span>\n<span class=\"n\">pem</span> <span class=\"o\">=</span> <span class=\"n\">POA</span><span class=\"p\">(</span><span class=\"s1\">'mn.hostname.com'</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'setup'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"ssl\">\n<h3><a href=\"#id7\" rel=\"nofollow\">SSL</a></h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paAPI</span> <span class=\"kn\">import</span> <span class=\"n\">POA</span><span class=\"p\">,</span> <span class=\"n\">PBA</span>\n\n<span class=\"c1\"># connect to POA</span>\n<span class=\"n\">pem</span> <span class=\"o\">=</span> <span class=\"n\">POA</span><span class=\"p\">(</span><span class=\"s1\">'mn.hostname.com'</span><span class=\"p\">,</span> <span class=\"n\">ssl</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"custom-port\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Custom Port</a></h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paAPI</span> <span class=\"kn\">import</span> <span class=\"n\">POA</span><span class=\"p\">,</span> <span class=\"n\">PBA</span>\n\n<span class=\"c1\"># connect to POA</span>\n<span class=\"n\">pem</span> <span class=\"o\">=</span> <span class=\"n\">POA</span><span class=\"p\">(</span><span class=\"s1\">'mn.hostname.com'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">8888</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"parallels-operations-automation-poa-api\">\n<h2><a href=\"#id9\" rel=\"nofollow\">Parallels Operations Automation (POA) API</a></h2>\n<p>All but three of the POA API calls start with \u2018pem\u2019, for this reason it is recommended you name your POA connection object \u2018pem\u2019 so you can call functions exactly how they are documented in the POA API as has been done in the examples in this Readme.</p>\n<p>The full POA Public API Reference can be found here:</p>\n<p><a href=\"http://download.pa.parallels.com/poa/5.5/doc/index.htm?fileName=56781.htm\" rel=\"nofollow\">http://download.pa.parallels.com/poa/5.5/doc/index.htm?fileName=56781.htm</a></p>\n<div id=\"basic-api-call\">\n<h3><a href=\"#id10\" rel=\"nofollow\">Basic API Call</a></h3>\n<p>This example will show the <a href=\"http://download.pa.parallels.com/poa/5.5/doc/7915.htm\" rel=\"nofollow\">pem.getAccountInfo</a> method being called.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paAPI</span> <span class=\"kn\">import</span> <span class=\"n\">POA</span>\n\n<span class=\"n\">pem</span> <span class=\"o\">=</span> <span class=\"n\">POA</span><span class=\"p\">(</span><span class=\"s1\">'mn.hostname.com'</span><span class=\"p\">)</span>\n\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'account_id'</span> <span class=\"p\">:</span> <span class=\"mi\">1002242</span>\n<span class=\"p\">}</span>\n\n<span class=\"nb\">print</span> <span class=\"n\">pem</span><span class=\"o\">.</span><span class=\"n\">getAccountInfo</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">d</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># {'status': 0, 'result': {'fax': {'phone_num': '', 'ext_num': '', 'area_code': '', 'country_code': ''}, 'account_type': 'C', 'phone': {'phone_num': '00000000', 'ext_num': '', 'area_code': '04', 'country_code': '61'}, 'brand': {'brand_id': 191, 'domain_name': 'brandingdomain.com', 'name': 'brandname'}, 'email': 'noreply@example.com', 'person': {'first_name': 'John', 'last_name': 'Smith', 'middle_name': '', 'company_name': 'Test Account', 'title': ''}, 'address': {'city': 'Canberra', 'country': 'au', 'street_name': '1 Test Street', 'zipcode': '2621', 'state': 'ACT', 'house_num': '', 'address2': ''}, 'parent_account_id': 1002241}}</span>\n</pre>\n</div>\n<div id=\"api-call-with-array-of-struct\">\n<h3><a href=\"#id11\" rel=\"nofollow\">API Call with \u2018array of struct\u2019</a></h3>\n<p>The POA API often calls for values and settings to be sent as an \u2018array of struct\u2019. This example shows how to send these values using the paAPI client.</p>\n<p>This example is based on the <a href=\"http://download.pa.parallels.com/poa/5.5/doc/39160.htm\" rel=\"nofollow\">pem.activateSubscription</a> method with resources types called \u2018DiskSpace\u2019 and \u2018Bandwidth\u2019 and a domain name.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paAPI</span> <span class=\"kn\">import</span> <span class=\"n\">POA</span>\n\n<span class=\"n\">pem</span> <span class=\"o\">=</span> <span class=\"n\">POA</span><span class=\"p\">(</span><span class=\"s1\">'mn.hostname.com'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># define the resource limits:</span>\n<span class=\"n\">DiskSpace</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"resource_id\"</span> <span class=\"p\">:</span> <span class=\"mi\">1002486</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"resource_limit\"</span> <span class=\"p\">:</span> <span class=\"mi\">1024</span>\n<span class=\"p\">}</span>\n<span class=\"n\">Bandwidth</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"resource_id\"</span> <span class=\"p\">:</span> <span class=\"mi\">1002487</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"resource_limit\"</span> <span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># define the paramaters:</span>\n<span class=\"n\">DomainName</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"var_name\"</span>  <span class=\"p\">:</span> <span class=\"s2\">\"DomainID\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"var_value\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"example.com.au\"</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># setup the call:</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"account_id\"</span>           <span class=\"p\">:</span> <span class=\"mi\">1002242</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"subscription_name\"</span>    <span class=\"p\">:</span> <span class=\"s2\">\"Hosting (example.com.au)\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"subscription_id\"</span>      <span class=\"p\">:</span> <span class=\"mi\">1006754</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"service_template_id\"</span>  <span class=\"p\">:</span> <span class=\"mi\">204</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"resource_limits\"</span>      <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">DiskSpace</span><span class=\"p\">,</span> <span class=\"n\">Bandwidth</span><span class=\"p\">],</span>\n    <span class=\"s2\">\"paramaters\"</span>           <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">DomainName</span><span class=\"p\">],</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># execute the call:</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">pem</span><span class=\"o\">.</span><span class=\"n\">activateSubscription</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">d</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"transactions\">\n<h3><a href=\"#id12\" rel=\"nofollow\">Transactions</a></h3>\n<p>There are three POA API calls that do not start with pem in the official documentation. When using paAPI you can use these API calls as documented but you will still need to prefix them with your POA connection object (the examples on this page use \u2018pem\u2019 as the connection object name).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paAPI</span> <span class=\"kn\">import</span> <span class=\"n\">POA</span>\n\n<span class=\"n\">pem</span> <span class=\"o\">=</span> <span class=\"n\">POA</span><span class=\"p\">(</span><span class=\"s1\">'mn.hostname.com'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># being transaction</span>\n<span class=\"n\">pem</span><span class=\"o\">.</span><span class=\"n\">txn</span><span class=\"o\">.</span><span class=\"n\">Begin</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># commit transaction</span>\n<span class=\"n\">pem</span><span class=\"o\">.</span><span class=\"n\">txn</span><span class=\"o\">.</span><span class=\"n\">Commit</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># rollback transaction</span>\n<span class=\"n\">pem</span><span class=\"o\">.</span><span class=\"n\">txn</span><span class=\"o\">.</span><span class=\"n\">Rollback</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"error-handling\">\n<h3><a href=\"#id13\" rel=\"nofollow\">Error Handling</a></h3>\n<p>The POA API has quite good responces when an error occurs during an API call. The below example shows the responce format for POA API errors:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s1\">'status'</span>         <span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'extype_id'</span>      <span class=\"p\">:</span> <span class=\"mi\">21</span><span class=\"p\">,</span>\n    <span class=\"s1\">'module_id'</span>      <span class=\"p\">:</span> <span class=\"s1\">'OpenAPI'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'error_message'</span>  <span class=\"p\">:</span> <span class=\"s1\">'Invalid set of arguments. There should be specified EITHER external_info OR person, address, phone, [fax], [locale], email.'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'properties'</span>     <span class=\"p\">:</span> <span class=\"p\">{</span>\n                           <span class=\"s1\">'reason'</span><span class=\"p\">:</span> <span class=\"s1\">'Invalid set of arguments. There should be specified EITHER external_info OR person, address, phone, [fax], [locale], email.'</span>\n                       <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n</div>\n<div id=\"parallels-business-automation-pba-api\">\n<h2><a href=\"#id14\" rel=\"nofollow\">Parallels Business Automation (PBA) API</a></h2>\n<p>The PBA API is quite different from the POA API, and not quite as user friendly. The paAPI client makes using the PBA a little easier by standardizing the returned responces, providing status codes, and decoding any error messages.</p>\n<p>The major difference between the POA and PBA api is how values are sent and received. In PBA params are sent and responces are received as a list in a specific order to know what each value represents.</p>\n<p>The full PBA Public API Reference can be found here:</p>\n<p><a href=\"http://download.pa.parallels.com/pba/5.5/doc/pdf/SDK_API/pba_5.5_public_api_reference.pdf\" rel=\"nofollow\">http://download.pa.parallels.com/pba/5.5/doc/pdf/SDK_API/pba_5.5_public_api_reference.pdf</a></p>\n<div id=\"id1\">\n<h3><a href=\"#id15\" rel=\"nofollow\">Basic API Call</a></h3>\n<p>This example will show the <strong>AccountDetailsGet_API</strong> method being called.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paAPI</span> <span class=\"kn\">import</span> <span class=\"n\">PBA</span>\n\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">PBA</span><span class=\"p\">(</span><span class=\"s1\">'pba.hostname.com'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Execute</span><span class=\"p\">(</span><span class=\"s1\">'AccountDetailsGet_API'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'1002242'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># {'status': 0, 'result': [1002242, 1002241, 'Test Account  5543', '1 Test Street', '', 'Canberra', '', '2621', 'au', '', 'John', 'D', 'Smith', 'noreply@example.com', '61', '04', '000000000', '', '', '', '', '', 1351787114, 2, 0]}</span>\n</pre>\n</div>\n<div id=\"alternate-server\">\n<h3><a href=\"#id16\" rel=\"nofollow\">Alternate Server</a></h3>\n<p>Most PBA API method calls use the \u201cBM\u201d server. Some methods use alternate servers such as \u201cPEMGATE\u201d or \u201cDOMAINGATE\u201d. This example shows how to specify an alternate server:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">paAPI</span> <span class=\"kn\">import</span> <span class=\"n\">PBA</span>\n\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">PBA</span><span class=\"p\">(</span><span class=\"s1\">'pba.hostname.com'</span><span class=\"p\">)</span>\n\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Execute</span><span class=\"p\">(</span><span class=\"s1\">'DomainExpirationDateGet_API'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">server</span><span class=\"o\">=</span><span class=\"s1\">'DOMAINGATE'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id17\" rel=\"nofollow\">Error Handling</a></h3>\n<p>paAPI takes the way POA returns errors natively and applies it to the PBA API. The status on each responce will either be <strong>0</strong> for a succesfull call, or <strong>-1</strong> if PBA returned an error.</p>\n<p>This is an example of what is returned in the case of an error:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s1\">'status'</span>        <span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'error_message'</span> <span class=\"p\">:</span> <span class=\"s1\">'Table Account does not contain row with ID 99999999.'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'server'</span>        <span class=\"p\">:</span> <span class=\"s1\">'BM'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'host'</span>          <span class=\"p\">:</span> <span class=\"s1\">'pba.hostname.com'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'params'</span>        <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'99999999'</span><span class=\"p\">],</span>\n    <span class=\"s1\">'result'</span>        <span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"s1\">'method'</span>        <span class=\"p\">:</span> <span class=\"s1\">'AccountDetailsGet_API'</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2656523, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "2fdb508b53fc0521d5e4bb1af18f33e6", "sha256": "2e2d70c679d78ca78c949977ed370421c6265fe88366823f7c9560781957e609"}, "downloads": -1, "filename": "paAPI-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2fdb508b53fc0521d5e4bb1af18f33e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16553, "upload_time": "2014-01-12T13:01:42", "upload_time_iso_8601": "2014-01-12T13:01:42.977624Z", "url": "https://files.pythonhosted.org/packages/c2/28/13d20010a933190ba4546cc21f07a663675c1663ea72a80b08a95fd3ac0a/paAPI-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2fdb508b53fc0521d5e4bb1af18f33e6", "sha256": "2e2d70c679d78ca78c949977ed370421c6265fe88366823f7c9560781957e609"}, "downloads": -1, "filename": "paAPI-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2fdb508b53fc0521d5e4bb1af18f33e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16553, "upload_time": "2014-01-12T13:01:42", "upload_time_iso_8601": "2014-01-12T13:01:42.977624Z", "url": "https://files.pythonhosted.org/packages/c2/28/13d20010a933190ba4546cc21f07a663675c1663ea72a80b08a95fd3ac0a/paAPI-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:16 2020"}