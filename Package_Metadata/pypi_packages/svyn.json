{"info": {"author": "Lance T. Erickson", "author_email": "lancetarn@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Version Control"], "description": "svyn\n====\n\nsvyn is an svn helper. It allows you to specify some typical repository\ninformation in a config file, or use an established convention, and\nsimplifies several common commands based on that information.\nIf you typically branch from a shared trunk, or operate on\nseveral different repositories and would like a couple shortcuts, svyn might\nbe for you. Right now branching and listing/searching branches, as well as\nsimple release tagging are the entirety of its powers.\nFuture features may include support for file history\ninformation and repository introspection.\n\nInstallation\n------------\nSadly, ``pysvn`` is a difficult dependency to manage. I am omitting from the\nsetup file as it cannot be automatically installed due to a host of platform and SVN version\nissues. You will need to get it wherever you want to use ``svyn`` yourself.\n\nI recommend `downloading <http://pysvn.tigris.org/project_downloads.html>`_ the appropriate\nbinaries for your svn and python version. ``svn --version`` and ``python --version`` will\nlet you know what you need.\n\nAside from that,\n\n::\n\n    pip install svyn\n\nshould get you where you need to go.\n\nDefault Behavior\n----------------\n\nWith no ``.svyn.conf``, svyn will examine the working directory as a working copy.\nIt will split the repo URL path and look for the default ``branches``, ``copy_source`` and\n``release`` values (``branches``, ``trunk``, ``tags``) as path parts. It will then try\nto determine the working base of your repo and use the defaults for other operations. If\nyou commonly work on portions of a repo that follow these conventions, you probably won't\nneed to make a ``.svyn.conf``. If your working directory is not a working copy, svyn\nwill failover to the ``default`` section of ``.svyn.conf``.\n\n.svyn.conf\n----------\n\nThe .svyn.conf file contains optional repo information in .ini format. It\nis available should your repo naming scheme follow a different convention.\nIt can handle multiple sections. Each section should specify\nthree variables:\n\n* ``base``: Fully-qualified path (svn+ssh:// or file:///) to the deepest part of the subtree in which you are interested.\n* ``branches``: The path to where your branches are stored.\n* ``copy_source``: The source directory from which branches will be copied.\n* ``release``: The directory where numbered releases are stored\n\nThe ``branches``, ``copy_source``, ``release`` should be relative to the\n``base``. The ``base`` is essentially concatenated with the with one of the\nother variables to generate the full address for svn.\n\nExample conf section\n--------------------\n\n::\n\n    [default]\n    base = svn+ssh://svn/svnroot/some/project/source\n    branches = splinters\n    copy_source = board\n\nIn this case, ``svyn branch foo`` would use\n``svn+ssh://svn/svnroot/some/project/source/board`` as the source for new\nbranches, which it would then copy to ``svn+ssh://svn/svnroot/some/project/source/splinters/foo``\n\nThe section to be searched for the variables can be set for any svyn command\nwith the ``-c`` flag, so ``svyn -c bar_section branch`` would then use variables\nfrom ``[bar_section]`` in the ``.svyn.conf`` file.\n\nCommands\n--------\n\nSee ``svyn -h`` and ``svyn {command} -h`` for quick help\n\n* branch: Copies head of trunk to a branc, named by the command arg.\n* list: Lists current branches, -s to search -m for current user is last committer.\n* release: Copies specified trunk rev to release dir. Will auto-calculate release\n  number or can be overridden.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ClockworkNet/svyn", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "svyn", "package_url": "https://pypi.org/project/svyn/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/svyn/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ClockworkNet/svyn"}, "release_url": "https://pypi.org/project/svyn/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "Convenience functions for svn", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>svyn is an svn helper. It allows you to specify some typical repository\ninformation in a config file, or use an established convention, and\nsimplifies several common commands based on that information.\nIf you typically branch from a shared trunk, or operate on\nseveral different repositories and would like a couple shortcuts, svyn might\nbe for you. Right now branching and listing/searching branches, as well as\nsimple release tagging are the entirety of its powers.\nFuture features may include support for file history\ninformation and repository introspection.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Sadly, <tt>pysvn</tt> is a difficult dependency to manage. I am omitting from the\nsetup file as it cannot be automatically installed due to a host of platform and SVN version\nissues. You will need to get it wherever you want to use <tt>svyn</tt> yourself.</p>\n<p>I recommend <a href=\"http://pysvn.tigris.org/project_downloads.html\" rel=\"nofollow\">downloading</a> the appropriate\nbinaries for your svn and python version. <tt>svn <span class=\"pre\">--version</span></tt> and <tt>python <span class=\"pre\">--version</span></tt> will\nlet you know what you need.</p>\n<p>Aside from that,</p>\n<pre>pip install svyn\n</pre>\n<p>should get you where you need to go.</p>\n</div>\n<div id=\"default-behavior\">\n<h2>Default Behavior</h2>\n<p>With no <tt>.svyn.conf</tt>, svyn will examine the working directory as a working copy.\nIt will split the repo URL path and look for the default <tt>branches</tt>, <tt>copy_source</tt> and\n<tt>release</tt> values (<tt>branches</tt>, <tt>trunk</tt>, <tt>tags</tt>) as path parts. It will then try\nto determine the working base of your repo and use the defaults for other operations. If\nyou commonly work on portions of a repo that follow these conventions, you probably won\u2019t\nneed to make a <tt>.svyn.conf</tt>. If your working directory is not a working copy, svyn\nwill failover to the <tt>default</tt> section of <tt>.svyn.conf</tt>.</p>\n</div>\n<div id=\"svyn-conf\">\n<h2>.svyn.conf</h2>\n<p>The .svyn.conf file contains optional repo information in .ini format. It\nis available should your repo naming scheme follow a different convention.\nIt can handle multiple sections. Each section should specify\nthree variables:</p>\n<ul>\n<li><tt>base</tt>: Fully-qualified path (svn+ssh:// or file:///) to the deepest part of the subtree in which you are interested.</li>\n<li><tt>branches</tt>: The path to where your branches are stored.</li>\n<li><tt>copy_source</tt>: The source directory from which branches will be copied.</li>\n<li><tt>release</tt>: The directory where numbered releases are stored</li>\n</ul>\n<p>The <tt>branches</tt>, <tt>copy_source</tt>, <tt>release</tt> should be relative to the\n<tt>base</tt>. The <tt>base</tt> is essentially concatenated with the with one of the\nother variables to generate the full address for svn.</p>\n</div>\n<div id=\"example-conf-section\">\n<h2>Example conf section</h2>\n<pre>[default]\nbase = svn+ssh://svn/svnroot/some/project/source\nbranches = splinters\ncopy_source = board\n</pre>\n<p>In this case, <tt>svyn branch foo</tt> would use\n<tt><span class=\"pre\">svn+ssh://svn/svnroot/some/project/source/board</span></tt> as the source for new\nbranches, which it would then copy to <tt><span class=\"pre\">svn+ssh://svn/svnroot/some/project/source/splinters/foo</span></tt></p>\n<p>The section to be searched for the variables can be set for any svyn command\nwith the <tt><span class=\"pre\">-c</span></tt> flag, so <tt>svyn <span class=\"pre\">-c</span> bar_section branch</tt> would then use variables\nfrom <tt>[bar_section]</tt> in the <tt>.svyn.conf</tt> file.</p>\n</div>\n<div id=\"commands\">\n<h2>Commands</h2>\n<p>See <tt>svyn <span class=\"pre\">-h</span></tt> and <tt>svyn {command} <span class=\"pre\">-h</span></tt> for quick help</p>\n<ul>\n<li>branch: Copies head of trunk to a branc, named by the command arg.</li>\n<li>list: Lists current branches, -s to search -m for current user is last committer.</li>\n<li>release: Copies specified trunk rev to release dir. Will auto-calculate release\nnumber or can be overridden.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1965999, "releases": {"0.1.0": [], "0.1.2": [{"comment_text": "", "digests": {"md5": "a3e5ba54ef2701cb2f4c42b73e60c3d8", "sha256": "01337d2f84c359bebc5b69ccac2316dd1e1ed5f81bc6af9642fdb219ebb206ef"}, "downloads": -1, "filename": "svyn-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a3e5ba54ef2701cb2f4c42b73e60c3d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7392, "upload_time": "2016-02-19T21:27:36", "upload_time_iso_8601": "2016-02-19T21:27:36.604306Z", "url": "https://files.pythonhosted.org/packages/bf/7b/dffd75a2b9589cda179e2b1166625dbcdd4f828e3a98ca96d3a4fdac7d3a/svyn-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a3e5ba54ef2701cb2f4c42b73e60c3d8", "sha256": "01337d2f84c359bebc5b69ccac2316dd1e1ed5f81bc6af9642fdb219ebb206ef"}, "downloads": -1, "filename": "svyn-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a3e5ba54ef2701cb2f4c42b73e60c3d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7392, "upload_time": "2016-02-19T21:27:36", "upload_time_iso_8601": "2016-02-19T21:27:36.604306Z", "url": "https://files.pythonhosted.org/packages/bf/7b/dffd75a2b9589cda179e2b1166625dbcdd4f828e3a98ca96d3a4fdac7d3a/svyn-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:47 2020"}