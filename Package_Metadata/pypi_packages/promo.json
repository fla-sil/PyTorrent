{"info": {"author": "Tim Mahrt", "author_email": "timmahrt@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "\n-----------------------\nProMo (Prosody Morph)\n-----------------------\n\n.. image:: https://travis-ci.org/timmahrt/ProMo.svg?branch=master\n    :target: https://travis-ci.org/timmahrt/ProMo\n\n.. image:: https://coveralls.io/repos/github/timmahrt/ProMo/badge.svg?branch=master\n    :target: https://coveralls.io/github/timmahrt/ProMo?branch=master\n\n.. image:: https://img.shields.io/badge/license-MIT-blue.svg?\n   :target: http://opensource.org/licenses/MIT\n\n*Questions?  Comments?  Feedback?  Chat with us on gitter!*\n\n.. image:: https://badges.gitter.im/pythonProMo/Lobby.svg?\n   :alt: Join the chat at https://gitter.im/pythonProMo/Lobby\n   :target: https://gitter.im/pythonProMo/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\n-----\n\nA library for manipulating pitch and duration in an algorithmic way, for\nresynthesizing speech.\n\nThis library can be used to resynthesize pitch in natural speech using pitch\ncontours taken from other speech samples, generated pitch contours,\nor through algorithmic manipulations of the source pitch contour.\n\n.. sectnum::\n.. contents::\n\nCommon Use Cases\n================\n\nWhat can you do with this library?\n\nApply the pitch or duration from one speech sample to another.\n\n- alignment happens both in time and in hertz\n\n    - after the morph process, the source pitch points will be at the same\n      absolute pitch and relative time as they are in the target file \n\n    - time is relative to the start and stop time of the interval being\n      considered (e.g. the pitch value at 80% of the duration of the interval).\n      Relative time is used so that the source and target files don't have to\n      be the same length.\n\n    - temporal morphing is a minor effect if the sampling frequency is high\n      but it can be significant when, for example, using a stylized pitch\n      contour with few pitch samples.\n\n- modifications can be done between entire wav files or between\n  corresponding intervals as specified in a textgrid or other annotation\n  (indicating the boundaries of words, stressed vowels, etc.)\n\n    - the larger the file, the less useful the results are likely to be\n      without using a transcript of some sort\n\n    - the transcripts do not have to match in lexical content, only in the\n      number of intervals  (same number of words or phones, etc.)\n\n- modifications can be scaled (it is possible to generate a wav file with\n  a pitch contour that is 30% or 60% between the source and target contours).\n\n- can also morph the pitch range and average pitch independently.\n\n- resynthesis is performed by Praat.\n\n- pitch can be obtained from praat (such as by using praatio)\n  or from other sources (e.g. ESPS getF0)\n\n- plots of the resynthesis (such as the ones below) can be generated\n\n\nIllustrative example\n======================\n\nConsider the phrase \"Mary rolled the barrel\".  In the first recording\n(examples/mary1.wav), \"Mary rolled the barrel\" was said in response\nto a question such as \"Did John roll the barrel?\".  On the other hand,\nin the second recording (examples/mary2.wav) the utterance was said \nin response to a question such as \"What happened yesterday\".\n\n\"Mary\" in \"mary1.wav\" is produced with more emphasis than in \"mary2.wav\".\nIt is longer and carries a more drammatic pitch excursion.  Using \nProMo, we can make mary1.wav spoken similar to mary2.wav, even\nthough they were spoken in a different way and by different speakers.\n\nDuration and pitch carry meaning.  Change these, and you can change the\nmeaning being conveyed.\n\n``Note that modifying pitch and duration too much can introduce artifacts. \nSuch artifacts can be heard even in pitch morphing mary1.wav to mary2.wav.``\n\nPitch morphing (examples/pitch_morph_example.py):\n\n    The following image shows morphing of pitch from mary1.wav to mary2.wav\n    on a word-by-word level\n    in increments of 33% (33%, 66%, 100%).  Note that the morph adjusts the\n    temporal dimension of the target signal to fit the duration of the source\n    signal (the source and generated contours are equally shorter \n    than the target contour).  This occurs at the level of the file unless\n    the user specifies an equal number of segments to align in time\n    (e.g. using word-level transcriptions, as done here, or phone-level\n    transcriptions, etc.)\n\n.. image:: examples/files/mary1_mary2_f0_morph.png\n   :width: 500px\n\nWith the ability to morph pitch range and average pitch, it becomes easier\nto morph contours produced by different speakers:\n\n    The following image shows four different pitch manipulations.  On the \n    **upper left** is the raw morph.  Notice that final output (black line) is\n    very close to the target.  Differences stem from duration differences.\n\n    However, the average pitch and pitch range are qualities of speech that\n    can signify differences in gender in addition to other aspects of\n    speaker identity.  By resetting the average pitch and pitch range to\n    that of the source, it is possible to morph the contour while maintaining\n    aspects of the source speaker's identity.\n\n    The image in the **upper right** contains a morph\n    followed by a reset of the average pitch to the source speaker's average\n    pitch.  In the **bottom right** a morph followed by a reset of the speaker's\n    pitch range.  In the **bottom right** pitch range was reset and then the\n    speaker's average pitch was reset.\n\n    The longer the speech sample, the more representative the pitch range and\n    mean pitch will be of the speaker.  In this example both are skewed higher\n    by the pitch accent on the first word.\n\n    Here the average pitch of the source (a female speaker) is much higher\n    than the target (a male speaker) and the resulting morph sounds like it\n    comes from a different speaker than the source or target speakers.\n    The three recordings that involve resetting pitch range and/or average\n    pitch sound much more natural.\n\n.. image:: examples/files/mary1_mary2_f0_morph_compare.png\n   :width: 500px\n\nDuration morphing (examples/duration_manipulation_example.py):\n\n    The following image shows morphing of duration from mary1.wav to mary2.wav\n    on a word-by-word basis in increments of 33% (33%, 66%, 100%).\n    This process can operate over an entire file or, similar to pitch morphing,\n    with annotated segments, as done in this example.\n\n.. image:: examples/files/mary1_mary2_dur_morph.png\n   :width: 500px\n\n\nTutorials\n================\n\nTutorials for learning about prosody manipulation and how to use ProMo are available.\n\n`Tutorial 1.1: Intro to ProMo <https://nbviewer.jupyter.org/github/timmahrt/ProMo/blob/master/tutorials/tutorial1_1_intro_to_promo.ipynb>`_\n\n`Tutorial 1.2: Pitch manipulation tutorial <https://nbviewer.jupyter.org/github/timmahrt/ProMo/blob/master/tutorials/tutorial1_2_pitch_manipulations.ipynb>`_\n\n\nMajor revisions\n================\n\nVer 1.3 (May 29, 2017)\n\n- added tutorials\n\n- f0Morph() can now exclude certain regions from the morph process if desired\n\nVer 1.2 (January 27, 2017)\n\n- added code for reshaping pitch accents (shift alignment, add plateau, or change height)\n\nVer 1.1 (February 22, 2016)\n\n- f0 morph code for modifying speaker pitch range and average pitch\n\n- (October 20, 2016) Added integration tests with travis CI and coveralls support.\n\nVer 1.0 (January 19, 2016)\n\n- first public release.\n\nBeta (July 1, 2013)\n\n- first version which was utilized in my dissertation work\n\n\nRequirements\n==============\n\n``Python 2.7.*`` or above\n\n``Python 3.3.*`` or above (or below, probably)\n\nMy praatIO library is used extensively and can be downloaded \n`here <https://github.com/timmahrt/praatIO>`_\n\nMatplotlib is needed if you want to plot graphs.\n`Matplotlib website <http://matplotlib.org/>`_\n\nScipy is needed if you want to use interpolation--typically if you have stylized\npitch contours (in praat PitchTier format, for example) that you want to use in\nyour morphing).\n`Scipy website <http://scipy.org/>`_\n\nMatplotlib and SciPy are non-trivial to install, as they depends on several large\npackages.  You can\nvisit their websites for more information.  **I recommend the following instructions to\ninstall matplotlib** which uses *python wheels*.  These will install all required\nlibraries in one fell swoop.\n\nOn Mac, open a terminal and type:\n\n    python -m pip install matplotlib\n\n    python -m pip install scipy\n\nOn Windows, open a cmd or powershell window and type:\n\n    <<path to python>> -m pip install matplotlib\n\n    <<path to python>> -m pip install scipy\n\n    e.g. C:\\\\python27\\\\python.exe -m install matplotlib\n\nOtherwise, to manually install, after downloading the source from github, from a command-line shell, navigate to the directory containing setup.py and type::\n\n    python setup.py install\n\nIf python is not in your path, you'll need to enter the full path e.g.::\n\n\tC:\\Python27\\python.exe setup.py install\n\nUsage\n=========\n\nSee /examples for example usages\n\n\nInstallation\n================\n\nIf you on Windows, you can use the installer found here (check that it is up to date though)\n`Windows installer <http://www.timmahrt.com/python_installers>`_\n\nPromo is on pypi and can be installed or upgraded from the command-line shell with pip like so::\n\n    python -m pip install promo --upgrade\n\nOtherwise, to manually install, after downloading the source from github, from a command-line shell, navigate to the directory containing setup.py and type::\n\n    python setup.py install\n\nIf python is not in your path, you'll need to enter the full path e.g.::\n\n    C:\\Python36\\python.exe setup.py install\n\n\nCiting ProMo\n===============\n\nIf you use ProMo in your research, please cite it like so:\n\nTim Mahrt. ProMo: The Prosody-Morphing Library.\nhttps://github.com/timmahrt/ProMo, 2016.\n\n\nAcknowledgements\n================\n\nDevelopment of ProMo was possible thanks to NSF grant **BCS 12-51343** to\nJennifer Cole, Jos\u00e9 I. Hualde, and Caroline Smith and to the A*MIDEX project\n(n\u00b0 **ANR-11-IDEX-0001-02**) to James Sneed German funded by the\nInvestissements d'Avenir French Government program,\nmanaged by the French National Research Agency (ANR).\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/timmahrt/ProMo", "keywords": "", "license": "LICENSE", "maintainer": "", "maintainer_email": "", "name": "promo", "package_url": "https://pypi.org/project/promo/", "platform": "", "project_url": "https://pypi.org/project/promo/", "project_urls": {"Homepage": "https://github.com/timmahrt/ProMo"}, "release_url": "https://pypi.org/project/promo/1.3.1/", "requires_dist": null, "requires_python": "", "summary": "Library for manipulating pitch and duration in an algorithmic way, for resynthesizing speech", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/timmahrt/ProMo\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/timmahrt/ProMo.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0b487a6920721c2b9c1d3ac2ff980f7b48c1acab/68747470733a2f2f7472617669732d63692e6f72672f74696d6d616872742f50726f4d6f2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/timmahrt/ProMo?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/timmahrt/ProMo/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12a31bc183aab5070479eb7d75c78b8bd791a100/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f74696d6d616872742f50726f4d6f2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/license-MIT-blue.svg?\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/33da0553d4dec93a34e1c4ed30b6d8439fcc8cfd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f\"></a>\n<p><em>Questions?  Comments?  Feedback?  Chat with us on gitter!</em></p>\n<a href=\"https://gitter.im/pythonProMo/Lobby?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Join the chat at https://gitter.im/pythonProMo/Lobby\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e0eed208304168ffc81e02bdfd8cecae24229cfe/68747470733a2f2f6261646765732e6769747465722e696d2f707974686f6e50726f4d6f2f4c6f6262792e7376673f\"></a>\n<hr class=\"docutils\">\n<p>A library for manipulating pitch and duration in an algorithmic way, for\nresynthesizing speech.</p>\n<p>This library can be used to resynthesize pitch in natural speech using pitch\ncontours taken from other speech samples, generated pitch contours,\nor through algorithmic manipulations of the source pitch contour.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#common-use-cases\" id=\"id1\" rel=\"nofollow\">1\u00a0\u00a0\u00a0Common Use Cases</a></li>\n<li><a href=\"#illustrative-example\" id=\"id2\" rel=\"nofollow\">2\u00a0\u00a0\u00a0Illustrative example</a></li>\n<li><a href=\"#tutorials\" id=\"id3\" rel=\"nofollow\">3\u00a0\u00a0\u00a0Tutorials</a></li>\n<li><a href=\"#major-revisions\" id=\"id4\" rel=\"nofollow\">4\u00a0\u00a0\u00a0Major revisions</a></li>\n<li><a href=\"#requirements\" id=\"id5\" rel=\"nofollow\">5\u00a0\u00a0\u00a0Requirements</a></li>\n<li><a href=\"#usage\" id=\"id6\" rel=\"nofollow\">6\u00a0\u00a0\u00a0Usage</a></li>\n<li><a href=\"#installation\" id=\"id7\" rel=\"nofollow\">7\u00a0\u00a0\u00a0Installation</a></li>\n<li><a href=\"#citing-promo\" id=\"id8\" rel=\"nofollow\">8\u00a0\u00a0\u00a0Citing ProMo</a></li>\n<li><a href=\"#acknowledgements\" id=\"id9\" rel=\"nofollow\">9\u00a0\u00a0\u00a0Acknowledgements</a></li>\n</ul>\n</div>\n<div id=\"common-use-cases\">\n<h2><a href=\"#id1\" rel=\"nofollow\">1\u00a0\u00a0\u00a0Common Use Cases</a></h2>\n<p>What can you do with this library?</p>\n<p>Apply the pitch or duration from one speech sample to another.</p>\n<ul>\n<li><p>alignment happens both in time and in hertz</p>\n<blockquote>\n<ul>\n<li>after the morph process, the source pitch points will be at the same\nabsolute pitch and relative time as they are in the target file</li>\n<li>time is relative to the start and stop time of the interval being\nconsidered (e.g. the pitch value at 80% of the duration of the interval).\nRelative time is used so that the source and target files don\u2019t have to\nbe the same length.</li>\n<li>temporal morphing is a minor effect if the sampling frequency is high\nbut it can be significant when, for example, using a stylized pitch\ncontour with few pitch samples.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>modifications can be done between entire wav files or between\ncorresponding intervals as specified in a textgrid or other annotation\n(indicating the boundaries of words, stressed vowels, etc.)</p>\n<blockquote>\n<ul>\n<li>the larger the file, the less useful the results are likely to be\nwithout using a transcript of some sort</li>\n<li>the transcripts do not have to match in lexical content, only in the\nnumber of intervals  (same number of words or phones, etc.)</li>\n</ul>\n</blockquote>\n</li>\n<li><p>modifications can be scaled (it is possible to generate a wav file with\na pitch contour that is 30% or 60% between the source and target contours).</p>\n</li>\n<li><p>can also morph the pitch range and average pitch independently.</p>\n</li>\n<li><p>resynthesis is performed by Praat.</p>\n</li>\n<li><p>pitch can be obtained from praat (such as by using praatio)\nor from other sources (e.g. ESPS getF0)</p>\n</li>\n<li><p>plots of the resynthesis (such as the ones below) can be generated</p>\n</li>\n</ul>\n</div>\n<div id=\"illustrative-example\">\n<h2><a href=\"#id2\" rel=\"nofollow\">2\u00a0\u00a0\u00a0Illustrative example</a></h2>\n<p>Consider the phrase \u201cMary rolled the barrel\u201d.  In the first recording\n(examples/mary1.wav), \u201cMary rolled the barrel\u201d was said in response\nto a question such as \u201cDid John roll the barrel?\u201d.  On the other hand,\nin the second recording (examples/mary2.wav) the utterance was said\nin response to a question such as \u201cWhat happened yesterday\u201d.</p>\n<p>\u201cMary\u201d in \u201cmary1.wav\u201d is produced with more emphasis than in \u201cmary2.wav\u201d.\nIt is longer and carries a more drammatic pitch excursion.  Using\nProMo, we can make mary1.wav spoken similar to mary2.wav, even\nthough they were spoken in a different way and by different speakers.</p>\n<p>Duration and pitch carry meaning.  Change these, and you can change the\nmeaning being conveyed.</p>\n<p><tt>Note that modifying pitch and duration too much can introduce artifacts.\nSuch artifacts can be heard even in pitch morphing mary1.wav to mary2.wav.</tt></p>\n<p>Pitch morphing (examples/pitch_morph_example.py):</p>\n<blockquote>\nThe following image shows morphing of pitch from mary1.wav to mary2.wav\non a word-by-word level\nin increments of 33% (33%, 66%, 100%).  Note that the morph adjusts the\ntemporal dimension of the target signal to fit the duration of the source\nsignal (the source and generated contours are equally shorter\nthan the target contour).  This occurs at the level of the file unless\nthe user specifies an equal number of segments to align in time\n(e.g. using word-level transcriptions, as done here, or phone-level\ntranscriptions, etc.)</blockquote>\n<img alt=\"examples/files/mary1_mary2_f0_morph.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91144b4f816c571855578cf264a87e176d0281e6/6578616d706c65732f66696c65732f6d617279315f6d617279325f66305f6d6f7270682e706e67\" width=\"500px\">\n<p>With the ability to morph pitch range and average pitch, it becomes easier\nto morph contours produced by different speakers:</p>\n<blockquote>\n<p>The following image shows four different pitch manipulations.  On the\n<strong>upper left</strong> is the raw morph.  Notice that final output (black line) is\nvery close to the target.  Differences stem from duration differences.</p>\n<p>However, the average pitch and pitch range are qualities of speech that\ncan signify differences in gender in addition to other aspects of\nspeaker identity.  By resetting the average pitch and pitch range to\nthat of the source, it is possible to morph the contour while maintaining\naspects of the source speaker\u2019s identity.</p>\n<p>The image in the <strong>upper right</strong> contains a morph\nfollowed by a reset of the average pitch to the source speaker\u2019s average\npitch.  In the <strong>bottom right</strong> a morph followed by a reset of the speaker\u2019s\npitch range.  In the <strong>bottom right</strong> pitch range was reset and then the\nspeaker\u2019s average pitch was reset.</p>\n<p>The longer the speech sample, the more representative the pitch range and\nmean pitch will be of the speaker.  In this example both are skewed higher\nby the pitch accent on the first word.</p>\n<p>Here the average pitch of the source (a female speaker) is much higher\nthan the target (a male speaker) and the resulting morph sounds like it\ncomes from a different speaker than the source or target speakers.\nThe three recordings that involve resetting pitch range and/or average\npitch sound much more natural.</p>\n</blockquote>\n<img alt=\"examples/files/mary1_mary2_f0_morph_compare.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7359153ab2c576598dfa79138e90b3d67448ba90/6578616d706c65732f66696c65732f6d617279315f6d617279325f66305f6d6f7270685f636f6d706172652e706e67\" width=\"500px\">\n<p>Duration morphing (examples/duration_manipulation_example.py):</p>\n<blockquote>\nThe following image shows morphing of duration from mary1.wav to mary2.wav\non a word-by-word basis in increments of 33% (33%, 66%, 100%).\nThis process can operate over an entire file or, similar to pitch morphing,\nwith annotated segments, as done in this example.</blockquote>\n<img alt=\"examples/files/mary1_mary2_dur_morph.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b73637866039b4cc7d00042a333744250b18690/6578616d706c65732f66696c65732f6d617279315f6d617279325f6475725f6d6f7270682e706e67\" width=\"500px\">\n</div>\n<div id=\"tutorials\">\n<h2><a href=\"#id3\" rel=\"nofollow\">3\u00a0\u00a0\u00a0Tutorials</a></h2>\n<p>Tutorials for learning about prosody manipulation and how to use ProMo are available.</p>\n<p><a href=\"https://nbviewer.jupyter.org/github/timmahrt/ProMo/blob/master/tutorials/tutorial1_1_intro_to_promo.ipynb\" rel=\"nofollow\">Tutorial 1.1: Intro to ProMo</a></p>\n<p><a href=\"https://nbviewer.jupyter.org/github/timmahrt/ProMo/blob/master/tutorials/tutorial1_2_pitch_manipulations.ipynb\" rel=\"nofollow\">Tutorial 1.2: Pitch manipulation tutorial</a></p>\n</div>\n<div id=\"major-revisions\">\n<h2><a href=\"#id4\" rel=\"nofollow\">4\u00a0\u00a0\u00a0Major revisions</a></h2>\n<p>Ver 1.3 (May 29, 2017)</p>\n<ul>\n<li>added tutorials</li>\n<li>f0Morph() can now exclude certain regions from the morph process if desired</li>\n</ul>\n<p>Ver 1.2 (January 27, 2017)</p>\n<ul>\n<li>added code for reshaping pitch accents (shift alignment, add plateau, or change height)</li>\n</ul>\n<p>Ver 1.1 (February 22, 2016)</p>\n<ul>\n<li>f0 morph code for modifying speaker pitch range and average pitch</li>\n<li>(October 20, 2016) Added integration tests with travis CI and coveralls support.</li>\n</ul>\n<p>Ver 1.0 (January 19, 2016)</p>\n<ul>\n<li>first public release.</li>\n</ul>\n<p>Beta (July 1, 2013)</p>\n<ul>\n<li>first version which was utilized in my dissertation work</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2><a href=\"#id5\" rel=\"nofollow\">5\u00a0\u00a0\u00a0Requirements</a></h2>\n<p><tt>Python 2.7.*</tt> or above</p>\n<p><tt>Python 3.3.*</tt> or above (or below, probably)</p>\n<p>My praatIO library is used extensively and can be downloaded\n<a href=\"https://github.com/timmahrt/praatIO\" rel=\"nofollow\">here</a></p>\n<p>Matplotlib is needed if you want to plot graphs.\n<a href=\"http://matplotlib.org/\" rel=\"nofollow\">Matplotlib website</a></p>\n<p>Scipy is needed if you want to use interpolation\u2013typically if you have stylized\npitch contours (in praat PitchTier format, for example) that you want to use in\nyour morphing).\n<a href=\"http://scipy.org/\" rel=\"nofollow\">Scipy website</a></p>\n<p>Matplotlib and SciPy are non-trivial to install, as they depends on several large\npackages.  You can\nvisit their websites for more information.  <strong>I recommend the following instructions to\ninstall matplotlib</strong> which uses <em>python wheels</em>.  These will install all required\nlibraries in one fell swoop.</p>\n<p>On Mac, open a terminal and type:</p>\n<blockquote>\n<p>python -m pip install matplotlib</p>\n<p>python -m pip install scipy</p>\n</blockquote>\n<p>On Windows, open a cmd or powershell window and type:</p>\n<blockquote>\n<p>&lt;&lt;path to python&gt;&gt; -m pip install matplotlib</p>\n<p>&lt;&lt;path to python&gt;&gt; -m pip install scipy</p>\n<p>e.g. C:\\python27\\python.exe -m install matplotlib</p>\n</blockquote>\n<p>Otherwise, to manually install, after downloading the source from github, from a command-line shell, navigate to the directory containing setup.py and type:</p>\n<pre>python setup.py install\n</pre>\n<p>If python is not in your path, you\u2019ll need to enter the full path e.g.:</p>\n<pre>C:\\Python27\\python.exe setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2><a href=\"#id6\" rel=\"nofollow\">6\u00a0\u00a0\u00a0Usage</a></h2>\n<p>See /examples for example usages</p>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id7\" rel=\"nofollow\">7\u00a0\u00a0\u00a0Installation</a></h2>\n<p>If you on Windows, you can use the installer found here (check that it is up to date though)\n<a href=\"http://www.timmahrt.com/python_installers\" rel=\"nofollow\">Windows installer</a></p>\n<p>Promo is on pypi and can be installed or upgraded from the command-line shell with pip like so:</p>\n<pre>python -m pip install promo --upgrade\n</pre>\n<p>Otherwise, to manually install, after downloading the source from github, from a command-line shell, navigate to the directory containing setup.py and type:</p>\n<pre>python setup.py install\n</pre>\n<p>If python is not in your path, you\u2019ll need to enter the full path e.g.:</p>\n<pre>C:\\Python36\\python.exe setup.py install\n</pre>\n</div>\n<div id=\"citing-promo\">\n<h2><a href=\"#id8\" rel=\"nofollow\">8\u00a0\u00a0\u00a0Citing ProMo</a></h2>\n<p>If you use ProMo in your research, please cite it like so:</p>\n<p>Tim Mahrt. ProMo: The Prosody-Morphing Library.\n<a href=\"https://github.com/timmahrt/ProMo\" rel=\"nofollow\">https://github.com/timmahrt/ProMo</a>, 2016.</p>\n</div>\n<div id=\"acknowledgements\">\n<h2><a href=\"#id9\" rel=\"nofollow\">9\u00a0\u00a0\u00a0Acknowledgements</a></h2>\n<p>Development of ProMo was possible thanks to NSF grant <strong>BCS 12-51343</strong> to\nJennifer Cole, Jos\u00e9 I. Hualde, and Caroline Smith and to the A*MIDEX project\n(n\u00b0 <strong>ANR-11-IDEX-0001-02</strong>) to James Sneed German funded by the\nInvestissements d\u2019Avenir French Government program,\nmanaged by the French National Research Agency (ANR).</p>\n</div>\n\n          </div>"}, "last_serial": 6261094, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "1a13cbc1092f0b83d337e9762822a77b", "sha256": "63163e77e93f6206c1de44824790e1921bca2e142948128bdf1dab830106f4fb"}, "downloads": -1, "filename": "promo-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1a13cbc1092f0b83d337e9762822a77b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 21423, "upload_time": "2016-10-20T20:17:33", "upload_time_iso_8601": "2016-10-20T20:17:33.816083Z", "url": "https://files.pythonhosted.org/packages/90/c7/6a943ea970533de0fe85992b2cc5657c61008b58a40ac58d59c3dfd53b72/promo-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8dad713c754eef7d913d2e692ba0164", "sha256": "b900b19ba1f989130ae32ea912577acdc30178c6a6d380a22fa23134662c67da"}, "downloads": -1, "filename": "promo-1.1.0.zip", "has_sig": false, "md5_digest": "f8dad713c754eef7d913d2e692ba0164", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25260, "upload_time": "2016-10-20T20:17:28", "upload_time_iso_8601": "2016-10-20T20:17:28.344106Z", "url": "https://files.pythonhosted.org/packages/0f/27/1c929a2927baa0f532f2587e8cd696a188d0f7c857dc865c8d4dc7de8470/promo-1.1.0.zip", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "26fbddd64798d436433587c03ab2628d", "sha256": "f4413591216ba8bc7cfe23b18308f53fa040d3f2c22e0b4eeab669a0a283cb68"}, "downloads": -1, "filename": "promo-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "26fbddd64798d436433587c03ab2628d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21428, "upload_time": "2017-01-15T15:11:15", "upload_time_iso_8601": "2017-01-15T15:11:15.886612Z", "url": "https://files.pythonhosted.org/packages/2f/14/80b806c0fa822bee502270f996cf016fa78ba77a06da4c99144e1034ad82/promo-1.1.1-py2.py3-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "5ce4d17deb83ca7d6a59de0b2feeecea", "sha256": "537f2c2e5dc8a4dc37c7bd14f21dc0b43fa172a96409b81d00beedb832f484bb"}, "downloads": -1, "filename": "promo-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5ce4d17deb83ca7d6a59de0b2feeecea", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23286, "upload_time": "2017-01-27T14:54:26", "upload_time_iso_8601": "2017-01-27T14:54:26.196325Z", "url": "https://files.pythonhosted.org/packages/f4/1b/d7329a42a5d0f2bb3b23d1bf567833f696623c301e81741e27f8eaac98d0/promo-1.2.0-py2.py3-none-any.whl", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "9155da97ccbd7e9363603605237e4584", "sha256": "ea3d48241b45995f116f87cde78ebf21bffd2fe2dc2898fb9bd2afce1a412c2e"}, "downloads": -1, "filename": "promo-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9155da97ccbd7e9363603605237e4584", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23346, "upload_time": "2017-01-30T17:19:20", "upload_time_iso_8601": "2017-01-30T17:19:20.194784Z", "url": "https://files.pythonhosted.org/packages/9a/b0/8c983418f237e9e90987094b7640f24219b1f92be986f1dca1ff481e104d/promo-1.2.1-py2.py3-none-any.whl", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "730f92ce424b632d5ff7e27500269ced", "sha256": "afa458620bb188f08e2e184baa54eb571067d7cebadb7b7e736fd7904202c537"}, "downloads": -1, "filename": "promo-1.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "730f92ce424b632d5ff7e27500269ced", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23450, "upload_time": "2017-03-17T17:00:04", "upload_time_iso_8601": "2017-03-17T17:00:04.452892Z", "url": "https://files.pythonhosted.org/packages/88/91/1542398881397dc5d8c0bf6043eee7abc27fdc74ea1f4f3dc2729bf6dfc6/promo-1.2.2-py2.py3-none-any.whl", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "fc370496b2b55ad9ecf2622a1bd4bc50", "sha256": "d8dc22335380aef2c53cdd6937b58d5d965f7ed1a1b15e59fa5b018f7649167d"}, "downloads": -1, "filename": "promo-1.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fc370496b2b55ad9ecf2622a1bd4bc50", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23432, "upload_time": "2017-05-09T13:02:06", "upload_time_iso_8601": "2017-05-09T13:02:06.817499Z", "url": "https://files.pythonhosted.org/packages/10/5e/8eb4506fceccafd8949632244e08263c5a49b1dcc6fb62ad21acec579ee2/promo-1.2.3-py2.py3-none-any.whl", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "07abfb10c86f502ba775f305f7c971e3", "sha256": "7c2bb48ac0f4f32753269eef1915dfbf43513e83786b4616f5e38adc8f84822a"}, "downloads": -1, "filename": "promo-1.2.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "07abfb10c86f502ba775f305f7c971e3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23430, "upload_time": "2017-05-09T20:52:40", "upload_time_iso_8601": "2017-05-09T20:52:40.970968Z", "url": "https://files.pythonhosted.org/packages/53/ae/99d838399df159ec55e7e0cf6ba87e9418337eb7ce3aaf822ba07e1e1265/promo-1.2.5-py2.py3-none-any.whl", "yanked": false}], "1.2.6": [{"comment_text": "", "digests": {"md5": "4c04f3fd0807370f688aa21886c28768", "sha256": "755c177195306934ceed1f977d4656ca03fb92f8b5d7b5d0235aeb2d8326ad44"}, "downloads": -1, "filename": "promo-1.2.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4c04f3fd0807370f688aa21886c28768", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23548, "upload_time": "2017-05-17T14:50:12", "upload_time_iso_8601": "2017-05-17T14:50:12.295688Z", "url": "https://files.pythonhosted.org/packages/e3/46/2c4f7cf9522fa208516ab36739a7f0cdc944e5a930a84f0689e5f4badcd1/promo-1.2.6-py2.py3-none-any.whl", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "89e663bf255c58de3d0cb91e355ad040", "sha256": "c4ac6731e8e5b158c646684f9a405edcdf71e3d16f651e065d57afe6561f331d"}, "downloads": -1, "filename": "promo-1.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "89e663bf255c58de3d0cb91e355ad040", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24355, "upload_time": "2017-05-29T07:39:20", "upload_time_iso_8601": "2017-05-29T07:39:20.555834Z", "url": "https://files.pythonhosted.org/packages/b7/17/0844b52a29759750e72a5ee8608765b9ca1a5451f8a32e7cf3b1d9fbc7a0/promo-1.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49ae85ecf60433651746c655558bcf80", "sha256": "68f92bbb7a8c9014c14854658dd650a2b6ca014b8d93d723185c619125f2f7c6"}, "downloads": -1, "filename": "promo-1.3.0.tar.gz", "has_sig": false, "md5_digest": "49ae85ecf60433651746c655558bcf80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21119, "upload_time": "2019-04-30T15:44:10", "upload_time_iso_8601": "2019-04-30T15:44:10.974947Z", "url": "https://files.pythonhosted.org/packages/45/32/04170c674e3fe7c0106ff788b2a3f235125f0cbd841fff9dc7c13770139b/promo-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "aa763cdbcdac649a866396069830200d", "sha256": "ccc318f78e2b1b079eaa0c16367d4bfb09a58f1943f53669efc6e1c1ea2c5415"}, "downloads": -1, "filename": "promo-1.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aa763cdbcdac649a866396069830200d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20680, "upload_time": "2019-12-08T10:45:22", "upload_time_iso_8601": "2019-12-08T10:45:22.990523Z", "url": "https://files.pythonhosted.org/packages/6b/1c/0de13cf2fac9380d9ea0254ecd94e65c43473000f6d839fb5c820123b1f8/promo-1.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9cbc0583a22d2e6e3edb83fd9dbbb577", "sha256": "ab1e7993dc96366c64dbc9a5c55344f41dd0cb27c13b9ff792a51936e531192e"}, "downloads": -1, "filename": "promo-1.3.1.tar.gz", "has_sig": false, "md5_digest": "9cbc0583a22d2e6e3edb83fd9dbbb577", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21723, "upload_time": "2019-12-08T10:45:24", "upload_time_iso_8601": "2019-12-08T10:45:24.998450Z", "url": "https://files.pythonhosted.org/packages/48/1c/d26318fe2599723b65ef89e98cd74a97f097e994bf61801719571bb95fee/promo-1.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aa763cdbcdac649a866396069830200d", "sha256": "ccc318f78e2b1b079eaa0c16367d4bfb09a58f1943f53669efc6e1c1ea2c5415"}, "downloads": -1, "filename": "promo-1.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aa763cdbcdac649a866396069830200d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20680, "upload_time": "2019-12-08T10:45:22", "upload_time_iso_8601": "2019-12-08T10:45:22.990523Z", "url": "https://files.pythonhosted.org/packages/6b/1c/0de13cf2fac9380d9ea0254ecd94e65c43473000f6d839fb5c820123b1f8/promo-1.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9cbc0583a22d2e6e3edb83fd9dbbb577", "sha256": "ab1e7993dc96366c64dbc9a5c55344f41dd0cb27c13b9ff792a51936e531192e"}, "downloads": -1, "filename": "promo-1.3.1.tar.gz", "has_sig": false, "md5_digest": "9cbc0583a22d2e6e3edb83fd9dbbb577", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21723, "upload_time": "2019-12-08T10:45:24", "upload_time_iso_8601": "2019-12-08T10:45:24.998450Z", "url": "https://files.pythonhosted.org/packages/48/1c/d26318fe2599723b65ef89e98cd74a97f097e994bf61801719571bb95fee/promo-1.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:05 2020"}