{"info": {"author": "F\u00e1bio Mac\u00eado Mendes", "author_email": "fabiomacedomendes@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries"], "description": "Sulfur is a simplified web driver interface for python-selenium. Sulfur has\na more pleasant (and less java-esque) interface and also uses BeautifulSoup\nto make an even tastier API.\n\nSulfur's main goal is to help writing tests for Web applications. It has\na builtin pytest plugin that defines a few useful fixtures, but it can also be\nused with other testing libraries.\n\nYou can use Sulfur anywhere that Selenium would be used. Besides the obvious\nuse case of writing integration tests for web development, Sulfur can be used on\nautomation, data-mining, presentations, etc.\n\n\nBasic Usage\n===========\n\nLet us start a new webdriver (sulfur uses PhantomJS by default):\n\n>>> from sulfur import Driver\n>>> driver = Driver('chrome', home='http://www.python.org')      # doctest: +SKIP\n\n.. invisible-code-block:: python\n    driver = Driver('phantomjs', home='http://www.python.org')\n\nThe driver object is used to control the web browser. Now you can send commands,\ninspect the page, and interact with the browser in many ways. First say hello :)\n\n>>> driver.script('alert(\"Hello World!\")')\n\nAnd now goodbye!\n\n>>> driver.close()\n\nBasic actions\n=============\n\nSulfur supports basic navegations actions by the :meth:`sulfur.Driver.back`,\n:meth:`sulfur.Driver.forward`, :func:`sulfur.Driver.home`, :meth:`sulfur.Driver.refresh`, and\n:meth:`sulfur.Driver.open` methods.\n\nUser input can be simulated with the :meth:`sulfur.Driver.click`,\n:meth:`sulfur.Driver.send_keys` methods. Sulfur also makes it possible to execute\nscripts (:meth:`sulfur.Driver.script`), take screen shots (:meth:`Driver.screenshot`)\nand fetch the page HTML source (:meth:`sulfur.Driver.source`).\n\nThe full API is covered at :class:`sufur.Driver`.\n\nSelectors and queries\n=====================\n\nYou can query elements in the current web page using the familiar CSS selector\nsyntax. The :meth:`driver.Driver.elem` method retrieves a single element and\n:meth:`driver.Driver.query` returns a queryset with all matches to that query\nselector.\n\n>>> driver.find('p')  # fetches all <p>'s in page              # doctest: +SKIP\n<QuerySet: [...]>\n\nQueries can be nested in a way similar to jQuery.\n\n>>> driver.query('div').find('p').filter('.emph')               # doctest: +SKIP\n<QuerySet: [...]>\n\nThis finds all <divs>'s in page, then selects their <p>'s children and then\nfilters the result to paragraphs with the \"emph\" class.\n\n\n\nselector.\n\n>>> driver.find('p')  # fetches all <p>'s in page              # doctest: +SKIP\n<QuerySet: [...]>\n\nQueries can be nested in a way similar to jQuery.\n\n>>> driver.query('div').find('p').filter('.emph')               # doctest: +SKIP\n<QuerySet: [...]>\n\nThis finds all <divs>'s in page, then selects their <p>'s children and then\nfilters the result to paragraphs with the \"emph\" class.\n\n\n\nselector.\n\n>>> driver.query('p')  # fetches all <p>'s in page              # doctest: +SKIP\n<QuerySet: [...]>\n\nQueries can be nested in a way similar to jQuery.\n\n>>> driver.find('div').find('p').filter('.emph')               # doctest: +SKIP\n<QuerySet: [...]>\n\nThis finds all <divs>'s in page, then selects their <p>'s children and then\nfilters the result to paragraphs with the \"emph\" class.\n\n\n\nselector.\n\n>>> driver.query('p')  # fetches all <p>'s in page              # doctest: +SKIP\n<QuerySet: [...]>\n\nQueries can be nested in a way similar to jQuery.\n\n>>> driver.find('div').find('p').filter('.emph')               # doctest: +SKIP\n<QuerySet: [...]>\n\nThis finds all <divs>'s in page, then selects their <p>'s children and then\nfilters the result to paragraphs with the \"emph\" class.\n\n\n\nselector.\n\n>>> driver.query('p')  # fetches all <p>'s in page              # doctest: +SKIP\n<QuerySet: [...]>\n\nQueries can be nested in a way similar to jQuery.\n\n>>> driver.query('div').find('p').filter('.emph')               # doctest: +SKIP\n<QuerySet: [...]>\n\nThis finds all <divs>'s in page, then selects their <p>'s children and then\nfilters the result to paragraphs with the \"emph\" class.\n\n\nWhat's up with this name?\n=========================\n\nSulfur is the element that sits just on top of Selenium in the periodic table.\nElements within the same column share many chemical and electronic properties,\nbut since Sulfur has an atomic number of only 16 (vs. 34 for Selenium), it is\nconsiderably lighter ;)", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sulfur", "package_url": "https://pypi.org/project/sulfur/", "platform": "any", "project_url": "https://pypi.org/project/sulfur/", "project_urls": null, "release_url": "https://pypi.org/project/sulfur/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "A lightweight interface to python-selenium.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            Sulfur is a simplified web driver interface for python-selenium. Sulfur has<br>a more pleasant (and less java-esque) interface and also uses BeautifulSoup<br>to make an even tastier API.<br><br>Sulfur's main goal is to help writing tests for Web applications. It has<br>a builtin pytest plugin that defines a few useful fixtures, but it can also be<br>used with other testing libraries.<br><br>You can use Sulfur anywhere that Selenium would be used. Besides the obvious<br>use case of writing integration tests for web development, Sulfur can be used on<br>automation, data-mining, presentations, etc.<br><br><br>Basic Usage<br>===========<br><br>Let us start a new webdriver (sulfur uses PhantomJS by default):<br><br>&gt;&gt;&gt; from sulfur import Driver<br>&gt;&gt;&gt; driver = Driver('chrome', home='http://www.python.org')      # doctest: +SKIP<br><br>.. invisible-code-block:: python<br>    driver = Driver('phantomjs', home='http://www.python.org')<br><br>The driver object is used to control the web browser. Now you can send commands,<br>inspect the page, and interact with the browser in many ways. First say hello :)<br><br>&gt;&gt;&gt; driver.script('alert(\"Hello World!\")')<br><br>And now goodbye!<br><br>&gt;&gt;&gt; driver.close()<br><br>Basic actions<br>=============<br><br>Sulfur supports basic navegations actions by the :meth:`sulfur.Driver.back`,<br>:meth:`sulfur.Driver.forward`, :func:`sulfur.Driver.home`, :meth:`sulfur.Driver.refresh`, and<br>:meth:`sulfur.Driver.open` methods.<br><br>User input can be simulated with the :meth:`sulfur.Driver.click`,<br>:meth:`sulfur.Driver.send_keys` methods. Sulfur also makes it possible to execute<br>scripts (:meth:`sulfur.Driver.script`), take screen shots (:meth:`Driver.screenshot`)<br>and fetch the page HTML source (:meth:`sulfur.Driver.source`).<br><br>The full API is covered at :class:`sufur.Driver`.<br><br>Selectors and queries<br>=====================<br><br>You can query elements in the current web page using the familiar CSS selector<br>syntax. The :meth:`driver.Driver.elem` method retrieves a single element and<br>:meth:`driver.Driver.query` returns a queryset with all matches to that query<br>selector.<br><br>&gt;&gt;&gt; driver.find('p')  # fetches all &lt;p&gt;'s in page              # doctest: +SKIP<br>&lt;QuerySet: [...]&gt;<br><br>Queries can be nested in a way similar to jQuery.<br><br>&gt;&gt;&gt; driver.query('div').find('p').filter('.emph')               # doctest: +SKIP<br>&lt;QuerySet: [...]&gt;<br><br>This finds all &lt;divs&gt;'s in page, then selects their &lt;p&gt;'s children and then<br>filters the result to paragraphs with the \"emph\" class.<br><br><br><br>selector.<br><br>&gt;&gt;&gt; driver.find('p')  # fetches all &lt;p&gt;'s in page              # doctest: +SKIP<br>&lt;QuerySet: [...]&gt;<br><br>Queries can be nested in a way similar to jQuery.<br><br>&gt;&gt;&gt; driver.query('div').find('p').filter('.emph')               # doctest: +SKIP<br>&lt;QuerySet: [...]&gt;<br><br>This finds all &lt;divs&gt;'s in page, then selects their &lt;p&gt;'s children and then<br>filters the result to paragraphs with the \"emph\" class.<br><br><br><br>selector.<br><br>&gt;&gt;&gt; driver.query('p')  # fetches all &lt;p&gt;'s in page              # doctest: +SKIP<br>&lt;QuerySet: [...]&gt;<br><br>Queries can be nested in a way similar to jQuery.<br><br>&gt;&gt;&gt; driver.find('div').find('p').filter('.emph')               # doctest: +SKIP<br>&lt;QuerySet: [...]&gt;<br><br>This finds all &lt;divs&gt;'s in page, then selects their &lt;p&gt;'s children and then<br>filters the result to paragraphs with the \"emph\" class.<br><br><br><br>selector.<br><br>&gt;&gt;&gt; driver.query('p')  # fetches all &lt;p&gt;'s in page              # doctest: +SKIP<br>&lt;QuerySet: [...]&gt;<br><br>Queries can be nested in a way similar to jQuery.<br><br>&gt;&gt;&gt; driver.find('div').find('p').filter('.emph')               # doctest: +SKIP<br>&lt;QuerySet: [...]&gt;<br><br>This finds all &lt;divs&gt;'s in page, then selects their &lt;p&gt;'s children and then<br>filters the result to paragraphs with the \"emph\" class.<br><br><br><br>selector.<br><br>&gt;&gt;&gt; driver.query('p')  # fetches all &lt;p&gt;'s in page              # doctest: +SKIP<br>&lt;QuerySet: [...]&gt;<br><br>Queries can be nested in a way similar to jQuery.<br><br>&gt;&gt;&gt; driver.query('div').find('p').filter('.emph')               # doctest: +SKIP<br>&lt;QuerySet: [...]&gt;<br><br>This finds all &lt;divs&gt;'s in page, then selects their &lt;p&gt;'s children and then<br>filters the result to paragraphs with the \"emph\" class.<br><br><br>What's up with this name?<br>=========================<br><br>Sulfur is the element that sits just on top of Selenium in the periodic table.<br>Elements within the same column share many chemical and electronic properties,<br>but since Sulfur has an atomic number of only 16 (vs. 34 for Selenium), it is<br>considerably lighter ;)\n          </div>"}, "last_serial": 2727915, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6e2611202aca448cb66642c0d6e35416", "sha256": "67cf42f271e1eb68a7b4e46ee68ed6dca5944afd8b199601c00459387b0d4cce"}, "downloads": -1, "filename": "sulfur-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6e2611202aca448cb66642c0d6e35416", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5490, "upload_time": "2016-07-28T19:58:27", "upload_time_iso_8601": "2016-07-28T19:58:27.498626Z", "url": "https://files.pythonhosted.org/packages/75/84/37b8d61d80b45a93b36e0d5963363a58d5485bb02d36ef472f09f38642f2/sulfur-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "bef169c3b3c2ff36b7865f850fe96da2", "sha256": "5ff2ce23df5c33490abd7595cbaad3c7cbc1d6f444ddb354af1a66c287bd63f8"}, "downloads": -1, "filename": "sulfur-0.1.1.tar.gz", "has_sig": false, "md5_digest": "bef169c3b3c2ff36b7865f850fe96da2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11763, "upload_time": "2016-10-10T00:04:08", "upload_time_iso_8601": "2016-10-10T00:04:08.909421Z", "url": "https://files.pythonhosted.org/packages/e5/a5/fab98c7895428676f1d33d1a1142a42a135283d50c93bce111c89c41a265/sulfur-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "eece91cbc6bf74107934c3f015efced2", "sha256": "fbf4d48976383817b6e625ad3315e3b60759815fbc26b72c6bb8667d024f066c"}, "downloads": -1, "filename": "sulfur-0.1.2.tar.gz", "has_sig": false, "md5_digest": "eece91cbc6bf74107934c3f015efced2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15708, "upload_time": "2016-11-29T20:33:39", "upload_time_iso_8601": "2016-11-29T20:33:39.936551Z", "url": "https://files.pythonhosted.org/packages/3f/20/407e64f82150ce5ae0932801614066afc01681ad154557fbadb41026548f/sulfur-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "c9557872e0d3d401205d60a9e343221d", "sha256": "584f1f50d0941971cb80bed308fd644d090a853fec54b8b6db445d2a678e0912"}, "downloads": -1, "filename": "sulfur-0.1.3.tar.gz", "has_sig": false, "md5_digest": "c9557872e0d3d401205d60a9e343221d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19290, "upload_time": "2016-12-01T21:24:59", "upload_time_iso_8601": "2016-12-01T21:24:59.693425Z", "url": "https://files.pythonhosted.org/packages/bf/25/3f9fdb4257a8750ccc6917100bd2197f0adb9dd1c10da5692b20cb532b21/sulfur-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "b35f9d804f5d689289b0b8172baaaaaf", "sha256": "682ab43faaadf2689e9d7c1d0994ba0542dc284fb1f8bfc7b46c04317d3277cd"}, "downloads": -1, "filename": "sulfur-0.1.4.tar.gz", "has_sig": false, "md5_digest": "b35f9d804f5d689289b0b8172baaaaaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27921, "upload_time": "2017-03-24T11:36:37", "upload_time_iso_8601": "2017-03-24T11:36:37.318897Z", "url": "https://files.pythonhosted.org/packages/c4/f6/9e6f451e35b2568cb28fb94457963fccecd551d2577792f1d4a301bd890f/sulfur-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b35f9d804f5d689289b0b8172baaaaaf", "sha256": "682ab43faaadf2689e9d7c1d0994ba0542dc284fb1f8bfc7b46c04317d3277cd"}, "downloads": -1, "filename": "sulfur-0.1.4.tar.gz", "has_sig": false, "md5_digest": "b35f9d804f5d689289b0b8172baaaaaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27921, "upload_time": "2017-03-24T11:36:37", "upload_time_iso_8601": "2017-03-24T11:36:37.318897Z", "url": "https://files.pythonhosted.org/packages/c4/f6/9e6f451e35b2568cb28fb94457963fccecd551d2577792f1d4a301bd890f/sulfur-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:27 2020"}