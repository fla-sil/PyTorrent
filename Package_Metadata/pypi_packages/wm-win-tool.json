{"info": {"author": "Hans-Peter Jansen", "author_email": "hpj@urpla.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "wm-win-tool\n===========\nStore desktops, geometries, and shade states of X11 windows, selected by\nwindow title and class patterns, in order to restore their layouts later on.\n\nThe primary reason for this program to exist is Firefox, that fails to restore\nits session properly under usual X11 window managers (KF5 in my case).\n\nNote, that the problem is well known, but unfortunately, little has been done\nin the last 13 years to [solve this issue](https://bugzilla.mozilla.org/show_bug.cgi?id=372650).\n\nThis program is an humble attempt to solve it manually/externally, but might\nprove useful for other constellations as well.\n\nUsage:\n------\n```\nwm-win-tool [-hVvfbr] [-c class][-t title] store\nwm-win-tool [-hVvfbr] [-c class][-t title] restore [arg]\nwm-win-tool [-hVvb][-c class][-t title] curlist [max]\nwm-win-tool [-hVv] list [max]\n       -h, --help           this message\n       -V, --version        print version and exit\n       -v, --verbose        verbose mode (cumulative)\n       -f, --force          force store\n       -b, --bracket        use the bracket pattern\n       -r, --regexp         class and title pattern are regexp\n       -c, --class class    match window class\n       -t, --title title    match window title\n```\n\nCommands\n--------\n`store` will save the geometry, desktop, and shaded state of selected windows\nby class or pattern, unless the previous state is unchanged or the operation\nis enforced with `--force`.\n\n`restore` will restore the window geometries, matched by class or pattern,\n`arg` is either a timestamp from the store list, or a relative index (eg. -1\nfor the latest session [default], -2 for the one before...).\n\nNote, that the selection parameters for store and restore *should* match.\n\nUse the `curlist` command to test your current selection options.\n\n`list` shows the available sessions up to an optional maximum number of items\nto be restored, sorted by date (descending).\n\nOptions\n-------\n`--class` and `--title` are simple case sensitive wildcard pattern, that can\nbe supplied multiple times to match a subset of windows. `--regexp` switches\nthem to regular expression matching. Make sure to properly quote such\narguments.\n\nThe `--bracket` option just matches the part of the window title in square\nbrackets, eg.: `[title] long title` will just match `[title]`. This is most\nuseful in conjunction with Firefox and the\n[Window Titler addon](https://github.com/tpamula/webextension-window-titler).\n\nExample Usage\n-------------\nCasual approach to restore your Firefox session:\n```\nwm-win-tool -bc Navigator.Firefox store\n```\nwill save every Firefox window, and\n```\nwm-win-tool -bc Navigator.Firefox restore\n```\nwill restore all recognized windows. The only downside is, that the window\ntitles must match **exactly** to be restored correctly. So better make sure to\nrun this tool right before leaving the session.\n\nA more robust approach to the issue in question: install the\n`Window Titler addon` and supply all windows, that you want to have managed\nwith a **unique** title, that appears in square brackets in front of the\nwindow title. This provides a static title, independent from which tab is\nactived.\n\nNow saving a session is as easy as:\n```\nwm-win-tool -vb store\n```\n\nYou can run this command as many times as you want. As long as the session\nwasn't changed meanwhile, it won't store a new session (unless the `--force`\noption is supplied).\n\nAfter reboot, you may wish to restore this session:\n```\nwm-win-tool -vb restore\n```\n\u00e9 voila, the windows move to their original desktops, and have their former\ngeometry and shaded state applied.\n\nInstall\n-------\nUsing pip:\n```\n$ pip install wm-win-tool\n```\n\nFrom source:\n```\n$ wget https://files.pythonhosted.org/packages/source/w/wm-win-tool/wm-win-tool-<version>.tar.gz\n$ tar xvf wm-win-tool-<version>.tar.gz\n$ cd wm-win-tool-<version>\n$ python3 setup.py install\n```\n\nDependencies\n------------\nYou need to make sure, that the command line programs `wmctrl` and `xprop` are\ninstalled. Check with your distributions package manager..\n\nConsequently, `wm-win-tool` needs a proper DISPLAY/XAUTHORITY environment\nsetup.\n\nFinal notes\n-----------\nThere are good chances, that the Firefox issue is fixed with Version 75. Hooray.\nLet's hope for the best. If all goes well, this tool provides a nice way to\n**validate** the final fix. If all windows match, it will not perform any action\non (verbose) restore. :wink:\n\nThe commands `store` and `restore` could be implicitly triggered, when executed\nvia symlinks to `wm-win-tool`, eg.:\n```\n$ cd <whatever>/bin\n$ ln -s wm-win-tool wm-win-store\n$ ln -s wm-win-tool wm-win-restore\n```\nThese operation modes come with some hardcoded defaults: `--bracket` and\n`--verbose` for the most usual usage patterns. If that's not enough, a config\nfile option might be useful (TBD).\n\nThe session data is saved in `~/local/share/wm-win-tool`.\n\nIn pathological cases (where I count in for sure), it might be advantageous\nto exclude Firefox from the window manager session restore completely. kwin5\nis configurable as such. When executing Firefox after reboot, it will open all\nsession windows on your **current** desktop then. Run `wm-win-restore` and *be\ndone*.\n\nIf you plan to run `wm-win-store` from `crontab -e`, keep in mind, that most\ncron implementations suffer from variable expansion issues. Here is an\nexample, that should work with Vixie cron:\n```\n#PATH=$HOME/bin:/bin:/usr/bin\t# won't work\n#XAUTHORITY=~/.Xauthority\t# neither that\n\n# store firefox window list\n42 * * * * XAUTHORITY=~/.Xauthority DISPLAY=:0 wm-win-tool -b store\n```\n`AUTHORITY`is expanded from the shell in this case, which is necessary to\noperate properly. Depending on the way, you installed `wm-win-tool`, you might\nneed to adjust the path as well. We also avoid using the symlink shortcut\nhere due to its implicit verbosity level.\n\nSome things are realized in a pretty `oldschool` way, eg. command line\nhandling, but until the command line interface gets **significantly** more\ncomplex, I prefer to do it this way (since ages).\n\nIf you have other ideas, interesting applications, what ever, let me know.\n\nFeedback welcome.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/frispete/wm-win-tool", "keywords": "", "license": "GNU GPL 2 - see https://www.gnu.org/licenses/gpl2.txt for details", "maintainer": "", "maintainer_email": "", "name": "wm-win-tool", "package_url": "https://pypi.org/project/wm-win-tool/", "platform": "", "project_url": "https://pypi.org/project/wm-win-tool/", "project_urls": {"Homepage": "https://github.com/frispete/wm-win-tool"}, "release_url": "https://pypi.org/project/wm-win-tool/0.1.6/", "requires_dist": null, "requires_python": ">=3", "summary": "Store and restore desktops, geometries and shaded state of selected X11 windows", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>wm-win-tool</h1>\n<p>Store desktops, geometries, and shade states of X11 windows, selected by\nwindow title and class patterns, in order to restore their layouts later on.</p>\n<p>The primary reason for this program to exist is Firefox, that fails to restore\nits session properly under usual X11 window managers (KF5 in my case).</p>\n<p>Note, that the problem is well known, but unfortunately, little has been done\nin the last 13 years to <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=372650\" rel=\"nofollow\">solve this issue</a>.</p>\n<p>This program is an humble attempt to solve it manually/externally, but might\nprove useful for other constellations as well.</p>\n<h2>Usage:</h2>\n<pre><code>wm-win-tool [-hVvfbr] [-c class][-t title] store\nwm-win-tool [-hVvfbr] [-c class][-t title] restore [arg]\nwm-win-tool [-hVvb][-c class][-t title] curlist [max]\nwm-win-tool [-hVv] list [max]\n       -h, --help           this message\n       -V, --version        print version and exit\n       -v, --verbose        verbose mode (cumulative)\n       -f, --force          force store\n       -b, --bracket        use the bracket pattern\n       -r, --regexp         class and title pattern are regexp\n       -c, --class class    match window class\n       -t, --title title    match window title\n</code></pre>\n<h2>Commands</h2>\n<p><code>store</code> will save the geometry, desktop, and shaded state of selected windows\nby class or pattern, unless the previous state is unchanged or the operation\nis enforced with <code>--force</code>.</p>\n<p><code>restore</code> will restore the window geometries, matched by class or pattern,\n<code>arg</code> is either a timestamp from the store list, or a relative index (eg. -1\nfor the latest session [default], -2 for the one before...).</p>\n<p>Note, that the selection parameters for store and restore <em>should</em> match.</p>\n<p>Use the <code>curlist</code> command to test your current selection options.</p>\n<p><code>list</code> shows the available sessions up to an optional maximum number of items\nto be restored, sorted by date (descending).</p>\n<h2>Options</h2>\n<p><code>--class</code> and <code>--title</code> are simple case sensitive wildcard pattern, that can\nbe supplied multiple times to match a subset of windows. <code>--regexp</code> switches\nthem to regular expression matching. Make sure to properly quote such\narguments.</p>\n<p>The <code>--bracket</code> option just matches the part of the window title in square\nbrackets, eg.: <code>[title] long title</code> will just match <code>[title]</code>. This is most\nuseful in conjunction with Firefox and the\n<a href=\"https://github.com/tpamula/webextension-window-titler\" rel=\"nofollow\">Window Titler addon</a>.</p>\n<h2>Example Usage</h2>\n<p>Casual approach to restore your Firefox session:</p>\n<pre><code>wm-win-tool -bc Navigator.Firefox store\n</code></pre>\n<p>will save every Firefox window, and</p>\n<pre><code>wm-win-tool -bc Navigator.Firefox restore\n</code></pre>\n<p>will restore all recognized windows. The only downside is, that the window\ntitles must match <strong>exactly</strong> to be restored correctly. So better make sure to\nrun this tool right before leaving the session.</p>\n<p>A more robust approach to the issue in question: install the\n<code>Window Titler addon</code> and supply all windows, that you want to have managed\nwith a <strong>unique</strong> title, that appears in square brackets in front of the\nwindow title. This provides a static title, independent from which tab is\nactived.</p>\n<p>Now saving a session is as easy as:</p>\n<pre><code>wm-win-tool -vb store\n</code></pre>\n<p>You can run this command as many times as you want. As long as the session\nwasn't changed meanwhile, it won't store a new session (unless the <code>--force</code>\noption is supplied).</p>\n<p>After reboot, you may wish to restore this session:</p>\n<pre><code>wm-win-tool -vb restore\n</code></pre>\n<p>\u00e9 voila, the windows move to their original desktops, and have their former\ngeometry and shaded state applied.</p>\n<h2>Install</h2>\n<p>Using pip:</p>\n<pre><code>$ pip install wm-win-tool\n</code></pre>\n<p>From source:</p>\n<pre><code>$ wget https://files.pythonhosted.org/packages/source/w/wm-win-tool/wm-win-tool-&lt;version&gt;.tar.gz\n$ tar xvf wm-win-tool-&lt;version&gt;.tar.gz\n$ cd wm-win-tool-&lt;version&gt;\n$ python3 setup.py install\n</code></pre>\n<h2>Dependencies</h2>\n<p>You need to make sure, that the command line programs <code>wmctrl</code> and <code>xprop</code> are\ninstalled. Check with your distributions package manager..</p>\n<p>Consequently, <code>wm-win-tool</code> needs a proper DISPLAY/XAUTHORITY environment\nsetup.</p>\n<h2>Final notes</h2>\n<p>There are good chances, that the Firefox issue is fixed with Version 75. Hooray.\nLet's hope for the best. If all goes well, this tool provides a nice way to\n<strong>validate</strong> the final fix. If all windows match, it will not perform any action\non (verbose) restore. :wink:</p>\n<p>The commands <code>store</code> and <code>restore</code> could be implicitly triggered, when executed\nvia symlinks to <code>wm-win-tool</code>, eg.:</p>\n<pre><code>$ cd &lt;whatever&gt;/bin\n$ ln -s wm-win-tool wm-win-store\n$ ln -s wm-win-tool wm-win-restore\n</code></pre>\n<p>These operation modes come with some hardcoded defaults: <code>--bracket</code> and\n<code>--verbose</code> for the most usual usage patterns. If that's not enough, a config\nfile option might be useful (TBD).</p>\n<p>The session data is saved in <code>~/local/share/wm-win-tool</code>.</p>\n<p>In pathological cases (where I count in for sure), it might be advantageous\nto exclude Firefox from the window manager session restore completely. kwin5\nis configurable as such. When executing Firefox after reboot, it will open all\nsession windows on your <strong>current</strong> desktop then. Run <code>wm-win-restore</code> and <em>be\ndone</em>.</p>\n<p>If you plan to run <code>wm-win-store</code> from <code>crontab -e</code>, keep in mind, that most\ncron implementations suffer from variable expansion issues. Here is an\nexample, that should work with Vixie cron:</p>\n<pre><code>#PATH=$HOME/bin:/bin:/usr/bin\t# won't work\n#XAUTHORITY=~/.Xauthority\t# neither that\n\n# store firefox window list\n42 * * * * XAUTHORITY=~/.Xauthority DISPLAY=:0 wm-win-tool -b store\n</code></pre>\n<p><code>AUTHORITY</code>is expanded from the shell in this case, which is necessary to\noperate properly. Depending on the way, you installed <code>wm-win-tool</code>, you might\nneed to adjust the path as well. We also avoid using the symlink shortcut\nhere due to its implicit verbosity level.</p>\n<p>Some things are realized in a pretty <code>oldschool</code> way, eg. command line\nhandling, but until the command line interface gets <strong>significantly</strong> more\ncomplex, I prefer to do it this way (since ages).</p>\n<p>If you have other ideas, interesting applications, what ever, let me know.</p>\n<p>Feedback welcome.</p>\n\n          </div>"}, "last_serial": 6787825, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "5ecbc9b7774a429dbe8737d5e3338b55", "sha256": "46430b42b477164f5873c9ad9c280b31b3cf1536d5e2af67a607dab10ee53039"}, "downloads": -1, "filename": "wm_win_tool-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5ecbc9b7774a429dbe8737d5e3338b55", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 16998, "upload_time": "2020-03-02T01:16:23", "upload_time_iso_8601": "2020-03-02T01:16:23.267303Z", "url": "https://files.pythonhosted.org/packages/3f/14/320f5b8e20b9297c1008cf63043337808e989576a75c4ddaa7b50ad77bcd/wm_win_tool-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "426f70e023258bab60c24aa92b161192", "sha256": "1adf62276fe010bbdda90f4ba67bc7c5254c438bbeba6febb93a0245e47514a3"}, "downloads": -1, "filename": "wm-win-tool-0.1.tar.gz", "has_sig": false, "md5_digest": "426f70e023258bab60c24aa92b161192", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 16458, "upload_time": "2020-03-02T01:16:25", "upload_time_iso_8601": "2020-03-02T01:16:25.220706Z", "url": "https://files.pythonhosted.org/packages/20/70/c5690a74c7ea0521b19c11629c5bb33e237fdca82911f497cffe45cba1cf/wm-win-tool-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c2848b8878a68ebab9c27c77dae7a0f6", "sha256": "27bd0807cc1430f2f0a76c592bdc40a2449e75dc704aa288466282344320cd62"}, "downloads": -1, "filename": "wm_win_tool-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c2848b8878a68ebab9c27c77dae7a0f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 17213, "upload_time": "2020-03-02T01:49:55", "upload_time_iso_8601": "2020-03-02T01:49:55.449226Z", "url": "https://files.pythonhosted.org/packages/bc/0b/7196fe9782ff43d891bd263e2aaa20b3a378f3ba56bc372af84fbfa79f8c/wm_win_tool-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abc5a2fde1529ba77947cf8a3f5fde00", "sha256": "a61fe29a26ac2fbdb7f2dfa350890a357b1399f12b7051ed41541275e09dc865"}, "downloads": -1, "filename": "wm-win-tool-0.1.1.tar.gz", "has_sig": false, "md5_digest": "abc5a2fde1529ba77947cf8a3f5fde00", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 16678, "upload_time": "2020-03-02T01:49:57", "upload_time_iso_8601": "2020-03-02T01:49:57.563171Z", "url": "https://files.pythonhosted.org/packages/03/28/523e8e21a5d931022c8bc32a4d74078605733f681e3c83c1b3db747fde24/wm-win-tool-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "cdc65dfe29c3f6bf6ee5b8c58f8de04a", "sha256": "baabb13b2067ef9b4c1d5e635f972b2c87f8c26a72cde6166d53979acd21d508"}, "downloads": -1, "filename": "wm_win_tool-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cdc65dfe29c3f6bf6ee5b8c58f8de04a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 17213, "upload_time": "2020-03-02T02:04:07", "upload_time_iso_8601": "2020-03-02T02:04:07.844616Z", "url": "https://files.pythonhosted.org/packages/51/d6/17e0239790e3129bbc2ecfb822676f07c45586b4144269cecea8fbc63ec6/wm_win_tool-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04096b0de218e330d4c50af13b0b1362", "sha256": "8f4342a59ef9082831925f8f5f4fc5b0f5060a0a36a10374d8ecdce13ce745c2"}, "downloads": -1, "filename": "wm-win-tool-0.1.2.tar.gz", "has_sig": false, "md5_digest": "04096b0de218e330d4c50af13b0b1362", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 16674, "upload_time": "2020-03-02T02:04:11", "upload_time_iso_8601": "2020-03-02T02:04:11.576893Z", "url": "https://files.pythonhosted.org/packages/4b/74/2eb6f5be7a55230665bf4ce53b099a11c45e46c75850d32b1ce1f689f1f9/wm-win-tool-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "aaf7f513897e6563e60e42c977c5d73a", "sha256": "ac10446fa44c8840d839160531e2db55b083eab65ca2dba8824b868a341560b0"}, "downloads": -1, "filename": "wm_win_tool-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "aaf7f513897e6563e60e42c977c5d73a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 17897, "upload_time": "2020-03-02T21:51:05", "upload_time_iso_8601": "2020-03-02T21:51:05.666880Z", "url": "https://files.pythonhosted.org/packages/38/8b/db24ab5fe0a10442ba55ce23cc133f6e8a56db96f86448e762b08a992c63/wm_win_tool-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac14ab074028fbf0560dbb7687b24f58", "sha256": "776bfc8bca4c10b62252361043901ec7c2c2078b46a8553a85652ec3bd1da888"}, "downloads": -1, "filename": "wm-win-tool-0.1.3.tar.gz", "has_sig": false, "md5_digest": "ac14ab074028fbf0560dbb7687b24f58", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 17489, "upload_time": "2020-03-02T15:10:45", "upload_time_iso_8601": "2020-03-02T15:10:45.180086Z", "url": "https://files.pythonhosted.org/packages/7f/19/d3296b3e8520e7247a09c2478f71bfcf1e0f65623d5bb4ac7219205d22ed/wm-win-tool-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "33752ee2113b60896e930f0ac5a5fede", "sha256": "4e6b6798be30699fd6f0ffe94fd21e49e4036d12796885cfc26ab3586b77d42d"}, "downloads": -1, "filename": "wm_win_tool-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "33752ee2113b60896e930f0ac5a5fede", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 18015, "upload_time": "2020-03-02T21:51:06", "upload_time_iso_8601": "2020-03-02T21:51:06.929393Z", "url": "https://files.pythonhosted.org/packages/d2/a9/e02c57fe3ba81b8a1a9a54fae27a71cd994b3711ea836d01d0f5c371bd47/wm_win_tool-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6defdd5bca9a6d0410128b73320fde08", "sha256": "c18b28356e99c0c12a86d2bd9d77960ca834d6d7e0126571c20233c48437a828"}, "downloads": -1, "filename": "wm-win-tool-0.1.4.tar.gz", "has_sig": false, "md5_digest": "6defdd5bca9a6d0410128b73320fde08", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 17597, "upload_time": "2020-03-02T16:01:56", "upload_time_iso_8601": "2020-03-02T16:01:56.709741Z", "url": "https://files.pythonhosted.org/packages/e4/f8/88f62454b4fb37315a7cddf9a1c335459beb1024638f155f83cfb87c493f/wm-win-tool-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "56c1f00caa68d2f25a2569c0df3140a8", "sha256": "55cc4ffeac1711d0abfc01c8fc35ad681afd898ca0017037fa8d7e689645e320"}, "downloads": -1, "filename": "wm_win_tool-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "56c1f00caa68d2f25a2569c0df3140a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 18349, "upload_time": "2020-03-02T21:51:08", "upload_time_iso_8601": "2020-03-02T21:51:08.376040Z", "url": "https://files.pythonhosted.org/packages/5e/90/9a5f14848cf00b8983f194867d6ffa3088399e667c92a76b50a538b408f0/wm_win_tool-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f9c396a0d7496b8fd24fa6efcc2d4ef", "sha256": "422aa6a678db4c32f83270cd5c56260dccb1859b9147744865d8d70b3cb75f91"}, "downloads": -1, "filename": "wm-win-tool-0.1.5.tar.gz", "has_sig": false, "md5_digest": "7f9c396a0d7496b8fd24fa6efcc2d4ef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 17782, "upload_time": "2020-03-02T21:48:49", "upload_time_iso_8601": "2020-03-02T21:48:49.822675Z", "url": "https://files.pythonhosted.org/packages/8f/9f/61de363b9b122b7878a5e5c2c5339760273de7b4670094fb9582871ce2e4/wm-win-tool-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "af66807c0452dbfb013dbf8b05dcffb2", "sha256": "a323fdac461d65759bd0ad0bb9eca9f07157f9fab06885e9ce1069d1df7114a5"}, "downloads": -1, "filename": "wm_win_tool-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "af66807c0452dbfb013dbf8b05dcffb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 18643, "upload_time": "2020-03-10T20:26:53", "upload_time_iso_8601": "2020-03-10T20:26:53.737769Z", "url": "https://files.pythonhosted.org/packages/7e/d9/b02c16b86d0d03d87f14d4ac4ebaa786cc829f6b977f2d6c1740501ffba7/wm_win_tool-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e56f8fd47a2c9a195e22ba48d843ffa3", "sha256": "8aa9de62b177d586d0dbf44f94e540a9fd2b1ef96e30d5f7ce81b37d664c621f"}, "downloads": -1, "filename": "wm-win-tool-0.1.6.tar.gz", "has_sig": false, "md5_digest": "e56f8fd47a2c9a195e22ba48d843ffa3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 18119, "upload_time": "2020-03-10T20:26:55", "upload_time_iso_8601": "2020-03-10T20:26:55.501507Z", "url": "https://files.pythonhosted.org/packages/79/06/abbb935b83fda29668a554b57920a2c0309550cbf745b28ad80e54a805b5/wm-win-tool-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "af66807c0452dbfb013dbf8b05dcffb2", "sha256": "a323fdac461d65759bd0ad0bb9eca9f07157f9fab06885e9ce1069d1df7114a5"}, "downloads": -1, "filename": "wm_win_tool-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "af66807c0452dbfb013dbf8b05dcffb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 18643, "upload_time": "2020-03-10T20:26:53", "upload_time_iso_8601": "2020-03-10T20:26:53.737769Z", "url": "https://files.pythonhosted.org/packages/7e/d9/b02c16b86d0d03d87f14d4ac4ebaa786cc829f6b977f2d6c1740501ffba7/wm_win_tool-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e56f8fd47a2c9a195e22ba48d843ffa3", "sha256": "8aa9de62b177d586d0dbf44f94e540a9fd2b1ef96e30d5f7ce81b37d664c621f"}, "downloads": -1, "filename": "wm-win-tool-0.1.6.tar.gz", "has_sig": false, "md5_digest": "e56f8fd47a2c9a195e22ba48d843ffa3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 18119, "upload_time": "2020-03-10T20:26:55", "upload_time_iso_8601": "2020-03-10T20:26:55.501507Z", "url": "https://files.pythonhosted.org/packages/79/06/abbb935b83fda29668a554b57920a2c0309550cbf745b28ad80e54a805b5/wm-win-tool-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:21 2020"}