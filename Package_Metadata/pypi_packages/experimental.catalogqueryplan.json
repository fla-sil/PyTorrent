{"info": {"author": "Jarn AS", "author_email": "info@jarn.com", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "Introduction\n============\n\nWhile the catalog tool in Zope is immensely useful, we have seen some slowdowns\nin large Plone sites with a combination of additional indexes and lots of\ncontent.\n\nThe catalog implementation is using BTree set operations like union, multiunion\nand intersection. Those operations are fairly fast, especially when everything\nis in memory. However, the catalog implementation is rather naive which leads\nto lots of set operations on rather big sets.\n\nQuery plan\n==========\n\nSearch engines and databases uses query optimizers to select query plans that\nwill minimize the result set as early as possible, because working with large\namounts of data is time consuming.\n\nWhat we want to do is to search against the indexes giving the smallest result\nset first. However, for that to be useful, we need to pass that result along\ninto the indexes to allow the indexes to limit the result set as soon as\npossible internally. When calculating a path search, there is no need to look\nin all 150000 results if the portal type index has already limited the possible\nresult to 10000. If we have already limited the result to 10000 results, all\nset operations are going to be significantly faster.\n\nWe identify different searches by the list of indexes that are searched. If\nthere are no query plans for a set of indexes, the query is run like normal\nwhile storing the number of results for each index. When all indexes have been\nchecked, the list is sorted on number of results and stored as a query\nplan. Next time a search on the same indexes comes in, the query plan is\nlooked up.\n\nTo get different query plans for similar queries, you can provide additional\nbogus index names. They will be ignored by the catalog, but will become part of\nthe key. For indexes that have only a small number of distinct values the\nquery value will become part of the key as well. These type of indexes often\nhave an uneven distribution of indexed keys to values. For example there might\nbe very few `pending` documents in a site, but many `published` ones.\n\nTesting\n=======\n\nTo test, import the monkey patch in other tests, like CMFPlone::\n\n import experimental.catalogqueryplan\n\nand run the test.\n\nDevelopment\n===========\n\nDevelopment of this project takes place at:\nhttps://github.com/Jarn/experimental.catalogqueryplan\n\nChangelog\n=========\n\n3.2.8 - 2013-01-07\n------------------\n\n- Port ExtendedPathIndex fix from ExtendedPathIndex 3.0.1.\n  [mike.rhodes, hannosch]\n\n3.2.7 - 2011-08-23\n------------------\n\n- Backport c122666 from ZCatalog, fixing batching restriction in early part\n  of second half of the batch.\n  [davisagli, hannosch]\n\n3.2.6 - 2011-08-21\n------------------\n\n- Backport from e.btree: Update to Cython 0.15.\n  [hannosch]\n\n- Backport from e.btree: Correct small/big assignment if only the first\n  argument is a tree set.\n  [hannosch]\n\n- Backport from e.btree: Avoid intersection optimizations if both arguments\n  are non-tree sets.\n  [hannosch]\n\n3.2.5 - 2011-05-27\n------------------\n\n- Backport c50071 from Products.CMFPlone to fix batch handling.\n  [hannosch]\n\n- Backport c121708 from ZCatalog, fixing the addition of two LazyCat's if any\n  of them had already been flattened.\n  [hannosch]\n\n3.2.4 - 2011-04-27\n------------------\n\n- Fix possible TypeError in `sortResults` method if only b_start but not b_size\n  has been provided.\n  [hannosch]\n\n3.2.3 - 2011-04-10\n------------------\n\n- Specify supported Python versions.\n  [hannosch]\n\n3.2.2 - 2011-04-09\n------------------\n\n- Backport c121349 from ZCatalog, optimizing the date range index to add a\n  floor and ceiling date. In this version it's hardcoded values.\n  [hannosch]\n\n- Backport c121191 from ZCatalog, which fixes an edge-case in the date range\n  index optimization.\n  [hannosch]\n\n3.2.1 - 2011-03-16\n------------------\n\n- Specify minimum requirement for the 3.2.x series of Plone >= 4.0.3.\n  [hannosch]\n\n3.2.0 - 2011-03-08\n------------------\n\n* Patched `PloneBatch.__getitem__` to work with new limited batch results.\n  [hannosch]\n\n* Backported sort/batch improvements from ZCatalog 2.13.4.\n  [hannosch]\n\n* Update to Cython 0.14.1.\n  [hannosch]\n\n* Avoid using the relative import syntax introduced in Python 2.5.\n  [hannosch]\n\n3.1.0 - 2010-12-27\n------------------\n\n* Added automatic sorting limit calculation based on batch arguments. If the\n  query contains a `b_start` and `b_size` argument and no explicit `sort_limit`\n  is provided, the sort limit will be calculated as `b_start + b_size`.\n  [hannosch]\n\n* Backported `Products.ZCatalog.Lazy` improvements from its 2.13.2 release.\n\n* Update to Cython 0.14.\n  [hannosch]\n\n3.0.2 - 2010-09-28\n------------------\n\n* Subtract inverse set in daterangeindex as that is usually significantly\n  smaller than the set of content within range (like effectiveRange).\n  [tesdal]\n\n3.0.1 - 2010-09-24\n------------------\n\n* Update to Cython 0.13.\n  [hannosch]\n\n* Make sure to patch the intersection function in our own catalog module.\n  Depending on import time order effects we could end up with the standard\n  intersection function which performs horribly for the reference catalog.\n  [hannosch]\n\n3.0 - 2010-05-13\n----------------\n\n* Fixed tests to work with latest Zope 2.12 release.\n  [hannosch]\n\n3.0a3 - 2010-03-08\n------------------\n\n* Extended the stored queryplan format to optionally contain the value indexes\n  set. This also makes it possible to manually influence the set.\n  [hannosch]\n\n* Changed intersection algorithm to avoid calculating the length of tree sets,\n  as this would cause a scan of all their buckets. Intersections of sets with\n  large tree sets are 10x faster while intersections of small sets and small\n  tree sets are 50% slower.\n  [hannosch, tesdal]\n\n* Expanded performance tests to check against small tree sets.\n  [hannosch]\n\n3.0a2 - 2010-02-21\n------------------\n\n* Marked this package as a Plone plugin.\n  [hannosch]\n\n3.0a1 - 2010-02-21\n------------------\n\n* Updated to Cython 0.12.1.\n  [hannosch]\n\n* Reinstated request cache that was removed in 1.6. Catalog.getCounter() is\n  part of the key.\n  [tesdal]\n\n* Use optimized intersection instead of unoptimized weightedIntersection\n  if possible when joining result sets.\n  [tesdal]\n\n* Merged work from the querytree-cython branch. We have completely optional\n  C optimizations based on Cython now.\n  [hannosch]\n\n* Moved the performance tests to the normal tests package and made them\n  available on test level 2.\n  [hannosch]\n\n* Moved tests into a sub-package.\n  [hannosch]\n\n2.1 - 2009-11-19\n----------------\n\n* Moved patching into an initialize method and import ZopeTestCase in tests.\n  This avoids import errors in Zope 2.12.\n  [hannosch]\n\n2.0 - 2009-11-10\n----------------\n\n* Add browser view named ``catalogqueryplan-prioritymap`` for convenient\n  dumping of the current query plan as a Python module & support for loading\n  it again using the `CATALOGQUERYPLAN` environment variable.\n  [witsch]\n\n1.9 - 2009-11-06\n----------------\n\n* Yet more fixes for the recent optimization. The ZCatalog API is too flexible.\n  [hannosch]\n\n1.8 - 2009-11-06\n----------------\n\n* Fixed an optimization introduced in the 1.7 release. We also need to look\n  into the form arguments of a request to look for query restrictions.\n  [hannosch]\n\n1.7 - 2009-10-17\n----------------\n\n* When processing queries, do not ask indexes for their restrictions which\n  aren't actually part of the query.\n  [hannosch]\n\n* Added a `DEFAULT_PRIORITYMAP` hook into the catalog module. This allows to\n  provide a default priority map dictionary to initialize the prioritymap with\n  a precomputed or manually designed one.\n  [hannosch]\n\n1.6 - 2009-09-10\n----------------\n\n* Removed the per request caching for the date range index. This can lead to\n  invalid results for subsequent queries during the same request, if the data\n  is changed.\n  [hannosch]\n\n1.5 - 2009-07-27\n----------------\n\n* Make sure to always include all indexes found in the original query into the\n  queryplan. Otherwise if we get a query at first which happens to have no\n  restrictions on a particular index, this index will no longer be queried at\n  all. Now we at least preserve the index as part of the queryplan. The real\n  solution is to continuously update the queryplan with result lengths as done\n  in unimr.catalogqueryplan.\n  [hannosch]\n\n1.4 - 2009-05-20\n----------------\n\n* Added detailed per index time logging to the slow query reporting. You get\n  the time spent per index in addition to the total now.\n  [hannosch]\n\n* Speed up the common KeywordIndexes like `portal_type` and\n  `allowedRolesAndUsers`. Provided with a small passed in result set and an\n  or-query we intersect it with each set in the index and union them later.\n  Doing a straight multiunion on these types of indexes most often creates a\n  set close to the total catalog size.\n  [hannosch]\n\n* Added optional logging of slow queries, inspired by unimr.catalogqueryplan.\n  [hannosch]\n\n* Added a mechanism to indicate the types of indexes, whose query values should\n  be taken into account when building the prioritymap. An opt-in mechanism via\n  VALUETYPES is provided much like ADVANCEDTYPES. Queries for example for\n  `review_state` differ depending on the query for `pending` and `published`\n  items, as those are usually very unevenly distributed.\n  [hannosch]\n\n1.3 - 2009-03-15\n----------------\n\n* Changed the log messages to debug level.\n  [hannosch]\n\n1.2 - 2009-03-03\n----------------\n\n* Don't use request.request as part of the update as it tends to\n  trigger the browser id (_ZopeId)\n  [tesdal]\n\n* Make sure UnIndex always returns IISet, not int.\n  [tesdal]\n\n* Only sort intersection sets if there are more than 2 sets,\n  otherwise the order is irrelevant\n  [tesdal]\n\n* Added logging for patches\n  [swampmonkey]\n\n1.1 - 2009-01-02\n----------------\n\n* Made the set monkeypatches temporary to avoid zc.relationship\n  trying to persist the set methods.\n  [tesdal]\n\n1.0 - 2009-01-02\n----------------\n\n* Removed redundant intersections, added type checking to difference\n  [tesdal]\n\n* Add alternative weightedIntersection, and reuse BTree tests\n  [tesdal]\n\n* Don't monkeypatch intersection as zc.relationship will try\n  to pickle the function.\n  Added new ExtendedPathIndex code.\n  [tesdal]\n\n* Optimize UnIndex.apply_index internally, sort sets for AND,\n  use multiunion for OR.\n  [tesdal]\n\n* Limit the number of if-statements in intersection,\n  and added test for fastest way of finding max and min.\n  [tesdal]\n\n* Monkeypatch difference to handle big/tiny difference in Python\n  This doesn't belong in queryplan, as it's only a BTree patch,\n  and should be refactored out.\n  [tesdal]\n\n* Added performance tests.\n  [tesdal]\n\n* Fixed a bug with UnIndex return result missing index id\n  [tesdal]\n\n* Added tests for intersection, fixed a bug with empty second argument set\n  [tesdal]\n\n* Monkeypatch intersect to handle big/tiny intersects in Python\n  [tesdal]\n\n* Improved UnIndex query, to avoid redundant intersections\n  [tesdal]\n\n* Clarified LanguageIndex support. We are missing fallback support right now\n  and now disable the optimization when fallback is enabled.\n  [hannosch, mj]\n\n0.9 - 2008-10-18\n----------------\n\n* Added support for LinguaPlone's LanguageIndex.\n  [hannosch]\n\n0.8 - 2008-09-03\n----------------\n\n* Let each index patch register itself with the ADVANCEDTYPES list.\n  This should enable patching of other indexes as well, and remove\n  the dependency on ExtendedPathIndex.\n  [tesdal]\n\n0.7 - 2008-08-22\n----------------\n\n* Check whether we're supposed to use daterangeindex\n  at all before retrieving cached data.\n  [tesdal]\n\n0.6 - 2008-07-03\n----------------\n\n* Use a volatile instance variable to store the prioritymap.\n  [mj]\n\n0.5 - 2008/06/23\n----------------\n\n* DateRangeIndex shouldn't overwrite the semi-request passed into the \n  apply_index method.\n  [mj]\n\n0.4 - 2008/06/23\n----------------\n\n* DateRangeIndex now doesn't assume that REQUEST is available.\n  [tesdal]\n\n0.3\n---\n\n* Handle request being a dictionary.\n  [tesdal]\n\n0.3\n---\n\n* Refactored patches into multiple files.\n  [tesdal]\n\n* Dynamic query optimization based on result set analysis\n  from queries against the same indexes.\n  [tesdal]\n\n* Manual query optimization based on typical usage pattern.\n  [tesdal]\n\n0.1\n---\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.jarn.com/", "keywords": "plone catalog search", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "experimental.catalogqueryplan", "package_url": "https://pypi.org/project/experimental.catalogqueryplan/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/experimental.catalogqueryplan/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.jarn.com/"}, "release_url": "https://pypi.org/project/experimental.catalogqueryplan/3.2.8/", "requires_dist": null, "requires_python": null, "summary": "Static query optimized with one plan", "version": "3.2.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>While the catalog tool in Zope is immensely useful, we have seen some slowdowns\nin large Plone sites with a combination of additional indexes and lots of\ncontent.</p>\n<p>The catalog implementation is using BTree set operations like union, multiunion\nand intersection. Those operations are fairly fast, especially when everything\nis in memory. However, the catalog implementation is rather naive which leads\nto lots of set operations on rather big sets.</p>\n</div>\n<div id=\"query-plan\">\n<h2>Query plan</h2>\n<p>Search engines and databases uses query optimizers to select query plans that\nwill minimize the result set as early as possible, because working with large\namounts of data is time consuming.</p>\n<p>What we want to do is to search against the indexes giving the smallest result\nset first. However, for that to be useful, we need to pass that result along\ninto the indexes to allow the indexes to limit the result set as soon as\npossible internally. When calculating a path search, there is no need to look\nin all 150000 results if the portal type index has already limited the possible\nresult to 10000. If we have already limited the result to 10000 results, all\nset operations are going to be significantly faster.</p>\n<p>We identify different searches by the list of indexes that are searched. If\nthere are no query plans for a set of indexes, the query is run like normal\nwhile storing the number of results for each index. When all indexes have been\nchecked, the list is sorted on number of results and stored as a query\nplan. Next time a search on the same indexes comes in, the query plan is\nlooked up.</p>\n<p>To get different query plans for similar queries, you can provide additional\nbogus index names. They will be ignored by the catalog, but will become part of\nthe key. For indexes that have only a small number of distinct values the\nquery value will become part of the key as well. These type of indexes often\nhave an uneven distribution of indexed keys to values. For example there might\nbe very few <cite>pending</cite> documents in a site, but many <cite>published</cite> ones.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>To test, import the monkey patch in other tests, like CMFPlone:</p>\n<pre>import experimental.catalogqueryplan\n</pre>\n<p>and run the test.</p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>Development of this project takes place at:\n<a href=\"https://github.com/Jarn/experimental.catalogqueryplan\" rel=\"nofollow\">https://github.com/Jarn/experimental.catalogqueryplan</a></p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>3.2.8 - 2013-01-07</h3>\n<ul>\n<li>Port ExtendedPathIndex fix from ExtendedPathIndex 3.0.1.\n[mike.rhodes, hannosch]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>3.2.7 - 2011-08-23</h3>\n<ul>\n<li>Backport c122666 from ZCatalog, fixing batching restriction in early part\nof second half of the batch.\n[davisagli, hannosch]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>3.2.6 - 2011-08-21</h3>\n<ul>\n<li>Backport from e.btree: Update to Cython 0.15.\n[hannosch]</li>\n<li>Backport from e.btree: Correct small/big assignment if only the first\nargument is a tree set.\n[hannosch]</li>\n<li>Backport from e.btree: Avoid intersection optimizations if both arguments\nare non-tree sets.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>3.2.5 - 2011-05-27</h3>\n<ul>\n<li>Backport c50071 from Products.CMFPlone to fix batch handling.\n[hannosch]</li>\n<li>Backport c121708 from ZCatalog, fixing the addition of two LazyCat\u2019s if any\nof them had already been flattened.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>3.2.4 - 2011-04-27</h3>\n<ul>\n<li>Fix possible TypeError in <cite>sortResults</cite> method if only b_start but not b_size\nhas been provided.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>3.2.3 - 2011-04-10</h3>\n<ul>\n<li>Specify supported Python versions.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>3.2.2 - 2011-04-09</h3>\n<ul>\n<li>Backport c121349 from ZCatalog, optimizing the date range index to add a\nfloor and ceiling date. In this version it\u2019s hardcoded values.\n[hannosch]</li>\n<li>Backport c121191 from ZCatalog, which fixes an edge-case in the date range\nindex optimization.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>3.2.1 - 2011-03-16</h3>\n<ul>\n<li>Specify minimum requirement for the 3.2.x series of Plone &gt;= 4.0.3.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>3.2.0 - 2011-03-08</h3>\n<ul>\n<li>Patched <cite>PloneBatch.__getitem__</cite> to work with new limited batch results.\n[hannosch]</li>\n<li>Backported sort/batch improvements from ZCatalog 2.13.4.\n[hannosch]</li>\n<li>Update to Cython 0.14.1.\n[hannosch]</li>\n<li>Avoid using the relative import syntax introduced in Python 2.5.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>3.1.0 - 2010-12-27</h3>\n<ul>\n<li>Added automatic sorting limit calculation based on batch arguments. If the\nquery contains a <cite>b_start</cite> and <cite>b_size</cite> argument and no explicit <cite>sort_limit</cite>\nis provided, the sort limit will be calculated as <cite>b_start + b_size</cite>.\n[hannosch]</li>\n<li>Backported <cite>Products.ZCatalog.Lazy</cite> improvements from its 2.13.2 release.</li>\n<li>Update to Cython 0.14.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>3.0.2 - 2010-09-28</h3>\n<ul>\n<li>Subtract inverse set in daterangeindex as that is usually significantly\nsmaller than the set of content within range (like effectiveRange).\n[tesdal]</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>3.0.1 - 2010-09-24</h3>\n<ul>\n<li>Update to Cython 0.13.\n[hannosch]</li>\n<li>Make sure to patch the intersection function in our own catalog module.\nDepending on import time order effects we could end up with the standard\nintersection function which performs horribly for the reference catalog.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>3.0 - 2010-05-13</h3>\n<ul>\n<li>Fixed tests to work with latest Zope 2.12 release.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"a3-2010-03-08\">\n<h3>3.0a3 - 2010-03-08</h3>\n<ul>\n<li>Extended the stored queryplan format to optionally contain the value indexes\nset. This also makes it possible to manually influence the set.\n[hannosch]</li>\n<li>Changed intersection algorithm to avoid calculating the length of tree sets,\nas this would cause a scan of all their buckets. Intersections of sets with\nlarge tree sets are 10x faster while intersections of small sets and small\ntree sets are 50% slower.\n[hannosch, tesdal]</li>\n<li>Expanded performance tests to check against small tree sets.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"a2-2010-02-21\">\n<h3>3.0a2 - 2010-02-21</h3>\n<ul>\n<li>Marked this package as a Plone plugin.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"a1-2010-02-21\">\n<h3>3.0a1 - 2010-02-21</h3>\n<ul>\n<li>Updated to Cython 0.12.1.\n[hannosch]</li>\n<li>Reinstated request cache that was removed in 1.6. Catalog.getCounter() is\npart of the key.\n[tesdal]</li>\n<li>Use optimized intersection instead of unoptimized weightedIntersection\nif possible when joining result sets.\n[tesdal]</li>\n<li>Merged work from the querytree-cython branch. We have completely optional\nC optimizations based on Cython now.\n[hannosch]</li>\n<li>Moved the performance tests to the normal tests package and made them\navailable on test level 2.\n[hannosch]</li>\n<li>Moved tests into a sub-package.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>2.1 - 2009-11-19</h3>\n<ul>\n<li>Moved patching into an initialize method and import ZopeTestCase in tests.\nThis avoids import errors in Zope 2.12.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>2.0 - 2009-11-10</h3>\n<ul>\n<li>Add browser view named <tt><span class=\"pre\">catalogqueryplan-prioritymap</span></tt> for convenient\ndumping of the current query plan as a Python module &amp; support for loading\nit again using the <cite>CATALOGQUERYPLAN</cite> environment variable.\n[witsch]</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>1.9 - 2009-11-06</h3>\n<ul>\n<li>Yet more fixes for the recent optimization. The ZCatalog API is too flexible.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>1.8 - 2009-11-06</h3>\n<ul>\n<li>Fixed an optimization introduced in the 1.7 release. We also need to look\ninto the form arguments of a request to look for query restrictions.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>1.7 - 2009-10-17</h3>\n<ul>\n<li>When processing queries, do not ask indexes for their restrictions which\naren\u2019t actually part of the query.\n[hannosch]</li>\n<li>Added a <cite>DEFAULT_PRIORITYMAP</cite> hook into the catalog module. This allows to\nprovide a default priority map dictionary to initialize the prioritymap with\na precomputed or manually designed one.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>1.6 - 2009-09-10</h3>\n<ul>\n<li>Removed the per request caching for the date range index. This can lead to\ninvalid results for subsequent queries during the same request, if the data\nis changed.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3>1.5 - 2009-07-27</h3>\n<ul>\n<li>Make sure to always include all indexes found in the original query into the\nqueryplan. Otherwise if we get a query at first which happens to have no\nrestrictions on a particular index, this index will no longer be queried at\nall. Now we at least preserve the index as part of the queryplan. The real\nsolution is to continuously update the queryplan with result lengths as done\nin unimr.catalogqueryplan.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3>1.4 - 2009-05-20</h3>\n<ul>\n<li>Added detailed per index time logging to the slow query reporting. You get\nthe time spent per index in addition to the total now.\n[hannosch]</li>\n<li>Speed up the common KeywordIndexes like <cite>portal_type</cite> and\n<cite>allowedRolesAndUsers</cite>. Provided with a small passed in result set and an\nor-query we intersect it with each set in the index and union them later.\nDoing a straight multiunion on these types of indexes most often creates a\nset close to the total catalog size.\n[hannosch]</li>\n<li>Added optional logging of slow queries, inspired by unimr.catalogqueryplan.\n[hannosch]</li>\n<li>Added a mechanism to indicate the types of indexes, whose query values should\nbe taken into account when building the prioritymap. An opt-in mechanism via\nVALUETYPES is provided much like ADVANCEDTYPES. Queries for example for\n<cite>review_state</cite> differ depending on the query for <cite>pending</cite> and <cite>published</cite>\nitems, as those are usually very unevenly distributed.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3>1.3 - 2009-03-15</h3>\n<ul>\n<li>Changed the log messages to debug level.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3>1.2 - 2009-03-03</h3>\n<ul>\n<li>Don\u2019t use request.request as part of the update as it tends to\ntrigger the browser id (_ZopeId)\n[tesdal]</li>\n<li>Make sure UnIndex always returns IISet, not int.\n[tesdal]</li>\n<li>Only sort intersection sets if there are more than 2 sets,\notherwise the order is irrelevant\n[tesdal]</li>\n<li>Added logging for patches\n[swampmonkey]</li>\n</ul>\n</div>\n<div id=\"id24\">\n<h3>1.1 - 2009-01-02</h3>\n<ul>\n<li>Made the set monkeypatches temporary to avoid zc.relationship\ntrying to persist the set methods.\n[tesdal]</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h3>1.0 - 2009-01-02</h3>\n<ul>\n<li>Removed redundant intersections, added type checking to difference\n[tesdal]</li>\n<li>Add alternative weightedIntersection, and reuse BTree tests\n[tesdal]</li>\n<li>Don\u2019t monkeypatch intersection as zc.relationship will try\nto pickle the function.\nAdded new ExtendedPathIndex code.\n[tesdal]</li>\n<li>Optimize UnIndex.apply_index internally, sort sets for AND,\nuse multiunion for OR.\n[tesdal]</li>\n<li>Limit the number of if-statements in intersection,\nand added test for fastest way of finding max and min.\n[tesdal]</li>\n<li>Monkeypatch difference to handle big/tiny difference in Python\nThis doesn\u2019t belong in queryplan, as it\u2019s only a BTree patch,\nand should be refactored out.\n[tesdal]</li>\n<li>Added performance tests.\n[tesdal]</li>\n<li>Fixed a bug with UnIndex return result missing index id\n[tesdal]</li>\n<li>Added tests for intersection, fixed a bug with empty second argument set\n[tesdal]</li>\n<li>Monkeypatch intersect to handle big/tiny intersects in Python\n[tesdal]</li>\n<li>Improved UnIndex query, to avoid redundant intersections\n[tesdal]</li>\n<li>Clarified LanguageIndex support. We are missing fallback support right now\nand now disable the optimization when fallback is enabled.\n[hannosch, mj]</li>\n</ul>\n</div>\n<div id=\"id26\">\n<h3>0.9 - 2008-10-18</h3>\n<ul>\n<li>Added support for LinguaPlone\u2019s LanguageIndex.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id27\">\n<h3>0.8 - 2008-09-03</h3>\n<ul>\n<li>Let each index patch register itself with the ADVANCEDTYPES list.\nThis should enable patching of other indexes as well, and remove\nthe dependency on ExtendedPathIndex.\n[tesdal]</li>\n</ul>\n</div>\n<div id=\"id28\">\n<h3>0.7 - 2008-08-22</h3>\n<ul>\n<li>Check whether we\u2019re supposed to use daterangeindex\nat all before retrieving cached data.\n[tesdal]</li>\n</ul>\n</div>\n<div id=\"id29\">\n<h3>0.6 - 2008-07-03</h3>\n<ul>\n<li>Use a volatile instance variable to store the prioritymap.\n[mj]</li>\n</ul>\n</div>\n<div id=\"id30\">\n<h3>0.5 - 2008/06/23</h3>\n<ul>\n<li>DateRangeIndex shouldn\u2019t overwrite the semi-request passed into the\napply_index method.\n[mj]</li>\n</ul>\n</div>\n<div id=\"id31\">\n<h3>0.4 - 2008/06/23</h3>\n<ul>\n<li>DateRangeIndex now doesn\u2019t assume that REQUEST is available.\n[tesdal]</li>\n</ul>\n</div>\n<div id=\"id32\">\n<h3>0.3</h3>\n<ul>\n<li>Handle request being a dictionary.\n[tesdal]</li>\n</ul>\n</div>\n<div id=\"id33\">\n<h3>0.3</h3>\n<ul>\n<li>Refactored patches into multiple files.\n[tesdal]</li>\n<li>Dynamic query optimization based on result set analysis\nfrom queries against the same indexes.\n[tesdal]</li>\n<li>Manual query optimization based on typical usage pattern.\n[tesdal]</li>\n</ul>\n</div>\n<div id=\"id34\">\n<h3>0.1</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 643388, "releases": {"0.6": [{"comment_text": "", "digests": {"md5": "19808058ad9950943fd03a6682fbd605", "sha256": "8acb656fb0935f16625e2c4c5abc927d1fdc1c318dc1c51e4335170dce17dd7f"}, "downloads": -1, "filename": "experimental.catalogqueryplan-0.6.tar.gz", "has_sig": false, "md5_digest": "19808058ad9950943fd03a6682fbd605", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14523, "upload_time": "2008-07-29T10:16:54", "upload_time_iso_8601": "2008-07-29T10:16:54Z", "url": "https://files.pythonhosted.org/packages/69/c0/e57fb6e6a9a8689f5fda6e8e62e34f3d34046412cb4cb91eb571aaf328b0/experimental.catalogqueryplan-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "dea9c36476ce6b8df302a7f123a10b26", "sha256": "31e21f7e16ee7ff03899c14112657b87c37d504361aeae296883909425366b22"}, "downloads": -1, "filename": "experimental.catalogqueryplan-0.7.tar.gz", "has_sig": false, "md5_digest": "dea9c36476ce6b8df302a7f123a10b26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14668, "upload_time": "2008-08-22T17:33:48", "upload_time_iso_8601": "2008-08-22T17:33:48Z", "url": "https://files.pythonhosted.org/packages/c1/89/cf8772466c49f346e6684e87abc0ccd74142722bb66d92f238c399c7a3d3/experimental.catalogqueryplan-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "62d845ae7fdea780ca87e3ade487f7ff", "sha256": "d54bf1acab365574aadb34a9bc7794371553efe81d0529892aeb2e6a1aa8555d"}, "downloads": -1, "filename": "experimental.catalogqueryplan-0.8.tar.gz", "has_sig": true, "md5_digest": "62d845ae7fdea780ca87e3ade487f7ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14908, "upload_time": "2008-09-03T20:56:17", "upload_time_iso_8601": "2008-09-03T20:56:17Z", "url": "https://files.pythonhosted.org/packages/32/78/6caa670f8ba19a95c474a3762da984eaffb58bfe44944fd53c98e618621e/experimental.catalogqueryplan-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "1fbc29d6ad2af50a040e35a268a204e0", "sha256": "c46191aeb47dcd8fd66583f621b66b8dcb0c9441122500e96c5309787e4431aa"}, "downloads": -1, "filename": "experimental.catalogqueryplan-0.9.zip", "has_sig": true, "md5_digest": "1fbc29d6ad2af50a040e35a268a204e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26378, "upload_time": "2008-10-18T17:43:24", "upload_time_iso_8601": "2008-10-18T17:43:24Z", "url": "https://files.pythonhosted.org/packages/5e/e9/0b1e9bf1c360b5dd15dec24661acc8361fc81c46b7b574af7f632781866b/experimental.catalogqueryplan-0.9.zip", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "31d06a53c476460959b5d4f8f1285e8d", "sha256": "1acb679acd13156f850a590c2d188406f07c7e14e5cb9c4f202b31f1cfaf1651"}, "downloads": -1, "filename": "experimental.catalogqueryplan-1.0.zip", "has_sig": false, "md5_digest": "31d06a53c476460959b5d4f8f1285e8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30319, "upload_time": "2009-01-02T15:06:41", "upload_time_iso_8601": "2009-01-02T15:06:41Z", "url": "https://files.pythonhosted.org/packages/56/f6/0b2b7e407aa3c5a950a5c5d66d9f229f29d4346402e12692cf8d2e404e69/experimental.catalogqueryplan-1.0.zip", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "ac41d1235bc774532eb09a868951bd8e", "sha256": "fddcc75fa70f7984a102f2cd35dc39fa41853f6fb0ed56f160eca4b17ad77502"}, "downloads": -1, "filename": "experimental.catalogqueryplan-1.1.zip", "has_sig": false, "md5_digest": "ac41d1235bc774532eb09a868951bd8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30679, "upload_time": "2009-01-02T20:19:49", "upload_time_iso_8601": "2009-01-02T20:19:49Z", "url": "https://files.pythonhosted.org/packages/c7/e2/0f2aa9416961d65ee0a7659d1316bf72f7d1d868b2594ca493744a44790a/experimental.catalogqueryplan-1.1.zip", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "6c6d2115de69365c0c099da875ca3077", "sha256": "81fefc1708b86cd6001abe5383a45dd9c192b709abcc21d4c74d9e41ffcf3bfc"}, "downloads": -1, "filename": "experimental.catalogqueryplan-1.2.zip", "has_sig": false, "md5_digest": "6c6d2115de69365c0c099da875ca3077", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31636, "upload_time": "2009-03-03T11:58:20", "upload_time_iso_8601": "2009-03-03T11:58:20.502735Z", "url": "https://files.pythonhosted.org/packages/d7/46/5eed488cd016be03b2d07bac50c573d879c873e36e4a8dbc03b74a0db0ac/experimental.catalogqueryplan-1.2.zip", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "1039905345d9e8eec87357b2d20a7070", "sha256": "b68ed213fe397bd6fa631fe7bd7abee424b7bdf7c32cb105b5d9dc28bb747e30"}, "downloads": -1, "filename": "experimental.catalogqueryplan-1.3.zip", "has_sig": true, "md5_digest": "1039905345d9e8eec87357b2d20a7070", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31648, "upload_time": "2009-03-15T13:41:49", "upload_time_iso_8601": "2009-03-15T13:41:49.625980Z", "url": "https://files.pythonhosted.org/packages/e6/ee/9fae7f2961a3910092e79f318b7c6db5d9d4c8738dfb8c10bbb2e0cb773b/experimental.catalogqueryplan-1.3.zip", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "c8e49343a2b51827c3d562918e3f06b5", "sha256": "bf97d45e8943fc53325a0d19724aa7053b3b13babaf0d8618ccd6d6a94b8ed59"}, "downloads": -1, "filename": "experimental.catalogqueryplan-1.4.zip", "has_sig": true, "md5_digest": "c8e49343a2b51827c3d562918e3f06b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37183, "upload_time": "2009-05-20T18:17:43", "upload_time_iso_8601": "2009-05-20T18:17:43.692691Z", "url": "https://files.pythonhosted.org/packages/76/94/6471c4500552c8b7018e3d0ec698a84a68010328877b53d459f2891e7363/experimental.catalogqueryplan-1.4.zip", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "2efe1630336609ee79d5c1932625df46", "sha256": "bdc2effd544a3dfc8b69998851cc81d1e6ac77bf90be45f6d5a24ba4b3eca911"}, "downloads": -1, "filename": "experimental.catalogqueryplan-1.5.zip", "has_sig": true, "md5_digest": "2efe1630336609ee79d5c1932625df46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37752, "upload_time": "2009-07-27T19:31:57", "upload_time_iso_8601": "2009-07-27T19:31:57.441745Z", "url": "https://files.pythonhosted.org/packages/7d/c6/1fa6a212e11418cca825f15c12ff42c524d7a836d0507deaef21cf1c11c3/experimental.catalogqueryplan-1.5.zip", "yanked": false}], "1.6": [{"comment_text": "", "digests": {"md5": "8f40cd6a57f2e5d9d2e4db5e4c38486f", "sha256": "14c04b41554aa67380c33d60522b956965d1d224ffc9c8300b3b36f61858cd74"}, "downloads": -1, "filename": "experimental.catalogqueryplan-1.6.zip", "has_sig": true, "md5_digest": "8f40cd6a57f2e5d9d2e4db5e4c38486f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37883, "upload_time": "2009-09-10T14:14:39", "upload_time_iso_8601": "2009-09-10T14:14:39.767472Z", "url": "https://files.pythonhosted.org/packages/6a/3a/a7a1d3e5630c0fc62e6911de841d0d88b21016518e2e386e7c0111e09aea/experimental.catalogqueryplan-1.6.zip", "yanked": false}], "1.7": [{"comment_text": "", "digests": {"md5": "e32f29e168f75ac6fde69e46cf850200", "sha256": "537e475254a557a68847c20f8ef4ac4d52d04d9c67257912aa44c073248a0022"}, "downloads": -1, "filename": "experimental.catalogqueryplan-1.7.zip", "has_sig": true, "md5_digest": "e32f29e168f75ac6fde69e46cf850200", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38428, "upload_time": "2009-10-17T21:25:52", "upload_time_iso_8601": "2009-10-17T21:25:52.841191Z", "url": "https://files.pythonhosted.org/packages/bb/5c/468f2dc18bb89c5746f20de38396031f21258ac4d2c5e0192455d0fda111/experimental.catalogqueryplan-1.7.zip", "yanked": false}], "1.8": [{"comment_text": "", "digests": {"md5": "1a3efe5bf1b51f27d44f1be2e8677c0d", "sha256": "98d088df8c80cfb8f61a33aecf2a038f9f603977a600ab0847403aef8b3a93d2"}, "downloads": -1, "filename": "experimental.catalogqueryplan-1.8.zip", "has_sig": false, "md5_digest": "1a3efe5bf1b51f27d44f1be2e8677c0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38708, "upload_time": "2009-11-06T16:06:14", "upload_time_iso_8601": "2009-11-06T16:06:14.669220Z", "url": "https://files.pythonhosted.org/packages/40/75/104541332416b4176efc6483d11c6a6a93246f21d582b4687cf03dc8eb6b/experimental.catalogqueryplan-1.8.zip", "yanked": false}], "1.9": [{"comment_text": "", "digests": {"md5": "374749873c2071f7c3782d5538b1fbf1", "sha256": "46259640abdc101f3c4d92efeea9f42c14fda638b103fd83fb316c2c2f7c38ed"}, "downloads": -1, "filename": "experimental.catalogqueryplan-1.9.zip", "has_sig": false, "md5_digest": "374749873c2071f7c3782d5538b1fbf1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39004, "upload_time": "2009-11-06T17:52:27", "upload_time_iso_8601": "2009-11-06T17:52:27.857907Z", "url": "https://files.pythonhosted.org/packages/9b/6d/13f203b7166eb868066ea9a2a048980d8ba43546d78408a54614bcbebc68/experimental.catalogqueryplan-1.9.zip", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "4d44e39f628e426cc2c612f83c018f38", "sha256": "79d4a74abaeb4aae8ddac873c0bec7cc21c00cf44eb390db22e57be3a148f9fc"}, "downloads": -1, "filename": "experimental.catalogqueryplan-2.0.zip", "has_sig": false, "md5_digest": "4d44e39f628e426cc2c612f83c018f38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41174, "upload_time": "2009-11-10T16:13:15", "upload_time_iso_8601": "2009-11-10T16:13:15.270042Z", "url": "https://files.pythonhosted.org/packages/06/c2/ad6f2a16ee142c9c83dd3481cb479a202c376912dab9247296b911f7b135/experimental.catalogqueryplan-2.0.zip", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "c527327a8ae1a1ca13d931fd66428cbe", "sha256": "de2e3deae66fef0e8f2d667d1d54f3bae305ac31324a38ad57ae73df04bef6c1"}, "downloads": -1, "filename": "experimental.catalogqueryplan-2.1.zip", "has_sig": false, "md5_digest": "c527327a8ae1a1ca13d931fd66428cbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41961, "upload_time": "2009-11-19T22:59:19", "upload_time_iso_8601": "2009-11-19T22:59:19.479449Z", "url": "https://files.pythonhosted.org/packages/5c/8a/347694191bf9c667bd15f9369754a06e28a268692f10f125aa03bd813b5a/experimental.catalogqueryplan-2.1.zip", "yanked": false}], "3.0": [{"comment_text": "", "digests": {"md5": "00f27b29b8870b34554b6300a942b5bd", "sha256": "409184155cc83db92e5cc75a6ddb6f216b9f7f126f58e2e39ac30a10a73f3386"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.0.zip", "has_sig": false, "md5_digest": "00f27b29b8870b34554b6300a942b5bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71370, "upload_time": "2010-05-13T17:36:56", "upload_time_iso_8601": "2010-05-13T17:36:56.638266Z", "url": "https://files.pythonhosted.org/packages/a3/ea/5d2209a8a92ff6bba323db437d001199fd1504780629cc7185235633d907/experimental.catalogqueryplan-3.0.zip", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "367051fea413f3eb8d1c839c3124c198", "sha256": "3db5efad96cf27a74f8841ef08e8db3c8e3bc2cdb61b7b2644465eed518d93cd"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.0.1.zip", "has_sig": false, "md5_digest": "367051fea413f3eb8d1c839c3124c198", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73072, "upload_time": "2010-09-24T12:43:02", "upload_time_iso_8601": "2010-09-24T12:43:02.027011Z", "url": "https://files.pythonhosted.org/packages/fb/8c/2dedcba73be2fe04d293c8e28043a6ff7fce1b024b0c98228c74f3a34638/experimental.catalogqueryplan-3.0.1.zip", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "bde3d7bad916719ebbbaf83667a6c5d3", "sha256": "6e86d734636b980d1630b6c439e8bcf72e2079920c67d034129ab30476a78760"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.0.2.zip", "has_sig": false, "md5_digest": "bde3d7bad916719ebbbaf83667a6c5d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73465, "upload_time": "2010-09-28T15:19:47", "upload_time_iso_8601": "2010-09-28T15:19:47.441933Z", "url": "https://files.pythonhosted.org/packages/f1/e7/c5a192b1c887d317b030f747e1fdf4956deff7fd27ce255561fc48f78098/experimental.catalogqueryplan-3.0.2.zip", "yanked": false}], "3.0a1": [{"comment_text": "", "digests": {"md5": "ff039122be83836bb43624880eb95b80", "sha256": "47c47cba03065dc16251465fb6ca7849412940698d464ab97405ff027a872fef"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.0a1.zip", "has_sig": false, "md5_digest": "ff039122be83836bb43624880eb95b80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69885, "upload_time": "2010-02-21T17:53:30", "upload_time_iso_8601": "2010-02-21T17:53:30.496937Z", "url": "https://files.pythonhosted.org/packages/b6/8d/74f078d07b0178e513bbab39bc2e46d471344cc634b6001f94d1a41c5c38/experimental.catalogqueryplan-3.0a1.zip", "yanked": false}], "3.0a2": [{"comment_text": "", "digests": {"md5": "1d6b6f5767dd5dd183721585badfe6a5", "sha256": "58b2a166e60d3341f84444d6559044fe6d4045fc994cc14bbc595764122b7a23"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.0a2.zip", "has_sig": false, "md5_digest": "1d6b6f5767dd5dd183721585badfe6a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70326, "upload_time": "2010-02-21T17:58:07", "upload_time_iso_8601": "2010-02-21T17:58:07.478212Z", "url": "https://files.pythonhosted.org/packages/ef/22/1aba986f47f125823dc78bd40e79d66190e9bcd89289c39bd25e38588846/experimental.catalogqueryplan-3.0a2.zip", "yanked": false}], "3.0a3": [{"comment_text": "", "digests": {"md5": "c101417e6359bbe23de1fc261898d496", "sha256": "de9c505202cfdbec759a4b57a9f719d83444b7cd2da8edd359ff19c03164fe66"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.0a3.zip", "has_sig": false, "md5_digest": "c101417e6359bbe23de1fc261898d496", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71458, "upload_time": "2010-03-08T00:54:47", "upload_time_iso_8601": "2010-03-08T00:54:47.006469Z", "url": "https://files.pythonhosted.org/packages/14/0c/3e3deaf5c6ad955eddaffe8ec3500ca5da0e484517400e726ae0ee650393/experimental.catalogqueryplan-3.0a3.zip", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "eb607f3200a526b5ca4690ca6fcbbb0c", "sha256": "117959445400e55c4cc50923bdfd38f8a2f763af017151969a21a92cba483552"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.1.0.zip", "has_sig": false, "md5_digest": "eb607f3200a526b5ca4690ca6fcbbb0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78492, "upload_time": "2010-12-27T14:04:23", "upload_time_iso_8601": "2010-12-27T14:04:23.038738Z", "url": "https://files.pythonhosted.org/packages/96/07/d9288a9fde7bd3cdf449853b4cfa8015db8044846fe337e9f4e9e9db9c5d/experimental.catalogqueryplan-3.1.0.zip", "yanked": false}], "3.2.0": [{"comment_text": "", "digests": {"md5": "62c37c6a0a7ee1f05fc59f2be8c146bb", "sha256": "15e62452dce6ed53f6d3560745e5b79159e209b7e18664599a34470cfd43f86e"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.2.0.zip", "has_sig": false, "md5_digest": "62c37c6a0a7ee1f05fc59f2be8c146bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79395, "upload_time": "2011-03-08T16:41:50", "upload_time_iso_8601": "2011-03-08T16:41:50.008093Z", "url": "https://files.pythonhosted.org/packages/6a/bf/7a362197985f377e69f18f0faf148565fbf414b099a0a7da73fef444a491/experimental.catalogqueryplan-3.2.0.zip", "yanked": false}], "3.2.1": [{"comment_text": "", "digests": {"md5": "d11ebef3d3965c4afcf8ea7f55c0b063", "sha256": "12de7a0aaa81f4ef2e053e190400dcda0bef6c7bc2086fdd0f1a49a3cf008f21"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.2.1.zip", "has_sig": false, "md5_digest": "d11ebef3d3965c4afcf8ea7f55c0b063", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79171, "upload_time": "2011-03-16T10:29:25", "upload_time_iso_8601": "2011-03-16T10:29:25.412851Z", "url": "https://files.pythonhosted.org/packages/c6/5a/fdaab626df8114cbc2066c3d52ed1ded2f2d07ab5728170a748e65dd5ae6/experimental.catalogqueryplan-3.2.1.zip", "yanked": false}], "3.2.2": [{"comment_text": "", "digests": {"md5": "7219879d06ab2e097a00677adaefd8bf", "sha256": "9f76235343d18b03f9132b656a15a5103309a41853cf812f8192fd8aed42366d"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.2.2.zip", "has_sig": false, "md5_digest": "7219879d06ab2e097a00677adaefd8bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79838, "upload_time": "2011-04-09T18:42:50", "upload_time_iso_8601": "2011-04-09T18:42:50.313724Z", "url": "https://files.pythonhosted.org/packages/7c/4b/386d05d5741f20989ca1a46dc538f09989d5d85eabd793b88e1230193367/experimental.catalogqueryplan-3.2.2.zip", "yanked": false}], "3.2.3": [{"comment_text": "", "digests": {"md5": "8a028e62265db7538201b89cc0b3dde1", "sha256": "b356dfba2340795c4d420cf3f9cb52d80913100dc96e8e3378976eba3dab7b19"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.2.3.zip", "has_sig": false, "md5_digest": "8a028e62265db7538201b89cc0b3dde1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79931, "upload_time": "2011-04-10T12:53:35", "upload_time_iso_8601": "2011-04-10T12:53:35.466232Z", "url": "https://files.pythonhosted.org/packages/a5/9c/e8432c458241eb57e5f6cdd7245ac7f153285481d7a6f1eddc3893fc0ac0/experimental.catalogqueryplan-3.2.3.zip", "yanked": false}], "3.2.4": [{"comment_text": "", "digests": {"md5": "7100e0e16b70f37ad870c54130ac793b", "sha256": "f3d54603187828d32defa71dba26756151432d3d89b4e50fa30edc01accae75b"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.2.4.zip", "has_sig": false, "md5_digest": "7100e0e16b70f37ad870c54130ac793b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80102, "upload_time": "2011-04-27T14:06:46", "upload_time_iso_8601": "2011-04-27T14:06:46.618317Z", "url": "https://files.pythonhosted.org/packages/e0/ec/540c67377eb32b323b50a558e2d4d748096850282a5cc292f292ab9df6f0/experimental.catalogqueryplan-3.2.4.zip", "yanked": false}], "3.2.5": [{"comment_text": "", "digests": {"md5": "493af4a625f742e2cd018642ad962703", "sha256": "9617e94bb3598be3785fa3e39c553e449d7c4ee1ace15f38e9d8a8a0a33193ea"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.2.5.zip", "has_sig": false, "md5_digest": "493af4a625f742e2cd018642ad962703", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80400, "upload_time": "2011-05-27T16:03:27", "upload_time_iso_8601": "2011-05-27T16:03:27.699952Z", "url": "https://files.pythonhosted.org/packages/97/c6/ef19eafa79d5743ed1bee1cf79896091ddb5155dd451025440745d269450/experimental.catalogqueryplan-3.2.5.zip", "yanked": false}], "3.2.6": [{"comment_text": "", "digests": {"md5": "3480300b8fb71d8a01a3fbda12c7887d", "sha256": "c5ed84e1e02828d30251874c73d7ea388ab815d381204209c2b4916d17edee18"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.2.6.zip", "has_sig": false, "md5_digest": "3480300b8fb71d8a01a3fbda12c7887d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81885, "upload_time": "2011-08-21T00:57:11", "upload_time_iso_8601": "2011-08-21T00:57:11.613441Z", "url": "https://files.pythonhosted.org/packages/ca/40/a676d76bb606701c1e4ed7c19322fd272c2c8e31a5990ccc1b8f6da24689/experimental.catalogqueryplan-3.2.6.zip", "yanked": false}], "3.2.7": [{"comment_text": "", "digests": {"md5": "1bb2974058d12183bbc7cd7ac419f33e", "sha256": "7723c75227ff39d9da1ed90dd17c414c5107bca2c2aaa6f972000cf60016745b"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.2.7.zip", "has_sig": false, "md5_digest": "1bb2974058d12183bbc7cd7ac419f33e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 82064, "upload_time": "2011-08-23T14:21:59", "upload_time_iso_8601": "2011-08-23T14:21:59.148815Z", "url": "https://files.pythonhosted.org/packages/70/04/61a5b928c8bfc57f2398cb59e3f532afa76fd938e5aa7b2c33a7d2b47878/experimental.catalogqueryplan-3.2.7.zip", "yanked": false}], "3.2.8": [{"comment_text": "", "digests": {"md5": "9a47cd7cb359a3d72b860908ae06949c", "sha256": "0684577979d4108eb8d13f3240d7483489ba5b0b6c2160a53a3c8caf07ba50f5"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.2.8.zip", "has_sig": false, "md5_digest": "9a47cd7cb359a3d72b860908ae06949c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84708, "upload_time": "2013-01-07T15:16:30", "upload_time_iso_8601": "2013-01-07T15:16:30.280825Z", "url": "https://files.pythonhosted.org/packages/22/b5/31255e429b0621bb287edbf6c7ea32ec3b9e6b0d6103afd5a1b31154ddcc/experimental.catalogqueryplan-3.2.8.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9a47cd7cb359a3d72b860908ae06949c", "sha256": "0684577979d4108eb8d13f3240d7483489ba5b0b6c2160a53a3c8caf07ba50f5"}, "downloads": -1, "filename": "experimental.catalogqueryplan-3.2.8.zip", "has_sig": false, "md5_digest": "9a47cd7cb359a3d72b860908ae06949c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84708, "upload_time": "2013-01-07T15:16:30", "upload_time_iso_8601": "2013-01-07T15:16:30.280825Z", "url": "https://files.pythonhosted.org/packages/22/b5/31255e429b0621bb287edbf6c7ea32ec3b9e6b0d6103afd5a1b31154ddcc/experimental.catalogqueryplan-3.2.8.zip", "yanked": false}], "timestamp": "Fri May  8 00:44:40 2020"}