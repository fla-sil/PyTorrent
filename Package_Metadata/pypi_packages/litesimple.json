{"info": {"author": "Jonatan Nilsson", "author_email": "jonatan@nilsson.is", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Plugins", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Database", "Topic :: Software Development", "Topic :: Software Development :: Libraries"], "description": "litesimple\n==========\n\nLitesimple is a simple ORM micro-library for sqlite3. It offers mapping\nbetween attributes (or fields as it's named here) to table columns with \nconversion support from different formats, querying, saving and other simple\ntask.\n\nInstallation and dependencies\n-----------------------------\n\nTo install litesimple, either run ``pip install litesimple`` or download [litesimple.py](https://github.com/TheThing/litesimple) directly in your browser or with wget.\n\nLitesimple has no dependancy requirements other than is included in the Python Standard Library.\n\nExample\n-------\n\nFirst create your models:\n\n``` python\nfrom litesimple import Model, FieldInteger, FieldText, FieldDateTime\n\nclass car(Model):\n    id = FieldInteger(is_key=True)\n    text = FieldText()\n    time_created = FieldDateTime(auto_now_add=True)\n    time_updated = FieldDateTime(auto_now=True)\n\n    def __str__(self):\n        return \"car (%s)\" % self.make\n```\n\nThen play with it:\n\n``` python\n>>> from models import car\n>>> car(make=\"Opel\").save()\n>>> car(make=\"Hyundai\").save()\n>>> car(make=\"BMW\").save()\n>>> print car.get(1)\ncar (Opel)\n>>> for x in car.filter(): print x\nqueue (Opel)\nqueue (Hyundai)\nqueue (BMW)\n>>> c = car.get(2)\n>>> print c\ncar (Hyundai)\n>>> c = car.get(id=2)\n>>> print c\ncar (Hyundai)\n>>> c.delete()\n>>> for x in car.filter(): print x\ncar (Opel)\ncar (BMW)\n>>> car.delete(make=\"Opel\")\n>>> for x in car.filter(): print x\ncar (BMW)\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TheThing/litesimple", "keywords": null, "license": "WTFPL-2", "maintainer": null, "maintainer_email": null, "name": "litesimple", "package_url": "https://pypi.org/project/litesimple/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/litesimple/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/TheThing/litesimple"}, "release_url": "https://pypi.org/project/litesimple/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Simple python ORM micro-framework for sqlite3", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            litesimple<br>==========<br><br>Litesimple is a simple ORM micro-library for sqlite3. It offers mapping<br>between attributes (or fields as it's named here) to table columns with <br>conversion support from different formats, querying, saving and other simple<br>task.<br><br>Installation and dependencies<br>-----------------------------<br><br>To install litesimple, either run ``pip install litesimple`` or download [litesimple.py](https://github.com/TheThing/litesimple) directly in your browser or with wget.<br><br>Litesimple has no dependancy requirements other than is included in the Python Standard Library.<br><br>Example<br>-------<br><br>First create your models:<br><br>``` python<br>from litesimple import Model, FieldInteger, FieldText, FieldDateTime<br><br>class car(Model):<br>    id = FieldInteger(is_key=True)<br>    text = FieldText()<br>    time_created = FieldDateTime(auto_now_add=True)<br>    time_updated = FieldDateTime(auto_now=True)<br><br>    def __str__(self):<br>        return \"car (%s)\" % self.make<br>```<br><br>Then play with it:<br><br>``` python<br>&gt;&gt;&gt; from models import car<br>&gt;&gt;&gt; car(make=\"Opel\").save()<br>&gt;&gt;&gt; car(make=\"Hyundai\").save()<br>&gt;&gt;&gt; car(make=\"BMW\").save()<br>&gt;&gt;&gt; print car.get(1)<br>car (Opel)<br>&gt;&gt;&gt; for x in car.filter(): print x<br>queue (Opel)<br>queue (Hyundai)<br>queue (BMW)<br>&gt;&gt;&gt; c = car.get(2)<br>&gt;&gt;&gt; print c<br>car (Hyundai)<br>&gt;&gt;&gt; c = car.get(id=2)<br>&gt;&gt;&gt; print c<br>car (Hyundai)<br>&gt;&gt;&gt; c.delete()<br>&gt;&gt;&gt; for x in car.filter(): print x<br>car (Opel)<br>car (BMW)<br>&gt;&gt;&gt; car.delete(make=\"Opel\")<br>&gt;&gt;&gt; for x in car.filter(): print x<br>car (BMW)<br>```\n          </div>"}, "last_serial": 813224, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d2b243b23d7b7744f64d972734a7804a", "sha256": "e1501502226ca32927eadbae7ada8afb299c390c697a2c5bd166ecf081db1ef8"}, "downloads": -1, "filename": "litesimple-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d2b243b23d7b7744f64d972734a7804a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9474, "upload_time": "2013-07-11T04:48:37", "upload_time_iso_8601": "2013-07-11T04:48:37.966209Z", "url": "https://files.pythonhosted.org/packages/ed/36/f0a5732c450a1a75403bfe3b47569933214b52e92068e6d40be21222b3d8/litesimple-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d2b243b23d7b7744f64d972734a7804a", "sha256": "e1501502226ca32927eadbae7ada8afb299c390c697a2c5bd166ecf081db1ef8"}, "downloads": -1, "filename": "litesimple-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d2b243b23d7b7744f64d972734a7804a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9474, "upload_time": "2013-07-11T04:48:37", "upload_time_iso_8601": "2013-07-11T04:48:37.966209Z", "url": "https://files.pythonhosted.org/packages/ed/36/f0a5732c450a1a75403bfe3b47569933214b52e92068e6d40be21222b3d8/litesimple-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:13 2020"}