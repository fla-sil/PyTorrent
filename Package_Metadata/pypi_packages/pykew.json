{"info": {"author": "John Iacona", "author_email": "j.iacona@kew.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "=======================================================\npykew: Python library for accessing Kew's data services\n=======================================================\n\nLibrary for easy access to Kew's nomenclatural and taxonomic services. Hides the\nintricacies of using the HTTP API.\n\n.. image:: https://travis-ci.com/RBGKew/pykew.svg?branch=master\n    :target: https://travis-ci.com/RBGKew/pykew\n\n.. image:: https://badge.fury.io/py/pykew.svg\n    :target: https://badge.fury.io/py/pykew\n\n----\nIPNI\n----\n\nModule for searching IPNI data and looking up individual records.\n\nSimple search\n~~~~~~~~~~~~~\n\n.. code-block:: python\n\n    import pykew.ipni as ipni\n\n    result = ipni.search('Poa annua')\n\nAdvanced search\n~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n    import pykew.ipni as ipni\n    from pykew.ipni_terms import Name\n\n    query = { Name.genus: 'Poa', Name.species: 'annua' }\n    res = ipni.search(query)\n\nAvailable Search Terms\n----------------------\n\nTo build complex queries, use the search terms available in ``ipni_terms``. Query term are grouped into\nthe modules ``Name``, ``Author``, and ``Publication``.\n\n``Name``\n========\n\n* added\n* author\n* basionym\n* basionym_author\n* bibliographic_reference\n* citation_type\n* collection_number\n* collectors\n* distribution\n* family\n* full_name\n* genus\n* in_powo\n* infrafamily\n* infragenus\n* infraspecies\n* modified\n* name_status\n* published\n* published_in\n* publishing_author\n* rank\n* scientific_name\n* species\n* species_author\n* version\n\n``Author``\n==========\n\n* forename\n* full_name\n* standard_form\n* surname\n\n``Publication``\n===============\n\n* standard_form\n* bph_number\n* date\n* isbn\n* issn\n* lc_number\n* preceded_by\n* superceded_by\n* title\n* tl2_author\n* tl2_number\n\nFiltering\n~~~~~~~~~\n\nYou can filter a given result set by taxonomic rank.\n\n.. code-block:: python\n\n    import pykew.ipni as ipni\n    from pykew.ipni_terms import Filters\n\n    res = ipni.search('Poa', filters = Filters.infraspecific)\n\nAvailable Filters\n-----------------\n\n``Filters``\n===========\n\n* familial\n* infrafamilial\n* generic\n* infrageneric\n* specific\n* infraspecific\n\n\nUsing results\n~~~~~~~~~~~~~\n\nResults sets are returned as an iterator which can be manipulated as you generally would in python. The result object\nalso implements ``size()`` efficiently - it does not fetch all results to count them.\n\n.. code-block:: python\n\n    import pykew.ipni as ipni\n    from pykew.ipni_terms import Name\n\n    query = { Name.genus: 'Poa', Name.species: 'annua' }\n    res = ipni.search(query)\n\n    res.size()\n    [r['name'] for r in res if 'name' in r]\n\n----\nPOWO\n----\n\nModule for searching POWO data and looking up individual records. Taxonomic data is\nreturned by default, but other associated such as distributions and descriptive text can\nalso be retrieved.\n\nSimple search\n~~~~~~~~~~~~~\n\n.. code-block:: python\n\n    import pykew.powo as powo\n\n    result = powo.search('Poa annua')\n\nAdvanced search\n~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n    import pykew.powo as powo\n    from pykew.powo_terms import Name\n\n    query = { Name.genus: 'Poa', Name.species: 'annua' }\n    res = powo.search(query)\n\nAvailable Search Terms\n----------------------\n\nTo build complex queries, use the search terms available in ``powo_terms``. Query term are grouped into\nthe modules ``Name``, ``Characteristic``, and ``Geography``.\n\n``Name``\n========\n\n* full_name\n* common_name\n* kingdom\n* family\n* genus\n* species\n* author\n\n``Characteristic``\n==================\n\n* summary\n* appearance\n* characteristic\n* flower\n* fruit\n* leaf\n* inflorescence\n* seed\n* cloning\n* use\n\n``Geography``\n=============\n\n* distribution\n\nFiltering\n~~~~~~~~~\n\nYou can filter a given result set by accepted taxa, taxa with images, and taxonomic rank.\n\n.. code-block:: python\n\n    import pykew.powo as powo\n    from pykew.powo_terms import Filters\n\n    res = powo.search('Poa', filters = [Filters.accepted, Filters.species])\n\nAvailable Filters\n-----------------\n\n``Filters``\n===========\n\n* accepted\n* has_images\n* families\n* genera\n* species\n* infraspecies\n\nIndividual record\n~~~~~~~~~~~~~~~~~\n.. code-block:: python\n\n    import pykew.powo as powo\n\n    res = powo.lookup('urn:lsid:ipni.org:names:320035-2')\n\nExtra Data\n----------\n\nThe standard data returned by the POWO api includes taxonomic and nomenclatural information, but there\nare other data you can request.\n\nCurrently you can only retrieve distribution data, but other data should be exposed in the future.\n\n.. code-block:: python\n\n    import pykew.powo as powo\n\n    res = powo.lookup('urn:lsid:ipni.org:names:320035-2', include=['distribution'])\n    native_to = [d['name'] for d in res['distribution']['natives']]\n\n\n\n\nUsing results\n~~~~~~~~~~~~~\n\nResults sets are returned as an iterator which can be manipulated as you generally would in python. The result object\nalso implements ``size()`` efficiently - it does not fetch all results to count them.\n\n.. code-block:: python\n\n    import pykew.powo as powo\n    from pykew.powo_terms import Name, Geography\n\n    query = { Name.genus: 'Poa', Geography.distribution: 'Africa' }\n    res = powo.search(query)\n\n    res.size()\n    [r['name'] for r in res if 'name' in r]", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RBGKew/pykew", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pykew", "package_url": "https://pypi.org/project/pykew/", "platform": "", "project_url": "https://pypi.org/project/pykew/", "project_urls": {"Homepage": "https://github.com/RBGKew/pykew"}, "release_url": "https://pypi.org/project/pykew/0.1.3/", "requires_dist": null, "requires_python": ">=3.5.0", "summary": "Python interface to Kew data", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Library for easy access to Kew\u2019s nomenclatural and taxonomic services. Hides the\nintricacies of using the HTTP API.</p>\n<a href=\"https://travis-ci.com/RBGKew/pykew\" rel=\"nofollow\"><img alt=\"https://travis-ci.com/RBGKew/pykew.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/75acd038d4c7e55ac978dec6b928b1b1cca41208/68747470733a2f2f7472617669732d63692e636f6d2f5242474b65772f70796b65772e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/pykew\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/pykew.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/66355d64b8cce0e2ebefbf3815ba7a05dfae6aa7/68747470733a2f2f62616467652e667572792e696f2f70792f70796b65772e737667\"></a>\n<div id=\"ipni\">\n<h2>IPNI</h2>\n<p>Module for searching IPNI data and looking up individual records.</p>\n<div id=\"simple-search\">\n<h3>Simple search</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pykew.ipni</span> <span class=\"k\">as</span> <span class=\"nn\">ipni</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">ipni</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s1\">'Poa annua'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"advanced-search\">\n<h3>Advanced search</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pykew.ipni</span> <span class=\"k\">as</span> <span class=\"nn\">ipni</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pykew.ipni_terms</span> <span class=\"kn\">import</span> <span class=\"n\">Name</span>\n\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">Name</span><span class=\"o\">.</span><span class=\"n\">genus</span><span class=\"p\">:</span> <span class=\"s1\">'Poa'</span><span class=\"p\">,</span> <span class=\"n\">Name</span><span class=\"o\">.</span><span class=\"n\">species</span><span class=\"p\">:</span> <span class=\"s1\">'annua'</span> <span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">ipni</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">)</span>\n</pre>\n<div id=\"available-search-terms\">\n<h4>Available Search Terms</h4>\n<p>To build complex queries, use the search terms available in <tt>ipni_terms</tt>. Query term are grouped into\nthe modules <tt>Name</tt>, <tt>Author</tt>, and <tt>Publication</tt>.</p>\n<div id=\"name\">\n<h5><tt>Name</tt></h5>\n<ul>\n<li>added</li>\n<li>author</li>\n<li>basionym</li>\n<li>basionym_author</li>\n<li>bibliographic_reference</li>\n<li>citation_type</li>\n<li>collection_number</li>\n<li>collectors</li>\n<li>distribution</li>\n<li>family</li>\n<li>full_name</li>\n<li>genus</li>\n<li>in_powo</li>\n<li>infrafamily</li>\n<li>infragenus</li>\n<li>infraspecies</li>\n<li>modified</li>\n<li>name_status</li>\n<li>published</li>\n<li>published_in</li>\n<li>publishing_author</li>\n<li>rank</li>\n<li>scientific_name</li>\n<li>species</li>\n<li>species_author</li>\n<li>version</li>\n</ul>\n</div>\n<div id=\"author\">\n<h5><tt>Author</tt></h5>\n<ul>\n<li>forename</li>\n<li>full_name</li>\n<li>standard_form</li>\n<li>surname</li>\n</ul>\n</div>\n<div id=\"publication\">\n<h5><tt>Publication</tt></h5>\n<ul>\n<li>standard_form</li>\n<li>bph_number</li>\n<li>date</li>\n<li>isbn</li>\n<li>issn</li>\n<li>lc_number</li>\n<li>preceded_by</li>\n<li>superceded_by</li>\n<li>title</li>\n<li>tl2_author</li>\n<li>tl2_number</li>\n</ul>\n</div>\n</div>\n</div>\n<div id=\"filtering\">\n<h3>Filtering</h3>\n<p>You can filter a given result set by taxonomic rank.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pykew.ipni</span> <span class=\"k\">as</span> <span class=\"nn\">ipni</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pykew.ipni_terms</span> <span class=\"kn\">import</span> <span class=\"n\">Filters</span>\n\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">ipni</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s1\">'Poa'</span><span class=\"p\">,</span> <span class=\"n\">filters</span> <span class=\"o\">=</span> <span class=\"n\">Filters</span><span class=\"o\">.</span><span class=\"n\">infraspecific</span><span class=\"p\">)</span>\n</pre>\n<div id=\"available-filters\">\n<h4>Available Filters</h4>\n<h4 id=\"filters\"><span class=\"section-subtitle\"><tt>Filters</tt></span></h4>\n<ul>\n<li>familial</li>\n<li>infrafamilial</li>\n<li>generic</li>\n<li>infrageneric</li>\n<li>specific</li>\n<li>infraspecific</li>\n</ul>\n</div>\n</div>\n<div id=\"using-results\">\n<h3>Using results</h3>\n<p>Results sets are returned as an iterator which can be manipulated as you generally would in python. The result object\nalso implements <tt>size()</tt> efficiently - it does not fetch all results to count them.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pykew.ipni</span> <span class=\"k\">as</span> <span class=\"nn\">ipni</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pykew.ipni_terms</span> <span class=\"kn\">import</span> <span class=\"n\">Name</span>\n\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">Name</span><span class=\"o\">.</span><span class=\"n\">genus</span><span class=\"p\">:</span> <span class=\"s1\">'Poa'</span><span class=\"p\">,</span> <span class=\"n\">Name</span><span class=\"o\">.</span><span class=\"n\">species</span><span class=\"p\">:</span> <span class=\"s1\">'annua'</span> <span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">ipni</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">)</span>\n\n<span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">res</span> <span class=\"k\">if</span> <span class=\"s1\">'name'</span> <span class=\"ow\">in</span> <span class=\"n\">r</span><span class=\"p\">]</span>\n</pre>\n</div>\n</div>\n<div id=\"powo\">\n<h2>POWO</h2>\n<p>Module for searching POWO data and looking up individual records. Taxonomic data is\nreturned by default, but other associated such as distributions and descriptive text can\nalso be retrieved.</p>\n<div id=\"id1\">\n<h3>Simple search</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pykew.powo</span> <span class=\"k\">as</span> <span class=\"nn\">powo</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">powo</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s1\">'Poa annua'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"id2\">\n<h3>Advanced search</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pykew.powo</span> <span class=\"k\">as</span> <span class=\"nn\">powo</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pykew.powo_terms</span> <span class=\"kn\">import</span> <span class=\"n\">Name</span>\n\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">Name</span><span class=\"o\">.</span><span class=\"n\">genus</span><span class=\"p\">:</span> <span class=\"s1\">'Poa'</span><span class=\"p\">,</span> <span class=\"n\">Name</span><span class=\"o\">.</span><span class=\"n\">species</span><span class=\"p\">:</span> <span class=\"s1\">'annua'</span> <span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">powo</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">)</span>\n</pre>\n<div id=\"id3\">\n<h4>Available Search Terms</h4>\n<p>To build complex queries, use the search terms available in <tt>powo_terms</tt>. Query term are grouped into\nthe modules <tt>Name</tt>, <tt>Characteristic</tt>, and <tt>Geography</tt>.</p>\n<div id=\"id4\">\n<h5><tt>Name</tt></h5>\n<ul>\n<li>full_name</li>\n<li>common_name</li>\n<li>kingdom</li>\n<li>family</li>\n<li>genus</li>\n<li>species</li>\n<li>author</li>\n</ul>\n</div>\n<div id=\"characteristic\">\n<h5><tt>Characteristic</tt></h5>\n<ul>\n<li>summary</li>\n<li>appearance</li>\n<li>characteristic</li>\n<li>flower</li>\n<li>fruit</li>\n<li>leaf</li>\n<li>inflorescence</li>\n<li>seed</li>\n<li>cloning</li>\n<li>use</li>\n</ul>\n</div>\n<div id=\"geography\">\n<h5><tt>Geography</tt></h5>\n<ul>\n<li>distribution</li>\n</ul>\n</div>\n</div>\n</div>\n<div id=\"id5\">\n<h3>Filtering</h3>\n<p>You can filter a given result set by accepted taxa, taxa with images, and taxonomic rank.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pykew.powo</span> <span class=\"k\">as</span> <span class=\"nn\">powo</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pykew.powo_terms</span> <span class=\"kn\">import</span> <span class=\"n\">Filters</span>\n\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">powo</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s1\">'Poa'</span><span class=\"p\">,</span> <span class=\"n\">filters</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">Filters</span><span class=\"o\">.</span><span class=\"n\">accepted</span><span class=\"p\">,</span> <span class=\"n\">Filters</span><span class=\"o\">.</span><span class=\"n\">species</span><span class=\"p\">])</span>\n</pre>\n<div id=\"id6\">\n<h4>Available Filters</h4>\n<h4 id=\"id7\"><span class=\"section-subtitle\"><tt>Filters</tt></span></h4>\n<ul>\n<li>accepted</li>\n<li>has_images</li>\n<li>families</li>\n<li>genera</li>\n<li>species</li>\n<li>infraspecies</li>\n</ul>\n</div>\n</div>\n<div id=\"individual-record\">\n<h3>Individual record</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pykew.powo</span> <span class=\"k\">as</span> <span class=\"nn\">powo</span>\n\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">powo</span><span class=\"o\">.</span><span class=\"n\">lookup</span><span class=\"p\">(</span><span class=\"s1\">'urn:lsid:ipni.org:names:320035-2'</span><span class=\"p\">)</span>\n</pre>\n<div id=\"extra-data\">\n<h4>Extra Data</h4>\n<p>The standard data returned by the POWO api includes taxonomic and nomenclatural information, but there\nare other data you can request.</p>\n<p>Currently you can only retrieve distribution data, but other data should be exposed in the future.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pykew.powo</span> <span class=\"k\">as</span> <span class=\"nn\">powo</span>\n\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">powo</span><span class=\"o\">.</span><span class=\"n\">lookup</span><span class=\"p\">(</span><span class=\"s1\">'urn:lsid:ipni.org:names:320035-2'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'distribution'</span><span class=\"p\">])</span>\n<span class=\"n\">native_to</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">d</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">d</span> <span class=\"ow\">in</span> <span class=\"n\">res</span><span class=\"p\">[</span><span class=\"s1\">'distribution'</span><span class=\"p\">][</span><span class=\"s1\">'natives'</span><span class=\"p\">]]</span>\n</pre>\n</div>\n</div>\n<div id=\"id8\">\n<h3>Using results</h3>\n<p>Results sets are returned as an iterator which can be manipulated as you generally would in python. The result object\nalso implements <tt>size()</tt> efficiently - it does not fetch all results to count them.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pykew.powo</span> <span class=\"k\">as</span> <span class=\"nn\">powo</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pykew.powo_terms</span> <span class=\"kn\">import</span> <span class=\"n\">Name</span><span class=\"p\">,</span> <span class=\"n\">Geography</span>\n\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">Name</span><span class=\"o\">.</span><span class=\"n\">genus</span><span class=\"p\">:</span> <span class=\"s1\">'Poa'</span><span class=\"p\">,</span> <span class=\"n\">Geography</span><span class=\"o\">.</span><span class=\"n\">distribution</span><span class=\"p\">:</span> <span class=\"s1\">'Africa'</span> <span class=\"p\">}</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">powo</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">)</span>\n\n<span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">res</span> <span class=\"k\">if</span> <span class=\"s1\">'name'</span> <span class=\"ow\">in</span> <span class=\"n\">r</span><span class=\"p\">]</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5312748, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6ccd97954a5ef98acbe569a234c3fa7f", "sha256": "a6ec159abc81d2f4dd6b4f44f557d1d3260133588198dbf734c4e8c1f1234f5d"}, "downloads": -1, "filename": "pykew-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6ccd97954a5ef98acbe569a234c3fa7f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5.0", "size": 4509, "upload_time": "2018-08-30T15:42:46", "upload_time_iso_8601": "2018-08-30T15:42:46.925534Z", "url": "https://files.pythonhosted.org/packages/39/ae/a48606feabbd914fff4fb20c1a009e6224d7f310f0616915ca4f1afc3b07/pykew-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f7b0d574fa229876cf7d4e44e87dc6f", "sha256": "235e0ab3db5e2860e5160351bcb34ab0d9674b7ac39f04e03460860a006747fd"}, "downloads": -1, "filename": "pykew-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1f7b0d574fa229876cf7d4e44e87dc6f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 4515, "upload_time": "2018-08-30T15:42:48", "upload_time_iso_8601": "2018-08-30T15:42:48.132544Z", "url": "https://files.pythonhosted.org/packages/bb/bf/328029f733edd3d715cdda0f19a75cfa6f7276b4362b2cdb42d0785a0cc9/pykew-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "931d7c571323300d530e785bfc03cf70", "sha256": "20360e3c8f6e16864850a316c936ee46b138150223d6b8a1ecd9456ae45c8fd6"}, "downloads": -1, "filename": "pykew-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "931d7c571323300d530e785bfc03cf70", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5.0", "size": 9246, "upload_time": "2018-09-10T14:01:35", "upload_time_iso_8601": "2018-09-10T14:01:35.743129Z", "url": "https://files.pythonhosted.org/packages/45/d7/5c1e589fc0f466007e8bb9b15cba3eaf83a124ca0f11c58a51c3992045e5/pykew-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4b37146faedccfdda3062d2b7110ba4", "sha256": "083badc45a964e12e01da2e063c4870d4647f6439e70ca96c544767d4ef0acf4"}, "downloads": -1, "filename": "pykew-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b4b37146faedccfdda3062d2b7110ba4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 5219, "upload_time": "2018-09-10T14:01:36", "upload_time_iso_8601": "2018-09-10T14:01:36.890884Z", "url": "https://files.pythonhosted.org/packages/87/41/f87b65ce4a3f9d40a713262a015142acbee57327823a6933418eddd28a2b/pykew-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "7809bf90d2681d325ef5d53d9cd90972", "sha256": "42b36e473f4879e75ff8c8e04c25ed8dfb2f76661aebcb7d1a141b1b7a3f66e0"}, "downloads": -1, "filename": "pykew-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7809bf90d2681d325ef5d53d9cd90972", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5.0", "size": 9423, "upload_time": "2018-09-10T14:43:35", "upload_time_iso_8601": "2018-09-10T14:43:35.338974Z", "url": "https://files.pythonhosted.org/packages/e2/fe/229071d714daf157d4d794fbb6732f8f06cb21f6b1e6240c15b6561f4940/pykew-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44118d2f3f289e747274a044fd77c55b", "sha256": "cd24675619178461772b4d801216f81dc5a43710380234aac206979a13e33e52"}, "downloads": -1, "filename": "pykew-0.0.3.tar.gz", "has_sig": false, "md5_digest": "44118d2f3f289e747274a044fd77c55b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 5503, "upload_time": "2018-09-10T14:43:36", "upload_time_iso_8601": "2018-09-10T14:43:36.589819Z", "url": "https://files.pythonhosted.org/packages/98/70/ce0a99ae88031569264c2417273852f8e453ddd68d7e62e4887d652d5fcf/pykew-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "dcc6570d61612a41b45837254c2ec597", "sha256": "b92afba355c0d96eeabb74dc6abeaa05dd19f9f5e011f37efacdb125befba830"}, "downloads": -1, "filename": "pykew-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dcc6570d61612a41b45837254c2ec597", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5.0", "size": 9725, "upload_time": "2018-09-26T13:22:44", "upload_time_iso_8601": "2018-09-26T13:22:44.623399Z", "url": "https://files.pythonhosted.org/packages/94/a8/46cb58db15e2096d7984696b36f0b4d4229343c8542bf502fb7e37f5bc36/pykew-0.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4cf326d8977eb2b53757cf4e4606dfc", "sha256": "04d3b6ef4b5e40e7db742ead0d7439e5eccb76b9ea2febf3ea5f6b6108a6f83f"}, "downloads": -1, "filename": "pykew-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b4cf326d8977eb2b53757cf4e4606dfc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 5735, "upload_time": "2018-09-26T13:22:45", "upload_time_iso_8601": "2018-09-26T13:22:45.967653Z", "url": "https://files.pythonhosted.org/packages/f9/be/536c2659f714429aa9acf8b405d833aea38cfb3718191ae23bda8613d6fd/pykew-0.0.4.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "07447afcbd9b17edbd37eb53dbd00ff8", "sha256": "3c76109eb25fbb26bcb65b4c9386d17e69058af12159a87d7261f3778b322c7e"}, "downloads": -1, "filename": "pykew-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "07447afcbd9b17edbd37eb53dbd00ff8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5.0", "size": 9728, "upload_time": "2018-11-14T15:16:49", "upload_time_iso_8601": "2018-11-14T15:16:49.084106Z", "url": "https://files.pythonhosted.org/packages/d3/a3/df053979000604af8a86fd2d5b03497a773e5b852566892fd5d781cefb32/pykew-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f0084fb668ff55fc2eaa5e23b39f5bf", "sha256": "eb11915dba8be7a8375fd366a6d3baadb68ffe76bbc4b8fb0a52ef8a57922ef6"}, "downloads": -1, "filename": "pykew-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8f0084fb668ff55fc2eaa5e23b39f5bf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 5735, "upload_time": "2018-11-14T15:16:50", "upload_time_iso_8601": "2018-11-14T15:16:50.503868Z", "url": "https://files.pythonhosted.org/packages/cc/be/d8fb385652241a88f8832fadbc333db3ad990ed18a9fd8489211eb9838aa/pykew-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "59c7d8e62f9b166aea53521d99433f6d", "sha256": "023d7a599d3977602349073f440516def883d3cf57b678594738a62b641c3c55"}, "downloads": -1, "filename": "pykew-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "59c7d8e62f9b166aea53521d99433f6d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5.0", "size": 9818, "upload_time": "2018-11-19T15:16:54", "upload_time_iso_8601": "2018-11-19T15:16:54.607727Z", "url": "https://files.pythonhosted.org/packages/7f/8c/bd90f76c4e5ec68ea9ee2d2bcfd2056005f00c3f25dda2cb8843d0460a7c/pykew-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7baf00dab109e4680268bc5a220ff312", "sha256": "29f4b146a02f135e5593c3bce6cfcd9493319984be624a7dee1848593eb0cca6"}, "downloads": -1, "filename": "pykew-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7baf00dab109e4680268bc5a220ff312", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 5906, "upload_time": "2018-11-19T15:16:55", "upload_time_iso_8601": "2018-11-19T15:16:55.945155Z", "url": "https://files.pythonhosted.org/packages/3a/70/a5b63d8ce3ee5fd446acfae5ad1a9b3cd5ead4a5e68375638870d182aecf/pykew-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "00dba7433956b67a7fed43781b1963da", "sha256": "5c2d20adb71b64a6983ad8a1dcddb1bfebd10d4682cf972cb614d4831935332d"}, "downloads": -1, "filename": "pykew-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "00dba7433956b67a7fed43781b1963da", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5.0", "size": 11362, "upload_time": "2019-01-10T15:10:53", "upload_time_iso_8601": "2019-01-10T15:10:53.144046Z", "url": "https://files.pythonhosted.org/packages/97/1d/dfcdd9f43b84c6e53d4e5f0f6c0df2aa656561b95c4518768bbc7a9c7d1f/pykew-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a3a06ac4d0e1d420c3d6ea70f0ee47b", "sha256": "17c1f837d733902f38b950194f8844812cc2a28a8d30ccfda8288626b032b06b"}, "downloads": -1, "filename": "pykew-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3a3a06ac4d0e1d420c3d6ea70f0ee47b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 7382, "upload_time": "2019-01-10T15:10:54", "upload_time_iso_8601": "2019-01-10T15:10:54.765526Z", "url": "https://files.pythonhosted.org/packages/44/8e/589ddc88048265dc139535b7988453890fdbf052efc156766fb0cf9cbf7f/pykew-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "1241bcb20f4282ce7bfe15c83e904a1c", "sha256": "919883d9a5680bef4f016002ce3855f9629a44c1c6990f327cf7e30b6ecd7c3c"}, "downloads": -1, "filename": "pykew-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1241bcb20f4282ce7bfe15c83e904a1c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 6997, "upload_time": "2019-04-25T10:10:30", "upload_time_iso_8601": "2019-04-25T10:10:30.041272Z", "url": "https://files.pythonhosted.org/packages/f4/ab/986a0f46ee18d72f590b3eb48517b222afeaa01afaf6824f6f32c8bb9317/pykew-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1241bcb20f4282ce7bfe15c83e904a1c", "sha256": "919883d9a5680bef4f016002ce3855f9629a44c1c6990f327cf7e30b6ecd7c3c"}, "downloads": -1, "filename": "pykew-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1241bcb20f4282ce7bfe15c83e904a1c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 6997, "upload_time": "2019-04-25T10:10:30", "upload_time_iso_8601": "2019-04-25T10:10:30.041272Z", "url": "https://files.pythonhosted.org/packages/f4/ab/986a0f46ee18d72f590b3eb48517b222afeaa01afaf6824f6f32c8bb9317/pykew-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:33 2020"}