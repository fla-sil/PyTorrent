{"info": {"author": "dreipol GmbH", "author_email": "dev@dreipol.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "=================\ndjango-easy-eddie\n=================\n\nThis Django package sends your text messages (SMS) through Amazon SNS and provides reporting helpers.\n\nSending SMS using the famous boto3 package is easy. Creating usage and billing reports can become tricky especially\nif you are using multiple projects on the same AWS account or if you need to split cost in any another way.\n\nUsing this package's `send_sms()` function stores an SMS event with the message id in your database and allows you to\nfetch meta data (incl. price) through CloudWatch after the submission with a management command. An admin action\nallows you to export all events as CSV file.\n\nQuickstart\n----------\n\nInstall django-easy-eddie::\n\n    pip install django-easy-eddie\n\nAdd it to your `INSTALLED_APPS`:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'easy_eddie',\n        ...\n    )\n\nConfigure settings:\n\n.. code-block:: python\n\n    AWS_DEFAULT_REGION = 'eu-west-1'\n    AWS_ACCESS_KEY_ID = 'foo'\n    AWS_SECRET_ACCESS_KEY = 'bar'\n\n    EASYEDDIE_CLOUD_WATCH_LOG_GROUP_NAMES = [\n        'sns/eu-west-1/000000000000/DirectPublishToPhoneNumber',\n        'sns/eu-west-1/000000000000/DirectPublishToPhoneNumber/Failure'\n    ]\n\nMigrate your database::\n\n    $ python manage.py migrate easy_eddie\n\nSending text messages (SMS):\n\n.. code-block:: python\n\n    from easy_eddie.sms import send_sms\n\n    send_sms(sender='your_SNS_sender_id', phone_number='your_phone_number', message='foo')\n\n\nFetching CloudWatch logs of unprocessed SMS events:\n\n.. code-block:: python\n\n    from easy_eddie.report_fetchers import fetch_logs_of_unprocessed_sms_events\n\n    fetch_logs_of_unprocessed_sms_events()\n\nManagement Command\n------------------\n\nThis management command can be used to fetch log data from CloudWatch for SMS events. It is probably a good idea to\nuse it in any scheduled way (e.g. crontab, celery beat, etc.)::\n\n    $ python manage.py fetch_cloud_watch_log_events\n\n\nAWS CloudWatch\n--------------\n\nFor more information about setting up CloudWatch logging in AWS, see `Viewing Amazon CloudWatch Metrics and Logs for SMS Deliveries <https://docs.aws.amazon.com/sns/latest/dg/sms_stats_cloudwatch.html>`_\n\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\nTrivia\n------\nIn line with many dreipol projects named after real or fictional characters of the italian mob in america, the name of this package is inspired by Edward `Easy Eddie` J.`O'Hare. ::\n\n    It is believed O'Hare directed investigator Wilson to the Capone bookkeeper who became a key witness at the 1931 trial, and also helped break the code used in the ledgers by Capone's bookkeepers.*\n\n\n*`Wikipedia <https://en.wikipedia.org/wiki/Edward_J._O%27Hare/>`_\n\n\n\n\nHistory\n-------\n\n0.1.0 (2018-02-15)\n++++++++++++++++++\n\n* First release on PyPI.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dreipol/django-easy-eddie", "keywords": "django-easy-eddie", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-easy-eddie", "package_url": "https://pypi.org/project/django-easy-eddie/", "platform": "", "project_url": "https://pypi.org/project/django-easy-eddie/", "project_urls": {"Homepage": "https://github.com/dreipol/django-easy-eddie"}, "release_url": "https://pypi.org/project/django-easy-eddie/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "This Django package sends your text messages (SMS) through Amazon SNS and provides reporting helpers.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            =================<br>django-easy-eddie<br>=================<br><br>This Django package sends your text messages (SMS) through Amazon SNS and provides reporting helpers.<br><br>Sending SMS using the famous boto3 package is easy. Creating usage and billing reports can become tricky especially<br>if you are using multiple projects on the same AWS account or if you need to split cost in any another way.<br><br>Using this package's `send_sms()` function stores an SMS event with the message id in your database and allows you to<br>fetch meta data (incl. price) through CloudWatch after the submission with a management command. An admin action<br>allows you to export all events as CSV file.<br><br>Quickstart<br>----------<br><br>Install django-easy-eddie::<br><br>    pip install django-easy-eddie<br><br>Add it to your `INSTALLED_APPS`:<br><br>.. code-block:: python<br><br>    INSTALLED_APPS = (<br>        ...<br>        'easy_eddie',<br>        ...<br>    )<br><br>Configure settings:<br><br>.. code-block:: python<br><br>    AWS_DEFAULT_REGION = 'eu-west-1'<br>    AWS_ACCESS_KEY_ID = 'foo'<br>    AWS_SECRET_ACCESS_KEY = 'bar'<br><br>    EASYEDDIE_CLOUD_WATCH_LOG_GROUP_NAMES = [<br>        'sns/eu-west-1/000000000000/DirectPublishToPhoneNumber',<br>        'sns/eu-west-1/000000000000/DirectPublishToPhoneNumber/Failure'<br>    ]<br><br>Migrate your database::<br><br>    $ python manage.py migrate easy_eddie<br><br>Sending text messages (SMS):<br><br>.. code-block:: python<br><br>    from easy_eddie.sms import send_sms<br><br>    send_sms(sender='your_SNS_sender_id', phone_number='your_phone_number', message='foo')<br><br><br>Fetching CloudWatch logs of unprocessed SMS events:<br><br>.. code-block:: python<br><br>    from easy_eddie.report_fetchers import fetch_logs_of_unprocessed_sms_events<br><br>    fetch_logs_of_unprocessed_sms_events()<br><br>Management Command<br>------------------<br><br>This management command can be used to fetch log data from CloudWatch for SMS events. It is probably a good idea to<br>use it in any scheduled way (e.g. crontab, celery beat, etc.)::<br><br>    $ python manage.py fetch_cloud_watch_log_events<br><br><br>AWS CloudWatch<br>--------------<br><br>For more information about setting up CloudWatch logging in AWS, see `Viewing Amazon CloudWatch Metrics and Logs for SMS Deliveries &lt;https://docs.aws.amazon.com/sns/latest/dg/sms_stats_cloudwatch.html&gt;`_<br><br><br>Credits<br>-------<br><br>Tools used in rendering this package:<br><br>*  Cookiecutter_<br>*  `cookiecutter-djangopackage`_<br><br>.. _Cookiecutter: https://github.com/audreyr/cookiecutter<br>.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage<br><br><br>Trivia<br>------<br>In line with many dreipol projects named after real or fictional characters of the italian mob in america, the name of this package is inspired by Edward `Easy Eddie` J.`O'Hare. ::<br><br>    It is believed O'Hare directed investigator Wilson to the Capone bookkeeper who became a key witness at the 1931 trial, and also helped break the code used in the ledgers by Capone's bookkeepers.*<br><br><br>*`Wikipedia &lt;https://en.wikipedia.org/wiki/Edward_J._O%27Hare/&gt;`_<br><br><br><br><br>History<br>-------<br><br>0.1.0 (2018-02-15)<br>++++++++++++++++++<br><br>* First release on PyPI.\n          </div>"}, "last_serial": 4846744, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "edc1c985208d28668dfd05387a112396", "sha256": "fcb7ee9c983956fe3b163934f51d2c0dac7435e9397e036146caf1f86682e97d"}, "downloads": -1, "filename": "django-easy-eddie-0.1.1.tar.gz", "has_sig": false, "md5_digest": "edc1c985208d28668dfd05387a112396", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11558, "upload_time": "2019-02-20T17:41:41", "upload_time_iso_8601": "2019-02-20T17:41:41.342463Z", "url": "https://files.pythonhosted.org/packages/af/70/82bea58263cc812d4337fe84a26791275dc4a27012135295cdfd9221965b/django-easy-eddie-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "edc1c985208d28668dfd05387a112396", "sha256": "fcb7ee9c983956fe3b163934f51d2c0dac7435e9397e036146caf1f86682e97d"}, "downloads": -1, "filename": "django-easy-eddie-0.1.1.tar.gz", "has_sig": false, "md5_digest": "edc1c985208d28668dfd05387a112396", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11558, "upload_time": "2019-02-20T17:41:41", "upload_time_iso_8601": "2019-02-20T17:41:41.342463Z", "url": "https://files.pythonhosted.org/packages/af/70/82bea58263cc812d4337fe84a26791275dc4a27012135295cdfd9221965b/django-easy-eddie-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:27 2020"}