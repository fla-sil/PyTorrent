{"info": {"author": "Axioms", "author_email": "info@axioms.io", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.7"], "description": "# axioms-drf-py ![PyPI](https://img.shields.io/pypi/v/axioms-drf-py)\n[Axioms](https://axioms.io) Python client for Django Rest Framework (DRF). Secure your DRF APIs using Axioms Authentication and Authorization.\n\n## Prerequisite\n\n* Python 3.7+\n* An [Axioms](https://axioms.io) client which can obtain access token after user's authentication and authorization and include in `Authorization` header of all API request sent to Python/Flask application server.\n\n## Install SDK\nInstall `axioms-drf-py` in you DRF API project,\n\n```\npip install axioms-drf-py\n```\n\n## Basic usage\n\n### Add `.env` file\nCreate a `.env` file in your main Django app and add following configs,\n\n```\nAXIOMS_DOMAIN=<your-axioms-slug>.axioms.io\nAXIOMS_AUDIENCE=<your-axioms-resource-identifier>\nURL_LIB_SSL_IGNORE=True\n```\n\n### Load Config\nIn your Django project `settings.py`,\n\n```\nimport os\nimport environ\n\nenv = environ.Env(\n    # set casting, default value\n    DEBUG=(bool, False)\n)\n# reading .env file\nenviron.Env.read_env()\n\nAXIOMS_DOMAIN=env('AXIOMS_DOMAIN')\nAXIOMS_AUDIENCE=env('AXIOMS_AUDIENCE')\nURL_LIB_SSL_IGNORE=env('URL_LIB_SSL_IGNORE')\n```\n\n## Guard API Views\nUse authentication and permission classes to guard you API views.\n\n```\nfrom rest_framework.views import APIView\nfrom rest_framework.response import Response\nfrom rest_framework import status\nfrom axioms_drf.authentication import  AccessTokenAuthentication\nfrom axioms_drf.permissions import AccessScopePermission\n\nclass Private(APIView):\n    authentication_classes = [AccessTokenAuthentication]\n    permission_classes = (AccessScopePermission,)\n    access_token_scopes = ['openid', 'profile']  # noqa\n\n    def get(self, request, format=None):\n        return Response({'message': 'All good. You are authenticated!'}, status=status.HTTP_200_OK)\n```\n\n### Authentication classes\n\n#### `AccessTokenAuthentication`\n* `AccessTokenAuthentication` checks if access token passed in Authorization header in API call is valid or not. It check signature, time, and audience validity using public for your tenant. \n* Once access token is verified user is authenticated and claims in tokens can be used to perform permission, role, scope checks.\n\n### Permission classes\n\n#### `AccessScopePermission`\n* `AccessScopePermission` requires additional attribute `access_token_scopes` on view class.\n* `access_token_scopes` accepts an array of strings as `conditional OR` where each string represent a scope (role or permission).\n* If any scope provided in `access_token_scopes` is matched with one in access token, SDK will allow access (hence why scopes are `conditional OR`)\n\nFor more details please check our [sample-python-drf](https://github.com/axioms-io/sample-python-drf)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/axioms-io/axioms-drf-py", "keywords": "axioms authentication authorization iam authz authn jwt openid oauth2", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "axioms-drf-py", "package_url": "https://pypi.org/project/axioms-drf-py/", "platform": "", "project_url": "https://pypi.org/project/axioms-drf-py/", "project_urls": {"Documentation": "https://github.com/axioms-io/axioms-drf-py", "Homepage": "https://github.com/axioms-io/axioms-drf-py", "Source": "https://github.com/axioms-io/axioms-drf-py", "Tracker": "https://github.com/axioms-io/axioms-drf-py/issues"}, "release_url": "https://pypi.org/project/axioms-drf-py/0.0.1/", "requires_dist": ["pyjwt", "jwcrypto", "python-box", "django (>=2.0djangorestframework)", "djangorestframework-composed-permissions", "requests (<3)", "django-environ"], "requires_python": ">=3.7", "summary": "Django REST Framework (DRF) SDK for Axioms", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>axioms-drf-py <img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d078610310ce12263e859422aaf5b76852850682/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6178696f6d732d6472662d7079\"></h1>\n<p><a href=\"https://axioms.io\" rel=\"nofollow\">Axioms</a> Python client for Django Rest Framework (DRF). Secure your DRF APIs using Axioms Authentication and Authorization.</p>\n<h2>Prerequisite</h2>\n<ul>\n<li>Python 3.7+</li>\n<li>An <a href=\"https://axioms.io\" rel=\"nofollow\">Axioms</a> client which can obtain access token after user's authentication and authorization and include in <code>Authorization</code> header of all API request sent to Python/Flask application server.</li>\n</ul>\n<h2>Install SDK</h2>\n<p>Install <code>axioms-drf-py</code> in you DRF API project,</p>\n<pre><code>pip install axioms-drf-py\n</code></pre>\n<h2>Basic usage</h2>\n<h3>Add <code>.env</code> file</h3>\n<p>Create a <code>.env</code> file in your main Django app and add following configs,</p>\n<pre><code>AXIOMS_DOMAIN=&lt;your-axioms-slug&gt;.axioms.io\nAXIOMS_AUDIENCE=&lt;your-axioms-resource-identifier&gt;\nURL_LIB_SSL_IGNORE=True\n</code></pre>\n<h3>Load Config</h3>\n<p>In your Django project <code>settings.py</code>,</p>\n<pre><code>import os\nimport environ\n\nenv = environ.Env(\n    # set casting, default value\n    DEBUG=(bool, False)\n)\n# reading .env file\nenviron.Env.read_env()\n\nAXIOMS_DOMAIN=env('AXIOMS_DOMAIN')\nAXIOMS_AUDIENCE=env('AXIOMS_AUDIENCE')\nURL_LIB_SSL_IGNORE=env('URL_LIB_SSL_IGNORE')\n</code></pre>\n<h2>Guard API Views</h2>\n<p>Use authentication and permission classes to guard you API views.</p>\n<pre><code>from rest_framework.views import APIView\nfrom rest_framework.response import Response\nfrom rest_framework import status\nfrom axioms_drf.authentication import  AccessTokenAuthentication\nfrom axioms_drf.permissions import AccessScopePermission\n\nclass Private(APIView):\n    authentication_classes = [AccessTokenAuthentication]\n    permission_classes = (AccessScopePermission,)\n    access_token_scopes = ['openid', 'profile']  # noqa\n\n    def get(self, request, format=None):\n        return Response({'message': 'All good. You are authenticated!'}, status=status.HTTP_200_OK)\n</code></pre>\n<h3>Authentication classes</h3>\n<h4><code>AccessTokenAuthentication</code></h4>\n<ul>\n<li><code>AccessTokenAuthentication</code> checks if access token passed in Authorization header in API call is valid or not. It check signature, time, and audience validity using public for your tenant.</li>\n<li>Once access token is verified user is authenticated and claims in tokens can be used to perform permission, role, scope checks.</li>\n</ul>\n<h3>Permission classes</h3>\n<h4><code>AccessScopePermission</code></h4>\n<ul>\n<li><code>AccessScopePermission</code> requires additional attribute <code>access_token_scopes</code> on view class.</li>\n<li><code>access_token_scopes</code> accepts an array of strings as <code>conditional OR</code> where each string represent a scope (role or permission).</li>\n<li>If any scope provided in <code>access_token_scopes</code> is matched with one in access token, SDK will allow access (hence why scopes are <code>conditional OR</code>)</li>\n</ul>\n<p>For more details please check our <a href=\"https://github.com/axioms-io/sample-python-drf\" rel=\"nofollow\">sample-python-drf</a></p>\n\n          </div>"}, "last_serial": 6694076, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "33a5a11334252d50fbab2d29897bace6", "sha256": "7fb60b10a707088a50ecc405be48c3104494ae8947b80867385ca6755966bf43"}, "downloads": -1, "filename": "axioms_drf_py-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "33a5a11334252d50fbab2d29897bace6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6952, "upload_time": "2020-02-25T03:39:01", "upload_time_iso_8601": "2020-02-25T03:39:01.974881Z", "url": "https://files.pythonhosted.org/packages/51/33/6fe42f1377b84d4d8debeb17020b78bc007f14352bb56db1392581f8768e/axioms_drf_py-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "916dfb3f27a1c88c804b8a9deac3d305", "sha256": "930c3a0d6f0a92ebf7876c6387103b1e5cfb1d189796fae627afbbe60c0c94a4"}, "downloads": -1, "filename": "axioms-drf-py-0.0.1.tar.gz", "has_sig": false, "md5_digest": "916dfb3f27a1c88c804b8a9deac3d305", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 7827, "upload_time": "2020-02-25T03:39:04", "upload_time_iso_8601": "2020-02-25T03:39:04.330983Z", "url": "https://files.pythonhosted.org/packages/a4/dc/f859df32e4dc8a94713bbbc3aa401c922d0cd22e04dfa8e855945696a838/axioms-drf-py-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "33a5a11334252d50fbab2d29897bace6", "sha256": "7fb60b10a707088a50ecc405be48c3104494ae8947b80867385ca6755966bf43"}, "downloads": -1, "filename": "axioms_drf_py-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "33a5a11334252d50fbab2d29897bace6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6952, "upload_time": "2020-02-25T03:39:01", "upload_time_iso_8601": "2020-02-25T03:39:01.974881Z", "url": "https://files.pythonhosted.org/packages/51/33/6fe42f1377b84d4d8debeb17020b78bc007f14352bb56db1392581f8768e/axioms_drf_py-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "916dfb3f27a1c88c804b8a9deac3d305", "sha256": "930c3a0d6f0a92ebf7876c6387103b1e5cfb1d189796fae627afbbe60c0c94a4"}, "downloads": -1, "filename": "axioms-drf-py-0.0.1.tar.gz", "has_sig": false, "md5_digest": "916dfb3f27a1c88c804b8a9deac3d305", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 7827, "upload_time": "2020-02-25T03:39:04", "upload_time_iso_8601": "2020-02-25T03:39:04.330983Z", "url": "https://files.pythonhosted.org/packages/a4/dc/f859df32e4dc8a94713bbbc3aa401c922d0cd22e04dfa8e855945696a838/axioms-drf-py-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:30 2020"}