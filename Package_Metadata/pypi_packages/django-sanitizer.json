{"info": {"author": "Calvin Spealman", "author_email": "calvin@caktusgroup.com", "bugtrack_url": null, "classifiers": [], "description": "**NOTE: Please try to break this and tell me where it is insufficent.**\n\nAllows only whitelisted tags and attributes through.\n\nThe setting ALLOWED_TAGS can override the behavior. The syntax of\nthis setting is a space-separated list of tags, which are optionally\nfollowed by a colon and a comma-separated list of attribute permitted in\nthe tag.\n\nFor example, to allow <a> tags which are links or named anchors, but not\nto allow definition of an onclick attribute:\n\n    ALLOWED_TAGS = \"a:href,name\"\n\nIn your templates, sanitizing is easy.\n\n    {% load sanitizer %}\n\n    {{ user_comment|allowtags|safe }}\n\n    {{ user_comment|allowtags:\"b i\"|safe }}\n\nDisallowed tags or attributes are simply removed.\n\nIn some cases, it is useful to disallow a tag, but to convert it to something\nsafe, rather than stripping it entirely. For example, you might not want to\nallow <h1> tags, and want to \"quiet\" them into <h2> tags.\n\n    {{ body|maptags:\"h1=h2 h2=h3 h4=h5\" }}\n\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/caktus/django-sanitizer", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-sanitizer", "package_url": "https://pypi.org/project/django-sanitizer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-sanitizer/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/caktus/django-sanitizer"}, "release_url": "https://pypi.org/project/django-sanitizer/0.4.1/", "requires_dist": null, "requires_python": null, "summary": "Django template filter application for sanitizing user submitted HTML", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            **NOTE: Please try to break this and tell me where it is insufficent.**<br><br>Allows only whitelisted tags and attributes through.<br><br>The setting ALLOWED_TAGS can override the behavior. The syntax of<br>this setting is a space-separated list of tags, which are optionally<br>followed by a colon and a comma-separated list of attribute permitted in<br>the tag.<br><br>For example, to allow &lt;a&gt; tags which are links or named anchors, but not<br>to allow definition of an onclick attribute:<br><br>    ALLOWED_TAGS = \"a:href,name\"<br><br>In your templates, sanitizing is easy.<br><br>    {% load sanitizer %}<br><br>    {{ user_comment|allowtags|safe }}<br><br>    {{ user_comment|allowtags:\"b i\"|safe }}<br><br>Disallowed tags or attributes are simply removed.<br><br>In some cases, it is useful to disallow a tag, but to convert it to something<br>safe, rather than stripping it entirely. For example, you might not want to<br>allow &lt;h1&gt; tags, and want to \"quiet\" them into &lt;h2&gt; tags.<br><br>    {{ body|maptags:\"h1=h2 h2=h3 h4=h5\" }}<br><br>\n          </div>"}, "last_serial": 790539, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "f29a2762fb31f33bcc1330533510d19d", "sha256": "7aff0424b66859bf7fc20d8ace5d43181aac83dffcf120c898663c1301802258"}, "downloads": -1, "filename": "django-sanitizer-0.2.tar.gz", "has_sig": false, "md5_digest": "f29a2762fb31f33bcc1330533510d19d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2517, "upload_time": "2012-02-23T15:04:24", "upload_time_iso_8601": "2012-02-23T15:04:24.361294Z", "url": "https://files.pythonhosted.org/packages/39/11/d11b0d96281a4163a1bd3d94441a80374b91b37e1b2976fe86f44e17e15a/django-sanitizer-0.2.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "c52f266235e1cf5e220bb3456ffba1f4", "sha256": "bfa5e9cdbd3b2a1a55c73e8c04bcc279e8e7fb394858ab6f2de4b0fe3eff79ba"}, "downloads": -1, "filename": "django-sanitizer-0.4.tar.gz", "has_sig": false, "md5_digest": "c52f266235e1cf5e220bb3456ffba1f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3879, "upload_time": "2012-03-14T18:54:04", "upload_time_iso_8601": "2012-03-14T18:54:04.013649Z", "url": "https://files.pythonhosted.org/packages/d6/9e/0655edaea34f61ee6dc5d51a4ad632d72780d13fca1945c4c426ada79339/django-sanitizer-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "b487f7dc3f6db1ece9d8d33a352624da", "sha256": "9d6cce3a895d29afa04d818b22713a1b49085dbca97dd109cd6c13365a3b8f98"}, "downloads": -1, "filename": "django-sanitizer-0.4.1.tar.gz", "has_sig": false, "md5_digest": "b487f7dc3f6db1ece9d8d33a352624da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3904, "upload_time": "2012-06-14T20:48:08", "upload_time_iso_8601": "2012-06-14T20:48:08.525236Z", "url": "https://files.pythonhosted.org/packages/9e/52/19ab50a23ba47cdc6319461cfe0f50fb2cc5800e0186f86b216b31588dbc/django-sanitizer-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b487f7dc3f6db1ece9d8d33a352624da", "sha256": "9d6cce3a895d29afa04d818b22713a1b49085dbca97dd109cd6c13365a3b8f98"}, "downloads": -1, "filename": "django-sanitizer-0.4.1.tar.gz", "has_sig": false, "md5_digest": "b487f7dc3f6db1ece9d8d33a352624da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3904, "upload_time": "2012-06-14T20:48:08", "upload_time_iso_8601": "2012-06-14T20:48:08.525236Z", "url": "https://files.pythonhosted.org/packages/9e/52/19ab50a23ba47cdc6319461cfe0f50fb2cc5800e0186f86b216b31588dbc/django-sanitizer-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:46 2020"}