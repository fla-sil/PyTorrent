{"info": {"author": "Martin Czygan", "author_email": "martin.czygan@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Python client for HTTP message queue Queued: https://github.com/scttnlsn/queued.\n\nUsage\n-----\n\n    >>> import pyqueued\n\nGet a client.\n\n    >>> client = pyqueued.Client(host='localhost', port=5353)\n\nEnqueue a message:\n\n    >>> loc = client.enqueue(\"q\", \"my message\")\n    >>> loc\n    'http://localhost:5353/q/155'\n\nGet the head of the queue. Without any timeout, the item is marked as completed when dequeued.\n\n    >>> msg, loc = client.dequeue(\"q\")\n    >>> msg\n    'my message'\n\nTHe queue is empty now, so another dequeue will fail:\n\n    >>> msg, loc = client.dequeue(\"q\")\n    ...\n    RuntimeError: dequeue failed: <Response [404]>\n\nEnqueue another message:\n\n    >>> loc = client.enqueue(\"q\", \"another message\")\n\nBut dequeue with timeout (given in seconds). If the message is not completed within `timeout`,\nit will be enqueued again.\n\n    >>> client.dequeue(\"q\", timeout=2)\n    ('another message', 'http://localhost:5353/q/160')\n\nThe has message timed out and has been enqueued again. So we can actually dequeue it once more. But now we\nmark it completed in time.\n\n    >>> client.dequeue(\"q\", timeout=20)\n    ('my message with timeout', 'http://localhost:5353/q/160')\n\n    >>> client.complete(\"q\", \"160\")\n\nAlternatively, item can be completed by URL. To the last line have been written also as:\n\n    >>> client.complete_by_url('http://localhost:5353/q/160')\n\n----\n\nStats about the queue:\n\n    >>> client.stats(\"q\")\n    {'depth': 1, 'dequeued': 3, 'enqueued': 3, 'timeouts': 1}", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/miku/pyqueued", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "pyqueued", "package_url": "https://pypi.org/project/pyqueued/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyqueued/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/miku/pyqueued"}, "release_url": "https://pypi.org/project/pyqueued/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "A client for queued.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python client for HTTP message queue Queued: <a href=\"https://github.com/scttnlsn/queued\" rel=\"nofollow\">https://github.com/scttnlsn/queued</a>.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<blockquote>\n<pre>&gt;&gt;&gt; import pyqueued\n</pre>\n</blockquote>\n<p>Get a client.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; client = pyqueued.Client(host='localhost', port=5353)\n</pre>\n</blockquote>\n<p>Enqueue a message:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; loc = client.enqueue(\"q\", \"my message\")\n&gt;&gt;&gt; loc\n'http://localhost:5353/q/155'\n</pre>\n</blockquote>\n<p>Get the head of the queue. Without any timeout, the item is marked as completed when dequeued.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; msg, loc = client.dequeue(\"q\")\n&gt;&gt;&gt; msg\n'my message'\n</pre>\n</blockquote>\n<p>THe queue is empty now, so another dequeue will fail:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; msg, loc = client.dequeue(\"q\")\n...\nRuntimeError: dequeue failed: &lt;Response [404]&gt;\n</pre>\n</blockquote>\n<p>Enqueue another message:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; loc = client.enqueue(\"q\", \"another message\")\n</pre>\n</blockquote>\n<p>But dequeue with timeout (given in seconds). If the message is not completed within <cite>timeout</cite>,\nit will be enqueued again.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; client.dequeue(\"q\", timeout=2)\n('another message', 'http://localhost:5353/q/160')\n</pre>\n</blockquote>\n<p>The has message timed out and has been enqueued again. So we can actually dequeue it once more. But now we\nmark it completed in time.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; client.dequeue(\"q\", timeout=20)\n('my message with timeout', 'http://localhost:5353/q/160')\n</pre>\n<pre>&gt;&gt;&gt; client.complete(\"q\", \"160\")\n</pre>\n</blockquote>\n<p>Alternatively, item can be completed by URL. To the last line have been written also as:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; client.complete_by_url('http://localhost:5353/q/160')\n</pre>\n</blockquote>\n<hr class=\"docutils\">\n<p>Stats about the queue:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; client.stats(\"q\")\n{'depth': 1, 'dequeued': 3, 'enqueued': 3, 'timeouts': 1}\n</pre>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 1541539, "releases": {"0.1.2": [], "0.1.3": [{"comment_text": "", "digests": {"md5": "19b61bebc7491e27cd2074f0af468eae", "sha256": "4d3a78e6f53a6455e0a948263791662758207d80bbeb3460745709ee4facbb1d"}, "downloads": -1, "filename": "pyqueued-0.1.3.tar.gz", "has_sig": false, "md5_digest": "19b61bebc7491e27cd2074f0af468eae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2200, "upload_time": "2015-05-11T05:55:21", "upload_time_iso_8601": "2015-05-11T05:55:21.694763Z", "url": "https://files.pythonhosted.org/packages/0e/df/29e82fbb59807b2d772a41513129c1ce27fd643adb7e416d3da30dd9612f/pyqueued-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "e9f08e2f1b5100078910a5cb2e3c4989", "sha256": "f7738500624d331ff16880ce87a1a93878acef40beed86b2f8ec4e01101c4180"}, "downloads": -1, "filename": "pyqueued-0.1.4.tar.gz", "has_sig": false, "md5_digest": "e9f08e2f1b5100078910a5cb2e3c4989", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2196, "upload_time": "2015-05-11T05:57:24", "upload_time_iso_8601": "2015-05-11T05:57:24.287028Z", "url": "https://files.pythonhosted.org/packages/18/29/544c04609f4572eca347c43b4139b532ca06c94c37167a76d8794bfca341/pyqueued-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e9f08e2f1b5100078910a5cb2e3c4989", "sha256": "f7738500624d331ff16880ce87a1a93878acef40beed86b2f8ec4e01101c4180"}, "downloads": -1, "filename": "pyqueued-0.1.4.tar.gz", "has_sig": false, "md5_digest": "e9f08e2f1b5100078910a5cb2e3c4989", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2196, "upload_time": "2015-05-11T05:57:24", "upload_time_iso_8601": "2015-05-11T05:57:24.287028Z", "url": "https://files.pythonhosted.org/packages/18/29/544c04609f4572eca347c43b4139b532ca06c94c37167a76d8794bfca341/pyqueued-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:39 2020"}