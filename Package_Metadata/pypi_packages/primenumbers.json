{"info": {"author": "Anubhab Chakraborty", "author_email": "chakraborty.anubhab@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Using the \"primenumbers\" module you can:\r\n\r\n1. Check if a number is prime or not. By using the isprime() function. The result is returned as either True or False.\r\n\r\nSYNTAX: isprime(your_number)\r\n\r\nExample: \r\n>>> import primenumbers \r\n>>> primenumbers.isprime(201) \r\n>>>False\r\n\r\n2. You can get a list of prime numbers within a specified limit, by using the all_PrimeNumbers_within() function. The result is returned as a list of prime numbers.\r\n\r\nSYNTAX: all_PrimeNumbers_within(a_number) #(from 2)\r\n\r\nExample: \r\n>>> import primenumbers \r\n>>> primenumbers.all_PrimeNumbers_within(25) \r\n>>>[2, 3, 5, 7, 11, 13, 17, 19, 23]\r\n\r\n3. You can use the function all_PrimeNumbers_inRange() to find prime numbers within a given range. The result is returned as a list of prime numbers.(Only available in package version 1.1.0 or later) \r\n\r\nSYNTAX: all_PrimeNumbers_inRange(start_number, end_number)\r\n\r\nExample: \r\n>>> import primenumbers \r\n>>> primenumbers.all_PrimeNumbers_inRange(25, 60) \r\n>>>[29, 31, 37, 41, 43, 47, 53, 59]\r\n\r\nWhat New in Version: 1.1.2:\r\n\r\n1. Significantly Faster processing\r\n2. Removed bug in which '1' is being considered as a prime numbers.\r\n3. Removed bug in which negative numbers are being considered as a prime numbers.\r\n\r\nKeep an eye for new releases. Thank You. Feel free to mail me for improvements and suggestions at chakraborty.anubhab@gmail.com .", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "primenumbers", "package_url": "https://pypi.org/project/primenumbers/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/primenumbers/", "project_urls": {"Download": "UNKNOWN"}, "release_url": "https://pypi.org/project/primenumbers/1.1.2/", "requires_dist": null, "requires_python": null, "summary": "Use to find prime numbers", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Using the \u201cprimenumbers\u201d module you can:</p>\n<ol>\n<li>Check if a number is prime or not. By using the isprime() function. The result is returned as either True or False.</li>\n</ol>\n<p>SYNTAX: isprime(your_number)</p>\n<p>Example:\n&gt;&gt;&gt; import primenumbers\n&gt;&gt;&gt; primenumbers.isprime(201)\n&gt;&gt;&gt;False</p>\n<ol>\n<li>You can get a list of prime numbers within a specified limit, by using the all_PrimeNumbers_within() function. The result is returned as a list of prime numbers.</li>\n</ol>\n<p>SYNTAX: all_PrimeNumbers_within(a_number) #(from 2)</p>\n<p>Example:\n&gt;&gt;&gt; import primenumbers\n&gt;&gt;&gt; primenumbers.all_PrimeNumbers_within(25)\n&gt;&gt;&gt;[2, 3, 5, 7, 11, 13, 17, 19, 23]</p>\n<ol>\n<li>You can use the function all_PrimeNumbers_inRange() to find prime numbers within a given range. The result is returned as a list of prime numbers.(Only available in package version 1.1.0 or later)</li>\n</ol>\n<p>SYNTAX: all_PrimeNumbers_inRange(start_number, end_number)</p>\n<p>Example:\n&gt;&gt;&gt; import primenumbers\n&gt;&gt;&gt; primenumbers.all_PrimeNumbers_inRange(25, 60)\n&gt;&gt;&gt;[29, 31, 37, 41, 43, 47, 53, 59]</p>\n<p>What New in Version: 1.1.2:</p>\n<ol>\n<li>Significantly Faster processing</li>\n<li>Removed bug in which \u20181\u2019 is being considered as a prime numbers.</li>\n<li>Removed bug in which negative numbers are being considered as a prime numbers.</li>\n</ol>\n<p>Keep an eye for new releases. Thank You. Feel free to mail me for improvements and suggestions at <a href=\"mailto:chakraborty.anubhab%40gmail.com\">chakraborty<span>.</span>anubhab<span>@</span>gmail<span>.</span>com</a> .</p>\n\n          </div>"}, "last_serial": 1390351, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "e9576e1020709386d88fba631380c74b", "sha256": "80c90917076236421041b41961be716d339e53684d2b76e5c6238f23e8d436b6"}, "downloads": -1, "filename": "primenumbers-1.1.0.zip", "has_sig": false, "md5_digest": "e9576e1020709386d88fba631380c74b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1000, "upload_time": "2015-01-21T05:40:11", "upload_time_iso_8601": "2015-01-21T05:40:11.398053Z", "url": "https://files.pythonhosted.org/packages/c2/b2/254895f7e7bc9c3840c890c78f94e397228be91c566d4434f6cd1285ab8f/primenumbers-1.1.0.zip", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "ca276c77e98042f9e9ff3fc0ea094b54", "sha256": "1eb27ef6058d6f8d33c8efb55e89bb337be24e2241f06a77bdc694945d452999"}, "downloads": -1, "filename": "primenumbers-1.1.2.zip", "has_sig": false, "md5_digest": "ca276c77e98042f9e9ff3fc0ea094b54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1005, "upload_time": "2015-01-21T09:46:32", "upload_time_iso_8601": "2015-01-21T09:46:32.727752Z", "url": "https://files.pythonhosted.org/packages/06/f2/54a8bd356e8139e6e0d1dabce9d12f1919ba6ac7c7fd5097cda34e787750/primenumbers-1.1.2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ca276c77e98042f9e9ff3fc0ea094b54", "sha256": "1eb27ef6058d6f8d33c8efb55e89bb337be24e2241f06a77bdc694945d452999"}, "downloads": -1, "filename": "primenumbers-1.1.2.zip", "has_sig": false, "md5_digest": "ca276c77e98042f9e9ff3fc0ea094b54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1005, "upload_time": "2015-01-21T09:46:32", "upload_time_iso_8601": "2015-01-21T09:46:32.727752Z", "url": "https://files.pythonhosted.org/packages/06/f2/54a8bd356e8139e6e0d1dabce9d12f1919ba6ac7c7fd5097cda34e787750/primenumbers-1.1.2.zip", "yanked": false}], "timestamp": "Fri May  8 03:19:25 2020"}