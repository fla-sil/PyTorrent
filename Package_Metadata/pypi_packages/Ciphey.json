{"info": {"author": "Brandon Skerritt", "author_email": "brandon@skerritt.blog", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8"], "description": "<p align=\"center\">\n  <img src=\"logo.png\" alt=\"Ciphey\">\n</p>\n\n\n<p align=\"center\">\n  <img src=\"https://img.shields.io/badge/License-MIT-yellow.svg\" alt=\"Ciphey\">\n  <img src=\"https://github.com/brandonskerritt/Ciphey/workflows/Python%20application/badge.svg?branch=master\" alt=\"Ciphey\">\n</p>\n\n\n\n# What is this?\nCiphey is an automated decryption tool.\nYou put in encrypted text, and it outputs the decrypted text.\n\n> \"What type of encryption?\"\n\nThat's the point. You don't know. Ciphey will find out and do it for you.\n\n# How does it work?\nYou input a string (via a file, or via a terminal)\n\nCiphey uses a Deep Neural Network to create a probability distribution (softmax). \n\nThis distribution gives how likely it is to be a hash, a basic encoding (hex, binary) or encryption (such as caeser, aes etc)\nCiphey will then work through each cipher to try and decode it.\n\nCiphey uses the language module (app/languageChecker) to determine both the language something is written in, and whether or not that string is valid in that language. So Ciphey would say \"hello my name is whiteboard\" is English. But it wouldn't say \"iaid i2iv ria9i\" is a language.\n\nUsing the probability distribution, Ciphey calls each object on a new thread. Yes, Ciphey is **multi-threaded**.\n\nCiphey is designed from the groundup to be as fast as physically possible. The second it sees the answer, it will stop and return that answer.\n\n# What encryptions can Ciphey deal with?\nNot just encryptions, but hashes and encodings too.\n\n* Vigen\u00e8re cipher\n* Affine cipher\n* Transposition Cipher\n* Pig Latin\n* Morse Code\n* Ascii\n* Binary\n* Base64\n* Hexadecimal\n* Caesar Cipher\n* Reverse (palindrome)\n* Sha512\n* MD5\n* Sha1\n* Sha384\n* Sha256\n\n# How to install\n```\npip3 install ciphey\n```\n\n# How to use\n\nIn Terminal:\n\n```\nciphey -t \"encrypted text here\"\n```\n\n# How to import Ciphey\n```\nimport ciphey.__main__\nx = ciphey.__main__.Ciphey(\"Encrypted text\", grep=True)\nprint(x.decrypt())\n```\n\nThe grep argument is to make the output greppable, meaning the output is a single string. Without the flag, the output would involve the progress bar.\n\nThe `__main__` part is so you can call the package anywhere on your OS like a normal program. ciphey is the name of the folder, `__main__` is the name of the file, Ciphey is the name of the class in that file.\n\nIt is possible  to import language checker, the neural network, or any of the decryptor modules by themselves and use them.\n# The internal data packet\nThis is the data packet specification Ciphey uses. To pass data around the different modules and to language checker, it is neccesary to use an internal data packet.\n```python\n{\"lc\": self.lc, \"IsPlaintext?\": True, \"Plaintext\": translated, \"Cipher\": \"Caesar\", \"Extra Information\": \"The rotation used is {counter}\"}\n```\n\n# How to contribute\nCiphey is always in need of more decryption tools! \n1. Write a decryption tool (this can include encodings such as Base64 too). Make sure it has a `decrypt` function and is a class.\n2. For each possible decryption, call `self.lc.checkLanguage(translated)` where `translated` is the decrypted text.\n**Note** by default, all decryption modules when instantiated get passed Language Checker (lc). Look at this for example:\n```python\n    def __init__(self, lc):\n        self.lc = lc\n```\n3. If result returns `True`, it is successfully decrypted to English. Return the internal data packet but make sure to change the information to match your decryption module.\n4. Create a new object in the parent class. For example, in Encoding the parent is `encodingParent.py`. Simply add your object to the list of other objects. For `encodingParent.py` this list of objects is currently:\n```python\n        self.binary = Binary(self.lc)\n        self.base64 = Base64(self.lc)\n        self.ascii = Ascii(self.lc)\n        self.hex = Hexadecimal(self.lc)\n        self.morse = MorseCode(self.lc)\n```\nAnd then add the new object to the list of objects:\n```python\nself.list_of_objects = [self.caesar, self.reverse, self.pig]\n```\n5. It'd be nice if you wrote some tests for it, but if you don't know much about testing no worries! I can write the tests for you :)\n6. I'll put your name on the list of contributors!\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brandonskerritt/ciphey", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Ciphey", "package_url": "https://pypi.org/project/Ciphey/", "platform": "", "project_url": "https://pypi.org/project/Ciphey/", "project_urls": {"Homepage": "https://github.com/brandonskerritt/ciphey"}, "release_url": "https://pypi.org/project/Ciphey/3.0.7/", "requires_dist": ["absl-py (==0.9.0)", "alive-progress (==1.4.4)", "appdirs (==1.4.3)", "astunparse (==1.6.3)", "attrs (==19.3.0)", "black (==19.10b0)", "bleach (==3.1.4)", "cachetools (==4.1.0)", "certifi (==2020.4.5.1)", "cffi (==1.14.0)", "chardet (==3.0.4)", "click (==7.1.2)", "cryptography (==2.9.2)", "docutils (==0.16)", "gast (==0.3.3)", "google-auth (==1.14.1)", "google-auth-oauthlib (==0.4.1)", "google-pasta (==0.2.0)", "grpcio (==1.28.1)", "h5py (==2.10.0)", "idna (==2.9)", "jeepney (==0.4.3)", "Keras-Preprocessing (==1.1.0)", "keyring (==21.2.0)", "Markdown (==3.2.1)", "more-itertools (==8.2.0)", "numpy (==1.18.3)", "oauthlib (==3.1.0)", "opt-einsum (==3.2.1)", "packaging (==20.3)", "pathspec (==0.8.0)", "pkginfo (==1.5.0.1)", "pluggy (==0.13.1)", "protobuf (==3.11.3)", "py (==1.8.1)", "pyasn1 (==0.4.8)", "pyasn1-modules (==0.2.8)", "pycparser (==2.20)", "Pygments (==2.6.1)", "pyparsing (==2.4.7)", "pytest (==5.4.1)", "readme-renderer (==26.0)", "regex (==2020.4.4)", "requests (==2.23.0)", "requests-oauthlib (==1.3.0)", "requests-toolbelt (==0.9.1)", "rsa (==4.0)", "scipy (==1.4.1)", "SecretStorage (==3.1.2)", "six (==1.14.0)", "tensorboard (==2.2.1)", "tensorboard-plugin-wit (==1.6.0.post3)", "tensorflow (==2.2.0rc3)", "tensorflow-estimator (==2.2.0)", "termcolor (==1.1.0)", "toml (==0.10.0)", "tqdm (==4.45.0)", "twine (==3.1.1)", "typed-ast (==1.4.1)", "urllib3 (==1.25.9)", "wcwidth (==0.1.9)", "webencodings (==0.5.1)", "Werkzeug (==1.0.1)", "wrapt (==1.12.1)"], "requires_python": "", "summary": "Automated decryption tool using machine learning & common sense", "version": "3.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n  <img alt=\"Ciphey\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/388655114bc901a8aeb49270f41e805988057feb/6c6f676f2e706e67\">\n</p>\n<p align=\"center\">\n  <img alt=\"Ciphey\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\">\n  <img alt=\"Ciphey\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e0b916e373637da8f0f69b02efec146d66fac2e5/68747470733a2f2f6769746875622e636f6d2f6272616e646f6e736b6572726974742f4369706865792f776f726b666c6f77732f507974686f6e2532306170706c69636174696f6e2f62616467652e7376673f6272616e63683d6d6173746572\">\n</p>\n<h1>What is this?</h1>\n<p>Ciphey is an automated decryption tool.\nYou put in encrypted text, and it outputs the decrypted text.</p>\n<blockquote>\n<p>\"What type of encryption?\"</p>\n</blockquote>\n<p>That's the point. You don't know. Ciphey will find out and do it for you.</p>\n<h1>How does it work?</h1>\n<p>You input a string (via a file, or via a terminal)</p>\n<p>Ciphey uses a Deep Neural Network to create a probability distribution (softmax).</p>\n<p>This distribution gives how likely it is to be a hash, a basic encoding (hex, binary) or encryption (such as caeser, aes etc)\nCiphey will then work through each cipher to try and decode it.</p>\n<p>Ciphey uses the language module (app/languageChecker) to determine both the language something is written in, and whether or not that string is valid in that language. So Ciphey would say \"hello my name is whiteboard\" is English. But it wouldn't say \"iaid i2iv ria9i\" is a language.</p>\n<p>Using the probability distribution, Ciphey calls each object on a new thread. Yes, Ciphey is <strong>multi-threaded</strong>.</p>\n<p>Ciphey is designed from the groundup to be as fast as physically possible. The second it sees the answer, it will stop and return that answer.</p>\n<h1>What encryptions can Ciphey deal with?</h1>\n<p>Not just encryptions, but hashes and encodings too.</p>\n<ul>\n<li>Vigen\u00e8re cipher</li>\n<li>Affine cipher</li>\n<li>Transposition Cipher</li>\n<li>Pig Latin</li>\n<li>Morse Code</li>\n<li>Ascii</li>\n<li>Binary</li>\n<li>Base64</li>\n<li>Hexadecimal</li>\n<li>Caesar Cipher</li>\n<li>Reverse (palindrome)</li>\n<li>Sha512</li>\n<li>MD5</li>\n<li>Sha1</li>\n<li>Sha384</li>\n<li>Sha256</li>\n</ul>\n<h1>How to install</h1>\n<pre><code>pip3 install ciphey\n</code></pre>\n<h1>How to use</h1>\n<p>In Terminal:</p>\n<pre><code>ciphey -t \"encrypted text here\"\n</code></pre>\n<h1>How to import Ciphey</h1>\n<pre><code>import ciphey.__main__\nx = ciphey.__main__.Ciphey(\"Encrypted text\", grep=True)\nprint(x.decrypt())\n</code></pre>\n<p>The grep argument is to make the output greppable, meaning the output is a single string. Without the flag, the output would involve the progress bar.</p>\n<p>The <code>__main__</code> part is so you can call the package anywhere on your OS like a normal program. ciphey is the name of the folder, <code>__main__</code> is the name of the file, Ciphey is the name of the class in that file.</p>\n<p>It is possible  to import language checker, the neural network, or any of the decryptor modules by themselves and use them.</p>\n<h1>The internal data packet</h1>\n<p>This is the data packet specification Ciphey uses. To pass data around the different modules and to language checker, it is neccesary to use an internal data packet.</p>\n<pre><span class=\"p\">{</span><span class=\"s2\">\"lc\"</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lc</span><span class=\"p\">,</span> <span class=\"s2\">\"IsPlaintext?\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s2\">\"Plaintext\"</span><span class=\"p\">:</span> <span class=\"n\">translated</span><span class=\"p\">,</span> <span class=\"s2\">\"Cipher\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Caesar\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Extra Information\"</span><span class=\"p\">:</span> <span class=\"s2\">\"The rotation used is </span><span class=\"si\">{counter}</span><span class=\"s2\">\"</span><span class=\"p\">}</span>\n</pre>\n<h1>How to contribute</h1>\n<p>Ciphey is always in need of more decryption tools!</p>\n<ol>\n<li>Write a decryption tool (this can include encodings such as Base64 too). Make sure it has a <code>decrypt</code> function and is a class.</li>\n<li>For each possible decryption, call <code>self.lc.checkLanguage(translated)</code> where <code>translated</code> is the decrypted text.\n<strong>Note</strong> by default, all decryption modules when instantiated get passed Language Checker (lc). Look at this for example:</li>\n</ol>\n<pre>    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">lc</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lc</span> <span class=\"o\">=</span> <span class=\"n\">lc</span>\n</pre>\n<ol>\n<li>If result returns <code>True</code>, it is successfully decrypted to English. Return the internal data packet but make sure to change the information to match your decryption module.</li>\n<li>Create a new object in the parent class. For example, in Encoding the parent is <code>encodingParent.py</code>. Simply add your object to the list of other objects. For <code>encodingParent.py</code> this list of objects is currently:</li>\n</ol>\n<pre>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">binary</span> <span class=\"o\">=</span> <span class=\"n\">Binary</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lc</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base64</span> <span class=\"o\">=</span> <span class=\"n\">Base64</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lc</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ascii</span> <span class=\"o\">=</span> <span class=\"n\">Ascii</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lc</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hex</span> <span class=\"o\">=</span> <span class=\"n\">Hexadecimal</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lc</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">morse</span> <span class=\"o\">=</span> <span class=\"n\">MorseCode</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lc</span><span class=\"p\">)</span>\n</pre>\n<p>And then add the new object to the list of objects:</p>\n<pre><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">list_of_objects</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">caesar</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">reverse</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pig</span><span class=\"p\">]</span>\n</pre>\n<ol>\n<li>It'd be nice if you wrote some tests for it, but if you don't know much about testing no worries! I can write the tests for you :)</li>\n<li>I'll put your name on the list of contributors!</li>\n</ol>\n\n          </div>"}, "last_serial": 7156902, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "d8192b2ad60228a26ae959b70790dc05", "sha256": "0a9d2f17a32a5cacf4909ede0f20fdf5373dc1a567497009ba4be230caef6dff"}, "downloads": -1, "filename": "Ciphey-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d8192b2ad60228a26ae959b70790dc05", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31199, "upload_time": "2020-04-28T23:19:41", "upload_time_iso_8601": "2020-04-28T23:19:41.999010Z", "url": "https://files.pythonhosted.org/packages/5e/a1/0a196b407a3a23d4776e0cf11683a393b2e814589c638a12ed3eb90c216d/Ciphey-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4244479563a1714f7d436051036a453f", "sha256": "c926b89969f00c426fa6474e64b1172d3b25b0197b9d42c78a1ed971322232aa"}, "downloads": -1, "filename": "Ciphey-2.0.0.tar.gz", "has_sig": false, "md5_digest": "4244479563a1714f7d436051036a453f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24754, "upload_time": "2020-04-28T23:19:44", "upload_time_iso_8601": "2020-04-28T23:19:44.125427Z", "url": "https://files.pythonhosted.org/packages/1f/c6/8b36c2a7a680de9d4a5443769f4fda91e29ceef4dd9c2584ed62570ccdb5/Ciphey-2.0.0.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "b01ebc7be752796eb14b9462bf00eaca", "sha256": "28b1eb7979f983c74e0415ee16858a865e51079fd03927f247eced18a57a67e7"}, "downloads": -1, "filename": "ciphey-3.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b01ebc7be752796eb14b9462bf00eaca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 54581, "upload_time": "2020-04-30T00:49:25", "upload_time_iso_8601": "2020-04-30T00:49:25.404847Z", "url": "https://files.pythonhosted.org/packages/73/a7/07c618f8f574891aaf9214fd48ca566792ae02fd4e965fab1f8303bf8680/ciphey-3.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c47d80af717bf776e8fae892134b9898", "sha256": "3718fc53060ccd4563937b2e9b218b0891bc51f4e6f9e12cc61029579f81c3f3"}, "downloads": -1, "filename": "ciphey-3.0.0.tar.gz", "has_sig": false, "md5_digest": "c47d80af717bf776e8fae892134b9898", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35911, "upload_time": "2020-04-30T00:49:27", "upload_time_iso_8601": "2020-04-30T00:49:27.338795Z", "url": "https://files.pythonhosted.org/packages/fe/ce/4bd5c5f2908c7212f84ffc6b2fd0f58b9d8ee768d5c1b4646575782982fe/ciphey-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "28ad27a7b710bdb358ad2e121a86afaf", "sha256": "48696b9f5e573df087986f8d771ba8bda34370bc4386339e1c964743605f7055"}, "downloads": -1, "filename": "Ciphey-3.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "28ad27a7b710bdb358ad2e121a86afaf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 54567, "upload_time": "2020-04-30T00:55:22", "upload_time_iso_8601": "2020-04-30T00:55:22.707712Z", "url": "https://files.pythonhosted.org/packages/22/f6/33bac1d04e612f3f12ec95f848063f97fd00541983f90f72ad1a19e8cbff/Ciphey-3.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0e8e4791c491747f56bb8ba29b6abb0", "sha256": "fec93ab43acacb83aed1ba4188a9ddccd93720796b02dc5dd0c2cb8edfdbfec9"}, "downloads": -1, "filename": "Ciphey-3.0.1.tar.gz", "has_sig": false, "md5_digest": "b0e8e4791c491747f56bb8ba29b6abb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34254, "upload_time": "2020-04-30T00:55:24", "upload_time_iso_8601": "2020-04-30T00:55:24.439565Z", "url": "https://files.pythonhosted.org/packages/27/66/35b11076d780e5db106d15f3baf1b4523ee33fae71e2a49bc8bec1834943/Ciphey-3.0.1.tar.gz", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "43f59e04b3ac247e2ac5d42150685d7f", "sha256": "44e6330ec6339aa449b6bf1018b09a27d2c839ac555c36ec19998c1c65dc7266"}, "downloads": -1, "filename": "Ciphey-3.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "43f59e04b3ac247e2ac5d42150685d7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3693, "upload_time": "2020-04-30T01:54:45", "upload_time_iso_8601": "2020-04-30T01:54:45.308041Z", "url": "https://files.pythonhosted.org/packages/37/19/3923a2f575fc84f5a51d18bd5694be9832bcf5ef5535a1e4cdde5acf3aa0/Ciphey-3.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b811fa46ef437c6d8d0d245465699b6", "sha256": "0384c04b8de3c0961c11bfe272a14f87aae60d5e8453be96b58e63fcdbd39ef6"}, "downloads": -1, "filename": "Ciphey-3.0.2.tar.gz", "has_sig": false, "md5_digest": "5b811fa46ef437c6d8d0d245465699b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34437, "upload_time": "2020-04-30T01:54:46", "upload_time_iso_8601": "2020-04-30T01:54:46.415135Z", "url": "https://files.pythonhosted.org/packages/4e/9f/8985a81f72cdae19842835472c07e35d7cbf8169f50557b8502fd4451626/Ciphey-3.0.2.tar.gz", "yanked": false}], "3.0.3": [{"comment_text": "", "digests": {"md5": "1e578b4cae8cd2321a21d7c1d02c0dfb", "sha256": "6a6a804c9cebd3e847fcd46c7edd8ef5f2532774d1b6b15e6128e58f0e18d310"}, "downloads": -1, "filename": "Ciphey-3.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1e578b4cae8cd2321a21d7c1d02c0dfb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3672, "upload_time": "2020-05-01T15:21:52", "upload_time_iso_8601": "2020-05-01T15:21:52.240185Z", "url": "https://files.pythonhosted.org/packages/2f/e5/aca78af61e2ef2d9e281b6d2f58e8af355caad08fce9acf6cf0e11176948/Ciphey-3.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "85a7f319f481137e506fce818a7768e9", "sha256": "8ecb99388aac12ecd790f6d544caa27ba06bc7a21428228c02a6ecc9b76abb25"}, "downloads": -1, "filename": "Ciphey-3.0.3.tar.gz", "has_sig": false, "md5_digest": "85a7f319f481137e506fce818a7768e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4234, "upload_time": "2020-05-01T15:21:53", "upload_time_iso_8601": "2020-05-01T15:21:53.352722Z", "url": "https://files.pythonhosted.org/packages/35/5f/ff3d46db25a522cb6cf6011ed4f9d51b214e40f037328a80851d36cdd44a/Ciphey-3.0.3.tar.gz", "yanked": false}], "3.0.5": [{"comment_text": "", "digests": {"md5": "33b72f5bb56426f3e61f7f92f2b55f78", "sha256": "942fd07ce8d3b5f9fe31fe0c16c42b87dc6701d63505e8c5e0768a9803a53c61"}, "downloads": -1, "filename": "Ciphey-3.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "33b72f5bb56426f3e61f7f92f2b55f78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 43847, "upload_time": "2020-05-01T20:48:42", "upload_time_iso_8601": "2020-05-01T20:48:42.224437Z", "url": "https://files.pythonhosted.org/packages/db/7c/f7157fcf47e11926c6c66c9f224c9209cf5e6ebf22c01d50fc6528cbeb33/Ciphey-3.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d76a4d49cdd9fa0af37b98c218d859e", "sha256": "9670f4565aaa9ac810776dfacd8eaafc43796acb0044312278c23f56bb03c709"}, "downloads": -1, "filename": "Ciphey-3.0.5.tar.gz", "has_sig": false, "md5_digest": "4d76a4d49cdd9fa0af37b98c218d859e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34577, "upload_time": "2020-05-01T20:48:43", "upload_time_iso_8601": "2020-05-01T20:48:43.955022Z", "url": "https://files.pythonhosted.org/packages/5c/4a/7573e86f7eb9da245cb568d8c0f67787d02ef6b2106a8da8396a32f64c35/Ciphey-3.0.5.tar.gz", "yanked": false}], "3.0.6": [{"comment_text": "", "digests": {"md5": "cc60575d67195a284f53f32c7baa49cd", "sha256": "f04aa5482b40f57c61151b38d96ecff78fa98a8eb94a3abca9430a29c389edc4"}, "downloads": -1, "filename": "Ciphey-3.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "cc60575d67195a284f53f32c7baa49cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6144599, "upload_time": "2020-05-02T02:02:52", "upload_time_iso_8601": "2020-05-02T02:02:52.165407Z", "url": "https://files.pythonhosted.org/packages/b6/c7/8bf7307bd1f51dead734d6dc88d249d37c21c12f08f5e40e6bcf03fe9737/Ciphey-3.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebd1890b323f8340f40a892e48275618", "sha256": "24ba70d1684c1c504dd0442c208599e0b0cb135a29e2e7defa2328757c544540"}, "downloads": -1, "filename": "Ciphey-3.0.6.tar.gz", "has_sig": false, "md5_digest": "ebd1890b323f8340f40a892e48275618", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6193134, "upload_time": "2020-05-02T02:02:55", "upload_time_iso_8601": "2020-05-02T02:02:55.167444Z", "url": "https://files.pythonhosted.org/packages/73/29/34d25b09f0d626cd3df2b362e2b1eb704559f4528df0447fc5efad72e399/Ciphey-3.0.6.tar.gz", "yanked": false}], "3.0.7": [{"comment_text": "", "digests": {"md5": "5b22ef3ef8b5a638af614d27c01ff269", "sha256": "e00792632bdd69a9854d5a5259026fe120adac66859d883e7daf392905e208b0"}, "downloads": -1, "filename": "Ciphey-3.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "5b22ef3ef8b5a638af614d27c01ff269", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6145181, "upload_time": "2020-05-03T13:45:37", "upload_time_iso_8601": "2020-05-03T13:45:37.211050Z", "url": "https://files.pythonhosted.org/packages/17/a7/d14d2c65890dd15da067b1a2ed377b24e789550a77a93c96ed0c1808ad46/Ciphey-3.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d5630573c59dcf7807ba110967c0ef7", "sha256": "89cc10076fcc0c973b11937828cadc70d502169a207ab229de9f550f0dd7d7a1"}, "downloads": -1, "filename": "Ciphey-3.0.7.tar.gz", "has_sig": false, "md5_digest": "7d5630573c59dcf7807ba110967c0ef7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6195493, "upload_time": "2020-05-03T13:45:39", "upload_time_iso_8601": "2020-05-03T13:45:39.858961Z", "url": "https://files.pythonhosted.org/packages/9e/72/e7978a9ace0612a987f48372d1741655793d3ac584d4d90f493c53da8d87/Ciphey-3.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5b22ef3ef8b5a638af614d27c01ff269", "sha256": "e00792632bdd69a9854d5a5259026fe120adac66859d883e7daf392905e208b0"}, "downloads": -1, "filename": "Ciphey-3.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "5b22ef3ef8b5a638af614d27c01ff269", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6145181, "upload_time": "2020-05-03T13:45:37", "upload_time_iso_8601": "2020-05-03T13:45:37.211050Z", "url": "https://files.pythonhosted.org/packages/17/a7/d14d2c65890dd15da067b1a2ed377b24e789550a77a93c96ed0c1808ad46/Ciphey-3.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d5630573c59dcf7807ba110967c0ef7", "sha256": "89cc10076fcc0c973b11937828cadc70d502169a207ab229de9f550f0dd7d7a1"}, "downloads": -1, "filename": "Ciphey-3.0.7.tar.gz", "has_sig": false, "md5_digest": "7d5630573c59dcf7807ba110967c0ef7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6195493, "upload_time": "2020-05-03T13:45:39", "upload_time_iso_8601": "2020-05-03T13:45:39.858961Z", "url": "https://files.pythonhosted.org/packages/9e/72/e7978a9ace0612a987f48372d1741655793d3ac584d4d90f493c53da8d87/Ciphey-3.0.7.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:21 2020"}