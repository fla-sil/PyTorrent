{"info": {"author": "Zijian Wang and David Jurgens", "author_email": "zijwang@stanford.edu", "bugtrack_url": null, "classifiers": [], "description": "# GenderPerformr\n\n## Intro\nGenderPerformr is the model release from the paper `It\u2019s going to be okay: Measuring Access to Support in Online Communities` by Zijian Wang and David Jurgens (in proceedings of EMNLP 2018).\n\nIt is the current state-of-the-art method that predicts gender from usernames based on a LSTM model built in PyTorch (as of Sept. 2018).\n\nSee the [project website](http://blablablab.si.umich.edu/projects/support) for full details, including contact information.\n \n## Install \n\n### Use pip\nIf `pip` is installed, genderperformr could be installed directly from it:\n\n\tpip install genderperformr\n### From raw\n`git clone` the project and do:\n\n\tpython setup.py install\n\n### Dependencies\n\tpython>=3.6.0\n\ttorch>=0.4.1\n\tnumpy\n\tunidecode\n\n\n## Usage and Example\n\n### `predict`\n`predict` is the core method of this package, \nwhich takes a single username of a list of usernames, and returns a tuple of raw probabilities in `[0,1]` (0 - Male, 1 - Female), and labels (M - Male, N - Neutral, F - Female, empty string - others). \n\n### Simplest usage\n\nYou may directly import `genderperformr` and use the default predict method, e.g.:\n\n    >>> import genderperformr\n    >>> genderperformr.predict(\"AdamMcAdamson\")\n    (0.019139649, 'M')\n    \n### Construct from class\nAlternatively, you may also construct the object from class, where you could customize the model path and device:\n \n\t>>> from genderperformr import GenderPerformr\n\t>>> gp = GenderPerformr()\n\t\n\t# Predict a single username\n\t>>> gp.predict(\"John\")\n\t(0.087956183, 'M')\n\t\n\t# Predict a list of names\n\t>>> probs, labels = gp.predict([\"BarryCA67\", \"pizzamagic\", \"KatieZ22\"])\n    >>> f\"Raw probabilities are {probs}\"\n    Raw probabilities are [0.03398224 0.5439474 0.93964571]\n    >>> f\"Labels are {labels}\"\n    Labels are ['M', 'N', 'F']\n\n\nMore detail on how to construct the object is available in docstrings.\n\n### Model using new data partition \nIf you want to use the model described in Supplemental Material using the new data partition, you may construct the object via\n\n    >>> gp = GenderPerformr(is_new_model=True)\n\nAll other usages remain the same.\n\n\n## Citation\n    @inproceedings{wang2018its,\n           title={It's going to be okay: Measuring Access to Support in Online Communities},\n           author={Wang, Zijian and Jurgens, David},\n           booktitle={Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP)},\n           year={2018}\n    }\n    \n## Contact\nZijian Wang (zij<last_name>@stanford.edu)\n\nDavid Jurgens (<last_name>@umich.edu)", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zijwang/genderperformr", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "genderperformr", "package_url": "https://pypi.org/project/genderperformr/", "platform": "", "project_url": "https://pypi.org/project/genderperformr/", "project_urls": {"Homepage": "https://github.com/zijwang/genderperformr"}, "release_url": "https://pypi.org/project/genderperformr/1.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "GenderPerformr", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # GenderPerformr<br><br>## Intro<br>GenderPerformr is the model release from the paper `It\u2019s going to be okay: Measuring Access to Support in Online Communities` by Zijian Wang and David Jurgens (in proceedings of EMNLP 2018).<br><br>It is the current state-of-the-art method that predicts gender from usernames based on a LSTM model built in PyTorch (as of Sept. 2018).<br><br>See the [project website](http://blablablab.si.umich.edu/projects/support) for full details, including contact information.<br> <br>## Install <br><br>### Use pip<br>If `pip` is installed, genderperformr could be installed directly from it:<br><br>\tpip install genderperformr<br>### From raw<br>`git clone` the project and do:<br><br>\tpython setup.py install<br><br>### Dependencies<br>\tpython&gt;=3.6.0<br>\ttorch&gt;=0.4.1<br>\tnumpy<br>\tunidecode<br><br><br>## Usage and Example<br><br>### `predict`<br>`predict` is the core method of this package, <br>which takes a single username of a list of usernames, and returns a tuple of raw probabilities in `[0,1]` (0 - Male, 1 - Female), and labels (M - Male, N - Neutral, F - Female, empty string - others). <br><br>### Simplest usage<br><br>You may directly import `genderperformr` and use the default predict method, e.g.:<br><br>    &gt;&gt;&gt; import genderperformr<br>    &gt;&gt;&gt; genderperformr.predict(\"AdamMcAdamson\")<br>    (0.019139649, 'M')<br>    <br>### Construct from class<br>Alternatively, you may also construct the object from class, where you could customize the model path and device:<br> <br>\t&gt;&gt;&gt; from genderperformr import GenderPerformr<br>\t&gt;&gt;&gt; gp = GenderPerformr()<br>\t<br>\t# Predict a single username<br>\t&gt;&gt;&gt; gp.predict(\"John\")<br>\t(0.087956183, 'M')<br>\t<br>\t# Predict a list of names<br>\t&gt;&gt;&gt; probs, labels = gp.predict([\"BarryCA67\", \"pizzamagic\", \"KatieZ22\"])<br>    &gt;&gt;&gt; f\"Raw probabilities are {probs}\"<br>    Raw probabilities are [0.03398224 0.5439474 0.93964571]<br>    &gt;&gt;&gt; f\"Labels are {labels}\"<br>    Labels are ['M', 'N', 'F']<br><br><br>More detail on how to construct the object is available in docstrings.<br><br>### Model using new data partition <br>If you want to use the model described in Supplemental Material using the new data partition, you may construct the object via<br><br>    &gt;&gt;&gt; gp = GenderPerformr(is_new_model=True)<br><br>All other usages remain the same.<br><br><br>## Citation<br>    @inproceedings{wang2018its,<br>           title={It's going to be okay: Measuring Access to Support in Online Communities},<br>           author={Wang, Zijian and Jurgens, David},<br>           booktitle={Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP)},<br>           year={2018}<br>    }<br>    <br>## Contact<br>Zijian Wang (zij&lt;last_name&gt;@stanford.edu)<br><br>David Jurgens (&lt;last_name&gt;@umich.edu)\n          </div>"}, "last_serial": 4744745, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "1e897577e93264e6ea957da7e4fafa3a", "sha256": "c7fff3a36fbf5a71e2515dde2d743871d64f801f8c2fdde67c4d3b253d6b9ddc"}, "downloads": -1, "filename": "genderperformr-0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "1e897577e93264e6ea957da7e4fafa3a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 35933312, "upload_time": "2018-10-23T00:05:06", "upload_time_iso_8601": "2018-10-23T00:05:06.902693Z", "url": "https://files.pythonhosted.org/packages/2a/b6/11b23e72c70800d0215896fe599be6606d2bafd67119714f375ac7621634/genderperformr-0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "148b3eb611208dc632054c855734d777", "sha256": "353785a9efb2e656373475e6354add4503f7b887cf45247298ce9c64c6afe039"}, "downloads": -1, "filename": "genderperformr-0.9.tar.gz", "has_sig": false, "md5_digest": "148b3eb611208dc632054c855734d777", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 35906742, "upload_time": "2018-10-23T00:05:39", "upload_time_iso_8601": "2018-10-23T00:05:39.508555Z", "url": "https://files.pythonhosted.org/packages/97/1c/ba2b453f261f46fc6e1709fe98ba17b37045577704d6f0df75559b833d36/genderperformr-0.9.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "722c9eda4b96160a872fe76d3661d699", "sha256": "0a7eb5aad5846d4c282db7e6ca76d31185a43013da50c3dd233a40ee3985a686"}, "downloads": -1, "filename": "genderperformr-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "722c9eda4b96160a872fe76d3661d699", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 90989122, "upload_time": "2018-10-23T00:14:04", "upload_time_iso_8601": "2018-10-23T00:14:04.559874Z", "url": "https://files.pythonhosted.org/packages/d9/5d/9f3a6ede38192b6054509a2cbe7b01b6bd7d4f5a14b7be3d68b69904a6fe/genderperformr-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b054c270628000f8532934c8245af1d1", "sha256": "c384f71914ff150ca1d23b5a845ad16d5a9069aef2831dbd68b76b90a51b0083"}, "downloads": -1, "filename": "genderperformr-1.0.tar.gz", "has_sig": false, "md5_digest": "b054c270628000f8532934c8245af1d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 90963880, "upload_time": "2018-10-23T00:15:08", "upload_time_iso_8601": "2018-10-23T00:15:08.382999Z", "url": "https://files.pythonhosted.org/packages/4f/5e/fd747c2f0850643535736ef7e38a86ee4134ff8489cdc213b3b561484c38/genderperformr-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "a0504ff8675db2fc7b3c7ec6387e673e", "sha256": "b0d72998e37c42af4f5ef27caba85169a978a15650d422b27f97dabe821385c7"}, "downloads": -1, "filename": "genderperformr-1.1.tar.gz", "has_sig": false, "md5_digest": "a0504ff8675db2fc7b3c7ec6387e673e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 90964019, "upload_time": "2019-01-26T22:49:17", "upload_time_iso_8601": "2019-01-26T22:49:17.325795Z", "url": "https://files.pythonhosted.org/packages/42/bc/51b7a5b5ee00653266603a00e5c01deae321f342f820220525afe5f564ac/genderperformr-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a0504ff8675db2fc7b3c7ec6387e673e", "sha256": "b0d72998e37c42af4f5ef27caba85169a978a15650d422b27f97dabe821385c7"}, "downloads": -1, "filename": "genderperformr-1.1.tar.gz", "has_sig": false, "md5_digest": "a0504ff8675db2fc7b3c7ec6387e673e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 90964019, "upload_time": "2019-01-26T22:49:17", "upload_time_iso_8601": "2019-01-26T22:49:17.325795Z", "url": "https://files.pythonhosted.org/packages/42/bc/51b7a5b5ee00653266603a00e5c01deae321f342f820220525afe5f564ac/genderperformr-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:28 2020"}