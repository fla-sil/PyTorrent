{"info": {"author": "Motiejus Jak\u0161tys", "author_email": "desired.mta@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development"], "description": "Webtopay (mokejimai.lt) integration app for Django web framework\n================================================================\n\nInspired by django-paypal\n\nHow to use\n----------\n\n1. install django-webtopay\n2. add ``WEBTOPAY_PASSWORD='pass'`` to your settings file\n3. Add callback url::\n   url(r'^wtp/', include('webtopay.urls.makro'))\n   (it should be relatively hard to guess)\n4. Create a form for submission::\n\n    form = WebToPaymentForm(\n        dict(projectid = 123123,\n            orderid = '3c3662bcb661d6de679c636744c66b62',\n            accepturl = request.build_absolute_uri(),\n            cancelurl = request.build_absolute_uri(),\n            callbackurl = reverse('webtopay-makro'),\n            paytext = \"Payment for services\",\n            p_firstname = \"Vardenis\",\n            p_lastname = \"Pavardenis\",\n            p_email = \"vardenis@pavardenis.lt\",\n            amount = 989, # 9 Lt 89 ct\n            test = 1\n            ),\n        button_html=\"<input type='submit' value='Pay!'/>\",\n    )\n\n5) Catch a django signal when the payment is completed::\n\n    from webtopay.signals import payment_was_successful\n    def process_payment(**kargs):\n        trans = kargs['sender']\n        if price_i_expect * 100 != trans.amount:\n            log.error(\"Received wrong amount. Expected: %d, got: %d\",\\\n                price_i_expect*100, trans.amount)\n            return\n        paid = True\n        # from this point we assume customer paid\n        #...\n    payment_was_successful.connect(process_payment)\n\nYou should catch payment_was_flagged signal if you want to know when something\nwent wrong::\n\n    from webtopay.signals import payment_was_flagged\n    def investigate_payment(**kargs):\n        # kargs['sender'] is an instance of WebToPayResponse.\n        # All fields are documented in webtopay/models.py\n        log.warn(\"Payment went wrong for %s, please investigate\",\n            kargs['sender'].orderid)\n    payment_was_flagged.connect(investigate_payment)\n\n\nIf you have any questions or problems, please use *issues* page.\n\n|travis|_\n\n.. |travis| image:: https://travis-ci.org/Motiejus/django-webtopay.png\n.. _travis: https://travis-ci.org/Motiejus/django-webtopay\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Motiejus/django-webtopay", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-webtopay", "package_url": "https://pypi.org/project/django-webtopay/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-webtopay/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Motiejus/django-webtopay"}, "release_url": "https://pypi.org/project/django-webtopay/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "A pluggable Django application for integrating WebToPay Payments", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Inspired by django-paypal</p>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<ol>\n<li><p>install django-webtopay</p>\n</li>\n<li><p>add <tt><span class=\"pre\">WEBTOPAY_PASSWORD='pass'</span></tt> to your settings file</p>\n</li>\n<li><p>Add callback url::\nurl(r\u2019^wtp/\u2019, include(\u2018webtopay.urls.makro\u2019))\n(it should be relatively hard to guess)</p>\n</li>\n<li><p>Create a form for submission:</p>\n<pre>form = WebToPaymentForm(\n    dict(projectid = 123123,\n        orderid = '3c3662bcb661d6de679c636744c66b62',\n        accepturl = request.build_absolute_uri(),\n        cancelurl = request.build_absolute_uri(),\n        callbackurl = reverse('webtopay-makro'),\n        paytext = \"Payment for services\",\n        p_firstname = \"Vardenis\",\n        p_lastname = \"Pavardenis\",\n        p_email = \"vardenis@pavardenis.lt\",\n        amount = 989, # 9 Lt 89 ct\n        test = 1\n        ),\n    button_html=\"&lt;input type='submit' value='Pay!'/&gt;\",\n)\n</pre>\n</li>\n</ol>\n<ol>\n<li><p>Catch a django signal when the payment is completed:</p>\n<pre>from webtopay.signals import payment_was_successful\ndef process_payment(**kargs):\n    trans = kargs['sender']\n    if price_i_expect * 100 != trans.amount:\n        log.error(\"Received wrong amount. Expected: %d, got: %d\",\\\n            price_i_expect*100, trans.amount)\n        return\n    paid = True\n    # from this point we assume customer paid\n    #...\npayment_was_successful.connect(process_payment)\n</pre>\n</li>\n</ol>\n<p>You should catch payment_was_flagged signal if you want to know when something\nwent wrong:</p>\n<pre>from webtopay.signals import payment_was_flagged\ndef investigate_payment(**kargs):\n    # kargs['sender'] is an instance of WebToPayResponse.\n    # All fields are documented in webtopay/models.py\n    log.warn(\"Payment went wrong for %s, please investigate\",\n        kargs['sender'].orderid)\npayment_was_flagged.connect(investigate_payment)\n</pre>\n<p>If you have any questions or problems, please use <em>issues</em> page.</p>\n<p><a href=\"https://travis-ci.org/Motiejus/django-webtopay\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1ea73302133d14b4af9073dcf561c1e7c2d1e01/68747470733a2f2f7472617669732d63692e6f72672f4d6f7469656a75732f646a616e676f2d776562746f7061792e706e67\"></a></p>\n</div>\n\n          </div>"}, "last_serial": 1060890, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "751b0d1f11e4fc01a1f2ee3dc6716e29", "sha256": "288179783389483fc0e11adf8f056a4ac1446eca48582345bbe86b143c266155"}, "downloads": -1, "filename": "django-webtopay-1.0.0.tar.gz", "has_sig": false, "md5_digest": "751b0d1f11e4fc01a1f2ee3dc6716e29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12848, "upload_time": "2012-05-14T22:02:27", "upload_time_iso_8601": "2012-05-14T22:02:27.734896Z", "url": "https://files.pythonhosted.org/packages/83/b6/f47784398807ab363f79edcbe36f946c23647b4d3c2bd45b08de0179754c/django-webtopay-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "fb1ce51b396189c728140249e71f48ed", "sha256": "d7ae4859f3ec9481350a027428ff88092a07af832e3acfe037510e716a5602f5"}, "downloads": -1, "filename": "django-webtopay-1.0.1.tar.gz", "has_sig": false, "md5_digest": "fb1ce51b396189c728140249e71f48ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12881, "upload_time": "2014-04-15T10:07:57", "upload_time_iso_8601": "2014-04-15T10:07:57.395046Z", "url": "https://files.pythonhosted.org/packages/b6/12/7e0eb6dd2d389b175947c508400c2312c4dcf1b746fc55426cecfad36db3/django-webtopay-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fb1ce51b396189c728140249e71f48ed", "sha256": "d7ae4859f3ec9481350a027428ff88092a07af832e3acfe037510e716a5602f5"}, "downloads": -1, "filename": "django-webtopay-1.0.1.tar.gz", "has_sig": false, "md5_digest": "fb1ce51b396189c728140249e71f48ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12881, "upload_time": "2014-04-15T10:07:57", "upload_time_iso_8601": "2014-04-15T10:07:57.395046Z", "url": "https://files.pythonhosted.org/packages/b6/12/7e0eb6dd2d389b175947c508400c2312c4dcf1b746fc55426cecfad36db3/django-webtopay-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:54 2020"}