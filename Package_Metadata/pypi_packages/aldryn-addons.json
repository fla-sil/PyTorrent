{"info": {"author": "Divio AG", "author_email": "info@divio.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development", "Topic :: Software Development :: Libraries"], "description": "=======================\nAldryn Addons Framework\n=======================\n\n|pypi| |build| |coverage|\n\n**Aldryn Addons** are re-usable django apps that follow certain conventions to\nabstract out complicated configuration from the individual django website\nproject into upgradable packages. With this approach it is possible\nto avoid repetitive \"add this to ``INSTALLED_APPS`` and that to\n``MIDDLEWARE_CLASSES`` and add these to ``urls.py``\" work. The settings logic\nis bundled with the addon and only interesting \"meta\" settings are exposed.\nIt is a framework to utilise such addons in django projects.\n\nThe goal is to keep the footprint inside the django website project as small\nas possible, so updating things usually just mean bumping a version in\n``requirements.txt`` and no other changes in the project.\n\nThis addon still uses the legacy \"Aldryn\" naming. You can read more about this in our\n`support section <https://support.divio.com/general/faq/essential-knowledge-what-is-aldryn>`_.\n\n\nContributing\n============\n\nThis is a an open-source project. We'll be delighted to receive your\nfeedback in the form of issues and pull requests. Before submitting your\npull request, please review our `contribution guidelines\n<http://docs.django-cms.org/en/latest/contributing/index.html>`_.\n\nWe're grateful to all contributors who have helped create and maintain this package.\nContributors are listed at the `contributors <https://github.com/divio/aldryn-addons/graphs/contributors>`_\nsection.\n\n\nDocumentation\n=============\n\nSee ``REQUIREMENTS`` in the `setup.py <https://github.com/divio/aldryn-addons/blob/master/setup.py>`_\nfile for additional dependencies:\n\n|python| |django|\n\n\nInstallation\n------------\n\n``aldryn-addons`` is part of the Divio Cloud platform.\n\nFor a manual install:\n\nAdd ``aldryn-addons`` to your projects ``requirements.txt`` or pip install it.\nIt is also highly recommended to install ``aldryn-django``. This is django\nitself bundled as an addon::\n\n    pip install aldryn-addons aldryn-django==1.6.11\n\nAt the top if the ``settings.py`` add the following code snippet::\n\n    INSTALLED_ADDONS = [\n        'aldryn-django',\n    ]\n\n    # add your own settings here that are needed by the installed Addons\n\n    import aldryn_addons.settings\n    aldryn_addons.settings.load(locals())\n\n    # add any other custom settings here\n\nAddons can automatically add code to the root ``urls.py`` so it's necessary\nto add ``aldryn_addons.urls.patterns()`` and\n``aldryn_addons.urls.i18n_patterns()``.\nThe code below is for Django 1.8 and above. For older versions of Django,\nplease add the prefix parameter to ``i18n_patterns``: ``i18n_patterns('', ...``\n::\n\n    from django.conf.urls import url, include\n    from django.conf.urls.i18n import i18n_patterns\n    import aldryn_addons.urls\n\n\n    urlpatterns = [\n        # add your own patterns here\n    ] + aldryn_addons.urls.patterns() + i18n_patterns(\n        # add your own i18n patterns here\n        url(r'^myapp/', include('myapp.urls')),\n        *aldryn_addons.urls.i18n_patterns()  # MUST be the last entry!\n    )\n\n\nPlease follow the installation instructions for aldryn-django for complete\nintegration. Then follow the setup instructions for aldryn-django-cms\nfor the examples below.\n\n\nAdding Addons\n-------------\n\nIn this example we're going to install `django CMS Link <https://github.com/divio/djangocms-link/>`_,\nwhich requires `Aldryn django CMS <https://github.com/aldryn/aldryn-django-cms/>`_.\n\npip install the Addon::\n\n    pip install djangocms-link\n\nAdd it to ``INSTALLED_ADDONS`` in ``settings.py``::\n\n    INSTALLED_ADDONS = [\n        'aldryn-django',\n        'aldryn-cms',\n        'djangocms-link',\n    ]\n\nCopy ``aldryn_config.py`` and ``addon.json`` from the addon into the ``addons``\ndirectory within your project (``addons/djangocms-link/aldryn_config.py`` and\n``addons/djangocms-link/addon.json``). If ``aldryn_config.py`` defines any\nsettings on the settings Form, put them in\n``addons/djangocms-link/settings.json``, if not put ``{}`` into it.\n\n.. Note:: The need to manually copy ``aldryn_config.py`` and ``addon.json`` is\n          due to legacy compatibility with the Divio Cloud platform and will no\n          longer be necessary in a later release.\n\n.. Note:: Future versions will include a little webserver with a graphical UI\n          to edit the settings in ``settings.json``, much like it is provided\n          on the Divio Cloud platform.\n\n\nYou are all set. The code in ``aldryn_config.py`` will take care of configuring\nthe addon.\n\n\nRunning Tests\n-------------\n\nYou can run tests by executing::\n\n    virtualenv env\n    source env/bin/activate\n    pip install -r tests/requirements.txt\n    python setup.py test\n\n\n.. |pypi| image:: https://badge.fury.io/py/aldryn-addons.svg\n    :target: http://badge.fury.io/py/aldryn-addons\n.. |build| image:: https://travis-ci.org/divio/aldryn-addons.svg?branch=master\n    :target: https://travis-ci.org/divio/aldryn-addons\n.. |coverage| image:: https://codecov.io/gh/divio/aldryn-addons/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/divio/aldryn-addons\n\n.. |python| image:: https://img.shields.io/badge/python-2.7%20%7C%203.4+-blue.svg\n    :target: https://pypi.org/project/aldryn-addons/\n.. |django| image:: https://img.shields.io/badge/django-1.11%20%7C%202.0%20%7C%202.1-blue.svg\n    :target: https://www.djangoproject.com/\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/divio/aldryn-addons", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "aldryn-addons", "package_url": "https://pypi.org/project/aldryn-addons/", "platform": "", "project_url": "https://pypi.org/project/aldryn-addons/", "project_urls": {"Homepage": "https://github.com/divio/aldryn-addons"}, "release_url": "https://pypi.org/project/aldryn-addons/1.0.4/", "requires_dist": null, "requires_python": "", "summary": "Aldryn Addons Framework", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"http://badge.fury.io/py/aldryn-addons\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a7538f0d9261680db3a47ae28a48a8f8b20a9276/68747470733a2f2f62616467652e667572792e696f2f70792f616c6472796e2d6164646f6e732e737667\"></a> <a href=\"https://travis-ci.org/divio/aldryn-addons\" rel=\"nofollow\"><img alt=\"build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6136fe325ef84966c1a2d97fa534122d35adcf4/68747470733a2f2f7472617669732d63692e6f72672f646976696f2f616c6472796e2d6164646f6e732e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/gh/divio/aldryn-addons\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ba59b8e061d5f958824b9d589115ceb21cc5707/68747470733a2f2f636f6465636f762e696f2f67682f646976696f2f616c6472796e2d6164646f6e732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p><strong>Aldryn Addons</strong> are re-usable django apps that follow certain conventions to\nabstract out complicated configuration from the individual django website\nproject into upgradable packages. With this approach it is possible\nto avoid repetitive \u201cadd this to <tt>INSTALLED_APPS</tt> and that to\n<tt>MIDDLEWARE_CLASSES</tt> and add these to <tt>urls.py</tt>\u201d work. The settings logic\nis bundled with the addon and only interesting \u201cmeta\u201d settings are exposed.\nIt is a framework to utilise such addons in django projects.</p>\n<p>The goal is to keep the footprint inside the django website project as small\nas possible, so updating things usually just mean bumping a version in\n<tt>requirements.txt</tt> and no other changes in the project.</p>\n<p>This addon still uses the legacy \u201cAldryn\u201d naming. You can read more about this in our\n<a href=\"https://support.divio.com/general/faq/essential-knowledge-what-is-aldryn\" rel=\"nofollow\">support section</a>.</p>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>This is a an open-source project. We\u2019ll be delighted to receive your\nfeedback in the form of issues and pull requests. Before submitting your\npull request, please review our <a href=\"http://docs.django-cms.org/en/latest/contributing/index.html\" rel=\"nofollow\">contribution guidelines</a>.</p>\n<p>We\u2019re grateful to all contributors who have helped create and maintain this package.\nContributors are listed at the <a href=\"https://github.com/divio/aldryn-addons/graphs/contributors\" rel=\"nofollow\">contributors</a>\nsection.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>See <tt>REQUIREMENTS</tt> in the <a href=\"https://github.com/divio/aldryn-addons/blob/master/setup.py\" rel=\"nofollow\">setup.py</a>\nfile for additional dependencies:</p>\n<p><a href=\"https://pypi.org/project/aldryn-addons/\" rel=\"nofollow\"><img alt=\"python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/08b1cea0353f2f40fe037f550b95c66ce6382af3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d322e37253230253743253230332e342b2d626c75652e737667\"></a> <a href=\"https://www.djangoproject.com/\" rel=\"nofollow\"><img alt=\"django\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d3e97f773247e297c8f721c26bd99202ae379d4c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646a616e676f2d312e3131253230253743253230322e30253230253743253230322e312d626c75652e737667\"></a></p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p><tt><span class=\"pre\">aldryn-addons</span></tt> is part of the Divio Cloud platform.</p>\n<p>For a manual install:</p>\n<p>Add <tt><span class=\"pre\">aldryn-addons</span></tt> to your projects <tt>requirements.txt</tt> or pip install it.\nIt is also highly recommended to install <tt><span class=\"pre\">aldryn-django</span></tt>. This is django\nitself bundled as an addon:</p>\n<pre>pip install aldryn-addons aldryn-django==1.6.11\n</pre>\n<p>At the top if the <tt>settings.py</tt> add the following code snippet:</p>\n<pre>INSTALLED_ADDONS = [\n    'aldryn-django',\n]\n\n# add your own settings here that are needed by the installed Addons\n\nimport aldryn_addons.settings\naldryn_addons.settings.load(locals())\n\n# add any other custom settings here\n</pre>\n<p>Addons can automatically add code to the root <tt>urls.py</tt> so it\u2019s necessary\nto add <tt>aldryn_addons.urls.patterns()</tt> and\n<tt>aldryn_addons.urls.i18n_patterns()</tt>.\nThe code below is for Django 1.8 and above. For older versions of Django,\nplease add the prefix parameter to <tt>i18n_patterns</tt>: <tt><span class=\"pre\">i18n_patterns('',</span> ...</tt></p>\n<pre>from django.conf.urls import url, include\nfrom django.conf.urls.i18n import i18n_patterns\nimport aldryn_addons.urls\n\n\nurlpatterns = [\n    # add your own patterns here\n] + aldryn_addons.urls.patterns() + i18n_patterns(\n    # add your own i18n patterns here\n    url(r'^myapp/', include('myapp.urls')),\n    *aldryn_addons.urls.i18n_patterns()  # MUST be the last entry!\n)\n</pre>\n<p>Please follow the installation instructions for aldryn-django for complete\nintegration. Then follow the setup instructions for aldryn-django-cms\nfor the examples below.</p>\n</div>\n<div id=\"adding-addons\">\n<h3>Adding Addons</h3>\n<p>In this example we\u2019re going to install <a href=\"https://github.com/divio/djangocms-link/\" rel=\"nofollow\">django CMS Link</a>,\nwhich requires <a href=\"https://github.com/aldryn/aldryn-django-cms/\" rel=\"nofollow\">Aldryn django CMS</a>.</p>\n<p>pip install the Addon:</p>\n<pre>pip install djangocms-link\n</pre>\n<p>Add it to <tt>INSTALLED_ADDONS</tt> in <tt>settings.py</tt>:</p>\n<pre>INSTALLED_ADDONS = [\n    'aldryn-django',\n    'aldryn-cms',\n    'djangocms-link',\n]\n</pre>\n<p>Copy <tt>aldryn_config.py</tt> and <tt>addon.json</tt> from the addon into the <tt>addons</tt>\ndirectory within your project (<tt><span class=\"pre\">addons/djangocms-link/aldryn_config.py</span></tt> and\n<tt><span class=\"pre\">addons/djangocms-link/addon.json</span></tt>). If <tt>aldryn_config.py</tt> defines any\nsettings on the settings Form, put them in\n<tt><span class=\"pre\">addons/djangocms-link/settings.json</span></tt>, if not put <tt>{}</tt> into it.</p>\n<div>\n<p>Note</p>\n<p>The need to manually copy <tt>aldryn_config.py</tt> and <tt>addon.json</tt> is\ndue to legacy compatibility with the Divio Cloud platform and will no\nlonger be necessary in a later release.</p>\n</div>\n<div>\n<p>Note</p>\n<p>Future versions will include a little webserver with a graphical UI\nto edit the settings in <tt>settings.json</tt>, much like it is provided\non the Divio Cloud platform.</p>\n</div>\n<p>You are all set. The code in <tt>aldryn_config.py</tt> will take care of configuring\nthe addon.</p>\n</div>\n<div id=\"running-tests\">\n<h3>Running Tests</h3>\n<p>You can run tests by executing:</p>\n<pre>virtualenv env\nsource env/bin/activate\npip install -r tests/requirements.txt\npython setup.py test\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4838356, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "4b78613c4ff9341ab5930e8ca7107110", "sha256": "1afa85b1f9e08d848c8021a6f6226129ac1291a51b4b89bdf60ae6a80cd8dd9d"}, "downloads": -1, "filename": "aldryn-addons-0.1.tar.gz", "has_sig": false, "md5_digest": "4b78613c4ff9341ab5930e8ca7107110", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5489, "upload_time": "2015-08-27T23:59:12", "upload_time_iso_8601": "2015-08-27T23:59:12.053588Z", "url": "https://files.pythonhosted.org/packages/83/07/5ebaaaf22cc7755ab29a20829285daf8ce41cce61fb53f380d01adeab67e/aldryn-addons-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "e383123ba3fbdf342dd87ad6e04dd618", "sha256": "abe88e0a3a95ff0438b39e6eb33c00d6f69a32e8a86f51e76bcb743f9ab72a44"}, "downloads": -1, "filename": "aldryn-addons-0.2.tar.gz", "has_sig": false, "md5_digest": "e383123ba3fbdf342dd87ad6e04dd618", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5559, "upload_time": "2015-09-08T19:47:24", "upload_time_iso_8601": "2015-09-08T19:47:24.425042Z", "url": "https://files.pythonhosted.org/packages/df/c4/26f1870e1871672c67fc477f50e390f44715fb1a5f299695017b9d1e21b8/aldryn-addons-0.2.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "a41f7017999db458366d43179e06febc", "sha256": "f9fb2fe145a590c81d69a53b95dca34cc5189801b23a11e00b20c933536807b9"}, "downloads": -1, "filename": "aldryn-addons-0.4.tar.gz", "has_sig": false, "md5_digest": "a41f7017999db458366d43179e06febc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5592, "upload_time": "2015-09-18T11:15:51", "upload_time_iso_8601": "2015-09-18T11:15:51.558953Z", "url": "https://files.pythonhosted.org/packages/d4/ce/10823441fd749a80b8399d7936c747f989ce0c3b39a694dc2d2031ec7b37/aldryn-addons-0.4.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "48e172eccd29b6c00011694745853a63", "sha256": "094e5798afc2e3724d4510476c2e7dc3be4031327e4de031e58ceb20d57f77eb"}, "downloads": -1, "filename": "aldryn-addons-1.0.0.tar.gz", "has_sig": false, "md5_digest": "48e172eccd29b6c00011694745853a63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6332, "upload_time": "2015-11-09T16:26:11", "upload_time_iso_8601": "2015-11-09T16:26:11.576663Z", "url": "https://files.pythonhosted.org/packages/80/d1/897d52d4643cd1500697ea9e2b7bab1ff201c67ac6e1ba2cdbb9b630f431/aldryn-addons-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "aac57dbe149395e8098bafd5af8f93be", "sha256": "9335b7a3df513adaaf757ec0117ed3f9ca85e3b317f83210e6153a7c47f84500"}, "downloads": -1, "filename": "aldryn-addons-1.0.1.tar.gz", "has_sig": false, "md5_digest": "aac57dbe149395e8098bafd5af8f93be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6773, "upload_time": "2016-05-10T15:08:36", "upload_time_iso_8601": "2016-05-10T15:08:36.037810Z", "url": "https://files.pythonhosted.org/packages/5b/7f/134eddb581327a60def92e329cb386cac4d18d78e1a69fec5ea57bb65ad2/aldryn-addons-1.0.1.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "41de0335ee055e0326f664e9ccf00b33", "sha256": "72461e3ce25c8724fc7475117d0a584fa0f71fc501a4cd1fafc60ea00f43c601"}, "downloads": -1, "filename": "aldryn_addons-1.0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "41de0335ee055e0326f664e9ccf00b33", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7460, "upload_time": "2018-04-04T12:25:30", "upload_time_iso_8601": "2018-04-04T12:25:30.787755Z", "url": "https://files.pythonhosted.org/packages/79/c7/e868c7a77ba1298b16fa4ba1bdf6588fced8788843df78aee7a0f4df634b/aldryn_addons-1.0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "235a0aed9bd0d5a680d1ec9955e5a5d9", "sha256": "a6ce6d47f4bfc9d8050186a73f24773a5baa04621e946a0c13469f6f5b13abf1"}, "downloads": -1, "filename": "aldryn-addons-1.0.3.tar.gz", "has_sig": false, "md5_digest": "235a0aed9bd0d5a680d1ec9955e5a5d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6861, "upload_time": "2018-04-04T12:25:29", "upload_time_iso_8601": "2018-04-04T12:25:29.555627Z", "url": "https://files.pythonhosted.org/packages/ef/f1/d1dc031d05418712f4d083e8247f0de4077d14d677643e88498a48ecfa2d/aldryn-addons-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "86ffe745d9c8320e7e7dd1eb964ccadf", "sha256": "470712b153dec69f5b7d2881ba39250f6aa6409abc989c089277e13ac7d55ee3"}, "downloads": -1, "filename": "aldryn-addons-1.0.4.tar.gz", "has_sig": false, "md5_digest": "86ffe745d9c8320e7e7dd1eb964ccadf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8764, "upload_time": "2019-02-19T07:10:37", "upload_time_iso_8601": "2019-02-19T07:10:37.348732Z", "url": "https://files.pythonhosted.org/packages/13/65/39ceabcc41eaaf3a94a1715f6e13f1e2abb580e37ca19ba8c44b6132e28b/aldryn-addons-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "86ffe745d9c8320e7e7dd1eb964ccadf", "sha256": "470712b153dec69f5b7d2881ba39250f6aa6409abc989c089277e13ac7d55ee3"}, "downloads": -1, "filename": "aldryn-addons-1.0.4.tar.gz", "has_sig": false, "md5_digest": "86ffe745d9c8320e7e7dd1eb964ccadf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8764, "upload_time": "2019-02-19T07:10:37", "upload_time_iso_8601": "2019-02-19T07:10:37.348732Z", "url": "https://files.pythonhosted.org/packages/13/65/39ceabcc41eaaf3a94a1715f6e13f1e2abb580e37ca19ba8c44b6132e28b/aldryn-addons-1.0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:01 2020"}