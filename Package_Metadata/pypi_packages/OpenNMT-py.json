{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# OpenNMT-py: Open-Source Neural Machine Translation\n\n[![Build Status](https://travis-ci.org/OpenNMT/OpenNMT-py.svg?branch=master)](https://travis-ci.org/OpenNMT/OpenNMT-py)\n[![Run on FH](https://img.shields.io/badge/Run%20on-FloydHub-blue.svg)](https://floydhub.com/run?template=https://github.com/OpenNMT/OpenNMT-py)\n\nThis is a [PyTorch](https://github.com/pytorch/pytorch)\nport of [OpenNMT](https://github.com/OpenNMT/OpenNMT),\nan open-source (MIT) neural machine translation system. It is designed to be research friendly to try out new ideas in translation, summary, image-to-text, morphology, and many other domains. Some companies have proven the code to be production ready.\n\nWe love contributions. Please consult the Issues page for any [Contributions Welcome](https://github.com/OpenNMT/OpenNMT-py/issues?q=is%3Aissue+is%3Aopen+label%3A%22contributions+welcome%22) tagged post. \n\n<center style=\"padding: 40px\"><img width=\"70%\" src=\"http://opennmt.github.io/simple-attn.png\" /></center>\n\nBefore raising an issue, make sure you read the requirements and the documentation examples.\n\nUnless there is a bug, please use the [Forum](http://forum.opennmt.net) or [Gitter](https://gitter.im/OpenNMT/OpenNMT-py) to ask questions.\n\n\nTable of Contents\n=================\n  * [Full Documentation](http://opennmt.net/OpenNMT-py/)\n  * [Requirements](#requirements)\n  * [Features](#features)\n  * [Quickstart](#quickstart)\n  * [Run on FloydHub](#run-on-floydhub)\n  * [Acknowledgements](#acknowledgements)\n  * [Citation](#citation)\n\n## Requirements\n\nInstall `OpenNMT-py` from `pip`:\n```bash\npip install OpenNMT-py\n```\n\nor from the sources:\n```bash\ngit clone https://github.com/OpenNMT/OpenNMT-py.git\ncd OpenNMT-py\npython setup.py install\n```\n\nNote: If you have MemoryError in the install try to use `pip` with `--no-cache-dir`.\n\n*(Optional)* some advanced features (e.g. working audio, image or pretrained models) requires extra packages, you can install it with:\n```bash\npip install -r requirements.opt.txt\n```\n\nNote:\n\n- some features require Python 3.5 and after (eg: Distributed multigpu, entmax)\n- we currently only support PyTorch 1.4\n\n## Features\n\n- [Seq2Seq models (encoder-decoder) with multiple RNN cells (lstm/gru) and attention (dotprod/mlp) types](http://opennmt.net/OpenNMT-py/options/train.html#model-encoder-decoder)\n- [Transformer models](http://opennmt.net/OpenNMT-py/FAQ.html#how-do-i-use-the-transformer-model)\n- [Copy and Coverage Attention](http://opennmt.net/OpenNMT-py/options/train.html#model-attention)\n- [Pretrained Embeddings](http://opennmt.net/OpenNMT-py/FAQ.html#how-do-i-use-pretrained-embeddings-e-g-glove)\n- [Source word features](http://opennmt.net/OpenNMT-py/options/train.html#model-embeddings)\n- [Image-to-text processing](http://opennmt.net/OpenNMT-py/im2text.html)\n- [Speech-to-text processing](http://opennmt.net/OpenNMT-py/speech2text.html)\n- [TensorBoard logging](http://opennmt.net/OpenNMT-py/options/train.html#logging)\n- [Multi-GPU training](http://opennmt.net/OpenNMT-py/FAQ.html##do-you-support-multi-gpu)\n- [Data preprocessing](http://opennmt.net/OpenNMT-py/options/preprocess.html)\n- [Inference (translation) with batching and beam search](http://opennmt.net/OpenNMT-py/options/translate.html)\n- Inference time loss functions.\n- [Conv2Conv convolution model]\n- SRU \"RNNs faster than CNN\" paper\n- Mixed-precision training with [APEX](https://github.com/NVIDIA/apex), optimized on [Tensor Cores](https://developer.nvidia.com/tensor-cores)\n\n## Quickstart\n\n[Full Documentation](http://opennmt.net/OpenNMT-py/)\n\n\n### Step 1: Preprocess the data\n\n```bash\nonmt_preprocess -train_src data/src-train.txt -train_tgt data/tgt-train.txt -valid_src data/src-val.txt -valid_tgt data/tgt-val.txt -save_data data/demo\n```\n\nWe will be working with some example data in `data/` folder.\n\nThe data consists of parallel source (`src`) and target (`tgt`) data containing one sentence per line with tokens separated by a space:\n\n* `src-train.txt`\n* `tgt-train.txt`\n* `src-val.txt`\n* `tgt-val.txt`\n\nValidation files are required and used to evaluate the convergence of the training. It usually contains no more than 5000 sentences.\n\n\nAfter running the preprocessing, the following files are generated:\n\n* `demo.train.pt`: serialized PyTorch file containing training data\n* `demo.valid.pt`: serialized PyTorch file containing validation data\n* `demo.vocab.pt`: serialized PyTorch file containing vocabulary data\n\n\nInternally the system never touches the words themselves, but uses these indices.\n\n### Step 2: Train the model\n\n```bash\nonmt_train -data data/demo -save_model demo-model\n```\n\nThe main train command is quite simple. Minimally it takes a data file\nand a save file.  This will run the default model, which consists of a\n2-layer LSTM with 500 hidden units on both the encoder/decoder.\nIf you want to train on GPU, you need to set, as an example:\n`CUDA_VISIBLE_DEVICES=1,3`\n`-world_size 2 -gpu_ranks 0 1` to use (say) GPU 1 and 3 on this node only.\nTo know more about distributed training on single or multi nodes, read the FAQ section.\n\n### Step 3: Translate\n\n```bash\nonmt_translate -model demo-model_acc_XX.XX_ppl_XXX.XX_eX.pt -src data/src-test.txt -output pred.txt -replace_unk -verbose\n```\n\nNow you have a model which you can use to predict on new data. We do this by running beam search. This will output predictions into `pred.txt`.\n\n!!! note \"Note\"\n    The predictions are going to be quite terrible, as the demo dataset is small. Try running on some larger datasets! For example you can download millions of parallel sentences for [translation](http://www.statmt.org/wmt16/translation-task.html) or [summarization](https://github.com/harvardnlp/sent-summary).\n\n## Alternative: Run on FloydHub\n\n[![Run on FloydHub](https://static.floydhub.com/button/button.svg)](https://floydhub.com/run?template=https://github.com/OpenNMT/OpenNMT-py)\n\nClick this button to open a Workspace on [FloydHub](https://www.floydhub.com/?utm_medium=readme&utm_source=opennmt-py&utm_campaign=jul_2018) for training/testing your code.\n\n\n## Pretrained embeddings (e.g. GloVe)\n\nPlease see the FAQ: [How to use GloVe pre-trained embeddings in OpenNMT-py](http://opennmt.net/OpenNMT-py/FAQ.html#how-do-i-use-pretrained-embeddings-e-g-glove)\n\n## Pretrained Models\n\nThe following pretrained models can be downloaded and used with translate.py.\n\nhttp://opennmt.net/Models-py/\n\n## Acknowledgements\n\nOpenNMT-py is run as a collaborative open-source project.\nThe original code was written by [Adam Lerer](http://github.com/adamlerer) (NYC) to reproduce OpenNMT-Lua using Pytorch.\n\nMajor contributors are:\n[Sasha Rush](https://github.com/srush) (Cambridge, MA)\n[Vincent Nguyen](https://github.com/vince62s) (Ubiqus)\n[Ben Peters](http://github.com/bpopeters) (Lisbon)\n[Sebastian Gehrmann](https://github.com/sebastianGehrmann) (Harvard NLP)\n[Yuntian Deng](https://github.com/da03) (Harvard NLP)\n[Guillaume Klein](https://github.com/guillaumekln) (Systran)\n[Paul Tardy](https://github.com/pltrdy) (Ubiqus / Lium)\n[Fran\u00e7ois Hernandez](https://github.com/francoishernandez) (Ubiqus)\n[Jianyu Zhan](http://github.com/jianyuzhan) (Shanghai)\n[Dylan Flaute](http://github.com/flauted (University of Dayton)\nand more !\n\nOpenNMT-py belongs to the OpenNMT project along with OpenNMT-Lua and OpenNMT-tf.\n\n## Citation\n\n[OpenNMT: Neural Machine Translation Toolkit](https://arxiv.org/pdf/1805.11462)\n\n[OpenNMT technical report](https://doi.org/10.18653/v1/P17-4012)\n\n```\n@inproceedings{opennmt,\n  author    = {Guillaume Klein and\n               Yoon Kim and\n               Yuntian Deng and\n               Jean Senellart and\n               Alexander M. Rush},\n  title     = {Open{NMT}: Open-Source Toolkit for Neural Machine Translation},\n  booktitle = {Proc. ACL},\n  year      = {2017},\n  url       = {https://doi.org/10.18653/v1/P17-4012},\n  doi       = {10.18653/v1/P17-4012}\n}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "OpenNMT-py", "package_url": "https://pypi.org/project/OpenNMT-py/", "platform": "", "project_url": "https://pypi.org/project/OpenNMT-py/", "project_urls": {"Documentation": "http://opennmt.net/OpenNMT-py/", "Forum": "http://forum.opennmt.net/", "Gitter": "https://gitter.im/OpenNMT/OpenNMT-py", "Source": "https://github.com/OpenNMT/OpenNMT-py/"}, "release_url": "https://pypi.org/project/OpenNMT-py/1.1.1/", "requires_dist": ["six", "tqdm (~=4.30.0)", "torch (>=1.4.0)", "torchtext (==0.4.0)", "future", "configargparse", "tensorboard (>=1.14)", "flask", "waitress", "pyyaml", "pyonmttok (==1.*) ; platform_system == \"Linux\""], "requires_python": "", "summary": "A python implementation of OpenNMT", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>OpenNMT-py: Open-Source Neural Machine Translation</h1>\n<p><a href=\"https://travis-ci.org/OpenNMT/OpenNMT-py\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb4edb4823c2f6d83868f2f4bee13ddcb742b43e/68747470733a2f2f7472617669732d63692e6f72672f4f70656e4e4d542f4f70656e4e4d542d70792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://floydhub.com/run?template=https://github.com/OpenNMT/OpenNMT-py\" rel=\"nofollow\"><img alt=\"Run on FH\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a24bf604240978ddc2e74cebb710234107b432c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52756e2532306f6e2d466c6f79644875622d626c75652e737667\"></a></p>\n<p>This is a <a href=\"https://github.com/pytorch/pytorch\" rel=\"nofollow\">PyTorch</a>\nport of <a href=\"https://github.com/OpenNMT/OpenNMT\" rel=\"nofollow\">OpenNMT</a>,\nan open-source (MIT) neural machine translation system. It is designed to be research friendly to try out new ideas in translation, summary, image-to-text, morphology, and many other domains. Some companies have proven the code to be production ready.</p>\n<p>We love contributions. Please consult the Issues page for any <a href=\"https://github.com/OpenNMT/OpenNMT-py/issues?q=is%3Aissue+is%3Aopen+label%3A%22contributions+welcome%22\" rel=\"nofollow\">Contributions Welcome</a> tagged post.</p>\n&lt;center style=\"padding: 40px\"&gt;<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/044306f550780bd949656ca7ed06a152f05da194/687474703a2f2f6f70656e6e6d742e6769746875622e696f2f73696d706c652d6174746e2e706e67\" width=\"70%\">&lt;/center&gt;\n<p>Before raising an issue, make sure you read the requirements and the documentation examples.</p>\n<p>Unless there is a bug, please use the <a href=\"http://forum.opennmt.net\" rel=\"nofollow\">Forum</a> or <a href=\"https://gitter.im/OpenNMT/OpenNMT-py\" rel=\"nofollow\">Gitter</a> to ask questions.</p>\n<h1>Table of Contents</h1>\n<ul>\n<li><a href=\"http://opennmt.net/OpenNMT-py/\" rel=\"nofollow\">Full Documentation</a></li>\n<li><a href=\"#requirements\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#quickstart\" rel=\"nofollow\">Quickstart</a></li>\n<li><a href=\"#run-on-floydhub\" rel=\"nofollow\">Run on FloydHub</a></li>\n<li><a href=\"#acknowledgements\" rel=\"nofollow\">Acknowledgements</a></li>\n<li><a href=\"#citation\" rel=\"nofollow\">Citation</a></li>\n</ul>\n<h2>Requirements</h2>\n<p>Install <code>OpenNMT-py</code> from <code>pip</code>:</p>\n<pre>pip install OpenNMT-py\n</pre>\n<p>or from the sources:</p>\n<pre>git clone https://github.com/OpenNMT/OpenNMT-py.git\n<span class=\"nb\">cd</span> OpenNMT-py\npython setup.py install\n</pre>\n<p>Note: If you have MemoryError in the install try to use <code>pip</code> with <code>--no-cache-dir</code>.</p>\n<p><em>(Optional)</em> some advanced features (e.g. working audio, image or pretrained models) requires extra packages, you can install it with:</p>\n<pre>pip install -r requirements.opt.txt\n</pre>\n<p>Note:</p>\n<ul>\n<li>some features require Python 3.5 and after (eg: Distributed multigpu, entmax)</li>\n<li>we currently only support PyTorch 1.4</li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li><a href=\"http://opennmt.net/OpenNMT-py/options/train.html#model-encoder-decoder\" rel=\"nofollow\">Seq2Seq models (encoder-decoder) with multiple RNN cells (lstm/gru) and attention (dotprod/mlp) types</a></li>\n<li><a href=\"http://opennmt.net/OpenNMT-py/FAQ.html#how-do-i-use-the-transformer-model\" rel=\"nofollow\">Transformer models</a></li>\n<li><a href=\"http://opennmt.net/OpenNMT-py/options/train.html#model-attention\" rel=\"nofollow\">Copy and Coverage Attention</a></li>\n<li><a href=\"http://opennmt.net/OpenNMT-py/FAQ.html#how-do-i-use-pretrained-embeddings-e-g-glove\" rel=\"nofollow\">Pretrained Embeddings</a></li>\n<li><a href=\"http://opennmt.net/OpenNMT-py/options/train.html#model-embeddings\" rel=\"nofollow\">Source word features</a></li>\n<li><a href=\"http://opennmt.net/OpenNMT-py/im2text.html\" rel=\"nofollow\">Image-to-text processing</a></li>\n<li><a href=\"http://opennmt.net/OpenNMT-py/speech2text.html\" rel=\"nofollow\">Speech-to-text processing</a></li>\n<li><a href=\"http://opennmt.net/OpenNMT-py/options/train.html#logging\" rel=\"nofollow\">TensorBoard logging</a></li>\n<li><a href=\"http://opennmt.net/OpenNMT-py/FAQ.html##do-you-support-multi-gpu\" rel=\"nofollow\">Multi-GPU training</a></li>\n<li><a href=\"http://opennmt.net/OpenNMT-py/options/preprocess.html\" rel=\"nofollow\">Data preprocessing</a></li>\n<li><a href=\"http://opennmt.net/OpenNMT-py/options/translate.html\" rel=\"nofollow\">Inference (translation) with batching and beam search</a></li>\n<li>Inference time loss functions.</li>\n<li>[Conv2Conv convolution model]</li>\n<li>SRU \"RNNs faster than CNN\" paper</li>\n<li>Mixed-precision training with <a href=\"https://github.com/NVIDIA/apex\" rel=\"nofollow\">APEX</a>, optimized on <a href=\"https://developer.nvidia.com/tensor-cores\" rel=\"nofollow\">Tensor Cores</a></li>\n</ul>\n<h2>Quickstart</h2>\n<p><a href=\"http://opennmt.net/OpenNMT-py/\" rel=\"nofollow\">Full Documentation</a></p>\n<h3>Step 1: Preprocess the data</h3>\n<pre>onmt_preprocess -train_src data/src-train.txt -train_tgt data/tgt-train.txt -valid_src data/src-val.txt -valid_tgt data/tgt-val.txt -save_data data/demo\n</pre>\n<p>We will be working with some example data in <code>data/</code> folder.</p>\n<p>The data consists of parallel source (<code>src</code>) and target (<code>tgt</code>) data containing one sentence per line with tokens separated by a space:</p>\n<ul>\n<li><code>src-train.txt</code></li>\n<li><code>tgt-train.txt</code></li>\n<li><code>src-val.txt</code></li>\n<li><code>tgt-val.txt</code></li>\n</ul>\n<p>Validation files are required and used to evaluate the convergence of the training. It usually contains no more than 5000 sentences.</p>\n<p>After running the preprocessing, the following files are generated:</p>\n<ul>\n<li><code>demo.train.pt</code>: serialized PyTorch file containing training data</li>\n<li><code>demo.valid.pt</code>: serialized PyTorch file containing validation data</li>\n<li><code>demo.vocab.pt</code>: serialized PyTorch file containing vocabulary data</li>\n</ul>\n<p>Internally the system never touches the words themselves, but uses these indices.</p>\n<h3>Step 2: Train the model</h3>\n<pre>onmt_train -data data/demo -save_model demo-model\n</pre>\n<p>The main train command is quite simple. Minimally it takes a data file\nand a save file.  This will run the default model, which consists of a\n2-layer LSTM with 500 hidden units on both the encoder/decoder.\nIf you want to train on GPU, you need to set, as an example:\n<code>CUDA_VISIBLE_DEVICES=1,3</code>\n<code>-world_size 2 -gpu_ranks 0 1</code> to use (say) GPU 1 and 3 on this node only.\nTo know more about distributed training on single or multi nodes, read the FAQ section.</p>\n<h3>Step 3: Translate</h3>\n<pre>onmt_translate -model demo-model_acc_XX.XX_ppl_XXX.XX_eX.pt -src data/src-test.txt -output pred.txt -replace_unk -verbose\n</pre>\n<p>Now you have a model which you can use to predict on new data. We do this by running beam search. This will output predictions into <code>pred.txt</code>.</p>\n<p>!!! note \"Note\"\nThe predictions are going to be quite terrible, as the demo dataset is small. Try running on some larger datasets! For example you can download millions of parallel sentences for <a href=\"http://www.statmt.org/wmt16/translation-task.html\" rel=\"nofollow\">translation</a> or <a href=\"https://github.com/harvardnlp/sent-summary\" rel=\"nofollow\">summarization</a>.</p>\n<h2>Alternative: Run on FloydHub</h2>\n<p><a href=\"https://floydhub.com/run?template=https://github.com/OpenNMT/OpenNMT-py\" rel=\"nofollow\"><img alt=\"Run on FloydHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0f1169a5821fe0338bbe90a938bbd8a30d84dae/68747470733a2f2f7374617469632e666c6f79646875622e636f6d2f627574746f6e2f627574746f6e2e737667\"></a></p>\n<p>Click this button to open a Workspace on <a href=\"https://www.floydhub.com/?utm_medium=readme&amp;utm_source=opennmt-py&amp;utm_campaign=jul_2018\" rel=\"nofollow\">FloydHub</a> for training/testing your code.</p>\n<h2>Pretrained embeddings (e.g. GloVe)</h2>\n<p>Please see the FAQ: <a href=\"http://opennmt.net/OpenNMT-py/FAQ.html#how-do-i-use-pretrained-embeddings-e-g-glove\" rel=\"nofollow\">How to use GloVe pre-trained embeddings in OpenNMT-py</a></p>\n<h2>Pretrained Models</h2>\n<p>The following pretrained models can be downloaded and used with translate.py.</p>\n<p><a href=\"http://opennmt.net/Models-py/\" rel=\"nofollow\">http://opennmt.net/Models-py/</a></p>\n<h2>Acknowledgements</h2>\n<p>OpenNMT-py is run as a collaborative open-source project.\nThe original code was written by <a href=\"http://github.com/adamlerer\" rel=\"nofollow\">Adam Lerer</a> (NYC) to reproduce OpenNMT-Lua using Pytorch.</p>\n<p>Major contributors are:\n<a href=\"https://github.com/srush\" rel=\"nofollow\">Sasha Rush</a> (Cambridge, MA)\n<a href=\"https://github.com/vince62s\" rel=\"nofollow\">Vincent Nguyen</a> (Ubiqus)\n<a href=\"http://github.com/bpopeters\" rel=\"nofollow\">Ben Peters</a> (Lisbon)\n<a href=\"https://github.com/sebastianGehrmann\" rel=\"nofollow\">Sebastian Gehrmann</a> (Harvard NLP)\n<a href=\"https://github.com/da03\" rel=\"nofollow\">Yuntian Deng</a> (Harvard NLP)\n<a href=\"https://github.com/guillaumekln\" rel=\"nofollow\">Guillaume Klein</a> (Systran)\n<a href=\"https://github.com/pltrdy\" rel=\"nofollow\">Paul Tardy</a> (Ubiqus / Lium)\n<a href=\"https://github.com/francoishernandez\" rel=\"nofollow\">Fran\u00e7ois Hernandez</a> (Ubiqus)\n<a href=\"http://github.com/jianyuzhan\" rel=\"nofollow\">Jianyu Zhan</a> (Shanghai)\n[Dylan Flaute](<a href=\"http://github.com/flauted\" rel=\"nofollow\">http://github.com/flauted</a> (University of Dayton)\nand more !</p>\n<p>OpenNMT-py belongs to the OpenNMT project along with OpenNMT-Lua and OpenNMT-tf.</p>\n<h2>Citation</h2>\n<p><a href=\"https://arxiv.org/pdf/1805.11462\" rel=\"nofollow\">OpenNMT: Neural Machine Translation Toolkit</a></p>\n<p><a href=\"https://doi.org/10.18653/v1/P17-4012\" rel=\"nofollow\">OpenNMT technical report</a></p>\n<pre><code>@inproceedings{opennmt,\n  author    = {Guillaume Klein and\n               Yoon Kim and\n               Yuntian Deng and\n               Jean Senellart and\n               Alexander M. Rush},\n  title     = {Open{NMT}: Open-Source Toolkit for Neural Machine Translation},\n  booktitle = {Proc. ACL},\n  year      = {2017},\n  url       = {https://doi.org/10.18653/v1/P17-4012},\n  doi       = {10.18653/v1/P17-4012}\n}\n</code></pre>\n\n          </div>"}, "last_serial": 6848496, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "e5a39e968796249fe3b5c6f5cce2460c", "sha256": "2e0f04297450fdc0484cd280c31eec86560572079910f09123ef91ada8923222"}, "downloads": -1, "filename": "OpenNMT_py-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e5a39e968796249fe3b5c6f5cce2460c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 181360, "upload_time": "2019-12-13T17:37:32", "upload_time_iso_8601": "2019-12-13T17:37:32.539189Z", "url": "https://files.pythonhosted.org/packages/b7/8d/77fe5b3bf8a0bf6a900158f263f8de0f665a5355d1b109e617150b88181a/OpenNMT_py-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4eaed92a41557491cc9523f2620debed", "sha256": "46849e87b79d5dfef139004fc6c2ddf5bef679df3f558f47fd9f629f0d565fc8"}, "downloads": -1, "filename": "OpenNMT-py-1.0.0.tar.gz", "has_sig": false, "md5_digest": "4eaed92a41557491cc9523f2620debed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 142279, "upload_time": "2019-12-13T17:37:34", "upload_time_iso_8601": "2019-12-13T17:37:34.194200Z", "url": "https://files.pythonhosted.org/packages/ad/8a/f78f409e47ba3e909a6bc6491a48527923d5c72f4bce2fe93ca8cae321a3/OpenNMT-py-1.0.0.tar.gz", "yanked": false}], "1.0.0rc1": [{"comment_text": "", "digests": {"md5": "c5619c98d66317c03d3a5f9b2ca419ec", "sha256": "31f1488c23238911da2dc0c7d31faa8c296303d9130c81d16e15b9f8a3d7d152"}, "downloads": -1, "filename": "OpenNMT_py-1.0.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "c5619c98d66317c03d3a5f9b2ca419ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 179658, "upload_time": "2019-10-02T08:16:45", "upload_time_iso_8601": "2019-10-02T08:16:45.974277Z", "url": "https://files.pythonhosted.org/packages/d5/ab/0f5223cb441d33cc807fd021c60266d27054be9599d3464c1a016063381c/OpenNMT_py-1.0.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "679b6826d7ae91aef3eed6338aa7837b", "sha256": "1d73c746a171364f93d60cd02f328ef1046039ff8566cbafb8344ba610c2fd4a"}, "downloads": -1, "filename": "OpenNMT-py-1.0.0rc1.tar.gz", "has_sig": false, "md5_digest": "679b6826d7ae91aef3eed6338aa7837b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 143879, "upload_time": "2019-10-02T08:16:49", "upload_time_iso_8601": "2019-10-02T08:16:49.148368Z", "url": "https://files.pythonhosted.org/packages/46/65/6dc4449f0218e43e9f06eebad35f29aa36d04108192ecf270b93858bd6f4/OpenNMT-py-1.0.0rc1.tar.gz", "yanked": false}], "1.0.0rc2": [{"comment_text": "", "digests": {"md5": "b9fae2f86075e60cc3b544eaaf251c36", "sha256": "ae712a8f348eaf499f0e85dde527782d82d704f8b4d8629e4764c0eddc0cd8da"}, "downloads": -1, "filename": "OpenNMT_py-1.0.0rc2-py3-none-any.whl", "has_sig": false, "md5_digest": "b9fae2f86075e60cc3b544eaaf251c36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 179704, "upload_time": "2019-10-14T12:52:16", "upload_time_iso_8601": "2019-10-14T12:52:16.460977Z", "url": "https://files.pythonhosted.org/packages/13/2c/48bf5505f676acc2b1cf2735c4f4efe41c40f5f562106795158db2a5b08b/OpenNMT_py-1.0.0rc2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "304b7c63d0a8297f02c3f8e82ac58ecc", "sha256": "4205e964ab6b88e6de611d582adef7d43d5b60e0dc0b5078f723b726b4068d98"}, "downloads": -1, "filename": "OpenNMT-py-1.0.0rc2.tar.gz", "has_sig": false, "md5_digest": "304b7c63d0a8297f02c3f8e82ac58ecc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 143888, "upload_time": "2019-10-14T12:52:18", "upload_time_iso_8601": "2019-10-14T12:52:18.761941Z", "url": "https://files.pythonhosted.org/packages/9c/ec/7da121157f09be02c9fca4ada53da47c2954d8f5a9df46a2d4360fad0c3e/OpenNMT-py-1.0.0rc2.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "b71bfe401b192c72d298adb45e41f823", "sha256": "8d09d992beff4c0109353e651e15fdc6ccd60c9ba38e8c31fd6ef869ea9ccaef"}, "downloads": -1, "filename": "OpenNMT_py-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b71bfe401b192c72d298adb45e41f823", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 183011, "upload_time": "2020-02-17T16:09:16", "upload_time_iso_8601": "2020-02-17T16:09:16.371636Z", "url": "https://files.pythonhosted.org/packages/72/2f/b36a2348065bde50c169539c52622dd97b3ec3c1fc8c96baec04c09285df/OpenNMT_py-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8062a440322f91a46f62bad93e1ec48a", "sha256": "fd4dc928c7f8db604e4943595b22a3b85490d30da9be662caf0872b62b486701"}, "downloads": -1, "filename": "OpenNMT-py-1.0.1.tar.gz", "has_sig": false, "md5_digest": "8062a440322f91a46f62bad93e1ec48a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 148272, "upload_time": "2020-02-17T16:09:18", "upload_time_iso_8601": "2020-02-17T16:09:18.017660Z", "url": "https://files.pythonhosted.org/packages/1f/37/b2eb6445324933d04c1a65014443caf6218e85c19ca4637bc12f2bee9bc3/OpenNMT-py-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "6f3a2d7cdabcf3c3034ba1311497873d", "sha256": "32421cc9adfdaf53f9ad47378c9fdc677ddaedad42600e5aff30de2557e860a1"}, "downloads": -1, "filename": "OpenNMT_py-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6f3a2d7cdabcf3c3034ba1311497873d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 183052, "upload_time": "2020-03-05T14:59:46", "upload_time_iso_8601": "2020-03-05T14:59:46.117534Z", "url": "https://files.pythonhosted.org/packages/b3/1c/48faee4ea981aa96292d03cfd5a43f415ae03309db9ab4f625dd4aa6dc71/OpenNMT_py-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f6dafabe592d1bd4e6bac5c8b4b38d4", "sha256": "8a25912c039579c2af37dde930266b6dd78efdf1fb6130bc1e6a83ae7a874de2"}, "downloads": -1, "filename": "OpenNMT-py-1.0.2.tar.gz", "has_sig": false, "md5_digest": "7f6dafabe592d1bd4e6bac5c8b4b38d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 148382, "upload_time": "2020-03-05T14:59:48", "upload_time_iso_8601": "2020-03-05T14:59:48.883617Z", "url": "https://files.pythonhosted.org/packages/b5/43/dcf082f19f10c3cb8e8d930edc10bf464ec809598b153ff7bcd483419832/OpenNMT-py-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "84aa8134bac346648aa2489f1ff21575", "sha256": "d8f6fae51bb4cd62da855384c0586292356408bd3b82aa875a1b61fea9075103"}, "downloads": -1, "filename": "OpenNMT_py-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "84aa8134bac346648aa2489f1ff21575", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 188995, "upload_time": "2020-03-19T15:00:03", "upload_time_iso_8601": "2020-03-19T15:00:03.516781Z", "url": "https://files.pythonhosted.org/packages/e6/bd/6fcb29225394ba87273c0676557d78f2aad9112d906df9d82730c6ddd0f3/OpenNMT_py-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "46162263375a73ef578aaf35484495cf", "sha256": "8e8bf477b904a3e9791402aa9391a2d1b4f85e90c49983540dc47e14e8f95537"}, "downloads": -1, "filename": "OpenNMT-py-1.1.0.tar.gz", "has_sig": false, "md5_digest": "46162263375a73ef578aaf35484495cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 154154, "upload_time": "2020-03-19T15:00:05", "upload_time_iso_8601": "2020-03-19T15:00:05.473189Z", "url": "https://files.pythonhosted.org/packages/a0/29/d02bc19f04fb5d41995417744e0ef41cff96dfd8b423032ee9a537198abf/OpenNMT-py-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "358436880750b40c987314696942be59", "sha256": "cd9b98146418a4cbdff94eb43524c122a669d95fb6cd91423636c5f4189eae49"}, "downloads": -1, "filename": "OpenNMT_py-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "358436880750b40c987314696942be59", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 189005, "upload_time": "2020-03-20T09:01:28", "upload_time_iso_8601": "2020-03-20T09:01:28.136850Z", "url": "https://files.pythonhosted.org/packages/7e/c7/b3d9bf9a6a681b10c00aa897650f79d4e7ad8a80317c5cddb6a3ef43540c/OpenNMT_py-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8eb429e7176092448ef1558eadfed762", "sha256": "bbe3b69192094d69209e8892f1d617f9d0880fc11f92794690a4dfe31db15a11"}, "downloads": -1, "filename": "OpenNMT-py-1.1.1.tar.gz", "has_sig": false, "md5_digest": "8eb429e7176092448ef1558eadfed762", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 154211, "upload_time": "2020-03-20T09:01:29", "upload_time_iso_8601": "2020-03-20T09:01:29.992218Z", "url": "https://files.pythonhosted.org/packages/1c/7c/4c73d1b46d4cd14d77e5e26862723a63d7709c1acecfdf616c006a5f1125/OpenNMT-py-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "358436880750b40c987314696942be59", "sha256": "cd9b98146418a4cbdff94eb43524c122a669d95fb6cd91423636c5f4189eae49"}, "downloads": -1, "filename": "OpenNMT_py-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "358436880750b40c987314696942be59", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 189005, "upload_time": "2020-03-20T09:01:28", "upload_time_iso_8601": "2020-03-20T09:01:28.136850Z", "url": "https://files.pythonhosted.org/packages/7e/c7/b3d9bf9a6a681b10c00aa897650f79d4e7ad8a80317c5cddb6a3ef43540c/OpenNMT_py-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8eb429e7176092448ef1558eadfed762", "sha256": "bbe3b69192094d69209e8892f1d617f9d0880fc11f92794690a4dfe31db15a11"}, "downloads": -1, "filename": "OpenNMT-py-1.1.1.tar.gz", "has_sig": false, "md5_digest": "8eb429e7176092448ef1558eadfed762", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 154211, "upload_time": "2020-03-20T09:01:29", "upload_time_iso_8601": "2020-03-20T09:01:29.992218Z", "url": "https://files.pythonhosted.org/packages/1c/7c/4c73d1b46d4cd14d77e5e26862723a63d7709c1acecfdf616c006a5f1125/OpenNMT-py-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:44 2020"}