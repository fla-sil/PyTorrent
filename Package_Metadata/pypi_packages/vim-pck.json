{"info": {"author": "Nicolas D\u00e9bonnaire", "author_email": "nico.debo@openmailbox.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: Unix", "Programming Language :: Python :: 3.6", "Topic :: Utilities"], "description": "Vim Pck\n=======\n\n|Build Status| |Coverage Status| |Pypi|\n\nA command-line tool to manage my vim plugins using the built-in package\nfeature of vim8. (see :help packages)\n\n|install| |list| |upgrade|\n\n\nTable of contents:\n * `Dependencies`_;\n * `Installation`_;\n * `How to use`_;\n * `Related projects`_;\n * `Note`_;\n * `License`_.\n\nDependencies\n------------\n\n-  git\n-  python 3.6\n\nInstallation\n------------\n\nI like to install python command line programs in their own virtual\nenvironment to not clutter the system wide package directory. ``pipsi``\nmake it very conveniant to do so by automatically creating the venv and\nsymlinking scripts to ``~/.local/bin``. If you don't use ``pipsi``,\nyou're missing out. Here are `installation\ninstructions <https://github.com/mitsuhiko/pipsi#readme>`_.\n\nSimply run:\n\n.. code:: shell\n\n    $ pipsi install vim-pck\n\nAlternatively, with pip:\n\n.. code:: shell\n\n    $ pip install vim-pck\n\nHow to use\n----------\n\nConfiguration file\n~~~~~~~~~~~~~~~~~~\n\nThe main configuration file where the vim packages are specified. It's\ndefault location follow the `XDG specification <https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html>`_\nthat is ``$XDG_HOME_CONFIG/vimpck/config`` or\n``~/.config/vimpck/config`` if ``XDG_HOME_CONFIG`` is not set.\n\n.. code:: dosini\n\n    [SETTING]\n        # The built in package directory. See :help packages\n        pack_path=~/.vim/pack\n        # pack_path= ~/.local/share/nvim/site/pack for neovim\n\n    [REPOSITORY]\n        [[https://github.com/tpope/vim-commentary]]\n            package = common\n            type = start\n            freeze = True # Don't update vim-commentary when launching vimpck upgrade\n\n        [[https://github.com/tpope/vim-dispatch]]\n        # default location pack_path/vimpck/start/vim-dispatch\n\n        [[https://github.com/mustache/vim-mustache-handlebars]]\n            package = filetype\n            type = start\n\n        [[https://github.com/altercation/vim-colors-solarized]]\n            package = colors\n            type = start\n\nThen run ``vimpck install`` to clone each remote repository in the\ncorrect package location. For exemple, ``vim-commentary`` -->\n``~/.vim/pack/common/start/vim-commentary``\n\nFor neovim the package path should be set to\n``~/.local/share/nvim/site/pack``\n\n+--------------+-------------------+\n| Option       | default value     |\n+==============+===================+\n| pack\\_path   | ``~/.vim/pack``   |\n+--------------+-------------------+\n| package      | ``vimpck``        |\n+--------------+-------------------+\n| type         | ``start``         |\n+--------------+-------------------+\n| freeze       | ``False``         |\n+--------------+-------------------+\n\nUsage\n~~~~~\n\nTo use it (see ``vimpck --help``):\n\n-  ``$ vimpck install`` : install plugins from the configuration file\n-  ``$ vimpck ls`` : list all plugins\n-  ``$ vimpck ls --start`` : list plugins that are automatically loaded\n-  ``$ vimpck ls --opt`` : list plugins that have to be loaded manually\n-  ``$ vimpck upgrade`` : update all plugins that are not freezed\n-  ``$ vimpck upgrade <plug>...`` : only update ``<plug>`` plugin. The\n   plugin have to be specified using the following pattern\n   ``package/type/plugin``. You can easily complete the ``<plug>`` with\n   the zsh completion script.\n-  ``vimpck rm <plug>...`` : remove one or more ``<plug>``. Support zsh\n   completion.\n-  ``vimpck rm -r <plug>...`` : remove one or more ``<plug>`` and also\n   remove the corresponding section from the configuration file.\n-  ``vimpck clean`` : remove unused plugins\n\nEnvironment variable\n~~~~~~~~~~~~~~~~~~~~\n\n-  ``VIMPCKRC``: override default configuration location (xdg standard)\n\nExample : ``export VIMPCKRC=/path/to/conf/name``\n\nCompletion\n~~~~~~~~~~\n\nA zsh completion function is provided in the ``completion`` folder of\nthis repository.\n\nTo use it copy ``_vimpck`` somewhere in the ``$fpath`` environment\nvariable of zsh and make sure the completion module of zsh is loaded by\nputting these following lines in your ``.zshrc``:\n\n.. code:: bash\n\n    autoload -U compinit\n    compinit\n\nRelated projects\n----------------\n\n-  `minpac <https://github.com/k-takata/minpac>`_: vim plugin\n-  `infect <https://github.com/csexton/infect>`_: command-line tool\n   build in ruby.\n-  `pack <https://github.com/maralla/pack>`_: command-line tool build\n   in rust.\n-  `vim8-pack <https://github.com/mkarpoff/vim8-pack>`_: command-line\n   tool in bash.\n\nNote\n----\n\n-  Project generated with\n   `cookiecutter-python-cli <https://github.com/nvie/cookiecutter-python-cli>`_\n\nLicense\n-------\n\nMIT license, see the LICENSE file. You can use obfuscator in open source\nprojects and commercial products.\n\n.. _Dependencies: #dependencies\n.. _Installation: #installation\n.. _How to use: #how-to-use\n.. _Related projects: #related-projects\n.. _Note: #note\n.. _License: #license\n\n.. |Build Status| image:: https://travis-ci.org/nicodebo/vim-pck.svg?branch=master\n   :target: https://travis-ci.org/nicodebo/vim-pck\n.. |Coverage Status| image:: https://coveralls.io/repos/github/nicodebo/vim-pck/badge.svg?branch=master\n   :target: https://coveralls.io/github/nicodebo/vim-pck?branch=master\n.. |install| image:: screenshot/install.jpg\n.. |list| image:: screenshot/ls.jpg\n.. |upgrade| image:: screenshot/upgrade.jpg\n.. |Pypi| image:: https://img.shields.io/pypi/v/vim-pck.svg?style=flat\n   :target: https://pypi.python.org/pypi/vim-pck\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nicodebo/vim-pck", "keywords": "vim,nvim,neovim,command-line,cli,package", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "vim-pck", "package_url": "https://pypi.org/project/vim-pck/", "platform": "", "project_url": "https://pypi.org/project/vim-pck/", "project_urls": {"Homepage": "https://github.com/nicodebo/vim-pck"}, "release_url": "https://pypi.org/project/vim-pck/0.1.0/", "requires_dist": ["click", "configobj"], "requires_python": ">=3.6", "summary": "command-line (n)vim package manager", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/nicodebo/vim-pck\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2ace5dbabdbd715a30fc586ef143ebc08d9daeef/68747470733a2f2f7472617669732d63692e6f72672f6e69636f6465626f2f76696d2d70636b2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/nicodebo/vim-pck?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/73a3b73e38c631f5971195f9b2dd0985e4e7414f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6e69636f6465626f2f76696d2d70636b2f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/vim-pck\" rel=\"nofollow\"><img alt=\"Pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b383902cb50620b71abbc8b4c94dbcf78ec88d35/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f76696d2d70636b2e7376673f7374796c653d666c6174\"></a></p>\n<p>A command-line tool to manage my vim plugins using the built-in package\nfeature of vim8. (see :help packages)</p>\n<p><img alt=\"install\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c153d40941739f95368531c09bfc2d6f2459ef3a/73637265656e73686f742f696e7374616c6c2e6a7067\"> <img alt=\"list\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9661c64ca744f82712728fcc7d42d3d0effb917b/73637265656e73686f742f6c732e6a7067\"> <img alt=\"upgrade\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa69b91de2e9fa22d597d007233baa6c335dae79/73637265656e73686f742f757067726164652e6a7067\"></p>\n<dl>\n<dt>Table of contents:</dt>\n<dd><ul>\n<li><a href=\"#dependencies\" rel=\"nofollow\">Dependencies</a>;</li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a>;</li>\n<li><a href=\"#how-to-use\" rel=\"nofollow\">How to use</a>;</li>\n<li><a href=\"#related-projects\" rel=\"nofollow\">Related projects</a>;</li>\n<li><a href=\"#note\" rel=\"nofollow\">Note</a>;</li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a>.</li>\n</ul>\n</dd>\n</dl>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>git</li>\n<li>python 3.6</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>I like to install python command line programs in their own virtual\nenvironment to not clutter the system wide package directory. <tt>pipsi</tt>\nmake it very conveniant to do so by automatically creating the venv and\nsymlinking scripts to <tt><span class=\"pre\">~/.local/bin</span></tt>. If you don\u2019t use <tt>pipsi</tt>,\nyou\u2019re missing out. Here are <a href=\"https://github.com/mitsuhiko/pipsi#readme\" rel=\"nofollow\">installation\ninstructions</a>.</p>\n<p>Simply run:</p>\n<pre>$ pipsi install vim-pck\n</pre>\n<p>Alternatively, with pip:</p>\n<pre>$ pip install vim-pck\n</pre>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<div id=\"configuration-file\">\n<h3>Configuration file</h3>\n<p>The main configuration file where the vim packages are specified. It\u2019s\ndefault location follow the <a href=\"https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html\" rel=\"nofollow\">XDG specification</a>\nthat is <tt>$XDG_HOME_CONFIG/vimpck/config</tt> or\n<tt><span class=\"pre\">~/.config/vimpck/config</span></tt> if <tt>XDG_HOME_CONFIG</tt> is not set.</p>\n<pre><span class=\"k\">[SETTING]</span>\n    <span class=\"c1\"># The built in package directory. See :help packages</span>\n    <span class=\"na\">pack_path</span><span class=\"o\">=</span><span class=\"s\">~/.vim/pack\n    # pack_path= ~/.local/share/nvim/site/pack for neovim</span>\n\n<span class=\"k\">[REPOSITORY]</span>\n    <span class=\"k\">[[https://github.com/tpope/vim-commentary]]</span>\n        <span class=\"na\">package</span> <span class=\"o\">=</span> <span class=\"s\">common\n        type = start\n        freeze = True # Don't update vim-commentary when launching vimpck upgrade</span>\n\n    <span class=\"k\">[[https://github.com/tpope/vim-dispatch]]</span>\n    <span class=\"c1\"># default location pack_path/vimpck/start/vim-dispatch</span>\n\n    <span class=\"k\">[[https://github.com/mustache/vim-mustache-handlebars]]</span>\n        <span class=\"na\">package</span> <span class=\"o\">=</span> <span class=\"s\">filetype\n        type = start</span>\n\n    <span class=\"k\">[[https://github.com/altercation/vim-colors-solarized]]</span>\n        <span class=\"na\">package</span> <span class=\"o\">=</span> <span class=\"s\">colors\n        type = start</span>\n</pre>\n<p>Then run <tt>vimpck install</tt> to clone each remote repository in the\ncorrect package location. For exemple, <tt><span class=\"pre\">vim-commentary</span></tt> \u2013&gt;\n<tt><span class=\"pre\">~/.vim/pack/common/start/vim-commentary</span></tt></p>\n<p>For neovim the package path should be set to\n<tt><span class=\"pre\">~/.local/share/nvim/site/pack</span></tt></p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Option</th>\n<th>default value</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>pack_path</td>\n<td><tt><span class=\"pre\">~/.vim/pack</span></tt></td>\n</tr>\n<tr><td>package</td>\n<td><tt>vimpck</tt></td>\n</tr>\n<tr><td>type</td>\n<td><tt>start</tt></td>\n</tr>\n<tr><td>freeze</td>\n<td><tt>False</tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>To use it (see <tt>vimpck <span class=\"pre\">--help</span></tt>):</p>\n<ul>\n<li><tt>$ vimpck install</tt> : install plugins from the configuration file</li>\n<li><tt>$ vimpck ls</tt> : list all plugins</li>\n<li><tt>$ vimpck ls <span class=\"pre\">--start</span></tt> : list plugins that are automatically loaded</li>\n<li><tt>$ vimpck ls <span class=\"pre\">--opt</span></tt> : list plugins that have to be loaded manually</li>\n<li><tt>$ vimpck upgrade</tt> : update all plugins that are not freezed</li>\n<li><tt>$ vimpck upgrade <span class=\"pre\">&lt;plug&gt;...</span></tt> : only update <tt>&lt;plug&gt;</tt> plugin. The\nplugin have to be specified using the following pattern\n<tt>package/type/plugin</tt>. You can easily complete the <tt>&lt;plug&gt;</tt> with\nthe zsh completion script.</li>\n<li><tt>vimpck rm <span class=\"pre\">&lt;plug&gt;...</span></tt> : remove one or more <tt>&lt;plug&gt;</tt>. Support zsh\ncompletion.</li>\n<li><tt>vimpck rm <span class=\"pre\">-r</span> <span class=\"pre\">&lt;plug&gt;...</span></tt> : remove one or more <tt>&lt;plug&gt;</tt> and also\nremove the corresponding section from the configuration file.</li>\n<li><tt>vimpck clean</tt> : remove unused plugins</li>\n</ul>\n</div>\n<div id=\"environment-variable\">\n<h3>Environment variable</h3>\n<ul>\n<li><tt>VIMPCKRC</tt>: override default configuration location (xdg standard)</li>\n</ul>\n<p>Example : <tt>export <span class=\"pre\">VIMPCKRC=/path/to/conf/name</span></tt></p>\n</div>\n<div id=\"completion\">\n<h3>Completion</h3>\n<p>A zsh completion function is provided in the <tt>completion</tt> folder of\nthis repository.</p>\n<p>To use it copy <tt>_vimpck</tt> somewhere in the <tt>$fpath</tt> environment\nvariable of zsh and make sure the completion module of zsh is loaded by\nputting these following lines in your <tt>.zshrc</tt>:</p>\n<pre>autoload -U compinit\ncompinit\n</pre>\n</div>\n</div>\n<div id=\"related-projects\">\n<h2>Related projects</h2>\n<ul>\n<li><a href=\"https://github.com/k-takata/minpac\" rel=\"nofollow\">minpac</a>: vim plugin</li>\n<li><a href=\"https://github.com/csexton/infect\" rel=\"nofollow\">infect</a>: command-line tool\nbuild in ruby.</li>\n<li><a href=\"https://github.com/maralla/pack\" rel=\"nofollow\">pack</a>: command-line tool build\nin rust.</li>\n<li><a href=\"https://github.com/mkarpoff/vim8-pack\" rel=\"nofollow\">vim8-pack</a>: command-line\ntool in bash.</li>\n</ul>\n</div>\n<div id=\"note\">\n<h2>Note</h2>\n<ul>\n<li>Project generated with\n<a href=\"https://github.com/nvie/cookiecutter-python-cli\" rel=\"nofollow\">cookiecutter-python-cli</a></li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT license, see the LICENSE file. You can use obfuscator in open source\nprojects and commercial products.</p>\n</div>\n\n          </div>"}, "last_serial": 3178834, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "266406117ee56e654be40aded0e96c3b", "sha256": "8653b03b9f3ff55aada3aa249df6a570628fc9269d7b2d06fd508b1d438cac4b"}, "downloads": -1, "filename": "vim_pck-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "266406117ee56e654be40aded0e96c3b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 23067, "upload_time": "2017-09-16T15:09:53", "upload_time_iso_8601": "2017-09-16T15:09:53.238833Z", "url": "https://files.pythonhosted.org/packages/b2/8c/13319c0d2d4785356c13562cabd1ef33f5227e47e3c12c2b1aca208ae645/vim_pck-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ee075ac77a805b1df51faede4e1ceba", "sha256": "036e658e89e5cd38a799405c48661b17dfd60ba3183065721ad747f65fe2df54"}, "downloads": -1, "filename": "vim-pck-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4ee075ac77a805b1df51faede4e1ceba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 153273, "upload_time": "2017-09-16T15:09:56", "upload_time_iso_8601": "2017-09-16T15:09:56.443456Z", "url": "https://files.pythonhosted.org/packages/29/e1/6da65c43c40c30d85e95955f7cf696f533aaa4caf727a371a46ed8998752/vim-pck-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "266406117ee56e654be40aded0e96c3b", "sha256": "8653b03b9f3ff55aada3aa249df6a570628fc9269d7b2d06fd508b1d438cac4b"}, "downloads": -1, "filename": "vim_pck-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "266406117ee56e654be40aded0e96c3b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 23067, "upload_time": "2017-09-16T15:09:53", "upload_time_iso_8601": "2017-09-16T15:09:53.238833Z", "url": "https://files.pythonhosted.org/packages/b2/8c/13319c0d2d4785356c13562cabd1ef33f5227e47e3c12c2b1aca208ae645/vim_pck-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ee075ac77a805b1df51faede4e1ceba", "sha256": "036e658e89e5cd38a799405c48661b17dfd60ba3183065721ad747f65fe2df54"}, "downloads": -1, "filename": "vim-pck-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4ee075ac77a805b1df51faede4e1ceba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 153273, "upload_time": "2017-09-16T15:09:56", "upload_time_iso_8601": "2017-09-16T15:09:56.443456Z", "url": "https://files.pythonhosted.org/packages/29/e1/6da65c43c40c30d85e95955f7cf696f533aaa4caf727a371a46ed8998752/vim-pck-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:36:00 2020"}