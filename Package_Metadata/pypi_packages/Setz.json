{"info": {"author": "Huan Do", "author_email": "doboy0@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Setz\n====\n\nSetz is a command line utility used to run set operations on files using python syntax\n\nUsage\n-----\n  `setz \"query\" [a.txt b.txt ..]`\n\nPossible Queries\n----------------\n  Set Membership. Test if an element belongs to a set.\n    `\"'test' in a\"`\n\n  Set Equality. Test if two sets contain the same elements.\n    `\"a == b\"`\n\n  Set Cardinality. Return the number of elements in the set.\n    `\"len(a)\"`\n\n  Subset Test. Test if a given set is a subset of another set.\n    `\"a < b\"`\n\n  Set Union. Find union of two sets.\n    `\"a | b\"`\n\n  Set Intersection. Find intersection of two sets.\n    `\"a & b\"`\n\n  Set Complement. Given two sets A and B, find all elements in A that are not in B.\n    `\"a - b\"`\n\n  Set Symmetric Difference. Find symmetric difference of two sets.\n    `\"a ^ b\"`\n\n  Power Set. Generate all subsets of a set.\n    `\"power_set(a)\"`\n\n  Set Cartesian Product. Find A x B.\n    `\"product(a, b, ..)\"`\n\n  Disjoint Set Test. Test if two sets are disjoint.\n    `\"is_disjoint(a, b, ..)\"`\n\n  Empty Set Test. Test if a given set is empty.\n    `\"is_empty(a)\"`\n\n  Minimum. Find the smallest element of a set.\n    `\"max(a)\"`\n\n  Maximum. Find the largest element of a set.\n    `\"min(a)\"`\n\nExamples\n--------\n    > setz '\"foo\" in a' <(echo foo)\n    1\n    > setz 'len(a)' <(echo for bar garply)\n    3\n    > setz 'a < b' <(echo foo bar baz) <(echo foo bar)\n    0\n    > setz 'max(a)' <(echo 9001 10)\n    9001\n    > setz 'is_disjoint(a, b, c)' <(echo foo) <(echo bar)   <(echo baz garply)\n    1\n    > setz 'a | b' <(echo foo) <(echo baz garply)\n    garply\n    foo\n    baz\n    > setz 'product(a, b)' <(echo foo bar) <(echo baz garply)\n    foo, garply\n    foo, baz\n    bar, garply\n    bar, baz\n    > setz 'power_set(a)' <(echo foo bar garply)\n    garply\n    foo\n    garply, foo\n    bar\n    garply, bar\n    foo, bar\n    garply, foo, bar", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Doboy/Setz", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "Setz", "package_url": "https://pypi.org/project/Setz/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Setz/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Doboy/Setz"}, "release_url": "https://pypi.org/project/Setz/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Queries set operators from files using python syntax", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Setz is a command line utility used to run set operations on files using python syntax</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<blockquote>\n<cite>setz \u201cquery\u201d [a.txt b.txt ..]</cite></blockquote>\n</div>\n<div id=\"possible-queries\">\n<h2>Possible Queries</h2>\n<blockquote>\n<dl>\n<dt>Set Membership. Test if an element belongs to a set.</dt>\n<dd><cite>\u201c\u2018test\u2019 in a\u201d</cite></dd>\n<dt>Set Equality. Test if two sets contain the same elements.</dt>\n<dd><cite>\u201ca == b\u201d</cite></dd>\n<dt>Set Cardinality. Return the number of elements in the set.</dt>\n<dd><cite>\u201clen(a)\u201d</cite></dd>\n<dt>Subset Test. Test if a given set is a subset of another set.</dt>\n<dd><cite>\u201ca &lt; b\u201d</cite></dd>\n<dt>Set Union. Find union of two sets.</dt>\n<dd><cite>\u201ca | b\u201d</cite></dd>\n<dt>Set Intersection. Find intersection of two sets.</dt>\n<dd><cite>\u201ca &amp; b\u201d</cite></dd>\n<dt>Set Complement. Given two sets A and B, find all elements in A that are not in B.</dt>\n<dd><cite>\u201ca - b\u201d</cite></dd>\n<dt>Set Symmetric Difference. Find symmetric difference of two sets.</dt>\n<dd><cite>\u201ca ^ b\u201d</cite></dd>\n<dt>Power Set. Generate all subsets of a set.</dt>\n<dd><cite>\u201cpower_set(a)\u201d</cite></dd>\n<dt>Set Cartesian Product. Find A x B.</dt>\n<dd><cite>\u201cproduct(a, b, ..)\u201d</cite></dd>\n<dt>Disjoint Set Test. Test if two sets are disjoint.</dt>\n<dd><cite>\u201cis_disjoint(a, b, ..)\u201d</cite></dd>\n<dt>Empty Set Test. Test if a given set is empty.</dt>\n<dd><cite>\u201cis_empty(a)\u201d</cite></dd>\n<dt>Minimum. Find the smallest element of a set.</dt>\n<dd><cite>\u201cmax(a)\u201d</cite></dd>\n<dt>Maximum. Find the largest element of a set.</dt>\n<dd><cite>\u201cmin(a)\u201d</cite></dd>\n</dl>\n</blockquote>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<blockquote>\n&gt; setz \u2018\u201cfoo\u201d in a\u2019 &lt;(echo foo)\n1\n&gt; setz \u2018len(a)\u2019 &lt;(echo for bar garply)\n3\n&gt; setz \u2018a &lt; b\u2019 &lt;(echo foo bar baz) &lt;(echo foo bar)\n0\n&gt; setz \u2018max(a)\u2019 &lt;(echo 9001 10)\n9001\n&gt; setz \u2018is_disjoint(a, b, c)\u2019 &lt;(echo foo) &lt;(echo bar)   &lt;(echo baz garply)\n1\n&gt; setz \u2018a | b\u2019 &lt;(echo foo) &lt;(echo baz garply)\ngarply\nfoo\nbaz\n&gt; setz \u2018product(a, b)\u2019 &lt;(echo foo bar) &lt;(echo baz garply)\nfoo, garply\nfoo, baz\nbar, garply\nbar, baz\n&gt; setz \u2018power_set(a)\u2019 &lt;(echo foo bar garply)\ngarply\nfoo\ngarply, foo\nbar\ngarply, bar\nfoo, bar\ngarply, foo, bar</blockquote>\n</div>\n\n          </div>"}, "last_serial": 876806, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4b1a370cdddf0fed78e8e20eb24f2fd9", "sha256": "dc5da42a8faad4141b2fb04887e023b5fa7cef01f4a6c23fd73d9f17fe3350eb"}, "downloads": -1, "filename": "Setz-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4b1a370cdddf0fed78e8e20eb24f2fd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2639, "upload_time": "2013-09-30T08:59:52", "upload_time_iso_8601": "2013-09-30T08:59:52.628737Z", "url": "https://files.pythonhosted.org/packages/84/64/772bd35eabe383eae2121de00b73829906fb774fcfda31f2a88ba1dcc767/Setz-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4b1a370cdddf0fed78e8e20eb24f2fd9", "sha256": "dc5da42a8faad4141b2fb04887e023b5fa7cef01f4a6c23fd73d9f17fe3350eb"}, "downloads": -1, "filename": "Setz-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4b1a370cdddf0fed78e8e20eb24f2fd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2639, "upload_time": "2013-09-30T08:59:52", "upload_time_iso_8601": "2013-09-30T08:59:52.628737Z", "url": "https://files.pythonhosted.org/packages/84/64/772bd35eabe383eae2121de00b73829906fb774fcfda31f2a88ba1dcc767/Setz-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:23 2020"}