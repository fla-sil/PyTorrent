{"info": {"author": "Daniel P. Russo", "author_email": "russodanielp@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# CIIProMol\n## ciipro.rutgers.edu\n\n### Outline - \n\n1. From a set of SMILES\n\t* obtain CIDS \n\t* Get bioassays for each compound\n\n2. Concatenate bioassays into a bioprofile\n\t* eliminate bioassays based of number of actives\n\t* remove invivo assays\n\t* remove highly correlated assays\n\n3. Find invitro/invivo correlations\n\t* remove assays based on different stats\n\t* use those stats to find bio nearest neighbors \n\t* find the assays that minimize the difference in activity between target cmp and nn\n\n\nA python class for extending [CIIPro](ciipro.rutgers.edu) functionality.\nCIIProMol looks to extend the [Python rdkit API]\n(http://www.rdkit.org/docs/api/index.html).\nCIIProMol requires several packages (e.g., rdkit, Pandas, Numpy). \nThese dependencies are listed in the file `explicit-spec-file.txt` and \ncan be loaded directly into a new [conda](http://conda.pydata.org/docs/) environment.\n\nUse the following code to install the required Python packages into a \nnew conda environment.\n\n```bash\n$ conda create --name ciipromol --file explicit-spec-file.txt\n```\n\nCIIProMol is broken down into three modules:  \n1) `ciipromol.py`  \n2) `ciiprofiler.py`  \n3) `ciipredictor.py`  \n\n### ciipromol\n\nContains `class CIIProMol`.  A `CIIProMol` object can by instantiated \nwith an rdkit `Mol` object.  \n\n```python \nfrom ciipromol import *\nfrom rdkit import Chem\n\nmol = Chem.MolFromSmiles('CC(=O)OC1=CC=CC=C1C(=O)O')\ncpm = CIIProMol(mol, activity=20.0)\n```\n\nIf `cids=None` (default), all PubChem Compound ID's (CIDs) associated with\nthat structure will be retrieved.  Biological assays associated with those CIDs\ncan be retrieved.\n\n```python\ncpm.GetBioAssays()\n```\n\nIf `attribute=True` (default), the BioAssays can be acccessed as a Pandas DataFrame\nusing the attribute, `cpm.BioAssays`\n\n### ciiprofiler \n\nContains `class CIIProfiler`.  A `CIIProfiler` object can be instantiated by passing \na list of `CIIProMol` objects. \n\n ```python\n ciiprofiler = CIIProfiler([cpm1, cpm2, cmp3])\n ```\n \n The function `MakeBioProfiler()` will concatenate the attributes `cpm1.BioAssays`,\n  `cpm2.BioAssays`, etc., into one matrix.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "ciipromol", "package_url": "https://pypi.org/project/ciipromol/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ciipromol/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/ciipromol/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # CIIProMol<br>## ciipro.rutgers.edu<br><br>### Outline - <br><br>1. From a set of SMILES<br>\t* obtain CIDS <br>\t* Get bioassays for each compound<br><br>2. Concatenate bioassays into a bioprofile<br>\t* eliminate bioassays based of number of actives<br>\t* remove invivo assays<br>\t* remove highly correlated assays<br><br>3. Find invitro/invivo correlations<br>\t* remove assays based on different stats<br>\t* use those stats to find bio nearest neighbors <br>\t* find the assays that minimize the difference in activity between target cmp and nn<br><br><br>A python class for extending [CIIPro](ciipro.rutgers.edu) functionality.<br>CIIProMol looks to extend the [Python rdkit API]<br>(http://www.rdkit.org/docs/api/index.html).<br>CIIProMol requires several packages (e.g., rdkit, Pandas, Numpy). <br>These dependencies are listed in the file `explicit-spec-file.txt` and <br>can be loaded directly into a new [conda](http://conda.pydata.org/docs/) environment.<br><br>Use the following code to install the required Python packages into a <br>new conda environment.<br><br>```bash<br>$ conda create --name ciipromol --file explicit-spec-file.txt<br>```<br><br>CIIProMol is broken down into three modules:  <br>1) `ciipromol.py`  <br>2) `ciiprofiler.py`  <br>3) `ciipredictor.py`  <br><br>### ciipromol<br><br>Contains `class CIIProMol`.  A `CIIProMol` object can by instantiated <br>with an rdkit `Mol` object.  <br><br>```python <br>from ciipromol import *<br>from rdkit import Chem<br><br>mol = Chem.MolFromSmiles('CC(=O)OC1=CC=CC=C1C(=O)O')<br>cpm = CIIProMol(mol, activity=20.0)<br>```<br><br>If `cids=None` (default), all PubChem Compound ID's (CIDs) associated with<br>that structure will be retrieved.  Biological assays associated with those CIDs<br>can be retrieved.<br><br>```python<br>cpm.GetBioAssays()<br>```<br><br>If `attribute=True` (default), the BioAssays can be acccessed as a Pandas DataFrame<br>using the attribute, `cpm.BioAssays`<br><br>### ciiprofiler <br><br>Contains `class CIIProfiler`.  A `CIIProfiler` object can be instantiated by passing <br>a list of `CIIProMol` objects. <br><br> ```python<br> ciiprofiler = CIIProfiler([cpm1, cpm2, cmp3])<br> ```<br> <br> The function `MakeBioProfiler()` will concatenate the attributes `cpm1.BioAssays`,<br>  `cpm2.BioAssays`, etc., into one matrix.\n          </div>"}, "last_serial": 2467547, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6fa078280e5b56473406423a88875c44", "sha256": "13f8ae06ff3e7c3b0a760d610d969a95d0ee89af662730038bde4de78552f039"}, "downloads": -1, "filename": "ciipromol-0.1.0.zip", "has_sig": false, "md5_digest": "6fa078280e5b56473406423a88875c44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1956, "upload_time": "2016-11-17T23:58:05", "upload_time_iso_8601": "2016-11-17T23:58:05.708743Z", "url": "https://files.pythonhosted.org/packages/0b/8b/228457fedf6b3b0e050f8a8b0fa8b0b0c65a93513567cf25385ea11d5e18/ciipromol-0.1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6fa078280e5b56473406423a88875c44", "sha256": "13f8ae06ff3e7c3b0a760d610d969a95d0ee89af662730038bde4de78552f039"}, "downloads": -1, "filename": "ciipromol-0.1.0.zip", "has_sig": false, "md5_digest": "6fa078280e5b56473406423a88875c44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1956, "upload_time": "2016-11-17T23:58:05", "upload_time_iso_8601": "2016-11-17T23:58:05.708743Z", "url": "https://files.pythonhosted.org/packages/0b/8b/228457fedf6b3b0e050f8a8b0fa8b0b0c65a93513567cf25385ea11d5e18/ciipromol-0.1.0.zip", "yanked": false}], "timestamp": "Thu May  7 22:19:24 2020"}