{"info": {"author": "mySociety", "author_email": "modules@mysociety.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "PopIt Django App\n================\n\n|Build Status|\n\nA Django app that makes it easy to locally store and use data from one\nor more PopIt API instances.\n\nWhat is PopIt and PopIt-API?\n----------------------------\n\nPopIt is a project from `mySociety <http://www.mysociety.org/>`__ that\naims to make it really simple to store and share data on people such as\npoliticians, organisations such as parliaments and political parties,\nand the posts and memberships that link the people to the organisations.\n\nThe PopIt-API is a self standing server that provides a HTTP REST API to\nread and write this data. It is a `separate\ncodebase <https://github.com/mysociety/popit-api>`__ to this one.\n\nThis Django app lets you fetch data from several PopIt-APIs and store it\nlocally in your Django project so that you can use all the power of the\nDjango ORM to query the data. There are also management commands that\nmake it easy to fetch the latest updates from the PopIt-API.\n\nIt will also let you store your own data in the same models so that you\ncan add to the data from the PopIt-APIs. In time it should be possible\nto push this local data out to a PopIt-API so that it is easy for others\nto reuse.\n\nWARNING - Alpha code\n--------------------\n\nThis is alpha code and subject to frequent and backwards incompatible\nchange. Feel free to experiment but do not use in production until this\nmessage is removed.\n\nThis code is a work in progress - it is probably not useful to you yet.\nPlease see the ``IDEAS.md`` file for possible future additions and the\n`current\nissues <https://github.com/mysociety/popit-django/issues?state=open>`__\nfor more immediately planned work.\n\nInstalling and configuring\n--------------------------\n\nPlease install ``popit-django`` from PyPI. You should also add it to\nyour project's ``requirements.txt``.\n\n.. code:: bash\n\n    pip install popit-django --use-mirrors\n\nIn your ``settings.py`` add ``south`` and ``popit`` to your\n``INSTALLED_APPS`` (``popit`` uses South to manage database migrations\nso make sure it comes first).\n\n.. code:: python\n\n    INSTALLED_APPS = [\n        # ...\n        'south',\n        'popit',\n        # ....\n    ]\n\nSetup the database:\n\n.. code:: bash\n\n    python manage.py syncdb\n    python manage.py migrate\n\nNow create a ``popit.models.ApiInstance`` entry and fetch all the\ndocuments from that API instance:\n\n.. code:: bash\n\n    python manage.py popit_retrieve_all\n\nDatabase notes\n--------------\n\nFor some of the referential integrity we use a ``UNIQUE INDEX`` to\nprevent duplicates on values that are ``NOT NULL``. This is known to\nwork with Postgres and SQLite, but other databases may have issues. See\nthe ``PopItURLField`` class in ``popit/fields.py`` for more details.\n\nDevelopment\n-----------\n\nIf you want to contribute to the development of ``popit-django`` that\nwould be great, we aim to be responsive to pull requests. These\ninstructions should get you a dev environment set up.\n\nTo run the tests you'll need a local PopIt-API instance that can be\ndeleted. This will be installed for you by the\n``start_local_popit_api.bash`` script, but it requires the following:\n\n-  `MongoDB <http://www.mongodb.org/>`__ for the PopIt-API instance.\n   Should\n    allow anonymous access and db creation (the default).\n-  `Node.js <http://nodejs.org/>`__ installed.\n\n.. code:: bash\n\n    # get the code (you might want to clone your fork instead)\n    git clone https://github.com/mysociety/popit-django.git\n    cd popit-django\n\n    # Set up virtual environment\n    virtualenv --no-site-packages .venv\n    . .venv/bin/activate\n\n    # Install the python dependencies\n    pip install -r requirements.txt --use-mirrors\n\n    # Install (if needed) and start the popit-api server\n    ./start_local_popit_api.bash\n\n    # Run the tests\n    ./manage.py test popit\n\n.. |Build Status| image:: https://travis-ci.org/mysociety/popit-django.png?branch=master\n   :target: https://travis-ci.org/mysociety/popit-django", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mysociety/popit-django", "keywords": null, "license": "GNU Affero General Public License v3", "maintainer": null, "maintainer_email": null, "name": "popit-django", "package_url": "https://pypi.org/project/popit-django/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/popit-django/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mysociety/popit-django"}, "release_url": "https://pypi.org/project/popit-django/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "Use PopIt stored data in your Django app", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            PopIt Django App<br>================<br><br>|Build Status|<br><br>A Django app that makes it easy to locally store and use data from one<br>or more PopIt API instances.<br><br>What is PopIt and PopIt-API?<br>----------------------------<br><br>PopIt is a project from `mySociety &lt;http://www.mysociety.org/&gt;`__ that<br>aims to make it really simple to store and share data on people such as<br>politicians, organisations such as parliaments and political parties,<br>and the posts and memberships that link the people to the organisations.<br><br>The PopIt-API is a self standing server that provides a HTTP REST API to<br>read and write this data. It is a `separate<br>codebase &lt;https://github.com/mysociety/popit-api&gt;`__ to this one.<br><br>This Django app lets you fetch data from several PopIt-APIs and store it<br>locally in your Django project so that you can use all the power of the<br>Django ORM to query the data. There are also management commands that<br>make it easy to fetch the latest updates from the PopIt-API.<br><br>It will also let you store your own data in the same models so that you<br>can add to the data from the PopIt-APIs. In time it should be possible<br>to push this local data out to a PopIt-API so that it is easy for others<br>to reuse.<br><br>WARNING - Alpha code<br>--------------------<br><br>This is alpha code and subject to frequent and backwards incompatible<br>change. Feel free to experiment but do not use in production until this<br>message is removed.<br><br>This code is a work in progress - it is probably not useful to you yet.<br>Please see the ``IDEAS.md`` file for possible future additions and the<br>`current<br>issues &lt;https://github.com/mysociety/popit-django/issues?state=open&gt;`__<br>for more immediately planned work.<br><br>Installing and configuring<br>--------------------------<br><br>Please install ``popit-django`` from PyPI. You should also add it to<br>your project's ``requirements.txt``.<br><br>.. code:: bash<br><br>    pip install popit-django --use-mirrors<br><br>In your ``settings.py`` add ``south`` and ``popit`` to your<br>``INSTALLED_APPS`` (``popit`` uses South to manage database migrations<br>so make sure it comes first).<br><br>.. code:: python<br><br>    INSTALLED_APPS = [<br>        # ...<br>        'south',<br>        'popit',<br>        # ....<br>    ]<br><br>Setup the database:<br><br>.. code:: bash<br><br>    python manage.py syncdb<br>    python manage.py migrate<br><br>Now create a ``popit.models.ApiInstance`` entry and fetch all the<br>documents from that API instance:<br><br>.. code:: bash<br><br>    python manage.py popit_retrieve_all<br><br>Database notes<br>--------------<br><br>For some of the referential integrity we use a ``UNIQUE INDEX`` to<br>prevent duplicates on values that are ``NOT NULL``. This is known to<br>work with Postgres and SQLite, but other databases may have issues. See<br>the ``PopItURLField`` class in ``popit/fields.py`` for more details.<br><br>Development<br>-----------<br><br>If you want to contribute to the development of ``popit-django`` that<br>would be great, we aim to be responsive to pull requests. These<br>instructions should get you a dev environment set up.<br><br>To run the tests you'll need a local PopIt-API instance that can be<br>deleted. This will be installed for you by the<br>``start_local_popit_api.bash`` script, but it requires the following:<br><br>-  `MongoDB &lt;http://www.mongodb.org/&gt;`__ for the PopIt-API instance.<br>   Should<br>    allow anonymous access and db creation (the default).<br>-  `Node.js &lt;http://nodejs.org/&gt;`__ installed.<br><br>.. code:: bash<br><br>    # get the code (you might want to clone your fork instead)<br>    git clone https://github.com/mysociety/popit-django.git<br>    cd popit-django<br><br>    # Set up virtual environment<br>    virtualenv --no-site-packages .venv<br>    . .venv/bin/activate<br><br>    # Install the python dependencies<br>    pip install -r requirements.txt --use-mirrors<br><br>    # Install (if needed) and start the popit-api server<br>    ./start_local_popit_api.bash<br><br>    # Run the tests<br>    ./manage.py test popit<br><br>.. |Build Status| image:: https://travis-ci.org/mysociety/popit-django.png?branch=master<br>   :target: https://travis-ci.org/mysociety/popit-django\n          </div>"}, "last_serial": 2350252, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "96829354ce30b76bcaea924a1c6594a9", "sha256": "a33558875c5226e150b06e69d6c3f4b8eb669fd4ec577c086704742b1d1dd9af"}, "downloads": -1, "filename": "popit-django-0.0.1.tar.gz", "has_sig": false, "md5_digest": "96829354ce30b76bcaea924a1c6594a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27030, "upload_time": "2013-04-03T14:06:34", "upload_time_iso_8601": "2013-04-03T14:06:34.020593Z", "url": "https://files.pythonhosted.org/packages/eb/e4/40ecd512c39411e22018f06e78b7fdfa164795c7398b183fa66c8cdaf331/popit-django-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f28607508f344e498717598ac080d824", "sha256": "2e56cf87c72ddc77183473492ff2b369b5a59aa6d6cb52b40af158381feed58f"}, "downloads": -1, "filename": "popit-django-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f28607508f344e498717598ac080d824", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27324, "upload_time": "2013-08-29T09:38:47", "upload_time_iso_8601": "2013-08-29T09:38:47.109474Z", "url": "https://files.pythonhosted.org/packages/5d/64/533d4a57cfd4ccad415d54a8e2625b0b2f5d6c155f5cb8a916eec5fec1e6/popit-django-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "7005f8b8f928508c290f4ae0fdbf23ee", "sha256": "3e2904026885f46942e6e8cecc29a89b0cd169c685282e2c31a3961aee0163e6"}, "downloads": -1, "filename": "popit-django-0.0.3.tar.gz", "has_sig": false, "md5_digest": "7005f8b8f928508c290f4ae0fdbf23ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28404, "upload_time": "2014-04-10T15:10:08", "upload_time_iso_8601": "2014-04-10T15:10:08.445621Z", "url": "https://files.pythonhosted.org/packages/66/47/604a176c42ac8aef428f81505d69d190c67cc7cf03dd4dd2b28812ca2211/popit-django-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7005f8b8f928508c290f4ae0fdbf23ee", "sha256": "3e2904026885f46942e6e8cecc29a89b0cd169c685282e2c31a3961aee0163e6"}, "downloads": -1, "filename": "popit-django-0.0.3.tar.gz", "has_sig": false, "md5_digest": "7005f8b8f928508c290f4ae0fdbf23ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28404, "upload_time": "2014-04-10T15:10:08", "upload_time_iso_8601": "2014-04-10T15:10:08.445621Z", "url": "https://files.pythonhosted.org/packages/66/47/604a176c42ac8aef428f81505d69d190c67cc7cf03dd4dd2b28812ca2211/popit-django-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:51:34 2020"}