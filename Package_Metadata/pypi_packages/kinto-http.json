{"info": {"author": "Mozilla Services", "author_email": "storage@mozilla.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Internet :: WWW/HTTP"], "description": "Kinto python client\n###################\n\n.. image:: https://img.shields.io/travis/Kinto/kinto-http.py.svg\n        :target: https://travis-ci.org/Kinto/kinto-http.py\n\n.. image:: https://img.shields.io/pypi/v/kinto-http.svg\n        :target: https://pypi.python.org/pypi/kinto-http\n\n.. image:: https://coveralls.io/repos/Kinto/kinto-http.py/badge.svg?branch=master\n        :target: https://coveralls.io/r/Kinto/kinto-http.py\n\n\n*kinto-http* is the Python library to interact with a *Kinto* server.\n\nThere is also a similar `client in JavaScript <https://github.com/kinto/kinto-http.js>`_.\n\n\nInstallation\n============\n\nUse pip::\n\n  $ pip install kinto-http\n\n\nUsage\n=====\n\nHere is an overview of what the API provides:\n\n.. code-block:: python\n\n    import kinto_http\n\n    client = kinto_http.Client(server_url=\"http://localhost:8888/v1\",\n                               auth=('alexis', 'p4ssw0rd'))\n\n    records = client.get_records(bucket='default', collection='todos')\n    for i, record in enumerate(records):\n        record['title'] = 'Todo {}'.format(i)\n        client.update_record(data=record)\n\n\nInstantiating a client\n----------------------\n\nThe passed ``auth`` parameter is a `requests <http://docs.python-requests.org>`_\nauthentication policy.\n\nBy default, a simple tuple will become a ``Basic Auth`` authorization request header, that can authenticate users with `Kinto Accounts <https://kinto.readthedocs.io/en/stable/api/1.x/accounts.html>`_.\n\n.. code-block:: python\n\n    import kinto_http\n\n    auth = ('alexis', 'p4ssw0rd')\n\n    client = kinto_http.Client(server_url='http://localhost:8888/v1',\n                               auth=auth)\n\nIt is also possible to pass a ``bucket`` ID and/or ``collection`` ID to set them as default values for the parameters of the client operations.\n\n.. code-block:: python\n\n    client = Client(bucket=\"payments\", collection=\"receipts\", auth=auth)\n\nAfter creating a client, you can also replicate an existing one and overwrite\nsome key arguments.\n\n.. code-block:: python\n\n    client2 = client.clone(collection=\"orders\")\n\n\nUsing a Bearer access token to authenticate (OpenID)\n----------------------------------------------------\n\n.. code-block:: python\n\n    import kinto_http\n\n    client = kinto_http.Client(auth=kinto_http.BearerTokenAuth(\"XYPJTNsFKV2\"))\n\n\nThe authorization header is prefixed with ``Bearer`` by default. If the ``header_type``\nis `customized on the server <https://kinto.readthedocs.io/en/stable/configuration/settings.html#openid-connect>`_,\nthe client must specify the expected type: ``kinto_http.BearerTokenAuth(\"XYPJTNsFKV2\" type=\"Bearer+OIDC\")``\n\n\nCustom headers\n--------------\n\nCustom headers can be specified in the Client constructor, and will be sent in every request:\n\n.. code-block:: python\n\n    import kinto_http\n\n    client = kinto_http.Client(server_url=\"http://server/v1\", headers={\n        \"Allow-Access\": \"CDN\",\n        \"User-Agent\": \"blocklist-updater\"\n    })\n\n\nGetting server information\n--------------------------\n\nYou can use the ``server_info()`` method to fetch the server information:\n\n.. code-block:: python\n\n    from kinto_http import Client\n\n    client = Client(server_url='http://localhost:8888/v1')\n    info = client.server_info()\n    assert 'schema' in info['capabilities'], \"Server doesn't support schema validation.\"\n\n\nBucket operations\n-----------------\n\n* ``get_bucket(id=None, **kwargs)``: retrieve single bucket\n* ``get_buckets(**kwargs)``: retrieve all readable buckets\n* ``create_bucket(id=None, data=None, **kwargs)``: create a bucket\n* ``update_bucket(id=None, data=None, **kwargs)``: create or replace an existing bucket\n* ``patch_bucket(id=None, changes=None, **kwargs)``: modify some fields in an existing bucket\n* ``delete_bucket(id=None, **kwargs)``: delete a bucket and everything under it\n* ``delete_buckets(**kwargs)``: delete every writable buckets\n\n\nGroups operations\n-----------------\n\n* ``get_group(id=None, bucket=None, **kwargs)``: retrieve single group\n* ``get_groups(bucket=None, **kwargs)``: retrieve all readable groups\n* ``create_group(id=None, data=None, bucket=None, **kwargs)``: create a group\n* ``update_group(id=None, data=None, bucket=None, **kwargs)``: create or replace an existing group\n* ``patch_group(id=None, changes=None, bucket=None, **kwargs)``: modify some fields in an existing group\n* ``delete_group(id=None, bucket=None, **kwargs)``: delete a group and everything under it\n* ``delete_groups(bucket=None, **kwargs)``: delete every writable groups\n\n\nCollections\n-----------\n\n* ``get_collection(id=None, bucket=None, **kwargs)``: retrieve single collection\n* ``get_collections(bucket=None, **kwargs)``: retrieve all readable collections\n* ``create_collection(id=None, data=None, bucket=None, **kwargs)``: create a collection\n* ``update_collection(id=None, data=None, bucket=None, **kwargs)``: create or replace an existing collection\n* ``patch_collection(id=None, changes=None, bucket=None, **kwargs)``: modify some fields in an existing collection\n* ``delete_collection(id=None, bucket=None, **kwargs)``: delete a collection and everything under it\n* ``delete_collections(bucket=None, **kwargs)``: delete every writable collections\n\n\nRecords\n-------\n\n* ``get_record(id=None, bucket=None, collection=None, **kwargs)``: retrieve single record\n* ``get_records(bucket=None, collection=None, **kwargs)``: retrieve all readable records\n* ``get_paginated_records(bucket=None, collection=None, **kwargs)``: paginated list of records\n* ``get_records_timestamp(bucket=None, collection=None, **kwargs)``: return the records timestamp of this collection\n* ``create_record(id=None, data=None, bucket=None, collection=None, **kwargs)``: create a record\n* ``update_record(id=None, data=None, bucket=None, collection=None, **kwargs)``: create or replace an existing record\n* ``patch_record(id=None, changes=None, bucket=None, collection=None, **kwargs)``: modify some fields in an existing record\n* ``delete_record(id=None, bucket=None, collection=None, **kwargs)``: delete a record and everything under it\n* ``delete_records(bucket=None, collection=None, **kwargs)``: delete every writable records\n\n\nPermissions\n-----------\n\nThe objects permissions can be specified or modified by passing a ``permissions`` to ``create_*()``, ``patch_*()``, or ``update_*()`` methods:\n\n.. code-block:: python\n\n    client.create_record(data={'foo': 'bar'},\n                         permissions={'read': ['group:groupid']})\n\n\n    record = client.get_record('123', collection='todos', bucket='alexis')\n    record['permissions']['write'].append('leplatrem')\n    client.update_record(data=record)\n\n\nGet or create\n-------------\n\nIn some cases, you might want to create a bucket, collection, group or record only if\nit doesn't exist already. To do so, you can pass the ``if_not_exists=True``\nto the ``create_*()`` methods::\n\n  client.create_bucket(id='blog', if_not_exists=True)\n  client.create_collection(id='articles', bucket='blog', if_not_exists=True)\n\n\nDelete if exists\n----------------\n\nIn some cases, you might want to delete a bucket, collection, group or record only if\nit exists already. To do so, you can pass the ``if_exists=True``\nto the ``delete_*`` methods::\n\n  client.delete_bucket(id='bucket', if_exists=True)\n\n\nPatch operations\n----------------\n\nThe ``.patch_*()`` operations receive a ``changes`` parameter.\n\n\n.. code-block:: python\n\n    from kinto_http.patch_type import BasicPatch, MergePatch, JSONPatch\n\n\n    client.patch_record(id='abc', changes=BasicPatch({'over': 'write'}))\n\n    client.patch_record(id='todo', changes=MergePatch({'assignee': 'bob'}))\n\n    client.patch_record(id='receipts', changes=JSONPatch([\n        {'op': 'add', 'path': '/data/members/0', 'value': 'ldap:user@corp.com'}\n    ]))\n\n\nConcurrency control\n-------------------\n\nThe ``create_*()``, ``patch_*()``, and ``update_*()`` methods take a ``safe`` argument (default: ``True``).\n\nIf ``True``, the client will ensure that the object wasn't modified on the server side since we fetched it. The timestamp will be implicitly read from the ``last_modified`` field in the passed ``data`` object, or taken explicitly from the ``if_match`` parameter.\n\n\nBatching operations\n-------------------\n\nRather than issuing a request for each and every operation, it is possible to\nbatch several operations in one request.\n\nUsing the ``batch()`` method as a Python context manager (``with``):\n\n.. code-block:: python\n\n  with client.batch() as batch:\n      for idx in range(0, 100):\n          batch.update_record(data={'id': idx})\n\n.. note::\n\n    Besides the ``results()`` method, a batch object shares all the same methods as\n    another client.\n\nReading data from batch operations is achieved by using the ``results()`` method\navailable after a batch context is closed.\n\n.. code-block:: python\n\n  with client.batch() as batch:\n      batch.get_record('r1')\n      batch.get_record('r2')\n      batch.get_record('r3')\n\n  r1, r2, r3 = batch.results()\n\n\nErrors\n------\n\nFailing operations will raise a ``KintoException``, which has ``request`` and ``response`` attributes.\n\n.. code-block:: python\n\n    try:\n        client.create_group(id=\"friends\")\n    except kinto_http.KintoException as e:\n        if e.response and e.response.status_code == 403:\n            print(\"Not allowed!\")\n\n\nRequests Timeout\n----------------\n\nA ``timeout`` value in seconds can be specified in the client constructor:\n\n.. code-block:: python\n\n    client = KintoClient(server_url=\"...\", timeout=5)\n\nTo distinguish the connect from the read timeout, use a tuple:\n\n.. code-block:: python\n\n    client = KintoClient(server_url=\"...\", timeout=(3.05, 27))\n\nFor an infinit timeout, use ``None``:\n\n.. code-block:: python\n\n    client = KintoClient(server_url=\"...\", timeout=None)\n\nSee the `timeout documentation <https://2.python-requests.org//en/master/user/advanced/#timeouts>`_ of the underlying ``requests`` library.\n\n\nRetry on error\n--------------\n\nWhen the server is throttled (under heavy load or maintenance) it can\nreturn error responses.\n\nThe client can hence retry to send the same request until it succeeds.\nTo enable this, specify the number of retries on the client:\n\n.. code-block:: python\n\n  client = Client(server_url='http://localhost:8888/v1',\n                  auth=credentials,\n                  retry=10)\n\nThe Kinto protocol lets the server `define the duration in seconds between retries\n<https://kinto.readthedocs.io/en/latest/api/1.x/backoff.html>`_.\nIt is possible (but not recommended) to force this value in the clients:\n\n.. code-block:: python\n\n  client = Client(server_url='http://localhost:8888/v1',\n                  auth=credentials,\n                  retry=10,\n                  retry_after=5)\n\nPagination\n----------\n\nWhen the server responses are paginated, the client will download every page and\nmerge them transparently.\n\nThe ``get_paginated_records()`` method returns a generator that will yield each page:\n\n\n.. code-block:: python\n\n  for page in client.get_paginated_records():\n      records = page[\"data\"]\n\nIt is possible to specify a limit for the number of items to be retrieved in one page:\n\n.. code-block:: python\n\n    records = client.get_records(_limit=10)\n\nIn order to retrieve every available pages with a limited number of items in each\nof them, you can specify the number of pages:\n\n.. code-block:: python\n\n    records = client.get_records(_limit=10, pages=float('inf'))  # Infinity\n\n\nHistory\n-------\n\nIf the built-in `history plugin <https://kinto.readthedocs.io/en/latest/api/1.x/history.html>`_ is enabled, it is possible to retrieve the history of changes:\n\n.. code-block:: python\n\n    # Get the complete history of a bucket\n    changes = client.get_history(bucket='default')\n\n    # and optionally use filters\n    hist = client.get_history(bucket='default', _limit=2, _sort='-last_modified', _since='1533762576015')\n    hist = client.get_history(bucket='default', resource_name='collection')\n\n\nThe history of a bucket can also be purged with:\n\n.. code-block:: python\n\n    client.purge_history(bucket='default')\n\n\nEndpoint URLs\n-------------\n\nThe ``get_endpoint()`` method returns an endpoint URL on the server:\n\n.. code-block:: python\n\n    client = Client(server_url='http://localhost:8888/v1',\n                    auth=('token', 'your-token'),\n                    bucket=\"payments\",\n                    collection=\"receipts\")\n\n    print(client.get_endpoint(\"record\",\n                              id=\"c6894b2c-1856-11e6-9415-3c970ede22b0\"))\n\n    # '/buckets/payments/collections/receipts/records/c6894b2c-1856-11e6-9415-3c970ede22b0'\n\n\nHandling datetime and date objects\n----------------------------------\n\nIn addition to the data types supported by JSON, kinto-http.py also\nsupports native Python date and datetime objects.\n\nIn case a payload contain a date or a datetime object, kinto-http.py\nwill encode it as an ISO formatted string.\n\nPlease note that this transformation is only one-way. While reading a\nrecord, if a string contains a ISO formated string, kinto-http.py will\nnot convert it to a native Python date or datetime object.\n\nIf you know that a field will be a datetime, you might consider\nencoding it yourself to be more explicit about it being a string for\nKinto.\n\n\n\nCommand-line scripts\n--------------------\n\nIn order to have common arguments and options for scripts, some utilities are provided\nto ease configuration and initialization of client from command-line arguments.\n\n.. code-block:: python\n\n  import argparse\n  import logging\n\n  from kinto_http import cli_utils\n\n  logger = logging.getLogger(__name__)\n\n  if __name__ == \"__main__\":\n      parser = argparse.ArgumentParser(description=\"Download records\")\n      cli_utils.set_parser_server_options(parser)\n\n      args = parser.parse_args()\n\n      cli_utils.setup_logger(logger, args)\n\n      logger.debug(\"Instantiate Kinto client.\")\n      client = cli_utils.create_client_from_args(args)\n\n      logger.info(\"Fetch records.\")\n      records = client.get_records()\n      logger.warn(\"{} records.\".format(len(records)))\n\nThe script now accepts basic options:\n\n::\n\n  $ python example.py --help\n\n  usage: example.py [-h] [-s SERVER] [-a AUTH] [-b BUCKET] [-c COLLECTION] [-v]\n                    [-q] [-D]\n\n  Download records\n\n  optional arguments:\n    -h, --help            show this help message and exit\n    -s SERVER, --server SERVER\n                          The location of the remote server (with prefix)\n    -a AUTH, --auth AUTH  BasicAuth credentials: `token:my-secret` or\n                          Authorization header: `Bearer token`\n    -b BUCKET, --bucket BUCKET\n                          Bucket name.\n    -c COLLECTION, --collection COLLECTION\n                          Collection name.\n    --retry RETRY         Number of retries when a request fails\n    --retry-after RETRY_AFTER\n                          Delay in seconds between retries when requests fail\n                          (default: provided by server)\n    -v, --verbose         Show all messages.\n    -q, --quiet           Show only critical errors.\n    -D, --debug           Show all messages, including debug messages.\n\n\nRun tests\n=========\n\nIn one terminal, run a Kinto server:\n\n::\n\n    $ make runkinto\n\nIn another, run the tests against it:\n\n::\n\n    $ make tests\n\n\n(Optional) Install a git hook:\n\n::\n\n    therapist install\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Kinto/kinto-http.py/", "keywords": "web services", "license": "Apache License (2.0)", "maintainer": "", "maintainer_email": "", "name": "kinto-http", "package_url": "https://pypi.org/project/kinto-http/", "platform": "", "project_url": "https://pypi.org/project/kinto-http/", "project_urls": {"Homepage": "https://github.com/Kinto/kinto-http.py/"}, "release_url": "https://pypi.org/project/kinto-http/10.7.0/", "requires_dist": ["requests (>=2.8.1)", "unidecode"], "requires_python": "", "summary": "Kinto client", "version": "10.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/Kinto/kinto-http.py\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/Kinto/kinto-http.py.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9d2704f2775fcc8c6b506fe50ecb374a719da6c5/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f4b696e746f2f6b696e746f2d687474702e70792e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/kinto-http\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/kinto-http.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c2e78313d30b2dd48417c471d39fe2b78abab4a6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6b696e746f2d687474702e737667\"></a>\n<a href=\"https://coveralls.io/r/Kinto/kinto-http.py\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/Kinto/kinto-http.py/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/78d811f345ce19b1191492ffb73119aa82c33544/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f4b696e746f2f6b696e746f2d687474702e70792f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<p><em>kinto-http</em> is the Python library to interact with a <em>Kinto</em> server.</p>\n<p>There is also a similar <a href=\"https://github.com/kinto/kinto-http.js\" rel=\"nofollow\">client in JavaScript</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Use pip:</p>\n<pre>$ pip install kinto-http\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Here is an overview of what the API provides:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">kinto_http</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">kinto_http</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"o\">=</span><span class=\"s2\">\"http://localhost:8888/v1\"</span><span class=\"p\">,</span>\n                           <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'alexis'</span><span class=\"p\">,</span> <span class=\"s1\">'p4ssw0rd'</span><span class=\"p\">))</span>\n\n<span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_records</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"s1\">'default'</span><span class=\"p\">,</span> <span class=\"n\">collection</span><span class=\"o\">=</span><span class=\"s1\">'todos'</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">record</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">records</span><span class=\"p\">):</span>\n    <span class=\"n\">record</span><span class=\"p\">[</span><span class=\"s1\">'title'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'Todo </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">update_record</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">record</span><span class=\"p\">)</span>\n</pre>\n<div id=\"instantiating-a-client\">\n<h3>Instantiating a client</h3>\n<p>The passed <tt>auth</tt> parameter is a <a href=\"http://docs.python-requests.org\" rel=\"nofollow\">requests</a>\nauthentication policy.</p>\n<p>By default, a simple tuple will become a <tt>Basic Auth</tt> authorization request header, that can authenticate users with <a href=\"https://kinto.readthedocs.io/en/stable/api/1.x/accounts.html\" rel=\"nofollow\">Kinto Accounts</a>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">kinto_http</span>\n\n<span class=\"n\">auth</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'alexis'</span><span class=\"p\">,</span> <span class=\"s1\">'p4ssw0rd'</span><span class=\"p\">)</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">kinto_http</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"o\">=</span><span class=\"s1\">'http://localhost:8888/v1'</span><span class=\"p\">,</span>\n                           <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"n\">auth</span><span class=\"p\">)</span>\n</pre>\n<p>It is also possible to pass a <tt>bucket</tt> ID and/or <tt>collection</tt> ID to set them as default values for the parameters of the client operations.</p>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"s2\">\"payments\"</span><span class=\"p\">,</span> <span class=\"n\">collection</span><span class=\"o\">=</span><span class=\"s2\">\"receipts\"</span><span class=\"p\">,</span> <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"n\">auth</span><span class=\"p\">)</span>\n</pre>\n<p>After creating a client, you can also replicate an existing one and overwrite\nsome key arguments.</p>\n<pre><span class=\"n\">client2</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">clone</span><span class=\"p\">(</span><span class=\"n\">collection</span><span class=\"o\">=</span><span class=\"s2\">\"orders\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"using-a-bearer-access-token-to-authenticate-openid\">\n<h3>Using a Bearer access token to authenticate (OpenID)</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">kinto_http</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">kinto_http</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"n\">kinto_http</span><span class=\"o\">.</span><span class=\"n\">BearerTokenAuth</span><span class=\"p\">(</span><span class=\"s2\">\"XYPJTNsFKV2\"</span><span class=\"p\">))</span>\n</pre>\n<p>The authorization header is prefixed with <tt>Bearer</tt> by default. If the <tt>header_type</tt>\nis <a href=\"https://kinto.readthedocs.io/en/stable/configuration/settings.html#openid-connect\" rel=\"nofollow\">customized on the server</a>,\nthe client must specify the expected type: <tt><span class=\"pre\">kinto_http.BearerTokenAuth(\"XYPJTNsFKV2\"</span> <span class=\"pre\">type=\"Bearer+OIDC\")</span></tt></p>\n</div>\n<div id=\"custom-headers\">\n<h3>Custom headers</h3>\n<p>Custom headers can be specified in the Client constructor, and will be sent in every request:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">kinto_http</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">kinto_http</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"o\">=</span><span class=\"s2\">\"http://server/v1\"</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s2\">\"Allow-Access\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CDN\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"User-Agent\"</span><span class=\"p\">:</span> <span class=\"s2\">\"blocklist-updater\"</span>\n<span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"getting-server-information\">\n<h3>Getting server information</h3>\n<p>You can use the <tt>server_info()</tt> method to fetch the server information:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">kinto_http</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"o\">=</span><span class=\"s1\">'http://localhost:8888/v1'</span><span class=\"p\">)</span>\n<span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">server_info</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"s1\">'schema'</span> <span class=\"ow\">in</span> <span class=\"n\">info</span><span class=\"p\">[</span><span class=\"s1\">'capabilities'</span><span class=\"p\">],</span> <span class=\"s2\">\"Server doesn't support schema validation.\"</span>\n</pre>\n</div>\n<div id=\"bucket-operations\">\n<h3>Bucket operations</h3>\n<ul>\n<li><tt>get_bucket(id=None, **kwargs)</tt>: retrieve single bucket</li>\n<li><tt><span class=\"pre\">get_buckets(**kwargs)</span></tt>: retrieve all readable buckets</li>\n<li><tt>create_bucket(id=None, data=None, **kwargs)</tt>: create a bucket</li>\n<li><tt>update_bucket(id=None, data=None, **kwargs)</tt>: create or replace an existing bucket</li>\n<li><tt>patch_bucket(id=None, changes=None, **kwargs)</tt>: modify some fields in an existing bucket</li>\n<li><tt>delete_bucket(id=None, **kwargs)</tt>: delete a bucket and everything under it</li>\n<li><tt><span class=\"pre\">delete_buckets(**kwargs)</span></tt>: delete every writable buckets</li>\n</ul>\n</div>\n<div id=\"groups-operations\">\n<h3>Groups operations</h3>\n<ul>\n<li><tt>get_group(id=None, bucket=None, **kwargs)</tt>: retrieve single group</li>\n<li><tt>get_groups(bucket=None, **kwargs)</tt>: retrieve all readable groups</li>\n<li><tt>create_group(id=None, data=None, bucket=None, **kwargs)</tt>: create a group</li>\n<li><tt>update_group(id=None, data=None, bucket=None, **kwargs)</tt>: create or replace an existing group</li>\n<li><tt>patch_group(id=None, changes=None, bucket=None, **kwargs)</tt>: modify some fields in an existing group</li>\n<li><tt>delete_group(id=None, bucket=None, **kwargs)</tt>: delete a group and everything under it</li>\n<li><tt>delete_groups(bucket=None, **kwargs)</tt>: delete every writable groups</li>\n</ul>\n</div>\n<div id=\"collections\">\n<h3>Collections</h3>\n<ul>\n<li><tt>get_collection(id=None, bucket=None, **kwargs)</tt>: retrieve single collection</li>\n<li><tt>get_collections(bucket=None, **kwargs)</tt>: retrieve all readable collections</li>\n<li><tt>create_collection(id=None, data=None, bucket=None, **kwargs)</tt>: create a collection</li>\n<li><tt>update_collection(id=None, data=None, bucket=None, **kwargs)</tt>: create or replace an existing collection</li>\n<li><tt>patch_collection(id=None, changes=None, bucket=None, **kwargs)</tt>: modify some fields in an existing collection</li>\n<li><tt>delete_collection(id=None, bucket=None, **kwargs)</tt>: delete a collection and everything under it</li>\n<li><tt>delete_collections(bucket=None, **kwargs)</tt>: delete every writable collections</li>\n</ul>\n</div>\n<div id=\"records\">\n<h3>Records</h3>\n<ul>\n<li><tt>get_record(id=None, bucket=None, collection=None, **kwargs)</tt>: retrieve single record</li>\n<li><tt>get_records(bucket=None, collection=None, **kwargs)</tt>: retrieve all readable records</li>\n<li><tt>get_paginated_records(bucket=None, collection=None, **kwargs)</tt>: paginated list of records</li>\n<li><tt>get_records_timestamp(bucket=None, collection=None, **kwargs)</tt>: return the records timestamp of this collection</li>\n<li><tt>create_record(id=None, data=None, bucket=None, collection=None, **kwargs)</tt>: create a record</li>\n<li><tt>update_record(id=None, data=None, bucket=None, collection=None, **kwargs)</tt>: create or replace an existing record</li>\n<li><tt>patch_record(id=None, changes=None, bucket=None, collection=None, **kwargs)</tt>: modify some fields in an existing record</li>\n<li><tt>delete_record(id=None, bucket=None, collection=None, **kwargs)</tt>: delete a record and everything under it</li>\n<li><tt>delete_records(bucket=None, collection=None, **kwargs)</tt>: delete every writable records</li>\n</ul>\n</div>\n<div id=\"permissions\">\n<h3>Permissions</h3>\n<p>The objects permissions can be specified or modified by passing a <tt>permissions</tt> to <tt><span class=\"pre\">create_*()</span></tt>, <tt><span class=\"pre\">patch_*()</span></tt>, or <tt><span class=\"pre\">update_*()</span></tt> methods:</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">create_record</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'foo'</span><span class=\"p\">:</span> <span class=\"s1\">'bar'</span><span class=\"p\">},</span>\n                     <span class=\"n\">permissions</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'read'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'group:groupid'</span><span class=\"p\">]})</span>\n\n\n<span class=\"n\">record</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_record</span><span class=\"p\">(</span><span class=\"s1\">'123'</span><span class=\"p\">,</span> <span class=\"n\">collection</span><span class=\"o\">=</span><span class=\"s1\">'todos'</span><span class=\"p\">,</span> <span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"s1\">'alexis'</span><span class=\"p\">)</span>\n<span class=\"n\">record</span><span class=\"p\">[</span><span class=\"s1\">'permissions'</span><span class=\"p\">][</span><span class=\"s1\">'write'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">'leplatrem'</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">update_record</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">record</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"get-or-create\">\n<h3>Get or create</h3>\n<p>In some cases, you might want to create a bucket, collection, group or record only if\nit doesn\u2019t exist already. To do so, you can pass the <tt>if_not_exists=True</tt>\nto the <tt><span class=\"pre\">create_*()</span></tt> methods:</p>\n<pre>client.create_bucket(id='blog', if_not_exists=True)\nclient.create_collection(id='articles', bucket='blog', if_not_exists=True)\n</pre>\n</div>\n<div id=\"delete-if-exists\">\n<h3>Delete if exists</h3>\n<p>In some cases, you might want to delete a bucket, collection, group or record only if\nit exists already. To do so, you can pass the <tt>if_exists=True</tt>\nto the <tt>delete_*</tt> methods:</p>\n<pre>client.delete_bucket(id='bucket', if_exists=True)\n</pre>\n</div>\n<div id=\"patch-operations\">\n<h3>Patch operations</h3>\n<p>The <tt><span class=\"pre\">.patch_*()</span></tt> operations receive a <tt>changes</tt> parameter.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">kinto_http.patch_type</span> <span class=\"kn\">import</span> <span class=\"n\">BasicPatch</span><span class=\"p\">,</span> <span class=\"n\">MergePatch</span><span class=\"p\">,</span> <span class=\"n\">JSONPatch</span>\n\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">patch_record</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'abc'</span><span class=\"p\">,</span> <span class=\"n\">changes</span><span class=\"o\">=</span><span class=\"n\">BasicPatch</span><span class=\"p\">({</span><span class=\"s1\">'over'</span><span class=\"p\">:</span> <span class=\"s1\">'write'</span><span class=\"p\">}))</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">patch_record</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'todo'</span><span class=\"p\">,</span> <span class=\"n\">changes</span><span class=\"o\">=</span><span class=\"n\">MergePatch</span><span class=\"p\">({</span><span class=\"s1\">'assignee'</span><span class=\"p\">:</span> <span class=\"s1\">'bob'</span><span class=\"p\">}))</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">patch_record</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'receipts'</span><span class=\"p\">,</span> <span class=\"n\">changes</span><span class=\"o\">=</span><span class=\"n\">JSONPatch</span><span class=\"p\">([</span>\n    <span class=\"p\">{</span><span class=\"s1\">'op'</span><span class=\"p\">:</span> <span class=\"s1\">'add'</span><span class=\"p\">,</span> <span class=\"s1\">'path'</span><span class=\"p\">:</span> <span class=\"s1\">'/data/members/0'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"s1\">'ldap:user@corp.com'</span><span class=\"p\">}</span>\n<span class=\"p\">]))</span>\n</pre>\n</div>\n<div id=\"concurrency-control\">\n<h3>Concurrency control</h3>\n<p>The <tt><span class=\"pre\">create_*()</span></tt>, <tt><span class=\"pre\">patch_*()</span></tt>, and <tt><span class=\"pre\">update_*()</span></tt> methods take a <tt>safe</tt> argument (default: <tt>True</tt>).</p>\n<p>If <tt>True</tt>, the client will ensure that the object wasn\u2019t modified on the server side since we fetched it. The timestamp will be implicitly read from the <tt>last_modified</tt> field in the passed <tt>data</tt> object, or taken explicitly from the <tt>if_match</tt> parameter.</p>\n</div>\n<div id=\"batching-operations\">\n<h3>Batching operations</h3>\n<p>Rather than issuing a request for each and every operation, it is possible to\nbatch several operations in one request.</p>\n<p>Using the <tt>batch()</tt> method as a Python context manager (<tt>with</tt>):</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">batch</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">batch</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">idx</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">):</span>\n        <span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">update_record</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"n\">idx</span><span class=\"p\">})</span>\n</pre>\n<div>\n<p>Note</p>\n<p>Besides the <tt>results()</tt> method, a batch object shares all the same methods as\nanother client.</p>\n</div>\n<p>Reading data from batch operations is achieved by using the <tt>results()</tt> method\navailable after a batch context is closed.</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">batch</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">batch</span><span class=\"p\">:</span>\n    <span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">get_record</span><span class=\"p\">(</span><span class=\"s1\">'r1'</span><span class=\"p\">)</span>\n    <span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">get_record</span><span class=\"p\">(</span><span class=\"s1\">'r2'</span><span class=\"p\">)</span>\n    <span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">get_record</span><span class=\"p\">(</span><span class=\"s1\">'r3'</span><span class=\"p\">)</span>\n\n<span class=\"n\">r1</span><span class=\"p\">,</span> <span class=\"n\">r2</span><span class=\"p\">,</span> <span class=\"n\">r3</span> <span class=\"o\">=</span> <span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">results</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"errors\">\n<h3>Errors</h3>\n<p>Failing operations will raise a <tt>KintoException</tt>, which has <tt>request</tt> and <tt>response</tt> attributes.</p>\n<pre><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">create_group</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"friends\"</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">kinto_http</span><span class=\"o\">.</span><span class=\"n\">KintoException</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">response</span> <span class=\"ow\">and</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">403</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Not allowed!\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"requests-timeout\">\n<h3>Requests Timeout</h3>\n<p>A <tt>timeout</tt> value in seconds can be specified in the client constructor:</p>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">KintoClient</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"o\">=</span><span class=\"s2\">\"...\"</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<p>To distinguish the connect from the read timeout, use a tuple:</p>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">KintoClient</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"o\">=</span><span class=\"s2\">\"...\"</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">3.05</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">))</span>\n</pre>\n<p>For an infinit timeout, use <tt>None</tt>:</p>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">KintoClient</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"o\">=</span><span class=\"s2\">\"...\"</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>See the <a href=\"https://2.python-requests.org//en/master/user/advanced/#timeouts\" rel=\"nofollow\">timeout documentation</a> of the underlying <tt>requests</tt> library.</p>\n</div>\n<div id=\"retry-on-error\">\n<h3>Retry on error</h3>\n<p>When the server is throttled (under heavy load or maintenance) it can\nreturn error responses.</p>\n<p>The client can hence retry to send the same request until it succeeds.\nTo enable this, specify the number of retries on the client:</p>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"o\">=</span><span class=\"s1\">'http://localhost:8888/v1'</span><span class=\"p\">,</span>\n                <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"n\">credentials</span><span class=\"p\">,</span>\n                <span class=\"n\">retry</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p>The Kinto protocol lets the server <a href=\"https://kinto.readthedocs.io/en/latest/api/1.x/backoff.html\" rel=\"nofollow\">define the duration in seconds between retries</a>.\nIt is possible (but not recommended) to force this value in the clients:</p>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"o\">=</span><span class=\"s1\">'http://localhost:8888/v1'</span><span class=\"p\">,</span>\n                <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"n\">credentials</span><span class=\"p\">,</span>\n                <span class=\"n\">retry</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n                <span class=\"n\">retry_after</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"pagination\">\n<h3>Pagination</h3>\n<p>When the server responses are paginated, the client will download every page and\nmerge them transparently.</p>\n<p>The <tt>get_paginated_records()</tt> method returns a generator that will yield each page:</p>\n<pre><span class=\"k\">for</span> <span class=\"n\">page</span> <span class=\"ow\">in</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_paginated_records</span><span class=\"p\">():</span>\n    <span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">page</span><span class=\"p\">[</span><span class=\"s2\">\"data\"</span><span class=\"p\">]</span>\n</pre>\n<p>It is possible to specify a limit for the number of items to be retrieved in one page:</p>\n<pre><span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_records</span><span class=\"p\">(</span><span class=\"n\">_limit</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p>In order to retrieve every available pages with a limited number of items in each\nof them, you can specify the number of pages:</p>\n<pre><span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_records</span><span class=\"p\">(</span><span class=\"n\">_limit</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">pages</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s1\">'inf'</span><span class=\"p\">))</span>  <span class=\"c1\"># Infinity</span>\n</pre>\n</div>\n<div id=\"history\">\n<h3>History</h3>\n<p>If the built-in <a href=\"https://kinto.readthedocs.io/en/latest/api/1.x/history.html\" rel=\"nofollow\">history plugin</a> is enabled, it is possible to retrieve the history of changes:</p>\n<pre><span class=\"c1\"># Get the complete history of a bucket</span>\n<span class=\"n\">changes</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_history</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"s1\">'default'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># and optionally use filters</span>\n<span class=\"n\">hist</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_history</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"s1\">'default'</span><span class=\"p\">,</span> <span class=\"n\">_limit</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">_sort</span><span class=\"o\">=</span><span class=\"s1\">'-last_modified'</span><span class=\"p\">,</span> <span class=\"n\">_since</span><span class=\"o\">=</span><span class=\"s1\">'1533762576015'</span><span class=\"p\">)</span>\n<span class=\"n\">hist</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_history</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"s1\">'default'</span><span class=\"p\">,</span> <span class=\"n\">resource_name</span><span class=\"o\">=</span><span class=\"s1\">'collection'</span><span class=\"p\">)</span>\n</pre>\n<p>The history of a bucket can also be purged with:</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">purge_history</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"s1\">'default'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"endpoint-urls\">\n<h3>Endpoint URLs</h3>\n<p>The <tt>get_endpoint()</tt> method returns an endpoint URL on the server:</p>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">server_url</span><span class=\"o\">=</span><span class=\"s1\">'http://localhost:8888/v1'</span><span class=\"p\">,</span>\n                <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'token'</span><span class=\"p\">,</span> <span class=\"s1\">'your-token'</span><span class=\"p\">),</span>\n                <span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"s2\">\"payments\"</span><span class=\"p\">,</span>\n                <span class=\"n\">collection</span><span class=\"o\">=</span><span class=\"s2\">\"receipts\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_endpoint</span><span class=\"p\">(</span><span class=\"s2\">\"record\"</span><span class=\"p\">,</span>\n                          <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"c6894b2c-1856-11e6-9415-3c970ede22b0\"</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># '/buckets/payments/collections/receipts/records/c6894b2c-1856-11e6-9415-3c970ede22b0'</span>\n</pre>\n</div>\n<div id=\"handling-datetime-and-date-objects\">\n<h3>Handling datetime and date objects</h3>\n<p>In addition to the data types supported by JSON, kinto-http.py also\nsupports native Python date and datetime objects.</p>\n<p>In case a payload contain a date or a datetime object, kinto-http.py\nwill encode it as an ISO formatted string.</p>\n<p>Please note that this transformation is only one-way. While reading a\nrecord, if a string contains a ISO formated string, kinto-http.py will\nnot convert it to a native Python date or datetime object.</p>\n<p>If you know that a field will be a datetime, you might consider\nencoding it yourself to be more explicit about it being a string for\nKinto.</p>\n</div>\n<div id=\"command-line-scripts\">\n<h3>Command-line scripts</h3>\n<p>In order to have common arguments and options for scripts, some utilities are provided\nto ease configuration and initialization of client from command-line arguments.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">kinto_http</span> <span class=\"kn\">import</span> <span class=\"n\">cli_utils</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">(</span><span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"Download records\"</span><span class=\"p\">)</span>\n    <span class=\"n\">cli_utils</span><span class=\"o\">.</span><span class=\"n\">set_parser_server_options</span><span class=\"p\">(</span><span class=\"n\">parser</span><span class=\"p\">)</span>\n\n    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n\n    <span class=\"n\">cli_utils</span><span class=\"o\">.</span><span class=\"n\">setup_logger</span><span class=\"p\">(</span><span class=\"n\">logger</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">)</span>\n\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s2\">\"Instantiate Kinto client.\"</span><span class=\"p\">)</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">cli_utils</span><span class=\"o\">.</span><span class=\"n\">create_client_from_args</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Fetch records.\"</span><span class=\"p\">)</span>\n    <span class=\"n\">records</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_records</span><span class=\"p\">()</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\"> records.\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">records</span><span class=\"p\">)))</span>\n</pre>\n<p>The script now accepts basic options:</p>\n<pre>$ python example.py --help\n\nusage: example.py [-h] [-s SERVER] [-a AUTH] [-b BUCKET] [-c COLLECTION] [-v]\n                  [-q] [-D]\n\nDownload records\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SERVER, --server SERVER\n                        The location of the remote server (with prefix)\n  -a AUTH, --auth AUTH  BasicAuth credentials: `token:my-secret` or\n                        Authorization header: `Bearer token`\n  -b BUCKET, --bucket BUCKET\n                        Bucket name.\n  -c COLLECTION, --collection COLLECTION\n                        Collection name.\n  --retry RETRY         Number of retries when a request fails\n  --retry-after RETRY_AFTER\n                        Delay in seconds between retries when requests fail\n                        (default: provided by server)\n  -v, --verbose         Show all messages.\n  -q, --quiet           Show only critical errors.\n  -D, --debug           Show all messages, including debug messages.\n</pre>\n</div>\n</div>\n<div id=\"run-tests\">\n<h2>Run tests</h2>\n<p>In one terminal, run a Kinto server:</p>\n<pre>$ make runkinto\n</pre>\n<p>In another, run the tests against it:</p>\n<pre>$ make tests\n</pre>\n<p>(Optional) Install a git hook:</p>\n<pre>therapist install\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6424945, "releases": {"10.0.0": [{"comment_text": "", "digests": {"md5": "43c999da2db7bd7a5e93b3c5cb9c5e70", "sha256": "3d48894ab63225f8ba096a706c16d533926ac643bb6a8913b7af2f3a08d8496e"}, "downloads": -1, "filename": "kinto_http-10.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "43c999da2db7bd7a5e93b3c5cb9c5e70", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 45711, "upload_time": "2018-10-15T10:25:38", "upload_time_iso_8601": "2018-10-15T10:25:38.618512Z", "url": "https://files.pythonhosted.org/packages/0e/b5/7fd4ac8dc8bd541e157f9d7555341008dd6f84b0fbc30f371ad192166998/kinto_http-10.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4bed6a20e84f88b69826756e5c5194d9", "sha256": "59ada2f851175f3cf9f533aaab3c2d7c883372e9c4e6bb3e4e23b85bed776af5"}, "downloads": -1, "filename": "kinto-http-10.0.0.tar.gz", "has_sig": false, "md5_digest": "4bed6a20e84f88b69826756e5c5194d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44173, "upload_time": "2018-10-15T10:25:37", "upload_time_iso_8601": "2018-10-15T10:25:37.044229Z", "url": "https://files.pythonhosted.org/packages/d6/e2/fc4352ea1e0e08d38b8cfa20b1111617864e95647a2855f63d99e98f09a8/kinto-http-10.0.0.tar.gz", "yanked": false}], "10.1.0": [{"comment_text": "", "digests": {"md5": "783f03676074352333ccf4344537c6d5", "sha256": "4b1ace6d46a180810c5ce0744fa89a4273c8314824abc70f868114a047780313"}, "downloads": -1, "filename": "kinto_http-10.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "783f03676074352333ccf4344537c6d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 46517, "upload_time": "2018-11-05T14:03:32", "upload_time_iso_8601": "2018-11-05T14:03:32.683885Z", "url": "https://files.pythonhosted.org/packages/04/5a/42fe83f12613940b6f731869481b4c032de4c3be3f610b223f4251d63f17/kinto_http-10.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca0d209cddb5978adc50f5998aa8995b", "sha256": "8a9358eeca2f020d5dbdb884ed0c4c7d9436afad9a801e6a609b2ed83d26f638"}, "downloads": -1, "filename": "kinto-http-10.1.0.tar.gz", "has_sig": false, "md5_digest": "ca0d209cddb5978adc50f5998aa8995b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45011, "upload_time": "2018-11-05T14:03:30", "upload_time_iso_8601": "2018-11-05T14:03:30.705156Z", "url": "https://files.pythonhosted.org/packages/92/f2/60bd6ff537f765f29cfd211f742fdb1628a3a00b1edaddd15a2871ef0cf4/kinto-http-10.1.0.tar.gz", "yanked": false}], "10.1.1": [{"comment_text": "", "digests": {"md5": "5b61fbf26acaf4272e287f54b57b1516", "sha256": "ceea5cad51a7cffb4fa0474ec4ef611f01805443b81cc3034e96b95985a51b83"}, "downloads": -1, "filename": "kinto_http-10.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5b61fbf26acaf4272e287f54b57b1516", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 46629, "upload_time": "2018-11-13T07:29:29", "upload_time_iso_8601": "2018-11-13T07:29:29.858191Z", "url": "https://files.pythonhosted.org/packages/57/6a/261fd4d386af4b2e324c56f5aec8351d7757295cd3c927419d75ca17c301/kinto_http-10.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43ec5d436f78e3a287167dceea0ecb68", "sha256": "aa5ceb9d98093c6d0aa5b89af11221f5f6be8f51e6871e0626fd2a6e492934b1"}, "downloads": -1, "filename": "kinto-http-10.1.1.tar.gz", "has_sig": false, "md5_digest": "43ec5d436f78e3a287167dceea0ecb68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45169, "upload_time": "2018-11-13T07:29:27", "upload_time_iso_8601": "2018-11-13T07:29:27.732830Z", "url": "https://files.pythonhosted.org/packages/b6/0c/18bcbdf5261f7cd9a39bdcb9fcaf154aec02d8ee2e060b87399681d8679d/kinto-http-10.1.1.tar.gz", "yanked": false}], "10.2.0": [{"comment_text": "", "digests": {"md5": "3ce726b1dd26a24ab3d63fb3981030e4", "sha256": "ccf086ec71e7a1b8b4216225c1e70821c208502b776982dcdd77b10f9d789c56"}, "downloads": -1, "filename": "kinto_http-10.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "3ce726b1dd26a24ab3d63fb3981030e4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 47107, "upload_time": "2018-12-17T14:12:08", "upload_time_iso_8601": "2018-12-17T14:12:08.277861Z", "url": "https://files.pythonhosted.org/packages/42/ab/2ef953609b097223e6298d560abc9b47eb450b5f8eabc2186e027cb64024/kinto_http-10.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b29fac8bcb12eab337d5da644fb7eba3", "sha256": "e8343772a4e16bbb832ec36600e98b16a3a6ee02bd5a0142897eae180be4fcb0"}, "downloads": -1, "filename": "kinto-http-10.2.0.tar.gz", "has_sig": false, "md5_digest": "b29fac8bcb12eab337d5da644fb7eba3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45937, "upload_time": "2018-12-17T14:12:10", "upload_time_iso_8601": "2018-12-17T14:12:10.611739Z", "url": "https://files.pythonhosted.org/packages/79/62/845a85b1654cb46c6ea908356734545a25b2c013c981c9f2a79467f4b5b9/kinto-http-10.2.0.tar.gz", "yanked": false}], "10.3.0": [{"comment_text": "", "digests": {"md5": "dcc42cac0da351048aad098dec9488a8", "sha256": "b2ac0f716a05e7645be6ca1dbdf4f7a2704dfc8743d58aa8ddc5f1b8a12730f5"}, "downloads": -1, "filename": "kinto_http-10.3.0-py2-none-any.whl", "has_sig": false, "md5_digest": "dcc42cac0da351048aad098dec9488a8", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 48365, "upload_time": "2019-03-07T11:55:34", "upload_time_iso_8601": "2019-03-07T11:55:34.218627Z", "url": "https://files.pythonhosted.org/packages/d9/1e/906569a43b513fd83b154090ed34a2d9b4b77370cdeefe374ce9e4cfc24f/kinto_http-10.3.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "371a3eb74227ab978883bca82ec27283", "sha256": "ffaa9a81b3def3707eb05780f1d66f16c71ac0a21a34de7e21f16236ad0564dc"}, "downloads": -1, "filename": "kinto-http-10.3.0.tar.gz", "has_sig": false, "md5_digest": "371a3eb74227ab978883bca82ec27283", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47448, "upload_time": "2019-03-07T11:55:36", "upload_time_iso_8601": "2019-03-07T11:55:36.339755Z", "url": "https://files.pythonhosted.org/packages/2d/1d/5833f2e1117c36238103794f9abac4a6276c0e2957eb8de7bfa790a95558/kinto-http-10.3.0.tar.gz", "yanked": false}], "10.4.0": [{"comment_text": "", "digests": {"md5": "a10d8c5812cd913b526cf6fc45bf7c73", "sha256": "c3a2c88f2b9d2dfb19b4a0778e5be26b430d762fd7cf7ea61395f6cdf345460b"}, "downloads": -1, "filename": "kinto_http-10.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a10d8c5812cd913b526cf6fc45bf7c73", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42380, "upload_time": "2019-05-09T14:54:19", "upload_time_iso_8601": "2019-05-09T14:54:19.035677Z", "url": "https://files.pythonhosted.org/packages/12/0a/04a33a6051bd1bdb94ef147cc008e05f52d6c6e7debb1dbcd2a394f5b171/kinto_http-10.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ea1cf767ec2acd6ee1aeef08d175dca", "sha256": "502921ed13d8f3ad728ca466f3bf8c53cc1443d75f75b0f666af0d6f27addcd3"}, "downloads": -1, "filename": "kinto-http-10.4.0.tar.gz", "has_sig": false, "md5_digest": "7ea1cf767ec2acd6ee1aeef08d175dca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47204, "upload_time": "2019-05-09T14:54:21", "upload_time_iso_8601": "2019-05-09T14:54:21.093394Z", "url": "https://files.pythonhosted.org/packages/e9/a0/9d4298539382b3905b5cc41713bcbc9f673568033a5b14fd73f003570ea6/kinto-http-10.4.0.tar.gz", "yanked": false}], "10.4.1": [{"comment_text": "", "digests": {"md5": "96ebfa87809a2ef17f64f80cbadd5b80", "sha256": "e91251c5d4bf35d05eb3bd10f4a27a846f68faa92be75ed3fe5bb858e7338535"}, "downloads": -1, "filename": "kinto_http-10.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "96ebfa87809a2ef17f64f80cbadd5b80", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42503, "upload_time": "2019-05-22T07:54:29", "upload_time_iso_8601": "2019-05-22T07:54:29.849700Z", "url": "https://files.pythonhosted.org/packages/29/0e/38b15aa7996dae558eda6a31625e81b4bfea93c426c676e6630e5b289939/kinto_http-10.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc7abcf964ba8f741ccc0cec32da212d", "sha256": "39935e0f224d6781c6b910358857247525db17e40d5cd79c261239c3c3dd933f"}, "downloads": -1, "filename": "kinto-http-10.4.1.tar.gz", "has_sig": false, "md5_digest": "bc7abcf964ba8f741ccc0cec32da212d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47354, "upload_time": "2019-05-22T07:54:26", "upload_time_iso_8601": "2019-05-22T07:54:26.854155Z", "url": "https://files.pythonhosted.org/packages/4f/56/a2ae83aabc3a55e77da205565daad72c2f882db576a7e7f196ffc399f864/kinto-http-10.4.1.tar.gz", "yanked": false}], "10.5.0": [{"comment_text": "", "digests": {"md5": "70128b3d2a75340358102b5bc5045581", "sha256": "a516ef084cafdd7779a7ddd0eec0c98bde466a58c6e6a6ee1792eddd1b6c3481"}, "downloads": -1, "filename": "kinto_http-10.5.0-py2-none-any.whl", "has_sig": false, "md5_digest": "70128b3d2a75340358102b5bc5045581", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 46518, "upload_time": "2019-09-10T15:22:42", "upload_time_iso_8601": "2019-09-10T15:22:42.019009Z", "url": "https://files.pythonhosted.org/packages/43/94/1b5594661624049db05234a967fac10d2cc5dccce5ae482046ca5a7e20e1/kinto_http-10.5.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea0fa111e83834c697949739e2a0876f", "sha256": "c025b95f99432bb403a4ca842cb0b68ba5b4f95b54e21f16fc1b3af2c702dd53"}, "downloads": -1, "filename": "kinto-http-10.5.0.tar.gz", "has_sig": false, "md5_digest": "ea0fa111e83834c697949739e2a0876f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45003, "upload_time": "2019-09-10T15:22:39", "upload_time_iso_8601": "2019-09-10T15:22:39.238777Z", "url": "https://files.pythonhosted.org/packages/b9/18/5dc52a168cf156091a5fdfb2fc3344b9e6fee19e4fcbe2926526f130b9d2/kinto-http-10.5.0.tar.gz", "yanked": false}], "10.6.0": [{"comment_text": "", "digests": {"md5": "3f9d964db78f7409b05e6946dbead2c6", "sha256": "9b5695bb28a3c31531dbe19fb9ea08e66e86cf039b76662261626fc3dfd0be4d"}, "downloads": -1, "filename": "kinto_http-10.6.0-py2-none-any.whl", "has_sig": false, "md5_digest": "3f9d964db78f7409b05e6946dbead2c6", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 46965, "upload_time": "2019-09-20T14:03:46", "upload_time_iso_8601": "2019-09-20T14:03:46.385600Z", "url": "https://files.pythonhosted.org/packages/ad/f8/422635a96a553e3a3ff87873eb3e78904f88fe1d3a3b2b3b2f9913d127ec/kinto_http-10.6.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df04a4e87377846a2e602543cccc826a", "sha256": "d1c000788ad811bb496b8880cf99b4c35c565add5dc8f1180d6ef08772a390b8"}, "downloads": -1, "filename": "kinto-http-10.6.0.tar.gz", "has_sig": false, "md5_digest": "df04a4e87377846a2e602543cccc826a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45571, "upload_time": "2019-09-20T14:03:48", "upload_time_iso_8601": "2019-09-20T14:03:48.629908Z", "url": "https://files.pythonhosted.org/packages/64/66/fd0f0d72e7126507edb066eecb38fb0c9c168c31ca1c5954c66142b6e669/kinto-http-10.6.0.tar.gz", "yanked": false}], "10.6.1": [{"comment_text": "", "digests": {"md5": "49587a1e9505392aae6d6b7d7c794613", "sha256": "a45ab85cd6a1cfc05fc79f32acc3c75c3ab572d662eb148051132192ad22833b"}, "downloads": -1, "filename": "kinto_http-10.6.1-py2-none-any.whl", "has_sig": false, "md5_digest": "49587a1e9505392aae6d6b7d7c794613", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 46999, "upload_time": "2019-11-13T09:27:47", "upload_time_iso_8601": "2019-11-13T09:27:47.547511Z", "url": "https://files.pythonhosted.org/packages/f1/a6/d284ae34aa6ccefd207b09ab8ea706eef99dc793e3e751a2a43955e43345/kinto_http-10.6.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a49877088844946ab16b0c239b0d7201", "sha256": "6817e16c97411627c894db39297fb6721e82c9248b575d6072471a3837f63151"}, "downloads": -1, "filename": "kinto-http-10.6.1.tar.gz", "has_sig": false, "md5_digest": "a49877088844946ab16b0c239b0d7201", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45621, "upload_time": "2019-11-13T09:27:51", "upload_time_iso_8601": "2019-11-13T09:27:51.819506Z", "url": "https://files.pythonhosted.org/packages/f6/fa/286f455401628722e33dc55640067f9644e413ad980b2305864d8cb0f902/kinto-http-10.6.1.tar.gz", "yanked": false}], "10.7.0": [{"comment_text": "", "digests": {"md5": "ebeeea77c8ba4c5f006bab34dcdad2e9", "sha256": "ab5b5d5f81ac546509246db04540d9893153f42679bf519f8e1100963c587de5"}, "downloads": -1, "filename": "kinto_http-10.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ebeeea77c8ba4c5f006bab34dcdad2e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42015, "upload_time": "2020-01-09T22:02:26", "upload_time_iso_8601": "2020-01-09T22:02:26.264364Z", "url": "https://files.pythonhosted.org/packages/41/bc/9fa91e1a2d271c3d764009ab03edf8e18fa6bf19498d468b57109a33885d/kinto_http-10.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5051f6d81156279d9dfab87b0900c532", "sha256": "fe5a1b794695be6d63019be6bb4cd0d7dbb13b6572e4ed4225f97246261f86fe"}, "downloads": -1, "filename": "kinto-http-10.7.0.tar.gz", "has_sig": false, "md5_digest": "5051f6d81156279d9dfab87b0900c532", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45831, "upload_time": "2020-01-09T22:02:29", "upload_time_iso_8601": "2020-01-09T22:02:29.122790Z", "url": "https://files.pythonhosted.org/packages/4e/68/c376448e7fb37b42b2234f5636235600afb6322955a4f56ac5e799cf6b9d/kinto-http-10.7.0.tar.gz", "yanked": false}], "6.0.0": [{"comment_text": "", "digests": {"md5": "466928d0261c0ac05cc1daf5128efe7d", "sha256": "adbc0e075d64e881296d30814114c130444a79459c5972b87660192d63499c67"}, "downloads": -1, "filename": "kinto_http-6.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "466928d0261c0ac05cc1daf5128efe7d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32394, "upload_time": "2016-06-10T10:33:55", "upload_time_iso_8601": "2016-06-10T10:33:55.064938Z", "url": "https://files.pythonhosted.org/packages/4f/26/3a272ef4c5cacc758ef133c0c5929a685633529bd722f969347bad9e8559/kinto_http-6.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5187cc8f6cfd0dd934d4263aee5bee0b", "sha256": "585fe9a21635df9136f7bbe7e35225c730d617a275965a3583b6d7ffb73de1e2"}, "downloads": -1, "filename": "kinto-http-6.0.0.tar.gz", "has_sig": false, "md5_digest": "5187cc8f6cfd0dd934d4263aee5bee0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29126, "upload_time": "2016-06-10T10:33:59", "upload_time_iso_8601": "2016-06-10T10:33:59.855362Z", "url": "https://files.pythonhosted.org/packages/59/62/5fed0741ac447cf7c878cd9222b68e4d53d2ef343bca07f934132ab7d0b2/kinto-http-6.0.0.tar.gz", "yanked": false}], "6.1.0": [{"comment_text": "", "digests": {"md5": "eac19d8d72409badb0f27af353acf10b", "sha256": "a3087262b01dd6e2e9191ad5a381960ad5f2a50687c7bb14ac7afa92085fef9d"}, "downloads": -1, "filename": "kinto_http-6.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eac19d8d72409badb0f27af353acf10b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32691, "upload_time": "2016-08-04T14:50:15", "upload_time_iso_8601": "2016-08-04T14:50:15.100521Z", "url": "https://files.pythonhosted.org/packages/4e/1e/42e4c5775e6613cb5b579a1494cd7a032ed7977ef1beb74a0d8e56daa891/kinto_http-6.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b80324dc7fc4abaef35e065b21a6681", "sha256": "f8462ce3bc4787b8458977b48df0848797eda35423853e0948f2871582f9ff43"}, "downloads": -1, "filename": "kinto-http-6.1.0.tar.gz", "has_sig": false, "md5_digest": "4b80324dc7fc4abaef35e065b21a6681", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29346, "upload_time": "2016-08-04T14:50:18", "upload_time_iso_8601": "2016-08-04T14:50:18.019502Z", "url": "https://files.pythonhosted.org/packages/3e/3b/23fc30fae4065b5963856d65d71adb93ad9eefb3dceabb9315e7e59ee8d7/kinto-http-6.1.0.tar.gz", "yanked": false}], "6.2.1": [{"comment_text": "", "digests": {"md5": "3b5f83d18015c3d4289ebc8d95273d01", "sha256": "e4bcd2a8c0a6553abcc1badf196290fe74d58138fd0968aed8810104d3fb6e8b"}, "downloads": -1, "filename": "kinto_http-6.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3b5f83d18015c3d4289ebc8d95273d01", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 33511, "upload_time": "2016-09-08T09:58:28", "upload_time_iso_8601": "2016-09-08T09:58:28.233932Z", "url": "https://files.pythonhosted.org/packages/6f/69/278b324c7fa57fc2c91df54d539936f7a8809e4b79a31c7ac05362127165/kinto_http-6.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2bccd8e2afe937eeee13c2da0bd32936", "sha256": "c1f896d76e7e1947b5597a66ade8e90dd3a970ba57f8680f0bad7b6fcc1d62f4"}, "downloads": -1, "filename": "kinto-http-6.2.1.tar.gz", "has_sig": false, "md5_digest": "2bccd8e2afe937eeee13c2da0bd32936", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30393, "upload_time": "2016-09-08T09:58:30", "upload_time_iso_8601": "2016-09-08T09:58:30.455420Z", "url": "https://files.pythonhosted.org/packages/ed/cf/ffec089f266c2097da833b0afa5a99b71e54fdf36f587ed4bbb0d389633d/kinto-http-6.2.1.tar.gz", "yanked": false}], "7.0.0": [{"comment_text": "", "digests": {"md5": "06d04e1edcded0a7a129409aff8db30f", "sha256": "e01676ceae9fce547accd75982e86a5ed091f7308efb27a040c3e9a05b83428b"}, "downloads": -1, "filename": "kinto_http-7.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "06d04e1edcded0a7a129409aff8db30f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 34421, "upload_time": "2016-09-30T12:12:08", "upload_time_iso_8601": "2016-09-30T12:12:08.823744Z", "url": "https://files.pythonhosted.org/packages/ed/46/c6d13b6cf3ab7f98b2b169d7a63591a5ee85adcb3a24488e9df3f350d049/kinto_http-7.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "240367c4b9214855790f413e4bc947c3", "sha256": "4a702b81b751e55a39f30cb75152910418280cb8683e8ffc3878638ab5a76bdc"}, "downloads": -1, "filename": "kinto-http-7.0.0.tar.gz", "has_sig": false, "md5_digest": "240367c4b9214855790f413e4bc947c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28317, "upload_time": "2016-09-30T12:12:11", "upload_time_iso_8601": "2016-09-30T12:12:11.560892Z", "url": "https://files.pythonhosted.org/packages/30/90/32e15fc2587a3b71359b4da00fbb323ccd00d96d034cbedd4918e613bc6d/kinto-http-7.0.0.tar.gz", "yanked": false}], "7.1.0": [{"comment_text": "", "digests": {"md5": "2357f4585f208671e144b515830369ea", "sha256": "119375fd818c730836baab859b9482f4e9d831afdd11a788999778cc98bf771a"}, "downloads": -1, "filename": "kinto_http-7.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2357f4585f208671e144b515830369ea", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36687, "upload_time": "2017-03-16T16:13:55", "upload_time_iso_8601": "2017-03-16T16:13:55.966689Z", "url": "https://files.pythonhosted.org/packages/47/28/e0ee28cdfeeb8509abc2b1aca0a074137bdc60b9d09f9d96e408c353dfef/kinto_http-7.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3b674e7fe08a0bfb3d400c1f86ade4b", "sha256": "c52266dbedb163281fb4f38fd34392a4816b549a4bdf1c2191d15d1ad934668f"}, "downloads": -1, "filename": "kinto-http-7.1.0.tar.gz", "has_sig": false, "md5_digest": "d3b674e7fe08a0bfb3d400c1f86ade4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34274, "upload_time": "2017-03-16T16:13:57", "upload_time_iso_8601": "2017-03-16T16:13:57.341341Z", "url": "https://files.pythonhosted.org/packages/4b/16/7cbcebcaff62ff6b19abf81038828a4b230b4fe0845526afce46d023f244/kinto-http-7.1.0.tar.gz", "yanked": false}], "7.2.0": [{"comment_text": "", "digests": {"md5": "baba0f231f1b5f6642f2b09f896da65a", "sha256": "561b184b77c383cb2427c61d26e0397db954e2462477d02ab726f4303e812279"}, "downloads": -1, "filename": "kinto_http-7.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "baba0f231f1b5f6642f2b09f896da65a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36669, "upload_time": "2017-03-17T21:07:51", "upload_time_iso_8601": "2017-03-17T21:07:51.859451Z", "url": "https://files.pythonhosted.org/packages/5d/b5/f985142dacf7c6c22756888fa30dddbcd4ae40bbdb3da27c4a86b65e04fb/kinto_http-7.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b67d5b9b1768eeca6ce1c167ed0fe2b", "sha256": "43d5305ad339b42be7e54dbf8c95bc37d096d181260678c052fc7838e036586c"}, "downloads": -1, "filename": "kinto-http-7.2.0.tar.gz", "has_sig": false, "md5_digest": "0b67d5b9b1768eeca6ce1c167ed0fe2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34312, "upload_time": "2017-03-17T21:07:50", "upload_time_iso_8601": "2017-03-17T21:07:50.148758Z", "url": "https://files.pythonhosted.org/packages/ea/40/2e55d06c2434267043634c20dbd4e6e1cd2730c4154f6fcb2101d0c43f4c/kinto-http-7.2.0.tar.gz", "yanked": false}], "8.0.0": [{"comment_text": "", "digests": {"md5": "697230c005ba7b91dd314f2bfb36df0a", "sha256": "5d29f1e0e7fe8f15f4d721c22ca907c4e4c6c8ca0299caaed127bf7920323ba6"}, "downloads": -1, "filename": "kinto_http-8.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "697230c005ba7b91dd314f2bfb36df0a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 38740, "upload_time": "2017-05-11T18:17:41", "upload_time_iso_8601": "2017-05-11T18:17:41.210985Z", "url": "https://files.pythonhosted.org/packages/0c/33/f031b4a091ae00197ec8f73f28408fe097f32bda2b257626d4a5fc732251/kinto_http-8.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5df00d877d2509e52978ebf2ee1b2b64", "sha256": "5c2e9f1e8b50e4bb439990d91f44a96873e1085cd724f5b9e92789b5deda5d3f"}, "downloads": -1, "filename": "kinto-http-8.0.0.tar.gz", "has_sig": false, "md5_digest": "5df00d877d2509e52978ebf2ee1b2b64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36806, "upload_time": "2017-05-11T18:17:39", "upload_time_iso_8601": "2017-05-11T18:17:39.462676Z", "url": "https://files.pythonhosted.org/packages/0f/d6/e9ce79b1f4ce448d7f72990270dd98316481663242775fac4a00985678e3/kinto-http-8.0.0.tar.gz", "yanked": false}], "8.0.1": [{"comment_text": "", "digests": {"md5": "108b201275a3ab49c5fe611497bb31d0", "sha256": "ff7b7f99b32423d35119dbd83451fea258d07fc2dcd0e4a24ff171048e4d779a"}, "downloads": -1, "filename": "kinto_http-8.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "108b201275a3ab49c5fe611497bb31d0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 38792, "upload_time": "2017-05-16T10:15:07", "upload_time_iso_8601": "2017-05-16T10:15:07.916523Z", "url": "https://files.pythonhosted.org/packages/da/f7/e2d0b8ffe4fc1cf9db35ea67221cff8acb1f48073f1bf222c5dd16fbc465/kinto_http-8.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "138a66b644c6d64a740001a96f8614c2", "sha256": "55fe15326ed4ff36a487342c6b9bd087d27c4006dcf705b8a89e0841e078897a"}, "downloads": -1, "filename": "kinto-http-8.0.1.tar.gz", "has_sig": false, "md5_digest": "138a66b644c6d64a740001a96f8614c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36883, "upload_time": "2017-05-16T10:15:05", "upload_time_iso_8601": "2017-05-16T10:15:05.845402Z", "url": "https://files.pythonhosted.org/packages/43/60/5d335f667ac7d7e31b56ae43f285ab3cb0cac23b4b973d542cbdd76ccbeb/kinto-http-8.0.1.tar.gz", "yanked": false}], "9.0.0": [{"comment_text": "", "digests": {"md5": "24fcf715e787219e8178c486be884823", "sha256": "aa1891e2f9162ccf04471739c2a974988e2ec407c8b83bd36bde531d7e937b63"}, "downloads": -1, "filename": "kinto_http-9.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "24fcf715e787219e8178c486be884823", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 39710, "upload_time": "2017-05-25T08:56:16", "upload_time_iso_8601": "2017-05-25T08:56:16.300152Z", "url": "https://files.pythonhosted.org/packages/b3/2c/d495e161cb4c1b5c483e53807f4a54c0e1332fe7cd8fe61864298c60f995/kinto_http-9.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d1790ca8bb1070226af848773eb4e4e", "sha256": "19f53fcc5f1f4ee86725b64dbef852f273bae9d6bbb40895b22097c43bd845a5"}, "downloads": -1, "filename": "kinto-http-9.0.0.tar.gz", "has_sig": false, "md5_digest": "8d1790ca8bb1070226af848773eb4e4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38612, "upload_time": "2017-05-25T08:56:18", "upload_time_iso_8601": "2017-05-25T08:56:18.059441Z", "url": "https://files.pythonhosted.org/packages/51/6e/3aba1e664eadf5aee203509c8dac0f1ae3c8bdeff9e6cccb151db7ad8ef9/kinto-http-9.0.0.tar.gz", "yanked": false}], "9.0.1": [{"comment_text": "", "digests": {"md5": "06db0341d443e8d9242d0854dd48c122", "sha256": "c724aecebb53c6d7d5e3e5a499b926761125f869fd0ab921004b12a88714aa32"}, "downloads": -1, "filename": "kinto_http-9.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "06db0341d443e8d9242d0854dd48c122", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 40239, "upload_time": "2017-05-30T14:27:33", "upload_time_iso_8601": "2017-05-30T14:27:33.529779Z", "url": "https://files.pythonhosted.org/packages/28/f1/11717e08a791e6d2cb498c6a83ff07479897bd0765f7468a2002e5c5b7a6/kinto_http-9.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51f42899db26cbd26b0022f34b47bfa3", "sha256": "4a47748cfc4afd22317ff6b8580ec1a0be6367aecc780936530569503eabd4df"}, "downloads": -1, "filename": "kinto-http-9.0.1.tar.gz", "has_sig": false, "md5_digest": "51f42899db26cbd26b0022f34b47bfa3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38865, "upload_time": "2017-05-30T14:27:35", "upload_time_iso_8601": "2017-05-30T14:27:35.840044Z", "url": "https://files.pythonhosted.org/packages/b6/27/07b405248a877faed05dad63464a880ddb582ff258d5a9b02332dd94223b/kinto-http-9.0.1.tar.gz", "yanked": false}], "9.1.0": [{"comment_text": "", "digests": {"md5": "4aa451ca6d3025e0ab6e24a8caa3b745", "sha256": "859e3b4d100d1eb75c2589887364f94845c8a6033ca27957a8e0aaec134a0ffd"}, "downloads": -1, "filename": "kinto_http-9.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4aa451ca6d3025e0ab6e24a8caa3b745", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 44099, "upload_time": "2018-02-05T14:58:46", "upload_time_iso_8601": "2018-02-05T14:58:46.199531Z", "url": "https://files.pythonhosted.org/packages/1e/52/053f19b47b6ae8c624b9f2c24a359ddfa96d11e4db6b3614fced5b7b3ddd/kinto_http-9.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e03302883c2a36883ccc4b8376c12a1e", "sha256": "6286599fe50f80b4a919378b64a3fd9ffbd84b24bf7a63ad7b04cc3c09ad3e79"}, "downloads": -1, "filename": "kinto-http-9.1.0.tar.gz", "has_sig": false, "md5_digest": "e03302883c2a36883ccc4b8376c12a1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42590, "upload_time": "2018-02-05T14:58:48", "upload_time_iso_8601": "2018-02-05T14:58:48.419663Z", "url": "https://files.pythonhosted.org/packages/e0/be/8fa91d6cfba6c84f6176bf5c28b8a738677405e690f79bfa1352dd5dd4c9/kinto-http-9.1.0.tar.gz", "yanked": false}], "9.1.1": [{"comment_text": "", "digests": {"md5": "d99efbfe1282e35d6fbd3a629398cba5", "sha256": "b3e33bbae9365ed75ca0f832760693a8077e80414249c38d89d652aeac895a44"}, "downloads": -1, "filename": "kinto_http-9.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d99efbfe1282e35d6fbd3a629398cba5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 44197, "upload_time": "2018-02-07T14:36:55", "upload_time_iso_8601": "2018-02-07T14:36:55.155511Z", "url": "https://files.pythonhosted.org/packages/c4/bc/e9ae63746396168405b3305744e17a89f7524fea1524105247c44ca08043/kinto_http-9.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2df18ba4bae779e6245a1e3de5e6cc9c", "sha256": "63c53d73f1e238c6cf1ae888d2d0190b562ef41e963f4502927dad2c7edd2660"}, "downloads": -1, "filename": "kinto-http-9.1.1.tar.gz", "has_sig": false, "md5_digest": "2df18ba4bae779e6245a1e3de5e6cc9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42666, "upload_time": "2018-02-07T14:36:44", "upload_time_iso_8601": "2018-02-07T14:36:44.261867Z", "url": "https://files.pythonhosted.org/packages/4c/c5/f182b366a57c7fe3af478f37d6087c3c7b1f9fc39b9ee50c9ccf0bb365ca/kinto-http-9.1.1.tar.gz", "yanked": false}], "9.1.2": [{"comment_text": "", "digests": {"md5": "020839b3b19df8e94f79450d8422b51b", "sha256": "e223e965f96e92cf916f473b4112fc4356698a553885f6dd49e99da8df00c404"}, "downloads": -1, "filename": "kinto_http-9.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "020839b3b19df8e94f79450d8422b51b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 44116, "upload_time": "2018-04-17T10:48:28", "upload_time_iso_8601": "2018-04-17T10:48:28.006452Z", "url": "https://files.pythonhosted.org/packages/fa/1f/42247f0fba259a142a86a7de99d4aedbb74cf1d91a9d4fb521fad8240432/kinto_http-9.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "204e72bfb94d65e0357a6e8e4ad745b0", "sha256": "dce1d39bad5b7323b43a2e8c8116b2dd02706e4dfa9d1554d4e573cdb9e08f01"}, "downloads": -1, "filename": "kinto-http-9.1.2.tar.gz", "has_sig": false, "md5_digest": "204e72bfb94d65e0357a6e8e4ad745b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42623, "upload_time": "2018-04-17T10:48:29", "upload_time_iso_8601": "2018-04-17T10:48:29.443398Z", "url": "https://files.pythonhosted.org/packages/65/ef/614d0baa2ca8a0ebd606b97026af9493d24f61bf8afdd4fafdbcdf458279/kinto-http-9.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ebeeea77c8ba4c5f006bab34dcdad2e9", "sha256": "ab5b5d5f81ac546509246db04540d9893153f42679bf519f8e1100963c587de5"}, "downloads": -1, "filename": "kinto_http-10.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ebeeea77c8ba4c5f006bab34dcdad2e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42015, "upload_time": "2020-01-09T22:02:26", "upload_time_iso_8601": "2020-01-09T22:02:26.264364Z", "url": "https://files.pythonhosted.org/packages/41/bc/9fa91e1a2d271c3d764009ab03edf8e18fa6bf19498d468b57109a33885d/kinto_http-10.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5051f6d81156279d9dfab87b0900c532", "sha256": "fe5a1b794695be6d63019be6bb4cd0d7dbb13b6572e4ed4225f97246261f86fe"}, "downloads": -1, "filename": "kinto-http-10.7.0.tar.gz", "has_sig": false, "md5_digest": "5051f6d81156279d9dfab87b0900c532", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45831, "upload_time": "2020-01-09T22:02:29", "upload_time_iso_8601": "2020-01-09T22:02:29.122790Z", "url": "https://files.pythonhosted.org/packages/4e/68/c376448e7fb37b42b2234f5636235600afb6322955a4f56ac5e799cf6b9d/kinto-http-10.7.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:38 2020"}