{"info": {"author": "Mart\u00c3\u00adn Ra\u00c3\u00bal Villalba", "author_email": "ehyde@codinghyde.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "Environment :: No Input/Output (Daemon)", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Introduction\n==========\nWorkout data statitistical analysis thingy. Sort of.\n\nThis project came to be when I tried to download data from my ANT+ running\nwatch on GNU/Linux. As it turns out there is no open source GNU/Linux software\nthat will let me schedule workouts on my Garmin Forerunner that I can also\naccess programmatically and do some simple statistical analysis with. My online\nservice of choice (Garmin Connect) now uses Bing instead of Google Maps, which\nreally doesn't work for me as Bing doesn't really have high quality satellite\nimages of the region of the world I'm in at the moment (which is quite bad when\nyou want to see your path on mountain trails that are evidently not in street\nmaps).\n\nI chose the codename Enigma because, quite frankly, I don't know what this\nproject will evolve into. I just know more or less I want a Training Center\nmeets Garmin Connect meets SportTrack meets *nix, meets calorie counter, meets\nweight log, meets training journal, meets Python.\n\nThe project will be divided in several sub-projects:\n * codinghyde.enigma: Server, general API, simple interactive CLI-based client,\n   workout data importers/exporters, data store access, etc.\n * codinghyde.griffin: GUI client (desktop) for codinghyde.enigma. Pretty\n   graphs, data caching, etc. It basically uses the enigma core and server to\n   provide a full-featured application. Also handles data import in a more\n   intuitive manner than codinghyde.enigma.cli does.\n * codinghyde.[unnamed]: Web client for codinghyde.enigma. Minimal\n   functionality compared to codinghyde.griffin, but enough to be useful while\n   away from the computer (say, checking a route, basic stats, etc).\n\n\nContact\n==========\nYou can reach me via e-Mail at:\n    ehyde at codinghyde com\n\n\nDocumentation\n==========\nDocumentation will be a bit scarse for the time being, but everything public\nshould have at least a docstring by the time I make the first stable release.\n\n\nLicense\n==========\nReleased under the MIT/X11 license. See LICENSE for the full text.\n\n\nInstall\n==========\n% python setup.py install\n\n\nDevelop\n==========\nSee DEVELOP for details.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.codinghyde.org/projects/ant/", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "codinghyde.enigma", "package_url": "https://pypi.org/project/codinghyde.enigma/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/codinghyde.enigma/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.codinghyde.org/projects/ant/"}, "release_url": "https://pypi.org/project/codinghyde.enigma/develop/", "requires_dist": null, "requires_python": null, "summary": "Workout data statitistical analysis thingy. Sort of.", "version": "develop", "yanked": false, "html_description": "<div class=\"project-description\">\n            Introduction<br>==========<br>Workout data statitistical analysis thingy. Sort of.<br><br>This project came to be when I tried to download data from my ANT+ running<br>watch on GNU/Linux. As it turns out there is no open source GNU/Linux software<br>that will let me schedule workouts on my Garmin Forerunner that I can also<br>access programmatically and do some simple statistical analysis with. My online<br>service of choice (Garmin Connect) now uses Bing instead of Google Maps, which<br>really doesn't work for me as Bing doesn't really have high quality satellite<br>images of the region of the world I'm in at the moment (which is quite bad when<br>you want to see your path on mountain trails that are evidently not in street<br>maps).<br><br>I chose the codename Enigma because, quite frankly, I don't know what this<br>project will evolve into. I just know more or less I want a Training Center<br>meets Garmin Connect meets SportTrack meets *nix, meets calorie counter, meets<br>weight log, meets training journal, meets Python.<br><br>The project will be divided in several sub-projects:<br> * codinghyde.enigma: Server, general API, simple interactive CLI-based client,<br>   workout data importers/exporters, data store access, etc.<br> * codinghyde.griffin: GUI client (desktop) for codinghyde.enigma. Pretty<br>   graphs, data caching, etc. It basically uses the enigma core and server to<br>   provide a full-featured application. Also handles data import in a more<br>   intuitive manner than codinghyde.enigma.cli does.<br> * codinghyde.[unnamed]: Web client for codinghyde.enigma. Minimal<br>   functionality compared to codinghyde.griffin, but enough to be useful while<br>   away from the computer (say, checking a route, basic stats, etc).<br><br><br>Contact<br>==========<br>You can reach me via e-Mail at:<br>    ehyde at codinghyde com<br><br><br>Documentation<br>==========<br>Documentation will be a bit scarse for the time being, but everything public<br>should have at least a docstring by the time I make the first stable release.<br><br><br>License<br>==========<br>Released under the MIT/X11 license. See LICENSE for the full text.<br><br><br>Install<br>==========<br>% python setup.py install<br><br><br>Develop<br>==========<br>See DEVELOP for details.\n          </div>"}, "last_serial": 333821, "releases": {"develop": []}, "urls": [], "timestamp": "Thu May  7 22:18:12 2020"}