{"info": {"author": "Daniel Rodriguez", "author_email": "danjrod@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Office/Business :: Financial", "Topic :: Software Development"], "description": "\nbacktrader\n==========\n\n.. image:: https://img.shields.io/pypi/v/backtrader.svg\n   :alt: PyPi Version\n   :scale: 100%\n   :target: https://pypi.python.org/pypi/backtrader/\n\n..  .. image:: https://img.shields.io/pypi/dm/backtrader.svg\n       :alt: PyPi Monthly Donwloads\n       :scale: 100%\n       :target: https://pypi.python.org/pypi/backtrader/\n\n.. image:: https://img.shields.io/pypi/l/backtrader.svg\n   :alt: License\n   :scale: 100%\n   :target: https://github.com/backtrader/backtrader/blob/master/LICENSE\n.. image:: https://travis-ci.org/backtrader/backtrader.png?branch=master\n   :alt: Travis-ci Build Status\n   :scale: 100%\n   :target: https://travis-ci.org/backtrader/backtrader\n.. image:: https://img.shields.io/pypi/pyversions/backtrader.svg\n   :alt: Python versions\n   :scale: 100%\n   :target: https://pypi.python.org/pypi/backtrader/\n\n**Yahoo API Note**:\n\n  [2018-11-16] After some testing it would seem that data downloads can be\n  again relied upon over the web interface (or API ``v7``)\n\n**Tickets**\n\n  If it's **NOT an issue** (i.e.: bug), don't post it as an issue. It will be\n  automatically closed.\n\nFor **feedback/questions/...** use the `Community <https://community.backtrader.com>`_\n\nHere a snippet of a Simple Moving Average CrossOver. It can be done in several\ndifferent ways. Use the docs (and examples) Luke!\n::\n\n  from datetime import datetime\n  import backtrader as bt\n\n  class SmaCross(bt.SignalStrategy):\n      def __init__(self):\n          sma1, sma2 = bt.ind.SMA(period=10), bt.ind.SMA(period=30)\n          crossover = bt.ind.CrossOver(sma1, sma2)\n          self.signal_add(bt.SIGNAL_LONG, crossover)\n\n  cerebro = bt.Cerebro()\n  cerebro.addstrategy(SmaCross)\n\n  data0 = bt.feeds.YahooFinanceData(dataname='MSFT', fromdate=datetime(2011, 1, 1),\n                                    todate=datetime(2012, 12, 31))\n  cerebro.adddata(data0)\n\n  cerebro.run()\n  cerebro.plot()\n\nIncluding a full featured chart. Give it a try! This is included in the samples\nas ``sigsmacross/sigsmacross2.py``. Along it is ``sigsmacross.py`` which can be\nparametrized from the command line.\n\nFeatures:\n=========\n\nLive Trading and backtesting platform written in Python.\n\n  - Live Data Feed and Trading with\n\n    - Interactive Brokers (needs ``IbPy`` and benefits greatly from an\n      installed ``pytz``)\n    - *Visual Chart* (needs a fork of ``comtypes`` until a pull request is\n      integrated in the release and benefits from ``pytz``)\n    - *Oanda* (needs ``oandapy``) (REST API Only - v20 did not support\n      streaming when implemented)\n\n  - Data feeds from csv/files, online sources or from *pandas* and *blaze*\n  - Filters for datas, like breaking a daily bar into chunks to simulate\n    intraday or working with Renko bricks\n  - Multiple data feeds and multiple strategies supported\n  - Multiple timeframes at once\n  - Integrated Resampling and Replaying\n  - Step by Step backtesting or at once (except in the evaluation of the Strategy)\n  - Integrated battery of indicators\n  - *TA-Lib* indicator support (needs python *ta-lib* / check the docs)\n  - Easy development of custom indicators\n  - Analyzers (for example: TimeReturn, Sharpe Ratio, SQN) and ``pyfolio``\n    integration (**deprecated**)\n  - Flexible definition of commission schemes\n  - Integrated broker simulation with *Market*, *Close*, *Limit*, *Stop*,\n    *StopLimit*, *StopTrail*, *StopTrailLimit*and *OCO* orders, bracket order,\n    slippage, volume filling strategies and continuous cash adjustmet for\n    future-like instruments\n  - Sizers for automated staking\n  - Cheat-on-Close and Cheat-on-Open modes\n  - Schedulers\n  - Trading Calendars\n  - Plotting (requires matplotlib)\n\nDocumentation\n=============\n\nThe blog:\n\n  - `Blog <http://www.backtrader.com/blog>`_\n\nRead the full documentation at:\n\n  - `Documentation <http://www.backtrader.com/docu>`_\n\nList of built-in Indicators (122)\n\n  - `Indicators Reference <http://www.backtrader.com/docu/indautoref.html>`_\n\nPython 2/3 Support\n==================\n\n  - Python ``2.7``\n  - Python ``3.2`` / ``3.3``/ ``3.4`` / ``3.5`` / ``3.6`` / ``3.7``\n\n  - It also works with ``pypy`` and ``pypy3`` (no plotting - ``matplotlib`` is\n    not supported under *pypy*)\n\nCompatibility is tested during development with ``2.7`` and ``3.5``\n\nThe other versions are tested automatically with *Travis*.\n\nInstallation\n============\n\n``backtrader`` is self-contained with no external dependencies (except if you\nwant to plot)\n\nFrom *pypi*:\n\n  - ``pip install backtrader``\n\n  - ``pip install backtrader[plotting]``\n\n    If ``matplotlib`` is not installed and you wish to do some plotting\n\n.. note:: The minimum matplotlib version is ``1.4.1``\n\nAn example for *IB* Data Feeds/Trading:\n\n  - ``IbPy`` doesn't seem to be in PyPi. Do either::\n\n      pip install git+https://github.com/blampe/IbPy.git\n\n    or (if ``git`` is not available in your system)::\n\n      pip install https://github.com/blampe/IbPy/archive/master.zip\n\nFor other functionalities like: ``Visual Chart``, ``Oanda``, ``TA-Lib``, check\nthe dependencies in the documentation.\n\nFrom source:\n\n  - Place the *backtrader* directory found in the sources inside your project\n\nVersion numbering\n=================\n\nX.Y.Z.I\n\n  - X: Major version number. Should stay stable unless something big is changed\n    like an overhaul to use ``numpy``\n  - Y: Minor version number. To be changed upon adding a complete new feature or\n    (god forbids) an incompatible API change.\n  - Z: Revision version number. To be changed for documentation updates, small\n    changes, small bug fixes\n  - I: Number of Indicators already built into the platform\n\nAlternatives\n============\n\nIf after seeing the docs and some samples (see the blog also) you feel this is\nnot your cup of tea, you can always have a look at similar Python platforms:\n\n  - `PyAlgoTrade <https://github.com/gbeced/pyalgotrade>`_\n  - `Zipline <https://github.com/quantopian/zipline>`_\n  - `Ultra-Finance <https://code.google.com/p/ultra-finance/>`_\n  - `ProfitPy <https://code.google.com/p/profitpy/>`_\n  - `pybacktest <https://github.com/ematvey/pybacktest>`_\n  - `prophet <https://github.com/Emsu/prophet>`_\n  - `quant <https://github.com/maihde/quant>`_\n  - `AlephNull <https://github.com/CarterBain/AlephNull>`_\n  - `Trading with Python <http://www.tradingwithpython.com/>`_\n  - `visualize-wealth <https://github.com/benjaminmgross/visualize-wealth>`_\n  - `tia: Toolkit for integration and analysis\n    <https://github.com/bpsmith/tia>`_\n  - `QuantSoftware Toolkit\n    <http://wiki.quantsoftware.org/index.php?title=QuantSoftware_ToolKit>`_\n  - `Pinkfish <http://fja05680.github.io/pinkfish/>`_\n  - `bt <http://pmorissette.github.io/bt/index.html>`_\n\n     ``bt`` slightly pre-dates ``backtrader`` and has a completely different\n     approach but it is funny *bt* was also chosen as the abbreviation for\n     ``backtrader`` during imports and that some of the methods have the same\n     naming (obvious naming anyhow): ``run``, ``plot`` ...\n\n  - `PyThalesians <https://github.com/thalesians/pythalesians>`_\n\n  - `QSTrader <https://github.com/mhallsmoore/qstrader/>`_\n  - `QSForex <https://github.com/mhallsmoore/qsforex>`_\n  - `pysystemtrade <https://github.com/robcarver17/pysystemtrade>`_\n  - `QTPyLib <https://github.com/ranaroussi/qtpylib>`_\n  - `RQalpha <https://github.com/ricequant/rqalpha>`_\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/mementum/backtrader/tarball/1.9.74.123", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mementum/backtrader", "keywords": "trading", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "backtrader", "package_url": "https://pypi.org/project/backtrader/", "platform": "", "project_url": "https://pypi.org/project/backtrader/", "project_urls": {"Download": "https://github.com/mementum/backtrader/tarball/1.9.74.123", "Homepage": "https://github.com/mementum/backtrader"}, "release_url": "https://pypi.org/project/backtrader/1.9.74.123/", "requires_dist": null, "requires_python": "", "summary": "BackTesting Engine", "version": "1.9.74.123", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"backtrader\">\n<h2>backtrader</h2>\n<a href=\"https://pypi.python.org/pypi/backtrader/\" rel=\"nofollow\"><img alt=\"PyPi Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/67d80f959a567d2f12c2fcc8cd6fb00451ce8f11/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6261636b7472616465722e737667\"></a>\n<a href=\"https://github.com/backtrader/backtrader/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9bb52928df0d5d75879a2b67e27512822f4748c3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6261636b7472616465722e737667\"></a>\n<a href=\"https://travis-ci.org/backtrader/backtrader\" rel=\"nofollow\"><img alt=\"Travis-ci Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/529f01cab6aa6fecdd4b5a07e8c38320f102d060/68747470733a2f2f7472617669732d63692e6f72672f6261636b7472616465722f6261636b7472616465722e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/backtrader/\" rel=\"nofollow\"><img alt=\"Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/405d30701d3047ae6eb05d7ae8f8b328328176c9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6261636b7472616465722e737667\"></a>\n<p><strong>Yahoo API Note</strong>:</p>\n<blockquote>\n[2018-11-16] After some testing it would seem that data downloads can be\nagain relied upon over the web interface (or API <tt>v7</tt>)</blockquote>\n<p><strong>Tickets</strong></p>\n<blockquote>\nIf it\u2019s <strong>NOT an issue</strong> (i.e.: bug), don\u2019t post it as an issue. It will be\nautomatically closed.</blockquote>\n<p>For <strong>feedback/questions/\u2026</strong> use the <a href=\"https://community.backtrader.com\" rel=\"nofollow\">Community</a></p>\n<p>Here a snippet of a Simple Moving Average CrossOver. It can be done in several\ndifferent ways. Use the docs (and examples) Luke!</p>\n<pre>from datetime import datetime\nimport backtrader as bt\n\nclass SmaCross(bt.SignalStrategy):\n    def __init__(self):\n        sma1, sma2 = bt.ind.SMA(period=10), bt.ind.SMA(period=30)\n        crossover = bt.ind.CrossOver(sma1, sma2)\n        self.signal_add(bt.SIGNAL_LONG, crossover)\n\ncerebro = bt.Cerebro()\ncerebro.addstrategy(SmaCross)\n\ndata0 = bt.feeds.YahooFinanceData(dataname='MSFT', fromdate=datetime(2011, 1, 1),\n                                  todate=datetime(2012, 12, 31))\ncerebro.adddata(data0)\n\ncerebro.run()\ncerebro.plot()\n</pre>\n<p>Including a full featured chart. Give it a try! This is included in the samples\nas <tt>sigsmacross/sigsmacross2.py</tt>. Along it is <tt>sigsmacross.py</tt> which can be\nparametrized from the command line.</p>\n</div>\n<div id=\"features\">\n<h2>Features:</h2>\n<p>Live Trading and backtesting platform written in Python.</p>\n<blockquote>\n<ul>\n<li>Live Data Feed and Trading with<ul>\n<li>Interactive Brokers (needs <tt>IbPy</tt> and benefits greatly from an\ninstalled <tt>pytz</tt>)</li>\n<li><em>Visual Chart</em> (needs a fork of <tt>comtypes</tt> until a pull request is\nintegrated in the release and benefits from <tt>pytz</tt>)</li>\n<li><em>Oanda</em> (needs <tt>oandapy</tt>) (REST API Only - v20 did not support\nstreaming when implemented)</li>\n</ul>\n</li>\n<li>Data feeds from csv/files, online sources or from <em>pandas</em> and <em>blaze</em></li>\n<li>Filters for datas, like breaking a daily bar into chunks to simulate\nintraday or working with Renko bricks</li>\n<li>Multiple data feeds and multiple strategies supported</li>\n<li>Multiple timeframes at once</li>\n<li>Integrated Resampling and Replaying</li>\n<li>Step by Step backtesting or at once (except in the evaluation of the Strategy)</li>\n<li>Integrated battery of indicators</li>\n<li><em>TA-Lib</em> indicator support (needs python <em>ta-lib</em> / check the docs)</li>\n<li>Easy development of custom indicators</li>\n<li>Analyzers (for example: TimeReturn, Sharpe Ratio, SQN) and <tt>pyfolio</tt>\nintegration (<strong>deprecated</strong>)</li>\n<li>Flexible definition of commission schemes</li>\n<li>Integrated broker simulation with <em>Market</em>, <em>Close</em>, <em>Limit</em>, <em>Stop</em>,\n<em>StopLimit</em>, <em>StopTrail</em>, <em>StopTrailLimit*and *OCO</em> orders, bracket order,\nslippage, volume filling strategies and continuous cash adjustmet for\nfuture-like instruments</li>\n<li>Sizers for automated staking</li>\n<li>Cheat-on-Close and Cheat-on-Open modes</li>\n<li>Schedulers</li>\n<li>Trading Calendars</li>\n<li>Plotting (requires matplotlib)</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The blog:</p>\n<blockquote>\n<ul>\n<li><a href=\"http://www.backtrader.com/blog\" rel=\"nofollow\">Blog</a></li>\n</ul>\n</blockquote>\n<p>Read the full documentation at:</p>\n<blockquote>\n<ul>\n<li><a href=\"http://www.backtrader.com/docu\" rel=\"nofollow\">Documentation</a></li>\n</ul>\n</blockquote>\n<p>List of built-in Indicators (122)</p>\n<blockquote>\n<ul>\n<li><a href=\"http://www.backtrader.com/docu/indautoref.html\" rel=\"nofollow\">Indicators Reference</a></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"python-2-3-support\">\n<h2>Python 2/3 Support</h2>\n<blockquote>\n<ul>\n<li>Python <tt>2.7</tt></li>\n<li>Python <tt>3.2</tt> / <tt>3.3</tt>/ <tt>3.4</tt> / <tt>3.5</tt> / <tt>3.6</tt> / <tt>3.7</tt></li>\n<li>It also works with <tt>pypy</tt> and <tt>pypy3</tt> (no plotting - <tt>matplotlib</tt> is\nnot supported under <em>pypy</em>)</li>\n</ul>\n</blockquote>\n<p>Compatibility is tested during development with <tt>2.7</tt> and <tt>3.5</tt></p>\n<p>The other versions are tested automatically with <em>Travis</em>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>backtrader</tt> is self-contained with no external dependencies (except if you\nwant to plot)</p>\n<p>From <em>pypi</em>:</p>\n<blockquote>\n<ul>\n<li><p><tt>pip install backtrader</tt></p>\n</li>\n<li><p><tt>pip install backtrader[plotting]</tt></p>\n<p>If <tt>matplotlib</tt> is not installed and you wish to do some plotting</p>\n</li>\n</ul>\n</blockquote>\n<div>\n<p>Note</p>\n<p>The minimum matplotlib version is <tt>1.4.1</tt></p>\n</div>\n<p>An example for <em>IB</em> Data Feeds/Trading:</p>\n<blockquote>\n<ul>\n<li><p><tt>IbPy</tt> doesn\u2019t seem to be in PyPi. Do either:</p>\n<pre>pip install git+https://github.com/blampe/IbPy.git\n</pre>\n<p>or (if <tt>git</tt> is not available in your system):</p>\n<pre>pip install https://github.com/blampe/IbPy/archive/master.zip\n</pre>\n</li>\n</ul>\n</blockquote>\n<p>For other functionalities like: <tt>Visual Chart</tt>, <tt>Oanda</tt>, <tt><span class=\"pre\">TA-Lib</span></tt>, check\nthe dependencies in the documentation.</p>\n<p>From source:</p>\n<blockquote>\n<ul>\n<li>Place the <em>backtrader</em> directory found in the sources inside your project</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"version-numbering\">\n<h2>Version numbering</h2>\n<p>X.Y.Z.I</p>\n<blockquote>\n<ul>\n<li>X: Major version number. Should stay stable unless something big is changed\nlike an overhaul to use <tt>numpy</tt></li>\n<li>Y: Minor version number. To be changed upon adding a complete new feature or\n(god forbids) an incompatible API change.</li>\n<li>Z: Revision version number. To be changed for documentation updates, small\nchanges, small bug fixes</li>\n<li>I: Number of Indicators already built into the platform</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"alternatives\">\n<h2>Alternatives</h2>\n<p>If after seeing the docs and some samples (see the blog also) you feel this is\nnot your cup of tea, you can always have a look at similar Python platforms:</p>\n<blockquote>\n<ul>\n<li><p><a href=\"https://github.com/gbeced/pyalgotrade\" rel=\"nofollow\">PyAlgoTrade</a></p>\n</li>\n<li><p><a href=\"https://github.com/quantopian/zipline\" rel=\"nofollow\">Zipline</a></p>\n</li>\n<li><p><a href=\"https://code.google.com/p/ultra-finance/\" rel=\"nofollow\">Ultra-Finance</a></p>\n</li>\n<li><p><a href=\"https://code.google.com/p/profitpy/\" rel=\"nofollow\">ProfitPy</a></p>\n</li>\n<li><p><a href=\"https://github.com/ematvey/pybacktest\" rel=\"nofollow\">pybacktest</a></p>\n</li>\n<li><p><a href=\"https://github.com/Emsu/prophet\" rel=\"nofollow\">prophet</a></p>\n</li>\n<li><p><a href=\"https://github.com/maihde/quant\" rel=\"nofollow\">quant</a></p>\n</li>\n<li><p><a href=\"https://github.com/CarterBain/AlephNull\" rel=\"nofollow\">AlephNull</a></p>\n</li>\n<li><p><a href=\"http://www.tradingwithpython.com/\" rel=\"nofollow\">Trading with Python</a></p>\n</li>\n<li><p><a href=\"https://github.com/benjaminmgross/visualize-wealth\" rel=\"nofollow\">visualize-wealth</a></p>\n</li>\n<li><p><a href=\"https://github.com/bpsmith/tia\" rel=\"nofollow\">tia: Toolkit for integration and analysis</a></p>\n</li>\n<li><p><a href=\"http://wiki.quantsoftware.org/index.php?title=QuantSoftware_ToolKit\" rel=\"nofollow\">QuantSoftware Toolkit</a></p>\n</li>\n<li><p><a href=\"http://fja05680.github.io/pinkfish/\" rel=\"nofollow\">Pinkfish</a></p>\n</li>\n<li><p><a href=\"http://pmorissette.github.io/bt/index.html\" rel=\"nofollow\">bt</a></p>\n<blockquote>\n<p><tt>bt</tt> slightly pre-dates <tt>backtrader</tt> and has a completely different\napproach but it is funny <em>bt</em> was also chosen as the abbreviation for\n<tt>backtrader</tt> during imports and that some of the methods have the same\nnaming (obvious naming anyhow): <tt>run</tt>, <tt>plot</tt> \u2026</p>\n</blockquote>\n</li>\n<li><p><a href=\"https://github.com/thalesians/pythalesians\" rel=\"nofollow\">PyThalesians</a></p>\n</li>\n<li><p><a href=\"https://github.com/mhallsmoore/qstrader/\" rel=\"nofollow\">QSTrader</a></p>\n</li>\n<li><p><a href=\"https://github.com/mhallsmoore/qsforex\" rel=\"nofollow\">QSForex</a></p>\n</li>\n<li><p><a href=\"https://github.com/robcarver17/pysystemtrade\" rel=\"nofollow\">pysystemtrade</a></p>\n</li>\n<li><p><a href=\"https://github.com/ranaroussi/qtpylib\" rel=\"nofollow\">QTPyLib</a></p>\n</li>\n<li><p><a href=\"https://github.com/ricequant/rqalpha\" rel=\"nofollow\">RQalpha</a></p>\n</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 6092508, "releases": {"1.9.74.123": [{"comment_text": "", "digests": {"md5": "f9799a48d63923a905ee7133df80b8df", "sha256": "a373ca2ba14cc86cd8211efa0aa58a73a470664c55e34d72744d29fa2b3db873"}, "downloads": -1, "filename": "backtrader-1.9.74.123-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f9799a48d63923a905ee7133df80b8df", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 411260, "upload_time": "2019-05-30T12:06:19", "upload_time_iso_8601": "2019-05-30T12:06:19.030241Z", "url": "https://files.pythonhosted.org/packages/a6/35/6ed3fbb771712d457011680970f3f0bcf38bfbc4cedd447d62705a6523c8/backtrader-1.9.74.123-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f9799a48d63923a905ee7133df80b8df", "sha256": "a373ca2ba14cc86cd8211efa0aa58a73a470664c55e34d72744d29fa2b3db873"}, "downloads": -1, "filename": "backtrader-1.9.74.123-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f9799a48d63923a905ee7133df80b8df", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 411260, "upload_time": "2019-05-30T12:06:19", "upload_time_iso_8601": "2019-05-30T12:06:19.030241Z", "url": "https://files.pythonhosted.org/packages/a6/35/6ed3fbb771712d457011680970f3f0bcf38bfbc4cedd447d62705a6523c8/backtrader-1.9.74.123-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 18:15:06 2020"}