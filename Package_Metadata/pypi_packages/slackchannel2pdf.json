{"info": {"author": "Erik Kalkoken", "author_email": "kalkoken87@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Environment :: Win32 (MS Windows)", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.7"], "description": "# slackchannel2pdf\n\n**slackchannel2pdf** is a command line tool for exporting the text contents of any Slack channel to a PDF file.\n\n![release](https://img.shields.io/pypi/v/slackchannel2pdf?label=release) ![python](https://img.shields.io/pypi/pyversions/slackchannel2pdf) ![GitHub](https://img.shields.io/github/license/ErikKalkoken/slackchannel2pdf) ![pipeline](https://api.travis-ci.org/ErikKalkoken/slackchannel2pdf.svg?branch=master)\n\n## Contents\n\n- [Overview](#overview)\n- [Features](#features)\n- [Installation](#installation)\n- [Token](#token)\n- [Usage](#usage)\n- [Arguments](#arguments)\n- [Limitations](#limitations)\n\n## Overview\n\nThis tool is aimed at end users that want to make backups of Slack conversations or be able to share them outside Slack. It will create a PDF file for every exported channel and will work both for public and private channels.\n\n**slackchannel2pdf** is an open source project and offered free of charge and under the MIT license. Please check attached licence file for details.\n\n## Features\n\nHere is a short summary of the key features of **slackchannel2pdf**:\n\n- Export of any public and private Slack channel to a PDF file (text only)\n- Automatic detection of timezone and locale based from Slack. Can also be set manually if needed.\n- Exporting support for all Slack features incl. threads and layout blocks\n- Ability to export only the portion of a channel for a specific time period\n- Ability to configure page layout of PDF file (e.g. Portrait vs. Landscape)\n\n## Installation\n\n### Python\n\nYou can install the tool from PyPI with `pip install`. This wil require you to have Python reinstalled in your machine and it will work with any OS supported by Python. We recommend installing it into a virtual environment like venv.\n\n```bash\npip install slackchannel2pdf\n```\n\nYou can then run the tool with the command `slackchannel2pdf` as explained in detail under [Usage](#usage).\n\n### Windows\n\nFor windows users we also provide a Windows EXE that does not require you to install Python. You find the EXE file under [releases](https://github.com/ErikKalkoken/slackchannel2pdf/releases).\n\n## Token\n\nTo run **slackchannel2pdf** your need to have a token for your Slack workspace with the following permissions:\n\n- `channels:history`\n- `channels:read`\n- `groups:history`\n- `groups:read`\n- `users:read`\n- `usergroups:read`\n\n## Usage\n\nIn order to use **slackchannel2pdf** you need:\n\n1. have it installed on your system (see [Installation](#installation))\n2. have a Slack token for the respective Slack workspace with the required permissions (see [Token](#token)).\n\nHere are some examples on how to use **slackchannel2pdf**:\n\nTo export the Slack channel \"general\":\n\n```bash\nslackchannel2pdf --token MY_TOKEN general\n```\n\nTo export the Slack channels \"general\", \"random\" and \"test\":\n\n```bash\nslackchannel2pdf --token MY_TOKEN general random test\n```\n\nTo export all message from channel \"general\" starting from July 5th, 2019 at 11:00.\n\n```bash\nslackchannel2pdf --token MY_TOKEN --oldest \"2019-JUL-05 11:00\" general\n```\n\n> Tip: You can provide the Slack token either as command line argument `--token` or by setting the environment variable `SLACK-TOKEN`.\n\n## Arguments\n\n```text\nusage: run.py [-h] [--token TOKEN] [--oldest OLDEST] [--latest LATEST]\n              [-d DESTINATION] [--page-orientation {portrait,landscape}]\n              [--page-format {a3,a4,a5,letter,legal}] [--timezone TIMEZONE]\n              [--locale LOCALE] [--version] [--max-messages MAX_MESSAGES]  \n              [--write-raw-data] [--add-debug-info]\n              channel [channel ...]\n\nThis program exports the text of a Slack channel to a PDF file\n\npositional arguments:\n  channel               One or several: name or ID of channel to export.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --token TOKEN         Slack OAuth token (default: None)\n  --oldest OLDEST       don't load messages older than a date (default: None)\n  --latest LATEST       don't load messages newer then a date (default: None)\n  -d DESTINATION, --destination DESTINATION\n                        Specify a destination path to store the PDF file.\n                        (TBD) (default: .)\n  --page-orientation {portrait,landscape}\n                        Orientation of PDF pages (default: portrait)\n  --page-format {a3,a4,a5,letter,legal}\n                        Format of PDF pages (default: a4)\n  --timezone TIMEZONE   Manually set the timezone to be used e.g.\n                        'Europe/Berlin' Use a timezone name as defined here: h\n                        ttps://en.wikipedia.org/wiki/List_of_tz_database_time_\n                        zones (default: None)\n  --locale LOCALE       Manually set the locale to be used with a IETF\n                        language tag, e.g. ' de-DE' for Germany. See this page\n                        for a list of valid tags:\n                        https://en.wikipedia.org/wiki/IETF_language_tag\n                        (default: None)\n  --version             show the program version and exit\n  --max-messages MAX_MESSAGES\n                        max number of messages to export (default: 10000)\n  --write-raw-data      will also write all raw data returned from the API to\n                        files, e.g. messages.json with all messages (default:\n                        None)\n  --add-debug-info      wether to add debug info to PDF (default: False)\n```\n\n## Limitations\n\n- Text only: **slackchannel2pdf** will export only text from a channel, but not images or icons. This is by design.\n- No Emojis: the tools is currently not able to write emojis as icons will will use their text representation instead (e.g. `:laughing:` instead of :laughing:).\n- DMs, Group DM: Currently not supported\n- Limited blocks support:Some non-text features of layout blocks not yet supported\n- Limited script support: This tool is rendering all text with the [Google Noto Sans](https://www.google.com/get/noto/#sans-lgc) font and will therefore support all 500+ languages that are support by that font. It does however not support many Asian languages / scripts like Chinese, Japanese, Korean, Thai and others", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "slackchannel2pdf", "package_url": "https://pypi.org/project/slackchannel2pdf/", "platform": "", "project_url": "https://pypi.org/project/slackchannel2pdf/", "project_urls": null, "release_url": "https://pypi.org/project/slackchannel2pdf/1.1.2/", "requires_dist": null, "requires_python": "", "summary": "slackchannel2pdf is a command line tool for exporting the text contents of any Slack channel to a PDF file", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>slackchannel2pdf</h1>\n<p><strong>slackchannel2pdf</strong> is a command line tool for exporting the text contents of any Slack channel to a PDF file.</p>\n<p><img alt=\"release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e4bcbb286f49642ee434ab046b4ab581e2f199f2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f736c61636b6368616e6e656c327064663f6c6162656c3d72656c65617365\"> <img alt=\"python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3deb35fad574a9cf64f5dcd2c183c96e643c24d7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f736c61636b6368616e6e656c32706466\"> <img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/339d2e7d0deae7c1ada010e683487cd40b24f5db/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f4572696b4b616c6b6f6b656e2f736c61636b6368616e6e656c32706466\"> <img alt=\"pipeline\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/834c2208757a52e795393acc45392060da1cf0b2/68747470733a2f2f6170692e7472617669732d63692e6f72672f4572696b4b616c6b6f6b656e2f736c61636b6368616e6e656c327064662e7376673f6272616e63683d6d6173746572\"></p>\n<h2>Contents</h2>\n<ul>\n<li><a href=\"#overview\" rel=\"nofollow\">Overview</a></li>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#token\" rel=\"nofollow\">Token</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#arguments\" rel=\"nofollow\">Arguments</a></li>\n<li><a href=\"#limitations\" rel=\"nofollow\">Limitations</a></li>\n</ul>\n<h2>Overview</h2>\n<p>This tool is aimed at end users that want to make backups of Slack conversations or be able to share them outside Slack. It will create a PDF file for every exported channel and will work both for public and private channels.</p>\n<p><strong>slackchannel2pdf</strong> is an open source project and offered free of charge and under the MIT license. Please check attached licence file for details.</p>\n<h2>Features</h2>\n<p>Here is a short summary of the key features of <strong>slackchannel2pdf</strong>:</p>\n<ul>\n<li>Export of any public and private Slack channel to a PDF file (text only)</li>\n<li>Automatic detection of timezone and locale based from Slack. Can also be set manually if needed.</li>\n<li>Exporting support for all Slack features incl. threads and layout blocks</li>\n<li>Ability to export only the portion of a channel for a specific time period</li>\n<li>Ability to configure page layout of PDF file (e.g. Portrait vs. Landscape)</li>\n</ul>\n<h2>Installation</h2>\n<h3>Python</h3>\n<p>You can install the tool from PyPI with <code>pip install</code>. This wil require you to have Python reinstalled in your machine and it will work with any OS supported by Python. We recommend installing it into a virtual environment like venv.</p>\n<pre>pip install slackchannel2pdf\n</pre>\n<p>You can then run the tool with the command <code>slackchannel2pdf</code> as explained in detail under <a href=\"#usage\" rel=\"nofollow\">Usage</a>.</p>\n<h3>Windows</h3>\n<p>For windows users we also provide a Windows EXE that does not require you to install Python. You find the EXE file under <a href=\"https://github.com/ErikKalkoken/slackchannel2pdf/releases\" rel=\"nofollow\">releases</a>.</p>\n<h2>Token</h2>\n<p>To run <strong>slackchannel2pdf</strong> your need to have a token for your Slack workspace with the following permissions:</p>\n<ul>\n<li><code>channels:history</code></li>\n<li><code>channels:read</code></li>\n<li><code>groups:history</code></li>\n<li><code>groups:read</code></li>\n<li><code>users:read</code></li>\n<li><code>usergroups:read</code></li>\n</ul>\n<h2>Usage</h2>\n<p>In order to use <strong>slackchannel2pdf</strong> you need:</p>\n<ol>\n<li>have it installed on your system (see <a href=\"#installation\" rel=\"nofollow\">Installation</a>)</li>\n<li>have a Slack token for the respective Slack workspace with the required permissions (see <a href=\"#token\" rel=\"nofollow\">Token</a>).</li>\n</ol>\n<p>Here are some examples on how to use <strong>slackchannel2pdf</strong>:</p>\n<p>To export the Slack channel \"general\":</p>\n<pre>slackchannel2pdf --token MY_TOKEN general\n</pre>\n<p>To export the Slack channels \"general\", \"random\" and \"test\":</p>\n<pre>slackchannel2pdf --token MY_TOKEN general random <span class=\"nb\">test</span>\n</pre>\n<p>To export all message from channel \"general\" starting from July 5th, 2019 at 11:00.</p>\n<pre>slackchannel2pdf --token MY_TOKEN --oldest <span class=\"s2\">\"2019-JUL-05 11:00\"</span> general\n</pre>\n<blockquote>\n<p>Tip: You can provide the Slack token either as command line argument <code>--token</code> or by setting the environment variable <code>SLACK-TOKEN</code>.</p>\n</blockquote>\n<h2>Arguments</h2>\n<pre>usage: run.py [-h] [--token TOKEN] [--oldest OLDEST] [--latest LATEST]\n              [-d DESTINATION] [--page-orientation {portrait,landscape}]\n              [--page-format {a3,a4,a5,letter,legal}] [--timezone TIMEZONE]\n              [--locale LOCALE] [--version] [--max-messages MAX_MESSAGES]  \n              [--write-raw-data] [--add-debug-info]\n              channel [channel ...]\n\nThis program exports the text of a Slack channel to a PDF file\n\npositional arguments:\n  channel               One or several: name or ID of channel to export.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --token TOKEN         Slack OAuth token (default: None)\n  --oldest OLDEST       don't load messages older than a date (default: None)\n  --latest LATEST       don't load messages newer then a date (default: None)\n  -d DESTINATION, --destination DESTINATION\n                        Specify a destination path to store the PDF file.\n                        (TBD) (default: .)\n  --page-orientation {portrait,landscape}\n                        Orientation of PDF pages (default: portrait)\n  --page-format {a3,a4,a5,letter,legal}\n                        Format of PDF pages (default: a4)\n  --timezone TIMEZONE   Manually set the timezone to be used e.g.\n                        'Europe/Berlin' Use a timezone name as defined here: h\n                        ttps://en.wikipedia.org/wiki/List_of_tz_database_time_\n                        zones (default: None)\n  --locale LOCALE       Manually set the locale to be used with a IETF\n                        language tag, e.g. ' de-DE' for Germany. See this page\n                        for a list of valid tags:\n                        https://en.wikipedia.org/wiki/IETF_language_tag\n                        (default: None)\n  --version             show the program version and exit\n  --max-messages MAX_MESSAGES\n                        max number of messages to export (default: 10000)\n  --write-raw-data      will also write all raw data returned from the API to\n                        files, e.g. messages.json with all messages (default:\n                        None)\n  --add-debug-info      wether to add debug info to PDF (default: False)\n</pre>\n<h2>Limitations</h2>\n<ul>\n<li>Text only: <strong>slackchannel2pdf</strong> will export only text from a channel, but not images or icons. This is by design.</li>\n<li>No Emojis: the tools is currently not able to write emojis as icons will will use their text representation instead (e.g. <code>:laughing:</code> instead of :laughing:).</li>\n<li>DMs, Group DM: Currently not supported</li>\n<li>Limited blocks support:Some non-text features of layout blocks not yet supported</li>\n<li>Limited script support: This tool is rendering all text with the <a href=\"https://www.google.com/get/noto/#sans-lgc\" rel=\"nofollow\">Google Noto Sans</a> font and will therefore support all 500+ languages that are support by that font. It does however not support many Asian languages / scripts like Chinese, Japanese, Korean, Thai and others</li>\n</ul>\n\n          </div>"}, "last_serial": 6929180, "releases": {"1.1.1": [{"comment_text": "", "digests": {"md5": "85ce1dcef2ea80be4facbc00635a090a", "sha256": "347a25e8e7875733ebb428d77d8959e0b8f64a23f0d3c2c1460be5f1e993b789"}, "downloads": -1, "filename": "slackchannel2pdf-1.1.1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "85ce1dcef2ea80be4facbc00635a090a", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.6", "size": 1263087, "upload_time": "2020-04-01T16:49:31", "upload_time_iso_8601": "2020-04-01T16:49:31.213941Z", "url": "https://files.pythonhosted.org/packages/09/21/6d399f36841db80f395829f3446a65bbe815fccac9837474399d7a481d68/slackchannel2pdf-1.1.1.linux-x86_64.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "b81ddf3a3a4e4dac911abd8d4d28163f", "sha256": "9fe5d1d35466c8ce1c0952f35ff27376ed09798480034d18dbd60d7135b3ec79"}, "downloads": -1, "filename": "slackchannel2pdf-1.1.2.tar.gz", "has_sig": false, "md5_digest": "b81ddf3a3a4e4dac911abd8d4d28163f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1194837, "upload_time": "2020-04-01T17:10:27", "upload_time_iso_8601": "2020-04-01T17:10:27.949233Z", "url": "https://files.pythonhosted.org/packages/0e/fe/a66f8b2efe4863eeb3cf8f486218af93f7d1d3dc2b3299011df9a16c1842/slackchannel2pdf-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b81ddf3a3a4e4dac911abd8d4d28163f", "sha256": "9fe5d1d35466c8ce1c0952f35ff27376ed09798480034d18dbd60d7135b3ec79"}, "downloads": -1, "filename": "slackchannel2pdf-1.1.2.tar.gz", "has_sig": false, "md5_digest": "b81ddf3a3a4e4dac911abd8d4d28163f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1194837, "upload_time": "2020-04-01T17:10:27", "upload_time_iso_8601": "2020-04-01T17:10:27.949233Z", "url": "https://files.pythonhosted.org/packages/0e/fe/a66f8b2efe4863eeb3cf8f486218af93f7d1d3dc2b3299011df9a16c1842/slackchannel2pdf-1.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:43 2020"}