{"info": {"author": "Peter Hosey", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": [], "description": "Symbolicator\nby Peter Hosey\n\nThis is a program to symbolicate crash logs generated on Mac OS X.\n\nWhen you receive a crash log, pipe it through the Symbolicator. You'll probably want to send the output into a pager or editor.\n\n\tsymbolicator < MyApp-2009-01-01-130145_My-Computer.crash | less \n\nThe Symbolicator will use Spotlight to find any dSYM bundles it needs, and dwarfdump to extract symbol information for the addresses in the crash log; it will then replace the bare addresses in the log text with the matching symbol information, and write the symbolicated text out to its standard output.\n\nThis means:\n\n- You do not need to tell the Symbolicator where your dSYM bundles are, nor to put your dSYM bundles into a special location. As long as Spotlight can find them, the Symbolicator will find them automatically.\n- You can use ThisService (http://wafflesoftware.net/thisservice/) to make a Symbolicator service. With this, you can select the entire text of a crash log, use your preferred graphical editor's New Window with Selection service to copy that text to a new document, and then select the crash log text there and run your Symbolicator service on it.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://boredzo.org/symbolicator/", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "Symbolicator", "package_url": "https://pypi.org/project/Symbolicator/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Symbolicator/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://boredzo.org/symbolicator/"}, "release_url": "https://pypi.org/project/Symbolicator/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "The Symbolicator is a program to symbolicate crash logs generated on Mac OS X.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Symbolicator\nby Peter Hosey</p>\n<p>This is a program to symbolicate crash logs generated on Mac OS X.</p>\n<p>When you receive a crash log, pipe it through the Symbolicator. You\u2019ll probably want to send the output into a pager or editor.</p>\n<blockquote>\nsymbolicator &lt; MyApp-2009-01-01-130145_My-Computer.crash | less</blockquote>\n<p>The Symbolicator will use Spotlight to find any dSYM bundles it needs, and dwarfdump to extract symbol information for the addresses in the crash log; it will then replace the bare addresses in the log text with the matching symbol information, and write the symbolicated text out to its standard output.</p>\n<p>This means:</p>\n<ul>\n<li>You do not need to tell the Symbolicator where your dSYM bundles are, nor to put your dSYM bundles into a special location. As long as Spotlight can find them, the Symbolicator will find them automatically.</li>\n<li>You can use ThisService (<a href=\"http://wafflesoftware.net/thisservice/\" rel=\"nofollow\">http://wafflesoftware.net/thisservice/</a>) to make a Symbolicator service. With this, you can select the entire text of a crash log, use your preferred graphical editor\u2019s New Window with Selection service to copy that text to a new document, and then select the crash log text there and run your Symbolicator service on it.</li>\n</ul>\n\n          </div>"}, "last_serial": 101136, "releases": {"1.0.1": []}, "urls": [], "timestamp": "Fri May  8 02:59:13 2020"}