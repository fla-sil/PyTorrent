{"info": {"author": "clintval", "author_email": "valentine.clint@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# pendant\n\n[![Testing Status](https://travis-ci.org/clintval/pendant.svg?branch=master)](https://travis-ci.org/clintval/pendant)\n[![codecov](https://codecov.io/gh/clintval/pendant/branch/master/graph/badge.svg)](https://codecov.io/gh/clintval/pendant)\n[![Documentation Build Status](https://readthedocs.org/projects/pendant/badge/?version=latest)](https://pendant.readthedocs.io/en/latest/?badge=latest)\n[![PyPi Release](https://badge.fury.io/py/pendant.svg)](https://badge.fury.io/py/pendant)\n[![Python Versions](https://img.shields.io/pypi/pyversions/pendant.svg)](https://pypi.python.org/pypi/pendant/)\n[![MyPy Checked](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\nPython 3.6+ library for submitting to AWS Batch interactively.\n\n```bash\n\u276f pip install pendant\n```\n\nFeatures:\n\n- Submit Batch jobs\n\nRead the documentation at: [pendant.readthedocs.io](https://pendant.readthedocs.io/en/latest/)\n\n\n## End-to-end Example\n\nThe principle object for deploying jobs to AWS Batch is the Batch job definition.\nEvery Batch job definition has a name, parameters, and some form of optional parameter validation.\n\n```python\n>>> from pendant.aws.batch import BatchJob, JobDefinition\n>>> from pendant.aws.s3 import S3Uri\n>>> from pendant.aws.exception import S3ObjectNotFoundError\n\n>>> class DemoJobDefinition(JobDefinition):\n...     def __init__(self, input_object: S3Uri) -> None:\n...         self.input_object = input_object\n... \n...     @property\n...     def name(self) -> str:\n...         return 'demo-job'\n... \n...     def validate(self) -> None:\n...         if not self.input_object.object_exists():\n...             raise S3ObjectNotFoundError(f'S3 object does not exist: {self.input_object}')\n```\n\nLet's instantiate the definition at a specific revision and validate it.\n\n```python\n>>> definition = DemoJobDefinition(input_object=S3Uri('s3://bucket/object')).at_revision('6')\n>>> definition.validate()\nNone\n```\n\nValidation is also performed when a job definition is wrapped by a `BatchJob` so the call to `.validate()` above was redundant.\nWrapping a job definition into a Batch job is achieved with the following, but no useful work will happen until the job is submitted.\n\n```python\n>>> job = BatchJob(definition)\n```\n\nNow we are ready to submit this job to AWS Batch!\nSubmitting this Batch job is easy, and introspection can be performed immediately:\n\n```python\n>>> response = job.submit(queue='prod')\n>>> job.is_submitted()\nTrue\n```\n\nWhen the job is in a `RUNNING` state we can access the job's Cloudwatch logs.\nThe log events are returned as objects which have useful properties such as `timestamp` and `message`.\n\n```python\n>>> for log_event in job.log_stream_events():\n...     print(log_event)\nLogEvent(timestamp=\"1543809952329\", message=\"You have started up this demo job\", ingestion_time=\"1543809957080\")\nLogEvent(timestamp=\"1543809955437\", message=\"Configuration, we are loading from...\", ingestion_time=\"1543809957080\")\nLogEvent(timestamp=\"1543809955437\", message=\"Defaulting to approximate values\", ingestion_time=\"1543809957080\")\nLogEvent(timestamp=\"1543809955437\", message=\"Setting up logger, nothing to see here\", ingestion_time=\"1543809957080\")\n```\n\nAnd if we must, we can cancel the job as long as we provide a reason:\n\n```python\n>>> response = job.terminate(reason='I was just testing!')\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/clintval/pendant/archive/v0.4.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/clintval/pendant", "keywords": "AWS Batch job submission", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pendant", "package_url": "https://pypi.org/project/pendant/", "platform": "", "project_url": "https://pypi.org/project/pendant/", "project_urls": {"Documentation": "https://pendant.readthedocs.io", "Download": "https://github.com/clintval/pendant/archive/v0.4.1.tar.gz", "Homepage": "https://github.com/clintval/pendant", "Issue-Tracker": "https://github.com/clintval/pendant/issues"}, "release_url": "https://pypi.org/project/pendant/0.4.1/", "requires_dist": null, "requires_python": "", "summary": "Python 3.6+ library for submitting to AWS Batch interactively.", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pendant</h1>\n<p><a href=\"https://travis-ci.org/clintval/pendant\" rel=\"nofollow\"><img alt=\"Testing Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86952223a98af7f8a365759184b69e6120a28497/68747470733a2f2f7472617669732d63692e6f72672f636c696e7476616c2f70656e64616e742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/clintval/pendant\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58708ab6c3f4e74cf6545583ba4f8bfcbbf97cf1/68747470733a2f2f636f6465636f762e696f2f67682f636c696e7476616c2f70656e64616e742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pendant.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2f06cf4af5c4adfdc66ebb9f728624f5a242ea08/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70656e64616e742f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://badge.fury.io/py/pendant\" rel=\"nofollow\"><img alt=\"PyPi Release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/929370d89b55f68c91fd93bbd84fbe41438cb1b3/68747470733a2f2f62616467652e667572792e696f2f70792f70656e64616e742e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pendant/\" rel=\"nofollow\"><img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a71a77aa9e72be66b50832829ca9b2bd06606d2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70656e64616e742e737667\"></a>\n<a href=\"http://mypy-lang.org/\" rel=\"nofollow\"><img alt=\"MyPy Checked\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0db8f5dcbf5f340f278004d5db3d16b4cdf33ba/687474703a2f2f7777772e6d7970792d6c616e672e6f72672f7374617469632f6d7970795f62616467652e737667\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>Python 3.6+ library for submitting to AWS Batch interactively.</p>\n<pre>\u276f pip install pendant\n</pre>\n<p>Features:</p>\n<ul>\n<li>Submit Batch jobs</li>\n</ul>\n<p>Read the documentation at: <a href=\"https://pendant.readthedocs.io/en/latest/\" rel=\"nofollow\">pendant.readthedocs.io</a></p>\n<h2>End-to-end Example</h2>\n<p>The principle object for deploying jobs to AWS Batch is the Batch job definition.\nEvery Batch job definition has a name, parameters, and some form of optional parameter validation.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pendant.aws.batch</span> <span class=\"kn\">import</span> <span class=\"n\">BatchJob</span><span class=\"p\">,</span> <span class=\"n\">JobDefinition</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pendant.aws.s3</span> <span class=\"kn\">import</span> <span class=\"n\">S3Uri</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pendant.aws.exception</span> <span class=\"kn\">import</span> <span class=\"n\">S3ObjectNotFoundError</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">DemoJobDefinition</span><span class=\"p\">(</span><span class=\"n\">JobDefinition</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">input_object</span><span class=\"p\">:</span> <span class=\"n\">S3Uri</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">input_object</span> <span class=\"o\">=</span> <span class=\"n\">input_object</span>\n<span class=\"o\">...</span> \n<span class=\"o\">...</span>     <span class=\"nd\">@property</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"nf\">name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"s1\">'demo-job'</span>\n<span class=\"o\">...</span> \n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"nf\">validate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>         <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">input_object</span><span class=\"o\">.</span><span class=\"n\">object_exists</span><span class=\"p\">():</span>\n<span class=\"o\">...</span>             <span class=\"k\">raise</span> <span class=\"n\">S3ObjectNotFoundError</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'S3 object does not exist: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">input_object</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n<p>Let's instantiate the definition at a specific revision and validate it.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">definition</span> <span class=\"o\">=</span> <span class=\"n\">DemoJobDefinition</span><span class=\"p\">(</span><span class=\"n\">input_object</span><span class=\"o\">=</span><span class=\"n\">S3Uri</span><span class=\"p\">(</span><span class=\"s1\">'s3://bucket/object'</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">at_revision</span><span class=\"p\">(</span><span class=\"s1\">'6'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">definition</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">()</span>\n<span class=\"kc\">None</span>\n</pre>\n<p>Validation is also performed when a job definition is wrapped by a <code>BatchJob</code> so the call to <code>.validate()</code> above was redundant.\nWrapping a job definition into a Batch job is achieved with the following, but no useful work will happen until the job is submitted.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">BatchJob</span><span class=\"p\">(</span><span class=\"n\">definition</span><span class=\"p\">)</span>\n</pre>\n<p>Now we are ready to submit this job to AWS Batch!\nSubmitting this Batch job is easy, and introspection can be performed immediately:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">submit</span><span class=\"p\">(</span><span class=\"n\">queue</span><span class=\"o\">=</span><span class=\"s1\">'prod'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">is_submitted</span><span class=\"p\">()</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>When the job is in a <code>RUNNING</code> state we can access the job's Cloudwatch logs.\nThe log events are returned as objects which have useful properties such as <code>timestamp</code> and <code>message</code>.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">log_event</span> <span class=\"ow\">in</span> <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">log_stream_events</span><span class=\"p\">():</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">log_event</span><span class=\"p\">)</span>\n<span class=\"n\">LogEvent</span><span class=\"p\">(</span><span class=\"n\">timestamp</span><span class=\"o\">=</span><span class=\"s2\">\"1543809952329\"</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s2\">\"You have started up this demo job\"</span><span class=\"p\">,</span> <span class=\"n\">ingestion_time</span><span class=\"o\">=</span><span class=\"s2\">\"1543809957080\"</span><span class=\"p\">)</span>\n<span class=\"n\">LogEvent</span><span class=\"p\">(</span><span class=\"n\">timestamp</span><span class=\"o\">=</span><span class=\"s2\">\"1543809955437\"</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s2\">\"Configuration, we are loading from...\"</span><span class=\"p\">,</span> <span class=\"n\">ingestion_time</span><span class=\"o\">=</span><span class=\"s2\">\"1543809957080\"</span><span class=\"p\">)</span>\n<span class=\"n\">LogEvent</span><span class=\"p\">(</span><span class=\"n\">timestamp</span><span class=\"o\">=</span><span class=\"s2\">\"1543809955437\"</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s2\">\"Defaulting to approximate values\"</span><span class=\"p\">,</span> <span class=\"n\">ingestion_time</span><span class=\"o\">=</span><span class=\"s2\">\"1543809957080\"</span><span class=\"p\">)</span>\n<span class=\"n\">LogEvent</span><span class=\"p\">(</span><span class=\"n\">timestamp</span><span class=\"o\">=</span><span class=\"s2\">\"1543809955437\"</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s2\">\"Setting up logger, nothing to see here\"</span><span class=\"p\">,</span> <span class=\"n\">ingestion_time</span><span class=\"o\">=</span><span class=\"s2\">\"1543809957080\"</span><span class=\"p\">)</span>\n</pre>\n<p>And if we must, we can cancel the job as long as we provide a reason:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">terminate</span><span class=\"p\">(</span><span class=\"n\">reason</span><span class=\"o\">=</span><span class=\"s1\">'I was just testing!'</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 4582241, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "ab984e055e04f6766f4d1a9c1e6b281d", "sha256": "2dc9870a8aa241944ce685f55f18062405b51112ea71e5ff8770090e6ffbe3c0"}, "downloads": -1, "filename": "pendant-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ab984e055e04f6766f4d1a9c1e6b281d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5762, "upload_time": "2018-12-03T18:50:21", "upload_time_iso_8601": "2018-12-03T18:50:21.034435Z", "url": "https://files.pythonhosted.org/packages/c8/aa/42b1fdca40f2fb6c580337729aeed4d45448f101d82802f728b303466a7e/pendant-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "5486f8946e80fc81d6057bf115e3df28", "sha256": "91a200b0a0cc855f6e92a34c1a21b0994baddb0e98b71fdaf6f27de3ef4de90a"}, "downloads": -1, "filename": "pendant-0.3.0.tar.gz", "has_sig": false, "md5_digest": "5486f8946e80fc81d6057bf115e3df28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11274, "upload_time": "2018-12-03T21:38:29", "upload_time_iso_8601": "2018-12-03T21:38:29.084667Z", "url": "https://files.pythonhosted.org/packages/9e/9a/de287a24ee32422fda8d4443e11a584243510edaab0a1ee59acaf2977af4/pendant-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "e545d2a2a4804e7b22f648726a6c6c2c", "sha256": "10146699b8c517ade2614aa32355c6d1ab7ba613011ff32d6a43ac4f251c7741"}, "downloads": -1, "filename": "pendant-0.4.0.tar.gz", "has_sig": false, "md5_digest": "e545d2a2a4804e7b22f648726a6c6c2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11028, "upload_time": "2018-12-04T04:13:01", "upload_time_iso_8601": "2018-12-04T04:13:01.820865Z", "url": "https://files.pythonhosted.org/packages/69/c5/f9a7cea422750325e89e0b576da1572f9a99792daae87d874e5c9906413b/pendant-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "0e645b6619844f334c4737685b04b6e8", "sha256": "b24dd3465afd26356b20872cce98b9215a4d42725f8010cdde7f74030b0d5727"}, "downloads": -1, "filename": "pendant-0.4.1.tar.gz", "has_sig": false, "md5_digest": "0e645b6619844f334c4737685b04b6e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11176, "upload_time": "2018-12-10T19:32:40", "upload_time_iso_8601": "2018-12-10T19:32:40.579169Z", "url": "https://files.pythonhosted.org/packages/fa/6e/669b012462a5e03e3e29c79b9a7477cb4be830457e3dd942a4210374e89a/pendant-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0e645b6619844f334c4737685b04b6e8", "sha256": "b24dd3465afd26356b20872cce98b9215a4d42725f8010cdde7f74030b0d5727"}, "downloads": -1, "filename": "pendant-0.4.1.tar.gz", "has_sig": false, "md5_digest": "0e645b6619844f334c4737685b04b6e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11176, "upload_time": "2018-12-10T19:32:40", "upload_time_iso_8601": "2018-12-10T19:32:40.579169Z", "url": "https://files.pythonhosted.org/packages/fa/6e/669b012462a5e03e3e29c79b9a7477cb4be830457e3dd942a4210374e89a/pendant-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:35 2020"}