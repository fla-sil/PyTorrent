{"info": {"author": "Peng Xu", "author_email": "peng.xu@bupt.edu.cn", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# TorchSketch\n[![PyPI](https://img.shields.io/pypi/v/torchsketch)](https://pypi.org/project/torchsketch/) ![](https://img.shields.io/badge/language-Python-{green}.svg) ![](https://img.shields.io/npm/l/express.svg)\n\n<div align=center><img src=\"https://github.com/PengBoXiangShang/torchsketch/blob/master/torchsketch/docs/others/torchsketch.gif\"/></div>\n\nTorchSketch is an open source software library for free-hand sketch oriented deep learning research, which is built on the top of [PyTorch](https://pytorch.org/).\n\n**The project is under continuous update!**\n\n\n\n## 1. Installation\nTorchSketch is developed based on Python 3.7.\n\nTo avoid any conflicts with your existing Python setup, it's better to install TorchSketch into a standalone environment, e.g., an Anaconda virtual environment.\n\nAssume that you have installed Anaconda. Please create a virtual environment before installation of TorchSketch, as follows.\n```bash\n# Create a virtual environment in Anaconda.\nconda create --name ${CUSTOMIZED_ENVIRONMENT_NAME} python=3.7\n\n# Activate it.\nconda activate ${CUSTOMIZED_ENVIRONMENT_NAME}\n```\n\n### 1.1 Using pip\nPlease use the following command to install TorchSketch. \n```bash\npip install torchsketch\n```\nThen, TorchSketch can be imported into your Python console as follows.\n```python\nimport torchsketch\n```\n\n### 1.2 From Source\nIn addition, TorchSketch also can be installed from source.\n```bash\n# Choose your workspace and download this repository.\ncd ${CUSTOMIZED_WORKSPACE}\ngit clone https://github.com/PengBoXiangShang/torchsketch\n\n# Enter the folder of TorchSketch.\ncd torchsketch\n\n# Install.\npython setup.py install\n```\n\n\n## 2. Major Modules and Features of TorchSketch\n\n### 2.1 Major Modules\nTorchSketch has three main modules, including `data`, `networks`, `utils`, as shown in follows.\nThe documents are provided in `docs`.\n  - **torchsketch**\n    - **data**\n      - **dataloaders**: provides the dataloader class files for the frequently-used sketch datasets, e.g., TU-Berlin, Sketchy, QuickDraw.\n      - **datasets**: provides the specific API for each dataset, which integrates a series of functions including downloading, extraction, cleaning, MD5 checksum, and other preprocessings.\n    - **networks**\n      - **cnn**: provides all the SOTA CNNs.\n      - **gnn**: provides the sketch-applicable implementations of GNNs, including GCN, GAT, graph transformer, etc.\n      - **rnn**: provides the sketch-applicable implementations of RNNs.\n      - **tcn**: provides the sketch-applicable implementations of TCNs.\n    - **utils**\n      - **data_augmentation_utils**\n      - **general_utils**\n      - **metric_utils**\n      - **self_supervised_utils**\n      - **svg_specific_utils**\n    - **docs**\n      - **api_reference**\n      - **examples**\n\nThese modules and sub-modules can be imported as follows.\n```python\nimport torchsketch.data.dataloaders as dataloaders\nimport torchsketch.data.datasets as datasets\n\nimport torchsketch.networks.cnn as cnns\nimport torchsketch.networks.gnn as gnns\nimport torchsketch.networks.rnn as rnns\nimport torchsketch.networks.tcn as tcns\n\nimport torchsketch.utils.data_augmentation_utils as data_augmentation_utils\nimport torchsketch.utils.general_utils as general_utils\nimport torchsketch.utils.metric_utils as metric_utils\nimport torchsketch.utils.self_supervised_utils as self_supervised_utils\nimport torchsketch.utils.svg_specific_utils as svg_specific_utils\n```\n\n\n### 2.2 Major Features\n  - TorchSketch supports both GPU based and Python built-in multi-processing acceleration.\n  - TorchSketch is modular, flexible, and extensible, without overly complex design patterns and excessive encapsulation.\n  - TorchSketch provides four kinds of network architectures that are applicable to sketch, i.e., CNN, RNN, GNN, TCN.\n  - TorchSketch is compatible to not only numerous datasets but also various formats of free-hand sketch, e.g., SVG, NumPy, PNG, JPEG, by providing numerous format-convert APIs, format-specific APIs, etc.\n  - TorchSketch supports self-supervised learning study for sketch.\n  - TorchSketch, beyond free-hand sketch research, also has some universal components that are applicable to the studies for other deep learning topics.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PengBoXiangShang/torchsketch/", "keywords": "sketch,free-hand sketch,pytorch,deep learning", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "torchsketch", "package_url": "https://pypi.org/project/torchsketch/", "platform": "", "project_url": "https://pypi.org/project/torchsketch/", "project_urls": {"Homepage": "https://github.com/PengBoXiangShang/torchsketch/"}, "release_url": "https://pypi.org/project/torchsketch/0.1.0/", "requires_dist": ["torchvision (==0.4.0)", "torchnet (==0.0.4)", "torch (==1.2.0)", "Pillow (<7.0.0)", "gdown", "pdf2image", "pyfiglet", "pyunpack", "scipy", "wget", "CairoSVG", "numpy", "imageio", "patool"], "requires_python": "", "summary": "TorchSketch is an open source software library for free-hand sketch oriented deep learning research, which is built on the top of PyTorch.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TorchSketch</h1>\n<p><a href=\"https://pypi.org/project/torchsketch/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1edaf901a65103a9ff6fd4c1479111a1cda9564e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f746f726368736b65746368\"></a> <img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b51188f740a439d861fc7ba6969bc47c6317f572/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c616e67756167652d507974686f6e2d253742677265656e2537442e737667\"> <img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/462eeb7bf863fa814dee5d5d8f4e00f28da8d21d/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f657870726573732e737667\"></p>\n<div><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6d5170fa9ee0a45b6d532f332e959dd6629750f1/68747470733a2f2f6769746875622e636f6d2f50656e67426f5869616e675368616e672f746f726368736b657463682f626c6f622f6d61737465722f746f726368736b657463682f646f63732f6f74686572732f746f726368736b657463682e676966\"></div>\n<p>TorchSketch is an open source software library for free-hand sketch oriented deep learning research, which is built on the top of <a href=\"https://pytorch.org/\" rel=\"nofollow\">PyTorch</a>.</p>\n<p><strong>The project is under continuous update!</strong></p>\n<h2>1. Installation</h2>\n<p>TorchSketch is developed based on Python 3.7.</p>\n<p>To avoid any conflicts with your existing Python setup, it's better to install TorchSketch into a standalone environment, e.g., an Anaconda virtual environment.</p>\n<p>Assume that you have installed Anaconda. Please create a virtual environment before installation of TorchSketch, as follows.</p>\n<pre><span class=\"c1\"># Create a virtual environment in Anaconda.</span>\nconda create --name <span class=\"si\">${</span><span class=\"nv\">CUSTOMIZED_ENVIRONMENT_NAME</span><span class=\"si\">}</span> <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>.7\n\n<span class=\"c1\"># Activate it.</span>\nconda activate <span class=\"si\">${</span><span class=\"nv\">CUSTOMIZED_ENVIRONMENT_NAME</span><span class=\"si\">}</span>\n</pre>\n<h3>1.1 Using pip</h3>\n<p>Please use the following command to install TorchSketch.</p>\n<pre>pip install torchsketch\n</pre>\n<p>Then, TorchSketch can be imported into your Python console as follows.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">torchsketch</span>\n</pre>\n<h3>1.2 From Source</h3>\n<p>In addition, TorchSketch also can be installed from source.</p>\n<pre><span class=\"c1\"># Choose your workspace and download this repository.</span>\n<span class=\"nb\">cd</span> <span class=\"si\">${</span><span class=\"nv\">CUSTOMIZED_WORKSPACE</span><span class=\"si\">}</span>\ngit clone https://github.com/PengBoXiangShang/torchsketch\n\n<span class=\"c1\"># Enter the folder of TorchSketch.</span>\n<span class=\"nb\">cd</span> torchsketch\n\n<span class=\"c1\"># Install.</span>\npython setup.py install\n</pre>\n<h2>2. Major Modules and Features of TorchSketch</h2>\n<h3>2.1 Major Modules</h3>\n<p>TorchSketch has three main modules, including <code>data</code>, <code>networks</code>, <code>utils</code>, as shown in follows.\nThe documents are provided in <code>docs</code>.</p>\n<ul>\n<li><strong>torchsketch</strong>\n<ul>\n<li><strong>data</strong>\n<ul>\n<li><strong>dataloaders</strong>: provides the dataloader class files for the frequently-used sketch datasets, e.g., TU-Berlin, Sketchy, QuickDraw.</li>\n<li><strong>datasets</strong>: provides the specific API for each dataset, which integrates a series of functions including downloading, extraction, cleaning, MD5 checksum, and other preprocessings.</li>\n</ul>\n</li>\n<li><strong>networks</strong>\n<ul>\n<li><strong>cnn</strong>: provides all the SOTA CNNs.</li>\n<li><strong>gnn</strong>: provides the sketch-applicable implementations of GNNs, including GCN, GAT, graph transformer, etc.</li>\n<li><strong>rnn</strong>: provides the sketch-applicable implementations of RNNs.</li>\n<li><strong>tcn</strong>: provides the sketch-applicable implementations of TCNs.</li>\n</ul>\n</li>\n<li><strong>utils</strong>\n<ul>\n<li><strong>data_augmentation_utils</strong></li>\n<li><strong>general_utils</strong></li>\n<li><strong>metric_utils</strong></li>\n<li><strong>self_supervised_utils</strong></li>\n<li><strong>svg_specific_utils</strong></li>\n</ul>\n</li>\n<li><strong>docs</strong>\n<ul>\n<li><strong>api_reference</strong></li>\n<li><strong>examples</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>These modules and sub-modules can be imported as follows.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">torchsketch.data.dataloaders</span> <span class=\"k\">as</span> <span class=\"nn\">dataloaders</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torchsketch.data.datasets</span> <span class=\"k\">as</span> <span class=\"nn\">datasets</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">torchsketch.networks.cnn</span> <span class=\"k\">as</span> <span class=\"nn\">cnns</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torchsketch.networks.gnn</span> <span class=\"k\">as</span> <span class=\"nn\">gnns</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torchsketch.networks.rnn</span> <span class=\"k\">as</span> <span class=\"nn\">rnns</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torchsketch.networks.tcn</span> <span class=\"k\">as</span> <span class=\"nn\">tcns</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">torchsketch.utils.data_augmentation_utils</span> <span class=\"k\">as</span> <span class=\"nn\">data_augmentation_utils</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torchsketch.utils.general_utils</span> <span class=\"k\">as</span> <span class=\"nn\">general_utils</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torchsketch.utils.metric_utils</span> <span class=\"k\">as</span> <span class=\"nn\">metric_utils</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torchsketch.utils.self_supervised_utils</span> <span class=\"k\">as</span> <span class=\"nn\">self_supervised_utils</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torchsketch.utils.svg_specific_utils</span> <span class=\"k\">as</span> <span class=\"nn\">svg_specific_utils</span>\n</pre>\n<h3>2.2 Major Features</h3>\n<ul>\n<li>TorchSketch supports both GPU based and Python built-in multi-processing acceleration.</li>\n<li>TorchSketch is modular, flexible, and extensible, without overly complex design patterns and excessive encapsulation.</li>\n<li>TorchSketch provides four kinds of network architectures that are applicable to sketch, i.e., CNN, RNN, GNN, TCN.</li>\n<li>TorchSketch is compatible to not only numerous datasets but also various formats of free-hand sketch, e.g., SVG, NumPy, PNG, JPEG, by providing numerous format-convert APIs, format-specific APIs, etc.</li>\n<li>TorchSketch supports self-supervised learning study for sketch.</li>\n<li>TorchSketch, beyond free-hand sketch research, also has some universal components that are applicable to the studies for other deep learning topics.</li>\n</ul>\n\n          </div>"}, "last_serial": 6873433, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "04fc10172932ce101140cf2672cca7a0", "sha256": "0f215d4f7b2bbc330eafbe4de00d00b2d27f5928867203bd0abbe507aefb0fbf"}, "downloads": -1, "filename": "torchsketch-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "04fc10172932ce101140cf2672cca7a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 62355, "upload_time": "2020-03-24T14:31:54", "upload_time_iso_8601": "2020-03-24T14:31:54.538788Z", "url": "https://files.pythonhosted.org/packages/0d/8c/5fd108bc0969a246987e65109ea6d78d128a0e27cd50ce087c457b1da092/torchsketch-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "625a58abe428aadb87b0727ac93a0fe9", "sha256": "19961539973e41d007d4312ce68f9e15f7025de0743ebedb395af1285cbea801"}, "downloads": -1, "filename": "torchsketch-0.1.0.tar.gz", "has_sig": false, "md5_digest": "625a58abe428aadb87b0727ac93a0fe9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26704, "upload_time": "2020-03-24T14:31:57", "upload_time_iso_8601": "2020-03-24T14:31:57.430780Z", "url": "https://files.pythonhosted.org/packages/09/15/0d82c042992c8cd6d4ad8ec23d54ff2d987b64a9a987cacd4e655ca1590d/torchsketch-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "04fc10172932ce101140cf2672cca7a0", "sha256": "0f215d4f7b2bbc330eafbe4de00d00b2d27f5928867203bd0abbe507aefb0fbf"}, "downloads": -1, "filename": "torchsketch-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "04fc10172932ce101140cf2672cca7a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 62355, "upload_time": "2020-03-24T14:31:54", "upload_time_iso_8601": "2020-03-24T14:31:54.538788Z", "url": "https://files.pythonhosted.org/packages/0d/8c/5fd108bc0969a246987e65109ea6d78d128a0e27cd50ce087c457b1da092/torchsketch-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "625a58abe428aadb87b0727ac93a0fe9", "sha256": "19961539973e41d007d4312ce68f9e15f7025de0743ebedb395af1285cbea801"}, "downloads": -1, "filename": "torchsketch-0.1.0.tar.gz", "has_sig": false, "md5_digest": "625a58abe428aadb87b0727ac93a0fe9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26704, "upload_time": "2020-03-24T14:31:57", "upload_time_iso_8601": "2020-03-24T14:31:57.430780Z", "url": "https://files.pythonhosted.org/packages/09/15/0d82c042992c8cd6d4ad8ec23d54ff2d987b64a9a987cacd4e655ca1590d/torchsketch-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:50:10 2020"}