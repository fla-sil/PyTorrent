{"info": {"author": "AustL", "author_email": "21chydra@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Pygame Widgets\n\nA helper module for common widgets that may be required in developing applications with Pygame.\nIt supports fully customisable buttons, collections of buttons and textboxes.\n\n## Prerequisites\n\n* [Python 3](https://www.python.org/downloads)\n\n## Installation\n\nEnsure that Python 3 and pip are installed and added the PATH.\n\n```python -m pip install pygame-widgets```\n\nOpen a Python console and run the following command.\n\n```import pygame_widgets```\n\nIf you receive no error the installation was successful.\n\n## Usage\n\n### Common\n\nFunctionality common to all widgets\n\n#### Mandatory Parameters\n\n_Note: Mandatory parameters must be supplied in order._\n\n| Parameter | Description | Type |\n| :---: | --- | :---: |\n| win | Surface to be displayed on. | pygame.Surface |\n| x | X-coordinate of top left. | int |\n| y | Y-coordinate of top left. | int |\n| width | Width of button in pixels. | int |\n| height | Height of button in pixels. | int |\n\n### Button\n\nA customisable button\n\n#### Example Usage\n```\nimport pygame\nfrom pygame_widgets import Button\n\npygame.init()\nwin = pygame.display.set_mode((600, 600))\n\nbutton = Button(\n            win, 100, 100, 300, 150, text='Hello',\n            fontSize=50, margin=20,\n            inactiveColour=(255, 0, 0),\n            pressedColour=(0, 255, 0), radius=20,\n            onClick=lambda: print('Click')\n         )\n\nrun = True\nwhile run:\n    events = pygame.event.get()\n    for event in events:\n        if event.type == pygame.QUIT:\n            pygame.quit()\n            run = False\n            quit()\n\n    win.fill((255, 255, 255))\n\n    button.listen(events)\n    button.draw()\n\n    pygame.display.update()\n```\n\nThis button will be placed at (100, 100) with a width of 300 and a height of 150,\ndisplay the text 'Hello' with font size 50, leaving a margin of 20 and a radius of 20.\nWhen clicked, the button will change colour from red to green and 'Click' will be printed to the console.\n\n#### Optional Parameters\n| Parameter | Description | Type | Default |\n| :---: | --- | :---: | :---: |\n| inactiveColour | Default colour when not pressed or hovered over. | (int, int, int) | (150, 150, 150) |\n| pressedColour | Colour when pressed. | (int, int, int) | (100, 100, 100) |\n| hoverColour | Colour when hovered over. | (int, int, int) | (125, 125, 125) |\n| shadowDistance | Distance to projected shadow. Set to 0 if no shadow desired. | int | 0 |\n| shadowColour | Colour of shadow | (int, int, int) | (210, 210, 180) |\n| onClick | Function to be called when clicked. | function | None |\n| onClickParams | Parameters to be fed into onClick function. | (*any) | () |\n| onRelease | Function to be called when released. | function | None |\n| onReleaseParams | Parameters to be fed into onRelease function. | (*any) | () |\n| textColour | Colour of text. | (int, int, int) | (0, 0, 0) |\n| fontSize | Size of text. | int | 20 |\n| text | String to be displayed. | str | '' |\n| font | Font of text. | pygame.font.Font | Calibri |\n| textHAlign | Horizontal alignment of text. Can be 'centre', 'left' or 'right'. | str | 'centre' |\n| textVAlign | Vertical alignment of text. Can be 'centre', 'top' or 'bottom'. | str | 'centre' |\n| margin | Minimum distance between text / image and edge. | int | 20 |\n| image | Image to be displayed. | pygame.Surface | None |\n| imageHAlign | Horizontal alignment of image. Can be 'centre', 'left' or 'right'. | str | 'centre' |\n| imageVAlign | Vertical alignment of image. Can be 'centre', 'top' or 'bottom'. | str | 'centre' |\n| radius | Border radius. Set to half of width for circular button. Set to 0 for no radius. | int | 0 |\n\n\n### ButtonArray\n\nA collection of similar buttons\n\n#### Example Usage\n\n```\nimport pygame\nfrom pygame_widgets import ButtonArray\n\npygame.init()\nwin = pygame.display.set_mode((600, 600))\n\nbuttonArray = ButtonArray(win, 50, 50, 500, 500, (2, 2),\n                          border=100, texts=('1', '2', '3', '4')\n                         )\n\nrun = True\nwhile run:\n    events = pygame.event.get()\n    for event in events:\n        if event.type == pygame.QUIT:\n            pygame.quit()\n            run = False\n            quit()\n\n    win.fill((255, 255, 255))\n\n    buttonArray.listen(events)\n    buttonArray.draw()\n\n    pygame.display.update()\n```\n\n#### Mandatory Parameters\n\n_Note: Mandatory parameters must be supplied in order._\n\n| Parameter | Description | Type |\n| :---: | --- | :---: |\n| shape | Number of columns and rows of buttons (columns, rows). | (int, int) |\n\n#### Optional Parameters\n\n_Note: Optional parameters of ButtonArray are similar to those of Button._\n\n| Parameter | Description | Type | Default |\n| :---: | --- | :---: | :---: |\n| colour | Background colour of array. | (int, int, int) | (210, 210, 180) |\n| border | Thickness between buttons and between the edges of array and buttons. | int | 10 |\n| topBorder | Thickness between top of array and top of button. Overrides border. | int | border |\n| bottomBorder | Thickness between bottom of array and bottom of button. Overrides border. | int | border |\n| leftBorder | Thickness between left of array and left of button. Overrides border. | int | border |\n| rightBorder | Thickness between right of array and right of button. Overrides border. | int | border |\n| separationThickness | Thickness between buttons. Overrides border. | int | border |\n\n### TextBox\n\nA box for text input or display\n\n#### Example Usage\n\n```\nimport pygame\nfrom pygame_widgets import TextBox\n\ndef output():\n    # Get text in the textbox\n    print(textbox.getText())\n\npygame.init()\nwin = pygame.display.set_mode((1000, 600))\n\ntextbox = TextBox(win, 100, 100, 800, 80, fontSize=50,\n                  borderColour=(255, 0, 0), textColour=(0, 200, 0),\n                  onSubmit=output, radius=10, borderThickness=5)\n\nrun = True\nwhile run:\n    events = pygame.event.get()\n    for event in events:\n        if event.type == pygame.QUIT:\n            pygame.quit()\n            run = False\n            quit()\n\n    win.fill((255, 255, 255))\n\n    textbox.listen(events)\n    textbox.draw()\n\n    pygame.display.update()\n```\n\n#### Optional Parameters\n\n| Parameter | Description | Type | Default |\n| :---: | --- | :---: | :---: |\n| colour | Background colour, | (int, int, int) | (220, 220, 220) |\n| textColour | Colour of text. | (int, int, int) | (0, 0, 0) |\n| borderColour | Colour of border. | (int, int, int) | (0, 0, 0) |\n| borderThickness | Thickness of border. | int | 3 |\n| radius | Border radius. Set to 0 for no radius. | int | 0 |\n| onSubmit | Function to be called when return / enter is pressed. | function | None |\n| onSubmitParams | Parameters to be fed into onSubmit function. | (*any) | () |\n| placeholderText | Text to be displayed when empty. | str | '' |\n| fontSize | Size of text. | int | 20 |\n| font | Font of text. | pygame.font.Font | Calibri\n\n\n### Slider\n\nA slider for discrete numeric value selection\n\n#### Example Usage\n\n```\npygame.init()\nwin = pygame.display.set_mode((1000, 600))\n\nslider = Slider(win, 100, 100, 800, 40, min=0, max=99, step=1)\noutput = TextBox(win, 475, 200, 50, 50, fontSize=30)\n\nrun = True\nwhile run:\n    events = pygame.event.get()\n    for event in events:\n        if event.type == pygame.QUIT:\n            pygame.quit()\n            run = False\n            quit()\n\n    win.fill((255, 255, 255))\n\n    slider.listen(events)\n    slider.draw()\n\n    output.setText(slider.getValue())\n\n    output.draw()\n\n    pygame.display.update()\n```\n\nAs you can see, TextBox can be used to display text as well,\nby not calling its listen method.\n\n#### Optional Parameters\n| Parameter | Description | Type | Default |\n| :---: | --- | :---: | :---: |\n| min | Minimum value of the slider (left). | int or float | 0 |\n| max | Maximum value of the slider (right). | int or float | 99 |\n| step | Value to increment by. | int or float | 1 |\n| colour | Colour of slider. | (int, int, int) | (200, 200, 200) |\n| handleColour | Colour of handle. | (int, int, int) | (0, 0, 0) |\n| initial | Initial value of the slider. | int or float | Average of min and max |\n| handleRadius | Radius of handle. | int | height / 1.3 |\n| curved | Add curved ends to the slider. | bool | True |\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AustL/PygameWidgets", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pygame-widgets", "package_url": "https://pypi.org/project/pygame-widgets/", "platform": "", "project_url": "https://pypi.org/project/pygame-widgets/", "project_urls": {"Homepage": "https://github.com/AustL/PygameWidgets"}, "release_url": "https://pypi.org/project/pygame-widgets/0.1.0/", "requires_dist": ["pygame"], "requires_python": ">=3.6", "summary": "Widgets for use with Pygame", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pygame Widgets</h1>\n<p>A helper module for common widgets that may be required in developing applications with Pygame.\nIt supports fully customisable buttons, collections of buttons and textboxes.</p>\n<h2>Prerequisites</h2>\n<ul>\n<li><a href=\"https://www.python.org/downloads\" rel=\"nofollow\">Python 3</a></li>\n</ul>\n<h2>Installation</h2>\n<p>Ensure that Python 3 and pip are installed and added the PATH.</p>\n<p><code>python -m pip install pygame-widgets</code></p>\n<p>Open a Python console and run the following command.</p>\n<p><code>import pygame_widgets</code></p>\n<p>If you receive no error the installation was successful.</p>\n<h2>Usage</h2>\n<h3>Common</h3>\n<p>Functionality common to all widgets</p>\n<h4>Mandatory Parameters</h4>\n<p><em>Note: Mandatory parameters must be supplied in order.</em></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Parameter</th>\n<th>Description</th>\n<th align=\"center\">Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">win</td>\n<td>Surface to be displayed on.</td>\n<td align=\"center\">pygame.Surface</td>\n</tr>\n<tr>\n<td align=\"center\">x</td>\n<td>X-coordinate of top left.</td>\n<td align=\"center\">int</td>\n</tr>\n<tr>\n<td align=\"center\">y</td>\n<td>Y-coordinate of top left.</td>\n<td align=\"center\">int</td>\n</tr>\n<tr>\n<td align=\"center\">width</td>\n<td>Width of button in pixels.</td>\n<td align=\"center\">int</td>\n</tr>\n<tr>\n<td align=\"center\">height</td>\n<td>Height of button in pixels.</td>\n<td align=\"center\">int</td>\n</tr></tbody></table>\n<h3>Button</h3>\n<p>A customisable button</p>\n<h4>Example Usage</h4>\n<pre><code>import pygame\nfrom pygame_widgets import Button\n\npygame.init()\nwin = pygame.display.set_mode((600, 600))\n\nbutton = Button(\n            win, 100, 100, 300, 150, text='Hello',\n            fontSize=50, margin=20,\n            inactiveColour=(255, 0, 0),\n            pressedColour=(0, 255, 0), radius=20,\n            onClick=lambda: print('Click')\n         )\n\nrun = True\nwhile run:\n    events = pygame.event.get()\n    for event in events:\n        if event.type == pygame.QUIT:\n            pygame.quit()\n            run = False\n            quit()\n\n    win.fill((255, 255, 255))\n\n    button.listen(events)\n    button.draw()\n\n    pygame.display.update()\n</code></pre>\n<p>This button will be placed at (100, 100) with a width of 300 and a height of 150,\ndisplay the text 'Hello' with font size 50, leaving a margin of 20 and a radius of 20.\nWhen clicked, the button will change colour from red to green and 'Click' will be printed to the console.</p>\n<h4>Optional Parameters</h4>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Parameter</th>\n<th>Description</th>\n<th align=\"center\">Type</th>\n<th align=\"center\">Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">inactiveColour</td>\n<td>Default colour when not pressed or hovered over.</td>\n<td align=\"center\">(int, int, int)</td>\n<td align=\"center\">(150, 150, 150)</td>\n</tr>\n<tr>\n<td align=\"center\">pressedColour</td>\n<td>Colour when pressed.</td>\n<td align=\"center\">(int, int, int)</td>\n<td align=\"center\">(100, 100, 100)</td>\n</tr>\n<tr>\n<td align=\"center\">hoverColour</td>\n<td>Colour when hovered over.</td>\n<td align=\"center\">(int, int, int)</td>\n<td align=\"center\">(125, 125, 125)</td>\n</tr>\n<tr>\n<td align=\"center\">shadowDistance</td>\n<td>Distance to projected shadow. Set to 0 if no shadow desired.</td>\n<td align=\"center\">int</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"center\">shadowColour</td>\n<td>Colour of shadow</td>\n<td align=\"center\">(int, int, int)</td>\n<td align=\"center\">(210, 210, 180)</td>\n</tr>\n<tr>\n<td align=\"center\">onClick</td>\n<td>Function to be called when clicked.</td>\n<td align=\"center\">function</td>\n<td align=\"center\">None</td>\n</tr>\n<tr>\n<td align=\"center\">onClickParams</td>\n<td>Parameters to be fed into onClick function.</td>\n<td align=\"center\">(*any)</td>\n<td align=\"center\">()</td>\n</tr>\n<tr>\n<td align=\"center\">onRelease</td>\n<td>Function to be called when released.</td>\n<td align=\"center\">function</td>\n<td align=\"center\">None</td>\n</tr>\n<tr>\n<td align=\"center\">onReleaseParams</td>\n<td>Parameters to be fed into onRelease function.</td>\n<td align=\"center\">(*any)</td>\n<td align=\"center\">()</td>\n</tr>\n<tr>\n<td align=\"center\">textColour</td>\n<td>Colour of text.</td>\n<td align=\"center\">(int, int, int)</td>\n<td align=\"center\">(0, 0, 0)</td>\n</tr>\n<tr>\n<td align=\"center\">fontSize</td>\n<td>Size of text.</td>\n<td align=\"center\">int</td>\n<td align=\"center\">20</td>\n</tr>\n<tr>\n<td align=\"center\">text</td>\n<td>String to be displayed.</td>\n<td align=\"center\">str</td>\n<td align=\"center\">''</td>\n</tr>\n<tr>\n<td align=\"center\">font</td>\n<td>Font of text.</td>\n<td align=\"center\">pygame.font.Font</td>\n<td align=\"center\">Calibri</td>\n</tr>\n<tr>\n<td align=\"center\">textHAlign</td>\n<td>Horizontal alignment of text. Can be 'centre', 'left' or 'right'.</td>\n<td align=\"center\">str</td>\n<td align=\"center\">'centre'</td>\n</tr>\n<tr>\n<td align=\"center\">textVAlign</td>\n<td>Vertical alignment of text. Can be 'centre', 'top' or 'bottom'.</td>\n<td align=\"center\">str</td>\n<td align=\"center\">'centre'</td>\n</tr>\n<tr>\n<td align=\"center\">margin</td>\n<td>Minimum distance between text / image and edge.</td>\n<td align=\"center\">int</td>\n<td align=\"center\">20</td>\n</tr>\n<tr>\n<td align=\"center\">image</td>\n<td>Image to be displayed.</td>\n<td align=\"center\">pygame.Surface</td>\n<td align=\"center\">None</td>\n</tr>\n<tr>\n<td align=\"center\">imageHAlign</td>\n<td>Horizontal alignment of image. Can be 'centre', 'left' or 'right'.</td>\n<td align=\"center\">str</td>\n<td align=\"center\">'centre'</td>\n</tr>\n<tr>\n<td align=\"center\">imageVAlign</td>\n<td>Vertical alignment of image. Can be 'centre', 'top' or 'bottom'.</td>\n<td align=\"center\">str</td>\n<td align=\"center\">'centre'</td>\n</tr>\n<tr>\n<td align=\"center\">radius</td>\n<td>Border radius. Set to half of width for circular button. Set to 0 for no radius.</td>\n<td align=\"center\">int</td>\n<td align=\"center\">0</td>\n</tr></tbody></table>\n<h3>ButtonArray</h3>\n<p>A collection of similar buttons</p>\n<h4>Example Usage</h4>\n<pre><code>import pygame\nfrom pygame_widgets import ButtonArray\n\npygame.init()\nwin = pygame.display.set_mode((600, 600))\n\nbuttonArray = ButtonArray(win, 50, 50, 500, 500, (2, 2),\n                          border=100, texts=('1', '2', '3', '4')\n                         )\n\nrun = True\nwhile run:\n    events = pygame.event.get()\n    for event in events:\n        if event.type == pygame.QUIT:\n            pygame.quit()\n            run = False\n            quit()\n\n    win.fill((255, 255, 255))\n\n    buttonArray.listen(events)\n    buttonArray.draw()\n\n    pygame.display.update()\n</code></pre>\n<h4>Mandatory Parameters</h4>\n<p><em>Note: Mandatory parameters must be supplied in order.</em></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Parameter</th>\n<th>Description</th>\n<th align=\"center\">Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">shape</td>\n<td>Number of columns and rows of buttons (columns, rows).</td>\n<td align=\"center\">(int, int)</td>\n</tr></tbody></table>\n<h4>Optional Parameters</h4>\n<p><em>Note: Optional parameters of ButtonArray are similar to those of Button.</em></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Parameter</th>\n<th>Description</th>\n<th align=\"center\">Type</th>\n<th align=\"center\">Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">colour</td>\n<td>Background colour of array.</td>\n<td align=\"center\">(int, int, int)</td>\n<td align=\"center\">(210, 210, 180)</td>\n</tr>\n<tr>\n<td align=\"center\">border</td>\n<td>Thickness between buttons and between the edges of array and buttons.</td>\n<td align=\"center\">int</td>\n<td align=\"center\">10</td>\n</tr>\n<tr>\n<td align=\"center\">topBorder</td>\n<td>Thickness between top of array and top of button. Overrides border.</td>\n<td align=\"center\">int</td>\n<td align=\"center\">border</td>\n</tr>\n<tr>\n<td align=\"center\">bottomBorder</td>\n<td>Thickness between bottom of array and bottom of button. Overrides border.</td>\n<td align=\"center\">int</td>\n<td align=\"center\">border</td>\n</tr>\n<tr>\n<td align=\"center\">leftBorder</td>\n<td>Thickness between left of array and left of button. Overrides border.</td>\n<td align=\"center\">int</td>\n<td align=\"center\">border</td>\n</tr>\n<tr>\n<td align=\"center\">rightBorder</td>\n<td>Thickness between right of array and right of button. Overrides border.</td>\n<td align=\"center\">int</td>\n<td align=\"center\">border</td>\n</tr>\n<tr>\n<td align=\"center\">separationThickness</td>\n<td>Thickness between buttons. Overrides border.</td>\n<td align=\"center\">int</td>\n<td align=\"center\">border</td>\n</tr></tbody></table>\n<h3>TextBox</h3>\n<p>A box for text input or display</p>\n<h4>Example Usage</h4>\n<pre><code>import pygame\nfrom pygame_widgets import TextBox\n\ndef output():\n    # Get text in the textbox\n    print(textbox.getText())\n\npygame.init()\nwin = pygame.display.set_mode((1000, 600))\n\ntextbox = TextBox(win, 100, 100, 800, 80, fontSize=50,\n                  borderColour=(255, 0, 0), textColour=(0, 200, 0),\n                  onSubmit=output, radius=10, borderThickness=5)\n\nrun = True\nwhile run:\n    events = pygame.event.get()\n    for event in events:\n        if event.type == pygame.QUIT:\n            pygame.quit()\n            run = False\n            quit()\n\n    win.fill((255, 255, 255))\n\n    textbox.listen(events)\n    textbox.draw()\n\n    pygame.display.update()\n</code></pre>\n<h4>Optional Parameters</h4>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Parameter</th>\n<th>Description</th>\n<th align=\"center\">Type</th>\n<th align=\"center\">Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">colour</td>\n<td>Background colour,</td>\n<td align=\"center\">(int, int, int)</td>\n<td align=\"center\">(220, 220, 220)</td>\n</tr>\n<tr>\n<td align=\"center\">textColour</td>\n<td>Colour of text.</td>\n<td align=\"center\">(int, int, int)</td>\n<td align=\"center\">(0, 0, 0)</td>\n</tr>\n<tr>\n<td align=\"center\">borderColour</td>\n<td>Colour of border.</td>\n<td align=\"center\">(int, int, int)</td>\n<td align=\"center\">(0, 0, 0)</td>\n</tr>\n<tr>\n<td align=\"center\">borderThickness</td>\n<td>Thickness of border.</td>\n<td align=\"center\">int</td>\n<td align=\"center\">3</td>\n</tr>\n<tr>\n<td align=\"center\">radius</td>\n<td>Border radius. Set to 0 for no radius.</td>\n<td align=\"center\">int</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"center\">onSubmit</td>\n<td>Function to be called when return / enter is pressed.</td>\n<td align=\"center\">function</td>\n<td align=\"center\">None</td>\n</tr>\n<tr>\n<td align=\"center\">onSubmitParams</td>\n<td>Parameters to be fed into onSubmit function.</td>\n<td align=\"center\">(*any)</td>\n<td align=\"center\">()</td>\n</tr>\n<tr>\n<td align=\"center\">placeholderText</td>\n<td>Text to be displayed when empty.</td>\n<td align=\"center\">str</td>\n<td align=\"center\">''</td>\n</tr>\n<tr>\n<td align=\"center\">fontSize</td>\n<td>Size of text.</td>\n<td align=\"center\">int</td>\n<td align=\"center\">20</td>\n</tr>\n<tr>\n<td align=\"center\">font</td>\n<td>Font of text.</td>\n<td align=\"center\">pygame.font.Font</td>\n<td align=\"center\">Calibri</td>\n</tr></tbody></table>\n<h3>Slider</h3>\n<p>A slider for discrete numeric value selection</p>\n<h4>Example Usage</h4>\n<pre><code>pygame.init()\nwin = pygame.display.set_mode((1000, 600))\n\nslider = Slider(win, 100, 100, 800, 40, min=0, max=99, step=1)\noutput = TextBox(win, 475, 200, 50, 50, fontSize=30)\n\nrun = True\nwhile run:\n    events = pygame.event.get()\n    for event in events:\n        if event.type == pygame.QUIT:\n            pygame.quit()\n            run = False\n            quit()\n\n    win.fill((255, 255, 255))\n\n    slider.listen(events)\n    slider.draw()\n\n    output.setText(slider.getValue())\n\n    output.draw()\n\n    pygame.display.update()\n</code></pre>\n<p>As you can see, TextBox can be used to display text as well,\nby not calling its listen method.</p>\n<h4>Optional Parameters</h4>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Parameter</th>\n<th>Description</th>\n<th align=\"center\">Type</th>\n<th align=\"center\">Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">min</td>\n<td>Minimum value of the slider (left).</td>\n<td align=\"center\">int or float</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"center\">max</td>\n<td>Maximum value of the slider (right).</td>\n<td align=\"center\">int or float</td>\n<td align=\"center\">99</td>\n</tr>\n<tr>\n<td align=\"center\">step</td>\n<td>Value to increment by.</td>\n<td align=\"center\">int or float</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">colour</td>\n<td>Colour of slider.</td>\n<td align=\"center\">(int, int, int)</td>\n<td align=\"center\">(200, 200, 200)</td>\n</tr>\n<tr>\n<td align=\"center\">handleColour</td>\n<td>Colour of handle.</td>\n<td align=\"center\">(int, int, int)</td>\n<td align=\"center\">(0, 0, 0)</td>\n</tr>\n<tr>\n<td align=\"center\">initial</td>\n<td>Initial value of the slider.</td>\n<td align=\"center\">int or float</td>\n<td align=\"center\">Average of min and max</td>\n</tr>\n<tr>\n<td align=\"center\">handleRadius</td>\n<td>Radius of handle.</td>\n<td align=\"center\">int</td>\n<td align=\"center\">height / 1.3</td>\n</tr>\n<tr>\n<td align=\"center\">curved</td>\n<td>Add curved ends to the slider.</td>\n<td align=\"center\">bool</td>\n<td align=\"center\">True</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 7089316, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "ab70369583dfea11044c012d7b5eca7e", "sha256": "575e2347d5e8be57b5d4bf395565d32a195feb02315f8acdfe9cd0bd555fe085"}, "downloads": -1, "filename": "pygame_widgets-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ab70369583dfea11044c012d7b5eca7e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4624, "upload_time": "2020-04-18T23:52:43", "upload_time_iso_8601": "2020-04-18T23:52:43.560995Z", "url": "https://files.pythonhosted.org/packages/c0/6d/eae4260a810198f0d167172a842a019ccf902a951de3a3957d5dbc1a068a/pygame_widgets-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fade136648364093e07d28ee946c171b", "sha256": "b7bea01a28fea20c3ad3951dc01dbb32f65e210fcdde4c8bf1a95e09151bdd1e"}, "downloads": -1, "filename": "pygame_widgets-0.0.2.tar.gz", "has_sig": false, "md5_digest": "fade136648364093e07d28ee946c171b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3471, "upload_time": "2020-04-18T23:52:45", "upload_time_iso_8601": "2020-04-18T23:52:45.860225Z", "url": "https://files.pythonhosted.org/packages/e4/37/2d599def601eca4707392ebff530b9ed541d9f05a5334eeac6f8811ce4f6/pygame_widgets-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "0e3e4709be89fbad5327d517974bc485", "sha256": "3f0484e6f60099bbfa107f3d43a00dab072987fd7026d9de44b5a8af61d194af"}, "downloads": -1, "filename": "pygame_widgets-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0e3e4709be89fbad5327d517974bc485", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4660, "upload_time": "2020-04-18T23:56:57", "upload_time_iso_8601": "2020-04-18T23:56:57.336683Z", "url": "https://files.pythonhosted.org/packages/b7/f8/2b95c0d4bb1d7902dbe0a59e5e9f177188eb4c0f28a09cdeb05d59b043f4/pygame_widgets-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f4480d33a0bdffb07e930c574278db9", "sha256": "4e1b1f7f5810f320197465016600198c3ac2753fb39de8d43f7386dde7bef48f"}, "downloads": -1, "filename": "pygame-widgets-0.0.3.tar.gz", "has_sig": false, "md5_digest": "4f4480d33a0bdffb07e930c574278db9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3506, "upload_time": "2020-04-18T23:56:58", "upload_time_iso_8601": "2020-04-18T23:56:58.691526Z", "url": "https://files.pythonhosted.org/packages/1d/e4/f668c18a8d5c0de101e7c57627533a1530fdf027b688152e7186ccc953aa/pygame-widgets-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "633530d8f8a0a6bf907c93ff328090ce", "sha256": "33f961e5b7cf1853dbf590111955fc9d6b6fb2bd70e145ebc973e8013a11accd"}, "downloads": -1, "filename": "pygame_widgets-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "633530d8f8a0a6bf907c93ff328090ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7060, "upload_time": "2020-04-21T05:09:21", "upload_time_iso_8601": "2020-04-21T05:09:21.509652Z", "url": "https://files.pythonhosted.org/packages/b3/19/5e12e6fb2f11813b82544dd4c9d6c1e63553dead22bcef7868d014bbc771/pygame_widgets-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d561eb803c3b27674891e177ab3270c8", "sha256": "08d8b13a3e1fd1f9e7ad3b2f625de6a80cf1bce723c5140c14216d5e5b9d6ef5"}, "downloads": -1, "filename": "pygame-widgets-0.0.4.tar.gz", "has_sig": false, "md5_digest": "d561eb803c3b27674891e177ab3270c8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5271, "upload_time": "2020-04-21T05:09:22", "upload_time_iso_8601": "2020-04-21T05:09:22.674904Z", "url": "https://files.pythonhosted.org/packages/60/ab/d892178e74757597c0587d155a4394a665cfd53df73dc67e7c56400ba0e9/pygame-widgets-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "f2a87da9596725255f632ef979a3bc14", "sha256": "a634412021e5e8456986aa8043858e6d39ad24eb75148b421f21df4e0ab63cf1"}, "downloads": -1, "filename": "pygame_widgets-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f2a87da9596725255f632ef979a3bc14", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7285, "upload_time": "2020-04-22T04:07:06", "upload_time_iso_8601": "2020-04-22T04:07:06.243700Z", "url": "https://files.pythonhosted.org/packages/56/a1/34f8bd28b5065f13d76e653301fbf32f3a759df7cb5d3695850e810f0c8d/pygame_widgets-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db8df80f86686b50164c9a3209fde60a", "sha256": "925303bd7923863db0f9e9dfb1bdce6ca46e6fd3f375b8cbac664f1864b3119c"}, "downloads": -1, "filename": "pygame-widgets-0.0.5.tar.gz", "has_sig": false, "md5_digest": "db8df80f86686b50164c9a3209fde60a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5387, "upload_time": "2020-04-22T04:07:08", "upload_time_iso_8601": "2020-04-22T04:07:08.388185Z", "url": "https://files.pythonhosted.org/packages/df/a8/daf27016b31e40229c7488450dbf2811899a5024a32a75871c58cd05385f/pygame-widgets-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "f968f45a2908104b082b2268829499a6", "sha256": "8191d406b52cebd208ee7c71cea8bdad3e850f585a4106ffaea1c399b627dc04"}, "downloads": -1, "filename": "pygame_widgets-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "f968f45a2908104b082b2268829499a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7294, "upload_time": "2020-04-22T04:10:53", "upload_time_iso_8601": "2020-04-22T04:10:53.758686Z", "url": "https://files.pythonhosted.org/packages/2f/cc/9348a5c592d569b613a28755cc8f3f79b100a12737e6c4565f9a4a160055/pygame_widgets-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "993449f2329080127c272c942305333b", "sha256": "b1b290ebb54ce1777989d57942b7a72d36589bc2b98a6113494e59520ad7bf1c"}, "downloads": -1, "filename": "pygame-widgets-0.0.6.tar.gz", "has_sig": false, "md5_digest": "993449f2329080127c272c942305333b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5488, "upload_time": "2020-04-22T04:10:56", "upload_time_iso_8601": "2020-04-22T04:10:56.433455Z", "url": "https://files.pythonhosted.org/packages/5a/2b/b5d36232a045fb64e9c0a1b3220770fbbef8dd4481e5944d38eef85527ac/pygame-widgets-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "3eb555fabb659000ee00ecd3926b8a17", "sha256": "540648874ff1cc27c819699616a8cbf6d9895592ebe9a8f4a91138cfcb5185e7"}, "downloads": -1, "filename": "pygame_widgets-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "3eb555fabb659000ee00ecd3926b8a17", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7290, "upload_time": "2020-04-22T04:27:54", "upload_time_iso_8601": "2020-04-22T04:27:54.459914Z", "url": "https://files.pythonhosted.org/packages/e7/16/d6216a22d1d8208ee1a018ac693546da36afd4a6cbbd5fe2fba0a3cbe2e2/pygame_widgets-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea17a5d2ceae9dbdd5323dbcea2cadc7", "sha256": "08f1df8a22f55202e745588a99ab15e7316a1adede5c8e14684a6d2bc73a354f"}, "downloads": -1, "filename": "pygame-widgets-0.0.7.tar.gz", "has_sig": false, "md5_digest": "ea17a5d2ceae9dbdd5323dbcea2cadc7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5490, "upload_time": "2020-04-22T04:27:58", "upload_time_iso_8601": "2020-04-22T04:27:58.455688Z", "url": "https://files.pythonhosted.org/packages/d7/37/bef816151e6062af697e4a299e25c8f09c542db594f8515efce0f2c9ad8e/pygame-widgets-0.0.7.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "a7d9e207246fd99d7c6c30c4f4312d43", "sha256": "7c6973122d5b6979d9cefd3d8c3ba1c5e96db6086c2c1c4671c739c4ae600e5b"}, "downloads": -1, "filename": "pygame_widgets-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a7d9e207246fd99d7c6c30c4f4312d43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11156, "upload_time": "2020-04-24T02:25:28", "upload_time_iso_8601": "2020-04-24T02:25:28.416177Z", "url": "https://files.pythonhosted.org/packages/20/1a/b2d0f50d44ff08fe54c2d0a009dfb865a32d06e3f277d16abcceebd51b20/pygame_widgets-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3f75e9920949f0f117a9714f5315327", "sha256": "e1133c81fbab9d3b8098f9ded47c64ead05074f7c744858c66394bdb2077a794"}, "downloads": -1, "filename": "pygame-widgets-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d3f75e9920949f0f117a9714f5315327", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10620, "upload_time": "2020-04-24T02:25:33", "upload_time_iso_8601": "2020-04-24T02:25:33.260796Z", "url": "https://files.pythonhosted.org/packages/80/e3/e4d493314e0e0250956b7e2f175cd798587a5c3d9597a9a8b70f0f3e6bb9/pygame-widgets-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a7d9e207246fd99d7c6c30c4f4312d43", "sha256": "7c6973122d5b6979d9cefd3d8c3ba1c5e96db6086c2c1c4671c739c4ae600e5b"}, "downloads": -1, "filename": "pygame_widgets-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a7d9e207246fd99d7c6c30c4f4312d43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11156, "upload_time": "2020-04-24T02:25:28", "upload_time_iso_8601": "2020-04-24T02:25:28.416177Z", "url": "https://files.pythonhosted.org/packages/20/1a/b2d0f50d44ff08fe54c2d0a009dfb865a32d06e3f277d16abcceebd51b20/pygame_widgets-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3f75e9920949f0f117a9714f5315327", "sha256": "e1133c81fbab9d3b8098f9ded47c64ead05074f7c744858c66394bdb2077a794"}, "downloads": -1, "filename": "pygame-widgets-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d3f75e9920949f0f117a9714f5315327", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10620, "upload_time": "2020-04-24T02:25:33", "upload_time_iso_8601": "2020-04-24T02:25:33.260796Z", "url": "https://files.pythonhosted.org/packages/80/e3/e4d493314e0e0250956b7e2f175cd798587a5c3d9597a9a8b70f0f3e6bb9/pygame-widgets-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:18 2020"}