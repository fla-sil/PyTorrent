{"info": {"author": "Mark Burnett", "author_email": "mburnett@genome.wustl.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet", "Topic :: Scientific/Engineering", "Topic :: Software Development", "Topic :: System :: Distributed Computing", "Topic :: Utilities"], "description": "# \n# Copyright (C) 2010-2012 Platform Computing\n# \n# This library is free software; you can redistribute it and/or\n# modify it under the terms of the GNU Lesser General Public\n# License as published by the Free Software Foundation; either\n# version 2.1 of the License, or (at your option) any later version.\n# \n# This library is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# Lesser General Public License for more details.\n# \n# You should have received a copy of the GNU Lesser General Public\n# License along with this library; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA\n# \n\nPython wrapper for LSF APIs\n===========================\n\nThis library allows you to call the LSF APIs from Python. The wrapper is created\nby using SWIG. Some commands are left out and some typemaps are defined. Still\nnot all API calls are supported yet. Please see the following list for\ntested and support calls.\n\nThe following calls are tested and known to work reasonably well:\n\nIncluded from batch.h\n---------------------\n\n  * lsb_init\n  * lsb_submit\n\nIncluded from lsf.h\n-------------------\n\n  * ls_info\n  * ls_getclustername\n  * ls_getmastername\n  * ls_gethosttype\n  * ls_gethostmodel \n  * ls_gethostinfo\n  * ls_loadinfo\n  * ls_load\n  * ls_loadofhosts\n\nUnknown: ls_getmodelfactor, ls_gethostfactor\n\nNot tested: ls_sharedresourceinfo, ls_placereq, ls_placeofhosts, ls_loadadj, \n            ls_eligible, ls_listrtask, ls_listltask, ls_insertrtask, \n            ls_insertltask, ls_deletertask, ls_deleteltask, all remote \n            execution routines\n\nConvenient routines\n-------------------\n\nThe following routines where added for your convenience:\n\n  * get_load_of_hosts() - return a list of hostLoad objects\n  * get_host_load() - return the current values of the resources of a host - \n                      Possible resource names (Use lsf.<name>) values:\n  \n        R15S - 15s exponentially averaged CPU run queue length.\n        R1M - 1m exponentially averaged CPU run queue  length.\n        R15M - 15m exponentially averaged CPU run queue length.\n        UT - CPU utilization exponentially averaged over the last \n             minute (from 0.0 to 1.0).\n        PG - Memory paging rate exponentially averaged over the last minute, \n             in pages per second.\n        IO - Disk I/O rate exponentially averaged over the last minute, \n             in KBytes per second.\n        LS - Number of current login users.\n        IT - Idle time of the host (keyboard not touched on all logged in\n             sessions), in minutes.\n        TMP - Available free disk space in /tmp, in MBytes.\n        SWP - Amount of currently available swap space, in MBytes.\n        MEM - Amount of currently available memory, in MBytes.\n  \n  * get_host_names() - return the name of the hosts in the cluster\n  * get_host_info() - return a list of hostInfo objects\n\nNotes\n-----\n\n  * It might be needed to set PYTHONPATH (pointing to the _lsf.so dir) and \n    LD_LIBRARY_PATH correctly (LSF_LIBDIR needs to be included)\n\n  * On solaris use 'export LD_PRELOAD=libsocket.so.1' and \n    '/usr/bin/amd64/python'\n\n  * Why not using ctypes? Because the LSF libs tend to have undefined vars on \n    some platforms. The SWIG approach is more flexible to that issue.\n\n(c) 2010-2012 Platform Computing\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.platform.com", "keywords": "LSF,Grid,Cluster,HPC", "license": "LGPL", "maintainer": null, "maintainer_email": null, "name": "platform-python-lsf-api", "package_url": "https://pypi.org/project/platform-python-lsf-api/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/platform-python-lsf-api/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.platform.com"}, "release_url": "https://pypi.org/project/platform-python-lsf-api/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "Python binding for Platform LSF APIs", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # <br># Copyright (C) 2010-2012 Platform Computing<br># <br># This library is free software; you can redistribute it and/or<br># modify it under the terms of the GNU Lesser General Public<br># License as published by the Free Software Foundation; either<br># version 2.1 of the License, or (at your option) any later version.<br># <br># This library is distributed in the hope that it will be useful,<br># but WITHOUT ANY WARRANTY; without even the implied warranty of<br># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU<br># Lesser General Public License for more details.<br># <br># You should have received a copy of the GNU Lesser General Public<br># License along with this library; if not, write to the Free Software<br># Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA<br># <br><br>Python wrapper for LSF APIs<br>===========================<br><br>This library allows you to call the LSF APIs from Python. The wrapper is created<br>by using SWIG. Some commands are left out and some typemaps are defined. Still<br>not all API calls are supported yet. Please see the following list for<br>tested and support calls.<br><br>The following calls are tested and known to work reasonably well:<br><br>Included from batch.h<br>---------------------<br><br>  * lsb_init<br>  * lsb_submit<br><br>Included from lsf.h<br>-------------------<br><br>  * ls_info<br>  * ls_getclustername<br>  * ls_getmastername<br>  * ls_gethosttype<br>  * ls_gethostmodel <br>  * ls_gethostinfo<br>  * ls_loadinfo<br>  * ls_load<br>  * ls_loadofhosts<br><br>Unknown: ls_getmodelfactor, ls_gethostfactor<br><br>Not tested: ls_sharedresourceinfo, ls_placereq, ls_placeofhosts, ls_loadadj, <br>            ls_eligible, ls_listrtask, ls_listltask, ls_insertrtask, <br>            ls_insertltask, ls_deletertask, ls_deleteltask, all remote <br>            execution routines<br><br>Convenient routines<br>-------------------<br><br>The following routines where added for your convenience:<br><br>  * get_load_of_hosts() - return a list of hostLoad objects<br>  * get_host_load() - return the current values of the resources of a host - <br>                      Possible resource names (Use lsf.&lt;name&gt;) values:<br>  <br>        R15S - 15s exponentially averaged CPU run queue length.<br>        R1M - 1m exponentially averaged CPU run queue  length.<br>        R15M - 15m exponentially averaged CPU run queue length.<br>        UT - CPU utilization exponentially averaged over the last <br>             minute (from 0.0 to 1.0).<br>        PG - Memory paging rate exponentially averaged over the last minute, <br>             in pages per second.<br>        IO - Disk I/O rate exponentially averaged over the last minute, <br>             in KBytes per second.<br>        LS - Number of current login users.<br>        IT - Idle time of the host (keyboard not touched on all logged in<br>             sessions), in minutes.<br>        TMP - Available free disk space in /tmp, in MBytes.<br>        SWP - Amount of currently available swap space, in MBytes.<br>        MEM - Amount of currently available memory, in MBytes.<br>  <br>  * get_host_names() - return the name of the hosts in the cluster<br>  * get_host_info() - return a list of hostInfo objects<br><br>Notes<br>-----<br><br>  * It might be needed to set PYTHONPATH (pointing to the _lsf.so dir) and <br>    LD_LIBRARY_PATH correctly (LSF_LIBDIR needs to be included)<br><br>  * On solaris use 'export LD_PRELOAD=libsocket.so.1' and <br>    '/usr/bin/amd64/python'<br><br>  * Why not using ctypes? Because the LSF libs tend to have undefined vars on <br>    some platforms. The SWIG approach is more flexible to that issue.<br><br>(c) 2010-2012 Platform Computing<br>\n          </div>"}, "last_serial": 1390932, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "0486f66b61aef4c0c66169125ff05eb3", "sha256": "aecc4693e7cd198189753cf529dc6bb9fca5becd1da892a69d298e2930747f09"}, "downloads": -1, "filename": "platform-python-lsf-api-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0486f66b61aef4c0c66169125ff05eb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4677, "upload_time": "2014-11-21T14:53:54", "upload_time_iso_8601": "2014-11-21T14:53:54.450095Z", "url": "https://files.pythonhosted.org/packages/fc/4f/69719f20f91a606ac47b66461411b6a1ae71cb781159954deba9e190bbd0/platform-python-lsf-api-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0486f66b61aef4c0c66169125ff05eb3", "sha256": "aecc4693e7cd198189753cf529dc6bb9fca5becd1da892a69d298e2930747f09"}, "downloads": -1, "filename": "platform-python-lsf-api-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0486f66b61aef4c0c66169125ff05eb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4677, "upload_time": "2014-11-21T14:53:54", "upload_time_iso_8601": "2014-11-21T14:53:54.450095Z", "url": "https://files.pythonhosted.org/packages/fc/4f/69719f20f91a606ac47b66461411b6a1ae71cb781159954deba9e190bbd0/platform-python-lsf-api-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:37 2020"}