{"info": {"author": "jlane", "author_email": "jlane@fanthreesixty.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Pytest", "Intended Audience :: Developers", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing", "Topic :: Utilities"], "description": "pytest-needle\n=============\n[![Build Status](https://travis-ci.org/jlane9/pytest-needle.svg?branch=master)](https://travis-ci.org/jlane9/pytest-needle)\n[![Coverage Status](https://coveralls.io/repos/github/jlane9/pytest-needle/badge.svg?branch=master)](https://coveralls.io/github/jlane9/pytest-needle?branch=master)\n[![PyPI version](https://badge.fury.io/py/pytest-needle.svg)](https://badge.fury.io/py/pytest-needle)\n[![Python version](https://img.shields.io/pypi/pyversions/pytest-needle.svg)](https://pypi.python.org/pypi/pytest-needle)\n[![License](https://img.shields.io/pypi/l/pytest-needle.svg)](https://pypi.python.org/pypi/pytest-needle)\n[![Status](https://img.shields.io/pypi/status/pytest-needle.svg)](https://pypi.python.org/pypi/pytest-needle)\n[![Requirements Status](https://requires.io/github/jlane9/pytest-needle/requirements.svg?branch=master)](https://requires.io/github/jlane9/pytest-needle/requirements/?branch=master)\n[![Documentation Status](https://readthedocs.org/projects/pytest-needle/badge/?version=latest)](http://pytest-needle.readthedocs.io/en/latest/?badge=latest)\n[![Maintainability](https://api.codeclimate.com/v1/badges/a15071d58f78ebe3e6c0/maintainability)](https://codeclimate.com/github/jlane9/pytest-needle/maintainability)\n\npytest-needle is a pytest implementation of [needle](https://github.com/python-needle/needle).\n\nIt's fairly similar to needle and shares much of the same functionality, \nexcept it uses [pytest-selenium](https://github.com/pytest-dev/pytest-selenium) for handling the webdriver \nand implements needle as a fixture instead of having test cases inherit from needle's base test class.\n\n\nInstallation\n------------\n\nInstall through pip:\n\n```bash\npip install pytest-needle\n```\n\n\nInstall from source:\n\n```bash\n\ncd /path/to/source/pytest-needle\npython setup.py install \n```\n\nExample\n-------\n\nExample needle pytest implementation:\n\n```python\n\"\"\"test_example.py\n\"\"\"\n\nfrom selenium.webdriver.common.by import By\nimport pytest\n\n@pytest.mark.element\ndef test_example_element(needle):\n    \"\"\"Example for comparing individual elements\n\n    :param NeedleDriver needle: NeedleDriver instance\n    :return:\n    \"\"\"\n\n    # Navigate to web page\n    needle.driver.get('https://www.google.com')\n\n    # Take an element screen diff\n    needle.assert_screenshot('search_field', (By.ID, 'tsf'))\n\n```\n\nTo create a baseline for all subsequent test run:\n\n```bash\npytest --driver Chrome --needle-save-baseline test_example.py\n```\n\nAfter we have a baseline, to run test use:\n\n```bash\npytest --driver Chrome test_example.py\n```\n\nSelecting a WebDriver\n---------------------\n\nTo control which browser to use, use `--driver <BROWSER>` from pytest-selenium. For example to change to browser to Firefox:\n\n```bash\npytest --driver Firefox test_example.py\n```\n\nSetting the viewport's size\n---------------------------\n\nYou may set the size of the browser's viewport using the `set_viewport_size()` on the needle fixture\n\n```python\n\ndef test_example_viewport(needle):\n\n    # Navigate to web page\n    needle.set_viewport_size(width=1024, height=768)\n\n    # Rest of the test ...\n\n```\n\nYou may also set the default viewport size for all your tests by using the command line argument `--needle-viewport-size`:\n\n```bash\npytest --driver Chrome --needle-viewport-size \"1024 x 768\" test_example.py\n```\n\nExcluding areas\n---------------\n\nSometimes areas on a web page may contain dynamic content and cause false negatives, or worse convince testers to raise \nthe threshold at which changes are acceptable. You can instead choose to mask these areas to avoid the issue of consistently\nfailing tests:\n\n```python\n\"\"\"test_example.py\n\"\"\"\n\nfrom selenium.webdriver.common.by import By\nimport pytest\n\n\n@pytest.mark.mask\ndef test_example_page_with_mask(needle):\n    \"\"\"Example for comparing page with a mask\n\n    :param NeedleDriver needle: NeedleDriver instance\n    :return:\n    \"\"\"\n\n    # Navigate to web page\n    needle.driver.get('https://www.google.com')\n\n    # Take a entire page screen diff, ignore the doodle banner\n    needle.assert_screenshot('search_page', threshold=60, exclude=[(By.ID, 'hplogo'), (By.ID, 'prm')])\n```\n\nIn the case with Google's home page the doodle banner frequently changes, so to visually regress day-to-day requires \ngenerating new baselines every time the banner is updated. Masking allows only the banner to be ignored while the rest \nof the page can be evaluated.\n\n\nEngines\n-------\n\nBy default Needle uses the PIL engine (`needle.engines.pil_engine.Engine`) to take screenshots. Instead of PIL, you may also use PerceptualDiff or ImageMagick.\n\n\nExample with PerceptualDiff:\n\n```bash\npytest --driver Chrome --needle-engine perceptualdiff test_example.py\n```\n\nExample with ImageMagick:\n\n```bash\npytest --driver Chrome --needle-engine imagemagick test_example.py\n```\n\nBesides being much faster than PIL, PerceptualDiff and ImageMagick also generate a diff PNG file when a test fails, highlighting the differences between the baseline image and the new screenshot.\n\nNote that to use the PerceptualDiff engine you will first need to [download](http://pdiff.sourceforge.net/) the perceptualdiff binary and place it in your PATH.\n\nTo use the ImageMagick engine you will need to install a package on your machine (e.g. sudo apt-get install imagemagick on Ubuntu or brew install imagemagick on OSX).\n\n\nFile cleanup\n------------\n\nEach time you run tests, Needle will create new screenshot images on disk, for comparison with the baseline screenshots. \nIt\u2019s then up to you whether you want to delete them or archive them. To remove screenshots from successful test use:\n\n```bash\npytest --driver Chrome --needle-cleanup-on-success test_example.py\n```\n\nAny unsuccessful tests will remain on the file system.\n\n\nFile output\n-----------\n\nTo specify a path for baseline image path use:\n\n```bash\npytest --driver Chrome --needle-baseline-dir /path/to/baseline/images\n```\n\nDefault path is ./screenshots/baseline\n\nTo specify a path for output image path use:\n\n```bash\npytest --driver Chrome --needle-output-dir /path/to/output/images\n```\n\nDefault path is ./screenshots\n\n\nGenerating HTML reports\n-----------------------\n\nTo generate html reports use:\n\n```bash\npytest --driver Chrome --html=report.html --self-contained-html\n```\n\nSpecial Thanks\n--------------\n\n[![browserstack_logo](http://svgshare.com/i/3ZQ.svg)](https://www.browserstack.com)\n\n> Special thanks to BrowserStack for providing automated browser testing, at no charge, for this project and other open source projects like this. With over 1000+ device, browser and os versions combinations to choose from and integrations with Travis CI this project could not be successful without the hard work of the BrowserStack team and their continued support of the open source community.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jlane9/pytest-needle", "keywords": "py.test pytest needle imagemagick perceptualdiff pil selenium visual", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pytest-needle", "package_url": "https://pypi.org/project/pytest-needle/", "platform": "", "project_url": "https://pypi.org/project/pytest-needle/", "project_urls": {"Documentation": "https://pytest-needle.readthedocs.io/en/latest/", "Homepage": "https://github.com/jlane9/pytest-needle", "Tracker": "https://github.com/jlane9/pytest-needle/issues"}, "release_url": "https://pypi.org/project/pytest-needle/0.3.11/", "requires_dist": ["pytest (<5.0.0,>=3.0.0)", "needle (<0.6.0,>=0.5.0)", "pytest-selenium (<2.0.0,>=1.10.0)", "bumpversion (>=0.5.0) ; extra == 'release'", "recommonmark (>=0.4.0) ; extra == 'release'", "Sphinx (>=1.8.0) ; extra == 'release'", "sphinx-autobuild (>=0.7.0) ; extra == 'release'", "sphinx-rtd-theme (>=0.4.2) ; extra == 'release'"], "requires_python": ">=2.7", "summary": "pytest plugin for visual testing websites using selenium", "version": "0.3.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pytest-needle</h1>\n<p><a href=\"https://travis-ci.org/jlane9/pytest-needle\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f961b9da81353ea4a7a0c8da6c45a783bacee878/68747470733a2f2f7472617669732d63692e6f72672f6a6c616e65392f7079746573742d6e6565646c652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/jlane9/pytest-needle?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dbeb2ad0778d837a1d26cca893f25a7b5f8d8368/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6a6c616e65392f7079746573742d6e6565646c652f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/pytest-needle\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05737d39b53d4815ad07852bf8b2f9a3c82c704c/68747470733a2f2f62616467652e667572792e696f2f70792f7079746573742d6e6565646c652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pytest-needle\" rel=\"nofollow\"><img alt=\"Python version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4c8d3bfa7437daa290af6e31806a9ce55b9dd8d9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079746573742d6e6565646c652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pytest-needle\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0f9c8bc8ac961f5103d09a204ab001b85175cbd3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7079746573742d6e6565646c652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pytest-needle\" rel=\"nofollow\"><img alt=\"Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f00254dba5b42efb368f70817c5add852a603925/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f7079746573742d6e6565646c652e737667\"></a>\n<a href=\"https://requires.io/github/jlane9/pytest-needle/requirements/?branch=master\" rel=\"nofollow\"><img alt=\"Requirements Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a76e8dabcf05df6ee9fc4bdd27418253f5d5a3a/68747470733a2f2f72657175697265732e696f2f6769746875622f6a6c616e65392f7079746573742d6e6565646c652f726571756972656d656e74732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://pytest-needle.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ec5dd0931cdd128a857ebcec70f0003ef517519/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7079746573742d6e6565646c652f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codeclimate.com/github/jlane9/pytest-needle/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b35d8b88cf0f5016e08a4c80b724a3e25072ccc/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f61313530373164353866373865626533653663302f6d61696e7461696e6162696c697479\"></a></p>\n<p>pytest-needle is a pytest implementation of <a href=\"https://github.com/python-needle/needle\" rel=\"nofollow\">needle</a>.</p>\n<p>It's fairly similar to needle and shares much of the same functionality,\nexcept it uses <a href=\"https://github.com/pytest-dev/pytest-selenium\" rel=\"nofollow\">pytest-selenium</a> for handling the webdriver\nand implements needle as a fixture instead of having test cases inherit from needle's base test class.</p>\n<h2>Installation</h2>\n<p>Install through pip:</p>\n<pre>pip install pytest-needle\n</pre>\n<p>Install from source:</p>\n<pre><span class=\"nb\">cd</span> /path/to/source/pytest-needle\npython setup.py install \n</pre>\n<h2>Example</h2>\n<p>Example needle pytest implementation:</p>\n<pre><span class=\"sd\">\"\"\"test_example.py</span>\n<span class=\"sd\">\"\"\"</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">selenium.webdriver.common.by</span> <span class=\"kn\">import</span> <span class=\"n\">By</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">element</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_example_element</span><span class=\"p\">(</span><span class=\"n\">needle</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Example for comparing individual elements</span>\n\n<span class=\"sd\">    :param NeedleDriver needle: NeedleDriver instance</span>\n<span class=\"sd\">    :return:</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"c1\"># Navigate to web page</span>\n    <span class=\"n\">needle</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://www.google.com'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Take an element screen diff</span>\n    <span class=\"n\">needle</span><span class=\"o\">.</span><span class=\"n\">assert_screenshot</span><span class=\"p\">(</span><span class=\"s1\">'search_field'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">By</span><span class=\"o\">.</span><span class=\"n\">ID</span><span class=\"p\">,</span> <span class=\"s1\">'tsf'</span><span class=\"p\">))</span>\n</pre>\n<p>To create a baseline for all subsequent test run:</p>\n<pre>pytest --driver Chrome --needle-save-baseline test_example.py\n</pre>\n<p>After we have a baseline, to run test use:</p>\n<pre>pytest --driver Chrome test_example.py\n</pre>\n<h2>Selecting a WebDriver</h2>\n<p>To control which browser to use, use <code>--driver &lt;BROWSER&gt;</code> from pytest-selenium. For example to change to browser to Firefox:</p>\n<pre>pytest --driver Firefox test_example.py\n</pre>\n<h2>Setting the viewport's size</h2>\n<p>You may set the size of the browser's viewport using the <code>set_viewport_size()</code> on the needle fixture</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test_example_viewport</span><span class=\"p\">(</span><span class=\"n\">needle</span><span class=\"p\">):</span>\n\n    <span class=\"c1\"># Navigate to web page</span>\n    <span class=\"n\">needle</span><span class=\"o\">.</span><span class=\"n\">set_viewport_size</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">768</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Rest of the test ...</span>\n</pre>\n<p>You may also set the default viewport size for all your tests by using the command line argument <code>--needle-viewport-size</code>:</p>\n<pre>pytest --driver Chrome --needle-viewport-size <span class=\"s2\">\"1024 x 768\"</span> test_example.py\n</pre>\n<h2>Excluding areas</h2>\n<p>Sometimes areas on a web page may contain dynamic content and cause false negatives, or worse convince testers to raise\nthe threshold at which changes are acceptable. You can instead choose to mask these areas to avoid the issue of consistently\nfailing tests:</p>\n<pre><span class=\"sd\">\"\"\"test_example.py</span>\n<span class=\"sd\">\"\"\"</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">selenium.webdriver.common.by</span> <span class=\"kn\">import</span> <span class=\"n\">By</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">mask</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_example_page_with_mask</span><span class=\"p\">(</span><span class=\"n\">needle</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Example for comparing page with a mask</span>\n\n<span class=\"sd\">    :param NeedleDriver needle: NeedleDriver instance</span>\n<span class=\"sd\">    :return:</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"c1\"># Navigate to web page</span>\n    <span class=\"n\">needle</span><span class=\"o\">.</span><span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://www.google.com'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Take a entire page screen diff, ignore the doodle banner</span>\n    <span class=\"n\">needle</span><span class=\"o\">.</span><span class=\"n\">assert_screenshot</span><span class=\"p\">(</span><span class=\"s1\">'search_page'</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"n\">exclude</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"n\">By</span><span class=\"o\">.</span><span class=\"n\">ID</span><span class=\"p\">,</span> <span class=\"s1\">'hplogo'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">By</span><span class=\"o\">.</span><span class=\"n\">ID</span><span class=\"p\">,</span> <span class=\"s1\">'prm'</span><span class=\"p\">)])</span>\n</pre>\n<p>In the case with Google's home page the doodle banner frequently changes, so to visually regress day-to-day requires\ngenerating new baselines every time the banner is updated. Masking allows only the banner to be ignored while the rest\nof the page can be evaluated.</p>\n<h2>Engines</h2>\n<p>By default Needle uses the PIL engine (<code>needle.engines.pil_engine.Engine</code>) to take screenshots. Instead of PIL, you may also use PerceptualDiff or ImageMagick.</p>\n<p>Example with PerceptualDiff:</p>\n<pre>pytest --driver Chrome --needle-engine perceptualdiff test_example.py\n</pre>\n<p>Example with ImageMagick:</p>\n<pre>pytest --driver Chrome --needle-engine imagemagick test_example.py\n</pre>\n<p>Besides being much faster than PIL, PerceptualDiff and ImageMagick also generate a diff PNG file when a test fails, highlighting the differences between the baseline image and the new screenshot.</p>\n<p>Note that to use the PerceptualDiff engine you will first need to <a href=\"http://pdiff.sourceforge.net/\" rel=\"nofollow\">download</a> the perceptualdiff binary and place it in your PATH.</p>\n<p>To use the ImageMagick engine you will need to install a package on your machine (e.g. sudo apt-get install imagemagick on Ubuntu or brew install imagemagick on OSX).</p>\n<h2>File cleanup</h2>\n<p>Each time you run tests, Needle will create new screenshot images on disk, for comparison with the baseline screenshots.\nIt\u2019s then up to you whether you want to delete them or archive them. To remove screenshots from successful test use:</p>\n<pre>pytest --driver Chrome --needle-cleanup-on-success test_example.py\n</pre>\n<p>Any unsuccessful tests will remain on the file system.</p>\n<h2>File output</h2>\n<p>To specify a path for baseline image path use:</p>\n<pre>pytest --driver Chrome --needle-baseline-dir /path/to/baseline/images\n</pre>\n<p>Default path is ./screenshots/baseline</p>\n<p>To specify a path for output image path use:</p>\n<pre>pytest --driver Chrome --needle-output-dir /path/to/output/images\n</pre>\n<p>Default path is ./screenshots</p>\n<h2>Generating HTML reports</h2>\n<p>To generate html reports use:</p>\n<pre>pytest --driver Chrome --html<span class=\"o\">=</span>report.html --self-contained-html\n</pre>\n<h2>Special Thanks</h2>\n<p><a href=\"https://www.browserstack.com\" rel=\"nofollow\"><img alt=\"browserstack_logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/89ae787c9ad08580471ed3bea5c253a0435fd7a9/687474703a2f2f73766773686172652e636f6d2f692f335a512e737667\"></a></p>\n<blockquote>\n<p>Special thanks to BrowserStack for providing automated browser testing, at no charge, for this project and other open source projects like this. With over 1000+ device, browser and os versions combinations to choose from and integrations with Travis CI this project could not be successful without the hard work of the BrowserStack team and their continued support of the open source community.</p>\n</blockquote>\n\n          </div>"}, "last_serial": 4578457, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "912b99acdf08d5a90dba1e0c134d58ea", "sha256": "9672cb7d689a3feb2ac2e684a2fa4cd522929f9d9cec77b37645db73552ba491"}, "downloads": -1, "filename": "pytest-needle-0.1.0.tar.gz", "has_sig": false, "md5_digest": "912b99acdf08d5a90dba1e0c134d58ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4367, "upload_time": "2017-06-02T16:15:39", "upload_time_iso_8601": "2017-06-02T16:15:39.445323Z", "url": "https://files.pythonhosted.org/packages/51/cd/a7184623f743e085c5260e9b24afdeb86ea4c4786285260834c382f3c960/pytest-needle-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "cea1fd649a1e03a2ff03ab907c152b7c", "sha256": "444fa0ecf3d9862b6b7cf5db284926b041386d1443c2f33d7e4cbb195e82f330"}, "downloads": -1, "filename": "pytest_needle-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cea1fd649a1e03a2ff03ab907c152b7c", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7685, "upload_time": "2017-06-03T04:47:31", "upload_time_iso_8601": "2017-06-03T04:47:31.962384Z", "url": "https://files.pythonhosted.org/packages/b9/d3/3586758d1b81c0ec654e5023a5c6e5813e53e66279acf0a098318911800e/pytest_needle-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb0722a1964104815817cb09e901f720", "sha256": "adb4f466179749ce8971de133e5700a9e66748cebc9262d24336ab0e03df7f2e"}, "downloads": -1, "filename": "pytest-needle-0.2.0.tar.gz", "has_sig": false, "md5_digest": "fb0722a1964104815817cb09e901f720", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5546, "upload_time": "2017-06-03T04:47:29", "upload_time_iso_8601": "2017-06-03T04:47:29.818613Z", "url": "https://files.pythonhosted.org/packages/6b/7a/3a650f2fe62d3def4b8299862c6d5d3409c9c6cd47e04cfee20226252166/pytest-needle-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4acaa5f331192cc3a5883eabeb53963b", "sha256": "c6bcefd9f4137a5625e2a9cb5f5e74959adf4e679543ef67de93a987a23037ed"}, "downloads": -1, "filename": "pytest_needle-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4acaa5f331192cc3a5883eabeb53963b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7637, "upload_time": "2017-10-25T17:41:39", "upload_time_iso_8601": "2017-10-25T17:41:39.311035Z", "url": "https://files.pythonhosted.org/packages/2f/ff/45f18a4c41f62aef9877dd259db6c7d18a203dc984e5da7e6a52825a3122/pytest_needle-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fcc72bfc01737082b3b52673efd8685", "sha256": "50c75d2c8c6118e3eddb445e6bbf15dc6c3a71c6855c25a1d28a82d6dbfd0486"}, "downloads": -1, "filename": "pytest-needle-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4fcc72bfc01737082b3b52673efd8685", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7514, "upload_time": "2017-10-25T17:41:41", "upload_time_iso_8601": "2017-10-25T17:41:41.572530Z", "url": "https://files.pythonhosted.org/packages/6c/10/2bb8de963c1df00470028181ec721bf8d3c99a5f3a47adacc955b6e34a27/pytest-needle-0.3.0.tar.gz", "yanked": false}], "0.3.11": [{"comment_text": "", "digests": {"md5": "c6c4e77b328be6b7d760b555dbfdee74", "sha256": "a8144bdf86393efec68d4f6e0a89f61e33b340359c19a26e76daa5c094a1f6f7"}, "downloads": -1, "filename": "pytest_needle-0.3.11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c6c4e77b328be6b7d760b555dbfdee74", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 10476, "upload_time": "2018-12-10T00:14:09", "upload_time_iso_8601": "2018-12-10T00:14:09.237372Z", "url": "https://files.pythonhosted.org/packages/1f/bd/dfeffe073d55e39ec2f46736cb3f0e7f6953871a786c4b27dab790cb70ef/pytest_needle-0.3.11-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "730aa6c559ed2f556c1ca9179bba187e", "sha256": "3c97b945d7cb4e746b6cc1fe8e59768bd494afa95378b048a5164267a26fa462"}, "downloads": -1, "filename": "pytest-needle-0.3.11.tar.gz", "has_sig": false, "md5_digest": "730aa6c559ed2f556c1ca9179bba187e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 11831, "upload_time": "2018-12-10T00:14:11", "upload_time_iso_8601": "2018-12-10T00:14:11.729714Z", "url": "https://files.pythonhosted.org/packages/57/21/3bcc3ae0b98c951e8b505f2443cc018bdcc88aa8f87ef5de7f8caa14acaa/pytest-needle-0.3.11.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "af0831ad7f0c6cabfeb52f843e6a34f1", "sha256": "d0d943d97ba8811f197aaef0a392b04446643731ce04c568ab0d17fa7552f4eb"}, "downloads": -1, "filename": "pytest_needle-0.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "af0831ad7f0c6cabfeb52f843e6a34f1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7770, "upload_time": "2017-11-03T16:29:39", "upload_time_iso_8601": "2017-11-03T16:29:39.229627Z", "url": "https://files.pythonhosted.org/packages/8e/b8/fe1a03656041c823007ac71ee7fa37da69007ee6ac90c2f53dfedd7bea55/pytest_needle-0.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5aeecbd51f4c3d471fc457b86e6405d6", "sha256": "11de2b65279bda6dd4430d806710c3f3239c87492d64eef758f779e1ffdc3c45"}, "downloads": -1, "filename": "pytest-needle-0.3.2.tar.gz", "has_sig": false, "md5_digest": "5aeecbd51f4c3d471fc457b86e6405d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7772, "upload_time": "2017-11-03T16:29:40", "upload_time_iso_8601": "2017-11-03T16:29:40.850424Z", "url": "https://files.pythonhosted.org/packages/61/90/fbb8b5c0a448c602e18db15445036c3f660d63977ef39dbf710b3b8a00c1/pytest-needle-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "d3aff042138ab3915eabecf7f17329ad", "sha256": "321723e835825e596d4a8eb0bee71307467d6552cb17ff56127fda79d88e266a"}, "downloads": -1, "filename": "pytest_needle-0.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d3aff042138ab3915eabecf7f17329ad", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7768, "upload_time": "2017-11-03T19:56:37", "upload_time_iso_8601": "2017-11-03T19:56:37.098996Z", "url": "https://files.pythonhosted.org/packages/f2/1e/83dcac0cd1e4f47a4e069da0e2e73d48ab978da8509eeea235e4197519c9/pytest_needle-0.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3337d0ecbf03e77134167881aefbcd9", "sha256": "282e11038744162048bacd8d411ca071c2c02689be6af2ad8ad0ef2bbc1e94e0"}, "downloads": -1, "filename": "pytest-needle-0.3.3.tar.gz", "has_sig": false, "md5_digest": "e3337d0ecbf03e77134167881aefbcd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7769, "upload_time": "2017-11-03T19:56:38", "upload_time_iso_8601": "2017-11-03T19:56:38.524159Z", "url": "https://files.pythonhosted.org/packages/b0/18/2f11a481944b9f7f245ffad2a559e218600e22c1e9f7a019e4cb3a1362ae/pytest-needle-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "0e56fb9413e7b045946cc2bf949e25ba", "sha256": "31c10f1ab2779bfbe26dc8ec4dc4c8e72afe186f18b1fa70f2c7c05a8cbe712f"}, "downloads": -1, "filename": "pytest_needle-0.3.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0e56fb9413e7b045946cc2bf949e25ba", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7771, "upload_time": "2017-11-14T15:39:22", "upload_time_iso_8601": "2017-11-14T15:39:22.010382Z", "url": "https://files.pythonhosted.org/packages/4d/4c/5b59e57a2355e54ca2d3554a00b747b82921593e49e176103bd19d15c30f/pytest_needle-0.3.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "653cd76ec1da81bb0facb2dc46fa584d", "sha256": "58f2efc810045e8392bc07a46fd4a9d47a6f5ec08a35d7498e570829018a089a"}, "downloads": -1, "filename": "pytest-needle-0.3.4.tar.gz", "has_sig": false, "md5_digest": "653cd76ec1da81bb0facb2dc46fa584d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7776, "upload_time": "2017-11-14T15:39:22", "upload_time_iso_8601": "2017-11-14T15:39:22.972289Z", "url": "https://files.pythonhosted.org/packages/7f/30/60a56d95e2110049b745a7a199792348b50675cdd0266b280c01c4a4d12c/pytest-needle-0.3.4.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "074f238fc0aed900a6e0f5e27800132c", "sha256": "483eee447ad464aec153191938370efab4d4653a413f46657c32c528e1f5468c"}, "downloads": -1, "filename": "pytest_needle-0.3.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "074f238fc0aed900a6e0f5e27800132c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7848, "upload_time": "2018-01-31T06:42:10", "upload_time_iso_8601": "2018-01-31T06:42:10.669872Z", "url": "https://files.pythonhosted.org/packages/b1/da/0a478f11170697eb8539c738961efd8a00e6a3b4298892a0acdb70a8a7c7/pytest_needle-0.3.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f1ebfc2685580552f855dab3ee4312e", "sha256": "759dea5628e296349e3ede01011651cfa1ef3e770cd66389cca0150054950cea"}, "downloads": -1, "filename": "pytest-needle-0.3.6.tar.gz", "has_sig": false, "md5_digest": "1f1ebfc2685580552f855dab3ee4312e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7792, "upload_time": "2018-01-31T06:42:13", "upload_time_iso_8601": "2018-01-31T06:42:13.181419Z", "url": "https://files.pythonhosted.org/packages/ed/b6/42a1f3516d4673b4fc7f595d22d80d9ebc599b6f4e65e6a09bb60e13ec14/pytest-needle-0.3.6.tar.gz", "yanked": false}], "0.3.7": [{"comment_text": "", "digests": {"md5": "0898d1cec655888b87d10e4db2d19af2", "sha256": "3b4b74421634b59ef0e37c3aa5893d505cbaaf290a1459c7791eec6824bd09ba"}, "downloads": -1, "filename": "pytest_needle-0.3.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0898d1cec655888b87d10e4db2d19af2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7844, "upload_time": "2018-02-01T20:57:59", "upload_time_iso_8601": "2018-02-01T20:57:59.041786Z", "url": "https://files.pythonhosted.org/packages/bc/3c/df4ca6d53b5bd2c8350a3dfa551562a3ae24e5ef99ed7caff81b5081b8f0/pytest_needle-0.3.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f386d3959b6e0f2c46092235810e7056", "sha256": "ac3c7b72e42cf18a41c86135357335306ca3bb2485c70b8564bcc8eff7d4a129"}, "downloads": -1, "filename": "pytest-needle-0.3.7.tar.gz", "has_sig": false, "md5_digest": "f386d3959b6e0f2c46092235810e7056", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7948, "upload_time": "2018-02-01T20:58:00", "upload_time_iso_8601": "2018-02-01T20:58:00.504035Z", "url": "https://files.pythonhosted.org/packages/24/6d/522fd0e73e654040de056cd84284d17edadf517f963be96f265694e1e8f5/pytest-needle-0.3.7.tar.gz", "yanked": false}], "0.3.8": [{"comment_text": "", "digests": {"md5": "09b55462640d4c866a242101690ed0c8", "sha256": "aa49180b66ad1038ab5d64c50918abc0ce2a9b11b48870f50f8fda7f06914f4e"}, "downloads": -1, "filename": "pytest_needle-0.3.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "09b55462640d4c866a242101690ed0c8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8229, "upload_time": "2018-02-02T07:39:32", "upload_time_iso_8601": "2018-02-02T07:39:32.492257Z", "url": "https://files.pythonhosted.org/packages/b7/ca/71198b4fadcf4a2a33affe42f4cd2d56bfb81ec5549777056ffd1852a19b/pytest_needle-0.3.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a83b63af30832bb39b9406b542b1e65d", "sha256": "d5c84c2d39a57ed818038bce0079d4b1213bca85aed5288d8fe354f99aee1c54"}, "downloads": -1, "filename": "pytest-needle-0.3.8.tar.gz", "has_sig": false, "md5_digest": "a83b63af30832bb39b9406b542b1e65d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9079, "upload_time": "2018-02-02T07:39:34", "upload_time_iso_8601": "2018-02-02T07:39:34.117872Z", "url": "https://files.pythonhosted.org/packages/6d/cc/82de8306dd165e97f35f42bae3d8fb08382d402d8a525c11f2f174671d1b/pytest-needle-0.3.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c6c4e77b328be6b7d760b555dbfdee74", "sha256": "a8144bdf86393efec68d4f6e0a89f61e33b340359c19a26e76daa5c094a1f6f7"}, "downloads": -1, "filename": "pytest_needle-0.3.11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c6c4e77b328be6b7d760b555dbfdee74", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 10476, "upload_time": "2018-12-10T00:14:09", "upload_time_iso_8601": "2018-12-10T00:14:09.237372Z", "url": "https://files.pythonhosted.org/packages/1f/bd/dfeffe073d55e39ec2f46736cb3f0e7f6953871a786c4b27dab790cb70ef/pytest_needle-0.3.11-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "730aa6c559ed2f556c1ca9179bba187e", "sha256": "3c97b945d7cb4e746b6cc1fe8e59768bd494afa95378b048a5164267a26fa462"}, "downloads": -1, "filename": "pytest-needle-0.3.11.tar.gz", "has_sig": false, "md5_digest": "730aa6c559ed2f556c1ca9179bba187e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 11831, "upload_time": "2018-12-10T00:14:11", "upload_time_iso_8601": "2018-12-10T00:14:11.729714Z", "url": "https://files.pythonhosted.org/packages/57/21/3bcc3ae0b98c951e8b505f2443cc018bdcc88aa8f87ef5de7f8caa14acaa/pytest-needle-0.3.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:56 2020"}