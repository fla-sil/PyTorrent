{"info": {"author": "Max Brunsfeld", "author_email": "maxbrunsfeld@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Topic :: Software Development :: Compilers", "Topic :: Text Processing :: Linguistic"], "description": "py-tree-sitter\n==================\n\n[![Build Status](https://travis-ci.org/tree-sitter/py-tree-sitter.svg?branch=master)](https://travis-ci.org/tree-sitter/py-tree-sitter)\n[![Build status](https://ci.appveyor.com/api/projects/status/mde790v0v9gux85w/branch/master?svg=true)](https://ci.appveyor.com/project/maxbrunsfeld/py-tree-sitter/branch/master)\n\nThis module provides Python bindings to the [tree-sitter](https://github.com/tree-sitter/tree-sitter) parsing library.\n\n## Installation\n\nThis package currently only works with Python 3. There are no library dependencies, but you do need to have a C compiler installed.\n\n```sh\npip3 install tree_sitter\n```\n\n## Usage\n\n#### Setup\n\nFirst you'll need a Tree-sitter language implementation for each language that you want to parse. You can clone some of the [existing language repos](https://github.com/tree-sitter) or [create your own](http://tree-sitter.github.io/tree-sitter/creating-parsers):\n\n```sh\ngit clone https://github.com/tree-sitter/tree-sitter-go\ngit clone https://github.com/tree-sitter/tree-sitter-javascript\ngit clone https://github.com/tree-sitter/tree-sitter-python\n```\n\nUse the `Language.build_library` method to compile these into a library that's usable from Python. This function will return immediately if the library has already been compiled since the last time its source code was modified:\n\n```python\nfrom tree_sitter import Language, Parser\n\nLanguage.build_library(\n  # Store the library in the `build` directory\n  'build/my-languages.so',\n\n  # Include one or more languages\n  [\n    'vendor/tree-sitter-go',\n    'vendor/tree-sitter-javascript',\n    'vendor/tree-sitter-python'\n  ]\n)\n```\n\nLoad the languages into your app as `Language` objects:\n\n```python\nGO_LANGUAGE = Language('build/my-languages.so', 'go')\nJS_LANGUAGE = Language('build/my-languages.so', 'javascript')\nPY_LANGUAGE = Language('build/my-languages.so', 'python')\n```\n\n#### Basic Parsing\n\nCreate a `Parser` and configure it to use one of the languages:\n\n```python\nparser = Parser()\nparser.set_language(PY_LANGUAGE)\n```\n\nParse some source code:\n\n```python\ntree = parser.parse(bytes(\"\"\"\ndef foo():\n    if bar:\n        baz()\n\"\"\", \"utf8\"))\n```\n\nInspect the resulting `Tree`:\n\n```python\nroot_node = tree.root_node\nassert root_node.type == 'module'\nassert root_node.start_point == (1, 0)\nassert root_node.end_point == (3, 13)\n\nfunction_node = root_node.children[0]\nassert function_node.type == 'function_definition'\nassert function_node.child_by_field_name('name').type == 'identifier'\n\nfunction_name_node = function_node.children[1]\nassert function_name_node.type == 'identifier'\nassert function_name_node.start_point == (1, 4)\nassert function_name_node.end_point == (1, 7)\n\nassert root_node.sexp() == \"(module \"\n    \"(function_definition \"\n        \"name: (identifier) \"\n        \"parameters: (parameters) \"\n        \"body: (block \"\n            \"(if_statement \"\n                \"condition: (identifier) \"\n                \"consequence: (block \"\n                    \"(expression_statement (call \"\n                        \"function: (identifier) \"\n                        \"arguments: (argument_list))))))))\"\n```\n\n#### Walking Syntax Trees\n\nIf you need to traverse a large number of nodes efficiently, you can use\na `TreeCursor`:\n\n```python\ncursor = tree.walk()\n\nassert cursor.node.type == 'module'\n\nassert cursor.goto_first_child()\nassert cursor.node.type == 'function_definition'\n\nassert cursor.goto_first_child()\nassert cursor.node.type == 'def'\n\n# Returns `False` because the `def` node has no children\nassert not cursor.goto_first_child()\n\nassert cursor.goto_next_sibling()\nassert cursor.node.type == 'identifier'\n\nassert cursor.goto_next_sibling()\nassert cursor.node.type == 'parameters'\n\nassert cursor.goto_parent()\nassert cursor.node.type == 'function_definition'\n```\n\n#### Editing\n\nWhen a source file is edited, you can edit the syntax tree to keep it in sync with the source:\n\n```python\ntree.edit(\n    start_byte=5,\n    old_end_byte=5,\n    new_end_byte=5 + 2,\n    start_point=(0, 5),\n    old_end_point=(0, 5),\n    new_end_point=(0, 5 + 2),\n)\n```\n\nThen, when you're ready to incorporate the changes into a new syntax tree,\nyou can call `Parser.parse` again, but pass in the old tree:\n\n```python\nnew_tree = parser.parse(new_source, tree)\n```\n\nThis will run much faster than if you were parsing from scratch.\n\n#### Pattern-matching\n\nYou can search for patterns in a syntax tree using a *tree query*:\n\n```python\nquery = PY_LANGUAGE.query(\"\"\"\n(function_definition\n  name: (identifier) @function.def)\n\n(call\n  function: (identifier) @function.call)\n\"\"\")\n\ncaptures = query.captures(tree.root_node)\nassert len(captures) == 2\nassert captures[0][0] == function_name_node\nassert captures[0][1] == \"function.def\"\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tree-sitter/py-tree-sitter", "keywords": "", "license": "MIT", "maintainer": "Max Brunsfeld", "maintainer_email": "maxbrunsfeld@gmail.com", "name": "tree-sitter", "package_url": "https://pypi.org/project/tree-sitter/", "platform": "any", "project_url": "https://pypi.org/project/tree-sitter/", "project_urls": {"Homepage": "https://github.com/tree-sitter/py-tree-sitter", "Source": "https://github.com/tree-sitter/py-tree-sitter"}, "release_url": "https://pypi.org/project/tree-sitter/0.1.1/", "requires_dist": null, "requires_python": ">=3.3", "summary": "Python bindings to the Tree-sitter parsing library", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>py-tree-sitter</h1>\n<p><a href=\"https://travis-ci.org/tree-sitter/py-tree-sitter\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dc09e666ced6b192a4d1d610b7b596d73a3de53b/68747470733a2f2f7472617669732d63692e6f72672f747265652d7369747465722f70792d747265652d7369747465722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/maxbrunsfeld/py-tree-sitter/branch/master\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9241c96d0ad4f5fbb61f4bc00450f802460da063/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6d6465373930763076396775783835772f6272616e63682f6d61737465723f7376673d74727565\"></a></p>\n<p>This module provides Python bindings to the <a href=\"https://github.com/tree-sitter/tree-sitter\" rel=\"nofollow\">tree-sitter</a> parsing library.</p>\n<h2>Installation</h2>\n<p>This package currently only works with Python 3. There are no library dependencies, but you do need to have a C compiler installed.</p>\n<pre>pip3 install tree_sitter\n</pre>\n<h2>Usage</h2>\n<h4>Setup</h4>\n<p>First you'll need a Tree-sitter language implementation for each language that you want to parse. You can clone some of the <a href=\"https://github.com/tree-sitter\" rel=\"nofollow\">existing language repos</a> or <a href=\"http://tree-sitter.github.io/tree-sitter/creating-parsers\" rel=\"nofollow\">create your own</a>:</p>\n<pre>git clone https://github.com/tree-sitter/tree-sitter-go\ngit clone https://github.com/tree-sitter/tree-sitter-javascript\ngit clone https://github.com/tree-sitter/tree-sitter-python\n</pre>\n<p>Use the <code>Language.build_library</code> method to compile these into a library that's usable from Python. This function will return immediately if the library has already been compiled since the last time its source code was modified:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tree_sitter</span> <span class=\"kn\">import</span> <span class=\"n\">Language</span><span class=\"p\">,</span> <span class=\"n\">Parser</span>\n\n<span class=\"n\">Language</span><span class=\"o\">.</span><span class=\"n\">build_library</span><span class=\"p\">(</span>\n  <span class=\"c1\"># Store the library in the `build` directory</span>\n  <span class=\"s1\">'build/my-languages.so'</span><span class=\"p\">,</span>\n\n  <span class=\"c1\"># Include one or more languages</span>\n  <span class=\"p\">[</span>\n    <span class=\"s1\">'vendor/tree-sitter-go'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'vendor/tree-sitter-javascript'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'vendor/tree-sitter-python'</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Load the languages into your app as <code>Language</code> objects:</p>\n<pre><span class=\"n\">GO_LANGUAGE</span> <span class=\"o\">=</span> <span class=\"n\">Language</span><span class=\"p\">(</span><span class=\"s1\">'build/my-languages.so'</span><span class=\"p\">,</span> <span class=\"s1\">'go'</span><span class=\"p\">)</span>\n<span class=\"n\">JS_LANGUAGE</span> <span class=\"o\">=</span> <span class=\"n\">Language</span><span class=\"p\">(</span><span class=\"s1\">'build/my-languages.so'</span><span class=\"p\">,</span> <span class=\"s1\">'javascript'</span><span class=\"p\">)</span>\n<span class=\"n\">PY_LANGUAGE</span> <span class=\"o\">=</span> <span class=\"n\">Language</span><span class=\"p\">(</span><span class=\"s1\">'build/my-languages.so'</span><span class=\"p\">,</span> <span class=\"s1\">'python'</span><span class=\"p\">)</span>\n</pre>\n<h4>Basic Parsing</h4>\n<p>Create a <code>Parser</code> and configure it to use one of the languages:</p>\n<pre><span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">Parser</span><span class=\"p\">()</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">set_language</span><span class=\"p\">(</span><span class=\"n\">PY_LANGUAGE</span><span class=\"p\">)</span>\n</pre>\n<p>Parse some source code:</p>\n<pre><span class=\"n\">tree</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">def foo():</span>\n<span class=\"s2\">    if bar:</span>\n<span class=\"s2\">        baz()</span>\n<span class=\"s2\">\"\"\"</span><span class=\"p\">,</span> <span class=\"s2\">\"utf8\"</span><span class=\"p\">))</span>\n</pre>\n<p>Inspect the resulting <code>Tree</code>:</p>\n<pre><span class=\"n\">root_node</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">root_node</span>\n<span class=\"k\">assert</span> <span class=\"n\">root_node</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">'module'</span>\n<span class=\"k\">assert</span> <span class=\"n\">root_node</span><span class=\"o\">.</span><span class=\"n\">start_point</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">root_node</span><span class=\"o\">.</span><span class=\"n\">end_point</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">)</span>\n\n<span class=\"n\">function_node</span> <span class=\"o\">=</span> <span class=\"n\">root_node</span><span class=\"o\">.</span><span class=\"n\">children</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"k\">assert</span> <span class=\"n\">function_node</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">'function_definition'</span>\n<span class=\"k\">assert</span> <span class=\"n\">function_node</span><span class=\"o\">.</span><span class=\"n\">child_by_field_name</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">'identifier'</span>\n\n<span class=\"n\">function_name_node</span> <span class=\"o\">=</span> <span class=\"n\">function_node</span><span class=\"o\">.</span><span class=\"n\">children</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"k\">assert</span> <span class=\"n\">function_name_node</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">'identifier'</span>\n<span class=\"k\">assert</span> <span class=\"n\">function_name_node</span><span class=\"o\">.</span><span class=\"n\">start_point</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">function_name_node</span><span class=\"o\">.</span><span class=\"n\">end_point</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">root_node</span><span class=\"o\">.</span><span class=\"n\">sexp</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">\"(module \"</span>\n    <span class=\"s2\">\"(function_definition \"</span>\n        <span class=\"s2\">\"name: (identifier) \"</span>\n        <span class=\"s2\">\"parameters: (parameters) \"</span>\n        <span class=\"s2\">\"body: (block \"</span>\n            <span class=\"s2\">\"(if_statement \"</span>\n                <span class=\"s2\">\"condition: (identifier) \"</span>\n                <span class=\"s2\">\"consequence: (block \"</span>\n                    <span class=\"s2\">\"(expression_statement (call \"</span>\n                        <span class=\"s2\">\"function: (identifier) \"</span>\n                        <span class=\"s2\">\"arguments: (argument_list))))))))\"</span>\n</pre>\n<h4>Walking Syntax Trees</h4>\n<p>If you need to traverse a large number of nodes efficiently, you can use\na <code>TreeCursor</code>:</p>\n<pre><span class=\"n\">cursor</span> <span class=\"o\">=</span> <span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">walk</span><span class=\"p\">()</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">'module'</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">goto_first_child</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">'function_definition'</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">goto_first_child</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">'def'</span>\n\n<span class=\"c1\"># Returns `False` because the `def` node has no children</span>\n<span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">goto_first_child</span><span class=\"p\">()</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">goto_next_sibling</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">'identifier'</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">goto_next_sibling</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">'parameters'</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">goto_parent</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">'function_definition'</span>\n</pre>\n<h4>Editing</h4>\n<p>When a source file is edited, you can edit the syntax tree to keep it in sync with the source:</p>\n<pre><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"p\">(</span>\n    <span class=\"n\">start_byte</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"n\">old_end_byte</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"n\">new_end_byte</span><span class=\"o\">=</span><span class=\"mi\">5</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"n\">start_point</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">),</span>\n    <span class=\"n\">old_end_point</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">),</span>\n    <span class=\"n\">new_end_point</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">5</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Then, when you're ready to incorporate the changes into a new syntax tree,\nyou can call <code>Parser.parse</code> again, but pass in the old tree:</p>\n<pre><span class=\"n\">new_tree</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">new_source</span><span class=\"p\">,</span> <span class=\"n\">tree</span><span class=\"p\">)</span>\n</pre>\n<p>This will run much faster than if you were parsing from scratch.</p>\n<h4>Pattern-matching</h4>\n<p>You can search for patterns in a syntax tree using a <em>tree query</em>:</p>\n<pre><span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">PY_LANGUAGE</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">(function_definition</span>\n<span class=\"s2\">  name: (identifier) @function.def)</span>\n\n<span class=\"s2\">(call</span>\n<span class=\"s2\">  function: (identifier) @function.call)</span>\n<span class=\"s2\">\"\"\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">captures</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">captures</span><span class=\"p\">(</span><span class=\"n\">tree</span><span class=\"o\">.</span><span class=\"n\">root_node</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">captures</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n<span class=\"k\">assert</span> <span class=\"n\">captures</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">function_name_node</span>\n<span class=\"k\">assert</span> <span class=\"n\">captures</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">\"function.def\"</span>\n</pre>\n\n          </div>"}, "last_serial": 7166000, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f56b0ea4e21bb3969b6780d63b8c09e3", "sha256": "a6419257b906ce541047cdc977b16177ecc6c94e2f9d6b0444f340fae381d0fd"}, "downloads": -1, "filename": "tree_sitter-0.0.1-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "f56b0ea4e21bb3969b6780d63b8c09e3", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.3", "size": 129640, "upload_time": "2019-03-21T04:29:46", "upload_time_iso_8601": "2019-03-21T04:29:46.868201Z", "url": "https://files.pythonhosted.org/packages/31/1a/ce62b538a05a5e93b11a1a70bc80ceb93139c8f51f35a60bf3987777d51c/tree_sitter-0.0.1-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "68abfaf86c4b6dc969e95bf5ad763432", "sha256": "f5b5cc7bcc26c82e25f32311047f3a250c8ba8b9cd6d4033289123eceb62a5e1"}, "downloads": -1, "filename": "tree_sitter-0.0.1.tar.gz", "has_sig": false, "md5_digest": "68abfaf86c4b6dc969e95bf5ad763432", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 5276, "upload_time": "2019-03-21T04:29:49", "upload_time_iso_8601": "2019-03-21T04:29:49.038982Z", "url": "https://files.pythonhosted.org/packages/1f/54/ad4ad0cf508503fc747b8e12809c0a726eadce848ad4d70ee229f5b9172f/tree_sitter-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "8d48b1a8d35cd68bbef5e98e5a9a92a2", "sha256": "9cda33d1ade241f06f67d85d5d3c01d5f7959a336d763de44f0f41e40811ec79"}, "downloads": -1, "filename": "tree_sitter-0.0.10-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "8d48b1a8d35cd68bbef5e98e5a9a92a2", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.3", "size": 75999, "upload_time": "2019-11-15T18:24:10", "upload_time_iso_8601": "2019-11-15T18:24:10.054194Z", "url": "https://files.pythonhosted.org/packages/1b/5d/5018f4964f25faaccecf6fed35a56103d157332cb9541b8f753b0df587df/tree_sitter-0.0.10-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7db1a26252cb4b90147c42719e3383f6", "sha256": "5af1ac9280b69c2b1b13e5d08a5497e578ce124d8cca7a928ba1f0c51e46d915"}, "downloads": -1, "filename": "tree_sitter-0.0.10.tar.gz", "has_sig": false, "md5_digest": "7db1a26252cb4b90147c42719e3383f6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 92934, "upload_time": "2019-11-15T18:24:13", "upload_time_iso_8601": "2019-11-15T18:24:13.800318Z", "url": "https://files.pythonhosted.org/packages/fb/c3/a27a368583bb2f11c4b7383b6456f2e83101d139c39f00a2882312058921/tree_sitter-0.0.10.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "5fe04d49583437d522e945482bd69a94", "sha256": "f2b17f59f8d48b2edc77d62cb1f26d02474f28376dc713f1453867f576a53740"}, "downloads": -1, "filename": "tree_sitter-0.0.2-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "5fe04d49583437d522e945482bd69a94", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.3", "size": 129641, "upload_time": "2019-03-21T05:16:20", "upload_time_iso_8601": "2019-03-21T05:16:20.188741Z", "url": "https://files.pythonhosted.org/packages/10/96/007ccf159c77bc9ac51c2bf105b61b40feb9d05a659ee9f495119826ff1b/tree_sitter-0.0.2-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "424f18fd3709c7ae0910ff56c3e8412c", "sha256": "765394e499b673aa7a7e0f7dbcb64133da3dfe075ce5e32a0481b807d80e8985"}, "downloads": -1, "filename": "tree_sitter-0.0.2.tar.gz", "has_sig": false, "md5_digest": "424f18fd3709c7ae0910ff56c3e8412c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 175793, "upload_time": "2019-03-21T05:16:21", "upload_time_iso_8601": "2019-03-21T05:16:21.963641Z", "url": "https://files.pythonhosted.org/packages/93/1d/cb33f4cad3f0924fe9dad88d378079ad815ad50b77ef396bfb2614526b36/tree_sitter-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "5ec1d8dcda2f18a8466941d619e002ed", "sha256": "f5d694f0e36a7eab04740e5f5dfa39fb449de96277ae2e6d48afd2d5d06f61de"}, "downloads": -1, "filename": "tree_sitter-0.0.3-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "5ec1d8dcda2f18a8466941d619e002ed", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.3", "size": 129767, "upload_time": "2019-03-21T22:14:50", "upload_time_iso_8601": "2019-03-21T22:14:50.275821Z", "url": "https://files.pythonhosted.org/packages/cf/de/dacbcd551335515adab3290ea321ea3e0887234f671b38fec4bd5fc95e56/tree_sitter-0.0.3-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acf8d7e227e208bed62a851d50062bc9", "sha256": "988336c89acd4cd04df83cf241204226f5a3308348298fdd6d0bcdf43385b8dd"}, "downloads": -1, "filename": "tree_sitter-0.0.3.tar.gz", "has_sig": false, "md5_digest": "acf8d7e227e208bed62a851d50062bc9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 178074, "upload_time": "2019-03-21T22:14:52", "upload_time_iso_8601": "2019-03-21T22:14:52.010349Z", "url": "https://files.pythonhosted.org/packages/df/e1/6b269fb8dcb28663ec3ef0919db7c59a045d8213f4a6c71b2a7f8e2ff51b/tree_sitter-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "a3ad9d9e116e1a7dd88563a08088ec18", "sha256": "af3e85aeeff105ae772a7a7284e3231855c00d93753a9616b49f886c9f0261fb"}, "downloads": -1, "filename": "tree_sitter-0.0.4-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "a3ad9d9e116e1a7dd88563a08088ec18", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.3", "size": 130413, "upload_time": "2019-03-22T16:08:21", "upload_time_iso_8601": "2019-03-22T16:08:21.861885Z", "url": "https://files.pythonhosted.org/packages/18/3d/ae99f674b29727c98dce2341a30b74c91372090f57b48da99b0ffcedfc08/tree_sitter-0.0.4-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b008c3b7712b674f773c8711f40d6890", "sha256": "10e7a44fd365082f9965fa43f6af882394ff429bfdab236a9af01bd8139077bf"}, "downloads": -1, "filename": "tree_sitter-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b008c3b7712b674f773c8711f40d6890", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 178907, "upload_time": "2019-03-22T16:08:24", "upload_time_iso_8601": "2019-03-22T16:08:24.146536Z", "url": "https://files.pythonhosted.org/packages/cf/c3/f1850242f8fb3676250fab00568310a2898d721c5f024a1e789e1de78ff7/tree_sitter-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "d6993ec88cad0bd15cf96b2156ee7334", "sha256": "43eb73e33c6fe8257b0b519c2a26cfe1656ab6631f13a9be1e4aefa9fa780f26"}, "downloads": -1, "filename": "tree_sitter-0.0.5-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "d6993ec88cad0bd15cf96b2156ee7334", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.3", "size": 129871, "upload_time": "2019-04-29T17:44:16", "upload_time_iso_8601": "2019-04-29T17:44:16.911186Z", "url": "https://files.pythonhosted.org/packages/a7/fe/68d494557cc778db02a1f5691b816b7e28a80f8bd0867612c6fe1445821e/tree_sitter-0.0.5-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aae3ad1a368f0079260d7819c080845f", "sha256": "505489324e84038f53a522c61833b8d426dcd62685879b13344c4c60ec94bb2b"}, "downloads": -1, "filename": "tree_sitter-0.0.5.tar.gz", "has_sig": false, "md5_digest": "aae3ad1a368f0079260d7819c080845f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 178921, "upload_time": "2019-04-29T17:44:26", "upload_time_iso_8601": "2019-04-29T17:44:26.438785Z", "url": "https://files.pythonhosted.org/packages/83/42/ed7ae9890bde3ffb63047d429c699be798032daab6ff522352fb4080447e/tree_sitter-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "bc40b3c88921a5096cb46f5977a72ed0", "sha256": "05f8c01186302865981c3acc3ea1757813f02cf8fd09366bf4bc696bcd20ca85"}, "downloads": -1, "filename": "tree_sitter-0.0.6-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "bc40b3c88921a5096cb46f5977a72ed0", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.3", "size": 131433, "upload_time": "2019-06-11T00:13:00", "upload_time_iso_8601": "2019-06-11T00:13:00.549842Z", "url": "https://files.pythonhosted.org/packages/9c/18/82291b2ed21b030e620a47d0a5622edadfe18b241a965758a44ecc4a1cbc/tree_sitter-0.0.6-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "623c0385bf14707cd9f04f34aeb21a72", "sha256": "4120a23ae5b4e01e74adc53f6ab1c6cfc21202fef43cd3497b0ea084a2c09511"}, "downloads": -1, "filename": "tree_sitter-0.0.6.tar.gz", "has_sig": false, "md5_digest": "623c0385bf14707cd9f04f34aeb21a72", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 185036, "upload_time": "2019-06-11T00:13:06", "upload_time_iso_8601": "2019-06-11T00:13:06.056973Z", "url": "https://files.pythonhosted.org/packages/d2/de/1da083bf1b6ecb58cbbe03b9bd708823caf5dfed0aba596cd8eed876c6cd/tree_sitter-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "3d69f0c4b73f137f245edde39028b076", "sha256": "36e38d26bddfbaf91bc785ffadcadc9e9c526a091fa247152ce4283c3fa76fd5"}, "downloads": -1, "filename": "tree_sitter-0.0.7-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "3d69f0c4b73f137f245edde39028b076", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.3", "size": 132897, "upload_time": "2019-06-13T21:35:07", "upload_time_iso_8601": "2019-06-13T21:35:07.243034Z", "url": "https://files.pythonhosted.org/packages/95/ce/49f29b062f7fcf62bd60e7582d4fbf8e384934ef328b0cdbd487e67dd517/tree_sitter-0.0.7-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df66b233304c48bdb77d7f2026d640ae", "sha256": "bfbac736308d18ee2bbf228a3bd558cabb3fc31db299907776e8f33a1ba78844"}, "downloads": -1, "filename": "tree_sitter-0.0.7-py3.7-macosx-10.14-x86_64.egg", "has_sig": false, "md5_digest": "df66b233304c48bdb77d7f2026d640ae", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.3", "size": 144485, "upload_time": "2019-07-18T20:35:39", "upload_time_iso_8601": "2019-07-18T20:35:39.814712Z", "url": "https://files.pythonhosted.org/packages/47/e4/6efdfd70769c89fd1813504982cf2436a2836420a4d87684a09b9145c65d/tree_sitter-0.0.7-py3.7-macosx-10.14-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a67265e44a0593fe50c66d96b0b66300", "sha256": "166ed797ddbcbf95153e7fd21a627933f77768223dfc55b3f42e38b2da8d3257"}, "downloads": -1, "filename": "tree_sitter-0.0.7.tar.gz", "has_sig": false, "md5_digest": "a67265e44a0593fe50c66d96b0b66300", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 186467, "upload_time": "2019-06-13T21:35:13", "upload_time_iso_8601": "2019-06-13T21:35:13.259752Z", "url": "https://files.pythonhosted.org/packages/01/9a/913ba70ef93ec145c15648e7234aba67df5ead3113519226c759bdf3e048/tree_sitter-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "90530752bbb4300c12829805f9e7612b", "sha256": "61719c8cf51ff93413382635cb87c48fae6c64804bde6ef47be1307cd6e0f80a"}, "downloads": -1, "filename": "tree_sitter-0.0.8-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "90530752bbb4300c12829805f9e7612b", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.3", "size": 132857, "upload_time": "2019-07-18T20:35:33", "upload_time_iso_8601": "2019-07-18T20:35:33.466780Z", "url": "https://files.pythonhosted.org/packages/02/7d/8a0c15f20a3803b76488b29ba2820338c37aa5c7b878899f8db07d73bc0a/tree_sitter-0.0.8-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f19bf17d42e673c7578e01a08b82eb97", "sha256": "d988c5d0784819ace55aa21f265ff83b4a84c8386669b8cec9c510d3aa8d9517"}, "downloads": -1, "filename": "tree_sitter-0.0.8.tar.gz", "has_sig": false, "md5_digest": "f19bf17d42e673c7578e01a08b82eb97", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 186821, "upload_time": "2019-07-18T20:35:42", "upload_time_iso_8601": "2019-07-18T20:35:42.919627Z", "url": "https://files.pythonhosted.org/packages/f8/24/86f2c23d68f8241f23829732fa9985905f974b0c1d5929589cb153ae0519/tree_sitter-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "bab1539c7761f13f4e4c833bfd0b1436", "sha256": "562128f181aa829d7ed66650e6f1b649897dc59b28a473c358366917dcdd2348"}, "downloads": -1, "filename": "tree_sitter-0.0.9-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "bab1539c7761f13f4e4c833bfd0b1436", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.3", "size": 95836, "upload_time": "2019-11-15T17:49:04", "upload_time_iso_8601": "2019-11-15T17:49:04.527496Z", "url": "https://files.pythonhosted.org/packages/f9/64/eb5aed79d10983ab11d1ad29245a22f50cb336d63543dd18a5361e2bb8ac/tree_sitter-0.0.9-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3d2dff22823a13b7ac07691a6f001a9", "sha256": "946fcf98c91f4326e5be50ebb4d953dc83d4f48e769ef03aa1c83690529d3500"}, "downloads": -1, "filename": "tree_sitter-0.0.9.tar.gz", "has_sig": false, "md5_digest": "c3d2dff22823a13b7ac07691a6f001a9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 92888, "upload_time": "2019-11-15T17:49:06", "upload_time_iso_8601": "2019-11-15T17:49:06.698982Z", "url": "https://files.pythonhosted.org/packages/d5/e9/f3976e68b6c51156b803fd5b9ff874c8e6ee024fce510cb2306edb6d3b63/tree_sitter-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "762aa1241c70577c9834c104cdd69ffb", "sha256": "f1a85d153be8f81ee512a92f5974b66afa901e196762354f4e3119907dd38f70"}, "downloads": -1, "filename": "tree_sitter-0.1.0-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "762aa1241c70577c9834c104cdd69ffb", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.3", "size": 75988, "upload_time": "2019-12-10T00:47:06", "upload_time_iso_8601": "2019-12-10T00:47:06.972726Z", "url": "https://files.pythonhosted.org/packages/73/33/524af8a1e436eeafbdd144282579e90b54fc1f2a04ae03a5ed9c3984d5aa/tree_sitter-0.1.0-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76fd473541c7ecd2f1922e847ef9f6aa", "sha256": "9d6e34e92fcb7bccabba941c53e84a0b3fb3060a5cf17f8c50686675c3e295e5"}, "downloads": -1, "filename": "tree_sitter-0.1.0.tar.gz", "has_sig": false, "md5_digest": "76fd473541c7ecd2f1922e847ef9f6aa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 93473, "upload_time": "2019-12-10T00:47:23", "upload_time_iso_8601": "2019-12-10T00:47:23.285478Z", "url": "https://files.pythonhosted.org/packages/89/a9/33976501bd229988643140159fbc424ee3738e351b9a583aa0ce593118a2/tree_sitter-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "65b95e6c7d06af7b5a64dd9b8f03e671", "sha256": "14e556f9369445d27ae0e6d678299a3f0f5a54dc0b75c365d7beb43c183d95bc"}, "downloads": -1, "filename": "tree_sitter-0.1.1-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "65b95e6c7d06af7b5a64dd9b8f03e671", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.3", "size": 96877, "upload_time": "2020-05-04T17:16:30", "upload_time_iso_8601": "2020-05-04T17:16:30.122137Z", "url": "https://files.pythonhosted.org/packages/5c/02/d293b2652294b5434df644b2fd5bf47bab5589b5c4a60709384108db2447/tree_sitter-0.1.1-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1fad3b2cc645146c592da2942e62c85", "sha256": "704edf00b83522fecbcf7957e84c452848aaa0bc5f6575ca9721f43ce835e834"}, "downloads": -1, "filename": "tree_sitter-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b1fad3b2cc645146c592da2942e62c85", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 93667, "upload_time": "2020-05-04T17:16:33", "upload_time_iso_8601": "2020-05-04T17:16:33.786610Z", "url": "https://files.pythonhosted.org/packages/a6/51/0fa7c5e7951d2b01bcd4dcaa8a52780741a058bba92c660329fc8403799d/tree_sitter-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "65b95e6c7d06af7b5a64dd9b8f03e671", "sha256": "14e556f9369445d27ae0e6d678299a3f0f5a54dc0b75c365d7beb43c183d95bc"}, "downloads": -1, "filename": "tree_sitter-0.1.1-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "65b95e6c7d06af7b5a64dd9b8f03e671", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.3", "size": 96877, "upload_time": "2020-05-04T17:16:30", "upload_time_iso_8601": "2020-05-04T17:16:30.122137Z", "url": "https://files.pythonhosted.org/packages/5c/02/d293b2652294b5434df644b2fd5bf47bab5589b5c4a60709384108db2447/tree_sitter-0.1.1-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1fad3b2cc645146c592da2942e62c85", "sha256": "704edf00b83522fecbcf7957e84c452848aaa0bc5f6575ca9721f43ce835e834"}, "downloads": -1, "filename": "tree_sitter-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b1fad3b2cc645146c592da2942e62c85", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 93667, "upload_time": "2020-05-04T17:16:33", "upload_time_iso_8601": "2020-05-04T17:16:33.786610Z", "url": "https://files.pythonhosted.org/packages/a6/51/0fa7c5e7951d2b01bcd4dcaa8a52780741a058bba92c660329fc8403799d/tree_sitter-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:47:34 2020"}