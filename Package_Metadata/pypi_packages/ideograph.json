{"info": {"author": "Ben Yang", "author_email": "benayang@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Natural Language :: Chinese (Simplified)", "Natural Language :: Chinese (Traditional)", "Natural Language :: Japanese", "Natural Language :: Korean", "Natural Language :: Vietnamese", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Text Processing :: Linguistic"], "description": "# ideograph\n\nA tool to look up ideographs by their components. At the moment, it only contains Han characters, but it could be expanded to include other ideographic scripts such as Tangut or Sumero-Akkadian Cuneiform.\n\n## Installation\n\n```bash\n$ pip install ideograph\n```\n\n## Usage\n\n*ideograph* consists of a two functions, `find()` and `components()`:\n\n`find()` takes a string of ideograph components and returns a set of ideographs that include all of those components.\n\nCharacters in the component string that are not ideographic components are ignored.\n\nNote that the current implementation is quite strict and relies on visual distinction for components rather than etymological connection: e.g. \"\u4eba\" \u2260 \"\u4ebb\".\n\nIt can be called from the command line:\n\n```bash\n$ ideograph \u6728\u65e5\u52ff\n\u4d58\u694a\u9e09\ud84d\udf7b\ud84f\udfd8\ud854\udcb8\ud856\udc1c\ud85b\udf34\ud864\udc52\ud86b\udcf7\ud872\udf0d\n```\n\nor imported as a Python package:\n\n```python3\n>>> import ideograph\n>>> ideograph.find(\"\u6728\u65e5\u52ff\")\n{'\ud84f\udfd8', '\ud84d\udf7b', '\ud856\udc1c', '\ud868\udfa5', '\ud864\udc52', '\ud868\udfa7', '\ud855\udfd8', '\ud84d\udcd7', '\u694a', '\ud84d\udcfe', '\ud872\udf0d', '\ud86b\udcf7', '\ud85b\udf34', '\u9e09', '\u4d58', '\ud854\udcb8'}\n```\n\n`components()` takes a string consisting of a single ideograph and returns a set of components. Note that the set contains components and the components of those components, and so on, down to the most basic of components contained in the cjkvi-ids data set.\n\n```python3\n>>> import ideograph\n>>> ideograph.components(\"\u694a\")\n{'\u65e5', '\u6728', '\u661c', '\u4e00', '\u52ff', '\u65e6', '\u52f9', '\u4e3f', '\\uf3e4'}\n```\n\n## Data\n\nCharacter components are derived from the [cjkvi-ids database](https://github.com/cjkvi/cjkvi-ids) (included in this Git repository as a submodule), specifically the `ids-cdp.txt` data file. As some components do not currently have a Unicode code point assigned to them, they are given code points in the Private Use Area of Unicode. Note that because of this, some of these characters may be returned by the `find()` and `components()` functions.\n\nData is stored in a sqlite3 database, which can be regenerated from cjkvi-ids data by running the `generate_data.py` script.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/iwsfutcmd/ideograph", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ideograph", "package_url": "https://pypi.org/project/ideograph/", "platform": "", "project_url": "https://pypi.org/project/ideograph/", "project_urls": {"Homepage": "https://github.com/iwsfutcmd/ideograph"}, "release_url": "https://pypi.org/project/ideograph/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Tool for finding ideographic (e.g. Han) characters from their components", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ideograph</h1>\n<p>A tool to look up ideographs by their components. At the moment, it only contains Han characters, but it could be expanded to include other ideographic scripts such as Tangut or Sumero-Akkadian Cuneiform.</p>\n<h2>Installation</h2>\n<pre>$ pip install ideograph\n</pre>\n<h2>Usage</h2>\n<p><em>ideograph</em> consists of a two functions, <code>find()</code> and <code>components()</code>:</p>\n<p><code>find()</code> takes a string of ideograph components and returns a set of ideographs that include all of those components.</p>\n<p>Characters in the component string that are not ideographic components are ignored.</p>\n<p>Note that the current implementation is quite strict and relies on visual distinction for components rather than etymological connection: e.g. \"\u4eba\" \u2260 \"\u4ebb\".</p>\n<p>It can be called from the command line:</p>\n<pre>$ ideograph \u6728\u65e5\u52ff\n\u4d58\u694a\u9e09\ud84d\udf7b\ud84f\udfd8\ud854\udcb8\ud856\udc1c\ud85b\udf34\ud864\udc52\ud86b\udcf7\ud872\udf0d\n</pre>\n<p>or imported as a Python package:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">ideograph</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ideograph</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">\"\u6728\u65e5\u52ff\"</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'\ud84f\udfd8'</span><span class=\"p\">,</span> <span class=\"s1\">'\ud84d\udf7b'</span><span class=\"p\">,</span> <span class=\"s1\">'\ud856\udc1c'</span><span class=\"p\">,</span> <span class=\"s1\">'\ud868\udfa5'</span><span class=\"p\">,</span> <span class=\"s1\">'\ud864\udc52'</span><span class=\"p\">,</span> <span class=\"s1\">'\ud868\udfa7'</span><span class=\"p\">,</span> <span class=\"s1\">'\ud855\udfd8'</span><span class=\"p\">,</span> <span class=\"s1\">'\ud84d\udcd7'</span><span class=\"p\">,</span> <span class=\"s1\">'\u694a'</span><span class=\"p\">,</span> <span class=\"s1\">'\ud84d\udcfe'</span><span class=\"p\">,</span> <span class=\"s1\">'\ud872\udf0d'</span><span class=\"p\">,</span> <span class=\"s1\">'\ud86b\udcf7'</span><span class=\"p\">,</span> <span class=\"s1\">'\ud85b\udf34'</span><span class=\"p\">,</span> <span class=\"s1\">'\u9e09'</span><span class=\"p\">,</span> <span class=\"s1\">'\u4d58'</span><span class=\"p\">,</span> <span class=\"s1\">'\ud854\udcb8'</span><span class=\"p\">}</span>\n</pre>\n<p><code>components()</code> takes a string consisting of a single ideograph and returns a set of components. Note that the set contains components and the components of those components, and so on, down to the most basic of components contained in the cjkvi-ids data set.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">ideograph</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ideograph</span><span class=\"o\">.</span><span class=\"n\">components</span><span class=\"p\">(</span><span class=\"s2\">\"\u694a\"</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'\u65e5'</span><span class=\"p\">,</span> <span class=\"s1\">'\u6728'</span><span class=\"p\">,</span> <span class=\"s1\">'\u661c'</span><span class=\"p\">,</span> <span class=\"s1\">'\u4e00'</span><span class=\"p\">,</span> <span class=\"s1\">'\u52ff'</span><span class=\"p\">,</span> <span class=\"s1\">'\u65e6'</span><span class=\"p\">,</span> <span class=\"s1\">'\u52f9'</span><span class=\"p\">,</span> <span class=\"s1\">'\u4e3f'</span><span class=\"p\">,</span> <span class=\"s1\">'</span><span class=\"se\">\\uf3e4</span><span class=\"s1\">'</span><span class=\"p\">}</span>\n</pre>\n<h2>Data</h2>\n<p>Character components are derived from the <a href=\"https://github.com/cjkvi/cjkvi-ids\" rel=\"nofollow\">cjkvi-ids database</a> (included in this Git repository as a submodule), specifically the <code>ids-cdp.txt</code> data file. As some components do not currently have a Unicode code point assigned to them, they are given code points in the Private Use Area of Unicode. Note that because of this, some of these characters may be returned by the <code>find()</code> and <code>components()</code> functions.</p>\n<p>Data is stored in a sqlite3 database, which can be regenerated from cjkvi-ids data by running the <code>generate_data.py</code> script.</p>\n\n          </div>"}, "last_serial": 5008277, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "170c971b67311d00daff3f1d0f08ba2a", "sha256": "27e49911fa8dca393da7e711901525fd833b65ba13fc943f71acf67d53d823b6"}, "downloads": -1, "filename": "ideograph-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "170c971b67311d00daff3f1d0f08ba2a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2503, "upload_time": "2019-03-29T08:33:33", "upload_time_iso_8601": "2019-03-29T08:33:33.052072Z", "url": "https://files.pythonhosted.org/packages/02/ce/0c7d18dcf4fee00660d6e5402a5be9707105d3261c47c14154acb53bbe96/ideograph-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ea78b8a2742b7a9016fd8ad1eb655b4", "sha256": "b52ae4069b7daa6a705e2b623a1166d02b7d83c52de64e6ebb531ac8e29d10aa"}, "downloads": -1, "filename": "ideograph-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2ea78b8a2742b7a9016fd8ad1eb655b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2255, "upload_time": "2019-03-29T08:33:35", "upload_time_iso_8601": "2019-03-29T08:33:35.015049Z", "url": "https://files.pythonhosted.org/packages/21/08/85d3cfac790016630ff7a0abf8d11d6c3d4391054e885e3cce58218b3305/ideograph-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "9afe44c390271d87adead53854a06776", "sha256": "f5c8396be810200ad3ab8ba57c3af87721cb312b1a70c33005dafbc899d882ac"}, "downloads": -1, "filename": "ideograph-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9afe44c390271d87adead53854a06776", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2894956, "upload_time": "2019-03-29T20:36:35", "upload_time_iso_8601": "2019-03-29T20:36:35.460636Z", "url": "https://files.pythonhosted.org/packages/2e/8e/7311fb2f0b32141b7f8e5639eca8fadd2d7943a9784ff25b8f2750180c1a/ideograph-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cf88fe513ab2dcfc9087b7e6cd13afc", "sha256": "e0e128677492a9dfb8bceaa0141ece1adfb875986347d1156b34076e284478b3"}, "downloads": -1, "filename": "ideograph-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0cf88fe513ab2dcfc9087b7e6cd13afc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2895126, "upload_time": "2019-03-29T20:36:38", "upload_time_iso_8601": "2019-03-29T20:36:38.158900Z", "url": "https://files.pythonhosted.org/packages/a4/07/77a4165934d03eba14f852d76ec0a3452d81730f3c80dc295426b76ccaec/ideograph-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "9f5c67f078978e7a4d2e8dfeb2d47810", "sha256": "5ddb72777b95afecc11c43230a8d19b8aed348a4b683c0b47f2dfae59b0d1a0d"}, "downloads": -1, "filename": "ideograph-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9f5c67f078978e7a4d2e8dfeb2d47810", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5174362, "upload_time": "2019-03-31T00:30:13", "upload_time_iso_8601": "2019-03-31T00:30:13.877763Z", "url": "https://files.pythonhosted.org/packages/c7/bc/a28dc6d604be67d122836c769bd6da0e017059b34e8d7cb62a93764c5cf1/ideograph-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53224cc431b4bc17aeab6f03f8ffadca", "sha256": "f668735a6295c53512a7c93feffd1a66f3f283fbbc9d74cae99cb9c3d45f1d81"}, "downloads": -1, "filename": "ideograph-1.1.0.tar.gz", "has_sig": false, "md5_digest": "53224cc431b4bc17aeab6f03f8ffadca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5162296, "upload_time": "2019-03-31T00:30:19", "upload_time_iso_8601": "2019-03-31T00:30:19.626365Z", "url": "https://files.pythonhosted.org/packages/45/b8/1624a658191933a90b9795c01116a94d72a9664ba6c688ffd2e6d4c48a62/ideograph-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9f5c67f078978e7a4d2e8dfeb2d47810", "sha256": "5ddb72777b95afecc11c43230a8d19b8aed348a4b683c0b47f2dfae59b0d1a0d"}, "downloads": -1, "filename": "ideograph-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9f5c67f078978e7a4d2e8dfeb2d47810", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5174362, "upload_time": "2019-03-31T00:30:13", "upload_time_iso_8601": "2019-03-31T00:30:13.877763Z", "url": "https://files.pythonhosted.org/packages/c7/bc/a28dc6d604be67d122836c769bd6da0e017059b34e8d7cb62a93764c5cf1/ideograph-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53224cc431b4bc17aeab6f03f8ffadca", "sha256": "f668735a6295c53512a7c93feffd1a66f3f283fbbc9d74cae99cb9c3d45f1d81"}, "downloads": -1, "filename": "ideograph-1.1.0.tar.gz", "has_sig": false, "md5_digest": "53224cc431b4bc17aeab6f03f8ffadca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5162296, "upload_time": "2019-03-31T00:30:19", "upload_time_iso_8601": "2019-03-31T00:30:19.626365Z", "url": "https://files.pythonhosted.org/packages/45/b8/1624a658191933a90b9795c01116a94d72a9664ba6c688ffd2e6d4c48a62/ideograph-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:55 2020"}