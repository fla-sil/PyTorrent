{"info": {"author": "Zagaran, Inc.", "author_email": "info@zagaran.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development", "Topic :: Software Development :: User Interfaces"], "description": "# Django React Components\n\nDjango React Components is a collection of tools that automate the loading and rendering of React components when used in\nconjunction with `django-react-loader`. This tool is currently in beta. \n\n## Installation\n\nInstall `django-react-components` and [`django-webpack-loader`](https://github.com/owais/django-webpack-loader/) using pip:\n```bash\n$ pip install django-react-components django-webpack-loader\n```\nAdd both modules to your `INSTALLED_APPS` in `settings.py`:\n```python\nINSTALLED_APPS = (\n    ...,\n    'django_react_components',\n    'webpack_loader',\n)\n```\n## Requirements\n\n### Python\n`django-react-components` relies on the [`django-webpack-loader`](https://github.com/owais/django-webpack-loader/) python module. Install it with `pip`:\n\n```bash\n$ pip install django-webpack-loader\n```\n\n### Javascript\n\n#### Global\n\n`django-react-components` uses `nwb` to compile compile React components. Install it globally:\n\n```bash\n$ npm install -g nwb\n```\n_or_\n```bash\n$ yarn global add nwb\n```\n \n #### Local\n \n `django-react-components` uses [`webpack-bundle-tracker`](https://github.com/owais/webpack-bundle-tracker) and a sibling package, [`django-react-loader`](https://github.com/zagaran/django-react-loader), to generate and render the react components. Install them locally:\n \n ```bash\n$ npm install --save-dev django-react-loader webpack-bundle-tracker\n```\n_or_\n```bash\n$ yarn add django-react-loader webpack-bundle-tracker --dev\n```\n\n## Usage\n\n### Configuration\n\nYou will need to create a file called `nwb.config.js` to confiugure `nwb` to properly compile your components. Check out `nwb`'s (configuration guide)[https://github.com/insin/nwb/blob/master/docs/Configuration.md#configuration-file] for more details. Also look at their (webpack configuration options)[https://github.com/insin/nwb/blob/master/docs/Configuration.md#webpack-configuration]. \n\nIn your config file, add `django-react-loader` as a loader to the webpack section of it. For example:\n\n```js\n// nwb.config.js\n\nmodule.exports = {\n  webpack: {\n    ...,\n    module: {\n      rules: [\n        {\n          loader: ['django-react-loader'],\n        },\n      ],\n    },\n  }\n};\n```\n\nThe loader will run on every entry passed to the nwb config file. For example, if you wanted to load three react components:\n\n```js\nComp1.js\nComp2.js\nComp3.js\n```\n\nyour config file might look like this: \n```js\n//nwb.config.js\n\nmodule.exports = {\n  webpack: {\n    ...,\n    entry: {\n      Comp1: './src/Comp1.js',\n      Comp2: './src/Comp2.js',\n      Comp3: './src/Comp3.js'\n    },\n  }\n};\n```\n\nThe default export of each entry point will be compiled and attached to window on load using the key of the entry point in the config file, so in out example,:\n```js\nwindow.Comp1 // The component at './src/Comp1.js'\nwindow.Comp2 // The component at './src/Comp2.js'\nwindow.Comp1 // The component at './src/Comp3.js'\n```\n\nThe template tags from `django-react-components` will run an initialization function on the code attached to window to create the component using the props provided to the template.\n\n### Setting up `webpack-bundle-tracker`\n\nYou will also need to specify the locations to bundle the javascript with the `webpack-bundle-tracker`. For example:\n```js\nvar path = require('path')\nvar BundleTracker = require('webpack-bundle-tracker')\nmodule.exports = {\n  webpack: {\n    ...,\n    output: {\n      path: path.resolve('./dist/webpack_bundles/'), // Location for compiled files\n    },\n    plugins: [\n      new BundleTracker({filename: './webpack-stats.json'}), // Location for generated tracking file\n    ],\n  }\n};\n```\n### Compiling React Components\n\nCompile your react source code with `nwb`. Make sure to include the `-no-vendor` flag:\n\n```bash\nnwb build --no-vendor\n```\n\n### Rendering React Components\n\nIn your templates, you can render React components by using the `{% react_component %}` or the `{% react %}`template tag. To do so:\n\n1. Load the template tag and the `render_bundle` tag from `django_webpack_loader`:\n```python\n{% load django_react_components %}\n{% load render_bundle from webpack_loader %}\n\n```\n\n2. Use `render_bundle` to pull in the appropriate javascript\n```\n<head>\n    {% render_bundle 'runtime' %}\n    {% render_bundle 'App' %} \n</head>\n```\n\n3a. Use the `react_component` tag to render the component with keyword arguments as props\n```\n<body>\n    {% react_component 'App' id='app' prop1=prop1 prop2=prop2 %}\n</body>\n```\n\n3b. Use the `react`/`endreact` tags to render the component with rendered content inside. This will be passed as raw HTML to the component as the `children` prop.\n```\n<body>\n    {% react 'App' id='app' %}\n        <h1>Hello World</h1>\n        <p>{{ content }}</p>\n        <a href='{% url 'endpoint' %}'>Link</a>\n    {% endreact 'App' id='app' %}\n</body>\n```\n\n## Requirements\n\nPython 3.4-3.7, Django 1.11-2.2", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zagaran/django-react-components", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-react-components", "package_url": "https://pypi.org/project/django-react-components/", "platform": "", "project_url": "https://pypi.org/project/django-react-components/", "project_urls": {"Homepage": "https://github.com/zagaran/django-react-components"}, "release_url": "https://pypi.org/project/django-react-components/0.1.5a0/", "requires_dist": null, "requires_python": "", "summary": "A collection of tools that assist with loading and rendering React components", "version": "0.1.5a0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django React Components</h1>\n<p>Django React Components is a collection of tools that automate the loading and rendering of React components when used in\nconjunction with <code>django-react-loader</code>. This tool is currently in beta.</p>\n<h2>Installation</h2>\n<p>Install <code>django-react-components</code> and <a href=\"https://github.com/owais/django-webpack-loader/\" rel=\"nofollow\"><code>django-webpack-loader</code></a> using pip:</p>\n<pre>$ pip install django-react-components django-webpack-loader\n</pre>\n<p>Add both modules to your <code>INSTALLED_APPS</code> in <code>settings.py</code>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django_react_components'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'webpack_loader'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Requirements</h2>\n<h3>Python</h3>\n<p><code>django-react-components</code> relies on the <a href=\"https://github.com/owais/django-webpack-loader/\" rel=\"nofollow\"><code>django-webpack-loader</code></a> python module. Install it with <code>pip</code>:</p>\n<pre>$ pip install django-webpack-loader\n</pre>\n<h3>Javascript</h3>\n<h4>Global</h4>\n<p><code>django-react-components</code> uses <code>nwb</code> to compile compile React components. Install it globally:</p>\n<pre>$ npm install -g nwb\n</pre>\n<p><em>or</em></p>\n<pre>$ yarn global add nwb\n</pre>\n<h4>Local</h4>\n<p><code>django-react-components</code> uses <a href=\"https://github.com/owais/webpack-bundle-tracker\" rel=\"nofollow\"><code>webpack-bundle-tracker</code></a> and a sibling package, <a href=\"https://github.com/zagaran/django-react-loader\" rel=\"nofollow\"><code>django-react-loader</code></a>, to generate and render the react components. Install them locally:</p>\n<pre>$ npm install --save-dev django-react-loader webpack-bundle-tracker\n</pre>\n<p><em>or</em></p>\n<pre>$ yarn add django-react-loader webpack-bundle-tracker --dev\n</pre>\n<h2>Usage</h2>\n<h3>Configuration</h3>\n<p>You will need to create a file called <code>nwb.config.js</code> to confiugure <code>nwb</code> to properly compile your components. Check out <code>nwb</code>'s (configuration guide)[https://github.com/insin/nwb/blob/master/docs/Configuration.md#configuration-file] for more details. Also look at their (webpack configuration options)[https://github.com/insin/nwb/blob/master/docs/Configuration.md#webpack-configuration].</p>\n<p>In your config file, add <code>django-react-loader</code> as a loader to the webpack section of it. For example:</p>\n<pre><span class=\"c1\">// nwb.config.js</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"nx\">webpack</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n    <span class=\"p\">...,</span>\n    <span class=\"nx\">module</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"nx\">rules</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"nx\">loader</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s1\">'django-react-loader'</span><span class=\"p\">],</span>\n        <span class=\"p\">},</span>\n      <span class=\"p\">],</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</pre>\n<p>The loader will run on every entry passed to the nwb config file. For example, if you wanted to load three react components:</p>\n<pre><span class=\"nx\">Comp1</span><span class=\"p\">.</span><span class=\"nx\">js</span>\n<span class=\"nx\">Comp2</span><span class=\"p\">.</span><span class=\"nx\">js</span>\n<span class=\"nx\">Comp3</span><span class=\"p\">.</span><span class=\"nx\">js</span>\n</pre>\n<p>your config file might look like this:</p>\n<pre><span class=\"c1\">//nwb.config.js</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"nx\">webpack</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n    <span class=\"p\">...,</span>\n    <span class=\"nx\">entry</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"nx\">Comp1</span><span class=\"o\">:</span> <span class=\"s1\">'./src/Comp1.js'</span><span class=\"p\">,</span>\n      <span class=\"nx\">Comp2</span><span class=\"o\">:</span> <span class=\"s1\">'./src/Comp2.js'</span><span class=\"p\">,</span>\n      <span class=\"nx\">Comp3</span><span class=\"o\">:</span> <span class=\"s1\">'./src/Comp3.js'</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</pre>\n<p>The default export of each entry point will be compiled and attached to window on load using the key of the entry point in the config file, so in out example,:</p>\n<pre><span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">Comp1</span> <span class=\"c1\">// The component at './src/Comp1.js'</span>\n<span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">Comp2</span> <span class=\"c1\">// The component at './src/Comp2.js'</span>\n<span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">Comp1</span> <span class=\"c1\">// The component at './src/Comp3.js'</span>\n</pre>\n<p>The template tags from <code>django-react-components</code> will run an initialization function on the code attached to window to create the component using the props provided to the template.</p>\n<h3>Setting up <code>webpack-bundle-tracker</code></h3>\n<p>You will also need to specify the locations to bundle the javascript with the <code>webpack-bundle-tracker</code>. For example:</p>\n<pre><span class=\"kd\">var</span> <span class=\"nx\">path</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'path'</span><span class=\"p\">)</span>\n<span class=\"kd\">var</span> <span class=\"nx\">BundleTracker</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s1\">'webpack-bundle-tracker'</span><span class=\"p\">)</span>\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"nx\">webpack</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n    <span class=\"p\">...,</span>\n    <span class=\"nx\">output</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n      <span class=\"nx\">path</span><span class=\"o\">:</span> <span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">resolve</span><span class=\"p\">(</span><span class=\"s1\">'./dist/webpack_bundles/'</span><span class=\"p\">),</span> <span class=\"c1\">// Location for compiled files</span>\n    <span class=\"p\">},</span>\n    <span class=\"nx\">plugins</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n      <span class=\"k\">new</span> <span class=\"nx\">BundleTracker</span><span class=\"p\">({</span><span class=\"nx\">filename</span><span class=\"o\">:</span> <span class=\"s1\">'./webpack-stats.json'</span><span class=\"p\">}),</span> <span class=\"c1\">// Location for generated tracking file</span>\n    <span class=\"p\">],</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</pre>\n<h3>Compiling React Components</h3>\n<p>Compile your react source code with <code>nwb</code>. Make sure to include the <code>-no-vendor</code> flag:</p>\n<pre>nwb build --no-vendor\n</pre>\n<h3>Rendering React Components</h3>\n<p>In your templates, you can render React components by using the <code>{% react_component %}</code> or the <code>{% react %}</code>template tag. To do so:</p>\n<ol>\n<li>Load the template tag and the <code>render_bundle</code> tag from <code>django_webpack_loader</code>:</li>\n</ol>\n<pre><span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"n\">load</span> <span class=\"n\">django_react_components</span> <span class=\"o\">%</span><span class=\"p\">}</span>\n<span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"n\">load</span> <span class=\"n\">render_bundle</span> <span class=\"kn\">from</span> <span class=\"nn\">webpack_loader</span> <span class=\"o\">%</span><span class=\"p\">}</span>\n</pre>\n<ol>\n<li>Use <code>render_bundle</code> to pull in the appropriate javascript</li>\n</ol>\n<pre><code>&lt;head&gt;\n    {% render_bundle 'runtime' %}\n    {% render_bundle 'App' %} \n&lt;/head&gt;\n</code></pre>\n<p>3a. Use the <code>react_component</code> tag to render the component with keyword arguments as props</p>\n<pre><code>&lt;body&gt;\n    {% react_component 'App' id='app' prop1=prop1 prop2=prop2 %}\n&lt;/body&gt;\n</code></pre>\n<p>3b. Use the <code>react</code>/<code>endreact</code> tags to render the component with rendered content inside. This will be passed as raw HTML to the component as the <code>children</code> prop.</p>\n<pre><code>&lt;body&gt;\n    {% react 'App' id='app' %}\n        &lt;h1&gt;Hello World&lt;/h1&gt;\n        &lt;p&gt;{{ content }}&lt;/p&gt;\n        &lt;a href='{% url 'endpoint' %}'&gt;Link&lt;/a&gt;\n    {% endreact 'App' id='app' %}\n&lt;/body&gt;\n</code></pre>\n<h2>Requirements</h2>\n<p>Python 3.4-3.7, Django 1.11-2.2</p>\n\n          </div>"}, "last_serial": 7063425, "releases": {"0.1.0a0": [{"comment_text": "", "digests": {"md5": "7d5078c06ba9c0012990ddfd3b77fec5", "sha256": "ede3ed4449d111f7f111bab9d2f551aee3b8791b61c8db7f938bc713d0577b96"}, "downloads": -1, "filename": "django_react_components-0.1.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "7d5078c06ba9c0012990ddfd3b77fec5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4892, "upload_time": "2019-05-06T19:06:48", "upload_time_iso_8601": "2019-05-06T19:06:48.374950Z", "url": "https://files.pythonhosted.org/packages/a7/86/c22380c33fa38d71420eb6bb5a068e3757fd812474c9aaf82de4eda5a27d/django_react_components-0.1.0a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c68e4bba44630e1e95d4c88d668bcc75", "sha256": "248a35777dfcc7dbd7d022ccd49f456d25fa7c7ac890e47b0c95011eaa162b8a"}, "downloads": -1, "filename": "django-react-components-0.1.0a0.tar.gz", "has_sig": false, "md5_digest": "c68e4bba44630e1e95d4c88d668bcc75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3667, "upload_time": "2019-05-06T19:06:50", "upload_time_iso_8601": "2019-05-06T19:06:50.528629Z", "url": "https://files.pythonhosted.org/packages/d5/2d/ccb26e870aae5d19f897d402145cf8f0e93ab38b86d7a3c66da06efb7deb/django-react-components-0.1.0a0.tar.gz", "yanked": false}], "0.1.1a0": [{"comment_text": "", "digests": {"md5": "704aa258a2a6448521dd036b17c7be09", "sha256": "17d98ca7c1a25c78f252eb76188a0a171c2c2653976f704691377610a0bc2c70"}, "downloads": -1, "filename": "django-react-components-0.1.1a0.tar.gz", "has_sig": false, "md5_digest": "704aa258a2a6448521dd036b17c7be09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3642, "upload_time": "2019-05-06T19:57:47", "upload_time_iso_8601": "2019-05-06T19:57:47.913318Z", "url": "https://files.pythonhosted.org/packages/d5/48/5657a652f85acf34256a780caa4485126c681e6a9158f94ea3fb4816ad0e/django-react-components-0.1.1a0.tar.gz", "yanked": false}], "0.1.2a0": [{"comment_text": "", "digests": {"md5": "474f0f9bc7b2aed4e9fc0bc280d0a34e", "sha256": "df9da608451453919c5ba6f671879ac0f738ba9481f97743393cd7add388286f"}, "downloads": -1, "filename": "django-react-components-0.1.2a0.tar.gz", "has_sig": false, "md5_digest": "474f0f9bc7b2aed4e9fc0bc280d0a34e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3844, "upload_time": "2019-05-06T20:12:12", "upload_time_iso_8601": "2019-05-06T20:12:12.698625Z", "url": "https://files.pythonhosted.org/packages/0e/c5/c7783736dbf2dcd1c967cddc5e7f1bd5712f7ec65e9c76515827395b1d5a/django-react-components-0.1.2a0.tar.gz", "yanked": false}], "0.1.3a0": [{"comment_text": "", "digests": {"md5": "2bcf944c5db55c9cc9353e49ebf37030", "sha256": "284121280113ec64c8bdf60dc855cad02b6ae1711a1c5d28310fb5dcb8c06dbe"}, "downloads": -1, "filename": "django-react-components-0.1.3a0.tar.gz", "has_sig": false, "md5_digest": "2bcf944c5db55c9cc9353e49ebf37030", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4545, "upload_time": "2019-06-11T18:57:58", "upload_time_iso_8601": "2019-06-11T18:57:58.411858Z", "url": "https://files.pythonhosted.org/packages/88/64/79e452335af86efc223d8555ed4966fe75a19dfeb604280c8e51f6ce807f/django-react-components-0.1.3a0.tar.gz", "yanked": false}], "0.1.4a0": [{"comment_text": "", "digests": {"md5": "30417e5fdca9740225fd57bbfb5caf93", "sha256": "dfc1742ab96cab99060bf38093841d31b1a946ca48f54d576a3fa550b5cf7570"}, "downloads": -1, "filename": "django-react-components-0.1.4a0.tar.gz", "has_sig": false, "md5_digest": "30417e5fdca9740225fd57bbfb5caf93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5670, "upload_time": "2020-04-01T21:53:38", "upload_time_iso_8601": "2020-04-01T21:53:38.734690Z", "url": "https://files.pythonhosted.org/packages/ad/aa/9486b7b91e7650ee357420bed1dd4b542530c6ad09fd9111049a4d86f8cf/django-react-components-0.1.4a0.tar.gz", "yanked": false}], "0.1.5a0": [{"comment_text": "", "digests": {"md5": "8e40a53eff28ae2b5d1d1e8f6528c582", "sha256": "6eeb1e89949d39c8d6b5ed0d18be548e6c908a3754a82f7cba7d7b98cdb5109d"}, "downloads": -1, "filename": "django-react-components-0.1.5a0.tar.gz", "has_sig": false, "md5_digest": "8e40a53eff28ae2b5d1d1e8f6528c582", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5718, "upload_time": "2020-04-20T21:06:33", "upload_time_iso_8601": "2020-04-20T21:06:33.198536Z", "url": "https://files.pythonhosted.org/packages/96/69/65d9e889d4850da4c18247199b6aa19420840ed00f1acb8d4e50c94d5372/django-react-components-0.1.5a0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8e40a53eff28ae2b5d1d1e8f6528c582", "sha256": "6eeb1e89949d39c8d6b5ed0d18be548e6c908a3754a82f7cba7d7b98cdb5109d"}, "downloads": -1, "filename": "django-react-components-0.1.5a0.tar.gz", "has_sig": false, "md5_digest": "8e40a53eff28ae2b5d1d1e8f6528c582", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5718, "upload_time": "2020-04-20T21:06:33", "upload_time_iso_8601": "2020-04-20T21:06:33.198536Z", "url": "https://files.pythonhosted.org/packages/96/69/65d9e889d4850da4c18247199b6aa19420840ed00f1acb8d4e50c94d5372/django-react-components-0.1.5a0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:24 2020"}