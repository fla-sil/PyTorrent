{"info": {"author": "Michael Droettboom", "author_email": "mdroe@stsci.edu", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Astronomy", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Introduction\r\n------------\r\n\r\npywcs is a set of routines for handling the FITS World Coordinate\r\nSystem (WCS) standard.  It is a thin wrapper around the high- and\r\nmid-level interfaces of Dr. Mark Calabretta's WCSLIB available here:\r\n\r\n  http://www.atnf.csiro.au/people/mcalabre/WCS/\r\n\r\nIn addition, there are extensions (written in C) to support Spitzer\r\nSimple Imaging Polynomial (SIP) convention keywords and Paper IV table\r\nlookup distortion.\r\n\r\nPlease direct any questions to:\r\n\r\n  help@stsci.edu\r\n\r\nBuild instructions\r\n------------------\r\n\r\npywcs includes its own copy of WCSLIB.\r\n\r\npywcs requires:\r\n\r\n  - Numpy 1.3 or later\r\n  - pyfits 1.4 or later\r\n\r\npywcs uses the standard Python distutils system to build and install\r\nitself.  From the command line run::\r\n\r\n    python setup.py install\r\n\r\nto install pywcs.\r\n\r\nBuilding documentation\r\n----------------------\r\n\r\nOptionally, the documentation can be built using Sphinx\r\n(http://sphinx.pocoo.org).\r\n\r\nAfter installing pywcs, 'cd' into the 'doc' directory and::\r\n\r\n    make html\r\n\r\nThe documentation is also available online at:\r\n\r\n    http://stsdas.stsci.edu/astrolib/pywcs/index.html\r\n\r\nVersion 1.11\r\n============\r\n\r\nNEW FEATURES:\r\n\r\n- Updated to wcslib version 4.8.2, which gives much more detailed\r\n  error messages.  Exceptions raised due to invalid WCS keywords\r\n  should now be more informative.\r\n\r\n- Undefined values that are the result of p2s and s2p are now set to\r\n  NaN.  Previously, one had to examine the stat result vector to\r\n  determine which results were invalid.\r\n\r\n- Added functions get_pc() and get_cdelt().  These provide a way to\r\n  always get the canonical representation of the linear transformation\r\n  matrix, whether the header specified it in PC, CD or CROTA form.\r\n\r\nBROADER COMPATIBILITY:\r\n\r\n- Supports Python 3.x\r\n\r\n- Long-running process will now release the Python GIL to better\r\n  support Python multithreading.\r\n\r\n- Builds on Microsoft Windows using mingw32, mingw64 and Visual Studio\r\n  9.0 and 10.0 without severely patching wcslib.\r\n\r\n- pywcs will now run without pyfits, though the SIP and distortion\r\n  lookup table functionality is unavailable.\r\n\r\nBUG FIXES:\r\n\r\n- The dimensions of the cd and pc matrices were formerly always returned\r\n  as 2x2.  They now are sized according to naxis.\r\n\r\nMISCELLANEOUS:\r\n\r\n- Lots of new unit tests\r\n\r\n- Setting wcs.wcs.cunit will now verify that the values are valid unit\r\n  strings.\r\n\r\nVersion 1.10\r\n============\r\n\r\n- Adds a UnitConversion class, which gives access to wcslib's unit\r\n  conversion functionality.  Given two convertible unit strings, pywcs\r\n  can convert arrays of values from one to the other.\r\n\r\n- Now uses wcslib 4.7\r\n\r\n- Changes to some wcs values would not always calculate secondary values.\r\n\r\nVersion 1.9\r\n===========\r\n\r\n- Support binary image arrays and pixel list format WCS by presenting\r\n  a way to call wcslib's wcsbth()\r\n\r\n- Updated underlying wcslib to version 4.5, which fixes the following:\r\n\r\n    - Fixed the interpretation of VELREF when translating\r\n      AIPS-convention spectral types.  Such translation is now handled\r\n      by a new special- purpose function, spcaips().  The wcsprm\r\n      struct has been augmented with an entry for velref which is\r\n      filled by wcspih() and wcsbth().  Previously, selection by\r\n      VELREF of the radio or optical velocity convention for type VELO\r\n      was not properly handled.\r\n\r\nBUGS:\r\n\r\n- The \"pc\" member is now available with a default \"raw\" Wcsprm object.\r\n\r\n- Make properties that return arrays read-only, since modifying a\r\n  (mutable) array could result in secondary values not being\r\n  recomputed based on those changes.\r\n\r\n- float properties can now be set using int values\r\n\r\nVersion 1.3a1\r\n=============\r\n\r\nEarlier versions of pywcs had two versions of every conversion method:\r\n\r\n  X(...)      -- treats the origin of pixel coordinates at (0, 0)\r\n  X_fits(...) -- treats the origin of pixel coordinates at (1, 1)\r\n\r\nFrom version 1.3 onwards, there is only one method for each\r\nconversion, with an 'origin' argument:\r\n\r\n  - 0: places the origin at (0, 0), which is the C/Numpy convention.\r\n\r\n  - 1: places the origin at (1, 1), which is the Fortran/FITS\r\n    convention.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.stsci.edu/resources/software_hardware/pyraf/stsci_python", "keywords": "", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "pywcs", "package_url": "https://pypi.org/project/pywcs/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pywcs/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.stsci.edu/resources/software_hardware/pyraf/stsci_python"}, "release_url": "https://pypi.org/project/pywcs/1.12/", "requires_dist": null, "requires_python": null, "summary": "Python wrappers to WCSLIB", "version": "1.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>pywcs is a set of routines for handling the FITS World Coordinate\nSystem (WCS) standard.  It is a thin wrapper around the high- and\nmid-level interfaces of Dr. Mark Calabretta\u2019s WCSLIB available here:</p>\n<blockquote>\n<a href=\"http://www.atnf.csiro.au/people/mcalabre/WCS/\" rel=\"nofollow\">http://www.atnf.csiro.au/people/mcalabre/WCS/</a></blockquote>\n<p>In addition, there are extensions (written in C) to support Spitzer\nSimple Imaging Polynomial (SIP) convention keywords and Paper IV table\nlookup distortion.</p>\n<p>Please direct any questions to:</p>\n<blockquote>\n<a href=\"mailto:help%40stsci.edu\">help<span>@</span>stsci<span>.</span>edu</a></blockquote>\n</div>\n<div id=\"build-instructions\">\n<h2>Build instructions</h2>\n<p>pywcs includes its own copy of WCSLIB.</p>\n<p>pywcs requires:</p>\n<blockquote>\n<ul>\n<li>Numpy 1.3 or later</li>\n<li>pyfits 1.4 or later</li>\n</ul>\n</blockquote>\n<p>pywcs uses the standard Python distutils system to build and install\nitself.  From the command line run:</p>\n<pre>python setup.py install\n</pre>\n<p>to install pywcs.</p>\n</div>\n<div id=\"building-documentation\">\n<h2>Building documentation</h2>\n<p>Optionally, the documentation can be built using Sphinx\n(<a href=\"http://sphinx.pocoo.org\" rel=\"nofollow\">http://sphinx.pocoo.org</a>).</p>\n<p>After installing pywcs, \u2018cd\u2019 into the \u2018doc\u2019 directory and:</p>\n<pre>make html\n</pre>\n<p>The documentation is also available online at:</p>\n<blockquote>\n<a href=\"http://stsdas.stsci.edu/astrolib/pywcs/index.html\" rel=\"nofollow\">http://stsdas.stsci.edu/astrolib/pywcs/index.html</a></blockquote>\n<div id=\"version-1-11\">\n<h3>Version 1.11</h3>\n<p>NEW FEATURES:</p>\n<ul>\n<li>Updated to wcslib version 4.8.2, which gives much more detailed\nerror messages.  Exceptions raised due to invalid WCS keywords\nshould now be more informative.</li>\n<li>Undefined values that are the result of p2s and s2p are now set to\nNaN.  Previously, one had to examine the stat result vector to\ndetermine which results were invalid.</li>\n<li>Added functions get_pc() and get_cdelt().  These provide a way to\nalways get the canonical representation of the linear transformation\nmatrix, whether the header specified it in PC, CD or CROTA form.</li>\n</ul>\n<p>BROADER COMPATIBILITY:</p>\n<ul>\n<li>Supports Python 3.x</li>\n<li>Long-running process will now release the Python GIL to better\nsupport Python multithreading.</li>\n<li>Builds on Microsoft Windows using mingw32, mingw64 and Visual Studio\n9.0 and 10.0 without severely patching wcslib.</li>\n<li>pywcs will now run without pyfits, though the SIP and distortion\nlookup table functionality is unavailable.</li>\n</ul>\n<p>BUG FIXES:</p>\n<ul>\n<li>The dimensions of the cd and pc matrices were formerly always returned\nas 2x2.  They now are sized according to naxis.</li>\n</ul>\n<p>MISCELLANEOUS:</p>\n<ul>\n<li>Lots of new unit tests</li>\n<li>Setting wcs.wcs.cunit will now verify that the values are valid unit\nstrings.</li>\n</ul>\n</div>\n<div id=\"version-1-10\">\n<h3>Version 1.10</h3>\n<ul>\n<li>Adds a UnitConversion class, which gives access to wcslib\u2019s unit\nconversion functionality.  Given two convertible unit strings, pywcs\ncan convert arrays of values from one to the other.</li>\n<li>Now uses wcslib 4.7</li>\n<li>Changes to some wcs values would not always calculate secondary values.</li>\n</ul>\n</div>\n<div id=\"version-1-9\">\n<h3>Version 1.9</h3>\n<ul>\n<li><p>Support binary image arrays and pixel list format WCS by presenting\na way to call wcslib\u2019s wcsbth()</p>\n</li>\n<li><p>Updated underlying wcslib to version 4.5, which fixes the following:</p>\n<blockquote>\n<ul>\n<li>Fixed the interpretation of VELREF when translating\nAIPS-convention spectral types.  Such translation is now handled\nby a new special- purpose function, spcaips().  The wcsprm\nstruct has been augmented with an entry for velref which is\nfilled by wcspih() and wcsbth().  Previously, selection by\nVELREF of the radio or optical velocity convention for type VELO\nwas not properly handled.</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<p>BUGS:</p>\n<ul>\n<li>The \u201cpc\u201d member is now available with a default \u201craw\u201d Wcsprm object.</li>\n<li>Make properties that return arrays read-only, since modifying a\n(mutable) array could result in secondary values not being\nrecomputed based on those changes.</li>\n<li>float properties can now be set using int values</li>\n</ul>\n</div>\n<div id=\"version-1-3a1\">\n<h3>Version 1.3a1</h3>\n<p>Earlier versions of pywcs had two versions of every conversion method:</p>\n<blockquote>\nX(\u2026)      \u2013 treats the origin of pixel coordinates at (0, 0)\nX_fits(\u2026) \u2013 treats the origin of pixel coordinates at (1, 1)</blockquote>\n<p>From version 1.3 onwards, there is only one method for each\nconversion, with an \u2018origin\u2019 argument:</p>\n<blockquote>\n<ul>\n<li>0: places the origin at (0, 0), which is the C/Numpy convention.</li>\n<li>1: places the origin at (1, 1), which is the Fortran/FITS\nconvention.</li>\n</ul>\n</blockquote>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1030352, "releases": {"1.10-4.7": [{"comment_text": "", "digests": {"md5": "a330c90b9c23427460a0eab163bb12fb", "sha256": "1475307ef163574fee3316de78b128d4732ebd486fb7bfccdb31a14ca6567cec"}, "downloads": -1, "filename": "pywcs-1.10-4.7.tar.gz", "has_sig": false, "md5_digest": "a330c90b9c23427460a0eab163bb12fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2016233, "upload_time": "2011-03-18T00:01:47", "upload_time_iso_8601": "2011-03-18T00:01:47.293169Z", "url": "https://files.pythonhosted.org/packages/f5/40/fce479ea1e3daf75632f7cd389c6ec1887c3c39ab8b123e9bfb828568eb8/pywcs-1.10-4.7.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "0721ceb7d8270868dd5d688ba60e4089", "sha256": "61b2d9abf90f4dce2071dfeed1628b487aa32e27b0c01e9983410557db96ac34"}, "downloads": -1, "filename": "pywcs-1.11-4.8.2.tar.gz", "has_sig": false, "md5_digest": "0721ceb7d8270868dd5d688ba60e4089", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2187116, "upload_time": "2012-04-11T14:09:49", "upload_time_iso_8601": "2012-04-11T14:09:49.632882Z", "url": "https://files.pythonhosted.org/packages/15/79/80c10ffca78643e5571b62d89a4d456bffdcacb554d344e615199324d91e/pywcs-1.11-4.8.2.tar.gz", "yanked": false}], "1.10.2": [{"comment_text": "", "digests": {"md5": "cc96f28e5f7a8c07e7871dd1f12124ea", "sha256": "669dab4633328202ec71feb2fdd5f18491c4896e24e28cdcf049bbd450fc5e95"}, "downloads": -1, "filename": "pywcs-1.10.2-py2.7-win32.egg", "has_sig": false, "md5_digest": "cc96f28e5f7a8c07e7871dd1f12124ea", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 465942, "upload_time": "2013-05-01T21:12:52", "upload_time_iso_8601": "2013-05-01T21:12:52.342743Z", "url": "https://files.pythonhosted.org/packages/1a/0e/7a662b43b5a72bf19e8de501475ed46e872d4104e324b3c5f747d72eacce/pywcs-1.10.2-py2.7-win32.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c41de5a8e966664c4f6e2391fce0d66a", "sha256": "55caac7616a433454e05fc85015aeae74760f4b2af265773f81679d9109c573f"}, "downloads": -1, "filename": "pywcs-1.10.2.tar.gz", "has_sig": false, "md5_digest": "c41de5a8e966664c4f6e2391fce0d66a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1993989, "upload_time": "2013-05-01T19:22:11", "upload_time_iso_8601": "2013-05-01T19:22:11.127479Z", "url": "https://files.pythonhosted.org/packages/99/a6/060978807aae28254da04ef8918e466586143ea6f486d16b19959bbca462/pywcs-1.10.2.tar.gz", "yanked": false}], "1.12": [{"comment_text": "", "digests": {"md5": "a83e8d097094b86b593bc9f465af4424", "sha256": "037161bae2f4da4266c45b6ea9e6858a2073c5a08dce2ef19a8c5aafe3da75b5"}, "downloads": -1, "filename": "pywcs-1.12-py2.7-win32.egg", "has_sig": false, "md5_digest": "a83e8d097094b86b593bc9f465af4424", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 467066, "upload_time": "2014-03-14T23:56:30", "upload_time_iso_8601": "2014-03-14T23:56:30.562396Z", "url": "https://files.pythonhosted.org/packages/d4/93/943c3b1a87c07e2aaa5e66e0b4c93bfb6a225f2481cbc954f07a71521af1/pywcs-1.12-py2.7-win32.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ed527a601ca1eba62c6be64b3dab620", "sha256": "fcd4a2ac9db4d1be6fe108f8d3bf2f0f1d6087e2dfa593ec112a6e207acbc1f4"}, "downloads": -1, "filename": "pywcs-1.12.tar.gz", "has_sig": false, "md5_digest": "5ed527a601ca1eba62c6be64b3dab620", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1997099, "upload_time": "2014-03-14T23:54:08", "upload_time_iso_8601": "2014-03-14T23:54:08.791471Z", "url": "https://files.pythonhosted.org/packages/63/a6/7b510ed55c68384731caa2411faf8dfed47b05cb46d9b1b4ba99e3b06587/pywcs-1.12.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "026a19b5440fcf903a036f8ca2a29823", "sha256": "2e03507db144d5de97ea16a2ffa542314bf54034de9b81e9e056eb7ef852d85a"}, "downloads": -1, "filename": "pywcs-1.12.zip", "has_sig": false, "md5_digest": "026a19b5440fcf903a036f8ca2a29823", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2439264, "upload_time": "2014-03-14T23:55:09", "upload_time_iso_8601": "2014-03-14T23:55:09.245569Z", "url": "https://files.pythonhosted.org/packages/b5/5c/d80095a2a912892fb69cab93ad55148b21a12e9fec9f05b8d84b35aa5914/pywcs-1.12.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a83e8d097094b86b593bc9f465af4424", "sha256": "037161bae2f4da4266c45b6ea9e6858a2073c5a08dce2ef19a8c5aafe3da75b5"}, "downloads": -1, "filename": "pywcs-1.12-py2.7-win32.egg", "has_sig": false, "md5_digest": "a83e8d097094b86b593bc9f465af4424", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 467066, "upload_time": "2014-03-14T23:56:30", "upload_time_iso_8601": "2014-03-14T23:56:30.562396Z", "url": "https://files.pythonhosted.org/packages/d4/93/943c3b1a87c07e2aaa5e66e0b4c93bfb6a225f2481cbc954f07a71521af1/pywcs-1.12-py2.7-win32.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ed527a601ca1eba62c6be64b3dab620", "sha256": "fcd4a2ac9db4d1be6fe108f8d3bf2f0f1d6087e2dfa593ec112a6e207acbc1f4"}, "downloads": -1, "filename": "pywcs-1.12.tar.gz", "has_sig": false, "md5_digest": "5ed527a601ca1eba62c6be64b3dab620", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1997099, "upload_time": "2014-03-14T23:54:08", "upload_time_iso_8601": "2014-03-14T23:54:08.791471Z", "url": "https://files.pythonhosted.org/packages/63/a6/7b510ed55c68384731caa2411faf8dfed47b05cb46d9b1b4ba99e3b06587/pywcs-1.12.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "026a19b5440fcf903a036f8ca2a29823", "sha256": "2e03507db144d5de97ea16a2ffa542314bf54034de9b81e9e056eb7ef852d85a"}, "downloads": -1, "filename": "pywcs-1.12.zip", "has_sig": false, "md5_digest": "026a19b5440fcf903a036f8ca2a29823", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2439264, "upload_time": "2014-03-14T23:55:09", "upload_time_iso_8601": "2014-03-14T23:55:09.245569Z", "url": "https://files.pythonhosted.org/packages/b5/5c/d80095a2a912892fb69cab93ad55148b21a12e9fec9f05b8d84b35aa5914/pywcs-1.12.zip", "yanked": false}], "timestamp": "Fri May  8 03:11:37 2020"}