{"info": {"author": "Hiroyuki Ohsaki", "author_email": "ohsaki@lsnl.jp", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# ansiterm Package\n\nansiterm - change color and style (bold, reverse) of text on display\n\n# DESCRIPTION\n\nThis manual page documents **ansiterm** module, a Python module providing\nfunctions for generating ANSI escape sequences to change the color and the\nstyle (i.e., bold and reverse) of text displayed on the screen.\n\nA majority of terminal emulators support ANSI escape sequences.  **ansiterm**\nmodule provides handy functions for changing the color and the style.\n\nPlease refer to https://en.wikipedia.org/wiki/ANSI_escape_code for the\nintroduction of ANSI escape sequences.\n\n# EXAMPLE\n\n```python\nfrom ansiterm import color\n\nfor bold in (False, True):\n    for reverse in (False, True):\n        for name in [\n                'reset', 'bold', 'underline', 'reverse', 'gray', 'red',\n                'green', 'yellow', 'blue', 'magenta', 'cyan', 'white'\n        ]:\n            astr = color('text in {} with bold={}, reverse={}'.format(\n                name, bold, reverse),\n                         name,\n                         bold=bold,\n                         reverse=reverse)\n            print(astr)\n```\n\n# FUNCTIONS\n\n**ansiterm** module provides the following functions.\n\n- color(astr, name='bold', bold=False, reverse=False)\n\n  Embed ANSI escape sequences around string ASTR to change the text style to\n  NAME.  Make the text boldface and reversed video if BOLD or REVERSE is True,\n  respectively.\n\nThe following functions are provided as short-cuts.  For instance, blue(astr)\nand reest(astr) are equivalent to color(astr, 'blue') and color(astr, 'reset),\nrespectively.\n\n- reset(astr, bold=False, reverse=False)\n\n- bold(astr, bold=True, reverse=False)\n\n- gray(astr, bold=False, reverse=False)\n\n- red(astr, bold=False, reverse=False)\n\n- green(astr, bold=False, reverse=False)\n\n- yellow(astr, bold=False, reverse=False)\n\n- blue(astr, bold=False, reverse=False)\n\n- magenta(astr, bold=False, reverse=False)\n\n- cyan(astr, bold=False, reverse=False)\n\n- white(astr, bold=False, reverse=False)\n\n# INSTALLATION\n\n```python\npip3 install ansiterm\n```\n\n# AVAILABILITY\n\nThe latest version of **ansiterm** module is available at PyPI\n(https://pypi.org/project/ansiterm/) .\n\n# SEE ALSO\n\nperl(1), perlfunc(1), getopt(3), Getopt::Std(3perl)\n\n# AUTHOR\n\nHiroyuki Ohsaki <ohsaki[atmark]lsnl.jp>\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/h-ohsaki/ansiterm", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ansiterm", "package_url": "https://pypi.org/project/ansiterm/", "platform": "", "project_url": "https://pypi.org/project/ansiterm/", "project_urls": {"Homepage": "https://github.com/h-ohsaki/ansiterm"}, "release_url": "https://pypi.org/project/ansiterm/1.1/", "requires_dist": null, "requires_python": "", "summary": "change color and style (bold, reverse) of text on display", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ansiterm Package</h1>\n<p>ansiterm - change color and style (bold, reverse) of text on display</p>\n<h1>DESCRIPTION</h1>\n<p>This manual page documents <strong>ansiterm</strong> module, a Python module providing\nfunctions for generating ANSI escape sequences to change the color and the\nstyle (i.e., bold and reverse) of text displayed on the screen.</p>\n<p>A majority of terminal emulators support ANSI escape sequences.  <strong>ansiterm</strong>\nmodule provides handy functions for changing the color and the style.</p>\n<p>Please refer to <a href=\"https://en.wikipedia.org/wiki/ANSI_escape_code\" rel=\"nofollow\">https://en.wikipedia.org/wiki/ANSI_escape_code</a> for the\nintroduction of ANSI escape sequences.</p>\n<h1>EXAMPLE</h1>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ansiterm</span> <span class=\"kn\">import</span> <span class=\"n\">color</span>\n\n<span class=\"k\">for</span> <span class=\"n\">bold</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">reverse</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"p\">[</span>\n                <span class=\"s1\">'reset'</span><span class=\"p\">,</span> <span class=\"s1\">'bold'</span><span class=\"p\">,</span> <span class=\"s1\">'underline'</span><span class=\"p\">,</span> <span class=\"s1\">'reverse'</span><span class=\"p\">,</span> <span class=\"s1\">'gray'</span><span class=\"p\">,</span> <span class=\"s1\">'red'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'green'</span><span class=\"p\">,</span> <span class=\"s1\">'yellow'</span><span class=\"p\">,</span> <span class=\"s1\">'blue'</span><span class=\"p\">,</span> <span class=\"s1\">'magenta'</span><span class=\"p\">,</span> <span class=\"s1\">'cyan'</span><span class=\"p\">,</span> <span class=\"s1\">'white'</span>\n        <span class=\"p\">]:</span>\n            <span class=\"n\">astr</span> <span class=\"o\">=</span> <span class=\"n\">color</span><span class=\"p\">(</span><span class=\"s1\">'text in </span><span class=\"si\">{}</span><span class=\"s1\"> with bold=</span><span class=\"si\">{}</span><span class=\"s1\">, reverse=</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n                <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">bold</span><span class=\"p\">,</span> <span class=\"n\">reverse</span><span class=\"p\">),</span>\n                         <span class=\"n\">name</span><span class=\"p\">,</span>\n                         <span class=\"n\">bold</span><span class=\"o\">=</span><span class=\"n\">bold</span><span class=\"p\">,</span>\n                         <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"n\">reverse</span><span class=\"p\">)</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">astr</span><span class=\"p\">)</span>\n</pre>\n<h1>FUNCTIONS</h1>\n<p><strong>ansiterm</strong> module provides the following functions.</p>\n<ul>\n<li>\n<p>color(astr, name='bold', bold=False, reverse=False)</p>\n<p>Embed ANSI escape sequences around string ASTR to change the text style to\nNAME.  Make the text boldface and reversed video if BOLD or REVERSE is True,\nrespectively.</p>\n</li>\n</ul>\n<p>The following functions are provided as short-cuts.  For instance, blue(astr)\nand reest(astr) are equivalent to color(astr, 'blue') and color(astr, 'reset),\nrespectively.</p>\n<ul>\n<li>\n<p>reset(astr, bold=False, reverse=False)</p>\n</li>\n<li>\n<p>bold(astr, bold=True, reverse=False)</p>\n</li>\n<li>\n<p>gray(astr, bold=False, reverse=False)</p>\n</li>\n<li>\n<p>red(astr, bold=False, reverse=False)</p>\n</li>\n<li>\n<p>green(astr, bold=False, reverse=False)</p>\n</li>\n<li>\n<p>yellow(astr, bold=False, reverse=False)</p>\n</li>\n<li>\n<p>blue(astr, bold=False, reverse=False)</p>\n</li>\n<li>\n<p>magenta(astr, bold=False, reverse=False)</p>\n</li>\n<li>\n<p>cyan(astr, bold=False, reverse=False)</p>\n</li>\n<li>\n<p>white(astr, bold=False, reverse=False)</p>\n</li>\n</ul>\n<h1>INSTALLATION</h1>\n<pre><span class=\"n\">pip3</span> <span class=\"n\">install</span> <span class=\"n\">ansiterm</span>\n</pre>\n<h1>AVAILABILITY</h1>\n<p>The latest version of <strong>ansiterm</strong> module is available at PyPI\n(<a href=\"https://pypi.org/project/ansiterm/\" rel=\"nofollow\">https://pypi.org/project/ansiterm/</a>) .</p>\n<h1>SEE ALSO</h1>\n<p>perl(1), perlfunc(1), getopt(3), Getopt::Std(3perl)</p>\n<h1>AUTHOR</h1>\n<p>Hiroyuki Ohsaki &lt;ohsaki[atmark]lsnl.jp&gt;</p>\n\n          </div>"}, "last_serial": 5490942, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "bbcc3d6ecfea34289b131877e07896c7", "sha256": "de96313701f4be6f10fea4d1caee66a07674929cee9d26d14d37700b5f8d65aa"}, "downloads": -1, "filename": "ansiterm-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bbcc3d6ecfea34289b131877e07896c7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15609, "upload_time": "2019-07-05T09:53:57", "upload_time_iso_8601": "2019-07-05T09:53:57.791462Z", "url": "https://files.pythonhosted.org/packages/7a/ab/cd31f939c625d2ddc772a451741eee5d1c7b34a0a05c0266976cf729c8de/ansiterm-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1aba46944d4fe04acef5ded5cc3f2a61", "sha256": "e49217fb5da8149f313f84353967d73cb21933fbde639f3fed656ada1dea1231"}, "downloads": -1, "filename": "ansiterm-1.0.tar.gz", "has_sig": false, "md5_digest": "1aba46944d4fe04acef5ded5cc3f2a61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2985, "upload_time": "2019-07-05T09:53:59", "upload_time_iso_8601": "2019-07-05T09:53:59.699327Z", "url": "https://files.pythonhosted.org/packages/cf/af/c0f410d06536c047f1e4e2438d4ad13993582ef6595c68bd35064fd803f7/ansiterm-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "38dc82ad134913aeb30b4d32e6d0a0da", "sha256": "6258baabc93dbb5efbbd281e7ffc294c58cad27d47a93e5a306b6c8f83842cd8"}, "downloads": -1, "filename": "ansiterm-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "38dc82ad134913aeb30b4d32e6d0a0da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15663, "upload_time": "2019-07-05T11:32:25", "upload_time_iso_8601": "2019-07-05T11:32:25.965567Z", "url": "https://files.pythonhosted.org/packages/6a/31/fa2673d1ff21a313b4f6d99a19b83dec2d51e2f88395e03d17aa21fd81d8/ansiterm-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e64470bc88f4bfd94384e2b5e305c73", "sha256": "b063cdcc3711706452f489ef5817f97a32407a9006f60006267096dced00e48f"}, "downloads": -1, "filename": "ansiterm-1.1.tar.gz", "has_sig": false, "md5_digest": "3e64470bc88f4bfd94384e2b5e305c73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3019, "upload_time": "2019-07-05T11:32:28", "upload_time_iso_8601": "2019-07-05T11:32:28.227748Z", "url": "https://files.pythonhosted.org/packages/c6/97/82085a3c4676c6da8097c96002f41f6b9c0761d1dcdb980b19111c56636a/ansiterm-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38dc82ad134913aeb30b4d32e6d0a0da", "sha256": "6258baabc93dbb5efbbd281e7ffc294c58cad27d47a93e5a306b6c8f83842cd8"}, "downloads": -1, "filename": "ansiterm-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "38dc82ad134913aeb30b4d32e6d0a0da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15663, "upload_time": "2019-07-05T11:32:25", "upload_time_iso_8601": "2019-07-05T11:32:25.965567Z", "url": "https://files.pythonhosted.org/packages/6a/31/fa2673d1ff21a313b4f6d99a19b83dec2d51e2f88395e03d17aa21fd81d8/ansiterm-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e64470bc88f4bfd94384e2b5e305c73", "sha256": "b063cdcc3711706452f489ef5817f97a32407a9006f60006267096dced00e48f"}, "downloads": -1, "filename": "ansiterm-1.1.tar.gz", "has_sig": false, "md5_digest": "3e64470bc88f4bfd94384e2b5e305c73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3019, "upload_time": "2019-07-05T11:32:28", "upload_time_iso_8601": "2019-07-05T11:32:28.227748Z", "url": "https://files.pythonhosted.org/packages/c6/97/82085a3c4676c6da8097c96002f41f6b9c0761d1dcdb980b19111c56636a/ansiterm-1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:02 2020"}