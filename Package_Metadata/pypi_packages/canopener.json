{"info": {"author": "David Selassie", "author_email": "selassid@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "=========\ncanopener\n=========\n\n.. image:: https://travis-ci.org/selassid/canopener.svg?branch=master\n    :target: https://travis-ci.org/selassid/canopener\n\nPython convenience function ``canopener(filename, mode='r')`` for opening files.\n\nLocal files behave identically to ``open()``::\n\n    >>> canopener('local_file.txt')\n\nURLs can also be passed as the filename and opened for reading. ``urllib2.urlopen()`` is used under the covers, so it has equivalent support::\n\n    >>> canopener('http://remote/file.txt')\n\nS3 URLs can also be read if the boto_ module is installed and the ``AWS_ACCESS_KEY_ID`` and ``AWS_SECRET_ACCESS_KEY`` environment variables are set. The file is downloaded to a temporary local file on open::\n\n    >>> os.environ['AWS_ACCESS_KEY_ID'] = 'key'\n    >>> os.environ['AWS_SECRET_ACCESS_KEY'] = 'secret'\n    >>> canopener('s3://bucket/file.txt')\n\n.. _boto: https://github.com/boto/boto\n\nAny paths with \".gz\" or \".bz2\" extensions are transparently decompressed::\n\n    >>> canopener('local_file.txt.gz')\n    >>> canopener('local_file.txt.bz2')\n    >>> canopener('http://remote/file.txt.gz')\n    >>> canopener('s3://bucket/file.txt.gz')\n\nThere's also transparent compression when writing to local files::\n\n    >>> canopener('local_file.txt.gz', 'w')", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/selassid/canopener", "keywords": "open file s3 url bzip bz2 gzip gz", "license": "Copyright (c) 2012-2014, David Selassie\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.", "maintainer": null, "maintainer_email": null, "name": "canopener", "package_url": "https://pypi.org/project/canopener/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/canopener/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/selassid/canopener"}, "release_url": "https://pypi.org/project/canopener/0.1.6/", "requires_dist": null, "requires_python": null, "summary": "Python convenience function for opening compressed URLs and files.", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/selassid/canopener\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/selassid/canopener.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/013d1630002d069a30cacb118713a5ca8bc06c0b/68747470733a2f2f7472617669732d63692e6f72672f73656c61737369642f63616e6f70656e65722e7376673f6272616e63683d6d6173746572\"></a>\n<p>Python convenience function <tt>canopener(filename, <span class=\"pre\">mode='r')</span></tt> for opening files.</p>\n<p>Local files behave identically to <tt>open()</tt>:</p>\n<pre>&gt;&gt;&gt; canopener('local_file.txt')\n</pre>\n<p>URLs can also be passed as the filename and opened for reading. <tt>urllib2.urlopen()</tt> is used under the covers, so it has equivalent support:</p>\n<pre>&gt;&gt;&gt; canopener('http://remote/file.txt')\n</pre>\n<p>S3 URLs can also be read if the <a href=\"https://github.com/boto/boto\" rel=\"nofollow\">boto</a> module is installed and the <tt>AWS_ACCESS_KEY_ID</tt> and <tt>AWS_SECRET_ACCESS_KEY</tt> environment variables are set. The file is downloaded to a temporary local file on open:</p>\n<pre>&gt;&gt;&gt; os.environ['AWS_ACCESS_KEY_ID'] = 'key'\n&gt;&gt;&gt; os.environ['AWS_SECRET_ACCESS_KEY'] = 'secret'\n&gt;&gt;&gt; canopener('s3://bucket/file.txt')\n</pre>\n<p>Any paths with \u201c.gz\u201d or \u201c.bz2\u201d extensions are transparently decompressed:</p>\n<pre>&gt;&gt;&gt; canopener('local_file.txt.gz')\n&gt;&gt;&gt; canopener('local_file.txt.bz2')\n&gt;&gt;&gt; canopener('http://remote/file.txt.gz')\n&gt;&gt;&gt; canopener('s3://bucket/file.txt.gz')\n</pre>\n<p>There\u2019s also transparent compression when writing to local files:</p>\n<pre>&gt;&gt;&gt; canopener('local_file.txt.gz', 'w')\n</pre>\n\n          </div>"}, "last_serial": 1503890, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ad6fa311de13dfd84634ce8b2d82aaf8", "sha256": "ff0c9e53cceb53208edbdbcd7cd1e3e8dbf1ea04419ce5f5fa916d53dac91294"}, "downloads": -1, "filename": "canopener-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ad6fa311de13dfd84634ce8b2d82aaf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2728, "upload_time": "2012-12-29T02:13:19", "upload_time_iso_8601": "2012-12-29T02:13:19.431149Z", "url": "https://files.pythonhosted.org/packages/85/de/8dd2853141f9bb48d5ddba60f48e4b7f79ba1e0ed3218fc4a8eee4929cc8/canopener-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "28505039d0ea4b94320d117d49ab73e1", "sha256": "918747dbc827fea42ee4564e2c9daa2a50f2f21152f6950b7c0bbb3ae54b720f"}, "downloads": -1, "filename": "canopener-0.1.1.tar.gz", "has_sig": false, "md5_digest": "28505039d0ea4b94320d117d49ab73e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2566, "upload_time": "2014-01-17T01:36:08", "upload_time_iso_8601": "2014-01-17T01:36:08.207579Z", "url": "https://files.pythonhosted.org/packages/bc/6f/bf99d1a671fcec4d8edac839699c685f5c8dcd399843753777cd4e749441/canopener-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7982e9b2bd798bb12a804d77f1919318", "sha256": "87865b666857343e26dafc5cd357eeda602fca75b34696f38c35bbd69843980e"}, "downloads": -1, "filename": "canopener-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7982e9b2bd798bb12a804d77f1919318", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2417, "upload_time": "2014-01-17T02:14:45", "upload_time_iso_8601": "2014-01-17T02:14:45.765809Z", "url": "https://files.pythonhosted.org/packages/dc/1d/85b010be192fb2e1ac753f907967cd1040150ac499bd14c2cc8488b29bba/canopener-0.1.2.tar.gz", "yanked": false}], "0.1.3": [], "0.1.4": [], "0.1.5": [{"comment_text": "", "digests": {"md5": "8f5bb69374e7e8382a3e67e6e6bfc913", "sha256": "9d2d9bd5412819d87bb4e29aed92ccdb13d3aca5293679b4ed11c37421536179"}, "downloads": -1, "filename": "canopener-0.1.5.tar.gz", "has_sig": false, "md5_digest": "8f5bb69374e7e8382a3e67e6e6bfc913", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3739, "upload_time": "2014-12-23T05:56:55", "upload_time_iso_8601": "2014-12-23T05:56:55.171892Z", "url": "https://files.pythonhosted.org/packages/ac/6e/f674f2c7686b2eaa0bf184b20bef53164eae9b07ccc0bd05d9f9b0fdb383/canopener-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "5dc5e9e1ebeb6a72ab5c7b31049eae60", "sha256": "5da5d6371c9b943df7619fcf123a86440e8e99fff0f7b97819e73ced84981950"}, "downloads": -1, "filename": "canopener-0.1.6.tar.gz", "has_sig": false, "md5_digest": "5dc5e9e1ebeb6a72ab5c7b31049eae60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3912, "upload_time": "2015-04-13T21:49:48", "upload_time_iso_8601": "2015-04-13T21:49:48.900455Z", "url": "https://files.pythonhosted.org/packages/1f/fb/cc8a019151b6b988e56e15d40a97e4ee1d8ac5cade660251da159f7efb96/canopener-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5dc5e9e1ebeb6a72ab5c7b31049eae60", "sha256": "5da5d6371c9b943df7619fcf123a86440e8e99fff0f7b97819e73ced84981950"}, "downloads": -1, "filename": "canopener-0.1.6.tar.gz", "has_sig": false, "md5_digest": "5dc5e9e1ebeb6a72ab5c7b31049eae60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3912, "upload_time": "2015-04-13T21:49:48", "upload_time_iso_8601": "2015-04-13T21:49:48.900455Z", "url": "https://files.pythonhosted.org/packages/1f/fb/cc8a019151b6b988e56e15d40a97e4ee1d8ac5cade660251da159f7efb96/canopener-0.1.6.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:30 2020"}