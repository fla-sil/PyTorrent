{"info": {"author": "orangain", "author_email": "orangain@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Utilities"], "description": "\nmasecret\n========\n\nmasecret is a command to mask secret information in image files using OCR.\n\n**DISCLAIMER**: There is no guarantee that all the secret information is successfully masked. You must make sure that all the secret information is masked.\n\nPrerequisite\n------------\n\n- Python 3.3+\n- `Tesseract <https://github.com/tesseract-ocr/tesseract>`__\n\n  - Language data for OCR (can be specified with ``--lang``, default is ``eng``)\n    must be available.\n\nInstallation\n------------\n\n::\n\n    $ pip3 install masecret\n\nYou may need ``sudo``.\n\nmasecret depends on `pyocr <https://github.com/jflesch/pyocr>`__ and\n`Pillow <https://pillow.readthedocs.io/>`__. If you fail to install\nPillow, please see `the installation instruction of Pillow <http://pillow.readthedocs.io/en/latest/installation.html>`__.\n\nUsage\n-----\n\nMask a single image file with a regular expression pattern that match AWS account number::\n\n    $ masecret -r '[-\\d]{12,}' original.png -o masked.png\n\nMask multiple image files (output directory must exist)::\n\n    $ masecret -r '[-\\d]{12,}' original1.png original2.png ... -o masked_images/\n\nMask image files in-place with ``-i`` option::\n\n    $ masecret -i -r '[-\\d]{12,}' original1.png original2.png ...\n\nWARNING: No backup files will be created.\n\nSECRETS.txt\n~~~~~~~~~~~\n\nWhen ``-r`` option is not provided, regular expressions are read from a file named\n``SECRETS.txt`` in a current directory.\nContent of the file is regular expression patterns that match secret information\nyou want to mask. You can include multiple patterns line by line.\n\nFull Usage\n~~~~~~~~~~\n\n::\n\n    usage:\n        masecret [options] INPUT -o OUTPUT\n        masecret [options] INPUT... -o OUTPUT\n        masecret -i [options] INPUT...\n\n    Mask secret information in image files using OCR. Put regular expression\n    matches secret information into a file named SECRETS.txt or -r option.\n\n    positional arguments:\n      INPUT                 input files\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -V, --version         show program's version number and exit\n      -o OUTPUT, --output OUTPUT\n                            output file or directory (default: None)\n      -r REGEX, --regex REGEX\n                            regular expression matches secret information\n                            (default: None)\n      -s SECRET_PATH, --secret SECRET_PATH\n                            path to file containing regexes line by line that\n                            match secret information (default: ./SECRETS.txt)\n      -l LANG, --lang LANG  language for OCR, can be multiple languages joined by\n                            + sign, e.g. eng+jpn (default: eng)\n      -c COLOR, --color COLOR\n                            color to fill secrets (default: #666)\n      -i, --in-place        mask image files in-place. WARNING: No backup files\n                            will be saved (default: False)\n      --tesseract-params PARAMS\n                            (Advanced Option) additional parameters passed to\n                            tesseract (default: -psm 6 makebox)\n\nDebug\n-----\n\nIf images are not masked as expected, the environment variable ``DEBUG``\nwill help you. If ``DEBUG`` is set, all the characters tesseract\nrecognized are printed with position.\n\n::\n\n    $ DEBUG=1 masecret original.png -o masked.png\n    Processing original.png...\n    . ((136, 90), (160, 114))\n    . ((176, 90), (200, 114))\n    . ((216, 90), (240, 114))\n    I ((292, 104), (304, 126))\n    I ((308, 104), (320, 126))\n    A ((326, 104), (340, 120))\n    W ((341, 104), (361, 120))\n    S ((362, 103), (375, 120))\n    M ((385, 104), (401, 120))\n    a ((404, 108), (415, 120))\n    n ((417, 108), (427, 120))\n    a ((430, 108), (440, 120))\n    g ((443, 108), (453, 125))\n    e ((456, 108), (467, 120))\n    m ((469, 108), (485, 120))\n    e ((488, 108), (499, 120))\n    n ((501, 108), (511, 120))\n    t ((513, 105), (519, 120))\n    C ((528, 103), (542, 120))\n    o ((545, 108), (556, 120))\n    n ((559, 108), (569, 120))\n    ...\n\nLicense\n-------\n\nMIT License. See: ``LICENSE``.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/orangain/masecret", "keywords": "ocr image screenshot secret mask", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "masecret", "package_url": "https://pypi.org/project/masecret/", "platform": "", "project_url": "https://pypi.org/project/masecret/", "project_urls": {"Homepage": "https://github.com/orangain/masecret"}, "release_url": "https://pypi.org/project/masecret/0.4.0/", "requires_dist": ["Pillow", "pyocr (>=0.5.3)"], "requires_python": "", "summary": "A command to mask secret information of images using OCR", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>masecret is a command to mask secret information in image files using OCR.</p>\n<p><strong>DISCLAIMER</strong>: There is no guarantee that all the secret information is successfully masked. You must make sure that all the secret information is masked.</p>\n<div id=\"prerequisite\">\n<h2>Prerequisite</h2>\n<ul>\n<li>Python 3.3+</li>\n<li><a href=\"https://github.com/tesseract-ocr/tesseract\" rel=\"nofollow\">Tesseract</a><ul>\n<li>Language data for OCR (can be specified with <tt><span class=\"pre\">--lang</span></tt>, default is <tt>eng</tt>)\nmust be available.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip3 install masecret\n</pre>\n<p>You may need <tt>sudo</tt>.</p>\n<p>masecret depends on <a href=\"https://github.com/jflesch/pyocr\" rel=\"nofollow\">pyocr</a> and\n<a href=\"https://pillow.readthedocs.io/\" rel=\"nofollow\">Pillow</a>. If you fail to install\nPillow, please see <a href=\"http://pillow.readthedocs.io/en/latest/installation.html\" rel=\"nofollow\">the installation instruction of Pillow</a>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Mask a single image file with a regular expression pattern that match AWS account number:</p>\n<pre>$ masecret -r '[-\\d]{12,}' original.png -o masked.png\n</pre>\n<p>Mask multiple image files (output directory must exist):</p>\n<pre>$ masecret -r '[-\\d]{12,}' original1.png original2.png ... -o masked_images/\n</pre>\n<p>Mask image files in-place with <tt><span class=\"pre\">-i</span></tt> option:</p>\n<pre>$ masecret -i -r '[-\\d]{12,}' original1.png original2.png ...\n</pre>\n<p>WARNING: No backup files will be created.</p>\n<div id=\"secrets-txt\">\n<h3>SECRETS.txt</h3>\n<p>When <tt><span class=\"pre\">-r</span></tt> option is not provided, regular expressions are read from a file named\n<tt>SECRETS.txt</tt> in a current directory.\nContent of the file is regular expression patterns that match secret information\nyou want to mask. You can include multiple patterns line by line.</p>\n</div>\n<div id=\"full-usage\">\n<h3>Full Usage</h3>\n<pre>usage:\n    masecret [options] INPUT -o OUTPUT\n    masecret [options] INPUT... -o OUTPUT\n    masecret -i [options] INPUT...\n\nMask secret information in image files using OCR. Put regular expression\nmatches secret information into a file named SECRETS.txt or -r option.\n\npositional arguments:\n  INPUT                 input files\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -V, --version         show program's version number and exit\n  -o OUTPUT, --output OUTPUT\n                        output file or directory (default: None)\n  -r REGEX, --regex REGEX\n                        regular expression matches secret information\n                        (default: None)\n  -s SECRET_PATH, --secret SECRET_PATH\n                        path to file containing regexes line by line that\n                        match secret information (default: ./SECRETS.txt)\n  -l LANG, --lang LANG  language for OCR, can be multiple languages joined by\n                        + sign, e.g. eng+jpn (default: eng)\n  -c COLOR, --color COLOR\n                        color to fill secrets (default: #666)\n  -i, --in-place        mask image files in-place. WARNING: No backup files\n                        will be saved (default: False)\n  --tesseract-params PARAMS\n                        (Advanced Option) additional parameters passed to\n                        tesseract (default: -psm 6 makebox)\n</pre>\n</div>\n</div>\n<div id=\"debug\">\n<h2>Debug</h2>\n<p>If images are not masked as expected, the environment variable <tt>DEBUG</tt>\nwill help you. If <tt>DEBUG</tt> is set, all the characters tesseract\nrecognized are printed with position.</p>\n<pre>$ DEBUG=1 masecret original.png -o masked.png\nProcessing original.png...\n. ((136, 90), (160, 114))\n. ((176, 90), (200, 114))\n. ((216, 90), (240, 114))\nI ((292, 104), (304, 126))\nI ((308, 104), (320, 126))\nA ((326, 104), (340, 120))\nW ((341, 104), (361, 120))\nS ((362, 103), (375, 120))\nM ((385, 104), (401, 120))\na ((404, 108), (415, 120))\nn ((417, 108), (427, 120))\na ((430, 108), (440, 120))\ng ((443, 108), (453, 125))\ne ((456, 108), (467, 120))\nm ((469, 108), (485, 120))\ne ((488, 108), (499, 120))\nn ((501, 108), (511, 120))\nt ((513, 105), (519, 120))\nC ((528, 103), (542, 120))\no ((545, 108), (556, 120))\nn ((559, 108), (569, 120))\n...\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT License. See: <tt>LICENSE</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 4828933, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5a88f1d78a41a6f8def597f273ac4856", "sha256": "86d66208371a857a150386f6c28dea847d42c2438ffbe24d0ddce6378b9fea31"}, "downloads": -1, "filename": "masecret-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5a88f1d78a41a6f8def597f273ac4856", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5182, "upload_time": "2016-06-19T10:44:18", "upload_time_iso_8601": "2016-06-19T10:44:18.966063Z", "url": "https://files.pythonhosted.org/packages/ff/27/6f68a0e2c635b3de1943322a66bbbfd63f1786158defb0be0ae5b8909090/masecret-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "881e53c706c3c3493d28fe654c1384f3", "sha256": "a6652084c3ebf85e3423bdc070680ce66e6ec865d5a267f6d867dd8c27433e58"}, "downloads": -1, "filename": "masecret-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "881e53c706c3c3493d28fe654c1384f3", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 9317, "upload_time": "2017-02-05T13:39:45", "upload_time_iso_8601": "2017-02-05T13:39:45.806853Z", "url": "https://files.pythonhosted.org/packages/a3/03/45c3a7f614641c4b68894de31ed355d46a5fdbf4dd5beef48789c045a601/masecret-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83aaef184a3d65c289090ab46aaa91f7", "sha256": "a3d820f324c8b04b159504b7427404b014f299688522d71b43222750849215fd"}, "downloads": -1, "filename": "masecret-0.2.0.tar.gz", "has_sig": false, "md5_digest": "83aaef184a3d65c289090ab46aaa91f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6312, "upload_time": "2017-02-05T13:39:43", "upload_time_iso_8601": "2017-02-05T13:39:43.729123Z", "url": "https://files.pythonhosted.org/packages/01/54/e3afa24eb552f4aa0ef6a49a194635f87b7d6fa6383c9925405f6b204e8d/masecret-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "73c9e2c273ffe14ee301021cdab74eab", "sha256": "163ad4da42042cfc1d2dba0b03dbf5248fb5f4229270fec7c2a7602ba7aa9b1d"}, "downloads": -1, "filename": "masecret-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "73c9e2c273ffe14ee301021cdab74eab", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 9953, "upload_time": "2017-02-06T13:44:45", "upload_time_iso_8601": "2017-02-06T13:44:45.540709Z", "url": "https://files.pythonhosted.org/packages/e7/52/552145e0509907056b26ebe12246ff70e7e99a4d393150a74fe950124322/masecret-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a226412f3dddee8091b2f46386cb7c50", "sha256": "5aaa1b2bfe51f8f07e79bf0532aac5989fba8c36e6e703e62321db74efa8cb57"}, "downloads": -1, "filename": "masecret-0.3.0.tar.gz", "has_sig": false, "md5_digest": "a226412f3dddee8091b2f46386cb7c50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6946, "upload_time": "2017-02-06T13:44:43", "upload_time_iso_8601": "2017-02-06T13:44:43.582030Z", "url": "https://files.pythonhosted.org/packages/36/c7/f8abaca3ff396e0e4e0c82bbd458ab0a0dd69004613f27d4201adcd84e20/masecret-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "8f7a61ebadac0ca9f54bedbc99c1d2ce", "sha256": "9ac01823fe872fb580be397d85b2a160b593d360699ee08be964e80384876c35"}, "downloads": -1, "filename": "masecret-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8f7a61ebadac0ca9f54bedbc99c1d2ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8459, "upload_time": "2019-02-16T15:06:56", "upload_time_iso_8601": "2019-02-16T15:06:56.166524Z", "url": "https://files.pythonhosted.org/packages/74/29/2ed67c27c85e690a9d7ac19c74edfa69dd463c83c73c6cda1d01d8e7307f/masecret-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe62287d275844bc7801d2f1dab82500", "sha256": "5472f704481d4ed8ee18601bc360a75f4c15821a3e1bcbe3106525e31ba70e76"}, "downloads": -1, "filename": "masecret-0.4.0.tar.gz", "has_sig": false, "md5_digest": "fe62287d275844bc7801d2f1dab82500", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7354, "upload_time": "2019-02-16T15:06:57", "upload_time_iso_8601": "2019-02-16T15:06:57.842785Z", "url": "https://files.pythonhosted.org/packages/df/25/76995487476adfae2e10b0cccb34a4e5ff384d99ccf79c4502c95c0dc201/masecret-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8f7a61ebadac0ca9f54bedbc99c1d2ce", "sha256": "9ac01823fe872fb580be397d85b2a160b593d360699ee08be964e80384876c35"}, "downloads": -1, "filename": "masecret-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8f7a61ebadac0ca9f54bedbc99c1d2ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8459, "upload_time": "2019-02-16T15:06:56", "upload_time_iso_8601": "2019-02-16T15:06:56.166524Z", "url": "https://files.pythonhosted.org/packages/74/29/2ed67c27c85e690a9d7ac19c74edfa69dd463c83c73c6cda1d01d8e7307f/masecret-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe62287d275844bc7801d2f1dab82500", "sha256": "5472f704481d4ed8ee18601bc360a75f4c15821a3e1bcbe3106525e31ba70e76"}, "downloads": -1, "filename": "masecret-0.4.0.tar.gz", "has_sig": false, "md5_digest": "fe62287d275844bc7801d2f1dab82500", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7354, "upload_time": "2019-02-16T15:06:57", "upload_time_iso_8601": "2019-02-16T15:06:57.842785Z", "url": "https://files.pythonhosted.org/packages/df/25/76995487476adfae2e10b0cccb34a4e5ff384d99ccf79c4502c95c0dc201/masecret-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:31 2020"}