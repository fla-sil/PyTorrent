{"info": {"author": "Martin Peters", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: System :: Monitoring", "Topic :: Utilities"], "description": "chksrv\n======\n\n*check-service a tool to probe and check the health of network services*\n\n*chksrv* is a tool intended to be used in conjunction with other tools (e.g. `Minitor <https://git.iamthefij.com/iamthefij/minitor>`_)\nto check the health and availability of network services.\nOne design goal was to provide flexibility of what is checked,\nwithout the need for complex bash scripts and piping. Effectively allowing to\nwrite one check and then validating mulitple measurements afterwards.\n\nInstallation\n------------\n\n:code:`pip install chksrv`\n\nYou need at least Python 3.7 to run *chksrv*.\n\nUsage\n-----\n\n.. code::\n\n    Usage:\n        chksrv (-h | --help)\n        chksrv --version\n        chksrv tcp [options] [-p PARAM=VALUE]... [-e EXPR]... HOST PORT\n        chksrv ssl [options] [-p PARAM=VALUE]... [-e EXPR]... HOST PORT\n        chksrv http [options] [-p PARAM=VALUE]... [-e EXPR]... URL\n\n    Options:\n        -h --help                     Show this screen.\n        --version                     Show version.\n        -v --verbose                  Increases verbosity.\n        -l --log-level LEVEL          Defines the log verbosity [default: WARN].\n        --log-file FILE               Stores all log output in a file.\n        -p --parameter PARAM=VALUE    Defines a parameter.\n        -e --expects EXPR             Defines an expection expression.\n        -r --retry RETRY              Defines the amount of retries [default: 3].\n        --timeout TIMEOUT             Defines a timeout for one try in seconds [default: 10].\n\nModules\n-------\n\n.. _module-tcp:\n\nTCP\n'''\n\nThe TCP is one of the most basic check modules.\nIts purpose is to try to establish a connection\nto a standard TCP listening socket.\n\nParameters\n..........\n\n:ipv6: Specifies the IPv6 behaviour. Possible values:\n\n    - :code:`True` only tries to connect to IPv6\n    - :code:`False` only tries to connect to IPv4\n    - :code:`'prefer'` tries to connect using IPv6 first,\n      and tries IPv4 if this fails (default)\n    - :code:`'fallback'` tries to connect using IPv4 first,\n      and falls back to IPv6 if this fails\n\n:timeout: Specifies the socket timeout in seconds\n\nResults\n.......\n\n:tcp.success: :code:`True` if the socket connect succeded\n:tcp.con.time.perf: Fractions of seconds it took to establish\n    the socket connection\n:tcp.con.time.process: Fractions of seconds of CPU time (system and user)\n    the process used to  establish the socket connection\n:tcp.ipv6: :code:`True` if the socket was established using IPv6\n\nSSL\n'''\n\nThe SSL module is based on the TCP module <module-tcp> and layers\na SSL/TLS handshake on top of it, using the Python3 :code:`ssl` library.\n\n*All parameters and results from the TCP module are available in addition*\n\nParameters\n..........\n\n:ssl.use_default_context: If set to :code:`True` the SSL context is created using systems defaults.\n    :code:`ssl.protocol` and :code:`ssl.ciphers` will be ignored.\n    (default: :code:`'prefer'`)\n:ssl.check_hostname: If set to :code:`True` chksrv verifies if the SSL certificate commonName\n    matches the connected hostname. (default: :code:`False`)\n:ssl.protocol: SSL protocol to use. Possible values:\n\n    - :code:`tls` (default)\n    - :code:`sslv2`\n    - :code:`sslv3`\n    - :code:`tlsv1`\n    - :code:`tlsv1.1`\n    - :code:`tlsv1.2`\n\n:ssl.ciphers: The cipher suite to use.\n    Must be a valid OpenSSL cipher suite string. (default: :code:`ALL`)\n:ssl.verify_mode: SSL verify mode. cf. `ssl.VerifyMode <https://docs.python.org/3.7/library/ssl.html#ssl.VerifyMode>`_ (default: :code:`CERT_OPTIONAL`)\n:ssl.verify_flags: SSL verify flags. cf. `ssl.VerifyFlags <https://docs.python.org/3.7/library/ssl.html#ssl.VerifyFlags>`_ (default: :code:`VERIFY_DEFAULT`)\n:ssl.ca: Directory or file containing x509 certifcates of\n    trusted Certificate Authorities. By setting it to :code:`__sys__`\n    *chksr* tries to load the system default trusted certificates.\n\nResults\n.......\n\n:ssl.success: :code:`True` if the SSL handshake was successful\n:ssl.con.cert: Parsed x509 certificate the server used to authenticate itself\n:ssl.con.cipher: Negotiated cipher used to this connection\n:ssl.con.compression: Compression algorithm for this connection or :code:`None`\n:ssl.con.alpn_protocol: ALPN protocol selected during the TLS handshake\n    or :code:`None`\n:ssl.con.npn_protocol: NPN protocol selected during the SSL/TLS handshake\n    or :code:`None`\n:ssl.con.ssl_version: Actual SSL protocol version negotiated for this connection\n    or :code:`None` if no secure connection was established\n:ssl.con.server_hostname: Hostname of the server\n:ssl.con.cert.matches_hostname: :code:`True` if the server hostname matches the\n    certificate commonName\n\nHTTP\n''''\n\nThe HTTP module is intended to be used to check web services,\nand relies on either the TCP or SSL module to establish\nthe underlying socket connection. Depending if the URL is\nspecified with :code:`http://` or :code:`https://`.\n\nConsequently *all parameters from either only the TCP module or both\nthe TCP and SSL module are available in addition*\n\nParameters\n..........\n\n:http.method: HTTP method of the request. Possible values:\n\n    * :code:`GET` (default)\n    * :code:`HEAD`\n    * :code:`POST`\n    * :code:`PUT`\n    * :code:`DELETE`\n    * :code:`OPTIONS`\n    * :code:`PATCH`\n    * :code:`TRACE`\n\n:http.body: Body to attach to the request. (default: :code:`None`)\n\nResults\n.......\n\n:http.success: :code:`True` if the HTTP request was successful.\n    (Does not evaluate the returned status code)\n:http.resp.status: HTTP response status code (numeric)\n:http.resp.reason: HTTP response reason (e.g. :code:`Found`)\n:http.resp.version: HTTP version\n:http.resp.body: HTTP response body\n:http.resp.body_length: Actual size of the HTTP response body.\n    (Does not read :code:`Content-Length` header)\n:http.resp.header.*: Collection of response headers, converted to lower-case snake_case.\n    So the header field :code:`Content-Length` is available as\n    :code:`http.resp.header.content_length`. If a header field appears multiple\n    times in the response header (e.g. :code:`Set-Cookie`) the value\n    is provided as list.\n\n\n\n\n\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://git.hel.freakybytes.net/martin/chksrv", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "chksrv", "package_url": "https://pypi.org/project/chksrv/", "platform": "", "project_url": "https://pypi.org/project/chksrv/", "project_urls": {"Homepage": "https://git.hel.freakybytes.net/martin/chksrv"}, "release_url": "https://pypi.org/project/chksrv/0.1.0/", "requires_dist": ["docopt (~=0.6)"], "requires_python": "", "summary": "A tool to probe and check the health of services", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><em>check-service a tool to probe and check the health of network services</em></p>\n<p><em>chksrv</em> is a tool intended to be used in conjunction with other tools (e.g. <a href=\"https://git.iamthefij.com/iamthefij/minitor\" rel=\"nofollow\">Minitor</a>)\nto check the health and availability of network services.\nOne design goal was to provide flexibility of what is checked,\nwithout the need for complex bash scripts and piping. Effectively allowing to\nwrite one check and then validating mulitple measurements afterwards.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><code>pip install chksrv</code></p>\n<p>You need at least Python 3.7 to run <em>chksrv</em>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>Usage:\n    chksrv (-h | --help)\n    chksrv --version\n    chksrv tcp [options] [-p PARAM=VALUE]... [-e EXPR]... HOST PORT\n    chksrv ssl [options] [-p PARAM=VALUE]... [-e EXPR]... HOST PORT\n    chksrv http [options] [-p PARAM=VALUE]... [-e EXPR]... URL\n\nOptions:\n    -h --help                     Show this screen.\n    --version                     Show version.\n    -v --verbose                  Increases verbosity.\n    -l --log-level LEVEL          Defines the log verbosity [default: WARN].\n    --log-file FILE               Stores all log output in a file.\n    -p --parameter PARAM=VALUE    Defines a parameter.\n    -e --expects EXPR             Defines an expection expression.\n    -r --retry RETRY              Defines the amount of retries [default: 3].\n    --timeout TIMEOUT             Defines a timeout for one try in seconds [default: 10].\n</pre>\n</div>\n<div id=\"modules\">\n<h2>Modules</h2>\n<div id=\"tcp\">\n<span id=\"module-tcp\"></span><h3>TCP</h3>\n<p>The TCP is one of the most basic check modules.\nIts purpose is to try to establish a connection\nto a standard TCP listening socket.</p>\n<div id=\"parameters\">\n<h4>Parameters</h4>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>ipv6:</th><td><p>Specifies the IPv6 behaviour. Possible values:</p>\n<ul>\n<li><code>True</code> only tries to connect to IPv6</li>\n<li><code>False</code> only tries to connect to IPv4</li>\n<li><code>'prefer'</code> tries to connect using IPv6 first,\nand tries IPv4 if this fails (default)</li>\n<li><code>'fallback'</code> tries to connect using IPv4 first,\nand falls back to IPv6 if this fails</li>\n</ul>\n</td>\n</tr>\n<tr><th>timeout:</th><td><p>Specifies the socket timeout in seconds</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"results\">\n<h4>Results</h4>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>tcp.success:</th><td><code>True</code> if the socket connect succeded</td>\n</tr>\n<tr><th>tcp.con.time.perf:</th></tr>\n<tr><td>\u00a0</td><td>Fractions of seconds it took to establish\nthe socket connection</td>\n</tr>\n<tr><th>tcp.con.time.process:</th></tr>\n<tr><td>\u00a0</td><td>Fractions of seconds of CPU time (system and user)\nthe process used to  establish the socket connection</td>\n</tr>\n<tr><th>tcp.ipv6:</th><td><code>True</code> if the socket was established using IPv6</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"ssl\">\n<h3>SSL</h3>\n<p>The SSL module is based on the TCP module &lt;module-tcp&gt; and layers\na SSL/TLS handshake on top of it, using the Python3 <code>ssl</code> library.</p>\n<p><em>All parameters and results from the TCP module are available in addition</em></p>\n<div id=\"id1\">\n<h4>Parameters</h4>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>ssl.use_default_context:</th></tr>\n<tr><td>\u00a0</td><td><p>If set to <code>True</code> the SSL context is created using systems defaults.\n<code>ssl.protocol</code> and <code>ssl.ciphers</code> will be ignored.\n(default: <code>'prefer'</code>)</p>\n</td>\n</tr>\n<tr><th>ssl.check_hostname:</th></tr>\n<tr><td>\u00a0</td><td><p>If set to <code>True</code> chksrv verifies if the SSL certificate commonName\nmatches the connected hostname. (default: <code>False</code>)</p>\n</td>\n</tr>\n<tr><th>ssl.protocol:</th><td><p>SSL protocol to use. Possible values:</p>\n<ul>\n<li><code>tls</code> (default)</li>\n<li><code>sslv2</code></li>\n<li><code>sslv3</code></li>\n<li><code>tlsv1</code></li>\n<li><code>tlsv1.1</code></li>\n<li><code>tlsv1.2</code></li>\n</ul>\n</td>\n</tr>\n<tr><th>ssl.ciphers:</th><td><p>The cipher suite to use.\nMust be a valid OpenSSL cipher suite string. (default: <code>ALL</code>)</p>\n</td>\n</tr>\n<tr><th>ssl.verify_mode:</th></tr>\n<tr><td>\u00a0</td><td><p>SSL verify mode. cf. <a href=\"https://docs.python.org/3.7/library/ssl.html#ssl.VerifyMode\" rel=\"nofollow\">ssl.VerifyMode</a> (default: <code>CERT_OPTIONAL</code>)</p>\n</td>\n</tr>\n<tr><th>ssl.verify_flags:</th></tr>\n<tr><td>\u00a0</td><td><p>SSL verify flags. cf. <a href=\"https://docs.python.org/3.7/library/ssl.html#ssl.VerifyFlags\" rel=\"nofollow\">ssl.VerifyFlags</a> (default: <code>VERIFY_DEFAULT</code>)</p>\n</td>\n</tr>\n<tr><th>ssl.ca:</th><td><p>Directory or file containing x509 certifcates of\ntrusted Certificate Authorities. By setting it to <code>__sys__</code>\n<em>chksr</em> tries to load the system default trusted certificates.</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"id2\">\n<h4>Results</h4>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>ssl.success:</th><td><code>True</code> if the SSL handshake was successful</td>\n</tr>\n<tr><th>ssl.con.cert:</th><td>Parsed x509 certificate the server used to authenticate itself</td>\n</tr>\n<tr><th>ssl.con.cipher:</th><td>Negotiated cipher used to this connection</td>\n</tr>\n<tr><th>ssl.con.compression:</th></tr>\n<tr><td>\u00a0</td><td>Compression algorithm for this connection or <code>None</code></td>\n</tr>\n<tr><th>ssl.con.alpn_protocol:</th></tr>\n<tr><td>\u00a0</td><td>ALPN protocol selected during the TLS handshake\nor <code>None</code></td>\n</tr>\n<tr><th>ssl.con.npn_protocol:</th></tr>\n<tr><td>\u00a0</td><td>NPN protocol selected during the SSL/TLS handshake\nor <code>None</code></td>\n</tr>\n<tr><th>ssl.con.ssl_version:</th></tr>\n<tr><td>\u00a0</td><td>Actual SSL protocol version negotiated for this connection\nor <code>None</code> if no secure connection was established</td>\n</tr>\n<tr><th>ssl.con.server_hostname:</th></tr>\n<tr><td>\u00a0</td><td>Hostname of the server</td>\n</tr>\n<tr><th>ssl.con.cert.matches_hostname:</th></tr>\n<tr><td>\u00a0</td><td><code>True</code> if the server hostname matches the\ncertificate commonName</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"http\">\n<h3>HTTP</h3>\n<p>The HTTP module is intended to be used to check web services,\nand relies on either the TCP or SSL module to establish\nthe underlying socket connection. Depending if the URL is\nspecified with <code>http://</code> or <code>https://</code>.</p>\n<p>Consequently <em>all parameters from either only the TCP module or both\nthe TCP and SSL module are available in addition</em></p>\n<div id=\"id3\">\n<h4>Parameters</h4>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>http.method:</th><td><p>HTTP method of the request. Possible values:</p>\n<ul>\n<li><code>GET</code> (default)</li>\n<li><code>HEAD</code></li>\n<li><code>POST</code></li>\n<li><code>PUT</code></li>\n<li><code>DELETE</code></li>\n<li><code>OPTIONS</code></li>\n<li><code>PATCH</code></li>\n<li><code>TRACE</code></li>\n</ul>\n</td>\n</tr>\n<tr><th>http.body:</th><td><p>Body to attach to the request. (default: <code>None</code>)</p>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"id4\">\n<h4>Results</h4>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>http.success:</th><td><code>True</code> if the HTTP request was successful.\n(Does not evaluate the returned status code)</td>\n</tr>\n<tr><th>http.resp.status:</th></tr>\n<tr><td>\u00a0</td><td>HTTP response status code (numeric)</td>\n</tr>\n<tr><th>http.resp.reason:</th></tr>\n<tr><td>\u00a0</td><td>HTTP response reason (e.g. <code>Found</code>)</td>\n</tr>\n<tr><th>http.resp.version:</th></tr>\n<tr><td>\u00a0</td><td>HTTP version</td>\n</tr>\n<tr><th>http.resp.body:</th><td>HTTP response body</td>\n</tr>\n<tr><th>http.resp.body_length:</th></tr>\n<tr><td>\u00a0</td><td>Actual size of the HTTP response body.\n(Does not read <code>Content-Length</code> header)</td>\n</tr>\n<tr><th>http.resp.header.*:</th></tr>\n<tr><td>\u00a0</td><td>Collection of response headers, converted to lower-case snake_case.\nSo the header field <code>Content-Length</code> is available as\n<code>http.resp.header.content_length</code>. If a header field appears multiple\ntimes in the response header (e.g. <code>Set-Cookie</code>) the value\nis provided as list.</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4424990, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "3c3e5dffeec346596b3b8809a5c39e03", "sha256": "7717cc54a0751eb3cbb5fb985f364ac2e63b69ab9e49d9097ade0b67943c1ad1"}, "downloads": -1, "filename": "chksrv-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3c3e5dffeec346596b3b8809a5c39e03", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30314, "upload_time": "2018-10-28T18:34:28", "upload_time_iso_8601": "2018-10-28T18:34:28.364141Z", "url": "https://files.pythonhosted.org/packages/6e/9f/f286cabff1d549b9ec92c11670d7109b0274f0c8afad202c620d78e51a34/chksrv-0.1.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3c3e5dffeec346596b3b8809a5c39e03", "sha256": "7717cc54a0751eb3cbb5fb985f364ac2e63b69ab9e49d9097ade0b67943c1ad1"}, "downloads": -1, "filename": "chksrv-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3c3e5dffeec346596b3b8809a5c39e03", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30314, "upload_time": "2018-10-28T18:34:28", "upload_time_iso_8601": "2018-10-28T18:34:28.364141Z", "url": "https://files.pythonhosted.org/packages/6e/9f/f286cabff1d549b9ec92c11670d7109b0274f0c8afad202c620d78e51a34/chksrv-0.1.0-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 22:19:31 2020"}