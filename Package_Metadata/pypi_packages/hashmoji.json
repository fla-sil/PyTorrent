{"info": {"author": "Matt Croydon", "author_email": "mcroydon@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "========\nHashmoji\n========\n\nHashmoji is a simple Python 3 program and library for visualizing content hashes as emoji.\n\nAbout\n=====\n\nHashmoji is really just an executable joke.  It is not intended to be secure or meet the needs of Serious\nBusiness.  But it's fun alpha-quality stuff that you may enjoy.\n\nInstallation\n============\n\nMake sure you have `Python 3 <http://www.python.org/getit/>`_ installed.  On Mac OS X you can install\nPython 3 via homebrew::\n\n\tbrew update\n\tbrew install python3\n\nOnce you have Python 3 installed you can clone this repository and install it::\n\n\tgit clone git@github.com:mcroydon/hashmoji.git\n\tcd hashmoji\n\tpython3 setup.py install\n\nOr if you have `PIP <http://www.pip-installer.org/>`_ (recommended)::\n\n\tpip3 install hashmoji\n\n\nYou may also want to consider installing Hashmoji in a `Virtualenv <http://www.virtualenv.org/>`_.\n\nCommand-line usage\n==================\n\nHashmoji ships as both an executable utility and as a Python module that you can use to visualize output from\n`hashlib <http://docs.python.org/3/library/hashlib.html>`_ or any bytes object divisible by 4 bytes.\n\nTo use hashmoji similar to sha1sum::\n\n\t$ hashmoji.py README.rst \n\t\ud83d\udc39 \ud83c\udf08 \ud83c\udd8e \ud83d\ude0a\ud83d\udd22\n\nTo see all available options, please run ``hashmoji.py --help``::\n\n    mattbookpro:hashmoji mcroydon$ python3 hashmoji.py -h\n    Usage: hashmoji.py [options] FILE or no arguments for stdin\n\n    Options:\n      --version             show program's version number and exit\n      -h, --help            show this help message and exit\n      -a ALGORITHM, --algorithm=ALGORITHM\n                            Use ALGORITHM from hashlib.  Choices: ['SHA512',\n                            'sha512', 'sha384', 'ecdsa-with-SHA1', 'SHA256',\n                            'dsaEncryption', 'SHA384', 'MDC2', 'SHA224',\n                            'RIPEMD160', 'dsaWithSHA', 'MD4', 'sha', 'MD5',\n                            'sha224', 'md4', 'md5', 'sha1', 'sha256', 'mdc2',\n                            'DSA-SHA', 'ripemd160', 'DSA', 'SHA1', 'SHA']\n      -n, --no-hash         Treat the content as binary data divisible by 4 bytes\n                            suitable for conversion to emoji\n\n      Format Options:\n        -t, --text          Read the file in text mode (default).\n        -b, --binary        Read the file in binary mode.\n        -x, --hex           Read the file as hexidecimal encoded binary data, such\n                            as a hexdigest.  Implies --no-hash.\n        -e ENCODING, --encoding=ENCODING\n                            Encoding to be used for text.  (default is utf-8)\n\n\nYou can use a specific hash algorithm based on the algorithms available to hashlib::\n\n\t$ hashmoji.py -a sha512 README.rst \n\t\ud83d\udc75 \ud83d\ude81 \ud83d\ude2e \ud83d\udd5e \ud83c\udde9\ud83c\uddea \ud83d\udd36 \ud83c\udf0a \ud83d\udeab \ud83c\udf8d \ud83d\udd1e \u2714 \ud83c\udd9a \ud83c\udf81 \ud83d\ude9c \ud83c\udf62\ud83c\udf8b\n\nNew in 0.1.2, you can also omit a ``FILE`` and pipe stdin to hashmoji.  This is particularly useful when combined with hex format\nfor visualizing the output of programs that include a single line of hex-encoded data such as ``git`` or ``md5 -q``::\n\n    $ git rev-parse HEAD | hashmoji.py -x\n    \u2666 \ud83d\udc22 \ud83d\udc63 \ud83d\udc78\ud83c\udc04\n\n\nHashmoji has only been tested on Mac OS X 10.8 and 10.9 in Terminal.app.  It definitely doesn't work inside a screen session.  Trust me.\n\nLibrary usage\n=============\n\nHashmoji is designed to work with either a bytes object or a `hashlib digest <http://docs.python.org/3/library/hashlib.html>`_::\n\n\t>>> from hashmoji import hashmoji\n\t\n\t# Use with hashlib\n\t>>> import hashlib\n\t>>> hashmoji(hashlib.sha1(b\"This is my test string.\"))\n\t'\ud83d\udcf1 \ud83d\udd22 \ud83d\udce9 \ud83d\udea6\ud83d\udcf2'\n\n\t# Use with bytes as long as the bytes are divisible by 4 bytes\n\t>>> mybytes = b'\\x916\\xb8|\\x1b\\xf7&\\xaa\\x92(;OQX\\x95^w\\x1c\\xb2\\xd6\\xbe\\xb9_\\x8b\\xcf\\xdcO\\xa3\\x8f\\xcf\\xdbq\\x89\\xd0\\nF\\xce1\\x81\\xca\\xdd\\x15\\xf4\\xe1\\x10\\x807\\x19\\x1b\\x0f\\xe8\\x86\\x08\\xf7O\\x19\\xf1\\x16\\xf3\\x93\\x97\\xfa{\\x81'\n\t>>> len(mybytes)\n\t64\n\t>>> len(mybytes) % 4\n\t0\n\t>>> hashmoji(mybytes)\n\t'\ud83c\udfc6 \ud83d\udc99 \ud83c\udf00 \ud83c\udf52 \ud83d\udd55 \ud83d\udc2f \ud83d\udc83 \ud83c\udfa1 \u26a1 \ud83d\udd19 \ud83d\ude90 \u2797 \ud83d\udc1f \u27a1 \ud83d\udc4d\ud83c\udfed'\n\nTesting\n=======\n\nIf you have `setuptools <http://pythonhosted.org/setuptools/>`_::\n\n\t$ python3 setup.py test\n\nIf you have `nose <http://nose.readthedocs.org>`_::\n\n\t$ nosetests\n\nIf you have neither::\n\n\t$ python3 tests.py\n\nTo Do\n=====\n\n* Be smarter about not loading file contents in to memory sometimes.\n\nLicense\n=======\n\nHashmoji is released under a 3-clause BSD license.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mcroydon/hashmoji", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "hashmoji", "package_url": "https://pypi.org/project/hashmoji/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/hashmoji/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mcroydon/hashmoji"}, "release_url": "https://pypi.org/project/hashmoji/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "Visualize hashes and bytes with emoji.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Hashmoji is a simple Python 3 program and library for visualizing content hashes as emoji.</p>\n<div id=\"about\">\n<h2>About</h2>\n<p>Hashmoji is really just an executable joke.  It is not intended to be secure or meet the needs of Serious\nBusiness.  But it\u2019s fun alpha-quality stuff that you may enjoy.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Make sure you have <a href=\"http://www.python.org/getit/\" rel=\"nofollow\">Python 3</a> installed.  On Mac OS X you can install\nPython 3 via homebrew:</p>\n<pre>brew update\nbrew install python3\n</pre>\n<p>Once you have Python 3 installed you can clone this repository and install it:</p>\n<pre>git clone git@github.com:mcroydon/hashmoji.git\ncd hashmoji\npython3 setup.py install\n</pre>\n<p>Or if you have <a href=\"http://www.pip-installer.org/\" rel=\"nofollow\">PIP</a> (recommended):</p>\n<pre>pip3 install hashmoji\n</pre>\n<p>You may also want to consider installing Hashmoji in a <a href=\"http://www.virtualenv.org/\" rel=\"nofollow\">Virtualenv</a>.</p>\n</div>\n<div id=\"command-line-usage\">\n<h2>Command-line usage</h2>\n<p>Hashmoji ships as both an executable utility and as a Python module that you can use to visualize output from\n<a href=\"http://docs.python.org/3/library/hashlib.html\" rel=\"nofollow\">hashlib</a> or any bytes object divisible by 4 bytes.</p>\n<p>To use hashmoji similar to sha1sum:</p>\n<pre>$ hashmoji.py README.rst\n\ud83d\udc39 \ud83c\udf08 \ud83c\udd8e \ud83d\ude0a\ud83d\udd22\n</pre>\n<p>To see all available options, please run <tt>hashmoji.py <span class=\"pre\">--help</span></tt>:</p>\n<pre>mattbookpro:hashmoji mcroydon$ python3 hashmoji.py -h\nUsage: hashmoji.py [options] FILE or no arguments for stdin\n\nOptions:\n  --version             show program's version number and exit\n  -h, --help            show this help message and exit\n  -a ALGORITHM, --algorithm=ALGORITHM\n                        Use ALGORITHM from hashlib.  Choices: ['SHA512',\n                        'sha512', 'sha384', 'ecdsa-with-SHA1', 'SHA256',\n                        'dsaEncryption', 'SHA384', 'MDC2', 'SHA224',\n                        'RIPEMD160', 'dsaWithSHA', 'MD4', 'sha', 'MD5',\n                        'sha224', 'md4', 'md5', 'sha1', 'sha256', 'mdc2',\n                        'DSA-SHA', 'ripemd160', 'DSA', 'SHA1', 'SHA']\n  -n, --no-hash         Treat the content as binary data divisible by 4 bytes\n                        suitable for conversion to emoji\n\n  Format Options:\n    -t, --text          Read the file in text mode (default).\n    -b, --binary        Read the file in binary mode.\n    -x, --hex           Read the file as hexidecimal encoded binary data, such\n                        as a hexdigest.  Implies --no-hash.\n    -e ENCODING, --encoding=ENCODING\n                        Encoding to be used for text.  (default is utf-8)\n</pre>\n<p>You can use a specific hash algorithm based on the algorithms available to hashlib:</p>\n<pre>$ hashmoji.py -a sha512 README.rst\n\ud83d\udc75 \ud83d\ude81 \ud83d\ude2e \ud83d\udd5e \ud83c\udde9\ud83c\uddea \ud83d\udd36 \ud83c\udf0a \ud83d\udeab \ud83c\udf8d \ud83d\udd1e \u2714 \ud83c\udd9a \ud83c\udf81 \ud83d\ude9c \ud83c\udf62\ud83c\udf8b\n</pre>\n<p>New in 0.1.2, you can also omit a <tt>FILE</tt> and pipe stdin to hashmoji.  This is particularly useful when combined with hex format\nfor visualizing the output of programs that include a single line of hex-encoded data such as <tt>git</tt> or <tt>md5 <span class=\"pre\">-q</span></tt>:</p>\n<pre>$ git rev-parse HEAD | hashmoji.py -x\n\u2666 \ud83d\udc22 \ud83d\udc63 \ud83d\udc78\ud83c\udc04\n</pre>\n<p>Hashmoji has only been tested on Mac OS X 10.8 and 10.9 in Terminal.app.  It definitely doesn\u2019t work inside a screen session.  Trust me.</p>\n</div>\n<div id=\"library-usage\">\n<h2>Library usage</h2>\n<p>Hashmoji is designed to work with either a bytes object or a <a href=\"http://docs.python.org/3/library/hashlib.html\" rel=\"nofollow\">hashlib digest</a>:</p>\n<pre>&gt;&gt;&gt; from hashmoji import hashmoji\n\n# Use with hashlib\n&gt;&gt;&gt; import hashlib\n&gt;&gt;&gt; hashmoji(hashlib.sha1(b\"This is my test string.\"))\n'\ud83d\udcf1 \ud83d\udd22 \ud83d\udce9 \ud83d\udea6\ud83d\udcf2'\n\n# Use with bytes as long as the bytes are divisible by 4 bytes\n&gt;&gt;&gt; mybytes = b'\\x916\\xb8|\\x1b\\xf7&amp;\\xaa\\x92(;OQX\\x95^w\\x1c\\xb2\\xd6\\xbe\\xb9_\\x8b\\xcf\\xdcO\\xa3\\x8f\\xcf\\xdbq\\x89\\xd0\\nF\\xce1\\x81\\xca\\xdd\\x15\\xf4\\xe1\\x10\\x807\\x19\\x1b\\x0f\\xe8\\x86\\x08\\xf7O\\x19\\xf1\\x16\\xf3\\x93\\x97\\xfa{\\x81'\n&gt;&gt;&gt; len(mybytes)\n64\n&gt;&gt;&gt; len(mybytes) % 4\n0\n&gt;&gt;&gt; hashmoji(mybytes)\n'\ud83c\udfc6 \ud83d\udc99 \ud83c\udf00 \ud83c\udf52 \ud83d\udd55 \ud83d\udc2f \ud83d\udc83 \ud83c\udfa1 \u26a1 \ud83d\udd19 \ud83d\ude90 \u2797 \ud83d\udc1f \u27a1 \ud83d\udc4d\ud83c\udfed'\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>If you have <a href=\"http://pythonhosted.org/setuptools/\" rel=\"nofollow\">setuptools</a>:</p>\n<pre>$ python3 setup.py test\n</pre>\n<p>If you have <a href=\"http://nose.readthedocs.org\" rel=\"nofollow\">nose</a>:</p>\n<pre>$ nosetests\n</pre>\n<p>If you have neither:</p>\n<pre>$ python3 tests.py\n</pre>\n</div>\n<div id=\"to-do\">\n<h2>To Do</h2>\n<ul>\n<li>Be smarter about not loading file contents in to memory sometimes.</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Hashmoji is released under a 3-clause BSD license.</p>\n</div>\n\n          </div>"}, "last_serial": 917925, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0b9482716fef82b7b7cdca5a644aa2c2", "sha256": "f13759a26c8fd55f72bf42d70ae4bec72a778871aba9a53503e2d3caa2835d15"}, "downloads": -1, "filename": "hashmoji-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0b9482716fef82b7b7cdca5a644aa2c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6653, "upload_time": "2013-10-02T03:36:25", "upload_time_iso_8601": "2013-10-02T03:36:25.207364Z", "url": "https://files.pythonhosted.org/packages/e1/ba/f146796ca1ab19bd041b3d0164a1616364f5568a5fb4e3a2f0a9accc15f3/hashmoji-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "185f838e467f94769f8484f5fbc18d3b", "sha256": "f00e9e4c6faf2c37b5f0ef040423cce7ccf1866c261df502032ce74762972833"}, "downloads": -1, "filename": "hashmoji-0.1.1.tar.gz", "has_sig": false, "md5_digest": "185f838e467f94769f8484f5fbc18d3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7732, "upload_time": "2013-10-02T03:52:28", "upload_time_iso_8601": "2013-10-02T03:52:28.371694Z", "url": "https://files.pythonhosted.org/packages/71/fd/398e12a55358dcb135bdf7a04a0238274bcd1dda3230856a092067037219/hashmoji-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "cb6ac94f40e2e8ea2fa3eec678c9e360", "sha256": "0e9d406c3dd56c48c32b080b16b169a217a2c6777d4f87cbd4b0c92564db382a"}, "downloads": -1, "filename": "hashmoji-0.1.2.tar.gz", "has_sig": false, "md5_digest": "cb6ac94f40e2e8ea2fa3eec678c9e360", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8552, "upload_time": "2013-10-03T02:07:53", "upload_time_iso_8601": "2013-10-03T02:07:53.866739Z", "url": "https://files.pythonhosted.org/packages/ef/44/b9c785a98263588028a1c3a4271a0a3ada3cc879e9d1eb82b2d7e33b4e7d/hashmoji-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "8b97014deb9de0e14ec398eca54ec36a", "sha256": "c72ac4d184c1e83e10c29ec0e61dd681ef7e41f602fd3fb7e35d40be832bbe18"}, "downloads": -1, "filename": "hashmoji-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8b97014deb9de0e14ec398eca54ec36a", "packagetype": "bdist_wheel", "python_version": "3.3", "requires_python": null, "size": 16181, "upload_time": "2013-11-13T03:24:10", "upload_time_iso_8601": "2013-11-13T03:24:10.493240Z", "url": "https://files.pythonhosted.org/packages/7c/95/ceaddef33eeaf76ed562fdc6d03687fb04909e6f3780ab4017dbcc34c41f/hashmoji-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "470f36a1db90e73dde5fb5d9510b75d9", "sha256": "3eeda9bccf38882c67561b0fe13594676e2d8c4dbfa813fcdb7960e4213d14f2"}, "downloads": -1, "filename": "hashmoji-0.1.3.tar.gz", "has_sig": false, "md5_digest": "470f36a1db90e73dde5fb5d9510b75d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9096, "upload_time": "2013-11-13T03:24:07", "upload_time_iso_8601": "2013-11-13T03:24:07.288669Z", "url": "https://files.pythonhosted.org/packages/c2/0d/bb18deb6269f01030db215febfadff533a74515b7414b9b2339123281a6b/hashmoji-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8b97014deb9de0e14ec398eca54ec36a", "sha256": "c72ac4d184c1e83e10c29ec0e61dd681ef7e41f602fd3fb7e35d40be832bbe18"}, "downloads": -1, "filename": "hashmoji-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8b97014deb9de0e14ec398eca54ec36a", "packagetype": "bdist_wheel", "python_version": "3.3", "requires_python": null, "size": 16181, "upload_time": "2013-11-13T03:24:10", "upload_time_iso_8601": "2013-11-13T03:24:10.493240Z", "url": "https://files.pythonhosted.org/packages/7c/95/ceaddef33eeaf76ed562fdc6d03687fb04909e6f3780ab4017dbcc34c41f/hashmoji-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "470f36a1db90e73dde5fb5d9510b75d9", "sha256": "3eeda9bccf38882c67561b0fe13594676e2d8c4dbfa813fcdb7960e4213d14f2"}, "downloads": -1, "filename": "hashmoji-0.1.3.tar.gz", "has_sig": false, "md5_digest": "470f36a1db90e73dde5fb5d9510b75d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9096, "upload_time": "2013-11-13T03:24:07", "upload_time_iso_8601": "2013-11-13T03:24:07.288669Z", "url": "https://files.pythonhosted.org/packages/c2/0d/bb18deb6269f01030db215febfadff533a74515b7414b9b2339123281a6b/hashmoji-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:20 2020"}