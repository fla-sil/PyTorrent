{"info": {"author": "irakli khitarishvili", "author_email": "iraklikhitarishvili@yahoo.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django :: 1.7", "Framework :: Django :: 1.8", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3 :: Only"], "description": "Installation\r\n============\r\n\r\n::\r\n\r\n    run  pip install django_phonenumbers\r\n\r\nConfigure settings.py\r\n======================\r\n\r\n::\r\n\r\n     Add django_phonenumbers to INSTALLED_APPS\r\n\r\nmanage.py\r\n=========\r\n\r\n::\r\n\r\n     run manage.py collectstatic\r\n\r\nsettings.py\r\n===========\r\n\r\n\r\n.. code:: python\r\n\r\n        PHONE_NUMBER_REGION = 'GE'  \r\n        PHONE_NUMBERS_FORMATS_BY_REGION = {\r\n            'GE': {\r\n                'pattern': '(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})', 'format': '\\\\1 \\\\2-\\\\3-\\\\4', 'prefix_format': '+%s (%s)'\r\n            },\r\n            'US': {\r\n                'pattern': '(\\\\d{3})(\\\\d{3})(\\\\d{4})', 'format': '\\\\1 \\\\2-\\\\3', 'prefix_format': '+%s (%s)'\r\n            },\r\n        }\r\n\r\n- \"PHONE_NUMBER_REGION\" determines which country region will be selected in admin's corresponding phone number field\r\n- \"PHONE_NUMBERS_FORMATS_BY_REGION\" is used in \"phone_number_format\" filter\r\n\r\nModel\r\n=====\r\n\r\n.. code:: python\r\n\r\n    #models.py\r\n    class MyModel(models.Model):\r\n        ...\r\n        phone_number = PhoneNumberField()\r\n        ...\r\n\r\n        def __str__(self):\r\n            return str(self.phone_number)\r\n\r\n**\"phone_number\"** field's type will be **\"PhoneNumber\"**\r\n\r\n.. code:: python\r\n\r\n    class PhoneNumber:\r\n        def __init__(self, country_code=None, region_code=None, phone_number=None):\r\n            \"\"\"\r\n            :type country_code: str\r\n            :type region_code: str\r\n            :type phone_number: str\r\n            \"\"\"\r\n            self.country_code = country_code\r\n            self.google_phone_number = None\r\n            self.region_code = region_code\r\n            self.phone_number = phone_number\r\n\r\n\"__str__\" and \"__repr__\" functions are overridden to return \"country_code\"+\" \"+\"phone_number\"\r\n\r\n**model.fields.PhoneNumberField** is using **form.fields.PhoneNumberField** in admin by default\r\n\r\n**model.fields.PhoneNumberField** and **form.fields.PhoneNumberField** is validating and formatting(in national format) entered number\r\n\r\n\r\n\r\nTemplate example\r\n================\r\n\r\n.. code:: html\r\n\r\n    <li>\r\n                {{ number.phone_number }}\r\n                // {{ number.phone_number.region_code }}\r\n                // {{ number.phone_number.country_code }}\r\n                // {{ number.phone_number.phone_number }}\r\n                <div>\r\n                    {% load phone_numbers_extra %}\r\n                    <h4>Filter\r\n                        <small>{{ number.phone_number|phone_number_format }}</small>\r\n                    </h4>\r\n                    <h4>Simple tag\r\n                        <small>\r\n                            {% phone_number number.phone_number pattern='(\\\\d{3})(\\\\d{3})(\\\\d{3})' number_format='\\\\1 \\\\2-\\\\3' prefix_format='+%s (%s)' %}\r\n                        </small>\r\n                    </h4>\r\n                </div>\r\n    </li>\r\n\r\n**phone_number_format** uses **PHONE_NUMBERS_FORMATS_BY_REGION** from settings.py to determine phone number format\r\n\r\nExample\r\n=======\r\n::\r\n\r\n'GE': {  'pattern': '(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})', 'format': '\\\\1 \\\\2-\\\\3-\\\\4', 'prefix_format': '+%s (%s)'},\r\n\r\n- 'GE' : region code\r\n- 'pattern' : ``'(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})'`` is regex. this regex will split phone number in 4 groups:\r\n    - 3 digits\r\n    - 2 digits\r\n    - 2 digits\r\n    - 2 digits\r\n\r\n- 'format' : ``'\\\\1 \\\\2-\\\\3-\\\\4'`` numbers are groups mentioned above. for example if you want to put last 2 digits in scopes you should write '\\\\1 \\\\2-\\\\3-(\\\\4)' and result will be xxx xx-xx-(xx)\r\n- 'prefix_format' : '+%s (%s)' first \"%s\" is country code second mobile operator or city code for example +995 (595) where 995 is my country code and 595 my mobile operator's code you can change formatting fore example '[%s] [%s]' will give [995] [595] this result\r\n\r\nwith this simple tag you can specify format inline\r\n\r\n.. code:: python\r\n\r\n    {% phone_number number.phone_number pattern='(\\\\d{3})(\\\\d{3})(\\\\d{3})' number_format='\\\\1 \\\\2-\\\\3' prefix_format='+%s (%s)' %}", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/iraklikhitarishvili/django_phonenumbers", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "django-phonenumbers", "package_url": "https://pypi.org/project/django-phonenumbers/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-phonenumbers/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/iraklikhitarishvili/django_phonenumbers"}, "release_url": "https://pypi.org/project/django-phonenumbers/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Phone number field for Django admin", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"installation\">\n<h2>Installation</h2>\n<pre>run  pip install django_phonenumbers\n</pre>\n</div>\n<div id=\"configure-settings-py\">\n<h2>Configure settings.py</h2>\n<pre>Add django_phonenumbers to INSTALLED_APPS\n</pre>\n</div>\n<div id=\"manage-py\">\n<h2>manage.py</h2>\n<pre>run manage.py collectstatic\n</pre>\n</div>\n<div id=\"settings-py\">\n<h2>settings.py</h2>\n<pre><span class=\"n\">PHONE_NUMBER_REGION</span> <span class=\"o\">=</span> <span class=\"s1\">'GE'</span>\n<span class=\"n\">PHONE_NUMBERS_FORMATS_BY_REGION</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'GE'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'pattern'</span><span class=\"p\">:</span> <span class=\"s1\">'(</span><span class=\"se\">\\\\</span><span class=\"s1\">d</span><span class=\"si\">{3}</span><span class=\"s1\">)(</span><span class=\"se\">\\\\</span><span class=\"s1\">d</span><span class=\"si\">{2}</span><span class=\"s1\">)(</span><span class=\"se\">\\\\</span><span class=\"s1\">d</span><span class=\"si\">{2}</span><span class=\"s1\">)(</span><span class=\"se\">\\\\</span><span class=\"s1\">d</span><span class=\"si\">{2}</span><span class=\"s1\">)'</span><span class=\"p\">,</span> <span class=\"s1\">'format'</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"se\">\\\\</span><span class=\"s1\">1 </span><span class=\"se\">\\\\</span><span class=\"s1\">2-</span><span class=\"se\">\\\\</span><span class=\"s1\">3-</span><span class=\"se\">\\\\</span><span class=\"s1\">4'</span><span class=\"p\">,</span> <span class=\"s1\">'prefix_format'</span><span class=\"p\">:</span> <span class=\"s1\">'+</span><span class=\"si\">%s</span><span class=\"s1\"> (</span><span class=\"si\">%s</span><span class=\"s1\">)'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'US'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'pattern'</span><span class=\"p\">:</span> <span class=\"s1\">'(</span><span class=\"se\">\\\\</span><span class=\"s1\">d</span><span class=\"si\">{3}</span><span class=\"s1\">)(</span><span class=\"se\">\\\\</span><span class=\"s1\">d</span><span class=\"si\">{3}</span><span class=\"s1\">)(</span><span class=\"se\">\\\\</span><span class=\"s1\">d</span><span class=\"si\">{4}</span><span class=\"s1\">)'</span><span class=\"p\">,</span> <span class=\"s1\">'format'</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"se\">\\\\</span><span class=\"s1\">1 </span><span class=\"se\">\\\\</span><span class=\"s1\">2-</span><span class=\"se\">\\\\</span><span class=\"s1\">3'</span><span class=\"p\">,</span> <span class=\"s1\">'prefix_format'</span><span class=\"p\">:</span> <span class=\"s1\">'+</span><span class=\"si\">%s</span><span class=\"s1\"> (</span><span class=\"si\">%s</span><span class=\"s1\">)'</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n<ul>\n<li>\u201cPHONE_NUMBER_REGION\u201d determines which country region will be selected in admin\u2019s corresponding phone number field</li>\n<li>\u201cPHONE_NUMBERS_FORMATS_BY_REGION\u201d is used in \u201cphone_number_format\u201d filter</li>\n</ul>\n</div>\n<div id=\"model\">\n<h2>Model</h2>\n<pre><span class=\"c1\">#models.py</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">phone_number</span> <span class=\"o\">=</span> <span class=\"n\">PhoneNumberField</span><span class=\"p\">()</span>\n    <span class=\"o\">...</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">phone_number</span><span class=\"p\">)</span>\n</pre>\n<p><strong>\u201cphone_number\u201d</strong> field\u2019s type will be <strong>\u201cPhoneNumber\u201d</strong></p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">PhoneNumber</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">country_code</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">region_code</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">phone_number</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"\n        :type country_code: str\n        :type region_code: str\n        :type phone_number: str\n        \"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">country_code</span> <span class=\"o\">=</span> <span class=\"n\">country_code</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">google_phone_number</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">region_code</span> <span class=\"o\">=</span> <span class=\"n\">region_code</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">phone_number</span> <span class=\"o\">=</span> <span class=\"n\">phone_number</span>\n</pre>\n<p>\u201c__str__\u201d and \u201c__repr__\u201d functions are overridden to return \u201ccountry_code\u201d+\u201d \u201c+\u201dphone_number\u201d</p>\n<p><strong>model.fields.PhoneNumberField</strong> is using <strong>form.fields.PhoneNumberField</strong> in admin by default</p>\n<p><strong>model.fields.PhoneNumberField</strong> and <strong>form.fields.PhoneNumberField</strong> is validating and formatting(in national format) entered number</p>\n</div>\n<div id=\"template-example\">\n<h2>Template example</h2>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n            {{ number.phone_number }}\n            // {{ number.phone_number.region_code }}\n            // {{ number.phone_number.country_code }}\n            // {{ number.phone_number.phone_number }}\n            <span class=\"p\">&lt;</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n                {% load phone_numbers_extra %}\n                <span class=\"p\">&lt;</span><span class=\"nt\">h4</span><span class=\"p\">&gt;</span>Filter\n                    <span class=\"p\">&lt;</span><span class=\"nt\">small</span><span class=\"p\">&gt;</span>{{ number.phone_number|phone_number_format }}<span class=\"p\">&lt;/</span><span class=\"nt\">small</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nt\">h4</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nt\">h4</span><span class=\"p\">&gt;</span>Simple tag\n                    <span class=\"p\">&lt;</span><span class=\"nt\">small</span><span class=\"p\">&gt;</span>\n                        {% phone_number number.phone_number pattern='(\\\\d{3})(\\\\d{3})(\\\\d{3})' number_format='\\\\1 \\\\2-\\\\3' prefix_format='+%s (%s)' %}\n                    <span class=\"p\">&lt;/</span><span class=\"nt\">small</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nt\">h4</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\n</pre>\n<p><strong>phone_number_format</strong> uses <strong>PHONE_NUMBERS_FORMATS_BY_REGION</strong> from settings.py to determine phone number format</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre>'GE': {  'pattern': '(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})', 'format': '\\\\1 \\\\2-\\\\3-\\\\4', 'prefix_format': '+%s (%s)'},\n</pre>\n<ul>\n<li><p>\u2018GE\u2019 : region code</p>\n</li>\n<li><dl>\n<dt>\u2018pattern\u2019 <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\"><tt><span class=\"pre\">'(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})'</span></tt> is regex. this regex will split phone number in 4 groups:</span></dt>\n<dd><ul>\n<li>3 digits</li>\n<li>2 digits</li>\n<li>2 digits</li>\n<li>2 digits</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><p>\u2018format\u2019 : <tt><span class=\"pre\">'\\\\1</span> <span class=\"pre\">\\\\2-\\\\3-\\\\4'</span></tt> numbers are groups mentioned above. for example if you want to put last 2 digits in scopes you should write \u2018\\1 \\2-\\3-(\\4)\u2019 and result will be xxx xx-xx-(xx)</p>\n</li>\n<li><p>\u2018prefix_format\u2019 : \u2018+%s (%s)\u2019 first \u201c%s\u201d is country code second mobile operator or city code for example +995 (595) where 995 is my country code and 595 my mobile operator\u2019s code you can change formatting fore example \u2018[%s] [%s]\u2019 will give [995] [595] this result</p>\n</li>\n</ul>\n<p>with this simple tag you can specify format inline</p>\n<pre><span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"n\">phone_number</span> <span class=\"n\">number</span><span class=\"o\">.</span><span class=\"n\">phone_number</span> <span class=\"n\">pattern</span><span class=\"o\">=</span><span class=\"s1\">'(</span><span class=\"se\">\\\\</span><span class=\"s1\">d</span><span class=\"si\">{3}</span><span class=\"s1\">)(</span><span class=\"se\">\\\\</span><span class=\"s1\">d</span><span class=\"si\">{3}</span><span class=\"s1\">)(</span><span class=\"se\">\\\\</span><span class=\"s1\">d</span><span class=\"si\">{3}</span><span class=\"s1\">)'</span> <span class=\"n\">number_format</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\\\</span><span class=\"s1\">1 </span><span class=\"se\">\\\\</span><span class=\"s1\">2-</span><span class=\"se\">\\\\</span><span class=\"s1\">3'</span> <span class=\"n\">prefix_format</span><span class=\"o\">=</span><span class=\"s1\">'+</span><span class=\"si\">%s</span><span class=\"s1\"> (</span><span class=\"si\">%s</span><span class=\"s1\">)'</span> <span class=\"o\">%</span><span class=\"p\">}</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1666790, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "1400f631d7c1392069a7da7626568afe", "sha256": "cd617e4ee924f6492e0106d738fea619c95f3659e41dbeb97df83c1f3b51f453"}, "downloads": -1, "filename": "django_phonenumbers-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1400f631d7c1392069a7da7626568afe", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 2551270, "upload_time": "2015-08-06T10:45:17", "upload_time_iso_8601": "2015-08-06T10:45:17.307174Z", "url": "https://files.pythonhosted.org/packages/3d/8e/ad888a32f8ed14cf660ea1160f077a729735e93d493767691b0e4e8edb77/django_phonenumbers-1.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1400f631d7c1392069a7da7626568afe", "sha256": "cd617e4ee924f6492e0106d738fea619c95f3659e41dbeb97df83c1f3b51f453"}, "downloads": -1, "filename": "django_phonenumbers-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1400f631d7c1392069a7da7626568afe", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 2551270, "upload_time": "2015-08-06T10:45:17", "upload_time_iso_8601": "2015-08-06T10:45:17.307174Z", "url": "https://files.pythonhosted.org/packages/3d/8e/ad888a32f8ed14cf660ea1160f077a729735e93d493767691b0e4e8edb77/django_phonenumbers-1.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:55:03 2020"}