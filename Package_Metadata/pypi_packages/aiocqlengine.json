{"info": {"author": "Darren", "author_email": "charact3@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# aiocqlengine\nAsync wrapper for cqlengine of cassandra python driver.\n\nThis project is built on [cassandra-python-driver](https://github.com/datastax/python-driver) and [aiocassandra](https://github.com/aio-libs/aiocassandra).\n\n[![Actions Status](https://github.com/charact3/aiocqlengine/workflows/unittest/badge.svg)](https://github.com/charact3/aiocqlengine/actions)\n\n## Installation\n```sh\n$ pip install aiocqlengine\n```\n\n## Get Started\n\n```python\nimport asyncio\nimport uuid\nimport os\n\nfrom aiocassandra import aiosession\nfrom aiocqlengine.models import AioModel\nfrom cassandra.cluster import Cluster\nfrom cassandra.cqlengine import columns, connection, management\n\ncluster = Cluster()\nsession = cluster.connect()\n\n\nclass User(AioModel):\n    user_id = columns.UUID(primary_key=True)\n    username = columns.Text()\n\n\nasync def main():\n    aiosession(session)\n\n    # Set aiosession for cqlengine\n    session.set_keyspace('example_keyspace')\n    connection.set_session(session)\n\n    # Model.objects.create() and Model.create() in async way:\n    user_id = uuid.uuid4()\n    await User.objects.async_create(user_id=user_id, username='user1')\n    # also can use: await User.async_create(user_id=user_id, username='user1)\n\n    # Model.objects.all() and Model.all() in async way:\n    print(list(await User.async_all()))\n    print(list(await User.objects.filter(user_id=user_id).async_all()))\n\n    # Model.object.update() in async way:\n    await User.objects(user_id=user_id).async_update(username='updated-user1')\n\n    # Model.objects.get() and Model.get() in async way:\n    user = await User.objects.async_get(user_id=user_id)\n    assert user.user_id == (await User.async_get(user_id=user_id)).user_id\n    print(user, user.username)\n\n    # obj.save() in async way:\n    user.username = 'saved-user1'\n    await user.async_save()\n\n    # obj.delete() in async way:\n    await user.async_delete()\n\n    # Didn't break original functions\n    print('Left users: ', len(User.objects.all()))\n\n\ndef create_keyspace(keyspace):\n    os.environ['CQLENG_ALLOW_SCHEMA_MANAGEMENT'] = 'true'\n    connection.register_connection('cqlengine', session=session, default=True)\n    management.create_keyspace_simple(keyspace, replication_factor=1)\n    management.sync_table(User, keyspaces=[keyspace])\n\n\ncreate_keyspace('example_keyspace')\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\ncluster.shutdown()\nloop.close()\n\n```\n\n\n## License\nThis project is under MIT license.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "Darren", "maintainer_email": "charact3@gmail.com", "name": "aiocqlengine", "package_url": "https://pypi.org/project/aiocqlengine/", "platform": "", "project_url": "https://pypi.org/project/aiocqlengine/", "project_urls": null, "release_url": "https://pypi.org/project/aiocqlengine/0.1.1/", "requires_dist": ["cassandra-driver (>=3.20,<4.0)", "aiocassandra (>=2.0,<3.0)"], "requires_python": ">=3.6,<4.0", "summary": "Async wrapper for cqlengine of cassandra python driver.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aiocqlengine</h1>\n<p>Async wrapper for cqlengine of cassandra python driver.</p>\n<p>This project is built on <a href=\"https://github.com/datastax/python-driver\" rel=\"nofollow\">cassandra-python-driver</a> and <a href=\"https://github.com/aio-libs/aiocassandra\" rel=\"nofollow\">aiocassandra</a>.</p>\n<p><a href=\"https://github.com/charact3/aiocqlengine/actions\" rel=\"nofollow\"><img alt=\"Actions Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ae6d5008c426bbef2cc5425a035dc7c7a931337/68747470733a2f2f6769746875622e636f6d2f63686172616374332f61696f63716c656e67696e652f776f726b666c6f77732f756e6974746573742f62616467652e737667\"></a></p>\n<h2>Installation</h2>\n<pre>$ pip install aiocqlengine\n</pre>\n<h2>Get Started</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">uuid</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aiocassandra</span> <span class=\"kn\">import</span> <span class=\"n\">aiosession</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiocqlengine.models</span> <span class=\"kn\">import</span> <span class=\"n\">AioModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cassandra.cluster</span> <span class=\"kn\">import</span> <span class=\"n\">Cluster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cassandra.cqlengine</span> <span class=\"kn\">import</span> <span class=\"n\">columns</span><span class=\"p\">,</span> <span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"n\">management</span>\n\n<span class=\"n\">cluster</span> <span class=\"o\">=</span> <span class=\"n\">Cluster</span><span class=\"p\">()</span>\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">cluster</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">AioModel</span><span class=\"p\">):</span>\n    <span class=\"n\">user_id</span> <span class=\"o\">=</span> <span class=\"n\">columns</span><span class=\"o\">.</span><span class=\"n\">UUID</span><span class=\"p\">(</span><span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">columns</span><span class=\"o\">.</span><span class=\"n\">Text</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">aiosession</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Set aiosession for cqlengine</span>\n    <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">set_keyspace</span><span class=\"p\">(</span><span class=\"s1\">'example_keyspace'</span><span class=\"p\">)</span>\n    <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">set_session</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Model.objects.create() and Model.create() in async way:</span>\n    <span class=\"n\">user_id</span> <span class=\"o\">=</span> <span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">uuid4</span><span class=\"p\">()</span>\n    <span class=\"k\">await</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">async_create</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"n\">user_id</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'user1'</span><span class=\"p\">)</span>\n    <span class=\"c1\"># also can use: await User.async_create(user_id=user_id, username='user1)</span>\n\n    <span class=\"c1\"># Model.objects.all() and Model.all() in async way:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">async_all</span><span class=\"p\">()))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"n\">user_id</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">async_all</span><span class=\"p\">()))</span>\n\n    <span class=\"c1\"># Model.object.update() in async way:</span>\n    <span class=\"k\">await</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"n\">user_id</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">async_update</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'updated-user1'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Model.objects.get() and Model.get() in async way:</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">async_get</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"n\">user_id</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">user_id</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">async_get</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"n\">user_id</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">user_id</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">username</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># obj.save() in async way:</span>\n    <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"s1\">'saved-user1'</span>\n    <span class=\"k\">await</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">async_save</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># obj.delete() in async way:</span>\n    <span class=\"k\">await</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">async_delete</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Didn't break original functions</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Left users: '</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()))</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">create_keyspace</span><span class=\"p\">(</span><span class=\"n\">keyspace</span><span class=\"p\">):</span>\n    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">'CQLENG_ALLOW_SCHEMA_MANAGEMENT'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'true'</span>\n    <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">register_connection</span><span class=\"p\">(</span><span class=\"s1\">'cqlengine'</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">management</span><span class=\"o\">.</span><span class=\"n\">create_keyspace_simple</span><span class=\"p\">(</span><span class=\"n\">keyspace</span><span class=\"p\">,</span> <span class=\"n\">replication_factor</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">management</span><span class=\"o\">.</span><span class=\"n\">sync_table</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">,</span> <span class=\"n\">keyspaces</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">keyspace</span><span class=\"p\">])</span>\n\n\n<span class=\"n\">create_keyspace</span><span class=\"p\">(</span><span class=\"s1\">'example_keyspace'</span><span class=\"p\">)</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n<span class=\"n\">cluster</span><span class=\"o\">.</span><span class=\"n\">shutdown</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<h2>License</h2>\n<p>This project is under MIT license.</p>\n\n          </div>"}, "last_serial": 6073152, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b2f71c3e7033e3607d0a507d1053700f", "sha256": "d088761a8f2bf7c219f548f77a53f136ec93c899698db6e2282cef8fbd7bda38"}, "downloads": -1, "filename": "aiocqlengine-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b2f71c3e7033e3607d0a507d1053700f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 1063, "upload_time": "2019-11-03T10:59:51", "upload_time_iso_8601": "2019-11-03T10:59:51.781347Z", "url": "https://files.pythonhosted.org/packages/80/0f/bd43210045d12f03076155a9a2b25a4a2bc19c63c0513b7fd107f87b7d51/aiocqlengine-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "617efe5ec754d09f38a45778ad13a7d1", "sha256": "a1d3a58ca261d78383dd4fda52dfdceafb9758825828c614c416f0b0b769989d"}, "downloads": -1, "filename": "aiocqlengine-0.0.1.tar.gz", "has_sig": false, "md5_digest": "617efe5ec754d09f38a45778ad13a7d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 813, "upload_time": "2019-11-03T10:59:54", "upload_time_iso_8601": "2019-11-03T10:59:54.188922Z", "url": "https://files.pythonhosted.org/packages/f2/73/e296e0d260363e54036d889c93be3770e750739b1a3f1ee532afc5a996da/aiocqlengine-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "6b8f161d85508d9c7e810d5421d5e997", "sha256": "07a7c932ce7212900d31a2170680edfd3c15110b3491956e8a6d876e2390c8f0"}, "downloads": -1, "filename": "aiocqlengine-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6b8f161d85508d9c7e810d5421d5e997", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6544, "upload_time": "2019-11-04T04:49:14", "upload_time_iso_8601": "2019-11-04T04:49:14.094730Z", "url": "https://files.pythonhosted.org/packages/57/76/5322f9a2eb89cb387b085436dead709ec1e78690ea71fb86177e41a747bb/aiocqlengine-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc2b7d6955318aaf23a2cf3c0482b301", "sha256": "2185761193fe02576fb4b9d024f7fa937ea49f4993aca9c5860da155cf953255"}, "downloads": -1, "filename": "aiocqlengine-0.1.0.tar.gz", "has_sig": false, "md5_digest": "dc2b7d6955318aaf23a2cf3c0482b301", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 5739, "upload_time": "2019-11-04T04:49:15", "upload_time_iso_8601": "2019-11-04T04:49:15.550873Z", "url": "https://files.pythonhosted.org/packages/1b/8e/c769a69bcf02574b315e6d49c2fc8631eb2f9243e98a5c9f2382e86c9095/aiocqlengine-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "74a6a5d83a1022e37fd851d9068fd6aa", "sha256": "8dd4abef9de45dc01b28c84607015a1fe5e8e215629fc854c127bcade249c677"}, "downloads": -1, "filename": "aiocqlengine-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "74a6a5d83a1022e37fd851d9068fd6aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 8302, "upload_time": "2019-11-04T05:00:12", "upload_time_iso_8601": "2019-11-04T05:00:12.907546Z", "url": "https://files.pythonhosted.org/packages/cf/9a/c8b32d7e2f2acf4b601048479d8062a1cb658508660cc49ab8385ee69910/aiocqlengine-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c466e2a112ac4f8a3138839f79c10c92", "sha256": "7e8de5e7361d1858861ca17fbf0571bc31499c8ea6e55061e200c9ad14f132f5"}, "downloads": -1, "filename": "aiocqlengine-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c466e2a112ac4f8a3138839f79c10c92", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 7971, "upload_time": "2019-11-04T05:00:14", "upload_time_iso_8601": "2019-11-04T05:00:14.890449Z", "url": "https://files.pythonhosted.org/packages/13/72/c41bbcc6d3ec4144d0f6a5b9f2514f4d755cf5a3ab3ad9eb343214e497cd/aiocqlengine-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "74a6a5d83a1022e37fd851d9068fd6aa", "sha256": "8dd4abef9de45dc01b28c84607015a1fe5e8e215629fc854c127bcade249c677"}, "downloads": -1, "filename": "aiocqlengine-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "74a6a5d83a1022e37fd851d9068fd6aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 8302, "upload_time": "2019-11-04T05:00:12", "upload_time_iso_8601": "2019-11-04T05:00:12.907546Z", "url": "https://files.pythonhosted.org/packages/cf/9a/c8b32d7e2f2acf4b601048479d8062a1cb658508660cc49ab8385ee69910/aiocqlengine-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c466e2a112ac4f8a3138839f79c10c92", "sha256": "7e8de5e7361d1858861ca17fbf0571bc31499c8ea6e55061e200c9ad14f132f5"}, "downloads": -1, "filename": "aiocqlengine-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c466e2a112ac4f8a3138839f79c10c92", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 7971, "upload_time": "2019-11-04T05:00:14", "upload_time_iso_8601": "2019-11-04T05:00:14.890449Z", "url": "https://files.pythonhosted.org/packages/13/72/c41bbcc6d3ec4144d0f6a5b9f2514f4d755cf5a3ab3ad9eb343214e497cd/aiocqlengine-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:41 2020"}