{"info": {"author": "Roger D. Serwy", "author_email": "roger.serwy@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License"], "description": "# axclf\n\nSave/restore Matplotlib axes limits during iterative and interactive\ndevelopment.\n\n## Background\nThis functionality becomes useful when using cell-mode functionality\nin editors such as IdleX, Spyder, IEP, etc. During algorithm prototyping,\nplots are generated. These helper routines allow for inspecting a\nregion of interest on a plot, and then running a change to see its effects\nwithout needing to re-zoom/pan to the region of interest.\n\n## Example\n\n```\nfrom pylab import *\nfrom axclf import *\nion()\n\n## interactive cell\nfigure(1)\naxclf()  # save axes limits and clear figure\n\nex = 6  # adjust this number when re-running, (CTRL+Plus in IdleX)\n\nx = linspace(0, 10, 1000)\ny = sin(x) ** ex\nplot(x, y)\n\naxrestore()  # restore axes limits\n\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/serwy/axclf", "keywords": "matplotlib", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "axclf", "package_url": "https://pypi.org/project/axclf/", "platform": "Windows", "project_url": "https://pypi.org/project/axclf/", "project_urls": {"Homepage": "http://github.com/serwy/axclf"}, "release_url": "https://pypi.org/project/axclf/0.1.0.dev0/", "requires_dist": null, "requires_python": "", "summary": "save/restore plot limits", "version": "0.1.0.dev0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>axclf</h1>\n<p>Save/restore Matplotlib axes limits during iterative and interactive\ndevelopment.</p>\n<h2>Background</h2>\n<p>This functionality becomes useful when using cell-mode functionality\nin editors such as IdleX, Spyder, IEP, etc. During algorithm prototyping,\nplots are generated. These helper routines allow for inspecting a\nregion of interest on a plot, and then running a change to see its effects\nwithout needing to re-zoom/pan to the region of interest.</p>\n<h2>Example</h2>\n<pre><code>from pylab import *\nfrom axclf import *\nion()\n\n## interactive cell\nfigure(1)\naxclf()  # save axes limits and clear figure\n\nex = 6  # adjust this number when re-running, (CTRL+Plus in IdleX)\n\nx = linspace(0, 10, 1000)\ny = sin(x) ** ex\nplot(x, y)\n\naxrestore()  # restore axes limits\n\n</code></pre>\n\n          </div>"}, "last_serial": 4902713, "releases": {"0.1.0.dev0": [{"comment_text": "", "digests": {"md5": "c1b79dbc3604afbcc2778df1b9e5484f", "sha256": "7ec49d108ecf9689e50b85d7c8a28e2d77629453ce36367b41c2fd34601bb4c1"}, "downloads": -1, "filename": "axclf-0.1.0.dev0.zip", "has_sig": false, "md5_digest": "c1b79dbc3604afbcc2778df1b9e5484f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4629, "upload_time": "2019-03-06T00:21:31", "upload_time_iso_8601": "2019-03-06T00:21:31.649304Z", "url": "https://files.pythonhosted.org/packages/7c/51/3bfdd6f9c1a32d3c4b7826daf4dbb621e4aa93741400e1fd2acd8a0bdfc4/axclf-0.1.0.dev0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c1b79dbc3604afbcc2778df1b9e5484f", "sha256": "7ec49d108ecf9689e50b85d7c8a28e2d77629453ce36367b41c2fd34601bb4c1"}, "downloads": -1, "filename": "axclf-0.1.0.dev0.zip", "has_sig": false, "md5_digest": "c1b79dbc3604afbcc2778df1b9e5484f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4629, "upload_time": "2019-03-06T00:21:31", "upload_time_iso_8601": "2019-03-06T00:21:31.649304Z", "url": "https://files.pythonhosted.org/packages/7c/51/3bfdd6f9c1a32d3c4b7826daf4dbb621e4aa93741400e1fd2acd8a0bdfc4/axclf-0.1.0.dev0.zip", "yanked": false}], "timestamp": "Thu May  7 18:15:31 2020"}