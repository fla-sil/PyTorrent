{"info": {"author": "rikky", "author_email": "rikky@web.de", "bugtrack_url": null, "classifiers": [], "description": "# Boiler Logger for Remeha Tzerra\n\n## Features\n\nThis logger is meant to read data from a Remeha Boiler and distribute it to different backends.\nCurrently it only supports reading from a ***Remeha Tzerra*** and writing to a ***MQTT broker*** or a\n***CSV file***. It should be easy to add support for other Remeha Boilers.\n\nThere is an additional Python Script (plotlytest.py) which can read the csv file written by the\nlogger and render some nice diagrams. As the name suggests it uses Plotly to do interactive\ndiagrams and dash to distribute it with a simple webservice.\n\n## Installing\n\nYou need ***Python 3*** installed. There is a setup.py provided, which you could call directly or\neven better use \"pip\" to install:\n\n```\npip install <path to remeha_tz repository>\n```\n\nIf you don't need the plotly diagrams, You can remove the 'dash' and 'plotly' dependencies from\nsetup.py.\n## Usage\n\n```\nremeha.py -d /dev/ttyUSB0 --output test.csv\n```\n\nThis will start logging to the local mqtt broker with the topic 'boiler/' and the specified csv\nfile. See ```--help``` for more options.\n\n## Other useful information\n\nThe csv file contains the raw frame received from the boiler and not the decoded values. This\nis done because I'm not sure about the meaning of some of the values. By saving the raw frame\nwe don't loose any data and are able to decode them later. Also it makes supporting other\nboiler types more easy.\n\nTo convert the csv with raw values to csv with decoded values use the convert script:\n\n```\nremeha_convert.py --input-file <data csv> > converted.csv\n```\n\n## Hardware\n\nMost Remeha boiler use a simple serial connection with 5V TTL. If you have a Raspberry Pi, Arduino or similar, \nit can most likely be directly connected to the boiler. To connect it to 3.3V like a PC you need a TTL converter or \na TTL-USB converter. \nThe remeha tzerra uses a RJ10 aka. 4P4C connector. I've used a old phone cord to connect my Raspberry Pi clone to the\nboiler.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TheRikke/remeha_tz", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "remeha-tz", "package_url": "https://pypi.org/project/remeha-tz/", "platform": "", "project_url": "https://pypi.org/project/remeha-tz/", "project_urls": {"Homepage": "https://github.com/TheRikke/remeha_tz"}, "release_url": "https://pypi.org/project/remeha-tz/0.11/", "requires_dist": null, "requires_python": ">=3", "summary": "", "version": "0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Boiler Logger for Remeha Tzerra</h1>\n<h2>Features</h2>\n<p>This logger is meant to read data from a Remeha Boiler and distribute it to different backends.\nCurrently it only supports reading from a <em><strong>Remeha Tzerra</strong></em> and writing to a <em><strong>MQTT broker</strong></em> or a\n<em><strong>CSV file</strong></em>. It should be easy to add support for other Remeha Boilers.</p>\n<p>There is an additional Python Script (plotlytest.py) which can read the csv file written by the\nlogger and render some nice diagrams. As the name suggests it uses Plotly to do interactive\ndiagrams and dash to distribute it with a simple webservice.</p>\n<h2>Installing</h2>\n<p>You need <em><strong>Python 3</strong></em> installed. There is a setup.py provided, which you could call directly or\neven better use \"pip\" to install:</p>\n<pre><code>pip install &lt;path to remeha_tz repository&gt;\n</code></pre>\n<p>If you don't need the plotly diagrams, You can remove the 'dash' and 'plotly' dependencies from\nsetup.py.</p>\n<h2>Usage</h2>\n<pre><code>remeha.py -d /dev/ttyUSB0 --output test.csv\n</code></pre>\n<p>This will start logging to the local mqtt broker with the topic 'boiler/' and the specified csv\nfile. See <code>--help</code> for more options.</p>\n<h2>Other useful information</h2>\n<p>The csv file contains the raw frame received from the boiler and not the decoded values. This\nis done because I'm not sure about the meaning of some of the values. By saving the raw frame\nwe don't loose any data and are able to decode them later. Also it makes supporting other\nboiler types more easy.</p>\n<p>To convert the csv with raw values to csv with decoded values use the convert script:</p>\n<pre><code>remeha_convert.py --input-file &lt;data csv&gt; &gt; converted.csv\n</code></pre>\n<h2>Hardware</h2>\n<p>Most Remeha boiler use a simple serial connection with 5V TTL. If you have a Raspberry Pi, Arduino or similar,\nit can most likely be directly connected to the boiler. To connect it to 3.3V like a PC you need a TTL converter or\na TTL-USB converter.\nThe remeha tzerra uses a RJ10 aka. 4P4C connector. I've used a old phone cord to connect my Raspberry Pi clone to the\nboiler.</p>\n\n          </div>"}, "last_serial": 6020098, "releases": {"0.11": [{"comment_text": "", "digests": {"md5": "8f7d7d768b8013b4660d272b8062e57e", "sha256": "ea6dce25474a74886ac7d587e142b86fe50e244581f2e6233a6e120617c280ee"}, "downloads": -1, "filename": "remeha_tz-0.11.tar.gz", "has_sig": false, "md5_digest": "8f7d7d768b8013b4660d272b8062e57e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 16529, "upload_time": "2019-10-23T18:57:51", "upload_time_iso_8601": "2019-10-23T18:57:51.627889Z", "url": "https://files.pythonhosted.org/packages/f7/3c/46329ec2174b586218f7611d8091de9d5fb0ec239f635538cf68d5a07171/remeha_tz-0.11.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8f7d7d768b8013b4660d272b8062e57e", "sha256": "ea6dce25474a74886ac7d587e142b86fe50e244581f2e6233a6e120617c280ee"}, "downloads": -1, "filename": "remeha_tz-0.11.tar.gz", "has_sig": false, "md5_digest": "8f7d7d768b8013b4660d272b8062e57e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 16529, "upload_time": "2019-10-23T18:57:51", "upload_time_iso_8601": "2019-10-23T18:57:51.627889Z", "url": "https://files.pythonhosted.org/packages/f7/3c/46329ec2174b586218f7611d8091de9d5fb0ec239f635538cf68d5a07171/remeha_tz-0.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:55 2020"}