{"info": {"author": "Filip Krikava", "author_email": "krikava@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "#Help on module kuler:\n\n###NAME\n    kuler - Unofficial API for Adobe Kuler service (kuler.adobe.com).\n\n###FILE\n    /Users/krikava/Documents/Projects/pykuler/src/kuler.py\n\n###DESCRIPTION\n    Sample example that prints out TOP 10 themes sorted by raiting (default)\n    \n    k = Kuler(apiKey)\n    for (i, theme) in enumerate(k.list(maxItems=10)):\n        print '%d. %s' % (i, theme)\n    \n    More information: http://learn.adobe.com/wiki/display/kulerdev/B.+Feeds\n\n###CLASSES\n     Color\n     Kuler\n     Theme\n    \n     class Color\n     |  Class wrapping an RGB color\n     |  \n     |  Methods defined here:\n     |  \n     |  __init__(self, r, g, b)\n     |  \n     |  __str__(self)\n     |  \n     |  asRGB(self)\n     |  \n     |  asRGB16(self)\n     |  \n     |  ----------------------------------------------------------------------\n     |  Class methods defined here:\n     |  \n     |  fromHexRGB(cls, hexrgb) from __builtin__.classobj\n     |      Factory method that creates a Color instance from HTML like color string\n     |      #rrggbb with 8 or 16 bit.\n     |  \n     |  fromRGB(cls, r, g, b) from __builtin__.classobj\n    \n    class Kuler\n     |  Facade of the Kuler API\n     |  \n     |  Methods defined here:\n     |  \n     |  __init__(self, apiKey)\n     |      apiKey: Mandatory. API key obtained from the Kuler service. (You can\n     |      get it from http://kuler.adobe.com/api)\n     |  \n     |  list(self, listType='raiting', startIndex=0, itemsPerPage=20, timeSpan=0, maxItems=100)\n     |      Returns a generator of themes from a feeds of a specified type. \n     |      \n     |      listType: Optional. One of the strings recent (the default), popular,\n     |      rating, or random.\n     |      \n     |      startIndex: Optional. A 0-based index into the list that specifies the\n     |      first item to display. Default is 0, which displays the first item in\n     |      the list.\n     |      \n     |      itemsPerPage: Optional. The maximum number of items to display on a\n     |      page, in the range 1..100. Default is 20.\n     |      \n     |      timeSpan: Optional. Value in days to limit the set of themes retrieved.\n     |      Default is 0, which retrieves all themes without time limit.  \n     |      \n     |      maxItems: Optional. The number of items returned at most.\n     |  \n     |  search(self, themeID=None, userID=None, email=None, tag=None, hex=None, title=None, startIndex=0, itemsPerPage=20, maxItems=100)\n     |      Returns a generator of themes from a feeds that meet specified search criteria.\n     |      \n     |      Caller needs to specify one of the following parameter:\n     |      themeID: search on a specific themeID\n     |      userID: search on a specific userID\n     |      email: search on a specific email\n     |      tag: search on a tag word\n     |      hex: search on a hex color value (can be in the format \"ABCDEF\" or \"0xABCDEF\")\n     |      title: search on a theme title\n     |      \n     |      startIndex: Optional. A 0-based index into the list that specifies the\n     |      first item to display. Default is 0, which displays the first item in\n     |      the list.\n     |      \n     |      itemsPerPage: Optional. The maximum number of items to display on a\n     |      page, in the range 1..100. Default is 20.\n     |      \n     |      maxItems: Optional. The number of items returned at most.\n    \n    class Theme\n     |  Class wrapping a Kuler theme.\n     |  \n     |  Properties:\n     |  title: theme title name\n     |  themeId: theme ID\n     |  colors: a tuple of Color instances in defined in the theme\n     |  \n     |  Methods defined here:\n     |  \n     |  __getitem__(self, index)\n     |  \n     |  __init__(self, themeID, title, colors)\n     |      colors: Mandatory. Parameter that is an iterable object containing Color instances.\n     |  \n     |  __iter__(self)\n     |  \n     |  __len__(self)\n     |  \n     |  __str__(self)\n     |  \n     |  items(self)\n\n###FUNCTIONS\n    main()\n        Sample example", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fikovnik/pykuler", "keywords": "colors kuler adobe", "license": "http://www.opensource.org/licenses/mit-license.php", "maintainer": null, "maintainer_email": null, "name": "pykuler", "package_url": "https://pypi.org/project/pykuler/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pykuler/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/fikovnik/pykuler"}, "release_url": "https://pypi.org/project/pykuler/1.2/", "requires_dist": null, "requires_python": null, "summary": "Unofficial Python API for Adobe Kuler.", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            #Help on module kuler:<br><br>###NAME<br>    kuler - Unofficial API for Adobe Kuler service (kuler.adobe.com).<br><br>###FILE<br>    /Users/krikava/Documents/Projects/pykuler/src/kuler.py<br><br>###DESCRIPTION<br>    Sample example that prints out TOP 10 themes sorted by raiting (default)<br>    <br>    k = Kuler(apiKey)<br>    for (i, theme) in enumerate(k.list(maxItems=10)):<br>        print '%d. %s' % (i, theme)<br>    <br>    More information: http://learn.adobe.com/wiki/display/kulerdev/B.+Feeds<br><br>###CLASSES<br>     Color<br>     Kuler<br>     Theme<br>    <br>     class Color<br>     |  Class wrapping an RGB color<br>     |  <br>     |  Methods defined here:<br>     |  <br>     |  __init__(self, r, g, b)<br>     |  <br>     |  __str__(self)<br>     |  <br>     |  asRGB(self)<br>     |  <br>     |  asRGB16(self)<br>     |  <br>     |  ----------------------------------------------------------------------<br>     |  Class methods defined here:<br>     |  <br>     |  fromHexRGB(cls, hexrgb) from __builtin__.classobj<br>     |      Factory method that creates a Color instance from HTML like color string<br>     |      #rrggbb with 8 or 16 bit.<br>     |  <br>     |  fromRGB(cls, r, g, b) from __builtin__.classobj<br>    <br>    class Kuler<br>     |  Facade of the Kuler API<br>     |  <br>     |  Methods defined here:<br>     |  <br>     |  __init__(self, apiKey)<br>     |      apiKey: Mandatory. API key obtained from the Kuler service. (You can<br>     |      get it from http://kuler.adobe.com/api)<br>     |  <br>     |  list(self, listType='raiting', startIndex=0, itemsPerPage=20, timeSpan=0, maxItems=100)<br>     |      Returns a generator of themes from a feeds of a specified type. <br>     |      <br>     |      listType: Optional. One of the strings recent (the default), popular,<br>     |      rating, or random.<br>     |      <br>     |      startIndex: Optional. A 0-based index into the list that specifies the<br>     |      first item to display. Default is 0, which displays the first item in<br>     |      the list.<br>     |      <br>     |      itemsPerPage: Optional. The maximum number of items to display on a<br>     |      page, in the range 1..100. Default is 20.<br>     |      <br>     |      timeSpan: Optional. Value in days to limit the set of themes retrieved.<br>     |      Default is 0, which retrieves all themes without time limit.  <br>     |      <br>     |      maxItems: Optional. The number of items returned at most.<br>     |  <br>     |  search(self, themeID=None, userID=None, email=None, tag=None, hex=None, title=None, startIndex=0, itemsPerPage=20, maxItems=100)<br>     |      Returns a generator of themes from a feeds that meet specified search criteria.<br>     |      <br>     |      Caller needs to specify one of the following parameter:<br>     |      themeID: search on a specific themeID<br>     |      userID: search on a specific userID<br>     |      email: search on a specific email<br>     |      tag: search on a tag word<br>     |      hex: search on a hex color value (can be in the format \"ABCDEF\" or \"0xABCDEF\")<br>     |      title: search on a theme title<br>     |      <br>     |      startIndex: Optional. A 0-based index into the list that specifies the<br>     |      first item to display. Default is 0, which displays the first item in<br>     |      the list.<br>     |      <br>     |      itemsPerPage: Optional. The maximum number of items to display on a<br>     |      page, in the range 1..100. Default is 20.<br>     |      <br>     |      maxItems: Optional. The number of items returned at most.<br>    <br>    class Theme<br>     |  Class wrapping a Kuler theme.<br>     |  <br>     |  Properties:<br>     |  title: theme title name<br>     |  themeId: theme ID<br>     |  colors: a tuple of Color instances in defined in the theme<br>     |  <br>     |  Methods defined here:<br>     |  <br>     |  __getitem__(self, index)<br>     |  <br>     |  __init__(self, themeID, title, colors)<br>     |      colors: Mandatory. Parameter that is an iterable object containing Color instances.<br>     |  <br>     |  __iter__(self)<br>     |  <br>     |  __len__(self)<br>     |  <br>     |  __str__(self)<br>     |  <br>     |  items(self)<br><br>###FUNCTIONS<br>    main()<br>        Sample example\n          </div>"}, "last_serial": 345474, "releases": {"1.0": [], "1.1": [], "1.2": []}, "urls": [], "timestamp": "Fri May  8 03:03:25 2020"}