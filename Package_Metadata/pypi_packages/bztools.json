{"info": {"author": "Jeff Balogh", "author_email": "me@jeffbalogh.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "This package currently uses `remoteobjects`_ models, Mozilla's `_ Bugzilla `REST API`_, and optionally the Mozilla LDAP `phonebook`_ (to access bug assignees' managers & Mozilla email addresses).\n\n.. _remoteobjects: http://sixapart.github.com/remoteobjects/\n.. _REST API: https://wiki.mozilla.org/Bugzilla:REST_API\n.. _phonebook: https://github.com/mozilla/mobile-phonebook\n\n\nInstallation\n------------\n\nCurrently, this package depends on a pre-release version of remoteobjects, so\nwe'll have to do this the long way.\n\n#. Check out the code::\n\n    git clone git://github.com/LegNeato/bztools.git\n\n#. (optional) Create your virtualenv using virtualenvwrapper::\n\n    mkvirtualenv --no-site-packages bztools\n\n#. Install pip::\n\n    easy_install pip\n\n#. Install the dependencies for bztools::\n\n    pip install -r requirements.txt\n\n#. Run setup.py so the scripts are installed to your bin directory::\n\n    python setup.py install\n\n\nNow you'll have ``bzattach`` installed in the ``/bin`` directory of your\nvirtual environment.  To use the script, you'll have to activate this\nenvironment with ``workon bztools``.\n\nNote to developers: if you make any changes to the bugzilla/ files (agents, models, utils) during\nwork on other scripts, you will want to re-install the scripts as instructed above in order to pick\nup changes\n\nUsage \n----------\n\nExample::\n\n    from bugzilla.agents import BMOAgent\n    from bugzilla.utils import get_credentials\n\n    # We can use \"None\" for both instead to not authenticate\n    username, password = get_credentials()\n\n    # Load our agent for BMO\n    bmo = BMOAgent(username, password)\n\n    # Set whatever REST API options we want\n    options = {\n        'changed_after':    '2010-12-24',\n        'changed_before':   '2010-12-26',\n        'changed_field':    'status',\n        'changed_field_to': 'RESOLVED',\n        'product':          'Core,Firefox',\n        'resolution':       'FIXED',\n        'include_fields':   '_default,attachments',\n    }\n\n    # Get the bugs from the api\n    buglist = bmo.get_bug_list(options)\n\n    print \"Found %s bugs\" % (len(buglist))\n\n    for bug in buglist:\n        print bug\n\nEmail Nag Script\n-------------------\nDo a dryrun::\n    python scripts/email_nag.py -d -q queries/tracking_firefox_12 -q queries/tracking_firefox_13\n\nYou can pass in several config files (examples in queries/) that should have the following information::\n    query_name\n    priority\n    query_{url,params}  (choose one format - see queries/ for examples of each)\n\nThe script does the following:\n* Gathers the current list of employees and managers from Mozilla LDAP phonebook \n** you will need a local config for phonebook auth with your LDAP info::\n    # in scripts/configs/config.json                                   \u25b8\u25b8\u25b8\u25b8\u25b8\u25b8\u25b8\u25b8\u25b8\u25b8\n    {\n        \"username\": \"you@mozilla.com\",\n        \"password\": \"xxxxxxxxxxxxxx\"\n    }\n* Polls the bugzilla API with each query supplied and builds a dictionary of bugs found per query\n* For each bug, finds the assignee and if possible the assignee's manager - then adds the bug to the manager's bug bucket for later email notification\n* Goes through the manager dictionary and contructs an email with the bugs assigned to that manager's team members\n* Outputs the message to console and waits for use input to either send/edit/cancel (save for manual notification)\n* At the end it provides a list of all bugs that were not emailed about and provides the url for bugzilla of that buglist", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/mozilla/bztools", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "bztools", "package_url": "https://pypi.org/project/bztools/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/bztools/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/mozilla/bztools"}, "release_url": "https://pypi.org/project/bztools/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Models and scripts to access the Bugzilla REST API.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            This package currently uses `remoteobjects`_ models, Mozilla's `_ Bugzilla `REST API`_, and optionally the Mozilla LDAP `phonebook`_ (to access bug assignees' managers &amp; Mozilla email addresses).<br><br>.. _remoteobjects: http://sixapart.github.com/remoteobjects/<br>.. _REST API: https://wiki.mozilla.org/Bugzilla:REST_API<br>.. _phonebook: https://github.com/mozilla/mobile-phonebook<br><br><br>Installation<br>------------<br><br>Currently, this package depends on a pre-release version of remoteobjects, so<br>we'll have to do this the long way.<br><br>#. Check out the code::<br><br>    git clone git://github.com/LegNeato/bztools.git<br><br>#. (optional) Create your virtualenv using virtualenvwrapper::<br><br>    mkvirtualenv --no-site-packages bztools<br><br>#. Install pip::<br><br>    easy_install pip<br><br>#. Install the dependencies for bztools::<br><br>    pip install -r requirements.txt<br><br>#. Run setup.py so the scripts are installed to your bin directory::<br><br>    python setup.py install<br><br><br>Now you'll have ``bzattach`` installed in the ``/bin`` directory of your<br>virtual environment.  To use the script, you'll have to activate this<br>environment with ``workon bztools``.<br><br>Note to developers: if you make any changes to the bugzilla/ files (agents, models, utils) during<br>work on other scripts, you will want to re-install the scripts as instructed above in order to pick<br>up changes<br><br>Usage <br>----------<br><br>Example::<br><br>    from bugzilla.agents import BMOAgent<br>    from bugzilla.utils import get_credentials<br><br>    # We can use \"None\" for both instead to not authenticate<br>    username, password = get_credentials()<br><br>    # Load our agent for BMO<br>    bmo = BMOAgent(username, password)<br><br>    # Set whatever REST API options we want<br>    options = {<br>        'changed_after':    '2010-12-24',<br>        'changed_before':   '2010-12-26',<br>        'changed_field':    'status',<br>        'changed_field_to': 'RESOLVED',<br>        'product':          'Core,Firefox',<br>        'resolution':       'FIXED',<br>        'include_fields':   '_default,attachments',<br>    }<br><br>    # Get the bugs from the api<br>    buglist = bmo.get_bug_list(options)<br><br>    print \"Found %s bugs\" % (len(buglist))<br><br>    for bug in buglist:<br>        print bug<br><br>Email Nag Script<br>-------------------<br>Do a dryrun::<br>    python scripts/email_nag.py -d -q queries/tracking_firefox_12 -q queries/tracking_firefox_13<br><br>You can pass in several config files (examples in queries/) that should have the following information::<br>    query_name<br>    priority<br>    query_{url,params}  (choose one format - see queries/ for examples of each)<br><br>The script does the following:<br>* Gathers the current list of employees and managers from Mozilla LDAP phonebook <br>** you will need a local config for phonebook auth with your LDAP info::<br>    # in scripts/configs/config.json                                   \u25b8\u25b8\u25b8\u25b8\u25b8\u25b8\u25b8\u25b8\u25b8\u25b8<br>    {<br>        \"username\": \"you@mozilla.com\",<br>        \"password\": \"xxxxxxxxxxxxxx\"<br>    }<br>* Polls the bugzilla API with each query supplied and builds a dictionary of bugs found per query<br>* For each bug, finds the assignee and if possible the assignee's manager - then adds the bug to the manager's bug bucket for later email notification<br>* Goes through the manager dictionary and contructs an email with the bugs assigned to that manager's team members<br>* Outputs the message to console and waits for use input to either send/edit/cancel (save for manual notification)<br>* At the end it provides a list of all bugs that were not emailed about and provides the url for bugzilla of that buglist\n          </div>"}, "last_serial": 787163, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "df4a2277b121cd0966826441e141b57d", "sha256": "cdcafcfb243279b3e0ce5781750476ee18e5b0831ee81e5548bf2ef61daff674"}, "downloads": -1, "filename": "bztools-0.0.1.tar.gz", "has_sig": false, "md5_digest": "df4a2277b121cd0966826441e141b57d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17234, "upload_time": "2013-03-28T16:33:52", "upload_time_iso_8601": "2013-03-28T16:33:52.175948Z", "url": "https://files.pythonhosted.org/packages/39/25/6d8ae502f250d98772144f22203feddb2627d780b2f15d5f922d6ab6de2c/bztools-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "bf1d3a84a29de66ff8d162b6196dfcef", "sha256": "86357085f7e0dced6e18592da4d6e349bf40a9a882710cbdcc231e9da8d96dc5"}, "downloads": -1, "filename": "bztools-0.0.2.tar.gz", "has_sig": false, "md5_digest": "bf1d3a84a29de66ff8d162b6196dfcef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17695, "upload_time": "2013-03-28T18:39:03", "upload_time_iso_8601": "2013-03-28T18:39:03.971503Z", "url": "https://files.pythonhosted.org/packages/56/86/aa204e8f680ee73979045c3d2c3b49b672f0db5bc6ac92746eb684cec0a1/bztools-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bf1d3a84a29de66ff8d162b6196dfcef", "sha256": "86357085f7e0dced6e18592da4d6e349bf40a9a882710cbdcc231e9da8d96dc5"}, "downloads": -1, "filename": "bztools-0.0.2.tar.gz", "has_sig": false, "md5_digest": "bf1d3a84a29de66ff8d162b6196dfcef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17695, "upload_time": "2013-03-28T18:39:03", "upload_time_iso_8601": "2013-03-28T18:39:03.971503Z", "url": "https://files.pythonhosted.org/packages/56/86/aa204e8f680ee73979045c3d2c3b49b672f0db5bc6ac92746eb684cec0a1/bztools-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:49 2020"}