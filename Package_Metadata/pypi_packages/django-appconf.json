{"info": {"author": "Jannis Leidel", "author_email": "jannis@leidel.info", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Utilities"], "description": "django-appconf\n==============\n\n.. image:: http://codecov.io/github/django-compressor/django-appconf/coverage.svg?branch=develop\n    :alt: Code Coverage\n    :target: http://codecov.io/github/django-compressor/django-appconf?branch=develop\n\n.. image:: https://secure.travis-ci.org/django-compressor/django-appconf.svg?branch=develop\n    :alt: Build Status\n    :target: http://travis-ci.org/django-compressor/django-appconf\n\nA helper class for handling configuration defaults of packaged Django\napps gracefully.\n\n.. note::\n\n    This app precedes Django's own AppConfig_ classes that act as\n    \"objects [to] store metadata for an application\" inside Django's\n    app loading mechanism. In other words, they solve a related but\n    different use case than django-appconf and can't easily be used\n    as a replacement. The similarity in name is purely coincidental.\n\n.. _AppConfig: https://docs.djangoproject.com/en/stable/ref/applications/#django.apps.AppConfig\n\nOverview\n--------\n\nSay you have an app called ``myapp`` with a few defaults, which you want\nto refer to in the app's code without repeating yourself all the time.\n``appconf`` provides a simple class to implement those defaults. Simply add\nsomething like the following code somewhere in your app files:\n\n.. code-block:: python\n\n    from appconf import AppConf\n\n    class MyAppConf(AppConf):\n        SETTING_1 = \"one\"\n        SETTING_2 = (\n            \"two\",\n        )\n\n.. note::\n\n    ``AppConf`` classes depend on being imported during startup of the Django\n    process. Even though there are multiple modules loaded automatically,\n    only the ``models`` modules (usually the ``models.py`` file of your\n    app) are guaranteed to be loaded at startup. Therefore it's recommended\n    to put your ``AppConf`` subclass(es) there, too.\n\nThe settings are initialized with the capitalized app label of where the\nsetting is located at. E.g. if your ``models.py`` with the ``AppConf`` class\nis in the ``myapp`` package, the prefix of the settings will be ``MYAPP``.\n\nYou can override the default prefix by specifying a ``prefix`` attribute of\nan inner ``Meta`` class:\n\n.. code-block:: python\n\n    from appconf import AppConf\n\n    class AcmeAppConf(AppConf):\n        SETTING_1 = \"one\"\n        SETTING_2 = (\n            \"two\",\n        )\n\n        class Meta:\n            prefix = 'acme'\n\nThe ``MyAppConf`` class will automatically look at Django's global settings\nto determine if you've overridden it. For example, adding this to your site's\n``settings.py`` would override ``SETTING_1`` of the above ``MyAppConf``:\n\n.. code-block:: python\n\n    ACME_SETTING_1 = \"uno\"\n\nIn case you want to use a different settings object instead of the default\n``'django.conf.settings'``, set the ``holder`` attribute of the inner\n``Meta`` class to a dotted import path:\n\n.. code-block:: python\n\n    from appconf import AppConf\n\n    class MyAppConf(AppConf):\n        SETTING_1 = \"one\"\n        SETTING_2 = (\n            \"two\",\n        )\n\n        class Meta:\n            prefix = 'acme'\n            holder = 'acme.conf.settings'\n\nIf you ship an ``AppConf`` class with your reusable Django app, it's\nrecommended to put it in a ``conf.py`` file of your app package and\nimport ``django.conf.settings`` in it, too:\n\n.. code-block:: python\n\n    from django.conf import settings\n    from appconf import AppConf\n\n    class MyAppConf(AppConf):\n        SETTING_1 = \"one\"\n        SETTING_2 = (\n            \"two\",\n        )\n\nIn the other files of your app you can easily make sure the settings\nare correctly loaded if you import Django's settings object from that\nmodule, e.g. in your app's ``views.py``:\n\n.. code-block:: python\n\n    from django.http import HttpResponse\n    from myapp.conf import settings\n\n    def index(request):\n        text = 'Setting 1 is: %s' % settings.MYAPP_SETTING_1\n        return HttpResponse(text)\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://django-appconf.readthedocs.io/", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "django-appconf", "package_url": "https://pypi.org/project/django-appconf/", "platform": "", "project_url": "https://pypi.org/project/django-appconf/", "project_urls": {"Homepage": "https://django-appconf.readthedocs.io/", "Source": "https://github.com/django-compressor/django-appconf"}, "release_url": "https://pypi.org/project/django-appconf/1.0.4/", "requires_dist": ["django"], "requires_python": "", "summary": "A helper class for handling configuration defaults of packaged apps gracefully.", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://codecov.io/github/django-compressor/django-appconf?branch=develop\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0721f6cf53269784bab92daebc2c242ab8cc5b4/687474703a2f2f636f6465636f762e696f2f6769746875622f646a616e676f2d636f6d70726573736f722f646a616e676f2d617070636f6e662f636f7665726167652e7376673f6272616e63683d646576656c6f70\"></a>\n<a href=\"http://travis-ci.org/django-compressor/django-appconf\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ff23c3144cd2c04d7162daa9ec4d54f1b24eee9/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f646a616e676f2d636f6d70726573736f722f646a616e676f2d617070636f6e662e7376673f6272616e63683d646576656c6f70\"></a>\n<p>A helper class for handling configuration defaults of packaged Django\napps gracefully.</p>\n<div>\n<p>Note</p>\n<p>This app precedes Django\u2019s own <a href=\"https://docs.djangoproject.com/en/stable/ref/applications/#django.apps.AppConfig\" rel=\"nofollow\">AppConfig</a> classes that act as\n\u201cobjects [to] store metadata for an application\u201d inside Django\u2019s\napp loading mechanism. In other words, they solve a related but\ndifferent use case than django-appconf and can\u2019t easily be used\nas a replacement. The similarity in name is purely coincidental.</p>\n</div>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>Say you have an app called <tt>myapp</tt> with a few defaults, which you want\nto refer to in the app\u2019s code without repeating yourself all the time.\n<tt>appconf</tt> provides a simple class to implement those defaults. Simply add\nsomething like the following code somewhere in your app files:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">appconf</span> <span class=\"kn\">import</span> <span class=\"n\">AppConf</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyAppConf</span><span class=\"p\">(</span><span class=\"n\">AppConf</span><span class=\"p\">):</span>\n    <span class=\"n\">SETTING_1</span> <span class=\"o\">=</span> <span class=\"s2\">\"one\"</span>\n    <span class=\"n\">SETTING_2</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"s2\">\"two\"</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n</pre>\n<div>\n<p>Note</p>\n<p><tt>AppConf</tt> classes depend on being imported during startup of the Django\nprocess. Even though there are multiple modules loaded automatically,\nonly the <tt>models</tt> modules (usually the <tt>models.py</tt> file of your\napp) are guaranteed to be loaded at startup. Therefore it\u2019s recommended\nto put your <tt>AppConf</tt> subclass(es) there, too.</p>\n</div>\n<p>The settings are initialized with the capitalized app label of where the\nsetting is located at. E.g. if your <tt>models.py</tt> with the <tt>AppConf</tt> class\nis in the <tt>myapp</tt> package, the prefix of the settings will be <tt>MYAPP</tt>.</p>\n<p>You can override the default prefix by specifying a <tt>prefix</tt> attribute of\nan inner <tt>Meta</tt> class:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">appconf</span> <span class=\"kn\">import</span> <span class=\"n\">AppConf</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">AcmeAppConf</span><span class=\"p\">(</span><span class=\"n\">AppConf</span><span class=\"p\">):</span>\n    <span class=\"n\">SETTING_1</span> <span class=\"o\">=</span> <span class=\"s2\">\"one\"</span>\n    <span class=\"n\">SETTING_2</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"s2\">\"two\"</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"s1\">'acme'</span>\n</pre>\n<p>The <tt>MyAppConf</tt> class will automatically look at Django\u2019s global settings\nto determine if you\u2019ve overridden it. For example, adding this to your site\u2019s\n<tt>settings.py</tt> would override <tt>SETTING_1</tt> of the above <tt>MyAppConf</tt>:</p>\n<pre><span class=\"n\">ACME_SETTING_1</span> <span class=\"o\">=</span> <span class=\"s2\">\"uno\"</span>\n</pre>\n<p>In case you want to use a different settings object instead of the default\n<tt>'django.conf.settings'</tt>, set the <tt>holder</tt> attribute of the inner\n<tt>Meta</tt> class to a dotted import path:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">appconf</span> <span class=\"kn\">import</span> <span class=\"n\">AppConf</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyAppConf</span><span class=\"p\">(</span><span class=\"n\">AppConf</span><span class=\"p\">):</span>\n    <span class=\"n\">SETTING_1</span> <span class=\"o\">=</span> <span class=\"s2\">\"one\"</span>\n    <span class=\"n\">SETTING_2</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"s2\">\"two\"</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"s1\">'acme'</span>\n        <span class=\"n\">holder</span> <span class=\"o\">=</span> <span class=\"s1\">'acme.conf.settings'</span>\n</pre>\n<p>If you ship an <tt>AppConf</tt> class with your reusable Django app, it\u2019s\nrecommended to put it in a <tt>conf.py</tt> file of your app package and\nimport <tt>django.conf.settings</tt> in it, too:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">appconf</span> <span class=\"kn\">import</span> <span class=\"n\">AppConf</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyAppConf</span><span class=\"p\">(</span><span class=\"n\">AppConf</span><span class=\"p\">):</span>\n    <span class=\"n\">SETTING_1</span> <span class=\"o\">=</span> <span class=\"s2\">\"one\"</span>\n    <span class=\"n\">SETTING_2</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"s2\">\"two\"</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>In the other files of your app you can easily make sure the settings\nare correctly loaded if you import Django\u2019s settings object from that\nmodule, e.g. in your app\u2019s <tt>views.py</tt>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">HttpResponse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">myapp.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s1\">'Setting 1 is: </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">MYAPP_SETTING_1</span>\n    <span class=\"k\">return</span> <span class=\"n\">HttpResponse</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6920043, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "8fb356b81a06dfa9cede1b1c79d62fd1", "sha256": "162794402510e6adb091369d792ddb7e7fb7b9ce809ec5293647cefa499658a1"}, "downloads": -1, "filename": "django-appconf-0.4.tar.gz", "has_sig": true, "md5_digest": "8fb356b81a06dfa9cede1b1c79d62fd1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4652, "upload_time": "2015-02-16T18:33:23", "upload_time_iso_8601": "2015-02-16T18:33:23.085090Z", "url": "https://files.pythonhosted.org/packages/1b/47/82baa01121fbf6bb225b459bdfb006ad1ab68ae2443c4208e2a7761b2add/django-appconf-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "1be8c2944b89d901fa34af14b1c38ff4", "sha256": "90cf764c4b5c849a75c77a0ba87a069e0c57bbd0c5ee73c9f7427ac74e1ed1c5"}, "downloads": -1, "filename": "django-appconf-0.4.1.tar.gz", "has_sig": true, "md5_digest": "1be8c2944b89d901fa34af14b1c38ff4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12370, "upload_time": "2015-02-16T18:33:37", "upload_time_iso_8601": "2015-02-16T18:33:37.539078Z", "url": "https://files.pythonhosted.org/packages/4c/ec/273c3988874d63cb9ca4fefa071f4bb1643fbd0d836238ca0ffdf03966d2/django-appconf-0.4.1.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "af577a2edf94123df47077cd5c8cf2e9", "sha256": "bd80ed905d343b36785a2a01f5592e04a757ef1518d90db9150e9edae881203a"}, "downloads": -1, "filename": "django-appconf-0.5.tar.gz", "has_sig": true, "md5_digest": "af577a2edf94123df47077cd5c8cf2e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14976, "upload_time": "2015-02-16T18:27:57", "upload_time_iso_8601": "2015-02-16T18:27:57.887013Z", "url": "https://files.pythonhosted.org/packages/c5/e6/d5249a966f0e76457dc8b4ee407de2069ce76a325512000d6e7497ae950e/django-appconf-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "6971f6c9df6b5213797578fecc1845d7", "sha256": "06b64baf26c7a436cbb81464e7a50047aea30db1059dbe6e09dc443efa23ba20"}, "downloads": -1, "filename": "django-appconf-0.6.tar.gz", "has_sig": true, "md5_digest": "6971f6c9df6b5213797578fecc1845d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15956, "upload_time": "2015-02-16T18:27:04", "upload_time_iso_8601": "2015-02-16T18:27:04.884124Z", "url": "https://files.pythonhosted.org/packages/a9/0f/b51639608a1f4457d2e0f655cf58043eaa5b138138f70179a1b7154b34aa/django-appconf-0.6.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "264bfe1d0d3409e5a416d30aafb83775", "sha256": "041407644eb8ddfae6b55802695c716d8ae41705b9ad88964cd23782b1cb9197"}, "downloads": -1, "filename": "django-appconf-1.0.tar.gz", "has_sig": true, "md5_digest": "264bfe1d0d3409e5a416d30aafb83775", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16721, "upload_time": "2015-02-16T18:28:44", "upload_time_iso_8601": "2015-02-16T18:28:44.409658Z", "url": "https://files.pythonhosted.org/packages/70/c4/5a048d4b6050c4518b6b188cabbbbede9aadf9368dc1fb2a26d4cc2217aa/django-appconf-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "5dbb508dd8febf02388e34421f349a8d", "sha256": "3d9bc963d8008ae151d6c664f9fd55442705ea9b9e6d7ce77cdd40bf92d91f3a"}, "downloads": -1, "filename": "django_appconf-1.0.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "5dbb508dd8febf02388e34421f349a8d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7616, "upload_time": "2015-02-15T13:34:00", "upload_time_iso_8601": "2015-02-15T13:34:00.979591Z", "url": "https://files.pythonhosted.org/packages/89/06/f12bac3e71c1dbea27bfa1ffb1720acd2b0bb11eb344f5b77d9a7d64e574/django_appconf-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29c87a00f0d098b90f3ac6113ae6e52d", "sha256": "ba1375fb1024e8e91547504d4392321795c989fde500b96ebc7c93884f786e60"}, "downloads": -1, "filename": "django-appconf-1.0.1.tar.gz", "has_sig": true, "md5_digest": "29c87a00f0d098b90f3ac6113ae6e52d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16743, "upload_time": "2015-02-15T13:32:25", "upload_time_iso_8601": "2015-02-15T13:32:25.876515Z", "url": "https://files.pythonhosted.org/packages/ed/06/f8e767be772af027531c7164700a36f9b09b135c55131e73926255816b63/django-appconf-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "6b9a128d80a6e2e8e8afefed4d97092e", "sha256": "ddab987d14b26731352c01ee69c090a4ebfc9141ed223bef039d79587f22acd9"}, "downloads": -1, "filename": "django_appconf-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6b9a128d80a6e2e8e8afefed4d97092e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7387, "upload_time": "2016-04-19T19:23:45", "upload_time_iso_8601": "2016-04-19T19:23:45.353160Z", "url": "https://files.pythonhosted.org/packages/5b/78/726cdf3e04660560cf25f9def95b8f2736310c581dabed9adfe60154a9f8/django_appconf-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc11511a47088bc56531df67cd5d6261", "sha256": "6a4d9aea683b4c224d97ab8ee11ad2d29a37072c0c6c509896dd9857466fb261"}, "downloads": -1, "filename": "django-appconf-1.0.2.tar.gz", "has_sig": false, "md5_digest": "cc11511a47088bc56531df67cd5d6261", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14515, "upload_time": "2016-04-19T19:23:54", "upload_time_iso_8601": "2016-04-19T19:23:54.377873Z", "url": "https://files.pythonhosted.org/packages/34/b9/d07195652ab494b026f7cb0341dd6e5f2e6e39be177abe05e2cec8bd46e4/django-appconf-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "0a9ac4cea21e7ece429f455a152c30f7", "sha256": "c98a7af40062e996b921f5962a1c4f3f0c979fa7885f7be4710cceb90ebe13a6"}, "downloads": -1, "filename": "django_appconf-1.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0a9ac4cea21e7ece429f455a152c30f7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6380, "upload_time": "2019-03-03T15:13:29", "upload_time_iso_8601": "2019-03-03T15:13:29.382156Z", "url": "https://files.pythonhosted.org/packages/f6/b3/fcec63afcf323581c4919f21e90ef8c8200034108a6a0ab47a6bf6a9327b/django_appconf-1.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8dbbbd076130ba99938b34b22236aa4c", "sha256": "35f13ca4d567f132b960e2cd4c832c2d03cb6543452d34e29b7ba10371ba80e3"}, "downloads": -1, "filename": "django-appconf-1.0.3.tar.gz", "has_sig": false, "md5_digest": "8dbbbd076130ba99938b34b22236aa4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14904, "upload_time": "2019-03-03T15:13:31", "upload_time_iso_8601": "2019-03-03T15:13:31.726453Z", "url": "https://files.pythonhosted.org/packages/8e/9e/0cf10dc64e69f553dd1f8d54b8c55c31fb632d60ddcaeab3f21c472005ca/django-appconf-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "f9ab452659d3f67bcec05a56d99d5fa9", "sha256": "1b1d0e1069c843ebe8ae5aa48ec52403b1440402b320c3e3a206a0907e97bb06"}, "downloads": -1, "filename": "django_appconf-1.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f9ab452659d3f67bcec05a56d99d5fa9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6325, "upload_time": "2020-03-31T13:01:27", "upload_time_iso_8601": "2020-03-31T13:01:27.991720Z", "url": "https://files.pythonhosted.org/packages/72/fe/1fa374775fb853c6a075f301eeb48e9069460e03f4d3c3d5502fb1b4a766/django_appconf-1.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da4a355140acaa3eeb236987ab174e9d", "sha256": "be58deb54a43d77d2e1621fe59f787681376d3cd0b8bd8e4758ef6c3a6453380"}, "downloads": -1, "filename": "django-appconf-1.0.4.tar.gz", "has_sig": false, "md5_digest": "da4a355140acaa3eeb236987ab174e9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18733, "upload_time": "2020-03-31T13:01:29", "upload_time_iso_8601": "2020-03-31T13:01:29.850804Z", "url": "https://files.pythonhosted.org/packages/11/17/3093cd487d17e54d7d25ede33b0c7694982bf5f2a3d8055059f25eb9f90c/django-appconf-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f9ab452659d3f67bcec05a56d99d5fa9", "sha256": "1b1d0e1069c843ebe8ae5aa48ec52403b1440402b320c3e3a206a0907e97bb06"}, "downloads": -1, "filename": "django_appconf-1.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f9ab452659d3f67bcec05a56d99d5fa9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6325, "upload_time": "2020-03-31T13:01:27", "upload_time_iso_8601": "2020-03-31T13:01:27.991720Z", "url": "https://files.pythonhosted.org/packages/72/fe/1fa374775fb853c6a075f301eeb48e9069460e03f4d3c3d5502fb1b4a766/django_appconf-1.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da4a355140acaa3eeb236987ab174e9d", "sha256": "be58deb54a43d77d2e1621fe59f787681376d3cd0b8bd8e4758ef6c3a6453380"}, "downloads": -1, "filename": "django-appconf-1.0.4.tar.gz", "has_sig": false, "md5_digest": "da4a355140acaa3eeb236987ab174e9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18733, "upload_time": "2020-03-31T13:01:29", "upload_time_iso_8601": "2020-03-31T13:01:29.850804Z", "url": "https://files.pythonhosted.org/packages/11/17/3093cd487d17e54d7d25ede33b0c7694982bf5f2a3d8055059f25eb9f90c/django-appconf-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:38 2020"}