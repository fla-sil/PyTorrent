{"info": {"author": "clach04", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "        \r\r\n        [![Build Status](https://travis-ci.org/clach04/python-tuya.svg?branch=master)](https://travis-ci.org/clach04/python-tuya)\r\r\n        \r\r\n        NOTE I'm no longer using these devices so this is not actively maintained.\r\r\n        \r\r\n        Python 2.7 and Python 3.6.1 interface to ESP8266MOD WiFi smart devices from Shenzhen Xenon.\r\r\n        If you are using the Jinvoo Smart App, this allows local control over the LAN.\r\r\n        NOTE requires the devices to have already been **activated** by Jinvoo Smart App (or similar).\r\r\n        \r\r\n        ## Key extraction\r\r\n        \r\r\n        https://github.com/clach04/python-tuya/wiki has background information for how to get device id and local key.\r\r\n        (the device id can be seen in Jinvoo Smart App, under \"Device Info\").\r\r\n        \r\r\n        Known to work with:\r\r\n          * SKYROKU SM-PW701U Wi-Fi Plug Smart Plug - see https://wikidevi.com/wiki/Xenon_SM-PW701U\r\r\n          * Wuudi SM-S0301-US - WIFI Smart Power Socket Multi Plug with 4 AC Outlets and 4 USB Charging\r\r\n        \r\r\n        \r\r\n        Demo:\r\r\n        \r\r\n            import pytuya\r\r\n        \r\r\n            d = pytuya.OutletDevice('DEVICE_ID_HERE', 'IP_ADDRESS_HERE', 'LOCAL_KEY_HERE')\r\r\n            data = d.status()  # NOTE this does NOT require a valid key\r\r\n            print('Dictionary %r' % data)\r\r\n            print('state (bool, true is ON) %r' % data['dps']['1'])  # Show status of first controlled switch on device\r\r\n        \r\r\n            # Toggle switch state\r\r\n            switch_state = data['dps']['1']\r\r\n            data = d.set_status(not switch_state)  # This requires a valid key\r\r\n            if data:\r\r\n                print('set_status() result %r' % data)\r\r\n        \r\r\n            # on a switch that has 4 controllable ports, turn the fourth OFF (1 is the first)\r\r\n            data = d.set_status(False, 4)\r\r\n            if data:\r\r\n                print('set_status() result %r' % data)\r\r\n                print('set_status() extrat %r' % data[20:-8])\r\r\n        \r\r\n        TODO demo timer (with comment not all devices support this, one way to check, is to check Jinvoo Smart App and see if there is a clock icon that is not dimmed out).\r\r\n        \r\r\n        ### Encryption notes\r\r\n        \r\r\n        These devices uses AES encryption, this is not available in Python standard library, there are three options:\r\r\n        \r\r\n         1) PyCrypto\r\r\n         2) PyCryptodome\r\r\n         3) pyaes (note Python 2.x support requires https://github.com/ricmoo/pyaes/pull/13)\r\r\n        \r\r\n        ### Related Projects\r\r\n        \r\r\n          * https://github.com/sean6541/tuyaapi Python API to the web api\r\r\n          * https://github.com/codetheweb/tuyapi node.js\r\r\n          * https://github.com/Marcus-L/m4rcus.TuyaCore - .NET\r\r\n          * https://github.com/SDNick484/rectec_status/ - RecTec pellet smokers control (with Alexa skill)\r\r\n        \r\r\n        ### Acknowledgements\r\r\n        \r\r\n          * Major breakthroughs on protocol work came from https://github.com/codetheweb/tuyapi from the reverse engineering time and skills of codetheweb and blackrozes, additional protocol reverse engineering from jepsonrob and clach04.\r\r\n          * nijave pycryptodome support and testing\r\r\n          * Exilit for unittests and docstrings\r\r\n          * mike-gracia for improved Python version support\r\r\n          * samuscherer for RGB Bulb support\r\r\n          * magneticflux- for improved Python version support\r\r\n          * sean6541 - for initial PyPi package and Home Assistant support <https://github.com/sean6541/tuya-homeassistant>\r\r\n        \r\nKeywords: home automation\r\nPlatform: any\r\nClassifier: Development Status :: 4 - Beta\r\nClassifier: Intended Audience :: Developers\r\nClassifier: Topic :: Home Automation\r\nClassifier: License :: OSI Approved :: MIT License\r\nClassifier: Programming Language :: Python\r\nClassifier: Programming Language :: Python :: 2\r\nClassifier: Programming Language :: Python :: 3\r\nClassifier: Programming Language :: Python :: 3.6\r\nClassifier: Topic :: Home Automation\r\nDescription-Content-Type: text/markdown\r\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/clach04/python-tuya", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pytuya", "package_url": "https://pypi.org/project/pytuya/", "platform": "", "project_url": "https://pypi.org/project/pytuya/", "project_urls": {"Homepage": "https://github.com/clach04/python-tuya"}, "release_url": "https://pypi.org/project/pytuya/7.0.5/", "requires_dist": null, "requires_python": "", "summary": "Python interface to ESP8266MOD WiFi smart devices from Shenzhen Xenon", "version": "7.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\n<p>[![Build Status](<a href=\"https://travis-ci.org/clach04/python-tuya.svg?branch=master)%5D(https://travis-ci.org/clach04/python-tuya\" rel=\"nofollow\">https://travis-ci.org/clach04/python-tuya.svg?branch=master)](https://travis-ci.org/clach04/python-tuya</a>)</p>\n<p>NOTE I\u2019m no longer using these devices so this is not actively maintained.</p>\n<p>Python 2.7 and Python 3.6.1 interface to ESP8266MOD WiFi smart devices from Shenzhen Xenon.</p>\n<p>If you are using the Jinvoo Smart App, this allows local control over the LAN.</p>\n<p>NOTE requires the devices to have already been <strong>activated</strong> by Jinvoo Smart App (or similar).</p>\n<p>## Key extraction</p>\n<p><a href=\"https://github.com/clach04/python-tuya/wiki\" rel=\"nofollow\">https://github.com/clach04/python-tuya/wiki</a> has background information for how to get device id and local key.</p>\n<p>(the device id can be seen in Jinvoo Smart App, under \u201cDevice Info\u201d).</p>\n<p>Known to work with:</p>\n<blockquote>\n<ul>\n<li>SKYROKU SM-PW701U Wi-Fi Plug Smart Plug - see <a href=\"https://wikidevi.com/wiki/Xenon_SM-PW701U\" rel=\"nofollow\">https://wikidevi.com/wiki/Xenon_SM-PW701U</a></li>\n<li>Wuudi SM-S0301-US - WIFI Smart Power Socket Multi Plug with 4 AC Outlets and 4 USB Charging</li>\n</ul>\n</blockquote>\n<p>Demo:</p>\n<blockquote>\n<p>import pytuya</p>\n<p>d = pytuya.OutletDevice(\u2018DEVICE_ID_HERE\u2019, \u2018IP_ADDRESS_HERE\u2019, \u2018LOCAL_KEY_HERE\u2019)</p>\n<p>data = d.status()  # NOTE this does NOT require a valid key</p>\n<p>print(\u2018Dictionary %r\u2019 % data)</p>\n<p>print(\u2018state (bool, true is ON) %r\u2019 % data[\u2018dps\u2019][\u20181\u2019])  # Show status of first controlled switch on device</p>\n<p># Toggle switch state</p>\n<p>switch_state = data[\u2018dps\u2019][\u20181\u2019]</p>\n<p>data = d.set_status(not switch_state)  # This requires a valid key</p>\n<p>if data:</p>\n<blockquote>\nprint(\u2018set_status() result %r\u2019 % data)</blockquote>\n<p># on a switch that has 4 controllable ports, turn the fourth OFF (1 is the first)</p>\n<p>data = d.set_status(False, 4)</p>\n<p>if data:</p>\n<blockquote>\n<p>print(\u2018set_status() result %r\u2019 % data)</p>\n<p>print(\u2018set_status() extrat %r\u2019 % data[20:-8])</p>\n</blockquote>\n</blockquote>\n<p>TODO demo timer (with comment not all devices support this, one way to check, is to check Jinvoo Smart App and see if there is a clock icon that is not dimmed out).</p>\n<p>### Encryption notes</p>\n<p>These devices uses AES encryption, this is not available in Python standard library, there are three options:</p>\n<blockquote>\n<ol>\n<li>PyCrypto</li>\n<li>PyCryptodome</li>\n<li>pyaes (note Python 2.x support requires <a href=\"https://github.com/ricmoo/pyaes/pull/13\" rel=\"nofollow\">https://github.com/ricmoo/pyaes/pull/13</a>)</li>\n</ol>\n</blockquote>\n<p>### Related Projects</p>\n<blockquote>\n<ul>\n<li><a href=\"https://github.com/sean6541/tuyaapi\" rel=\"nofollow\">https://github.com/sean6541/tuyaapi</a> Python API to the web api</li>\n<li><a href=\"https://github.com/codetheweb/tuyapi\" rel=\"nofollow\">https://github.com/codetheweb/tuyapi</a> node.js</li>\n<li><a href=\"https://github.com/Marcus-L/m4rcus.TuyaCore\" rel=\"nofollow\">https://github.com/Marcus-L/m4rcus.TuyaCore</a> - .NET</li>\n<li><a href=\"https://github.com/SDNick484/rectec_status/\" rel=\"nofollow\">https://github.com/SDNick484/rectec_status/</a> - RecTec pellet smokers control (with Alexa skill)</li>\n</ul>\n</blockquote>\n<p>### Acknowledgements</p>\n<blockquote>\n<ul>\n<li>Major breakthroughs on protocol work came from <a href=\"https://github.com/codetheweb/tuyapi\" rel=\"nofollow\">https://github.com/codetheweb/tuyapi</a> from the reverse engineering time and skills of codetheweb and blackrozes, additional protocol reverse engineering from jepsonrob and clach04.</li>\n<li>nijave pycryptodome support and testing</li>\n<li>Exilit for unittests and docstrings</li>\n<li>mike-gracia for improved Python version support</li>\n<li>samuscherer for RGB Bulb support</li>\n<li>magneticflux- for improved Python version support</li>\n<li>sean6541 - for initial PyPi package and Home Assistant support &lt;<a href=\"https://github.com/sean6541/tuya-homeassistant\" rel=\"nofollow\">https://github.com/sean6541/tuya-homeassistant</a>&gt;</li>\n</ul>\n</blockquote>\n</blockquote>\n<p>Keywords: home automation\nPlatform: any\nClassifier: Development Status :: 4 - Beta\nClassifier: Intended Audience :: Developers\nClassifier: Topic :: Home Automation\nClassifier: License :: OSI Approved :: MIT License\nClassifier: Programming Language :: Python\nClassifier: Programming Language :: Python :: 2\nClassifier: Programming Language :: Python :: 3\nClassifier: Programming Language :: Python :: 3.6\nClassifier: Topic :: Home Automation\nDescription-Content-Type: text/markdown</p>\n\n          </div>"}, "last_serial": 5900264, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "c2b09f96c70443eae4e67c30dd7b8491", "sha256": "b9e7e37a18f9582a3fd15cea5691f836ed0ec5b7d19e126f643f0bfdf4800375"}, "downloads": -1, "filename": "pytuya-1.0.tar.gz", "has_sig": false, "md5_digest": "c2b09f96c70443eae4e67c30dd7b8491", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4185, "upload_time": "2017-12-06T23:42:56", "upload_time_iso_8601": "2017-12-06T23:42:56.388294Z", "url": "https://files.pythonhosted.org/packages/e3/60/b641b305a1e820841de5c8acf0b8fd2b6aa0af8850424999a7ecc283b96f/pytuya-1.0.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "30fe39f08ad084105e339e6afb3c40a8", "sha256": "713c6806a9db6e829af0640432706c7b5b1fb7577b60dba0e3f176d04ca2b6df"}, "downloads": -1, "filename": "pytuya-2.0.tar.gz", "has_sig": false, "md5_digest": "30fe39f08ad084105e339e6afb3c40a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4767, "upload_time": "2018-01-13T02:23:27", "upload_time_iso_8601": "2018-01-13T02:23:27.344241Z", "url": "https://files.pythonhosted.org/packages/7b/14/0645418e342aa86996cf6d9ded35accb80affa09383bc53e4e3aff584db9/pytuya-2.0.tar.gz", "yanked": false}], "3.0": [{"comment_text": "", "digests": {"md5": "c98199b1d6254ca2c21b0cbf49b8e8db", "sha256": "c0ed32daa74866116ce7608dfe4bf9c2de8cf59e18c20b72beabf0748cfc8d88"}, "downloads": -1, "filename": "pytuya-3.0.tar.gz", "has_sig": false, "md5_digest": "c98199b1d6254ca2c21b0cbf49b8e8db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4906, "upload_time": "2018-01-23T14:48:00", "upload_time_iso_8601": "2018-01-23T14:48:00.527969Z", "url": "https://files.pythonhosted.org/packages/ba/c8/63aebcaa950afe19f3afdad34548def070d678e9e803299d7533ad6471d9/pytuya-3.0.tar.gz", "yanked": false}], "4.0": [{"comment_text": "", "digests": {"md5": "071c09bdde5c32b04cc05fdd086e29ea", "sha256": "ebb5d7c78fb450591f7902825ba64c49ecec695a4a3abc436c9b511a3748428e"}, "downloads": -1, "filename": "pytuya-4.0.tar.gz", "has_sig": false, "md5_digest": "071c09bdde5c32b04cc05fdd086e29ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4910, "upload_time": "2018-01-24T00:50:57", "upload_time_iso_8601": "2018-01-24T00:50:57.624486Z", "url": "https://files.pythonhosted.org/packages/58/56/ab9a443864e2fe3f2e2f94ff1625a30e2a4eb3c6436896472ccd24a4227a/pytuya-4.0.tar.gz", "yanked": false}], "5.0": [{"comment_text": "", "digests": {"md5": "e2c90957a06feeb42156da9c0cadc913", "sha256": "a8fe4a28e55f8176846ccc36c87d18d99027c290c63ee8dc9bd05e6125d327ba"}, "downloads": -1, "filename": "pytuya-5.0.tar.gz", "has_sig": false, "md5_digest": "e2c90957a06feeb42156da9c0cadc913", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4918, "upload_time": "2018-01-31T15:07:09", "upload_time_iso_8601": "2018-01-31T15:07:09.184085Z", "url": "https://files.pythonhosted.org/packages/f3/50/b6b387e7755b61407db1e8823001645d3a591602612203ec813ba4db4185/pytuya-5.0.tar.gz", "yanked": false}], "6.0": [{"comment_text": "", "digests": {"md5": "d2f66f92d3ddf6709dbea96a1ff78ace", "sha256": "139926141dc7446a5c318e796e0533408782feb0783d66b0ba58e57b462dd70f"}, "downloads": -1, "filename": "pytuya-6.0.tar.gz", "has_sig": false, "md5_digest": "d2f66f92d3ddf6709dbea96a1ff78ace", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4935, "upload_time": "2018-02-28T15:00:51", "upload_time_iso_8601": "2018-02-28T15:00:51.584482Z", "url": "https://files.pythonhosted.org/packages/5a/c1/7799254e4de55a4117da59ee063f5857b955492b9b444c9b517707769319/pytuya-6.0.tar.gz", "yanked": false}], "7.0": [{"comment_text": "", "digests": {"md5": "664aa12b9061f05e3a2ab684f25185ce", "sha256": "03e7d3c22b2f5acf2bf3b95a8f6f579866c9cb7be89e2e0f54938d94fa6f8993"}, "downloads": -1, "filename": "pytuya-7.0.tar.gz", "has_sig": false, "md5_digest": "664aa12b9061f05e3a2ab684f25185ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5460, "upload_time": "2018-04-30T02:14:02", "upload_time_iso_8601": "2018-04-30T02:14:02.197679Z", "url": "https://files.pythonhosted.org/packages/c0/e4/39132a7ee17bb3906726e4d68c367a24b969b71d891c65e2d50f1886cf56/pytuya-7.0.tar.gz", "yanked": false}], "7.0.1": [{"comment_text": "", "digests": {"md5": "c29ad811e036310447c5ecf6a5562ea7", "sha256": "bafd588191239fb9b357a2c949b51277cfa767254b2e6921d0a1ee5ea4669b89"}, "downloads": -1, "filename": "pytuya-7.0.1.zip", "has_sig": false, "md5_digest": "c29ad811e036310447c5ecf6a5562ea7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10645, "upload_time": "2018-10-09T04:07:17", "upload_time_iso_8601": "2018-10-09T04:07:17.598941Z", "url": "https://files.pythonhosted.org/packages/81/7a/a77347f79ab92408acf49d48d15043fa1254405fb501f2ecc6e64f2c7ca9/pytuya-7.0.1.zip", "yanked": false}], "7.0.2": [{"comment_text": "", "digests": {"md5": "f744eb0e389778c041bc4faac81b5362", "sha256": "fd281ca41c33588f164d9b0679555c55fb727e39b37a0d6826b4d44a31190372"}, "downloads": -1, "filename": "pytuya-7.0.2.zip", "has_sig": false, "md5_digest": "f744eb0e389778c041bc4faac81b5362", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10787, "upload_time": "2018-10-16T00:42:59", "upload_time_iso_8601": "2018-10-16T00:42:59.318639Z", "url": "https://files.pythonhosted.org/packages/ad/4c/44be39a4614580e1efd753b423a8cab55167e7ed8177a6e024519d00c54f/pytuya-7.0.2.zip", "yanked": false}], "7.0.4": [{"comment_text": "", "digests": {"md5": "657ebcfe4ca88dc9fc64b2a71a095190", "sha256": "357a06db4ded37b624c356ad51d7324a2742248500bbbd8477e61ff1c304c74f"}, "downloads": -1, "filename": "pytuya-7.0.4.zip", "has_sig": false, "md5_digest": "657ebcfe4ca88dc9fc64b2a71a095190", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11177, "upload_time": "2019-09-28T17:27:27", "upload_time_iso_8601": "2019-09-28T17:27:27.594463Z", "url": "https://files.pythonhosted.org/packages/71/f3/09e7b1c2cd16c756d0aa16e3382f8909f371aca56176fe3f9ffe36a60808/pytuya-7.0.4.zip", "yanked": false}], "7.0.5": [{"comment_text": "", "digests": {"md5": "4ab5e42ecd23df29969f319db1c5e9c3", "sha256": "a08a046493586ee8e4f4c4571a485470731d42152244d0148aa517cc396e24bd"}, "downloads": -1, "filename": "pytuya-7.0.5.zip", "has_sig": false, "md5_digest": "4ab5e42ecd23df29969f319db1c5e9c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13166, "upload_time": "2019-09-28T18:08:47", "upload_time_iso_8601": "2019-09-28T18:08:47.614019Z", "url": "https://files.pythonhosted.org/packages/4a/69/b20175759e97294f694939ab9bc4be378b3c60ef2d1601d80fc3cc6d2daa/pytuya-7.0.5.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4ab5e42ecd23df29969f319db1c5e9c3", "sha256": "a08a046493586ee8e4f4c4571a485470731d42152244d0148aa517cc396e24bd"}, "downloads": -1, "filename": "pytuya-7.0.5.zip", "has_sig": false, "md5_digest": "4ab5e42ecd23df29969f319db1c5e9c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13166, "upload_time": "2019-09-28T18:08:47", "upload_time_iso_8601": "2019-09-28T18:08:47.614019Z", "url": "https://files.pythonhosted.org/packages/4a/69/b20175759e97294f694939ab9bc4be378b3c60ef2d1601d80fc3cc6d2daa/pytuya-7.0.5.zip", "yanked": false}], "timestamp": "Fri May  8 03:12:53 2020"}