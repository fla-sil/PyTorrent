{"info": {"author": "Joshua J. Gabriel, Michael Ashton", "author_email": "joshgabriel92@ufl.edu, ashtonmv@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering"], "description": ".. image:: https://travis-ci.org/henniggroup/MPInterfaces.svg?branch=master\n.. image:: https://codecov.io/gh/henniggroup/MPInterfaces/coverage.svg?branch=master\n\nMPinterfaces is a python package that enables high throughput Density\nFunctional Theory(DFT) analysis of arbitrary material interfaces(two dimensional\nmaterials, hetero-structure, ligand capped\nnanoparticles and surfaces in the presence of solvents) using\nVASP_, VASPsol_, LAMMPS_, materialsproject_ database\nas well as their open source tools_ and a little bit of ase_.\n\n.. _materialsproject: https://github.com/materialsproject\n\n.. _VASPsol: https://github.com/henniggroup/VASPsol\n\n.. _VASP: http://www.vasp.at/\n\n.. _tools: https://github.com/materialsproject\n\n.. _LAMMPS: http://lammps.sandia.gov/\n\n.. _ase: https://wiki.fysik.dtu.dk/ase/\n\n.. image:: https://github.com/henniggroup/MPInterfaces/blob/master/docs/mpinterfaces-logo.png\n   :width: 75 %\n   :align: center\n\nInstallation\n==============\n\nPrepping - Setting up Virtual Environments with Miniconda\n-------------------------------\n\nWe recommend setting up virtual environment\nusing Miniconda which can be installed according to their instructions from https://conda.io/miniconda.html\n\nFollow the following steps to set up virtual environment using Miniconda\n\n$ conda create -n name_of_your_environment python=3.6\n\nOn Mac OS and Linux\n\n$ source activate name_of_your_environment\n\n$ conda install numpy scipy matplotlib ipython\n\nOn Windows:\n\n$ activate name_of_your_environment\n\nNote: You will need to have C++ libraries properly\ninstalled for the package to install correctly on Windows.\n\nFor teaching and demo purposes, we recommend using Microsoft Azure notebooks, \nan example of which is at https://notebooks.azure.com/JoshGabriel92/libraries/PourbaixCourse\nwhich contains two notebooks that illustrate installing pymatgen and pyhull for on the fly\ndata science tutorials. We have one notebook FeOH_Example.ipynb for Pourbaix diagrams and an MPInterfacesDemo that illustrate other features of the MPInterfaces code with more to come.\n\nNote for SuperComputer Clusters with Linux OS:\n\nHiperGator2 and other linux based supercomputing clusters\nhave shared modules one of which are the C++ modules under gcc.\nThis needs to be loaded before any of the aforementioned \ngcc/5.2.0 has all the shared libraries\nrequired for a successful installation.\n\nDo the following on HiperGator2 before you create\nthe Miniconda environment:\n\n$ module purge \n$ module load gcc/5.2.0\n\nGet the stable release version from PyPI\n----------------------------------------\n\nOnce you have a nicely prepped virtual environment with miniconda\nand you do not seek to do extensive code development/contributions, \nwe recommend installing from PyPI with:\n\n$ pip install MPInterfaces_Latest\n\nGet the latest bleeding edge version \n------------------------------------\n\nIf you would like to develop and contribute we recommend getting the bleeding edge \ncopy from the github repository.\n \nIf you already have a local copy, steps 1 and 2 of the following instructions\ncan be skipped. Just do a \"git pull\" from the MPInterfaces folder and go to\nstep 3(if the local copy was installed in the develop mode this step can be skipped too).\n\nNote: on using virtual environments on your own machine, we recommend to use Miniconda.\n\n1. Clone the latest version from github\n\n  - git clone https://github.com/henniggroup/MPInterfaces.git\n\n2. cd MPInterfaces\n\n3. python setup.py install(or develop)\n\n4. Copy the mpint_config.yaml file from config_files/mpint_config.yaml\n   to mpinterfaces/mpint_config.yaml\n   and update the file so that you have the following\n   environment variables :\n\n   - MAPI_KEY=the_key_obtained_from_materialsproject\n\n   - PMG_VASP_PSP_DIR=path_to_vasp_potcar_files\n\n\nHow to Install Latest Pymatgen\n------------------------------\n\nSee http://pymatgen.org/#getting-pymatgen\n\n\nDocumentation\n==============\n\nA very minimal documentation is avaiable at\n\nhttp://henniggroup.github.io/MPInterfaces/\n\nand work is underway to improve it.\n\n\nUsage\n==========\n\nWe use pymatgen tools for all structure manipulation tasks, so it would\nbe a good idea to start from here:\n\nhttp://pymatgen.org/#using-pymatgen\n\nThe examples folder contain some sample scripts that demonstrate the\nusage of mpinterfaces as well as materialsproject packages. For basic\nusage please see **docs/usage.rst**.\n\n\nCite\n======\n\nIf you use MPInterfaces for your work, please cite the paper: mpinterfaces-paper_\n\n.. _mpinterfaces-paper: http://www.sciencedirect.com/science/article/pii/S0927025616302440\n\n\nLicense\n=======\n\nMPInterfaces is released under the MIT License.::\n\n    Copyright (c) 2014-2017 Henniggroup Cornell/University of Florida & NIST\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy of\n    this software and associated documentation files (the \"Software\"), to deal in\n    the Software without restriction, including without limitation the rights to\n    use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n    the Software, and to permit persons to whom the Software is furnished to do so,\n    subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nContributing\n=============\n\nWe try to follow the coding style used by pymatgen(PEP8):\n\nhttp://pymatgen.org/contributing.html#coding-guidelines\n\n\nAuthors\n=========\n\nKiran Mathew\n\nJoshua Gabriel\n\nMichael Ashton\n\nArunima Singh\n\nJoshua T. Paul\n\nSeve G. Monahan\n\nRichard G. Hennig\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/henniggroup/MPInterfaces", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "MPInterfaces_Latest_Test", "package_url": "https://pypi.org/project/MPInterfaces_Latest_Test/", "platform": "", "project_url": "https://pypi.org/project/MPInterfaces_Latest_Test/", "project_urls": {"Homepage": "https://github.com/henniggroup/MPInterfaces"}, "release_url": "https://pypi.org/project/MPInterfaces_Latest_Test/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "High throughput analysis of interfaces using VASP and Materials Project tools", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            .. image:: https://travis-ci.org/henniggroup/MPInterfaces.svg?branch=master<br>.. image:: https://codecov.io/gh/henniggroup/MPInterfaces/coverage.svg?branch=master<br><br>MPinterfaces is a python package that enables high throughput Density<br>Functional Theory(DFT) analysis of arbitrary material interfaces(two dimensional<br>materials, hetero-structure, ligand capped<br>nanoparticles and surfaces in the presence of solvents) using<br>VASP_, VASPsol_, LAMMPS_, materialsproject_ database<br>as well as their open source tools_ and a little bit of ase_.<br><br>.. _materialsproject: https://github.com/materialsproject<br><br>.. _VASPsol: https://github.com/henniggroup/VASPsol<br><br>.. _VASP: http://www.vasp.at/<br><br>.. _tools: https://github.com/materialsproject<br><br>.. _LAMMPS: http://lammps.sandia.gov/<br><br>.. _ase: https://wiki.fysik.dtu.dk/ase/<br><br>.. image:: https://github.com/henniggroup/MPInterfaces/blob/master/docs/mpinterfaces-logo.png<br>   :width: 75 %<br>   :align: center<br><br>Installation<br>==============<br><br>Prepping - Setting up Virtual Environments with Miniconda<br>-------------------------------<br><br>We recommend setting up virtual environment<br>using Miniconda which can be installed according to their instructions from https://conda.io/miniconda.html<br><br>Follow the following steps to set up virtual environment using Miniconda<br><br>$ conda create -n name_of_your_environment python=3.6<br><br>On Mac OS and Linux<br><br>$ source activate name_of_your_environment<br><br>$ conda install numpy scipy matplotlib ipython<br><br>On Windows:<br><br>$ activate name_of_your_environment<br><br>Note: You will need to have C++ libraries properly<br>installed for the package to install correctly on Windows.<br><br>For teaching and demo purposes, we recommend using Microsoft Azure notebooks, <br>an example of which is at https://notebooks.azure.com/JoshGabriel92/libraries/PourbaixCourse<br>which contains two notebooks that illustrate installing pymatgen and pyhull for on the fly<br>data science tutorials. We have one notebook FeOH_Example.ipynb for Pourbaix diagrams and an MPInterfacesDemo that illustrate other features of the MPInterfaces code with more to come.<br><br>Note for SuperComputer Clusters with Linux OS:<br><br>HiperGator2 and other linux based supercomputing clusters<br>have shared modules one of which are the C++ modules under gcc.<br>This needs to be loaded before any of the aforementioned <br>gcc/5.2.0 has all the shared libraries<br>required for a successful installation.<br><br>Do the following on HiperGator2 before you create<br>the Miniconda environment:<br><br>$ module purge <br>$ module load gcc/5.2.0<br><br>Get the stable release version from PyPI<br>----------------------------------------<br><br>Once you have a nicely prepped virtual environment with miniconda<br>and you do not seek to do extensive code development/contributions, <br>we recommend installing from PyPI with:<br><br>$ pip install MPInterfaces_Latest<br><br>Get the latest bleeding edge version <br>------------------------------------<br><br>If you would like to develop and contribute we recommend getting the bleeding edge <br>copy from the github repository.<br> <br>If you already have a local copy, steps 1 and 2 of the following instructions<br>can be skipped. Just do a \"git pull\" from the MPInterfaces folder and go to<br>step 3(if the local copy was installed in the develop mode this step can be skipped too).<br><br>Note: on using virtual environments on your own machine, we recommend to use Miniconda.<br><br>1. Clone the latest version from github<br><br>  - git clone https://github.com/henniggroup/MPInterfaces.git<br><br>2. cd MPInterfaces<br><br>3. python setup.py install(or develop)<br><br>4. Copy the mpint_config.yaml file from config_files/mpint_config.yaml<br>   to mpinterfaces/mpint_config.yaml<br>   and update the file so that you have the following<br>   environment variables :<br><br>   - MAPI_KEY=the_key_obtained_from_materialsproject<br><br>   - PMG_VASP_PSP_DIR=path_to_vasp_potcar_files<br><br><br>How to Install Latest Pymatgen<br>------------------------------<br><br>See http://pymatgen.org/#getting-pymatgen<br><br><br>Documentation<br>==============<br><br>A very minimal documentation is avaiable at<br><br>http://henniggroup.github.io/MPInterfaces/<br><br>and work is underway to improve it.<br><br><br>Usage<br>==========<br><br>We use pymatgen tools for all structure manipulation tasks, so it would<br>be a good idea to start from here:<br><br>http://pymatgen.org/#using-pymatgen<br><br>The examples folder contain some sample scripts that demonstrate the<br>usage of mpinterfaces as well as materialsproject packages. For basic<br>usage please see **docs/usage.rst**.<br><br><br>Cite<br>======<br><br>If you use MPInterfaces for your work, please cite the paper: mpinterfaces-paper_<br><br>.. _mpinterfaces-paper: http://www.sciencedirect.com/science/article/pii/S0927025616302440<br><br><br>License<br>=======<br><br>MPInterfaces is released under the MIT License.::<br><br>    Copyright (c) 2014-2017 Henniggroup Cornell/University of Florida &amp; NIST<br><br>    Permission is hereby granted, free of charge, to any person obtaining a copy of<br>    this software and associated documentation files (the \"Software\"), to deal in<br>    the Software without restriction, including without limitation the rights to<br>    use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of<br>    the Software, and to permit persons to whom the Software is furnished to do so,<br>    subject to the following conditions:<br><br>    The above copyright notice and this permission notice shall be included in all<br>    copies or substantial portions of the Software.<br><br>    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<br>    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS<br>    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR<br>    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER<br>    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN<br>    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.<br><br><br>Contributing<br>=============<br><br>We try to follow the coding style used by pymatgen(PEP8):<br><br>http://pymatgen.org/contributing.html#coding-guidelines<br><br><br>Authors<br>=========<br><br>Kiran Mathew<br><br>Joshua Gabriel<br><br>Michael Ashton<br><br>Arunima Singh<br><br>Joshua T. Paul<br><br>Seve G. Monahan<br><br>Richard G. Hennig<br>\n          </div>"}, "last_serial": 3204444, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "78ac4eff3783fb78fc5c53faf895f726", "sha256": "416e8fd92f1e8c5fbef4d967ead5c67be76fa3450467454ad27c0fabb650877a"}, "downloads": -1, "filename": "MPInterfaces_Latest_Test-1.0.tar.gz", "has_sig": false, "md5_digest": "78ac4eff3783fb78fc5c53faf895f726", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 256027, "upload_time": "2017-09-26T15:46:29", "upload_time_iso_8601": "2017-09-26T15:46:29.409223Z", "url": "https://files.pythonhosted.org/packages/8a/f4/85b224ab878e234c06983004d4c124c2f08974b52e931db4afe0494cf80e/MPInterfaces_Latest_Test-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "09e840b18a15afd1b4a590fca03b3a77", "sha256": "a4ae8c15ea6b5c4e03ae68b5bc46c5c862ee4865b64f9667b395507b3fc7dff0"}, "downloads": -1, "filename": "MPInterfaces_Latest_Test-1.0.1.tar.gz", "has_sig": false, "md5_digest": "09e840b18a15afd1b4a590fca03b3a77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 256039, "upload_time": "2017-09-26T15:47:26", "upload_time_iso_8601": "2017-09-26T15:47:26.366497Z", "url": "https://files.pythonhosted.org/packages/a0/4c/cccaa6f5be7deea6ac6a395650524cdc0a981a93b6267d2e27cbcf890e2a/MPInterfaces_Latest_Test-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "a3e5e97ebe1733a7e02836058e2e9463", "sha256": "6848928fbace2e5a254995fddfbccbb5d34760d11daceb69fa932f36bcff2ef0"}, "downloads": -1, "filename": "MPInterfaces_Latest_Test-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a3e5e97ebe1733a7e02836058e2e9463", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 256254, "upload_time": "2017-09-26T15:55:34", "upload_time_iso_8601": "2017-09-26T15:55:34.349869Z", "url": "https://files.pythonhosted.org/packages/a0/38/5196699590542c3dd8dd8f087d9197bf40c33f543d1fb9e776e22b0fdc2a/MPInterfaces_Latest_Test-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a3e5e97ebe1733a7e02836058e2e9463", "sha256": "6848928fbace2e5a254995fddfbccbb5d34760d11daceb69fa932f36bcff2ef0"}, "downloads": -1, "filename": "MPInterfaces_Latest_Test-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a3e5e97ebe1733a7e02836058e2e9463", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 256254, "upload_time": "2017-09-26T15:55:34", "upload_time_iso_8601": "2017-09-26T15:55:34.349869Z", "url": "https://files.pythonhosted.org/packages/a0/38/5196699590542c3dd8dd8f087d9197bf40c33f543d1fb9e776e22b0fdc2a/MPInterfaces_Latest_Test-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:15 2020"}