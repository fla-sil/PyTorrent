{"info": {"author": "Adriel Velazquez", "author_email": "adrielvelazquez@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "SQLAlchemy Sphinx\n=================\n\n|travis| |pypi| |coveralls|\n\n.. |travis| image:: https://travis-ci.org/AdrielVelazquez/sqlalchemy-sphinx.svg?branch=master\n    :target: https://travis-ci.org/AdrielVelazquez/sqlalchemy-sphinx\n\n.. |pypi| image:: https://badge.fury.io/py/sqlalchemy-sphinx.svg\n    :target: https://badge.fury.io/py/sqlalchemy-sphinx\n\n.. |coveralls| image:: https://coveralls.io/repos/github/AdrielVelazquez/sqlalchemy-sphinx/badge.svg?branch=master \n    :target: https://coveralls.io/github/AdrielVelazquez/sqlalchemy-sphinx?branch=master\n\nSQLAlchemy Sphinx is a dialect for SQLalchemy which converts SQLAlchemy\nmodel into compatible sql for sphinx.\n\nThis dialect works for both python 2 and 3. Currently you need to import\nsqlalchemy\\_sphinx to properly register for python 3.\n\nInstallation\n------------\n\nSQLAlchemy Sphinx is available on pypi under the package name\n``sqlalchemy-sphinx``, you can get it by running:\n\n.. code:: sh\n\n    pip install sqlalchemy-sphinx\n\nUsage\n-----\n\nDefining a Sphinx SQLAlchemy is exactly the same way you would create a\nsqlalchemy model.\n\n.. code:: python\n\n\n    from sqlalchemy import create_engine, Column, Integer, String, BigInteger, Unicode, Enum\n    from sqlalchemy.ext.declarative import declarative_base\n    from sqlalchemy.orm import deferred, sessionmaker\n\n    sphinx_engine = create_engine('sphinx://your.sphinx.host:9008')\n    SphinxBase = declarative_base(bind=sphinx_engine)\n    SphinxSession = sessionmaker(bind=sphinx_engine)\n    sphinx_session = SphinxSession()\n\n\n    class MockSphinxModel(Base):\n        __tablename__ = \"mock_table\"\n        name = Column(String)\n        id = Column(Integer, primary_key=True)\n        country = Column(String)\n        ranker = deferred(Column(String))\n        group_by_dummy = deferred(Column(String))\n        max_matches = deferred(Column(String))\n        field_weights = deferred(Column(String))\n\nAfter the model is created we can run queries against the model:\n\n.. code:: python\n\n    query = session.query(MockSphinxModel).limit(100)\n    # 'SELECT name, id, country FROM mock_table LIMIT 0, 100'\n\nWe can also do matching\n\n.. code:: python\n\n    base_query = session.query(MockSphinxModel.id)\n    query = base_query.filter(MockSphinxModel.country.match(\"US\"))\n    # \"SELECT id FROM mock_table WHERE MATCH('(@country US)')\"\n\n    query = base_query.filter(MockSphinxModel.name.match(\"adriel\"), MockSphinxModel.country.match(\"US\"))\n    # \"SELECT id FROM mock_table WHERE MATCH('(@name adriel) (@country US)')\"\n\nOptions:\n\n.. code:: python\n\n    query = session.query(MockSphinxModel.id)\n    query = query.filter(func.options(MockSphinxModel.field_weights == [\"title=10\", \"body=3\"]))\n    # 'SELECT id FROM mock_table OPTION field_weights=(title=10, body=3)'\n\n    query = session.query(MockSphinxModel.id)\n    query = query.filter(MockSphinxModel.country.match(\"US\"), func.options(MockSphinxModel.max_matches == 1))\n    # \"SELECT id FROM mock_table WHERE MATCH('(@country US)') OPTION max_matches=1\"\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sqlalchemy-sphinx", "package_url": "https://pypi.org/project/sqlalchemy-sphinx/", "platform": "", "project_url": "https://pypi.org/project/sqlalchemy-sphinx/", "project_urls": null, "release_url": "https://pypi.org/project/sqlalchemy-sphinx/0.9.0/", "requires_dist": ["sqlalchemy (>=1.3.0) ; python_version < \"2.7\"", "sqlalchemy (>=1.3.0) ; python_version == \"2.7\" or python_version >= \"3.4\""], "requires_python": "", "summary": "SQLAlchemy extension for dealing with SphinxQL", "version": "0.9.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/AdrielVelazquez/sqlalchemy-sphinx\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0c153df88f54fd2a95a7bf2c117ed9868ac74eea/68747470733a2f2f7472617669732d63692e6f72672f41647269656c56656c617a7175657a2f73716c616c6368656d792d737068696e782e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://badge.fury.io/py/sqlalchemy-sphinx\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ff59982782f25166c87ae254f4aa5a14d1fb8625/68747470733a2f2f62616467652e667572792e696f2f70792f73716c616c6368656d792d737068696e782e737667\"></a> <a href=\"https://coveralls.io/github/AdrielVelazquez/sqlalchemy-sphinx?branch=master\" rel=\"nofollow\"><img alt=\"coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6560248cee2f47f45512102d6cc292e01692d6cc/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f41647269656c56656c617a7175657a2f73716c616c6368656d792d737068696e782f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>SQLAlchemy Sphinx is a dialect for SQLalchemy which converts SQLAlchemy\nmodel into compatible sql for sphinx.</p>\n<p>This dialect works for both python 2 and 3. Currently you need to import\nsqlalchemy_sphinx to properly register for python 3.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>SQLAlchemy Sphinx is available on pypi under the package name\n<tt><span class=\"pre\">sqlalchemy-sphinx</span></tt>, you can get it by running:</p>\n<pre>pip install sqlalchemy-sphinx\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Defining a Sphinx SQLAlchemy is exactly the same way you would create a\nsqlalchemy model.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">create_engine</span><span class=\"p\">,</span> <span class=\"n\">Column</span><span class=\"p\">,</span> <span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">BigInteger</span><span class=\"p\">,</span> <span class=\"n\">Unicode</span><span class=\"p\">,</span> <span class=\"n\">Enum</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.ext.declarative</span> <span class=\"kn\">import</span> <span class=\"n\">declarative_base</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.orm</span> <span class=\"kn\">import</span> <span class=\"n\">deferred</span><span class=\"p\">,</span> <span class=\"n\">sessionmaker</span>\n\n<span class=\"n\">sphinx_engine</span> <span class=\"o\">=</span> <span class=\"n\">create_engine</span><span class=\"p\">(</span><span class=\"s1\">'sphinx://your.sphinx.host:9008'</span><span class=\"p\">)</span>\n<span class=\"n\">SphinxBase</span> <span class=\"o\">=</span> <span class=\"n\">declarative_base</span><span class=\"p\">(</span><span class=\"n\">bind</span><span class=\"o\">=</span><span class=\"n\">sphinx_engine</span><span class=\"p\">)</span>\n<span class=\"n\">SphinxSession</span> <span class=\"o\">=</span> <span class=\"n\">sessionmaker</span><span class=\"p\">(</span><span class=\"n\">bind</span><span class=\"o\">=</span><span class=\"n\">sphinx_engine</span><span class=\"p\">)</span>\n<span class=\"n\">sphinx_session</span> <span class=\"o\">=</span> <span class=\"n\">SphinxSession</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MockSphinxModel</span><span class=\"p\">(</span><span class=\"n\">Base</span><span class=\"p\">):</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s2\">\"mock_table\"</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">)</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">country</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">)</span>\n    <span class=\"n\">ranker</span> <span class=\"o\">=</span> <span class=\"n\">deferred</span><span class=\"p\">(</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">))</span>\n    <span class=\"n\">group_by_dummy</span> <span class=\"o\">=</span> <span class=\"n\">deferred</span><span class=\"p\">(</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">))</span>\n    <span class=\"n\">max_matches</span> <span class=\"o\">=</span> <span class=\"n\">deferred</span><span class=\"p\">(</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">))</span>\n    <span class=\"n\">field_weights</span> <span class=\"o\">=</span> <span class=\"n\">deferred</span><span class=\"p\">(</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">))</span>\n</pre>\n<p>After the model is created we can run queries against the model:</p>\n<pre><span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">MockSphinxModel</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">limit</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"c1\"># 'SELECT name, id, country FROM mock_table LIMIT 0, 100'</span>\n</pre>\n<p>We can also do matching</p>\n<pre><span class=\"n\">base_query</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">MockSphinxModel</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">base_query</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">MockSphinxModel</span><span class=\"o\">.</span><span class=\"n\">country</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"s2\">\"US\"</span><span class=\"p\">))</span>\n<span class=\"c1\"># \"SELECT id FROM mock_table WHERE MATCH('(@country US)')\"</span>\n\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">base_query</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">MockSphinxModel</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"s2\">\"adriel\"</span><span class=\"p\">),</span> <span class=\"n\">MockSphinxModel</span><span class=\"o\">.</span><span class=\"n\">country</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"s2\">\"US\"</span><span class=\"p\">))</span>\n<span class=\"c1\"># \"SELECT id FROM mock_table WHERE MATCH('(@name adriel) (@country US)')\"</span>\n</pre>\n<p>Options:</p>\n<pre><span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">MockSphinxModel</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">options</span><span class=\"p\">(</span><span class=\"n\">MockSphinxModel</span><span class=\"o\">.</span><span class=\"n\">field_weights</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"s2\">\"title=10\"</span><span class=\"p\">,</span> <span class=\"s2\">\"body=3\"</span><span class=\"p\">]))</span>\n<span class=\"c1\"># 'SELECT id FROM mock_table OPTION field_weights=(title=10, body=3)'</span>\n\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">MockSphinxModel</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">MockSphinxModel</span><span class=\"o\">.</span><span class=\"n\">country</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"s2\">\"US\"</span><span class=\"p\">),</span> <span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">options</span><span class=\"p\">(</span><span class=\"n\">MockSphinxModel</span><span class=\"o\">.</span><span class=\"n\">max_matches</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"c1\"># \"SELECT id FROM mock_table WHERE MATCH('(@country US)') OPTION max_matches=1\"</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5830874, "releases": {"0.8.1": [{"comment_text": "", "digests": {"md5": "a24ea8e6600058a5992e31a91ee78553", "sha256": "beb3a561eb0778d951e0cb403b6da1585326c4db40530f0bbe55ae5db0d88bda"}, "downloads": -1, "filename": "sqlalchemy_sphinx-0.8.1.tar.gz", "has_sig": false, "md5_digest": "a24ea8e6600058a5992e31a91ee78553", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5253, "upload_time": "2016-02-25T21:03:03", "upload_time_iso_8601": "2016-02-25T21:03:03.106549Z", "url": "https://files.pythonhosted.org/packages/df/e5/10656dbb6ce75be26eb81c4fda57698609f0002541440fd7c7286d698eb6/sqlalchemy_sphinx-0.8.1.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "a608294f5300266332e12454813eea83", "sha256": "2b8e9731391705e4e6d3a36915be9dc590bbf7c1aeea275fa16c9da4d20ba365"}, "downloads": -1, "filename": "sqlalchemy_sphinx-0.8.3.tar.gz", "has_sig": false, "md5_digest": "a608294f5300266332e12454813eea83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5455, "upload_time": "2016-02-25T21:13:07", "upload_time_iso_8601": "2016-02-25T21:13:07.070450Z", "url": "https://files.pythonhosted.org/packages/69/f8/b2f7a19c9e22e18c7d0e38e277c0c3b27939c118951b2e1ca4c8366aec61/sqlalchemy_sphinx-0.8.3.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "4ab5785645ad60be677c3a89c7dd58cd", "sha256": "e4b94109a51e329ffd42abea80a5a09b934e365a3864bdf924551638b2b9c9e9"}, "downloads": -1, "filename": "sqlalchemy_sphinx-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4ab5785645ad60be677c3a89c7dd58cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8053, "upload_time": "2019-09-15T05:41:16", "upload_time_iso_8601": "2019-09-15T05:41:16.309022Z", "url": "https://files.pythonhosted.org/packages/06/32/4f620a205c37af5efa5c803fcc306a123bd670a0b5384e8dc51df700b2d2/sqlalchemy_sphinx-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a819a33b60db21f7a4ad8383494e9b65", "sha256": "80300278a8d51556e238a6088b4f158148e2851532350399e3ea74e922aeca47"}, "downloads": -1, "filename": "sqlalchemy_sphinx-0.9.0.tar.gz", "has_sig": false, "md5_digest": "a819a33b60db21f7a4ad8383494e9b65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6042, "upload_time": "2019-09-15T05:41:18", "upload_time_iso_8601": "2019-09-15T05:41:18.149688Z", "url": "https://files.pythonhosted.org/packages/4d/6f/9b6046805de5f370d0686eab853f7a82a1d281a4ad26c8deb8357511c5e0/sqlalchemy_sphinx-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4ab5785645ad60be677c3a89c7dd58cd", "sha256": "e4b94109a51e329ffd42abea80a5a09b934e365a3864bdf924551638b2b9c9e9"}, "downloads": -1, "filename": "sqlalchemy_sphinx-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4ab5785645ad60be677c3a89c7dd58cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8053, "upload_time": "2019-09-15T05:41:16", "upload_time_iso_8601": "2019-09-15T05:41:16.309022Z", "url": "https://files.pythonhosted.org/packages/06/32/4f620a205c37af5efa5c803fcc306a123bd670a0b5384e8dc51df700b2d2/sqlalchemy_sphinx-0.9.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a819a33b60db21f7a4ad8383494e9b65", "sha256": "80300278a8d51556e238a6088b4f158148e2851532350399e3ea74e922aeca47"}, "downloads": -1, "filename": "sqlalchemy_sphinx-0.9.0.tar.gz", "has_sig": false, "md5_digest": "a819a33b60db21f7a4ad8383494e9b65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6042, "upload_time": "2019-09-15T05:41:18", "upload_time_iso_8601": "2019-09-15T05:41:18.149688Z", "url": "https://files.pythonhosted.org/packages/4d/6f/9b6046805de5f370d0686eab853f7a82a1d281a4ad26c8deb8357511c5e0/sqlalchemy_sphinx-0.9.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:52 2020"}