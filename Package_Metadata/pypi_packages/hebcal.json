{"info": {"author": "Moshe G", "author_email": "themygcompany@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Hebcal\n\n### A python package for working with Hebrew dates, times, and holidays\n\n#### Note: This is still in development and not ready for production. There will still be lots of breaking changes.\n\nThere are several python packages that deal with Hebrew dates, Z'manim and Jewish holidays. However, since the Hebrew calendar considers nightfall the beginning of the new day, I've found it very inconvenient to work with other packages. Just converting a Gregorian date to a Hebrew date doesn't give you the proper conversion, as it could be past nightfall, which needs to manually accommodated.\n\nThe same goes for any Jewish holiday package. You first need to figure out what the real Hebrew date is before you can determine if it's currently a holiday.\n\nI wanted something that I can just ask \"is today a rest holiday?\" and I should get a True or False.\n\nI wrote Hebcal to solve these problems. It takes in a latitude and longitude to calculate the location.\nIt can be installed through pip: `pip install hebcal`.\n\nHere's a quick example:\n\n```python\nimport hebcal\n\ntime_info = hebcal.TimeInfo.now(latitude=40.089909, longitude=-74.216270)\nprint(time_info.today_sunrise().strftime('%-I:%M:%S %p'))\n###6:48:58 AM\nprint(time_info.hebrew_date())\n###(5779, 7, 19)\n```\n\nYou can input a specific date and time with a string:\n\n```python\ntime_info = hebcal.TimeInfo('2018, 9, 27 10:07 pm', latitude=40.089909, longitude=-74.216270)\nprint(time_info.today_sunrise().strftime('%-I:%M:%S %p'))\n###6:48:58 AM\nprint(time_info.hebrew_date())\n###(5779, 7, 19)\n```\n\nThe Hebrew date that is returned takes into account sunrise/sunset. If it's after sunset it will automatically return the correct Hebrew date.\n\nYou can also query directly if its night, or day\n\n```python\nprint(time_info.is_night())\n###True\nprint(time_info.is_day())\n###False\n```\n\n<sub>\nNote: Calculating the timezone from the lat/lon slows down the calculations. It is best to pass the timezone as an argument:</sub>\n\n```python\ntime_info = hebcal.TimeInfo.now(timezone='America/New_York', latitude=40.089909, longitude=-74.216270)\n```\n\nYou can manually get the timezone using Hebcal:\n\n```python\nfrom hebcal.util.location import get_location\ntimezone = get_location(latitude==40.089909, longitude=-74.216270)\nprint(timezone)\n###America/New_York\n```\n\n### Hebcal zmanim.Zmanim\n\n<sub>note: All times are datetime.datetime objects. They can be formated using `.strftime()`.</sub>\n\nHere's an example of the hebcal.zmanim\n\n```python\ntime_info = hebcal.TimeInfo.now(latitude=40.089909, longitude=-74.216270)\n\n# pass a hbcal.TimeInfo object into Zmanim\nzmanim = hebcal.Zmanim(time_info)\nprint(zmanim.last_shema_ma)\n###2018-09-27 09:12:12.895624-04:00\nprint(zmanim.last_shema_ma.strftime(\"%-I:%M:%S %p\"))\n###9:12:12 AM\n```\n\nOther than accessing individual zmanim, You can just print the Zmanim object, which returns formated times (i.e. `9:12:12 AM`).\n\nAnother option is to get all the zmanim configures as json:\n\n```python\nzmanim_json = hebcal.Zmanim.json(time_info)\nprint(zmanim_json['earliest mincha'])\n###2018-09-27 13:17:19.756457-04:00\n```\n\nAdd calandar README here.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TheBestMoshe/hebcal", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "hebcal", "package_url": "https://pypi.org/project/hebcal/", "platform": "", "project_url": "https://pypi.org/project/hebcal/", "project_urls": {"Homepage": "https://github.com/TheBestMoshe/hebcal"}, "release_url": "https://pypi.org/project/hebcal/0.0.1a0.dev4/", "requires_dist": ["convertdate (==2.1.3)", "ephem (==3.7.6.0)", "py-dateutil (==2.2)", "pyluach (==0.3.0.dev1)", "pytz (==2018.5)", "tzwhere (==3.0.3)"], "requires_python": ">=3.6", "summary": "A Python package to manipulate location aware, Hebrew dates, times, and holidays.", "version": "0.0.1a0.dev4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Hebcal</h1>\n<h3>A python package for working with Hebrew dates, times, and holidays</h3>\n<h4>Note: This is still in development and not ready for production. There will still be lots of breaking changes.</h4>\n<p>There are several python packages that deal with Hebrew dates, Z'manim and Jewish holidays. However, since the Hebrew calendar considers nightfall the beginning of the new day, I've found it very inconvenient to work with other packages. Just converting a Gregorian date to a Hebrew date doesn't give you the proper conversion, as it could be past nightfall, which needs to manually accommodated.</p>\n<p>The same goes for any Jewish holiday package. You first need to figure out what the real Hebrew date is before you can determine if it's currently a holiday.</p>\n<p>I wanted something that I can just ask \"is today a rest holiday?\" and I should get a True or False.</p>\n<p>I wrote Hebcal to solve these problems. It takes in a latitude and longitude to calculate the location.\nIt can be installed through pip: <code>pip install hebcal</code>.</p>\n<p>Here's a quick example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">hebcal</span>\n\n<span class=\"n\">time_info</span> <span class=\"o\">=</span> <span class=\"n\">hebcal</span><span class=\"o\">.</span><span class=\"n\">TimeInfo</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">(</span><span class=\"n\">latitude</span><span class=\"o\">=</span><span class=\"mf\">40.089909</span><span class=\"p\">,</span> <span class=\"n\">longitude</span><span class=\"o\">=-</span><span class=\"mf\">74.216270</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">time_info</span><span class=\"o\">.</span><span class=\"n\">today_sunrise</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">'%-I:%M:%S %p'</span><span class=\"p\">))</span>\n<span class=\"c1\">###6:48:58 AM</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">time_info</span><span class=\"o\">.</span><span class=\"n\">hebrew_date</span><span class=\"p\">())</span>\n<span class=\"c1\">###(5779, 7, 19)</span>\n</pre>\n<p>You can input a specific date and time with a string:</p>\n<pre><span class=\"n\">time_info</span> <span class=\"o\">=</span> <span class=\"n\">hebcal</span><span class=\"o\">.</span><span class=\"n\">TimeInfo</span><span class=\"p\">(</span><span class=\"s1\">'2018, 9, 27 10:07 pm'</span><span class=\"p\">,</span> <span class=\"n\">latitude</span><span class=\"o\">=</span><span class=\"mf\">40.089909</span><span class=\"p\">,</span> <span class=\"n\">longitude</span><span class=\"o\">=-</span><span class=\"mf\">74.216270</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">time_info</span><span class=\"o\">.</span><span class=\"n\">today_sunrise</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">'%-I:%M:%S %p'</span><span class=\"p\">))</span>\n<span class=\"c1\">###6:48:58 AM</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">time_info</span><span class=\"o\">.</span><span class=\"n\">hebrew_date</span><span class=\"p\">())</span>\n<span class=\"c1\">###(5779, 7, 19)</span>\n</pre>\n<p>The Hebrew date that is returned takes into account sunrise/sunset. If it's after sunset it will automatically return the correct Hebrew date.</p>\n<p>You can also query directly if its night, or day</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">time_info</span><span class=\"o\">.</span><span class=\"n\">is_night</span><span class=\"p\">())</span>\n<span class=\"c1\">###True</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">time_info</span><span class=\"o\">.</span><span class=\"n\">is_day</span><span class=\"p\">())</span>\n<span class=\"c1\">###False</span>\n</pre>\n<sub>\nNote: Calculating the timezone from the lat/lon slows down the calculations. It is best to pass the timezone as an argument:</sub>\n<pre><span class=\"n\">time_info</span> <span class=\"o\">=</span> <span class=\"n\">hebcal</span><span class=\"o\">.</span><span class=\"n\">TimeInfo</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">(</span><span class=\"n\">timezone</span><span class=\"o\">=</span><span class=\"s1\">'America/New_York'</span><span class=\"p\">,</span> <span class=\"n\">latitude</span><span class=\"o\">=</span><span class=\"mf\">40.089909</span><span class=\"p\">,</span> <span class=\"n\">longitude</span><span class=\"o\">=-</span><span class=\"mf\">74.216270</span><span class=\"p\">)</span>\n</pre>\n<p>You can manually get the timezone using Hebcal:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">hebcal.util.location</span> <span class=\"kn\">import</span> <span class=\"n\">get_location</span>\n<span class=\"n\">timezone</span> <span class=\"o\">=</span> <span class=\"n\">get_location</span><span class=\"p\">(</span><span class=\"n\">latitude</span><span class=\"o\">==</span><span class=\"mf\">40.089909</span><span class=\"p\">,</span> <span class=\"n\">longitude</span><span class=\"o\">=-</span><span class=\"mf\">74.216270</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">timezone</span><span class=\"p\">)</span>\n<span class=\"c1\">###America/New_York</span>\n</pre>\n<h3>Hebcal zmanim.Zmanim</h3>\n<p><sub>note: All times are datetime.datetime objects. They can be formated using <code>.strftime()</code>.</sub></p>\n<p>Here's an example of the hebcal.zmanim</p>\n<pre><span class=\"n\">time_info</span> <span class=\"o\">=</span> <span class=\"n\">hebcal</span><span class=\"o\">.</span><span class=\"n\">TimeInfo</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">(</span><span class=\"n\">latitude</span><span class=\"o\">=</span><span class=\"mf\">40.089909</span><span class=\"p\">,</span> <span class=\"n\">longitude</span><span class=\"o\">=-</span><span class=\"mf\">74.216270</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># pass a hbcal.TimeInfo object into Zmanim</span>\n<span class=\"n\">zmanim</span> <span class=\"o\">=</span> <span class=\"n\">hebcal</span><span class=\"o\">.</span><span class=\"n\">Zmanim</span><span class=\"p\">(</span><span class=\"n\">time_info</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">zmanim</span><span class=\"o\">.</span><span class=\"n\">last_shema_ma</span><span class=\"p\">)</span>\n<span class=\"c1\">###2018-09-27 09:12:12.895624-04:00</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">zmanim</span><span class=\"o\">.</span><span class=\"n\">last_shema_ma</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s2\">\"%-I:%M:%S %p\"</span><span class=\"p\">))</span>\n<span class=\"c1\">###9:12:12 AM</span>\n</pre>\n<p>Other than accessing individual zmanim, You can just print the Zmanim object, which returns formated times (i.e. <code>9:12:12 AM</code>).</p>\n<p>Another option is to get all the zmanim configures as json:</p>\n<pre><span class=\"n\">zmanim_json</span> <span class=\"o\">=</span> <span class=\"n\">hebcal</span><span class=\"o\">.</span><span class=\"n\">Zmanim</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">(</span><span class=\"n\">time_info</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">zmanim_json</span><span class=\"p\">[</span><span class=\"s1\">'earliest mincha'</span><span class=\"p\">])</span>\n<span class=\"c1\">###2018-09-27 13:17:19.756457-04:00</span>\n</pre>\n<p>Add calandar README here.</p>\n\n          </div>"}, "last_serial": 6370736, "releases": {"0.0.1a0.dev0": [{"comment_text": "", "digests": {"md5": "2b52b8d17241633f6cb4bf3e92354c65", "sha256": "d6c899ca2d319514456bfc58c6bc49ba48d58f2c7ebf6ad6adb052e56d4d855f"}, "downloads": -1, "filename": "hebcal-0.0.1a0.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "2b52b8d17241633f6cb4bf3e92354c65", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17561, "upload_time": "2018-10-03T19:16:54", "upload_time_iso_8601": "2018-10-03T19:16:54.075402Z", "url": "https://files.pythonhosted.org/packages/c3/0e/add56a53b73e4531645f632a056877b9e02b3b1e8b769ab5c837caf33a67/hebcal-0.0.1a0.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2970c4134c46ec1e3e16c709cc13beee", "sha256": "3fd021ef23c65b98d66900868040c57f92cc4c3fb52f8a5e001c5d66d00a6dce"}, "downloads": -1, "filename": "hebcal-0.0.1a0.dev0.tar.gz", "has_sig": false, "md5_digest": "2970c4134c46ec1e3e16c709cc13beee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11182, "upload_time": "2018-10-03T19:16:55", "upload_time_iso_8601": "2018-10-03T19:16:55.260344Z", "url": "https://files.pythonhosted.org/packages/3e/39/c6bcb2e8f4da03403cf05db11ef3ca519378e2a2015b82cb5548c4b3b17d/hebcal-0.0.1a0.dev0.tar.gz", "yanked": false}], "0.0.1a0.dev1": [{"comment_text": "", "digests": {"md5": "848d4b3ec5729f5dfdaf5fe194e8dc69", "sha256": "20249c751081c226cde12ee924d36f5c2d3ca49182dbc93ccad6e250f917d5ce"}, "downloads": -1, "filename": "hebcal-0.0.1a0.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "848d4b3ec5729f5dfdaf5fe194e8dc69", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18687, "upload_time": "2018-10-05T15:06:54", "upload_time_iso_8601": "2018-10-05T15:06:54.786666Z", "url": "https://files.pythonhosted.org/packages/b5/ac/0a975817d5f3c64b694f333f84abfe4994fd25b31c9ac9b50c13a2995882/hebcal-0.0.1a0.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78db9075616d878a0c9793b22b3e2b4f", "sha256": "0bab3ebb9964bf7770103d2176615000e9cdb70af088fee135e6c7b309f36784"}, "downloads": -1, "filename": "hebcal-0.0.1a0.dev1.tar.gz", "has_sig": false, "md5_digest": "78db9075616d878a0c9793b22b3e2b4f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11901, "upload_time": "2018-10-05T15:06:56", "upload_time_iso_8601": "2018-10-05T15:06:56.132938Z", "url": "https://files.pythonhosted.org/packages/08/44/53d8d56a5e03510e86687916834d7e60ab38948969d8eda42f50201be0ba/hebcal-0.0.1a0.dev1.tar.gz", "yanked": false}], "0.0.1a0.dev2": [{"comment_text": "", "digests": {"md5": "4dcfea25641912d256e96dee8e8872bc", "sha256": "dd6d485b4b038205136607acd5a9e94de627ce091b039c575fd3b10e960b4e2f"}, "downloads": -1, "filename": "hebcal-0.0.1a0.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "4dcfea25641912d256e96dee8e8872bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18687, "upload_time": "2018-10-05T15:54:10", "upload_time_iso_8601": "2018-10-05T15:54:10.332990Z", "url": "https://files.pythonhosted.org/packages/52/62/4a1aa8698fb24784ab4ffbada3d3531cd62727b9634048d36a67b4099a01/hebcal-0.0.1a0.dev2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "853c9e5c538a46969398ded5f4d63ee1", "sha256": "c2e856e9e0c7332a50e8e439059f04713beaea7b7581076bc58375181634e1ef"}, "downloads": -1, "filename": "hebcal-0.0.1a0.dev2.tar.gz", "has_sig": false, "md5_digest": "853c9e5c538a46969398ded5f4d63ee1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11896, "upload_time": "2018-10-05T15:54:11", "upload_time_iso_8601": "2018-10-05T15:54:11.486301Z", "url": "https://files.pythonhosted.org/packages/a3/18/ca8bbd737fbbe00a91740dae39f2e13dd57e63f582dbbbe3436a1a23dd22/hebcal-0.0.1a0.dev2.tar.gz", "yanked": false}], "0.0.1a0.dev3": [{"comment_text": "", "digests": {"md5": "eaebc58f158b5e117688b29cdcdce711", "sha256": "9198a9a50d22b51d8972af6bb4ef8eee2a13e42ad42a4417cf00590624b6efd7"}, "downloads": -1, "filename": "hebcal-0.0.1a0.dev3-py3-none-any.whl", "has_sig": false, "md5_digest": "eaebc58f158b5e117688b29cdcdce711", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20726, "upload_time": "2019-12-29T05:37:15", "upload_time_iso_8601": "2019-12-29T05:37:15.083645Z", "url": "https://files.pythonhosted.org/packages/c3/96/7b779c02b63ec320bba5332e08d30804e2a9d73b3c4e3f8fcc6bd49ae658/hebcal-0.0.1a0.dev3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f06b4cfc4f89a6018a6f3200fd6618bd", "sha256": "7b043d91433bbacde404dae7f47f429ce1a89fab5a2c6a6d2c137c3a4f75253f"}, "downloads": -1, "filename": "hebcal-0.0.1a0.dev3.tar.gz", "has_sig": false, "md5_digest": "f06b4cfc4f89a6018a6f3200fd6618bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14342, "upload_time": "2019-12-29T05:37:16", "upload_time_iso_8601": "2019-12-29T05:37:16.945195Z", "url": "https://files.pythonhosted.org/packages/09/58/9870997924915b48ff59c76bce5fbd00dbcd9bdaba1bcfa5a598baf2fea2/hebcal-0.0.1a0.dev3.tar.gz", "yanked": false}], "0.0.1a0.dev4": [{"comment_text": "", "digests": {"md5": "8078311d7ce0da02a712ecf47f914ef6", "sha256": "2c5e74d5305428a607ef3844c0008dd6b0872deab7a87f736953e7de61cbc9ca"}, "downloads": -1, "filename": "hebcal-0.0.1a0.dev4-py3-none-any.whl", "has_sig": false, "md5_digest": "8078311d7ce0da02a712ecf47f914ef6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20727, "upload_time": "2019-12-29T05:41:59", "upload_time_iso_8601": "2019-12-29T05:41:59.115019Z", "url": "https://files.pythonhosted.org/packages/36/1f/b9d2946084c11ee85c79e1a138281470853fc52b6d935e4364ee91b2b0ca/hebcal-0.0.1a0.dev4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96db3b5a05dba17888f1787c5e2e64be", "sha256": "28755c3d38bb9d595ca6220b60afeedc2256b53c9d16a970afcc1d63b138b86f"}, "downloads": -1, "filename": "hebcal-0.0.1a0.dev4.tar.gz", "has_sig": false, "md5_digest": "96db3b5a05dba17888f1787c5e2e64be", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14344, "upload_time": "2019-12-29T05:42:10", "upload_time_iso_8601": "2019-12-29T05:42:10.098778Z", "url": "https://files.pythonhosted.org/packages/6c/17/88a77d5867cc6fdf14d6800d408a898c3e6573dba4cd6597d92da6c317e9/hebcal-0.0.1a0.dev4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8078311d7ce0da02a712ecf47f914ef6", "sha256": "2c5e74d5305428a607ef3844c0008dd6b0872deab7a87f736953e7de61cbc9ca"}, "downloads": -1, "filename": "hebcal-0.0.1a0.dev4-py3-none-any.whl", "has_sig": false, "md5_digest": "8078311d7ce0da02a712ecf47f914ef6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20727, "upload_time": "2019-12-29T05:41:59", "upload_time_iso_8601": "2019-12-29T05:41:59.115019Z", "url": "https://files.pythonhosted.org/packages/36/1f/b9d2946084c11ee85c79e1a138281470853fc52b6d935e4364ee91b2b0ca/hebcal-0.0.1a0.dev4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96db3b5a05dba17888f1787c5e2e64be", "sha256": "28755c3d38bb9d595ca6220b60afeedc2256b53c9d16a970afcc1d63b138b86f"}, "downloads": -1, "filename": "hebcal-0.0.1a0.dev4.tar.gz", "has_sig": false, "md5_digest": "96db3b5a05dba17888f1787c5e2e64be", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14344, "upload_time": "2019-12-29T05:42:10", "upload_time_iso_8601": "2019-12-29T05:42:10.098778Z", "url": "https://files.pythonhosted.org/packages/6c/17/88a77d5867cc6fdf14d6800d408a898c3e6573dba4cd6597d92da6c317e9/hebcal-0.0.1a0.dev4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:53 2020"}