{"info": {"author": "Gr\u00e9gory Salvan", "author_email": "apieum@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Other Environment", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "***********\nweakreflist\n***********\n\n.. image:: https://pypip.in/v/weakreflist/badge.png\n        :target: https://pypi.python.org/pypi/weakreflist\n\n---------------------------------------------------------------------\nA WeakList class for storing objects using weak references in a list.\n---------------------------------------------------------------------\n\n\n**Table of Contents**\n\n\n.. contents::\n    :local:\n    :depth: 1\n    :backlinks: none\n\n\n=============\nInstallation\n=============\n\nInstall it from pypi::\n\n  pip install weakreflist\n\nor from sources::\n\n  git clone git@github.com:apieum/weakreflist.git\n  cd weakreflist\n  python setup.py install\n\n=====\nUsage\n=====\nSame as a *list* except that when a weakref-able variable is deleted, it is removed from the list.\n\n**Example for CPython:**\n\n   .. code-block:: python\n\n      from weakreflist import WeakList\n\n      class A(object):\n          \"\"\"weakrefs don't function directly on object()\"\"\"\n      objectA = A()\n      my_list = WeakList([objectA])\n      assert len(my_list) == 1\n      del objectA\n      assert len(my_list) == 0 # objectA removed from list\n\n\n*Note:*\n   Pypy (probably jython, cython...) have a different implementation of garbage collector and it is known that weakrefs doesn't function the same way.\n\n   You need to explicitly call gc.collect() which has an impact on performance.\n\n**Example for other python implementations**\n\n   .. code-block:: python\n\n      from weakreflist import WeakList\n      import gc\n\n      class A(object):\n          \"\"\"weakrefs don't function directly on object()\"\"\"\n      objectA = A()\n      my_list = WeakList([objectA])\n      assert len(my_list) == 1\n      del objectA\n\n      assert len(my_list) == 1 # gc not done\n      gc.collect() # must be called\n      assert len(my_list) == 0\n\n\n===========\nDevelopment\n===========\n\nYour feedback, code review, improvements or bugs, and help to document is appreciated.\nYou can contact me by mail: apieum [at] gmail [dot] com\n\nTest recommended requirements::\n\n  pip install -r dev-requirements.txt\n\nSometimes --spec-color doesn't function. Uninstall nosespec and nosecolor then reinstall nosecolor and nosespec separatly in this order (nosecolor first).\n\nLaunch tests::\n\n  git clone git@github.com:apieum/weakreflist.git\n  cd weakreflist\n  nosetests --with-spec --spec-color ./weakreflist\n  # or with watch\n  # nosetests --with-spec --spec-color --with-watch ./weakreflist\n\n\n\n============\nContributors\n============\n\nThanks to `BoonsNaibot <https://github.com/BoonsNaibot>`_ to have contributed to:\n  * extended slicing support\n  * \\_\\_reversed\\_\\_, count, extend, insert methods.\n\n\n\n.. image:: https://secure.travis-ci.org/apieum/weakreflist.png?branch=master\n   :target: https://travis-ci.org/apieum/weakreflist", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.python.org/pypi/weakreflist", "keywords": "", "license": "LGPL", "maintainer": "", "maintainer_email": "", "name": "weakreflist", "package_url": "https://pypi.org/project/weakreflist/", "platform": "", "project_url": "https://pypi.org/project/weakreflist/", "project_urls": {"Homepage": "http://www.python.org/pypi/weakreflist"}, "release_url": "https://pypi.org/project/weakreflist/0.4/", "requires_dist": null, "requires_python": "", "summary": "A WeakList class for storing objects using weak references in a list.", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/weakreflist\" rel=\"nofollow\"><img alt=\"https://pypip.in/v/weakreflist/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2bcd28bb98fb74a3e8dcbe42f5680cf872aa912a/68747470733a2f2f70797069702e696e2f762f7765616b7265666c6973742f62616467652e706e67\"></a>\n<div id=\"a-weaklist-class-for-storing-objects-using-weak-references-in-a-list\">\n<h2>A WeakList class for storing objects using weak references in a list.</h2>\n<p><strong>Table of Contents</strong></p>\n<div id=\"contents\">\n<ul>\n<li><a href=\"#installation\" id=\"id1\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" id=\"id2\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#development\" id=\"id3\" rel=\"nofollow\">Development</a></li>\n<li><a href=\"#contributors\" id=\"id4\" rel=\"nofollow\">Contributors</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install it from pypi:</p>\n<pre>pip install weakreflist\n</pre>\n<p>or from sources:</p>\n<pre>git clone git@github.com:apieum/weakreflist.git\ncd weakreflist\npython setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Same as a <em>list</em> except that when a weakref-able variable is deleted, it is removed from the list.</p>\n<p><strong>Example for CPython:</strong></p>\n<blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">weakreflist</span> <span class=\"kn\">import</span> <span class=\"n\">WeakList</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"weakrefs don't function directly on object()\"\"\"</span>\n<span class=\"n\">objectA</span> <span class=\"o\">=</span> <span class=\"n\">A</span><span class=\"p\">()</span>\n<span class=\"n\">my_list</span> <span class=\"o\">=</span> <span class=\"n\">WeakList</span><span class=\"p\">([</span><span class=\"n\">objectA</span><span class=\"p\">])</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">my_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n<span class=\"k\">del</span> <span class=\"n\">objectA</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">my_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"c1\"># objectA removed from list</span>\n</pre>\n</blockquote>\n<dl>\n<dt><em>Note:</em></dt>\n<dd><p>Pypy (probably jython, cython\u2026) have a different implementation of garbage collector and it is known that weakrefs doesn\u2019t function the same way.</p>\n<p>You need to explicitly call gc.collect() which has an impact on performance.</p>\n</dd>\n</dl>\n<p><strong>Example for other python implementations</strong></p>\n<blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">weakreflist</span> <span class=\"kn\">import</span> <span class=\"n\">WeakList</span>\n<span class=\"kn\">import</span> <span class=\"nn\">gc</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"weakrefs don't function directly on object()\"\"\"</span>\n<span class=\"n\">objectA</span> <span class=\"o\">=</span> <span class=\"n\">A</span><span class=\"p\">()</span>\n<span class=\"n\">my_list</span> <span class=\"o\">=</span> <span class=\"n\">WeakList</span><span class=\"p\">([</span><span class=\"n\">objectA</span><span class=\"p\">])</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">my_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n<span class=\"k\">del</span> <span class=\"n\">objectA</span>\n\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">my_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"c1\"># gc not done</span>\n<span class=\"n\">gc</span><span class=\"o\">.</span><span class=\"n\">collect</span><span class=\"p\">()</span> <span class=\"c1\"># must be called</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">my_list</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n</pre>\n</blockquote>\n</div>\n<div id=\"development\">\n<h3>Development</h3>\n<p>Your feedback, code review, improvements or bugs, and help to document is appreciated.\nYou can contact me by mail: apieum [at] gmail [dot] com</p>\n<p>Test recommended requirements:</p>\n<pre>pip install -r dev-requirements.txt\n</pre>\n<p>Sometimes \u2013spec-color doesn\u2019t function. Uninstall nosespec and nosecolor then reinstall nosecolor and nosespec separatly in this order (nosecolor first).</p>\n<p>Launch tests:</p>\n<pre>git clone git@github.com:apieum/weakreflist.git\ncd weakreflist\nnosetests --with-spec --spec-color ./weakreflist\n# or with watch\n# nosetests --with-spec --spec-color --with-watch ./weakreflist\n</pre>\n</div>\n<div id=\"contributors\">\n<h3>Contributors</h3>\n<dl>\n<dt>Thanks to <a href=\"https://github.com/BoonsNaibot\" rel=\"nofollow\">BoonsNaibot</a> to have contributed to:</dt>\n<dd><ul>\n<li>extended slicing support</li>\n<li>__reversed__, count, extend, insert methods.</li>\n</ul>\n</dd>\n</dl>\n<a href=\"https://travis-ci.org/apieum/weakreflist\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/apieum/weakreflist.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/99fb627eb5e860be5c5e58b9849eac78f8adf755/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f61706965756d2f7765616b7265666c6973742e706e673f6272616e63683d6d6173746572\"></a>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2761435, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d4151d611f8c9f3ddf89e499719cec0f", "sha256": "ed546f10dbcfcf6c25298a28c5b6ab22ad83a1125247f017dcca4bdeeb7b46db"}, "downloads": -1, "filename": "weakreflist-0.1.tar.gz", "has_sig": false, "md5_digest": "d4151d611f8c9f3ddf89e499719cec0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2299, "upload_time": "2012-11-21T08:51:03", "upload_time_iso_8601": "2012-11-21T08:51:03.224887Z", "url": "https://files.pythonhosted.org/packages/30/27/6119e8d1e7ca7592b8962edc372357a14f85fc049371e4db96990567f3d9/weakreflist-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "581f089d292dfeb12bdc02737c3b0005", "sha256": "9cfc33a6a205bb9310e9dc9a1c5ffaf85c9850d7ceacabc3b937bde427074cfa"}, "downloads": -1, "filename": "weakreflist-0.2.tar.gz", "has_sig": false, "md5_digest": "581f089d292dfeb12bdc02737c3b0005", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2563, "upload_time": "2013-02-10T16:21:55", "upload_time_iso_8601": "2013-02-10T16:21:55.238708Z", "url": "https://files.pythonhosted.org/packages/0d/a1/46a8d5422c1e152ff98fdeddc0d80f0304ebd5de8d69a0707bf8bdcc835c/weakreflist-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "4d6df7867f46a62a874827bb00ac39ba", "sha256": "253ff045bceb7d4c081cfd9989c75f691d726921b95bd8340c23fe3fce0d8664"}, "downloads": -1, "filename": "weakreflist-0.3.tar.gz", "has_sig": false, "md5_digest": "4d6df7867f46a62a874827bb00ac39ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6460, "upload_time": "2014-08-30T14:14:37", "upload_time_iso_8601": "2014-08-30T14:14:37.942267Z", "url": "https://files.pythonhosted.org/packages/b3/83/1890eac65f309e6df9b75178ebda759df5e55080887ecad20e48824ff9c1/weakreflist-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "deea3d9c1f95c1c91cd21ab62336259d", "sha256": "16fd6d8c81a0b264c436df91cf19e37a3f8162a0b1e140f94c8a1e460d6ed1af"}, "downloads": -1, "filename": "weakreflist-0.3.1.tar.gz", "has_sig": false, "md5_digest": "deea3d9c1f95c1c91cd21ab62336259d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6490, "upload_time": "2014-08-31T01:18:49", "upload_time_iso_8601": "2014-08-31T01:18:49.379357Z", "url": "https://files.pythonhosted.org/packages/28/c8/1eab20c31f22ebc9fa2f7ee4ebf657e2c154712900838bf7254cbcea3e2f/weakreflist-0.3.1.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "fb424b900f67e2ad2584c4af29c24498", "sha256": "28bb41d87b8d4ae9ca9c388ef322c6f4473346d54985863d41ba4f29ba797a09"}, "downloads": -1, "filename": "weakreflist-0.4.tar.gz", "has_sig": false, "md5_digest": "fb424b900f67e2ad2584c4af29c24498", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7545, "upload_time": "2017-04-07T23:03:05", "upload_time_iso_8601": "2017-04-07T23:03:05.951338Z", "url": "https://files.pythonhosted.org/packages/22/1b/d4716e0f52f026c8620a0c973a64907934068c41195cf18a9e123eae3066/weakreflist-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fb424b900f67e2ad2584c4af29c24498", "sha256": "28bb41d87b8d4ae9ca9c388ef322c6f4473346d54985863d41ba4f29ba797a09"}, "downloads": -1, "filename": "weakreflist-0.4.tar.gz", "has_sig": false, "md5_digest": "fb424b900f67e2ad2584c4af29c24498", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7545, "upload_time": "2017-04-07T23:03:05", "upload_time_iso_8601": "2017-04-07T23:03:05.951338Z", "url": "https://files.pythonhosted.org/packages/22/1b/d4716e0f52f026c8620a0c973a64907934068c41195cf18a9e123eae3066/weakreflist-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:31:37 2020"}