{"info": {"author": "Austin Bingham", "author_email": "austin@sixty-north.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "This kernel adds support for Elm to [Jupyter](http://jupyter.org/) notebooks.\n\nWhile basic functionality is in place, this is still very much a work in\nprogress. I'm still figuring it all out. Any help, ideas, etc. would be great.\n\n# Requirements\n- Python 3.6+\n\n# Installation\n\nEither install from a repository using `pip`:\n\n```\npip install elm_kernel\n```\n\nor install the package from source:\n\n```\npip install -e .\n```\n\nThen install the kernel spec:\n```\npython -m elm_kernel.install\n```\n\n# Usage\n\nRun `jupyter notebook` and select the Elm kernel for a new notebook.\n\n## Multi-cell code examples\n\nBy default, when you execute a code cell with the Elm kernel the code will *not*\nbe compiled. Instead, the kernel simply queues up code cells. This way you can\nbreak longer examples over multiple cells, interleaving the code cells with\nsupporting Markdown cells.\n\nIn order to ask the kernel to actually compile your code, you need to terminate\na code cell with the line:\n\n```\n-- compile-code\n```\n\nWhen the kernel sees a cell like this it contatenates, in cell-execution order,\nall of the executed but uncompiled code cells (i.e. everything since the start\nof the kernel or the last `-- compile-code` cell). It then compiles the\nconcatenated code, returning the result to the notebook.\n\nFor a concrete example of this, see\n[`examples/the-elm-architecture.ipynb`](https://github.com/abingham/jupyter-elm-kernel/blob/master/examples/the-elm-architecture.ipynb).\n\nThis is a bit hacky, and we're actively searching for a better alternative.\nIdeas are welcome!\n\n# Examples\n\nThe `examples` directory contains a few examples of how to use this kernel. Just\ngo to that directory and run `jupyter notebook` to see them.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/abingham/jupyter-elm-kernel", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "elm-kernel", "package_url": "https://pypi.org/project/elm-kernel/", "platform": "", "project_url": "https://pypi.org/project/elm-kernel/", "project_urls": {"Homepage": "https://github.com/abingham/jupyter-elm-kernel"}, "release_url": "https://pypi.org/project/elm-kernel/0.21.1/", "requires_dist": ["jupyter"], "requires_python": "", "summary": "Jupyter kernel for executing Elm code", "version": "0.21.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This kernel adds support for Elm to [Jupyter](<a href=\"http://jupyter.org/\" rel=\"nofollow\">http://jupyter.org/</a>) notebooks.</p>\n<p>While basic functionality is in place, this is still very much a work in\nprogress. I\u2019m still figuring it all out. Any help, ideas, etc. would be great.</p>\n<p># Requirements\n- Python 3.6+</p>\n<p># Installation</p>\n<p>Either install from a repository using <cite>pip</cite>:</p>\n<p><tt>`\npip install elm_kernel\n`</tt></p>\n<p>or install the package from source:</p>\n<p><tt>`\npip install <span class=\"pre\">-e</span> .\n`</tt></p>\n<p>Then install the kernel spec:\n<tt>`\npython <span class=\"pre\">-m</span> elm_kernel.install\n`</tt></p>\n<p># Usage</p>\n<p>Run <cite>jupyter notebook</cite> and select the Elm kernel for a new notebook.</p>\n<p>## Multi-cell code examples</p>\n<p>By default, when you execute a code cell with the Elm kernel the code will <em>not</em>\nbe compiled. Instead, the kernel simply queues up code cells. This way you can\nbreak longer examples over multiple cells, interleaving the code cells with\nsupporting Markdown cells.</p>\n<p>In order to ask the kernel to actually compile your code, you need to terminate\na code cell with the line:</p>\n<p><tt>`\n<span class=\"pre\">--</span> <span class=\"pre\">compile-code</span>\n`</tt></p>\n<p>When the kernel sees a cell like this it contatenates, in cell-execution order,\nall of the executed but uncompiled code cells (i.e. everything since the start\nof the kernel or the last <cite>\u2013 compile-code</cite> cell). It then compiles the\nconcatenated code, returning the result to the notebook.</p>\n<p>For a concrete example of this, see\n[<cite>examples/the-elm-architecture.ipynb</cite>](<a href=\"https://github.com/abingham/jupyter-elm-kernel/blob/master/examples/the-elm-architecture.ipynb\" rel=\"nofollow\">https://github.com/abingham/jupyter-elm-kernel/blob/master/examples/the-elm-architecture.ipynb</a>).</p>\n<p>This is a bit hacky, and we\u2019re actively searching for a better alternative.\nIdeas are welcome!</p>\n<p># Examples</p>\n<p>The <cite>examples</cite> directory contains a few examples of how to use this kernel. Just\ngo to that directory and run <cite>jupyter notebook</cite> to see them.</p>\n\n          </div>"}, "last_serial": 6556180, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "85a2880009e1214b938e924b8e14682a", "sha256": "639635e8cde64159f906be9f99b5f8b4f6ed6b3fb713684f296f3a64a82000e1"}, "downloads": -1, "filename": "elm_kernel-0.1.tar.gz", "has_sig": false, "md5_digest": "85a2880009e1214b938e924b8e14682a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2377, "upload_time": "2017-03-27T19:36:46", "upload_time_iso_8601": "2017-03-27T19:36:46.699749Z", "url": "https://files.pythonhosted.org/packages/88/e5/3c72d86dafed02cd16f9f7843000025ba428771ce684629bb6eedf0e4668/elm_kernel-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "eb189f601bad8d2bf5a5d108ff8c38a2", "sha256": "0e6eba2c1028abd09a1ca218f331e732702dd266281dd228634fc8a6a1e3b38b"}, "downloads": -1, "filename": "elm_kernel-0.2.tar.gz", "has_sig": false, "md5_digest": "eb189f601bad8d2bf5a5d108ff8c38a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4433, "upload_time": "2017-04-10T19:29:44", "upload_time_iso_8601": "2017-04-10T19:29:44.973370Z", "url": "https://files.pythonhosted.org/packages/a2/a0/e17c02f89cd5bc39029653d7984218b9e10d09aec22918c26732b0404156/elm_kernel-0.2.tar.gz", "yanked": false}], "0.21.1": [{"comment_text": "", "digests": {"md5": "f6302670696709292cd351f82b1ffbb0", "sha256": "b5e923592f06938708b3f7ae498c8b819df6659311f61085f180782ee9d6363f"}, "downloads": -1, "filename": "elm_kernel-0.21.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f6302670696709292cd351f82b1ffbb0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6635, "upload_time": "2020-02-01T23:36:45", "upload_time_iso_8601": "2020-02-01T23:36:45.966103Z", "url": "https://files.pythonhosted.org/packages/3a/ae/c5539d0cced446e1734666cca0f5391af159b028088dbaea841a8d4270c7/elm_kernel-0.21.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d5a745cf121b17c9e402be9c4f8e379", "sha256": "1b617ec9da7a776b054fb545aa843d1d4afca43b06fb708f2345b601e390a249"}, "downloads": -1, "filename": "elm_kernel-0.21.1.tar.gz", "has_sig": false, "md5_digest": "4d5a745cf121b17c9e402be9c4f8e379", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5018, "upload_time": "2020-02-01T23:36:47", "upload_time_iso_8601": "2020-02-01T23:36:47.176172Z", "url": "https://files.pythonhosted.org/packages/e6/c0/f2b9939e9d5aab94441b95c6fca5115269971b34984c53d8e528145ca8c7/elm_kernel-0.21.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f6302670696709292cd351f82b1ffbb0", "sha256": "b5e923592f06938708b3f7ae498c8b819df6659311f61085f180782ee9d6363f"}, "downloads": -1, "filename": "elm_kernel-0.21.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f6302670696709292cd351f82b1ffbb0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6635, "upload_time": "2020-02-01T23:36:45", "upload_time_iso_8601": "2020-02-01T23:36:45.966103Z", "url": "https://files.pythonhosted.org/packages/3a/ae/c5539d0cced446e1734666cca0f5391af159b028088dbaea841a8d4270c7/elm_kernel-0.21.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d5a745cf121b17c9e402be9c4f8e379", "sha256": "1b617ec9da7a776b054fb545aa843d1d4afca43b06fb708f2345b601e390a249"}, "downloads": -1, "filename": "elm_kernel-0.21.1.tar.gz", "has_sig": false, "md5_digest": "4d5a745cf121b17c9e402be9c4f8e379", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5018, "upload_time": "2020-02-01T23:36:47", "upload_time_iso_8601": "2020-02-01T23:36:47.176172Z", "url": "https://files.pythonhosted.org/packages/e6/c0/f2b9939e9d5aab94441b95c6fca5115269971b34984c53d8e528145ca8c7/elm_kernel-0.21.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:47 2020"}