{"info": {"author": "Nick Bruun", "author_email": "nick@bruun.co", "bugtrack_url": null, "classifiers": [], "description": "pyvat -- VAT validation and calculation for Python\n==================================================\n\n.. image:: https://travis-ci.org/iconfinder/pyvat.png?branch=master\n        :target: https://travis-ci.org/iconfinder/pyvat\n\nWith EU VAT handling rules becoming ever more ridiculous and complicated, businesses within the EU are faced with the complexity of having to validate VAT numbers. ``pyvat`` was built for `Iconfinder's marketplace <http://www.iconfinder.com/>`_ to handle just this problem.\n\nValidation of VAT numbers is performed in two steps: firstly, the VAT number is checked against an expression for the given country if one such is available, after which it is checked against a registry if one such is available.\n\nCalculation of VAT rates for sales is supported within the EU for items covered by the new EU directive for `VAT on telecommunications, broadcasting and electronic services <http://ec.europa.eu/taxation_customs/taxation/vat/how_vat_works/telecom/index_en.htm>`_.\n\n\nInstallation\n------------\n\nTo install requests, do yourself a favor and don't use anything other than `pip <http://www.pip-installer.org/>`_:\n\n.. code-block:: bash\n\n    $ pip install pyvat\n\n\nUsage\n-----\n\n``pyvat`` exposes its functionality through three simple methods:\n\n``pyvat.check_vat_number(vat_number, country_code=None)``\n   Test if a VAT number is valid.\n\n   If possible, the VAT number will be checked against available registries.\n\n   :Parameters:\n      * ``vat_number`` -- VAT number to validate.\n      * ``country_code`` -- Optional country code. Should be supplied if known, as there is no guarantee that naively entered VAT numbers contain the correct alpha-2 country code prefix for EU countries just as not all non-EU countries have a reliable country code prefix. Default ``None`` prompting detection.\n\n   :Returns:\n      ``True`` if the VAT number can be fully asserted as valid or ``False`` if not, otherwise ``None`` indicating that the VAT number may or may not be valid.\n\n\n``pyvat.is_vat_number_format_valid(vat_number, country_code=None)``\n   Test if the format of a VAT number is valid.\n\n   :Parameters:\n      * ``vat_number`` -- VAT number to validate.\n      * ``country_code`` -- Optional country code. Should be supplied if known, as there is no guarantee that naively entered VAT numbers contain the correct alpha-2 country code prefix for EU countries just as not all non-EU countries have a reliable country code prefix. Default ``None`` prompting detection.\n\n   :Returns:\n      ``True`` if the VAT number can be fully asserted as valid or ``False`` if not, otherwise ``None`` indicating that the VAT number may or may not be valid.\n\n\n``pyvat.get_sale_vat_charge(date, item_type, buyer, seller)``\n   Get the VAT charge for performing the sale of an item.\n\n   Currently only supports determination of the VAT charge for\n   telecommunications, broadcasting and electronic services in the EU.\n\n   :Parameters:\n      * ``date`` (``datetime.date``) -- Sale date.\n      * ``item_type`` (``pyvat.ItemType``) -- Type of the item being sold.\n      * ``buyer`` (``pyvat.Party``) -- Buyer.\n      * ``seller`` (``pyvat.Party``) -- Seller.\n\n   :Returns:\n      The VAT charge to be applied to the sale of an item.\n\n\nFor more detailed documentation, see the `full pyvat documentation <http://pyvat.readthedocs.org/>`_.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bruun.co/", "keywords": null, "license": "Copyright 2013 Nick Bruun <nick@bruun.co>\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.", "maintainer": null, "maintainer_email": null, "name": "pyvat", "package_url": "https://pypi.org/project/pyvat/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyvat/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://bruun.co/"}, "release_url": "https://pypi.org/project/pyvat/1.3.1/", "requires_dist": null, "requires_python": null, "summary": "VAT validation for Python", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/iconfinder/pyvat\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/iconfinder/pyvat.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6cedd9cacb6f5b04b1bc93e2f1694688e1bffcfd/68747470733a2f2f7472617669732d63692e6f72672f69636f6e66696e6465722f70797661742e706e673f6272616e63683d6d6173746572\"></a>\n<p>With EU VAT handling rules becoming ever more ridiculous and complicated, businesses within the EU are faced with the complexity of having to validate VAT numbers. <tt>pyvat</tt> was built for <a href=\"http://www.iconfinder.com/\" rel=\"nofollow\">Iconfinder\u2019s marketplace</a> to handle just this problem.</p>\n<p>Validation of VAT numbers is performed in two steps: firstly, the VAT number is checked against an expression for the given country if one such is available, after which it is checked against a registry if one such is available.</p>\n<p>Calculation of VAT rates for sales is supported within the EU for items covered by the new EU directive for <a href=\"http://ec.europa.eu/taxation_customs/taxation/vat/how_vat_works/telecom/index_en.htm\" rel=\"nofollow\">VAT on telecommunications, broadcasting and electronic services</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install requests, do yourself a favor and don\u2019t use anything other than <a href=\"http://www.pip-installer.org/\" rel=\"nofollow\">pip</a>:</p>\n<pre>$ pip install pyvat\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><tt>pyvat</tt> exposes its functionality through three simple methods:</p>\n<dl>\n<dt><tt>pyvat.check_vat_number(vat_number, country_code=None)</tt></dt>\n<dd><p>Test if a VAT number is valid.</p>\n<p>If possible, the VAT number will be checked against available registries.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Parameters:</th><td><ul>\n<li><tt>vat_number</tt> \u2013 VAT number to validate.</li>\n<li><tt>country_code</tt> \u2013 Optional country code. Should be supplied if known, as there is no guarantee that naively entered VAT numbers contain the correct alpha-2 country code prefix for EU countries just as not all non-EU countries have a reliable country code prefix. Default <tt>None</tt> prompting detection.</li>\n</ul>\n</td>\n</tr>\n<tr><th>Returns:</th><td><p><tt>True</tt> if the VAT number can be fully asserted as valid or <tt>False</tt> if not, otherwise <tt>None</tt> indicating that the VAT number may or may not be valid.</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd>\n<dt><tt>pyvat.is_vat_number_format_valid(vat_number, country_code=None)</tt></dt>\n<dd><p>Test if the format of a VAT number is valid.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Parameters:</th><td><ul>\n<li><tt>vat_number</tt> \u2013 VAT number to validate.</li>\n<li><tt>country_code</tt> \u2013 Optional country code. Should be supplied if known, as there is no guarantee that naively entered VAT numbers contain the correct alpha-2 country code prefix for EU countries just as not all non-EU countries have a reliable country code prefix. Default <tt>None</tt> prompting detection.</li>\n</ul>\n</td>\n</tr>\n<tr><th>Returns:</th><td><p><tt>True</tt> if the VAT number can be fully asserted as valid or <tt>False</tt> if not, otherwise <tt>None</tt> indicating that the VAT number may or may not be valid.</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd>\n<dt><tt>pyvat.get_sale_vat_charge(date, item_type, buyer, seller)</tt></dt>\n<dd><p>Get the VAT charge for performing the sale of an item.</p>\n<p>Currently only supports determination of the VAT charge for\ntelecommunications, broadcasting and electronic services in the EU.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Parameters:</th><td><ul>\n<li><tt>date</tt> (<tt>datetime.date</tt>) \u2013 Sale date.</li>\n<li><tt>item_type</tt> (<tt>pyvat.ItemType</tt>) \u2013 Type of the item being sold.</li>\n<li><tt>buyer</tt> (<tt>pyvat.Party</tt>) \u2013 Buyer.</li>\n<li><tt>seller</tt> (<tt>pyvat.Party</tt>) \u2013 Seller.</li>\n</ul>\n</td>\n</tr>\n<tr><th>Returns:</th><td><p>The VAT charge to be applied to the sale of an item.</p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>\n<p>For more detailed documentation, see the <a href=\"http://pyvat.readthedocs.org/\" rel=\"nofollow\">full pyvat documentation</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 2860369, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "91cc1988db529eeb979e575aa3a072c7", "sha256": "d5a4c496aa951d657fb7d8c2b3aa90b9d0f274510aa8e256a84d44c720215b51"}, "downloads": -1, "filename": "pyvat-1.0.0.tar.gz", "has_sig": false, "md5_digest": "91cc1988db529eeb979e575aa3a072c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5014, "upload_time": "2013-04-02T10:58:25", "upload_time_iso_8601": "2013-04-02T10:58:25.781514Z", "url": "https://files.pythonhosted.org/packages/e4/79/ebbefec96c24623ae8b53790929b918da4d62e0382d00a64ca6b37f60dd1/pyvat-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "230874d1db5a8d0f9e910c55d4656a71", "sha256": "b64e63d90953b08fdfb37bb2e281491fa00cf1b94857555a4b0fd3614ebc44af"}, "downloads": -1, "filename": "pyvat-1.0.1.tar.gz", "has_sig": false, "md5_digest": "230874d1db5a8d0f9e910c55d4656a71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5028, "upload_time": "2013-04-02T11:03:16", "upload_time_iso_8601": "2013-04-02T11:03:16.531169Z", "url": "https://files.pythonhosted.org/packages/7f/c5/132520d526c108586253068c906ba8890639342566cda14dfd0d564f51d2/pyvat-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "8f81ff7064dedb3ae0d1be561586bda6", "sha256": "d8d2397d250266cd3c9810c5f76095bfeb2a515cd136926dbcd182ba2709854d"}, "downloads": -1, "filename": "pyvat-1.1.0.tar.gz", "has_sig": false, "md5_digest": "8f81ff7064dedb3ae0d1be561586bda6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5563, "upload_time": "2013-07-15T10:34:41", "upload_time_iso_8601": "2013-07-15T10:34:41.617909Z", "url": "https://files.pythonhosted.org/packages/7a/28/78be9002d8c9be76181ded189f4af7a4ce61e9136b4992c2875f30f2f5f8/pyvat-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "b3821e90fbd18bfed4d17900b28c8b91", "sha256": "8e5ab7eaf19961c9ea54a20076b820eed988bca8e21130297ab6fa09d3d2ff77"}, "downloads": -1, "filename": "pyvat-1.1.1.tar.gz", "has_sig": false, "md5_digest": "b3821e90fbd18bfed4d17900b28c8b91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5640, "upload_time": "2013-07-15T13:53:07", "upload_time_iso_8601": "2013-07-15T13:53:07.278552Z", "url": "https://files.pythonhosted.org/packages/ff/90/c47644106994020751dcd1bb49cc18fd812349e14c9ebdc2d77d80668e6b/pyvat-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "84ad1b59e427beef733c6bc9393478ac", "sha256": "0d8b2ac49e46f5a0f362dccb65ba554153b6bccb11b4f9059e84fc262ba74221"}, "downloads": -1, "filename": "pyvat-1.1.2.tar.gz", "has_sig": false, "md5_digest": "84ad1b59e427beef733c6bc9393478ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5648, "upload_time": "2013-09-19T12:40:04", "upload_time_iso_8601": "2013-09-19T12:40:04.334663Z", "url": "https://files.pythonhosted.org/packages/57/ef/7090ce42b3ec7fa647c1c0907452974773b3f7729ecba40d3d73945817c1/pyvat-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "371dd38548b0ecae30f40673259026b4", "sha256": "d1c9e3692df7ec0d498577fed6c0c3588a86ee8aada549d24e73c1a26a285958"}, "downloads": -1, "filename": "pyvat-1.1.3.tar.gz", "has_sig": false, "md5_digest": "371dd38548b0ecae30f40673259026b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5666, "upload_time": "2014-04-29T22:58:07", "upload_time_iso_8601": "2014-04-29T22:58:07.903233Z", "url": "https://files.pythonhosted.org/packages/d3/42/aa14b68f75a1476f68ad3ae8d2b6df61c3799d465d6dc8e9ccccb3c7b6be/pyvat-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "1b33971f2cfa6d854bd4f7ca36ba5eb6", "sha256": "dc109518c31eaca7a64cd434ea47886f46e833eec541ee043ec2abc2111e0637"}, "downloads": -1, "filename": "pyvat-1.1.4.tar.gz", "has_sig": false, "md5_digest": "1b33971f2cfa6d854bd4f7ca36ba5eb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5611, "upload_time": "2014-11-25T13:48:28", "upload_time_iso_8601": "2014-11-25T13:48:28.095910Z", "url": "https://files.pythonhosted.org/packages/cb/a8/3587c52c73a467bff84ffe8c149e3736e0675fc053df84816c82c6c2166d/pyvat-1.1.4.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "365775bd74c6e39a132d5a4b9e532246", "sha256": "2218050789077dae75b6cef0f82a1ef86808a4d148c0efb53a797dc7d8557510"}, "downloads": -1, "filename": "pyvat-1.2.0.tar.gz", "has_sig": false, "md5_digest": "365775bd74c6e39a132d5a4b9e532246", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6594, "upload_time": "2014-11-25T17:16:16", "upload_time_iso_8601": "2014-11-25T17:16:16.241639Z", "url": "https://files.pythonhosted.org/packages/d3/f2/5c499a9c7f56bd94eb4d56db42ed8ee4b7fa1ce838b04e86e2a27248cd70/pyvat-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "5b61fccb47494d85d446ab7d0601abfa", "sha256": "c2535e3c183ad32026fda13725cedf3122944bb8dbb7e0000274feb608a84772"}, "downloads": -1, "filename": "pyvat-1.3.0.tar.gz", "has_sig": false, "md5_digest": "5b61fccb47494d85d446ab7d0601abfa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10433, "upload_time": "2014-12-22T17:34:18", "upload_time_iso_8601": "2014-12-22T17:34:18.232172Z", "url": "https://files.pythonhosted.org/packages/b2/1a/de0dff45aa3010ab600d260abaf0a456dc6382016eef58714639798d0d0a/pyvat-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "2475b823c1e1f3180d435a79b4e978c9", "sha256": "99b963dc57852f051dc524c1cc9a6330ecae1e6cd37daf1f6d9eef9417e597c7"}, "downloads": -1, "filename": "pyvat-1.3.1.tar.gz", "has_sig": false, "md5_digest": "2475b823c1e1f3180d435a79b4e978c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10437, "upload_time": "2014-12-29T21:25:34", "upload_time_iso_8601": "2014-12-29T21:25:34.973765Z", "url": "https://files.pythonhosted.org/packages/e1/da/de3c33685f42cf9f6231b68a3650f942514b3168680dd77bd92dc23daba7/pyvat-1.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2475b823c1e1f3180d435a79b4e978c9", "sha256": "99b963dc57852f051dc524c1cc9a6330ecae1e6cd37daf1f6d9eef9417e597c7"}, "downloads": -1, "filename": "pyvat-1.3.1.tar.gz", "has_sig": false, "md5_digest": "2475b823c1e1f3180d435a79b4e978c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10437, "upload_time": "2014-12-29T21:25:34", "upload_time_iso_8601": "2014-12-29T21:25:34.973765Z", "url": "https://files.pythonhosted.org/packages/e1/da/de3c33685f42cf9f6231b68a3650f942514b3168680dd77bd92dc23daba7/pyvat-1.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:12 2020"}