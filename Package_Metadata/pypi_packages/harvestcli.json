{"info": {"author": "TAOS DevopsNow", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# harvest-reporting\n\nHarvest Time tracking and reporting API implementation\n\nDocs: [Harvest Reporting Docs](https://taosdevops.github.io/harvest-reporting/)\n\n## Configration of Notifications\n\n### YAML Settings\n\nThere is an [example yaml](./examples/config.yaml) that shows how to\nset up every kind of integration.\n\n### Global Hooks\n\nThere are two types of global hooks. Emails and WebHooks.\n\nEmails are in the block labeled `globalEmails`. All emails in this block receive *all*\nnotifications. This includes client names and usage information. This should only be\nused for internal notification for project owners or business management.\n\n```.yaml\nglobalEmails:\n  - firstEmailAddress@example.com\n  - secnodEmailAddress@example.com\n```\n\nHooks are listed in the `globalHooks`. All hooks in this block will receive *all*\nnotifications. This includes client names and usage information. This should only be\nused for internal notification for project owners or business management.\n\n```.yaml\nglobalHooks:\n  - https://hooks.slack.com/services/GlobalHooksForAllClients\n  - https://hooks.slack.com/services/GlobalHookForProjects\n```\n\n### Client Specific Hooks\n\nEach client listed in the configuration has its own section.\nThis section has two types of hooks that can be enabled.\n\nAll webhooks are to be listed under `hooks:` for the client. This\nlist is provider agnostic and will auto-switch the formatting based on\nif MS Teams or Slack is detected. This hook will only send specific client data.\n\n```.yaml\nclients:\n  - name: LotsOfHours\n    hours: 160\n    hooks:\n      - https://hooks.slack.com/services/dude/what!\n      - https://outlook.office.com/webhook/lotsOfhashes\n```\n\nAll destination email addresses are to be listed under `emails:`\n\n```.yaml\nclients:\n  - name: Email Only\n    hours: 160\n    emails:\n      - primary@emailonly.com\n      - secondary@emailonly.com\n```\n\n## CLI\n\n### Installing as CLI\n\nyou can install this package off of pypi\n\n`pip install harvestcli`\n\nor you can clone the project install the project from that directory.\n\n`pip install .`\n\n### Environment Variables\n\nWhen using the cli Environment Variables can be used as an alternative to\nproviding the input via command line flags.\n\n| Variable | Option |\n| -------- | ------ |\n| BEARER_TOKEN | -b, --bearer-token |\n| HARVEST_ACCOUNT_ID | --account-id |\n| HARVEST_CONFIG | --config-path |\n| SENDGRID_API_KEY| -s, --send-grid |\n\n### Local Development\n\nCreate virtual env\n\n`pipenv shell`\n\nInstall Dev dependencies\n\n`pipenv install --dev --skip-lock`\n\n#### Generate Docs\n\nInstall the devrequirements to install sphinx and its dependencies then run\n\n`sphinx-build .docs docs`\n\n#### Hosting the docs\n\n`cd docs && python -m http.server`\n\nThis will host the docs [locally on 8000](http://localhost:8000)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/taosmountain/harvest-reporting", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "harvestcli", "package_url": "https://pypi.org/project/harvestcli/", "platform": "", "project_url": "https://pypi.org/project/harvestcli/", "project_urls": {"Homepage": "https://github.com/taosmountain/harvest-reporting"}, "release_url": "https://pypi.org/project/harvestcli/0.1.1/", "requires_dist": ["Click (>=7.0)", "colorama (>=0.4)", "PyYAML (>=5.1)", "requests (>=2.22)", "sendgrid (>=6.2)"], "requires_python": "", "summary": "harvestcli - Harvest cli utility for running reports", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>harvest-reporting</h1>\n<p>Harvest Time tracking and reporting API implementation</p>\n<p>Docs: <a href=\"https://taosdevops.github.io/harvest-reporting/\" rel=\"nofollow\">Harvest Reporting Docs</a></p>\n<h2>Configration of Notifications</h2>\n<h3>YAML Settings</h3>\n<p>There is an <a href=\"./examples/config.yaml\" rel=\"nofollow\">example yaml</a> that shows how to\nset up every kind of integration.</p>\n<h3>Global Hooks</h3>\n<p>There are two types of global hooks. Emails and WebHooks.</p>\n<p>Emails are in the block labeled <code>globalEmails</code>. All emails in this block receive <em>all</em>\nnotifications. This includes client names and usage information. This should only be\nused for internal notification for project owners or business management.</p>\n<pre>globalEmails:\n  - firstEmailAddress@example.com\n  - secnodEmailAddress@example.com\n</pre>\n<p>Hooks are listed in the <code>globalHooks</code>. All hooks in this block will receive <em>all</em>\nnotifications. This includes client names and usage information. This should only be\nused for internal notification for project owners or business management.</p>\n<pre>globalHooks:\n  - https://hooks.slack.com/services/GlobalHooksForAllClients\n  - https://hooks.slack.com/services/GlobalHookForProjects\n</pre>\n<h3>Client Specific Hooks</h3>\n<p>Each client listed in the configuration has its own section.\nThis section has two types of hooks that can be enabled.</p>\n<p>All webhooks are to be listed under <code>hooks:</code> for the client. This\nlist is provider agnostic and will auto-switch the formatting based on\nif MS Teams or Slack is detected. This hook will only send specific client data.</p>\n<pre>clients:\n  - name: LotsOfHours\n    hours: 160\n    hooks:\n      - https://hooks.slack.com/services/dude/what!\n      - https://outlook.office.com/webhook/lotsOfhashes\n</pre>\n<p>All destination email addresses are to be listed under <code>emails:</code></p>\n<pre>clients:\n  - name: Email Only\n    hours: 160\n    emails:\n      - primary@emailonly.com\n      - secondary@emailonly.com\n</pre>\n<h2>CLI</h2>\n<h3>Installing as CLI</h3>\n<p>you can install this package off of pypi</p>\n<p><code>pip install harvestcli</code></p>\n<p>or you can clone the project install the project from that directory.</p>\n<p><code>pip install .</code></p>\n<h3>Environment Variables</h3>\n<p>When using the cli Environment Variables can be used as an alternative to\nproviding the input via command line flags.</p>\n<table>\n<thead>\n<tr>\n<th>Variable</th>\n<th>Option</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>BEARER_TOKEN</td>\n<td>-b, --bearer-token</td>\n</tr>\n<tr>\n<td>HARVEST_ACCOUNT_ID</td>\n<td>--account-id</td>\n</tr>\n<tr>\n<td>HARVEST_CONFIG</td>\n<td>--config-path</td>\n</tr>\n<tr>\n<td>SENDGRID_API_KEY</td>\n<td>-s, --send-grid</td>\n</tr></tbody></table>\n<h3>Local Development</h3>\n<p>Create virtual env</p>\n<p><code>pipenv shell</code></p>\n<p>Install Dev dependencies</p>\n<p><code>pipenv install --dev --skip-lock</code></p>\n<h4>Generate Docs</h4>\n<p>Install the devrequirements to install sphinx and its dependencies then run</p>\n<p><code>sphinx-build .docs docs</code></p>\n<h4>Hosting the docs</h4>\n<p><code>cd docs &amp;&amp; python -m http.server</code></p>\n<p>This will host the docs <a href=\"http://localhost:8000\" rel=\"nofollow\">locally on 8000</a></p>\n\n          </div>"}, "last_serial": 7180363, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "33900ad9a70cad26b3f283fe084d6c01", "sha256": "8db8fd5cec05add4b390989f5eb97a913c0f4971d5db99825650f25505f1d9d6"}, "downloads": -1, "filename": "harvestcli-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "33900ad9a70cad26b3f283fe084d6c01", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23313, "upload_time": "2020-05-06T13:42:48", "upload_time_iso_8601": "2020-05-06T13:42:48.931026Z", "url": "https://files.pythonhosted.org/packages/39/1a/5dbaf76413d97a21c838902b38ed2bb23589523194eaf8b07abae89139ab/harvestcli-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "997fe531544afca67d0085a813059e2f", "sha256": "412d9ceecc6b1b59a57f49b68871d067b76279183c7992ffac8fbb38f2a77a79"}, "downloads": -1, "filename": "harvestcli-0.1.1.tar.gz", "has_sig": false, "md5_digest": "997fe531544afca67d0085a813059e2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8956, "upload_time": "2020-05-06T13:42:50", "upload_time_iso_8601": "2020-05-06T13:42:50.648413Z", "url": "https://files.pythonhosted.org/packages/2a/35/560b0824d5561eb0476cff861f44efda9e5d000fd71be53b958f824892a1/harvestcli-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "33900ad9a70cad26b3f283fe084d6c01", "sha256": "8db8fd5cec05add4b390989f5eb97a913c0f4971d5db99825650f25505f1d9d6"}, "downloads": -1, "filename": "harvestcli-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "33900ad9a70cad26b3f283fe084d6c01", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23313, "upload_time": "2020-05-06T13:42:48", "upload_time_iso_8601": "2020-05-06T13:42:48.931026Z", "url": "https://files.pythonhosted.org/packages/39/1a/5dbaf76413d97a21c838902b38ed2bb23589523194eaf8b07abae89139ab/harvestcli-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "997fe531544afca67d0085a813059e2f", "sha256": "412d9ceecc6b1b59a57f49b68871d067b76279183c7992ffac8fbb38f2a77a79"}, "downloads": -1, "filename": "harvestcli-0.1.1.tar.gz", "has_sig": false, "md5_digest": "997fe531544afca67d0085a813059e2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8956, "upload_time": "2020-05-06T13:42:50", "upload_time_iso_8601": "2020-05-06T13:42:50.648413Z", "url": "https://files.pythonhosted.org/packages/2a/35/560b0824d5561eb0476cff861f44efda9e5d000fd71be53b958f824892a1/harvestcli-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:25 2020"}