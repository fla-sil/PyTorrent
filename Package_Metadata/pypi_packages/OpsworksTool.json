{"info": {"author": "Will Rubel", "author_email": "willrubel@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Opsworks Tool\nA tool to create and deploy Opsworks stacks to AWS.\n\n\n## Current version - 0.0.1:\n\n* Create a new Python 2.7 AWS Opsworks from included template.\n* Deploy AWS Opsworks created with this tool. It generates a CloudFormation file and creates a stack from that template.\n\n## Usage:\nCreate a new opsworks stack:\n```\nUsage: opsworkstool new [OPTIONS]\n\nOptions:\n  -d, --directory TEXT  target directory for new Opsworks recipe, defaults to\n                        current directory\n  -n, --name TEXT       name of the new opsworks skeleton  [required]\n  -p, --profile TEXT    AWS CLI profile to use in the deployment, more details\n                        at http://docs.aws.amazon.com/cli/latest/userguide\n                        /cli-chap-getting-started.html\n  -r, --region TEXT     target region, defaults to your credentials default\n                        region\n  --debug               Turn on debugging\n  --help                Show this message and exit.\n\nExample:\nopsworkstool -sn example --region us-east-2 # make a Flask webservice in example/main.py\n```\n\nCreate a new opsworks template:\n```\nUsage: opsworkstool deploy [OPTIONS]\n\nOptions:\n  -d, --directory TEXT  scratch directory for deploy, defaults to /tmp\n  -p, --profile TEXT    AWS CLI profile to use in the deployment\n  -r, --region TEXT     target region, defaults to your credentials default\n                        region\n  --help                Show this message and exit.\n\nExample:\nopsworkstool new --name test --profile will --directory /tmp/junk --region us-east-1\n```\n*More details on AWS profile credentials [here](http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html).*\n\n\n## What just happened\n\n* This just created the needed files\n```\n\u251c\u2500\u2500 config\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config.ini\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 dev\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 function.properties\n\u251c\u2500\u2500 recipe\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Berksfile\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 test\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 attributes\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 default.rb\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 files\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 recipes\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 default.rb\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 setup.rb\n\u251c\u2500\u2500 template.json\n\u2514\u2500\u2500 utility\n    \u251c\u2500\u2500 __init__.py\n    \u2514\u2500\u2500 tools.py\n```\n\n## The next steps\n* Edit the template.json as needed, and edit the config/config.ini for the parameters for the needed stage.  Note: The default state is dev\n* Edit the recipe/test/recipe/setup.rb recipe\n\n\n## Deploying the Opswork template\n\n```\nopsworkstool deploy --profile will -s dev\n```\n\n\n\n## What you will need:\n\n* An AWS account\n* A VPC setup in that account (or access to create one). See more about AWS default VPC [here](http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/default-vpc.html). \n* At least one subnet in that account (or access to create one)\n* An IAM role to assign to the opsworks instance. If you do not have a suitable IAM role you can get some idea [here](http://docs.aws.amazon.com/lambda/latest/dg/vpc-rds-create-iam-role.html).\n* A very simple security group\n* An S3 bucket where you can put build/deployment artifacts. This bucket **must** be in the same AWS region as your function.\n* A minimal Python 2.7 development environment including virtualenv or virtualenv wrapper\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rubelwi/opsworks-tool", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "OpsworksTool", "package_url": "https://pypi.org/project/OpsworksTool/", "platform": "", "project_url": "https://pypi.org/project/OpsworksTool/", "project_urls": {"Homepage": "https://github.com/rubelwi/opsworks-tool"}, "release_url": "https://pypi.org/project/OpsworksTool/0.0.2/", "requires_dist": ["boto3 (>=1.4.3)", "GitPython (>=2.1.7)", "Click (>=6.7)", "PyYAML (>=3.12)", "pymongo (>=3.4.0)", "stackility (>=0.3)", "Mako (>=1.0.6)"], "requires_python": "", "summary": "", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Opsworks Tool</h1>\n<p>A tool to create and deploy Opsworks stacks to AWS.</p>\n<h2>Current version - 0.0.1:</h2>\n<ul>\n<li>Create a new Python 2.7 AWS Opsworks from included template.</li>\n<li>Deploy AWS Opsworks created with this tool. It generates a CloudFormation file and creates a stack from that template.</li>\n</ul>\n<h2>Usage:</h2>\n<p>Create a new opsworks stack:</p>\n<pre><code>Usage: opsworkstool new [OPTIONS]\n\nOptions:\n  -d, --directory TEXT  target directory for new Opsworks recipe, defaults to\n                        current directory\n  -n, --name TEXT       name of the new opsworks skeleton  [required]\n  -p, --profile TEXT    AWS CLI profile to use in the deployment, more details\n                        at http://docs.aws.amazon.com/cli/latest/userguide\n                        /cli-chap-getting-started.html\n  -r, --region TEXT     target region, defaults to your credentials default\n                        region\n  --debug               Turn on debugging\n  --help                Show this message and exit.\n\nExample:\nopsworkstool -sn example --region us-east-2 # make a Flask webservice in example/main.py\n</code></pre>\n<p>Create a new opsworks template:</p>\n<pre><code>Usage: opsworkstool deploy [OPTIONS]\n\nOptions:\n  -d, --directory TEXT  scratch directory for deploy, defaults to /tmp\n  -p, --profile TEXT    AWS CLI profile to use in the deployment\n  -r, --region TEXT     target region, defaults to your credentials default\n                        region\n  --help                Show this message and exit.\n\nExample:\nopsworkstool new --name test --profile will --directory /tmp/junk --region us-east-1\n</code></pre>\n<p><em>More details on AWS profile credentials <a href=\"http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html\" rel=\"nofollow\">here</a>.</em></p>\n<h2>What just happened</h2>\n<ul>\n<li>This just created the needed files</li>\n</ul>\n<pre><code>\u251c\u2500\u2500 config\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 config.ini\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 dev\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 function.properties\n\u251c\u2500\u2500 recipe\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Berksfile\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 test\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 attributes\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 default.rb\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 files\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 recipes\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 default.rb\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 setup.rb\n\u251c\u2500\u2500 template.json\n\u2514\u2500\u2500 utility\n    \u251c\u2500\u2500 __init__.py\n    \u2514\u2500\u2500 tools.py\n</code></pre>\n<h2>The next steps</h2>\n<ul>\n<li>Edit the template.json as needed, and edit the config/config.ini for the parameters for the needed stage.  Note: The default state is dev</li>\n<li>Edit the recipe/test/recipe/setup.rb recipe</li>\n</ul>\n<h2>Deploying the Opswork template</h2>\n<pre><code>opsworkstool deploy --profile will -s dev\n</code></pre>\n<h2>What you will need:</h2>\n<ul>\n<li>An AWS account</li>\n<li>A VPC setup in that account (or access to create one). See more about AWS default VPC <a href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/default-vpc.html\" rel=\"nofollow\">here</a>.</li>\n<li>At least one subnet in that account (or access to create one)</li>\n<li>An IAM role to assign to the opsworks instance. If you do not have a suitable IAM role you can get some idea <a href=\"http://docs.aws.amazon.com/lambda/latest/dg/vpc-rds-create-iam-role.html\" rel=\"nofollow\">here</a>.</li>\n<li>A very simple security group</li>\n<li>An S3 bucket where you can put build/deployment artifacts. This bucket <strong>must</strong> be in the same AWS region as your function.</li>\n<li>A minimal Python 2.7 development environment including virtualenv or virtualenv wrapper</li>\n</ul>\n\n          </div>"}, "last_serial": 4251649, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "5775d492781e10202c15ddc918f5d3db", "sha256": "caf639dc9eda5bf25e6144a0b4545692241675bacf14146bc467e1bf6efff7a0"}, "downloads": -1, "filename": "OpsworksTool-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5775d492781e10202c15ddc918f5d3db", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21675, "upload_time": "2018-09-08T14:08:21", "upload_time_iso_8601": "2018-09-08T14:08:21.040533Z", "url": "https://files.pythonhosted.org/packages/a4/3e/d36a14a5c288780e3eb3abd0421ab896555fd7bf57054240dbe6cb909a0c/OpsworksTool-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19170b2268888166745995559a4968c0", "sha256": "35e6e3da18c4fefad415d0d538f3adec7b16e08fdd60c78e111d1e37a879fcda"}, "downloads": -1, "filename": "OpsworksTool-0.0.2.tar.gz", "has_sig": false, "md5_digest": "19170b2268888166745995559a4968c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15834, "upload_time": "2018-09-08T14:08:28", "upload_time_iso_8601": "2018-09-08T14:08:28.233972Z", "url": "https://files.pythonhosted.org/packages/c9/70/fac92aa51257fa685fc2b63fd8520d68405be09fe6bfeb2af3a7a885873b/OpsworksTool-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5775d492781e10202c15ddc918f5d3db", "sha256": "caf639dc9eda5bf25e6144a0b4545692241675bacf14146bc467e1bf6efff7a0"}, "downloads": -1, "filename": "OpsworksTool-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5775d492781e10202c15ddc918f5d3db", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21675, "upload_time": "2018-09-08T14:08:21", "upload_time_iso_8601": "2018-09-08T14:08:21.040533Z", "url": "https://files.pythonhosted.org/packages/a4/3e/d36a14a5c288780e3eb3abd0421ab896555fd7bf57054240dbe6cb909a0c/OpsworksTool-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19170b2268888166745995559a4968c0", "sha256": "35e6e3da18c4fefad415d0d538f3adec7b16e08fdd60c78e111d1e37a879fcda"}, "downloads": -1, "filename": "OpsworksTool-0.0.2.tar.gz", "has_sig": false, "md5_digest": "19170b2268888166745995559a4968c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15834, "upload_time": "2018-09-08T14:08:28", "upload_time_iso_8601": "2018-09-08T14:08:28.233972Z", "url": "https://files.pythonhosted.org/packages/c9/70/fac92aa51257fa685fc2b63fd8520d68405be09fe6bfeb2af3a7a885873b/OpsworksTool-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:06 2020"}