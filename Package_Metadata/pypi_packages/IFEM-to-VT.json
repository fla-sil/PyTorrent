{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "==========\nIFEM-to-VT\n==========\n\nIFEM-to-VT is a tool for converting IFEM_ simulation results to other\nformats more suitable for visualization:\n\n- VTU/VTK: for use with Paraview_\n- VTF: for use with GLView_\n\nSo named because all supported formats to date start with \"VT\".\n\n\nInstallation\n------------\n\nIt is recommended to install with PIP::\n\n  pip install --user .\n\n\nIFEM-to-VT requires Python 3.  It is possible that, on your system,\n*pip* refers to Python 2.  In this case, do::\n\n  pip3 install --user .\n\n\nIFEM-to-VT requires the numpy_, H5Py_, VTK_ and LRSplines_ libraries, all\nof which contain compiled components.  In ideal circumstances, they\nshould be installed automatically from PyPi with the above command,\nbut circumstances are not always ideal.  For example, VTK is, as of\nthe time of writing, not available for Python 3.8 on PyPi.  If\ndependencies fail to install, please consult the relevant\ndocumentation of the respective libraries.\n\nVTF support is not available out-of-the-box because it depends on\nproprietary libaries.  If these libraries are available on your\nsystem, you may install VTFWriter_ manually.  If it is present,\nIFEM-to-VT should enable VTF support automatically.\n\nUpon successful installation, an *ifem-to-vt* executable should be\ninstalled in ``~/.local/bin``, or the binary path of the current\nPython environment.  To run it, ensure that this directory is in your\n``PATH``.\n\n\nUsage\n-----\n\nBasic usage is::\n\n  ifem-to-vt INFILE.hdf5 [OUTFILE]\n\n\nFor help with relevant command-line-options please consult::\n\n  ifem-to-vt --help\n\n\nIf the output filename is specified, the format will be determined\nfrom its extension, unless specifically overriden with ``-f`` or\n``--fmt``::\n\n  ifem-to-vt -f vtu INFILE.hdf5\n\n\nYou can restrict the output to certain bases by using the ``-b`` or\n``--basis`` option. It can be given multiple times, for example::\n\n  ifem-to-vt --basis NavierStokes-1 --basis AdvectionDiffusion-1 INFILE.hdf5\n\n\nBy default, the first basis in the file will be used for the\ngeometry.  To override this, use the ``-g`` or ``--geometry`` option::\n\n  ifem-to-vt --geometry NavierStokes-1 INFILE.hdf5\n\n\nBoth VTF, VTK and VTU formats support ASCII and binary modes.  By\ndefault, IFEM-to-VT writes binary files.  To override this, use the\n``-m`` or ``--mode`` option, with value ``ascii``, ``binary`` or\n``appended`` (the latter only supported for VTU).\n\nThe verbosity of the output can be controlled with the ``-v`` or\n``--verbosity`` option, with values ``debug``, ``info`` (default),\n``warning``, ``error`` and ``critical``.  For submitting bug reports,\nplease attach the log with ``-v debug``, and if possible a sample HDF5\nfile which reproduces the error.\n\n\n.. _IFEM: https://github.com/OPM/IFEM\n.. _Paraview: https://www.paraview.org/\n.. _GLView: https://ceetron.com/ceetron-glview-inova/\n.. _numpy: https://numpy.org/\n.. _H5Py: https://www.h5py.org/\n.. _VTK: https://vtk.org/\n.. _LRSplines: https://github.com/TheBB/lrsplines-python\n.. _VTFWriter: https://github.com/TheBB/vtfwriter", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "Eivind Fonn", "maintainer_email": "eivind.fonn@sintef.no", "name": "IFEM-to-VT", "package_url": "https://pypi.org/project/IFEM-to-VT/", "platform": "", "project_url": "https://pypi.org/project/IFEM-to-VT/", "project_urls": null, "release_url": "https://pypi.org/project/IFEM-to-VT/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "Converts IFEM result files to VT* formats.", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>IFEM-to-VT is a tool for converting <a href=\"https://github.com/OPM/IFEM\" rel=\"nofollow\">IFEM</a> simulation results to other\nformats more suitable for visualization:</p>\n<ul>\n<li>VTU/VTK: for use with <a href=\"https://www.paraview.org/\" rel=\"nofollow\">Paraview</a></li>\n<li>VTF: for use with <a href=\"https://ceetron.com/ceetron-glview-inova/\" rel=\"nofollow\">GLView</a></li>\n</ul>\n<p>So named because all supported formats to date start with \u201cVT\u201d.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>It is recommended to install with PIP:</p>\n<pre>pip install --user .\n</pre>\n<p>IFEM-to-VT requires Python 3.  It is possible that, on your system,\n<em>pip</em> refers to Python 2.  In this case, do:</p>\n<pre>pip3 install --user .\n</pre>\n<p>IFEM-to-VT requires the <a href=\"https://numpy.org/\" rel=\"nofollow\">numpy</a>, <a href=\"https://www.h5py.org/\" rel=\"nofollow\">H5Py</a>, <a href=\"https://vtk.org/\" rel=\"nofollow\">VTK</a> and <a href=\"https://github.com/TheBB/lrsplines-python\" rel=\"nofollow\">LRSplines</a> libraries, all\nof which contain compiled components.  In ideal circumstances, they\nshould be installed automatically from PyPi with the above command,\nbut circumstances are not always ideal.  For example, VTK is, as of\nthe time of writing, not available for Python 3.8 on PyPi.  If\ndependencies fail to install, please consult the relevant\ndocumentation of the respective libraries.</p>\n<p>VTF support is not available out-of-the-box because it depends on\nproprietary libaries.  If these libraries are available on your\nsystem, you may install <a href=\"https://github.com/TheBB/vtfwriter\" rel=\"nofollow\">VTFWriter</a> manually.  If it is present,\nIFEM-to-VT should enable VTF support automatically.</p>\n<p>Upon successful installation, an <em>ifem-to-vt</em> executable should be\ninstalled in <tt><span class=\"pre\">~/.local/bin</span></tt>, or the binary path of the current\nPython environment.  To run it, ensure that this directory is in your\n<tt>PATH</tt>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Basic usage is:</p>\n<pre>ifem-to-vt INFILE.hdf5 [OUTFILE]\n</pre>\n<p>For help with relevant command-line-options please consult:</p>\n<pre>ifem-to-vt --help\n</pre>\n<p>If the output filename is specified, the format will be determined\nfrom its extension, unless specifically overriden with <tt><span class=\"pre\">-f</span></tt> or\n<tt><span class=\"pre\">--fmt</span></tt>:</p>\n<pre>ifem-to-vt -f vtu INFILE.hdf5\n</pre>\n<p>You can restrict the output to certain bases by using the <tt><span class=\"pre\">-b</span></tt> or\n<tt><span class=\"pre\">--basis</span></tt> option. It can be given multiple times, for example:</p>\n<pre>ifem-to-vt --basis NavierStokes-1 --basis AdvectionDiffusion-1 INFILE.hdf5\n</pre>\n<p>By default, the first basis in the file will be used for the\ngeometry.  To override this, use the <tt><span class=\"pre\">-g</span></tt> or <tt><span class=\"pre\">--geometry</span></tt> option:</p>\n<pre>ifem-to-vt --geometry NavierStokes-1 INFILE.hdf5\n</pre>\n<p>Both VTF, VTK and VTU formats support ASCII and binary modes.  By\ndefault, IFEM-to-VT writes binary files.  To override this, use the\n<tt><span class=\"pre\">-m</span></tt> or <tt><span class=\"pre\">--mode</span></tt> option, with value <tt>ascii</tt>, <tt>binary</tt> or\n<tt>appended</tt> (the latter only supported for VTU).</p>\n<p>The verbosity of the output can be controlled with the <tt><span class=\"pre\">-v</span></tt> or\n<tt><span class=\"pre\">--verbosity</span></tt> option, with values <tt>debug</tt>, <tt>info</tt> (default),\n<tt>warning</tt>, <tt>error</tt> and <tt>critical</tt>.  For submitting bug reports,\nplease attach the log with <tt><span class=\"pre\">-v</span> debug</tt>, and if possible a sample HDF5\nfile which reproduces the error.</p>\n</div>\n\n          </div>"}, "last_serial": 7121641, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ba80ef6902429ed4aef6da729aa66767", "sha256": "786a7d26397a949acfb49cad57daacc04659eb60e34a25a2094e7a7a46d79eed"}, "downloads": -1, "filename": "IFEM_to_VT-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ba80ef6902429ed4aef6da729aa66767", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25747, "upload_time": "2020-04-28T15:39:05", "upload_time_iso_8601": "2020-04-28T15:39:05.293632Z", "url": "https://files.pythonhosted.org/packages/05/7e/4b7e9203168601df2a1254d7ba285798347b1c1f4c784ae0a82ae33bfe15/IFEM_to_VT-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c458ac7f47cdbe8ab55c5ea228eed803", "sha256": "3c9cfe70fb88285dc2c516f700aeb03857cb924dccd080071c7238563a78251d"}, "downloads": -1, "filename": "IFEM-to-VT-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c458ac7f47cdbe8ab55c5ea228eed803", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11261, "upload_time": "2020-04-28T15:37:35", "upload_time_iso_8601": "2020-04-28T15:37:35.903029Z", "url": "https://files.pythonhosted.org/packages/bd/66/4f2d0357237aa273cebab510976bb77b1f0688fbe17ae61d19a73416a8a6/IFEM-to-VT-1.0.0.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "87a03aace1077effde44a39b81ccbf56", "sha256": "cfc83db0eaf42f6aaf8eb93e6d338e7c203dcda97bb7429a32120f66ba8eef6e"}, "downloads": -1, "filename": "IFEM_to_VT-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "87a03aace1077effde44a39b81ccbf56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27113, "upload_time": "2020-04-28T16:49:02", "upload_time_iso_8601": "2020-04-28T16:49:02.484364Z", "url": "https://files.pythonhosted.org/packages/f5/02/7348ead6788820a5d943f021662e6f72659b4e2b8fa6cfe119eebb12f582/IFEM_to_VT-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c40f2f4cea3b4c0ed0e0d8783d9c6d6b", "sha256": "d17a51d32d861bfb3938aec282c1744513fbe4f8f0ba657d3b2ff7b9c12cb6bf"}, "downloads": -1, "filename": "IFEM-to-VT-1.0.3.tar.gz", "has_sig": false, "md5_digest": "c40f2f4cea3b4c0ed0e0d8783d9c6d6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12768, "upload_time": "2020-04-28T16:47:35", "upload_time_iso_8601": "2020-04-28T16:47:35.909558Z", "url": "https://files.pythonhosted.org/packages/e0/ac/92c6b6f35b46df5cedead1ae60cbf7f7e8cdc2e73366fcde0bc7b0183c7e/IFEM-to-VT-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "87a03aace1077effde44a39b81ccbf56", "sha256": "cfc83db0eaf42f6aaf8eb93e6d338e7c203dcda97bb7429a32120f66ba8eef6e"}, "downloads": -1, "filename": "IFEM_to_VT-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "87a03aace1077effde44a39b81ccbf56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27113, "upload_time": "2020-04-28T16:49:02", "upload_time_iso_8601": "2020-04-28T16:49:02.484364Z", "url": "https://files.pythonhosted.org/packages/f5/02/7348ead6788820a5d943f021662e6f72659b4e2b8fa6cfe119eebb12f582/IFEM_to_VT-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c40f2f4cea3b4c0ed0e0d8783d9c6d6b", "sha256": "d17a51d32d861bfb3938aec282c1744513fbe4f8f0ba657d3b2ff7b9c12cb6bf"}, "downloads": -1, "filename": "IFEM-to-VT-1.0.3.tar.gz", "has_sig": false, "md5_digest": "c40f2f4cea3b4c0ed0e0d8783d9c6d6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12768, "upload_time": "2020-04-28T16:47:35", "upload_time_iso_8601": "2020-04-28T16:47:35.909558Z", "url": "https://files.pythonhosted.org/packages/e0/ac/92c6b6f35b46df5cedead1ae60cbf7f7e8cdc2e73366fcde0bc7b0183c7e/IFEM-to-VT-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:46 2020"}