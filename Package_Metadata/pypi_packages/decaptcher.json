{"info": {"author": "Gregory Petukhov", "author_email": "lorien@lorien.name", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.3", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "## Installation\n\nUse command:\n\n```shell\npip install -e git://github.com/lorien/decaptcher#egg=decaptcher\n```\n\n## Usage\n\n### Twocaptcha Backend Example\n\nService website is https://2captcha.com?from=3019071\n\n```python\nfrom decaptcher import Service\n\nsolver = Service('twocaptcha', api_key='2captcha.com API HERE')\nprint(solver.process_file('captcha.png'))\n# or\nwith open('captcha.png') as inp:\n    print(solver.process(inp.read()))\n# or\nwith open('captcha.png') as inp:\n    print(solver.process(inp))\n# You can pass extra parameters (described in 2captcha documentation)\n# using task_options arguments:\nprint(solver.process_file('captcha.png', task_options={\n    'regsense': 1,\n    'min_len': 4,\n}))\n\n```\n\n### Solving custom captcha type using 2captcha.com\n\nDecaptcher library supports any custom captcha supported by 2captcha.com service.\nJust use `task_options` argument to pass all required parameters. \nFor example, to solve text captcha do:\n```python\nfrom decaptcher import Service\n\nsolver = Service('twocaptcha', api_key='2captcha.com API HERE')\nprint(solver.process(task_options={\n    'lang': 'en',\n    'textcaptcha': 'Name of first day of week',\n}))\n```\n\n### Getting captcha ID along the solution\n\nTo get catpcha ID pass `verbose=True` to `process` method:\n\n```python\nsolver = Service('twocaptcha', api_key='2captcha.com API HERE')\nprint(solver.process_file('captcha.png', verbose=True))\n````\n\nYou get result like:\n```python\n{\"task_id\": \"captcha ID\", \"result\": \"captcha text\"}\n```\n\n\n### Rucaptcha Backend Example\n\nService website is https://rucaptcha.com?from=3019071\n\n```python\nfrom decaptcher import Service\n\nsolver = Service('rucaptcha', api_key='RUCAPTCHA_KEY')\nprint(solver.process_file('captcha.png'))\n```\n\n\n### Antigate Backend Example\n\nService website is http://getcaptchasolution.com/ijykrofoxz\n\n```python\nfrom decaptcher import Service\n\nsolver = Service('antigate', api_key='ANTIGATE_KEY')\nprint(solver.process_file('captcha.png'))\n```\n\n\n### Browser Backend Example\n\nBrowser backend just displays captcha in default browser and wait you enter solution in console.\n\n```python\nfrom decaptcher import Service\n\nsolver = Service('browser')\nprint(solver.process_file('captcha.png'))\n```\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/lorien/decaptcher/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lorien/decaptcher", "keywords": "captcha anti-captcha antigate rucaptcha 2captcha", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "decaptcher", "package_url": "https://pypi.org/project/decaptcher/", "platform": "", "project_url": "https://pypi.org/project/decaptcher/", "project_urls": {"Download": "https://github.com/lorien/decaptcher/releases", "Homepage": "https://github.com/lorien/decaptcher"}, "release_url": "https://pypi.org/project/decaptcher/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Universal interface to multiple anti-captcha services", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            ## Installation<br><br>Use command:<br><br>```shell<br>pip install -e git://github.com/lorien/decaptcher#egg=decaptcher<br>```<br><br>## Usage<br><br>### Twocaptcha Backend Example<br><br>Service website is https://2captcha.com?from=3019071<br><br>```python<br>from decaptcher import Service<br><br>solver = Service('twocaptcha', api_key='2captcha.com API HERE')<br>print(solver.process_file('captcha.png'))<br># or<br>with open('captcha.png') as inp:<br>    print(solver.process(inp.read()))<br># or<br>with open('captcha.png') as inp:<br>    print(solver.process(inp))<br># You can pass extra parameters (described in 2captcha documentation)<br># using task_options arguments:<br>print(solver.process_file('captcha.png', task_options={<br>    'regsense': 1,<br>    'min_len': 4,<br>}))<br><br>```<br><br>### Solving custom captcha type using 2captcha.com<br><br>Decaptcher library supports any custom captcha supported by 2captcha.com service.<br>Just use `task_options` argument to pass all required parameters. <br>For example, to solve text captcha do:<br>```python<br>from decaptcher import Service<br><br>solver = Service('twocaptcha', api_key='2captcha.com API HERE')<br>print(solver.process(task_options={<br>    'lang': 'en',<br>    'textcaptcha': 'Name of first day of week',<br>}))<br>```<br><br>### Getting captcha ID along the solution<br><br>To get catpcha ID pass `verbose=True` to `process` method:<br><br>```python<br>solver = Service('twocaptcha', api_key='2captcha.com API HERE')<br>print(solver.process_file('captcha.png', verbose=True))<br>````<br><br>You get result like:<br>```python<br>{\"task_id\": \"captcha ID\", \"result\": \"captcha text\"}<br>```<br><br><br>### Rucaptcha Backend Example<br><br>Service website is https://rucaptcha.com?from=3019071<br><br>```python<br>from decaptcher import Service<br><br>solver = Service('rucaptcha', api_key='RUCAPTCHA_KEY')<br>print(solver.process_file('captcha.png'))<br>```<br><br><br>### Antigate Backend Example<br><br>Service website is http://getcaptchasolution.com/ijykrofoxz<br><br>```python<br>from decaptcher import Service<br><br>solver = Service('antigate', api_key='ANTIGATE_KEY')<br>print(solver.process_file('captcha.png'))<br>```<br><br><br>### Browser Backend Example<br><br>Browser backend just displays captcha in default browser and wait you enter solution in console.<br><br>```python<br>from decaptcher import Service<br><br>solver = Service('browser')<br>print(solver.process_file('captcha.png'))<br>```<br>\n          </div>"}, "last_serial": 4915158, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "0a1d42f3cc6a7ef56820154a48ae54f0", "sha256": "6e6b47e32bfcdfdd4be4757ad4f5f04e14405fe59d5be72e280336e6d03d0152"}, "downloads": -1, "filename": "decaptcher-0.0.1.tar.gz", "has_sig": false, "md5_digest": "0a1d42f3cc6a7ef56820154a48ae54f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3097, "upload_time": "2019-03-07T21:54:48", "upload_time_iso_8601": "2019-03-07T21:54:48.611874Z", "url": "https://files.pythonhosted.org/packages/7e/16/bb37eceff815c99256b89a2382dcdca4a6c05e859b19e8aa1bc163f66d80/decaptcher-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e095f79ed8febdc5395021c86a9efd9b", "sha256": "f1af9d19aea6eca3c948a133a0282eaf2c4b7ce8658c38f9b529793f2e19087e"}, "downloads": -1, "filename": "decaptcher-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e095f79ed8febdc5395021c86a9efd9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4893, "upload_time": "2019-03-08T09:51:51", "upload_time_iso_8601": "2019-03-08T09:51:51.142789Z", "url": "https://files.pythonhosted.org/packages/63/0e/14de6965ec309b89ee526ccdf315ec6376b85b9cd9ead3aeb17a45e1ee38/decaptcher-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "9fd1db4254af0dc039508d47cc5b696b", "sha256": "0780c1fa6843f0423c4cb25a22f14f152212e40bfbbf7028bdc6ddc1925d68bb"}, "downloads": -1, "filename": "decaptcher-0.0.3.tar.gz", "has_sig": false, "md5_digest": "9fd1db4254af0dc039508d47cc5b696b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4930, "upload_time": "2019-03-08T11:49:16", "upload_time_iso_8601": "2019-03-08T11:49:16.854321Z", "url": "https://files.pythonhosted.org/packages/38/ce/003767d861c2a3bd32a2c0668bd55c1d3f361bccf972d480c7b6495cd6a0/decaptcher-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9fd1db4254af0dc039508d47cc5b696b", "sha256": "0780c1fa6843f0423c4cb25a22f14f152212e40bfbbf7028bdc6ddc1925d68bb"}, "downloads": -1, "filename": "decaptcher-0.0.3.tar.gz", "has_sig": false, "md5_digest": "9fd1db4254af0dc039508d47cc5b696b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4930, "upload_time": "2019-03-08T11:49:16", "upload_time_iso_8601": "2019-03-08T11:49:16.854321Z", "url": "https://files.pythonhosted.org/packages/38/ce/003767d861c2a3bd32a2c0668bd55c1d3f361bccf972d480c7b6495cd6a0/decaptcher-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:37 2020"}