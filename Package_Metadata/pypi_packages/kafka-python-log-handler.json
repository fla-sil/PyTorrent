{"info": {"author": "See AUTHORS", "author_email": "contact@adimian.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Kafka Python Log Handler\nHandler for the standard `logging` module which puts logs through to Kafka.\nThe current implementation is very basic to accommodate our needs, but additional functionality may be coming when the parent project grows.\n\n## Install\nThis was developed in Python 3.6.7, using `kafka-python` 1.4.3 and Kafka 2.12\n\n#### Development\nTests will try to connect to a Kafka instance via the defaults.\nOptionally setting `KAFKA_HOST` and `KAFKA_PORT` to the appropriate location on your machine will change this.\n\nInstall the dev requirements\n\n        $ pip install -r requirements-dev.txt\n\nSet the pre-commit hook\n\n        $ pre-commit install\n\n## How to use\nThe only necessary thing to create this handler is a `topic` to push the values to.\nOptionally, a `key` and/or `partition` may be provided.\nAny additional keyword-value configuration provided to the Handler will be used to initialize the `kafka.KafkaProducer`.\n\nTo add a handler to the python logger is very simple:\n\n```python\nimport logging\n\n\nfrom kafka_handler import KafkaLogHandler\n\nhandler = KafkaLogHandler(topic=\"example_topic\", key=\"example_key\")  # Default parameters for Kafka connection are used\n\nlogger = logging.getLogger()  # No name gives you the root logger\nlogger.setLevel(\"WARNING\")\nlogger.addHandler(example_handler)\n\nlogger.warning(\"This will push this message to the 'example_topic' in Kafka.\")\n```\n\n### Configuring Kafka Connection\nBy default each handler will create a `kafka.KafkaProducer` instance, passing on each argument from their `__init__(**kwargs)` to the KafkaProducer's instantiation.\nThis means you can configure the connection as specific as you'd like, but every argument should be provided with its keyword; `Handler(host=\"localhost\")` instead of `Handler(\"localhost\")`.\nAll available configuration options are available in the [kafka-python documentation](https://kafka-python.readthedocs.io/en/master/apidoc/KafkaProducer.html).\n\n```python\nhandler = KafkaLogHandler(topic=\"topic\", bootstrap_servers=\"other_host:9092\", retries=0)\n```\n\n### Configure message logging\nEvery handler has the `raw_logging` option which can be provided optionally.\nOmitting it from the initialisation, will default it to `False`, meaning the message being logged will be purely what's sent.\nIf you set it to `True`, first the content will be logged, then appended to the line number and finally the pathname.\n\n```python\nraw_handler = KafkaLogHandler(topic=\"topic\", raw_logging=True)\n...\nlogging.info(\"Test message\")\n```\nA pure handler would emit a message like so: `Test message.`,  \nthe `raw_handler` however, will emit a message like so: `Test message. - 2: /.../file.py`.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.adimian.com/open-source/kafka-log-handler", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "kafka-python-log-handler", "package_url": "https://pypi.org/project/kafka-python-log-handler/", "platform": "", "project_url": "https://pypi.org/project/kafka-python-log-handler/", "project_urls": {"Homepage": "https://gitlab.adimian.com/open-source/kafka-log-handler"}, "release_url": "https://pypi.org/project/kafka-python-log-handler/0.0.1.dev12/", "requires_dist": ["kafka-python (==1.4.3)"], "requires_python": "", "summary": "A log handler for the Python logging module, emitting logs to Kafka topics.", "version": "0.0.1.dev12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Kafka Python Log Handler</h1>\n<p>Handler for the standard <code>logging</code> module which puts logs through to Kafka.\nThe current implementation is very basic to accommodate our needs, but additional functionality may be coming when the parent project grows.</p>\n<h2>Install</h2>\n<p>This was developed in Python 3.6.7, using <code>kafka-python</code> 1.4.3 and Kafka 2.12</p>\n<h4>Development</h4>\n<p>Tests will try to connect to a Kafka instance via the defaults.\nOptionally setting <code>KAFKA_HOST</code> and <code>KAFKA_PORT</code> to the appropriate location on your machine will change this.</p>\n<p>Install the dev requirements</p>\n<pre><code>    $ pip install -r requirements-dev.txt\n</code></pre>\n<p>Set the pre-commit hook</p>\n<pre><code>    $ pre-commit install\n</code></pre>\n<h2>How to use</h2>\n<p>The only necessary thing to create this handler is a <code>topic</code> to push the values to.\nOptionally, a <code>key</code> and/or <code>partition</code> may be provided.\nAny additional keyword-value configuration provided to the Handler will be used to initialize the <code>kafka.KafkaProducer</code>.</p>\n<p>To add a handler to the python logger is very simple:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n\n<span class=\"kn\">from</span> <span class=\"nn\">kafka_handler</span> <span class=\"kn\">import</span> <span class=\"n\">KafkaLogHandler</span>\n\n<span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"n\">KafkaLogHandler</span><span class=\"p\">(</span><span class=\"n\">topic</span><span class=\"o\">=</span><span class=\"s2\">\"example_topic\"</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">\"example_key\"</span><span class=\"p\">)</span>  <span class=\"c1\"># Default parameters for Kafka connection are used</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">()</span>  <span class=\"c1\"># No name gives you the root logger</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"s2\">\"WARNING\"</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">addHandler</span><span class=\"p\">(</span><span class=\"n\">example_handler</span><span class=\"p\">)</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">\"This will push this message to the 'example_topic' in Kafka.\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Configuring Kafka Connection</h3>\n<p>By default each handler will create a <code>kafka.KafkaProducer</code> instance, passing on each argument from their <code>__init__(**kwargs)</code> to the KafkaProducer's instantiation.\nThis means you can configure the connection as specific as you'd like, but every argument should be provided with its keyword; <code>Handler(host=\"localhost\")</code> instead of <code>Handler(\"localhost\")</code>.\nAll available configuration options are available in the <a href=\"https://kafka-python.readthedocs.io/en/master/apidoc/KafkaProducer.html\" rel=\"nofollow\">kafka-python documentation</a>.</p>\n<pre><span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"n\">KafkaLogHandler</span><span class=\"p\">(</span><span class=\"n\">topic</span><span class=\"o\">=</span><span class=\"s2\">\"topic\"</span><span class=\"p\">,</span> <span class=\"n\">bootstrap_servers</span><span class=\"o\">=</span><span class=\"s2\">\"other_host:9092\"</span><span class=\"p\">,</span> <span class=\"n\">retries</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n<h3>Configure message logging</h3>\n<p>Every handler has the <code>raw_logging</code> option which can be provided optionally.\nOmitting it from the initialisation, will default it to <code>False</code>, meaning the message being logged will be purely what's sent.\nIf you set it to <code>True</code>, first the content will be logged, then appended to the line number and finally the pathname.</p>\n<pre><span class=\"n\">raw_handler</span> <span class=\"o\">=</span> <span class=\"n\">KafkaLogHandler</span><span class=\"p\">(</span><span class=\"n\">topic</span><span class=\"o\">=</span><span class=\"s2\">\"topic\"</span><span class=\"p\">,</span> <span class=\"n\">raw_logging</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Test message\"</span><span class=\"p\">)</span>\n</pre>\n<p>A pure handler would emit a message like so: <code>Test message.</code>,<br>\nthe <code>raw_handler</code> however, will emit a message like so: <code>Test message. - 2: /.../file.py</code>.</p>\n\n          </div>"}, "last_serial": 5233245, "releases": {"0.0.1.dev11": [{"comment_text": "", "digests": {"md5": "06ca9b73eddef7a1cf556e7bb32bdb34", "sha256": "dbfbeb8ab2337e47bdda40c4fd5826f7fb7f3b7ac4b4752301edad834dc358b0"}, "downloads": -1, "filename": "kafka_python_log_handler-0.0.1.dev11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "06ca9b73eddef7a1cf556e7bb32bdb34", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4724, "upload_time": "2019-04-19T08:33:16", "upload_time_iso_8601": "2019-04-19T08:33:16.455441Z", "url": "https://files.pythonhosted.org/packages/7e/b5/6f625db8177c86fbbae436642e14cad2dba5fff4846d7cec4b70c70f6c27/kafka_python_log_handler-0.0.1.dev11-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13d09f0dabd00479925889bb60965267", "sha256": "5b552e878082ae5b5efeb8cf1894ba1dd41c3ac15ddf41114eb712af43b60a01"}, "downloads": -1, "filename": "kafka-python-log-handler-0.0.1.dev11.tar.gz", "has_sig": false, "md5_digest": "13d09f0dabd00479925889bb60965267", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6506, "upload_time": "2019-04-19T08:33:18", "upload_time_iso_8601": "2019-04-19T08:33:18.736465Z", "url": "https://files.pythonhosted.org/packages/ea/c1/43cb4e7b07ee835ededb3eb3da743f999ded973da39008e5ecd6f6cfe157/kafka-python-log-handler-0.0.1.dev11.tar.gz", "yanked": false}], "0.0.1.dev12": [{"comment_text": "", "digests": {"md5": "61e9be0572b934887b018f90e1dde5d6", "sha256": "b9379b7ae47ba72ac4f46ff6a5d14266a4a8fa5c0ff244223e479996948ed9aa"}, "downloads": -1, "filename": "kafka_python_log_handler-0.0.1.dev12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "61e9be0572b934887b018f90e1dde5d6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4727, "upload_time": "2019-05-06T14:16:13", "upload_time_iso_8601": "2019-05-06T14:16:13.816565Z", "url": "https://files.pythonhosted.org/packages/a7/ba/96c58e14b9695e2e6e82ca926008085fb27a8dfc184267e855cb1c59453f/kafka_python_log_handler-0.0.1.dev12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96b1e988696d21e9b6f1262ebcfa0b41", "sha256": "0b748dffcea2a4ce4d1aaba1dded602925ade0a7168d3a096e67ffee7a9589a0"}, "downloads": -1, "filename": "kafka-python-log-handler-0.0.1.dev12.tar.gz", "has_sig": false, "md5_digest": "96b1e988696d21e9b6f1262ebcfa0b41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6520, "upload_time": "2019-05-06T14:16:15", "upload_time_iso_8601": "2019-05-06T14:16:15.247400Z", "url": "https://files.pythonhosted.org/packages/4c/56/4c94f82255b834b2f4ee9eadd90c1c3d87f48c1505a11608849288c5699c/kafka-python-log-handler-0.0.1.dev12.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "61e9be0572b934887b018f90e1dde5d6", "sha256": "b9379b7ae47ba72ac4f46ff6a5d14266a4a8fa5c0ff244223e479996948ed9aa"}, "downloads": -1, "filename": "kafka_python_log_handler-0.0.1.dev12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "61e9be0572b934887b018f90e1dde5d6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4727, "upload_time": "2019-05-06T14:16:13", "upload_time_iso_8601": "2019-05-06T14:16:13.816565Z", "url": "https://files.pythonhosted.org/packages/a7/ba/96c58e14b9695e2e6e82ca926008085fb27a8dfc184267e855cb1c59453f/kafka_python_log_handler-0.0.1.dev12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96b1e988696d21e9b6f1262ebcfa0b41", "sha256": "0b748dffcea2a4ce4d1aaba1dded602925ade0a7168d3a096e67ffee7a9589a0"}, "downloads": -1, "filename": "kafka-python-log-handler-0.0.1.dev12.tar.gz", "has_sig": false, "md5_digest": "96b1e988696d21e9b6f1262ebcfa0b41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6520, "upload_time": "2019-05-06T14:16:15", "upload_time_iso_8601": "2019-05-06T14:16:15.247400Z", "url": "https://files.pythonhosted.org/packages/4c/56/4c94f82255b834b2f4ee9eadd90c1c3d87f48c1505a11608849288c5699c/kafka-python-log-handler-0.0.1.dev12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:51 2020"}