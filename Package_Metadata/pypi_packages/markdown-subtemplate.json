{"info": {"author": "Michael Kennedy", "author_email": "michael@talkpython.fm", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# markdown-subtemplate \n[![](https://img.shields.io/badge/python-3.6+-blue.svg)](https://www.python.org/downloads/) \n[![](https://img.shields.io/pypi/l/markdown-subtemplate.svg)](https://github.com/mikeckennedy/markdown-subtemplate/blob/master/LICENSE)\n[![](https://img.shields.io/pypi/dm/markdown-subtemplate.svg)](https://pypi.org/project/markdown-subtemplate/)\n\nA template engine to render Markdown with external template imports and basic variable replacements.\n\n## Motivation\n\nWe often make a choice between data-driven server apps (typical Flask app), CMSes that let us edit content on the web such as WordPress, and even flat file systems like Pelican.\n\nThese are presented as an either-or. You either get a full database driven app or you get a CMS, but not both. This project is meant to help add CMS like features to your data-driven web apps and even author them as static markdown files.\n\nHere's how it works:\n\n1. You write standard markdown content.\n2. Markdown content can be shared and imported into your top-level markdown.\n3. Fragments of HTML can be used when css classes and other specializations are needed, but generally HTML is avoided.\n4. A dictionary of variables and their values to replace in the merged markdown is processed.\n5. Markdown content is converted to HTML and embedded in your larger site layout (e.g. within a Jinja2 template).\n6. Markdown transforms are cached to achieve very high performance regardless of the complexity of the content.\n\n## Standard workflow\n\nWrite markdown content, merge it with other markdown files, deliver it as HTML as part of your larger site.\n\n![](https://raw.githubusercontent.com/mikeckennedy/markdown-subtemplate/master/readme_resources/workflow_image_layout.png)\n\n## Usage\n\nTo use the library, simply install it.\n\n```bash\npip3 install markdown-subtemplate\n``` \n\nNext, write a markdown template, `page.md`:\n\n```markdown\n## This is a sub-title\n\n* Here's an entry\n* And another\n```\n\nRegister the template engine in your web app startup:\n\n```python\nfrom markdown_subtemplate import engine\n# Set the template folder so that when you ask for page.md \n# the system knows where to look.\n\nengine.set_template_folder(full_path_to_template_folder)\n```\n\nThen generate the HTML content via:\n\n```python\ndata = {'variable1': 'Value 1', 'variable2': 'Value 2'}\ncontents = engine.get_page('page.md', data)\n```\n\nFinally, pass the HTML fragment to be rendered in the larger page context:\n\n```python\n# A Pyramid view method:\n\n@view_config(route_name='landing', renderer='landing.pt')\ndef landing(request):\n    data = {'variable1': 'Value 1', 'variable2': 'Value 2'}\n    contents = engine.get_page('page.md', data)\n\n    return {\n        'name': 'Project name',\n        'contents': contents\n    }\n```\n\nAnd the larger website template grabs the content and renders it, `landing.pt`:\n\n```html\n...\n<div>\n    ${structure:contents}\n</div>\n...\n```\n\n## Beware the danger!\n\nThis library is meant for INTERNAL usage only. It's to help you add CMS features to your app. It is **not** for taking user input and making an forum or something like that.\n\nTo allow for the greatest control, you can embed small fragments of HTML in the markdown (e.g. to add a CSS class or other actions). This means the markdown is processed in **UNSAFE** mode. It would allow for script injection attacks if opened to the public.\n\n## Extensibility\n\n`markdown-subtemplate` has three axis of extensibility:\n\n* **Storage** - Load markdown content from disk, db, or elsewhere.\n* **Caching** - Cache generated markdown and HTML in memory, DB, or you pick!\n* **Logging** - If you are using a logging framework, plug in logging messages from the library.\n\nSee the [extensibility doc](https://github.com/mikeckennedy/markdown-subtemplate/blob/master/extensibility.md) for details and examples.\n\n## Installation\n\nUntil we publish to PyPI, you'll need to install from Github using this command. We intend to make it available via PyPI, just want to finalize the API a little more first.\n\nInstall:\n\n```bash\npip install git+git://github.com/mikeckennedy/markdown-subtemplate\n```\n\n\n## Nested markdown\n\nOne of the reason's this project exists, rather than just passing markdown text to a markdown library is allowing nesting / importing of markdown files.\n\nIf you have page fragments that need to appear more than once, create a dedicated markdown import file that can be managed and versioned in one place. Here's how:\n\n### Created an imported file in TEMPLATES/_shared\n\nAll imported markdown files are located in subpaths of `TEMPLATES/_shared` where `TEMPLATES` is the path you set during startup.\n\n```\nTEMPLATES\n    |- _shared\n        |- contact.md\n        |- footer.md\n    |-pages\n        | - page.md\n        | - about.md\n```\n\nWrite the imported / shared markdown, `contact.md`:\n\n```markdown\nContact us via email [us@us.com](mailto:us.com) or on \nTwitter via [@us](https://twitter.com/us)\n```\n\nThen in your page, e.g. `page.md` you can add an import statement:\n\n```markdown\n# Our amazing page\n\nHere is some info **about the page**. It's standard markdown.\n\nWant to contact us? Here are some options:\n[IMPORT CONTACT]\n\nAnd a footer:\n[IMPORT FOOTER]\n```\n\nThe resulting markdown is just replacing the `IMPORT` statements with the contents of those files, then passing the whole thing through a markdown to HTML processor.\n\n## Variables\n\n`markdown_subtemplate` has some limited support for variable replacements. Given this markdown page:\n\n```markdown\n# Example: $TITLE$\n\nWelcome to the $PROJECT$ project. Here are some details \n...\n```\n\nYou can populate the variable values with:\n\n```python\ndata = {'title': 'Markdown Transformers', 'project': 'sub templates'}\ncontents = engine.get_page('page.md', data)\n```\n\nNote that the variable names must be all-caps in the template. Missing variable statements in markdown that appear in the data dictionary are ignored.\n\n## Requirements\n\nThis library requires **Python 3.6 or higher**. Because, *f-yes*! (f-strings).\n\n## Licence\n\n`markdown-subtemplate` is distributed under the MIT license.\n\n## Authors\n\n`markdown_subtemplate` was written by [Michael Kennedy](https://github.com/mikeckennedy).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mikeckennedy/markdown-subtemplate", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "markdown-subtemplate", "package_url": "https://pypi.org/project/markdown-subtemplate/", "platform": "", "project_url": "https://pypi.org/project/markdown-subtemplate/", "project_urls": {"Homepage": "https://github.com/mikeckennedy/markdown-subtemplate"}, "release_url": "https://pypi.org/project/markdown-subtemplate/0.1.20/", "requires_dist": ["markdown2"], "requires_python": "", "summary": "A template engine to render Markdown with external template imports and variable replacements.", "version": "0.1.20", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>markdown-subtemplate</h1>\n<p><a href=\"https://www.python.org/downloads/\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a042d910c74fbce532a01da853019c164ef42a8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362b2d626c75652e737667\"></a>\n<a href=\"https://github.com/mikeckennedy/markdown-subtemplate/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9521d570c249a7cdb4513ebe353a195b697ff028/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6d61726b646f776e2d73756274656d706c6174652e737667\"></a>\n<a href=\"https://pypi.org/project/markdown-subtemplate/\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/de78117e73f698838b934a627a75b8d7d47ceda0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6d61726b646f776e2d73756274656d706c6174652e737667\"></a></p>\n<p>A template engine to render Markdown with external template imports and basic variable replacements.</p>\n<h2>Motivation</h2>\n<p>We often make a choice between data-driven server apps (typical Flask app), CMSes that let us edit content on the web such as WordPress, and even flat file systems like Pelican.</p>\n<p>These are presented as an either-or. You either get a full database driven app or you get a CMS, but not both. This project is meant to help add CMS like features to your data-driven web apps and even author them as static markdown files.</p>\n<p>Here's how it works:</p>\n<ol>\n<li>You write standard markdown content.</li>\n<li>Markdown content can be shared and imported into your top-level markdown.</li>\n<li>Fragments of HTML can be used when css classes and other specializations are needed, but generally HTML is avoided.</li>\n<li>A dictionary of variables and their values to replace in the merged markdown is processed.</li>\n<li>Markdown content is converted to HTML and embedded in your larger site layout (e.g. within a Jinja2 template).</li>\n<li>Markdown transforms are cached to achieve very high performance regardless of the complexity of the content.</li>\n</ol>\n<h2>Standard workflow</h2>\n<p>Write markdown content, merge it with other markdown files, deliver it as HTML as part of your larger site.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52c7dc99834b964ce86a42a003d07965c77c142f/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d696b65636b656e6e6564792f6d61726b646f776e2d73756274656d706c6174652f6d61737465722f726561646d655f7265736f75726365732f776f726b666c6f775f696d6167655f6c61796f75742e706e67\"></p>\n<h2>Usage</h2>\n<p>To use the library, simply install it.</p>\n<pre>pip3 install markdown-subtemplate\n</pre>\n<p>Next, write a markdown template, <code>page.md</code>:</p>\n<pre>## This is a sub-title\n\n* Here's an entry\n* And another\n</pre>\n<p>Register the template engine in your web app startup:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">markdown_subtemplate</span> <span class=\"kn\">import</span> <span class=\"n\">engine</span>\n<span class=\"c1\"># Set the template folder so that when you ask for page.md </span>\n<span class=\"c1\"># the system knows where to look.</span>\n\n<span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">set_template_folder</span><span class=\"p\">(</span><span class=\"n\">full_path_to_template_folder</span><span class=\"p\">)</span>\n</pre>\n<p>Then generate the HTML content via:</p>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'variable1'</span><span class=\"p\">:</span> <span class=\"s1\">'Value 1'</span><span class=\"p\">,</span> <span class=\"s1\">'variable2'</span><span class=\"p\">:</span> <span class=\"s1\">'Value 2'</span><span class=\"p\">}</span>\n<span class=\"n\">contents</span> <span class=\"o\">=</span> <span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">get_page</span><span class=\"p\">(</span><span class=\"s1\">'page.md'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<p>Finally, pass the HTML fragment to be rendered in the larger page context:</p>\n<pre><span class=\"c1\"># A Pyramid view method:</span>\n\n<span class=\"nd\">@view_config</span><span class=\"p\">(</span><span class=\"n\">route_name</span><span class=\"o\">=</span><span class=\"s1\">'landing'</span><span class=\"p\">,</span> <span class=\"n\">renderer</span><span class=\"o\">=</span><span class=\"s1\">'landing.pt'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">landing</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'variable1'</span><span class=\"p\">:</span> <span class=\"s1\">'Value 1'</span><span class=\"p\">,</span> <span class=\"s1\">'variable2'</span><span class=\"p\">:</span> <span class=\"s1\">'Value 2'</span><span class=\"p\">}</span>\n    <span class=\"n\">contents</span> <span class=\"o\">=</span> <span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">get_page</span><span class=\"p\">(</span><span class=\"s1\">'page.md'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Project name'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'contents'</span><span class=\"p\">:</span> <span class=\"n\">contents</span>\n    <span class=\"p\">}</span>\n</pre>\n<p>And the larger website template grabs the content and renders it, <code>landing.pt</code>:</p>\n<pre>...\n<span class=\"p\">&lt;</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    ${structure:contents}\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n...\n</pre>\n<h2>Beware the danger!</h2>\n<p>This library is meant for INTERNAL usage only. It's to help you add CMS features to your app. It is <strong>not</strong> for taking user input and making an forum or something like that.</p>\n<p>To allow for the greatest control, you can embed small fragments of HTML in the markdown (e.g. to add a CSS class or other actions). This means the markdown is processed in <strong>UNSAFE</strong> mode. It would allow for script injection attacks if opened to the public.</p>\n<h2>Extensibility</h2>\n<p><code>markdown-subtemplate</code> has three axis of extensibility:</p>\n<ul>\n<li><strong>Storage</strong> - Load markdown content from disk, db, or elsewhere.</li>\n<li><strong>Caching</strong> - Cache generated markdown and HTML in memory, DB, or you pick!</li>\n<li><strong>Logging</strong> - If you are using a logging framework, plug in logging messages from the library.</li>\n</ul>\n<p>See the <a href=\"https://github.com/mikeckennedy/markdown-subtemplate/blob/master/extensibility.md\" rel=\"nofollow\">extensibility doc</a> for details and examples.</p>\n<h2>Installation</h2>\n<p>Until we publish to PyPI, you'll need to install from Github using this command. We intend to make it available via PyPI, just want to finalize the API a little more first.</p>\n<p>Install:</p>\n<pre>pip install git+git://github.com/mikeckennedy/markdown-subtemplate\n</pre>\n<h2>Nested markdown</h2>\n<p>One of the reason's this project exists, rather than just passing markdown text to a markdown library is allowing nesting / importing of markdown files.</p>\n<p>If you have page fragments that need to appear more than once, create a dedicated markdown import file that can be managed and versioned in one place. Here's how:</p>\n<h3>Created an imported file in TEMPLATES/_shared</h3>\n<p>All imported markdown files are located in subpaths of <code>TEMPLATES/_shared</code> where <code>TEMPLATES</code> is the path you set during startup.</p>\n<pre><code>TEMPLATES\n    |- _shared\n        |- contact.md\n        |- footer.md\n    |-pages\n        | - page.md\n        | - about.md\n</code></pre>\n<p>Write the imported / shared markdown, <code>contact.md</code>:</p>\n<pre>Contact us via email [us@us.com](mailto:us.com) or on \nTwitter via [@us](https://twitter.com/us)\n</pre>\n<p>Then in your page, e.g. <code>page.md</code> you can add an import statement:</p>\n<pre># Our amazing page\n\nHere is some info **about the page**. It's standard markdown.\n\nWant to contact us? Here are some options:\n[IMPORT CONTACT]\n\nAnd a footer:\n[IMPORT FOOTER]\n</pre>\n<p>The resulting markdown is just replacing the <code>IMPORT</code> statements with the contents of those files, then passing the whole thing through a markdown to HTML processor.</p>\n<h2>Variables</h2>\n<p><code>markdown_subtemplate</code> has some limited support for variable replacements. Given this markdown page:</p>\n<pre># Example: $TITLE$\n\nWelcome to the $PROJECT$ project. Here are some details \n...\n</pre>\n<p>You can populate the variable values with:</p>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Markdown Transformers'</span><span class=\"p\">,</span> <span class=\"s1\">'project'</span><span class=\"p\">:</span> <span class=\"s1\">'sub templates'</span><span class=\"p\">}</span>\n<span class=\"n\">contents</span> <span class=\"o\">=</span> <span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">get_page</span><span class=\"p\">(</span><span class=\"s1\">'page.md'</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<p>Note that the variable names must be all-caps in the template. Missing variable statements in markdown that appear in the data dictionary are ignored.</p>\n<h2>Requirements</h2>\n<p>This library requires <strong>Python 3.6 or higher</strong>. Because, <em>f-yes</em>! (f-strings).</p>\n<h2>Licence</h2>\n<p><code>markdown-subtemplate</code> is distributed under the MIT license.</p>\n<h2>Authors</h2>\n<p><code>markdown_subtemplate</code> was written by <a href=\"https://github.com/mikeckennedy\" rel=\"nofollow\">Michael Kennedy</a>.</p>\n\n          </div>"}, "last_serial": 7011937, "releases": {"0.1.18": [{"comment_text": "", "digests": {"md5": "e577afe2b34941bbbfe30aacc87fbe22", "sha256": "65fa089cfbb9fa708d629ddadc57ae82f7670f6e367db6e92098c5faf58ac1a6"}, "downloads": -1, "filename": "markdown_subtemplate-0.1.18-py3-none-any.whl", "has_sig": false, "md5_digest": "e577afe2b34941bbbfe30aacc87fbe22", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14130, "upload_time": "2020-03-20T18:56:52", "upload_time_iso_8601": "2020-03-20T18:56:52.077937Z", "url": "https://files.pythonhosted.org/packages/23/67/ec834466772a3f2fa1b07271fbcb20f2c52d04cb935d99f9b98dfdcad8cc/markdown_subtemplate-0.1.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ece264217e0ab487731ff9b2412e83b3", "sha256": "2a77ea3010b13afcc0526962acedb13768b72d8440a62bd81cc443b39f32a54d"}, "downloads": -1, "filename": "markdown_subtemplate-0.1.18.tar.gz", "has_sig": false, "md5_digest": "ece264217e0ab487731ff9b2412e83b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12304, "upload_time": "2020-03-20T18:56:54", "upload_time_iso_8601": "2020-03-20T18:56:54.026486Z", "url": "https://files.pythonhosted.org/packages/ac/37/beaa40448ce10034c2856cb7f03e9cdfa38f2154f10c96718b5568dfc3c3/markdown_subtemplate-0.1.18.tar.gz", "yanked": false}], "0.1.19": [{"comment_text": "", "digests": {"md5": "be1b25722d78e23518dc7b340692c1e8", "sha256": "e84a657bef5a9aecda5833ac5194b6ec2a71c295fb50aa1bbdf4301a6210095e"}, "downloads": -1, "filename": "markdown_subtemplate-0.1.19-py3-none-any.whl", "has_sig": false, "md5_digest": "be1b25722d78e23518dc7b340692c1e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14149, "upload_time": "2020-03-24T13:57:50", "upload_time_iso_8601": "2020-03-24T13:57:50.579517Z", "url": "https://files.pythonhosted.org/packages/60/62/9bfb8d77bce16390eb966fa60b9c8c14c0f05c948b98a54667ce5c90527a/markdown_subtemplate-0.1.19-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "253b557758cf6ebb662757ee20528489", "sha256": "63d7043e66bb743a72176eed50915c15870f28f2f1889071fdb760c7f7465b16"}, "downloads": -1, "filename": "markdown_subtemplate-0.1.19.tar.gz", "has_sig": false, "md5_digest": "253b557758cf6ebb662757ee20528489", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12393, "upload_time": "2020-03-24T13:57:51", "upload_time_iso_8601": "2020-03-24T13:57:51.591371Z", "url": "https://files.pythonhosted.org/packages/38/27/349fc7bedd363f0162e850db62d2f87d565e08bace4dc78510bffb3b1ea2/markdown_subtemplate-0.1.19.tar.gz", "yanked": false}], "0.1.20": [{"comment_text": "", "digests": {"md5": "13f916a1c5f28e7376a203b7428b8f53", "sha256": "a98106956a173bf408ab8b6a0fb81b2973eccd0b788113d2085c6e0928188fa4"}, "downloads": -1, "filename": "markdown_subtemplate-0.1.20-py3-none-any.whl", "has_sig": false, "md5_digest": "13f916a1c5f28e7376a203b7428b8f53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14172, "upload_time": "2020-04-13T18:40:07", "upload_time_iso_8601": "2020-04-13T18:40:07.832133Z", "url": "https://files.pythonhosted.org/packages/d8/12/2b4a7d3405afd4fa502287a3f291562347632ae3c20325ab9d4487da4ccd/markdown_subtemplate-0.1.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c59d3c255b5b685e5dfc2e2a90abded7", "sha256": "af28af8dd11f28fd3e9d7669d4467c969a888a8bd25bb454a6603d3c0022fd1d"}, "downloads": -1, "filename": "markdown_subtemplate-0.1.20.tar.gz", "has_sig": false, "md5_digest": "c59d3c255b5b685e5dfc2e2a90abded7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12430, "upload_time": "2020-04-13T18:40:08", "upload_time_iso_8601": "2020-04-13T18:40:08.903317Z", "url": "https://files.pythonhosted.org/packages/e3/68/02177e02b1f8258de0b01d9572b2abe6644c694c19c59efeb432d581ecf0/markdown_subtemplate-0.1.20.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "13f916a1c5f28e7376a203b7428b8f53", "sha256": "a98106956a173bf408ab8b6a0fb81b2973eccd0b788113d2085c6e0928188fa4"}, "downloads": -1, "filename": "markdown_subtemplate-0.1.20-py3-none-any.whl", "has_sig": false, "md5_digest": "13f916a1c5f28e7376a203b7428b8f53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14172, "upload_time": "2020-04-13T18:40:07", "upload_time_iso_8601": "2020-04-13T18:40:07.832133Z", "url": "https://files.pythonhosted.org/packages/d8/12/2b4a7d3405afd4fa502287a3f291562347632ae3c20325ab9d4487da4ccd/markdown_subtemplate-0.1.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c59d3c255b5b685e5dfc2e2a90abded7", "sha256": "af28af8dd11f28fd3e9d7669d4467c969a888a8bd25bb454a6603d3c0022fd1d"}, "downloads": -1, "filename": "markdown_subtemplate-0.1.20.tar.gz", "has_sig": false, "md5_digest": "c59d3c255b5b685e5dfc2e2a90abded7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12430, "upload_time": "2020-04-13T18:40:08", "upload_time_iso_8601": "2020-04-13T18:40:08.903317Z", "url": "https://files.pythonhosted.org/packages/e3/68/02177e02b1f8258de0b01d9572b2abe6644c694c19c59efeb432d581ecf0/markdown_subtemplate-0.1.20.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:43 2020"}