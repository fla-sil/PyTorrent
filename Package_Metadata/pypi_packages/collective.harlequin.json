{"info": {"author": "JeanMichel FRANCOIS aka toutpt", "author_email": "jeanmichel.francois@makina-corpus.com", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Programming Language :: Python"], "description": "Introduction\n============\n\nHarlequin provide infrastructure to make configurable browser view. This\nmodule doesn't provide any feature to Plone.\n\n.. contents::\n\nCredits\n======================================\n|makinacom|_\n\n* `Planet Makina Corpus <http://www.makina-corpus.org>`_\n* `Contact us <mailto:python@makina-corpus.org>`_\n\n.. |makinacom| image:: http://depot.makina-corpus.org/public/logo.gif\n.. _makinacom:  http://www.makina-corpus.com\n\n\nHow to use it\n=============\n\nYou want to develop a browser view that need configuration ? Make your browser\nview inherits from collective.harlequin.browser.Harlequin (or implements IHarlequinView)\n\nNext you can define your configuration with a zope.schema interface which inherits from\ncollective.harlequin.forms.Schema\n\nNext you have to make your z3cform with the configuration schema and inherits from\ncollective.harlequin.forms.Form.\n\nThe base harlequin view is not aware of your schema. you have to implements harlequin_schema method\nfrom IHarlequinView and that's it, you have your 'harlequin' view !\n\nNext make your view available in the display drop down menu, and try by selecting it ! You get\nThe form displayed, fill it and validate it, the job is made for you.\n\nHow it works\n============\n\nIt override the setViewTemplate script, and redirect to a custom form if the\nchoosen view is an 'harlequin' view\n\nThe basic z3cform for configuration use a templateId field in hidden mode to store the templateId\n\nBy default configuration are stored with the property manager. It's simple to make it work with\nannotation, but property has the advantage to be useable throw ZMI.\n\nTODO\n====\n\n* i18n\n* make PropertyManager adapter working\n   (at least I don't have the use case since in Zope/Plone the Annotation storage as precedence,\n   I might be removing it)\n\n\nChangelog\n=========\n\n0.5 - 2010-03-03\n----------------\n\n- Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://svn.plone.org/svn/collective/collective.harlequin", "keywords": "zope plone", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.harlequin", "package_url": "https://pypi.org/project/collective.harlequin/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.harlequin/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://svn.plone.org/svn/collective/collective.harlequin"}, "release_url": "https://pypi.org/project/collective.harlequin/0.5/", "requires_dist": null, "requires_python": null, "summary": "Make a configurable browser view by Makina Corpus.", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Introduction</a></h2>\n<p>Harlequin provide infrastructure to make configurable browser view. This\nmodule doesn\u2019t provide any feature to Plone.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#introduction\" id=\"id2\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#credits\" id=\"id3\" rel=\"nofollow\">Credits</a></li>\n<li><a href=\"#how-to-use-it\" id=\"id4\" rel=\"nofollow\">How to use it</a></li>\n<li><a href=\"#how-it-works\" id=\"id5\" rel=\"nofollow\">How it works</a></li>\n<li><a href=\"#todo\" id=\"id6\" rel=\"nofollow\">TODO</a></li>\n<li><a href=\"#changelog\" id=\"id7\" rel=\"nofollow\">Changelog</a></li>\n</ul>\n</div>\n</div>\n<div id=\"credits\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Credits</a></h2>\n<p><a href=\"http://www.makina-corpus.com\" rel=\"nofollow\"><img alt=\"makinacom\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a7ff2c6fc5ab8cd2f425946f19dbfbf0aa4c1d7/687474703a2f2f6465706f742e6d616b696e612d636f727075732e6f72672f7075626c69632f6c6f676f2e676966\"></a></p>\n<ul>\n<li><a href=\"http://www.makina-corpus.org\" rel=\"nofollow\">Planet Makina Corpus</a></li>\n<li><a href=\"mailto:python%40makina-corpus.org\">Contact us</a></li>\n</ul>\n</div>\n<div id=\"how-to-use-it\">\n<h2><a href=\"#id4\" rel=\"nofollow\">How to use it</a></h2>\n<p>You want to develop a browser view that need configuration ? Make your browser\nview inherits from collective.harlequin.browser.Harlequin (or implements IHarlequinView)</p>\n<p>Next you can define your configuration with a zope.schema interface which inherits from\ncollective.harlequin.forms.Schema</p>\n<p>Next you have to make your z3cform with the configuration schema and inherits from\ncollective.harlequin.forms.Form.</p>\n<p>The base harlequin view is not aware of your schema. you have to implements harlequin_schema method\nfrom IHarlequinView and that\u2019s it, you have your \u2018harlequin\u2019 view !</p>\n<p>Next make your view available in the display drop down menu, and try by selecting it ! You get\nThe form displayed, fill it and validate it, the job is made for you.</p>\n</div>\n<div id=\"how-it-works\">\n<h2><a href=\"#id5\" rel=\"nofollow\">How it works</a></h2>\n<p>It override the setViewTemplate script, and redirect to a custom form if the\nchoosen view is an \u2018harlequin\u2019 view</p>\n<p>The basic z3cform for configuration use a templateId field in hidden mode to store the templateId</p>\n<p>By default configuration are stored with the property manager. It\u2019s simple to make it work with\nannotation, but property has the advantage to be useable throw ZMI.</p>\n</div>\n<div id=\"todo\">\n<h2><a href=\"#id6\" rel=\"nofollow\">TODO</a></h2>\n<ul>\n<li>i18n</li>\n<li><dl>\n<dt>make PropertyManager adapter working</dt>\n<dd>(at least I don\u2019t have the use case since in Zope/Plone the Annotation storage as precedence,\nI might be removing it)</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Changelog</a></h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.5 - 2010-03-03</span></h2>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 787842, "releases": {"0.5": [], "1.0b1": [{"comment_text": "", "digests": {"md5": "3cdb9426512686e26cb04930ad7dd65a", "sha256": "7a4e01ce4c853f2d099a1feb92492e3440b1d14b21a842679c1bf028e37a5529"}, "downloads": -1, "filename": "collective.harlequin-1.0b1.zip", "has_sig": false, "md5_digest": "3cdb9426512686e26cb04930ad7dd65a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25788, "upload_time": "2010-05-27T16:37:35", "upload_time_iso_8601": "2010-05-27T16:37:35.027834Z", "url": "https://files.pythonhosted.org/packages/66/06/eab8dc06f5f423af2534b525000c8e75964ed4dd7a91ef2bb0d6b1f7d5f7/collective.harlequin-1.0b1.zip", "yanked": false}], "1.0b2": [{"comment_text": "", "digests": {"md5": "c5ec47902925b3cc62304a9a6992cc7f", "sha256": "7848c38a48512d4533cf8ede98ceab7dc73fc9c43f5d5ca3e30e01c64753b0f2"}, "downloads": -1, "filename": "collective.harlequin-1.0b2.zip", "has_sig": false, "md5_digest": "c5ec47902925b3cc62304a9a6992cc7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32882, "upload_time": "2010-05-28T16:09:55", "upload_time_iso_8601": "2010-05-28T16:09:55.223085Z", "url": "https://files.pythonhosted.org/packages/a6/dd/c704864748fe72dd059d6c1e870aef0db8e0a63f4b790fd34c9382dbf4fc/collective.harlequin-1.0b2.zip", "yanked": false}], "1.0b3": [{"comment_text": "", "digests": {"md5": "7a9910cefdd85146eeafc1cad16941d0", "sha256": "b7261b49dc999dbbbbd92da6e73a0d554fe49e3034b0e813a4c9b85175573460"}, "downloads": -1, "filename": "collective.harlequin-1.0b3.zip", "has_sig": false, "md5_digest": "7a9910cefdd85146eeafc1cad16941d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34797, "upload_time": "2010-05-31T12:48:00", "upload_time_iso_8601": "2010-05-31T12:48:00.519064Z", "url": "https://files.pythonhosted.org/packages/68/2c/019edfd137f54ef632b34449ef182f1dc35f0d929647515bc091ebbb5507/collective.harlequin-1.0b3.zip", "yanked": false}], "1.0b4": [{"comment_text": "", "digests": {"md5": "0388888b1bb3dc81dd0e23bce7e3b36e", "sha256": "597772ac1f3ffb0e7f95789951db56c9f290c1b3ddcc7f20c544b97b4594b2b3"}, "downloads": -1, "filename": "collective.harlequin-1.0b4.zip", "has_sig": false, "md5_digest": "0388888b1bb3dc81dd0e23bce7e3b36e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35538, "upload_time": "2010-05-31T16:21:20", "upload_time_iso_8601": "2010-05-31T16:21:20.833344Z", "url": "https://files.pythonhosted.org/packages/f0/7e/d6c1d4e17959cb805e7714dea55a242c73ddcaa1e56c5cb30b9d4c9c7325/collective.harlequin-1.0b4.zip", "yanked": false}]}, "urls": [], "timestamp": "Fri May  8 00:45:14 2020"}