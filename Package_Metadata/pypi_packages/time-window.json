{"info": {"author": "Encode", "author_email": "devs@encodegroup.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Topic :: Software Development :: Libraries"], "description": "[![CircleCI](https://circleci.com/gh/EncodeGroup/time-window.svg?style=shield)](https://circleci.com/gh/EncodeGroup/time-window)\n\n# Time Window\n\nTime Window is a small Python library that implements a representation for a\nperiod of time, in the form of a half-open interval `[since, until)`.\n\n## Installation\n\nInstall using `pip` from PyPI.\n\n```bash\npip install time-window\n```\n\n## Usage\n\nInstantiate a new `TimeWindow` object using two `datetime.datetime` objects for\nthe boundaries.\n```python\n>>> from datetime import datetime\n>>> from time_window import TimeWindow\n\n>>> since = datetime(2019, 1, 23)\n>>> until = datetime(2019, 1, 29)\n\n>>> tw = TimeWindow(since, until)\n>>> tw\nTimeWindow(datetime.datetime(2019, 1, 23, 0, 0), datetime.datetime(2019, 1, 29, 0, 0))\n```\n\nAlternatively, instantiate a new `TimeWindow` object using a `datetime.datetime` object and one\n`datetime.timedelta` for the definition of the boundaries.\n```python\n>>> from datetime import timedelta\n\n>>> delta = timedelta(days=1)\n\n>>> tw = TimeWindow.from_timedelta(since, delta)\n>>> tw\nTimeWindow(datetime.datetime(2019, 1, 23, 0, 0), datetime.datetime(2019, 1, 24, 0, 0))\n```\n\nGet the size of the window.\n```python\n>>> tw.delta\ndatetime.timedelta(1)\n```\n\nGet the time that is in the middle of the window.\n```python\n>>> tw.middle\ndatetime.datetime(2019, 1, 23, 12, 0)\n```\n\nYou can also check if two `TimeWindow` objects overlap.\n```python\n>>> tw = TimeWindow(datetime(2019, 1, 23), datetime(2019, 1, 29))\n>>> tw2 = TimeWindow(datetime(2019, 1, 27), datetime(2019, 1, 30))\n>>> tw.overlaps(tw2)\nTrue\n```\n\nComplementary to the above action, you can check if two time windows are\ncontiguous (i.e., adjacent, sharing one boundary).\n```python\n>>> tw = TimeWindow(datetime(2019, 1, 23), datetime(2019, 1, 29))\n>>> tw2 = TimeWindow(datetime(2019, 1, 20), datetime(2019, 1, 23))\n>>> tw.contiguous(tw2)\n[TimeWindow(datetime.datetime(2019, 1, 20, 0, 0), datetime.datetime(2019, 1, 23, 0, 0)),\n TimeWindow(datetime.datetime(2019, 1, 23, 0, 0), datetime.datetime(2019, 1, 29, 0, 0))]\n\n>>> tw3 = TimeWindow(datetime(2019, 1, 20), datetime(2019, 1, 21))\n>>> tw.contiguous(tw3)\nFalse\n```\n\nAny `TimeWindow` object offers some of the standard [set operations](https://docs.python.org/3.6/library/stdtypes.html#set).\n```python\n>>> tw = TimeWindow(datetime(2019, 1, 23), datetime(2019, 1, 29))\n>>> tw2 = TimeWindow(datetime(2019, 1, 27), datetime(2019, 1, 30))\n\n>>> tw.intersection(tw2)\nTimeWindow(datetime.datetime(2019, 1, 27, 0, 0), datetime.datetime(2019, 1, 29, 0, 0))\n\n>>> tw.union(tw2)\nTimeWindow(datetime.datetime(2019, 1, 23, 0, 0), datetime.datetime(2019, 1, 30, 0, 0))\n\n>>> tw.complement(tw2)\nTimeWindow(datetime.datetime(2019, 1, 23, 0, 0), datetime.datetime(2019, 1, 27, 0, 0))\n```\n\n## Contributing\n\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/EncodeGroup/time-window", "keywords": "time window", "license": "", "maintainer": "", "maintainer_email": "", "name": "time-window", "package_url": "https://pypi.org/project/time-window/", "platform": "", "project_url": "https://pypi.org/project/time-window/", "project_urls": {"Homepage": "https://github.com/EncodeGroup/time-window"}, "release_url": "https://pypi.org/project/time-window/0.1.0/", "requires_dist": ["babel (<3.0,>=2.1.1)", "python-dateutil (<3.0,>=2.5.2)"], "requires_python": "", "summary": "A Time Window library", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://circleci.com/gh/EncodeGroup/time-window\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2b8ebf84a546cc8269900498e2dc7ab24dcbd4e2/68747470733a2f2f636972636c6563692e636f6d2f67682f456e636f646547726f75702f74696d652d77696e646f772e7376673f7374796c653d736869656c64\"></a></p>\n<h1>Time Window</h1>\n<p>Time Window is a small Python library that implements a representation for a\nperiod of time, in the form of a half-open interval <code>[since, until)</code>.</p>\n<h2>Installation</h2>\n<p>Install using <code>pip</code> from PyPI.</p>\n<pre>pip install time-window\n</pre>\n<h2>Usage</h2>\n<p>Instantiate a new <code>TimeWindow</code> object using two <code>datetime.datetime</code> objects for\nthe boundaries.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">time_window</span> <span class=\"kn\">import</span> <span class=\"n\">TimeWindow</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">since</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">until</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">29</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw</span> <span class=\"o\">=</span> <span class=\"n\">TimeWindow</span><span class=\"p\">(</span><span class=\"n\">since</span><span class=\"p\">,</span> <span class=\"n\">until</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw</span>\n<span class=\"n\">TimeWindow</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">29</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n</pre>\n<p>Alternatively, instantiate a new <code>TimeWindow</code> object using a <code>datetime.datetime</code> object and one\n<code>datetime.timedelta</code> for the definition of the boundaries.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">timedelta</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">delta</span> <span class=\"o\">=</span> <span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw</span> <span class=\"o\">=</span> <span class=\"n\">TimeWindow</span><span class=\"o\">.</span><span class=\"n\">from_timedelta</span><span class=\"p\">(</span><span class=\"n\">since</span><span class=\"p\">,</span> <span class=\"n\">delta</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw</span>\n<span class=\"n\">TimeWindow</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n</pre>\n<p>Get the size of the window.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw</span><span class=\"o\">.</span><span class=\"n\">delta</span>\n<span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<p>Get the time that is in the middle of the window.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw</span><span class=\"o\">.</span><span class=\"n\">middle</span>\n<span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n<p>You can also check if two <code>TimeWindow</code> objects overlap.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw</span> <span class=\"o\">=</span> <span class=\"n\">TimeWindow</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">29</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw2</span> <span class=\"o\">=</span> <span class=\"n\">TimeWindow</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw</span><span class=\"o\">.</span><span class=\"n\">overlaps</span><span class=\"p\">(</span><span class=\"n\">tw2</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>Complementary to the above action, you can check if two time windows are\ncontiguous (i.e., adjacent, sharing one boundary).</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw</span> <span class=\"o\">=</span> <span class=\"n\">TimeWindow</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">29</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw2</span> <span class=\"o\">=</span> <span class=\"n\">TimeWindow</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw</span><span class=\"o\">.</span><span class=\"n\">contiguous</span><span class=\"p\">(</span><span class=\"n\">tw2</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">TimeWindow</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)),</span>\n <span class=\"n\">TimeWindow</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">29</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw3</span> <span class=\"o\">=</span> <span class=\"n\">TimeWindow</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw</span><span class=\"o\">.</span><span class=\"n\">contiguous</span><span class=\"p\">(</span><span class=\"n\">tw3</span><span class=\"p\">)</span>\n<span class=\"kc\">False</span>\n</pre>\n<p>Any <code>TimeWindow</code> object offers some of the standard <a href=\"https://docs.python.org/3.6/library/stdtypes.html#set\" rel=\"nofollow\">set operations</a>.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw</span> <span class=\"o\">=</span> <span class=\"n\">TimeWindow</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">29</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw2</span> <span class=\"o\">=</span> <span class=\"n\">TimeWindow</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">))</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw</span><span class=\"o\">.</span><span class=\"n\">intersection</span><span class=\"p\">(</span><span class=\"n\">tw2</span><span class=\"p\">)</span>\n<span class=\"n\">TimeWindow</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">29</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw</span><span class=\"o\">.</span><span class=\"n\">union</span><span class=\"p\">(</span><span class=\"n\">tw2</span><span class=\"p\">)</span>\n<span class=\"n\">TimeWindow</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tw</span><span class=\"o\">.</span><span class=\"n\">complement</span><span class=\"p\">(</span><span class=\"n\">tw2</span><span class=\"p\">)</span>\n<span class=\"n\">TimeWindow</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2019</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n</pre>\n<h2>Contributing</h2>\n<p>Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.</p>\n<p>Please make sure to update tests as appropriate.</p>\n\n          </div>"}, "last_serial": 7040914, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "fee62067626b459c372d05306a044ad6", "sha256": "134e9bba7d5449d45e920a214608515521428b4651e4ced8c1d69bf868ceae1e"}, "downloads": -1, "filename": "time_window-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fee62067626b459c372d05306a044ad6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10269, "upload_time": "2019-01-29T21:30:37", "upload_time_iso_8601": "2019-01-29T21:30:37.082083Z", "url": "https://files.pythonhosted.org/packages/01/f7/5e0065d2d944c8010dbaf19a70eba9b51cd889d969bc35cabbc49eb18ac5/time_window-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e64293d784fe4e6001b53a165871f89", "sha256": "7f1ce7b834be237d1a75a7e0fa930f3f4b37069e5525b6d76729cec8748a3b15"}, "downloads": -1, "filename": "time-window-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5e64293d784fe4e6001b53a165871f89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5599, "upload_time": "2019-01-29T21:30:39", "upload_time_iso_8601": "2019-01-29T21:30:39.120086Z", "url": "https://files.pythonhosted.org/packages/82/a8/87ff591fb16b62fe69aa61472e47ce5486626c61cda27f87dab88e7ea30d/time-window-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "e9409dede0a416194a01e8192451eafe", "sha256": "7df99f7aa548ec7068a87be1754087639821d0a283d5d80250a9be9354bb6f72"}, "downloads": -1, "filename": "time_window-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e9409dede0a416194a01e8192451eafe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11871, "upload_time": "2020-04-17T15:13:07", "upload_time_iso_8601": "2020-04-17T15:13:07.788317Z", "url": "https://files.pythonhosted.org/packages/15/5d/f5510e72eb5556a7ab11cead681cc8820bd0feb145b3c0db126f9eddb1f0/time_window-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54ece4872ad285e800056a2cd3ee888e", "sha256": "c8e1c679746daa4bdbf354ee6c138b385c85634ca03846ce954e73bd073cdaa4"}, "downloads": -1, "filename": "time-window-0.1.0.tar.gz", "has_sig": false, "md5_digest": "54ece4872ad285e800056a2cd3ee888e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11016, "upload_time": "2020-04-17T15:13:09", "upload_time_iso_8601": "2020-04-17T15:13:09.633601Z", "url": "https://files.pythonhosted.org/packages/92/3a/a35c4a0cecd674c63896a1ea7ecd57e516cc8784b8d70efea141277858a9/time-window-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e9409dede0a416194a01e8192451eafe", "sha256": "7df99f7aa548ec7068a87be1754087639821d0a283d5d80250a9be9354bb6f72"}, "downloads": -1, "filename": "time_window-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e9409dede0a416194a01e8192451eafe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11871, "upload_time": "2020-04-17T15:13:07", "upload_time_iso_8601": "2020-04-17T15:13:07.788317Z", "url": "https://files.pythonhosted.org/packages/15/5d/f5510e72eb5556a7ab11cead681cc8820bd0feb145b3c0db126f9eddb1f0/time_window-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54ece4872ad285e800056a2cd3ee888e", "sha256": "c8e1c679746daa4bdbf354ee6c138b385c85634ca03846ce954e73bd073cdaa4"}, "downloads": -1, "filename": "time-window-0.1.0.tar.gz", "has_sig": false, "md5_digest": "54ece4872ad285e800056a2cd3ee888e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11016, "upload_time": "2020-04-17T15:13:09", "upload_time_iso_8601": "2020-04-17T15:13:09.633601Z", "url": "https://files.pythonhosted.org/packages/92/3a/a35c4a0cecd674c63896a1ea7ecd57e516cc8784b8d70efea141277858a9/time-window-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:53:20 2020"}