{"info": {"author": "Rob Hudson", "author_email": "rob@cogit8.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP"], "description": "==========\nPivotal-Py\n==========\n\nPivotal-Py is a very thin wrapper built on top of `httplib2` to make requests\nagainst the `Pivotal Tracker API`_.\n\n.. _Pivotal Tracker API: http://www.pivotaltracker.com/help/api\n\nInstallation\n============\n\nInstall from PyPI with ``easy_install`` or ``pip``::\n\n    pip install pivotal-py\n\nDependencies\n------------\n\nPivotal-Py requires `httplib2`_ 0.6.0 or later.\n\n.. _httplib2: http://pypi.python.org/pypi/httplib2\n\nUsage\n=====\n\nThis Pivotal Tracker API client uses the token to authenticate with Pivotal\nTracker.  You can get a token by going to your user profile and creating an API\ntoken.\n\nOnce you have an API token making requests against the APIs follows a simple\npattern of chainable methods, for example::\n\n    from pivotal import Pivotal\n    \n    pv = Pivotal('TOKEN')\n    \n    # Assuming a base URL of 'http://www.pivotaltracker.com/services/v3/'\n    \n    # Perform a GET at /projects and processes content via ElementTree.\n    etree = pv.projects().get_etree()\n\n    # Perform the same GET at /projects but return the response and\n    # content direct from httplib2.\n    response, content = pv.projects().get()\n\nNote: As seen above, there are two ways to get the content of a request:\n\n    #. Call ``get_etree()`` to return the content as ElementTree object.\n\n    #. Call ``get()`` to return the tuple containing both the response and\n       content direct from httplib2.\n\nAny positional arguments get pushed onto the URL::\n\n    # Perform a GET at /projects/[id]/stories where [id] is a project ID.\n    etree = pv.projects(id).stories().get_etree()\n\nAny keyword arguments get mapped to the URL query string and appended at the\nend of the URL::\n\n    # Perform a GET at /projects/[id]/stories and filter stories by those that\n    # are not started.\n    etree = pv.projects(id).stories(filter='state:unstarted').get_etree()\n    # Results in a URL of: /projects/[id]/stories?filter=state%3Aunstarted\n\nNote: POSTs are currently not implemented, but the plan is to implement a\n``post`` method that takes a body argument which is the body of the POST::\n\n    # TODO: POST to /projects to create a new project\n    etree = pv.projects().post(xml_body)\n\n\nCHANGES\n=======\n\n0.1.3 (2011-07-08)\n------------------\n\n- Removed Pivotal import from __init__.py which was causing httplib2\n  issues.\n\n0.1.2 (2011-07-08)\n------------------\n\n- Added ``httplib2`` as a dependency.\n\n0.1.1 (2010-12-10)\n------------------\n\n- Added an examples folder with a single example showing a script to send\n  an email summarizing stories across projects to multiple team members.\n\n- Provide both ``get()`` and ``get_etree()``.  The ``get()`` method\n  returns the response and content of the request directly from httplib2.\n  The ``get_etree()`` will return an ElementTree object of the content.\n\n0.1.0 (2010-10-15)\n------------------\n\n- Initial public release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/robhudson/pivotal-py/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "pivotal-py", "package_url": "https://pypi.org/project/pivotal-py/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pivotal-py/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/robhudson/pivotal-py/"}, "release_url": "https://pypi.org/project/pivotal-py/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "Thin client for Pivotal Tracker's API", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Pivotal-Py is a very thin wrapper built on top of <cite>httplib2</cite> to make requests\nagainst the <a href=\"http://www.pivotaltracker.com/help/api\" rel=\"nofollow\">Pivotal Tracker API</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install from PyPI with <tt>easy_install</tt> or <tt>pip</tt>:</p>\n<pre>pip install pivotal-py\n</pre>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<p>Pivotal-Py requires <a href=\"http://pypi.python.org/pypi/httplib2\" rel=\"nofollow\">httplib2</a> 0.6.0 or later.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>This Pivotal Tracker API client uses the token to authenticate with Pivotal\nTracker.  You can get a token by going to your user profile and creating an API\ntoken.</p>\n<p>Once you have an API token making requests against the APIs follows a simple\npattern of chainable methods, for example:</p>\n<pre>from pivotal import Pivotal\n\npv = Pivotal('TOKEN')\n\n# Assuming a base URL of 'http://www.pivotaltracker.com/services/v3/'\n\n# Perform a GET at /projects and processes content via ElementTree.\netree = pv.projects().get_etree()\n\n# Perform the same GET at /projects but return the response and\n# content direct from httplib2.\nresponse, content = pv.projects().get()\n</pre>\n<p>Note: As seen above, there are two ways to get the content of a request:</p>\n<blockquote>\n<ol>\n<li>Call <tt>get_etree()</tt> to return the content as ElementTree object.</li>\n<li>Call <tt>get()</tt> to return the tuple containing both the response and\ncontent direct from httplib2.</li>\n</ol>\n</blockquote>\n<p>Any positional arguments get pushed onto the URL:</p>\n<pre># Perform a GET at /projects/[id]/stories where [id] is a project ID.\netree = pv.projects(id).stories().get_etree()\n</pre>\n<p>Any keyword arguments get mapped to the URL query string and appended at the\nend of the URL:</p>\n<pre># Perform a GET at /projects/[id]/stories and filter stories by those that\n# are not started.\netree = pv.projects(id).stories(filter='state:unstarted').get_etree()\n# Results in a URL of: /projects/[id]/stories?filter=state%3Aunstarted\n</pre>\n<p>Note: POSTs are currently not implemented, but the plan is to implement a\n<tt>post</tt> method that takes a body argument which is the body of the POST:</p>\n<pre># TODO: POST to /projects to create a new project\netree = pv.projects().post(xml_body)\n</pre>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<div id=\"id1\">\n<h3>0.1.3 (2011-07-08)</h3>\n<ul>\n<li>Removed Pivotal import from __init__.py which was causing httplib2\nissues.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.2 (2011-07-08)</h3>\n<ul>\n<li>Added <tt>httplib2</tt> as a dependency.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.1 (2010-12-10)</h3>\n<ul>\n<li>Added an examples folder with a single example showing a script to send\nan email summarizing stories across projects to multiple team members.</li>\n<li>Provide both <tt>get()</tt> and <tt>get_etree()</tt>.  The <tt>get()</tt> method\nreturns the response and content of the request directly from httplib2.\nThe <tt>get_etree()</tt> will return an ElementTree object of the content.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.0 (2010-10-15)</h3>\n<ul>\n<li>Initial public release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 796300, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "750568edb66515e850c6feee8508e942", "sha256": "3ef0f6604f68bb3cf19426e66b7fdd6215b158ca9dd5487034934e3e62bfc4eb"}, "downloads": -1, "filename": "pivotal-py-0.1.0.tar.gz", "has_sig": false, "md5_digest": "750568edb66515e850c6feee8508e942", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4147, "upload_time": "2010-10-16T01:33:11", "upload_time_iso_8601": "2010-10-16T01:33:11.548595Z", "url": "https://files.pythonhosted.org/packages/e5/b4/0a5405fb6ab40f6728a683995bfe3118abbc2dd0ab48bbb0e9d298e55281/pivotal-py-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "82aee241d528023d7f00ff6810383096", "sha256": "064dd9d6dea5700559be6e139072d77c6bcaeaf3f11466dd665cc639afaf192b"}, "downloads": -1, "filename": "pivotal-py-0.1.1.tar.gz", "has_sig": false, "md5_digest": "82aee241d528023d7f00ff6810383096", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4535, "upload_time": "2010-12-10T19:13:06", "upload_time_iso_8601": "2010-12-10T19:13:06.954665Z", "url": "https://files.pythonhosted.org/packages/c7/e5/16793f432a96307b0e095eeaa9429df045cdc19d84a0fed1db6f2e11a40b/pivotal-py-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "e93bdcce3d2186070ccd74654c5a675a", "sha256": "fb4768dd98699b4136d9e5ac7ec5614a0c0e8f03ae240230e5fa97f37d6ab0f9"}, "downloads": -1, "filename": "pivotal-py-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e93bdcce3d2186070ccd74654c5a675a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4650, "upload_time": "2011-07-08T18:02:17", "upload_time_iso_8601": "2011-07-08T18:02:17.363559Z", "url": "https://files.pythonhosted.org/packages/3f/9c/ff1c55e8a97d0a80433c00a0d50b2f0bb07819b8969cb311c4f68652110d/pivotal-py-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "dc6edc849a284db5ad882f3bc46daf07", "sha256": "fe227d80754a6280f23796221d77a443dea30cd3836d6ac10051b3776ca5bc91"}, "downloads": -1, "filename": "pivotal-py-0.1.3.tar.gz", "has_sig": false, "md5_digest": "dc6edc849a284db5ad882f3bc46daf07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4711, "upload_time": "2011-07-09T00:38:38", "upload_time_iso_8601": "2011-07-09T00:38:38.138793Z", "url": "https://files.pythonhosted.org/packages/b4/d7/e8d0c28b19932598b0d892b0575b2e5e201433aefb978f204c0f320ade37/pivotal-py-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dc6edc849a284db5ad882f3bc46daf07", "sha256": "fe227d80754a6280f23796221d77a443dea30cd3836d6ac10051b3776ca5bc91"}, "downloads": -1, "filename": "pivotal-py-0.1.3.tar.gz", "has_sig": false, "md5_digest": "dc6edc849a284db5ad882f3bc46daf07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4711, "upload_time": "2011-07-09T00:38:38", "upload_time_iso_8601": "2011-07-09T00:38:38.138793Z", "url": "https://files.pythonhosted.org/packages/b4/d7/e8d0c28b19932598b0d892b0575b2e5e201433aefb978f204c0f320ade37/pivotal-py-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:58 2020"}