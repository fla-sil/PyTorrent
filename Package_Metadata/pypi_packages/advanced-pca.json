{"info": {"author": "Alfred Sasko", "author_email": "alfred.sasko@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Build Tools"], "description": "# Advanced Priniciple Component Analysis\n\n### Table of Contents\n1. [Project Motivation](#motivation)\n2. [Usage](#usage)\n4. [Installation](#installation)\n3. [File Descriptions](#files)\n5. [Licensing, Authors, and Acknowledgements](#licensing)\n\n## Project Motivation<a name=\"motivation\"></a>\n\nResearchers use Principle Component Analysis (PCA) intending to summarize features, identify structure in data or reduce the number of features. The interpretation of principal components is challenging in most of the cases due to the high amount of cross-loadings (one feature having significant weight across many principal components). Different types of matrix rotations are used to minimize cross-loadings and make factor interpretation easier.\n\nThe `custom_PCA` class is the child of `sklearn.decomposition.PCA` and uses varimax rotation and enables dimensionality reduction in complex pipelines with the modified `transform` method.\n\n`custom_PCA` class implements:\n - __varimax rotation__ for better interpretation of principal components\n - dimensionality reduction based on siginificant __feature communalities__ > 0.5\n - dimensionality reduction based on __feature weights significance__ calculated based on sample size\n - __surrogate feature selection__ - only features with maximum laoding are selected instead of principal components\n\n## Usage <a name=\"usage\"></a>\n\n### Example of using varimax rotation:\n```\n# 3rd party imports\nimport numpy as np\nfrom sklearn import datasets\nfrom sklearn.preprocessing import StandardScaler\nfrom advanced_pca import CustomPCA\n\n# load dataset\ndataset = datasets.load_diabetes()\nX_std = StandardScaler().fit_transform(dataset.data)\n\n# fit pca objects with and without rotation with 5 principal components\nstandard_pca5 = CustomPCA(n_components=5).fit(X_std)\nvarimax_pca5 = CustomPCA(n_components=5, rotation='varimax').fit(X_std)\n\n# display factor matrices and number of cross loadings\nprint('Factor matrix:\\n', standard_pca5.components_.round(1))\nprint(' Number of cross-loadings:', standard_pca5.count_cross_loadings())\nprint('\\nRotated factor matrix:\\n', varimax_pca5.components_.round(1))\nprint(' Number of cross_loadings:', varimax_pca5.count_cross_loadings()\n```\n```\nFactor matrix:\n [[ 0.2  0.2  0.3  0.3  0.3  0.4 -0.3  0.4  0.4  0.3]\n [ 0.  -0.4 -0.2 -0.1  0.6  0.5  0.5 -0.1 -0.  -0.1]\n [ 0.5 -0.1  0.2  0.5 -0.1 -0.3  0.4 -0.4  0.1  0.3]\n [-0.4 -0.7  0.5 -0.  -0.1 -0.2 -0.1  0.   0.3  0.1]\n [-0.7  0.4  0.1  0.5  0.1  0.1  0.2 -0.1 -0.2  0. ]]\n Number of cross-loadings: 20\n\nRotated factor matrix:\n [[ 0.1  0.   0.1  0.1  0.6  0.6  0.   0.4  0.2  0.1]\n [ 0.1  0.1  0.5  0.6  0.2  0.1 -0.1  0.2  0.4  0.4]\n [ 0.   0.2  0.3 -0.1 -0.   0.1 -0.7  0.5  0.3  0.2]\n [-0.1 -0.9  0.1 -0.3  0.1 -0.1  0.2 -0.2  0.1 -0.1]\n [-0.9 -0.1  0.1 -0.1 -0.1 -0.1 -0.  -0.1 -0.2 -0.2]]\n Number of cross_loadings: 13\n```\n\n### Example of dimensionality reduction based on features' weights and communalities significance:\n```\n# fit pca objects with option selecting only significant features\nsignificant_pca5 = (CustomPCA(n_components=5, feature_selection='significant')\n                    .fit(X_std))\n\n# print selected features based on weights and communalities significance\nprint('Communalities:\\n', significant_pca5.communalities_)\nprint('\\nSelected Features:\\n',\n      np.asarray(dataset.feature_names)[significant_pca5.get_support()])\n\n# execute dimensionality reduction and pring dataset shapes\nprint('\\nOriginal dataset shape:', X_std.shape)\nprint('Reduced dataset shape:', significant_pca5.transform(X_std).shape)\n```\n```\nCommunalities:\n [0.93669362 0.79747464 0.4109572  0.59415803 0.47225155 0.44619639\n 0.55086939 0.35416151 0.24100886 0.1962288 ]\n\nSelected Features:\n ['age' 'sex' 'bp' 's3']\n\nOriginal dataset shape: (442, 10)\nReduced dataset shape: (442, 4)\n```\n\n### Example of selection method of surrogate features:\n```\n# fit pca objects with option selecting only surrogate features\nsurrogate_pca = (CustomPCA(rotation='varimax', feature_selection='surrogate')\n                 .fit(X_std))\n\n# print factor matrix\nprint('Factor matrix:\\n', surrogate_pca.components_.round(1))\nprint('\\nSelected Features:\\n',\n      np.asarray(dataset.feature_names)[surrogate_pca.get_support()])\n\n# execute dimensionality reduction and pring dataset shapes\nprint('\\nOriginal dataset shape:', X_std.shape)\nprint('Reduced dataset shape:', surrogate_pca.transform(X_std).shape)\n```\n```\nFactor matrix:\n [[ 0.1  0.   0.1  0.1  0.6  0.7  0.   0.3  0.2  0.1]\n [ 0.   0.2  0.2  0.  -0.1  0.2 -0.7  0.6  0.2  0.1]\n [ 0.1  0.   0.2  0.1  0.3 -0.  -0.1  0.3  0.9  0.2]\n [-0.1 -1.  -0.  -0.1  0.  -0.1  0.2 -0.1 -0.  -0.1]\n [-1.  -0.1 -0.1 -0.2 -0.1 -0.1  0.  -0.1 -0.1 -0.1]\n [ 0.1  0.1  0.2  0.9  0.1  0.  -0.   0.1  0.2  0.2]\n [ 0.1  0.   0.9  0.2  0.1  0.1 -0.2  0.1  0.2  0.2]\n [ 0.1  0.1  0.1  0.2  0.1  0.1 -0.1  0.2  0.2  0.9]\n [ 0.   0.   0.   0.   0.1 -0.1  0.2  1.   0.   0. ]\n [ 0.  -0.   0.   0.   0.8 -0.7  0.   0.   0.   0. ]]\n\nSelected Features:\n ['bmi' 'bp' 's1' 's2' 's3' 's4' 's5' 's6']\n\nOriginal dataset shape: (442, 10)\nReduced dataset shape: (442, 8)\n```\n## Installation <a name=\"installation\"></a>\n\nThere are several necessary 3rd party libraries beyond the Anaconda distribution of Python which needs to be installed and imported to run code. These are:\n - [rpy2](https://pypi.org/project/rpy2/) Python interface to the R language used to calculate the varimax rotation\n\n```\npip install advanced-pca\n```\n\n## File Descriptions <a name=\"files\"></a>\n\nThere are additional files:\n - `custom_pca.py` advanced principle component analysis class definition\n - `licence.txt` see MIT lincence to follow\n - `setup.cfg` and `setup.py` used for creating PyPi package\n\n## Licensing, Authors, Acknowledgements<a name=\"licensing\"></a>\n\nMust give credit to [Joseph F. Hair Jr, William C. Black, Barry J. Babin, Rolph E. Anderson](https://www.amazon.com/Multivariate-Data-Analysis-Joseph-Hair/dp/0138132631).\nThe ones using projects shall follow [MIT lincence](https://github.com/alfredsasko/advanced-principle-component-analysis/blob/master/license.txt)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alfredsasko", "keywords": "Principle Component Analysis,Matrix rotation,Feature selection,PCA,scikit-learn", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "advanced-pca", "package_url": "https://pypi.org/project/advanced-pca/", "platform": "", "project_url": "https://pypi.org/project/advanced-pca/", "project_urls": {"Documentation": "https://pypi.org/project/advanced-pca/#description", "Homepage": "https://github.com/alfredsasko", "Source Code": "https://github.com/alfredsasko/advanced-principle-component-analysis"}, "release_url": "https://pypi.org/project/advanced-pca/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "PCA with varimax rotation and feature selection compatible with scikit-learn", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Advanced Priniciple Component Analysis</h1>\n<h3>Table of Contents</h3>\n<ol>\n<li><a href=\"#motivation\" rel=\"nofollow\">Project Motivation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#files\" rel=\"nofollow\">File Descriptions</a></li>\n<li><a href=\"#licensing\" rel=\"nofollow\">Licensing, Authors, and Acknowledgements</a></li>\n</ol>\n<h2>Project Motivation<a></a></h2>\n<p>Researchers use Principle Component Analysis (PCA) intending to summarize features, identify structure in data or reduce the number of features. The interpretation of principal components is challenging in most of the cases due to the high amount of cross-loadings (one feature having significant weight across many principal components). Different types of matrix rotations are used to minimize cross-loadings and make factor interpretation easier.</p>\n<p>The <code>custom_PCA</code> class is the child of <code>sklearn.decomposition.PCA</code> and uses varimax rotation and enables dimensionality reduction in complex pipelines with the modified <code>transform</code> method.</p>\n<p><code>custom_PCA</code> class implements:</p>\n<ul>\n<li><strong>varimax rotation</strong> for better interpretation of principal components</li>\n<li>dimensionality reduction based on siginificant <strong>feature communalities</strong> &gt; 0.5</li>\n<li>dimensionality reduction based on <strong>feature weights significance</strong> calculated based on sample size</li>\n<li><strong>surrogate feature selection</strong> - only features with maximum laoding are selected instead of principal components</li>\n</ul>\n<h2>Usage <a></a></h2>\n<h3>Example of using varimax rotation:</h3>\n<pre><code># 3rd party imports\nimport numpy as np\nfrom sklearn import datasets\nfrom sklearn.preprocessing import StandardScaler\nfrom advanced_pca import CustomPCA\n\n# load dataset\ndataset = datasets.load_diabetes()\nX_std = StandardScaler().fit_transform(dataset.data)\n\n# fit pca objects with and without rotation with 5 principal components\nstandard_pca5 = CustomPCA(n_components=5).fit(X_std)\nvarimax_pca5 = CustomPCA(n_components=5, rotation='varimax').fit(X_std)\n\n# display factor matrices and number of cross loadings\nprint('Factor matrix:\\n', standard_pca5.components_.round(1))\nprint(' Number of cross-loadings:', standard_pca5.count_cross_loadings())\nprint('\\nRotated factor matrix:\\n', varimax_pca5.components_.round(1))\nprint(' Number of cross_loadings:', varimax_pca5.count_cross_loadings()\n</code></pre>\n<pre><code>Factor matrix:\n [[ 0.2  0.2  0.3  0.3  0.3  0.4 -0.3  0.4  0.4  0.3]\n [ 0.  -0.4 -0.2 -0.1  0.6  0.5  0.5 -0.1 -0.  -0.1]\n [ 0.5 -0.1  0.2  0.5 -0.1 -0.3  0.4 -0.4  0.1  0.3]\n [-0.4 -0.7  0.5 -0.  -0.1 -0.2 -0.1  0.   0.3  0.1]\n [-0.7  0.4  0.1  0.5  0.1  0.1  0.2 -0.1 -0.2  0. ]]\n Number of cross-loadings: 20\n\nRotated factor matrix:\n [[ 0.1  0.   0.1  0.1  0.6  0.6  0.   0.4  0.2  0.1]\n [ 0.1  0.1  0.5  0.6  0.2  0.1 -0.1  0.2  0.4  0.4]\n [ 0.   0.2  0.3 -0.1 -0.   0.1 -0.7  0.5  0.3  0.2]\n [-0.1 -0.9  0.1 -0.3  0.1 -0.1  0.2 -0.2  0.1 -0.1]\n [-0.9 -0.1  0.1 -0.1 -0.1 -0.1 -0.  -0.1 -0.2 -0.2]]\n Number of cross_loadings: 13\n</code></pre>\n<h3>Example of dimensionality reduction based on features' weights and communalities significance:</h3>\n<pre><code># fit pca objects with option selecting only significant features\nsignificant_pca5 = (CustomPCA(n_components=5, feature_selection='significant')\n                    .fit(X_std))\n\n# print selected features based on weights and communalities significance\nprint('Communalities:\\n', significant_pca5.communalities_)\nprint('\\nSelected Features:\\n',\n      np.asarray(dataset.feature_names)[significant_pca5.get_support()])\n\n# execute dimensionality reduction and pring dataset shapes\nprint('\\nOriginal dataset shape:', X_std.shape)\nprint('Reduced dataset shape:', significant_pca5.transform(X_std).shape)\n</code></pre>\n<pre><code>Communalities:\n [0.93669362 0.79747464 0.4109572  0.59415803 0.47225155 0.44619639\n 0.55086939 0.35416151 0.24100886 0.1962288 ]\n\nSelected Features:\n ['age' 'sex' 'bp' 's3']\n\nOriginal dataset shape: (442, 10)\nReduced dataset shape: (442, 4)\n</code></pre>\n<h3>Example of selection method of surrogate features:</h3>\n<pre><code># fit pca objects with option selecting only surrogate features\nsurrogate_pca = (CustomPCA(rotation='varimax', feature_selection='surrogate')\n                 .fit(X_std))\n\n# print factor matrix\nprint('Factor matrix:\\n', surrogate_pca.components_.round(1))\nprint('\\nSelected Features:\\n',\n      np.asarray(dataset.feature_names)[surrogate_pca.get_support()])\n\n# execute dimensionality reduction and pring dataset shapes\nprint('\\nOriginal dataset shape:', X_std.shape)\nprint('Reduced dataset shape:', surrogate_pca.transform(X_std).shape)\n</code></pre>\n<pre><code>Factor matrix:\n [[ 0.1  0.   0.1  0.1  0.6  0.7  0.   0.3  0.2  0.1]\n [ 0.   0.2  0.2  0.  -0.1  0.2 -0.7  0.6  0.2  0.1]\n [ 0.1  0.   0.2  0.1  0.3 -0.  -0.1  0.3  0.9  0.2]\n [-0.1 -1.  -0.  -0.1  0.  -0.1  0.2 -0.1 -0.  -0.1]\n [-1.  -0.1 -0.1 -0.2 -0.1 -0.1  0.  -0.1 -0.1 -0.1]\n [ 0.1  0.1  0.2  0.9  0.1  0.  -0.   0.1  0.2  0.2]\n [ 0.1  0.   0.9  0.2  0.1  0.1 -0.2  0.1  0.2  0.2]\n [ 0.1  0.1  0.1  0.2  0.1  0.1 -0.1  0.2  0.2  0.9]\n [ 0.   0.   0.   0.   0.1 -0.1  0.2  1.   0.   0. ]\n [ 0.  -0.   0.   0.   0.8 -0.7  0.   0.   0.   0. ]]\n\nSelected Features:\n ['bmi' 'bp' 's1' 's2' 's3' 's4' 's5' 's6']\n\nOriginal dataset shape: (442, 10)\nReduced dataset shape: (442, 8)\n</code></pre>\n<h2>Installation <a></a></h2>\n<p>There are several necessary 3rd party libraries beyond the Anaconda distribution of Python which needs to be installed and imported to run code. These are:</p>\n<ul>\n<li><a href=\"https://pypi.org/project/rpy2/\" rel=\"nofollow\">rpy2</a> Python interface to the R language used to calculate the varimax rotation</li>\n</ul>\n<pre><code>pip install advanced-pca\n</code></pre>\n<h2>File Descriptions <a></a></h2>\n<p>There are additional files:</p>\n<ul>\n<li><code>custom_pca.py</code> advanced principle component analysis class definition</li>\n<li><code>licence.txt</code> see MIT lincence to follow</li>\n<li><code>setup.cfg</code> and <code>setup.py</code> used for creating PyPi package</li>\n</ul>\n<h2>Licensing, Authors, Acknowledgements<a></a></h2>\n<p>Must give credit to <a href=\"https://www.amazon.com/Multivariate-Data-Analysis-Joseph-Hair/dp/0138132631\" rel=\"nofollow\">Joseph F. Hair Jr, William C. Black, Barry J. Babin, Rolph E. Anderson</a>.\nThe ones using projects shall follow <a href=\"https://github.com/alfredsasko/advanced-principle-component-analysis/blob/master/license.txt\" rel=\"nofollow\">MIT lincence</a></p>\n\n          </div>"}, "last_serial": 6567929, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b7986e0eb46f2d751e83aedeb9f806b1", "sha256": "a50fa1e630c1543c528ab5a1ceec55b68d169823fa09b75b3d414df12e83534c"}, "downloads": -1, "filename": "advanced_pca-0.1.tar.gz", "has_sig": false, "md5_digest": "b7986e0eb46f2d751e83aedeb9f806b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7398, "upload_time": "2020-02-04T08:43:15", "upload_time_iso_8601": "2020-02-04T08:43:15.500104Z", "url": "https://files.pythonhosted.org/packages/f4/5f/0d04f5f60bf3a483036c2e1153156d66c1a36833b2cd8841c076ca59c1ad/advanced_pca-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4faeea8f258bc9a318546d07d0e24cb2", "sha256": "3bd9e7817ba8b0e70bb3f3fedc190f8fb09bfb0df09676b73f7c513332f8f372"}, "downloads": -1, "filename": "advanced_pca-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4faeea8f258bc9a318546d07d0e24cb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9461, "upload_time": "2020-02-04T10:48:48", "upload_time_iso_8601": "2020-02-04T10:48:48.267876Z", "url": "https://files.pythonhosted.org/packages/b6/5d/556e0fa8335bb701ce22f30d3bec2fdbca6076b821e4bdaa8dfadccd07bd/advanced_pca-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4faeea8f258bc9a318546d07d0e24cb2", "sha256": "3bd9e7817ba8b0e70bb3f3fedc190f8fb09bfb0df09676b73f7c513332f8f372"}, "downloads": -1, "filename": "advanced_pca-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4faeea8f258bc9a318546d07d0e24cb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9461, "upload_time": "2020-02-04T10:48:48", "upload_time_iso_8601": "2020-02-04T10:48:48.267876Z", "url": "https://files.pythonhosted.org/packages/b6/5d/556e0fa8335bb701ce22f30d3bec2fdbca6076b821e4bdaa8dfadccd07bd/advanced_pca-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:23:08 2020"}