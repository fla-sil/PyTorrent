{"info": {"author": "Rob Day", "author_email": "rkd@rkd.me.uk", "bugtrack_url": null, "classifiers": [], "description": "Nose2 plugin for test dependencies\n==================================\n\n*This is based on https://github.com/Zitrax/nose-dep/, ported to nose2 and tweaked slightly.*\n\nThis plugin allows you to express dependencies between your tests, or a preferred running order for them. Although this contravenes best practices (unit tests should be separate, and be runnable independently - Ruby's minitest randomises the test order for exactly this reason), it may be useful in some cases:\n\n- you may have very slow integration tests where redoing what test A did just to run test B would simply be too costly\n- you may have 'smoke tests' which should run first, so that the rest can be skipped if those tests fail - for example, if you're writing a multiplication library and 2*2 doesn't work, there's no point testing anything more complicated\n\nTo use it, import the depends decorator (``from nose2dep.core import depends``) and decorate your testcases with ``@depends(before=\"test_name\")``, ``@depends(after=[\"test_name\", \"test_name2\"])`` or ``@depends(priority=6)`` (or some combination of those arguments, e.g. ``@depends(before=\"test_name\", after=\"test_other\", priority=100)``).\n\nDependencies\n============\n\nTo declare that your test needs to run before or after some other specific test(s), pass ``before=`` or the ``after=`` parameters to ``@depends``. The arguments can be:\n\n- the name of the other test method as a string\n- the other test method object itself\n- a list of either of the above\n\nIf test B depends on test A, and test A fails, then B will be skipped (allowing the 'smoke tests' use-case above).\n\nNote that all dependencies are treated as soft, unlike the original nosedep. They will only affect the test ordering, not force inclusion. For example if we have:\n\n::\n\n    @depends(after=test_b)\n    def test_a:\n      pass\n\n    def test_b:\n      pass\n\nand run all tests they would run in the order b,a. If you run only test_a, though, it won't pull in test_b to satisfy the dependency - it'll just run test_a. \n\nPriorities\n==========\n\nEach test can be given an integer priority (defaulting to 50) and the tests will run in order from lowest to highest. Dependencies take precedence so in total the ordering will be:\n\n1. All tests with a priority lower or equal to the default that are not part of any dependency chain ordered first by priority then by name.\n2. Priority groups in order, while each priority group is internally ordered the same as point 1.\n3. All tests with priority higher than the default that are not part of any dependency chain ordered first by priority then by name.\n\n*Note: Currently no support for Python 2.6 and 3.2. Should work for 2.7 and 3.3+.*\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rkday/nose2dep", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "nose2dep", "package_url": "https://pypi.org/project/nose2dep/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/nose2dep/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/rkday/nose2dep"}, "release_url": "https://pypi.org/project/nose2dep/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "The nosedep test dependency tool, ported to nose2", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"nose2-plugin-for-test-dependencies\">\n<h2>Nose2 plugin for test dependencies</h2>\n<p><em>This is based on https://github.com/Zitrax/nose-dep/, ported to nose2 and tweaked slightly.</em></p>\n<p>This plugin allows you to express dependencies between your tests, or a preferred running order for them. Although this contravenes best practices (unit tests should be separate, and be runnable independently - Ruby\u2019s minitest randomises the test order for exactly this reason), it may be useful in some cases:</p>\n<ul>\n<li>you may have very slow integration tests where redoing what test A did just to run test B would simply be too costly</li>\n<li>you may have \u2018smoke tests\u2019 which should run first, so that the rest can be skipped if those tests fail - for example, if you\u2019re writing a multiplication library and 2*2 doesn\u2019t work, there\u2019s no point testing anything more complicated</li>\n</ul>\n<p>To use it, import the depends decorator (<tt>from nose2dep.core import depends</tt>) and decorate your testcases with <tt><span class=\"pre\">@depends(before=\"test_name\")</span></tt>, <tt><span class=\"pre\">@depends(after=[\"test_name\",</span> <span class=\"pre\">\"test_name2\"])</span></tt> or <tt>@depends(priority=6)</tt> (or some combination of those arguments, e.g. <tt><span class=\"pre\">@depends(before=\"test_name\",</span> <span class=\"pre\">after=\"test_other\",</span> priority=100)</tt>).</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>To declare that your test needs to run before or after some other specific test(s), pass <tt>before=</tt> or the <tt>after=</tt> parameters to <tt>@depends</tt>. The arguments can be:</p>\n<ul>\n<li>the name of the other test method as a string</li>\n<li>the other test method object itself</li>\n<li>a list of either of the above</li>\n</ul>\n<p>If test B depends on test A, and test A fails, then B will be skipped (allowing the \u2018smoke tests\u2019 use-case above).</p>\n<p>Note that all dependencies are treated as soft, unlike the original nosedep. They will only affect the test ordering, not force inclusion. For example if we have:</p>\n<pre>@depends(after=test_b)\ndef test_a:\n  pass\n\ndef test_b:\n  pass\n</pre>\n<p>and run all tests they would run in the order b,a. If you run only test_a, though, it won\u2019t pull in test_b to satisfy the dependency - it\u2019ll just run test_a.</p>\n</div>\n<div id=\"priorities\">\n<h2>Priorities</h2>\n<p>Each test can be given an integer priority (defaulting to 50) and the tests will run in order from lowest to highest. Dependencies take precedence so in total the ordering will be:</p>\n<ol>\n<li>All tests with a priority lower or equal to the default that are not part of any dependency chain ordered first by priority then by name.</li>\n<li>Priority groups in order, while each priority group is internally ordered the same as point 1.</li>\n<li>All tests with priority higher than the default that are not part of any dependency chain ordered first by priority then by name.</li>\n</ol>\n<p><em>Note: Currently no support for Python 2.6 and 3.2. Should work for 2.7 and 3.3+.</em></p>\n</div>\n\n          </div>"}, "last_serial": 1886177, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "10bc6c685bbf9e8b753c1f6b1e871c37", "sha256": "916121c0ed70bbdce932fefb8242117ca023ae1ba6ea55da24c576cedd38c917"}, "downloads": -1, "filename": "nose2dep-0.2.tar.gz", "has_sig": false, "md5_digest": "10bc6c685bbf9e8b753c1f6b1e871c37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3339, "upload_time": "2016-01-02T17:35:02", "upload_time_iso_8601": "2016-01-02T17:35:02.448691Z", "url": "https://files.pythonhosted.org/packages/33/9e/7afbca1ade41969590b16496e584dadd7fe0cbc2e9345b0cf9cdc5c9232f/nose2dep-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "3662bfe28e697a51e14f3853684fd5ee", "sha256": "3bc0d0126c826a8c7ded4033c23829a429f977c3ea07f134c7d6d148745a4d05"}, "downloads": -1, "filename": "nose2dep-0.2.1.tar.gz", "has_sig": false, "md5_digest": "3662bfe28e697a51e14f3853684fd5ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4196, "upload_time": "2016-01-02T17:40:52", "upload_time_iso_8601": "2016-01-02T17:40:52.348203Z", "url": "https://files.pythonhosted.org/packages/69/6f/3c26dc4210b14db030152e5abd439b021dab70dc2db430ae1ff7fcec5e82/nose2dep-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "696ba9fb5cf86f3de77fdba344333e5b", "sha256": "bd148341ed8c521fbabf8d4d1846da93af1e4fb5745c2be4a4f55513bab68ef3"}, "downloads": -1, "filename": "nose2dep-0.2.2.tar.gz", "has_sig": false, "md5_digest": "696ba9fb5cf86f3de77fdba344333e5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4243, "upload_time": "2016-01-03T11:32:01", "upload_time_iso_8601": "2016-01-03T11:32:01.897139Z", "url": "https://files.pythonhosted.org/packages/d9/74/1f32e79bcd3062bd479ae07061a541bc24837f2c68a29235864a663a26df/nose2dep-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "696ba9fb5cf86f3de77fdba344333e5b", "sha256": "bd148341ed8c521fbabf8d4d1846da93af1e4fb5745c2be4a4f55513bab68ef3"}, "downloads": -1, "filename": "nose2dep-0.2.2.tar.gz", "has_sig": false, "md5_digest": "696ba9fb5cf86f3de77fdba344333e5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4243, "upload_time": "2016-01-03T11:32:01", "upload_time_iso_8601": "2016-01-03T11:32:01.897139Z", "url": "https://files.pythonhosted.org/packages/d9/74/1f32e79bcd3062bd479ae07061a541bc24837f2c68a29235864a663a26df/nose2dep-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:48 2020"}