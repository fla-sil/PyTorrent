{"info": {"author": "Protinon", "author_email": "Protinon99@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3 :: Only", "Topic :: Multimedia :: Sound/Audio :: Analysis", "Topic :: Multimedia :: Video"], "description": "## Features\n \n* Formatted data from ffprobe/mediainfo\n* Fallback data in case ffprobe/mediainfo cannot get data\n* Identical data structure\n* Full compatability with Python 3\n\n## Install\n \n ```\n pip install PyProbe\n ```\n\n## Usage\n\n```python\nimport pyprobe\nparser = pyprobe.VideoFileParser(ffprobe=\"/usr/bin/ffprobe\", includeMissing=True, rawMode=False)\ndata = parser.parseFfprobe(inputFile)\n```\n\nThis code will return a dictionary of values (as described below).\n\n* **includeMissing** Will remove values where ffprobe/mediainfo does not return data\n* **rawMode** Will make each value the raw output from ffprobe/mediainfo, which will be a string (except resolution, which is a tuple of strings).\n\n\nThere are also two helper functions provided to create more nicely formatted data -\n\n```python\n>>> import pyprobe\n>>> pyprobe.timeToTuple(12345.44)\n(3, 25, 45, 440)\n>> pyprobe.sizeStr(12345678.99)\n'11.8 MB'\n```\n\n# Data format\n\n```python\n{\n    \"path\": str,\n    \"bit_rate\": int,\n    \"duration\": float,\n    \"size\": int,\n    \"videos\": [\n        {\n            \"aspect_ratio\": str,\n            \"bit_rate\": int,\n            \"codec\": str,\n            \"format\": str,\n            \"framerate\": float,\n            \"pixel_format\": str,\n            \"resolution\": (\n                int # Width,\n                int # Height\n            )\n        }\n    ],\n    \"audios\": [\n        {\n            \"bit_rate\": int,\n            \"channel_count\": int,\n            \"channel_layout\": str,\n            \"codec\": str,\n            \"format\": str,\n            \"sample_rate\": int # Hz\n        }\n    ],\n    \"subtitles\": [\n        {\n            \"codec\": str,\n            \"language\": str\n        }\n    ],\n    \"chapters\": [\n        {\n            \"title\": str,\n            \"start\": float,\n            \"end\": float,\n        }\n    ]\n}\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Protinon/PyProbe", "keywords": "ffprobe,mediainfo,parser,video", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "PyProbe", "package_url": "https://pypi.org/project/PyProbe/", "platform": "", "project_url": "https://pypi.org/project/PyProbe/", "project_urls": {"Homepage": "https://github.com/Protinon/PyProbe"}, "release_url": "https://pypi.org/project/PyProbe/0.1.2/", "requires_dist": null, "requires_python": ">=3", "summary": "Extract metadata from video files using ffprobe or mediainfo", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Features</h2>\n<ul>\n<li>Formatted data from ffprobe/mediainfo</li>\n<li>Fallback data in case ffprobe/mediainfo cannot get data</li>\n<li>Identical data structure</li>\n<li>Full compatability with Python 3</li>\n</ul>\n<h2>Install</h2>\n<pre><code>pip install PyProbe\n</code></pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyprobe</span>\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">pyprobe</span><span class=\"o\">.</span><span class=\"n\">VideoFileParser</span><span class=\"p\">(</span><span class=\"n\">ffprobe</span><span class=\"o\">=</span><span class=\"s2\">\"/usr/bin/ffprobe\"</span><span class=\"p\">,</span> <span class=\"n\">includeMissing</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">rawMode</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parseFfprobe</span><span class=\"p\">(</span><span class=\"n\">inputFile</span><span class=\"p\">)</span>\n</pre>\n<p>This code will return a dictionary of values (as described below).</p>\n<ul>\n<li><strong>includeMissing</strong> Will remove values where ffprobe/mediainfo does not return data</li>\n<li><strong>rawMode</strong> Will make each value the raw output from ffprobe/mediainfo, which will be a string (except resolution, which is a tuple of strings).</li>\n</ul>\n<p>There are also two helper functions provided to create more nicely formatted data -</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">pyprobe</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pyprobe</span><span class=\"o\">.</span><span class=\"n\">timeToTuple</span><span class=\"p\">(</span><span class=\"mf\">12345.44</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"mi\">45</span><span class=\"p\">,</span> <span class=\"mi\">440</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"n\">pyprobe</span><span class=\"o\">.</span><span class=\"n\">sizeStr</span><span class=\"p\">(</span><span class=\"mf\">12345678.99</span><span class=\"p\">)</span>\n<span class=\"s1\">'11.8 MB'</span>\n</pre>\n<h1>Data format</h1>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"path\"</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"bit_rate\"</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"duration\"</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"size\"</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"videos\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">\"aspect_ratio\"</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"bit_rate\"</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"codec\"</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"format\"</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"framerate\"</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"pixel_format\"</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"resolution\"</span><span class=\"p\">:</span> <span class=\"p\">(</span>\n                <span class=\"nb\">int</span> <span class=\"c1\"># Width,</span>\n                <span class=\"nb\">int</span> <span class=\"c1\"># Height</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">\"audios\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">\"bit_rate\"</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"channel_count\"</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"channel_layout\"</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"codec\"</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"format\"</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"sample_rate\"</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"c1\"># Hz</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">\"subtitles\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">\"codec\"</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"language\"</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">\"chapters\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">\"title\"</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"start\"</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"end\"</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n\n          </div>"}, "last_serial": 5404187, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "7c00169d111573dcfbd4acd6ef5162f0", "sha256": "1f718fec3e29d04102f4677c0ec6f6094ab0eeb71f9b413e3e13193fc1f74de7"}, "downloads": -1, "filename": "PyProbe-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7c00169d111573dcfbd4acd6ef5162f0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 7609, "upload_time": "2019-06-15T15:49:48", "upload_time_iso_8601": "2019-06-15T15:49:48.545794Z", "url": "https://files.pythonhosted.org/packages/e6/c9/75d6c61f0447bc9fec93e76516ca5a907913855a8acd07e5d7464a6278a4/PyProbe-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d292430af09752669a41707a84a652bd", "sha256": "3c4b0b7cb008851f3bd2629702bcf54f62d5284ee0556069cdbf1097f6866ce9"}, "downloads": -1, "filename": "PyProbe-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d292430af09752669a41707a84a652bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 7614, "upload_time": "2019-06-15T16:00:18", "upload_time_iso_8601": "2019-06-15T16:00:18.218879Z", "url": "https://files.pythonhosted.org/packages/cd/0a/60e89a889adf6e43667eac62d055930507b9b5f5cce8418d1ca210e10699/PyProbe-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d292430af09752669a41707a84a652bd", "sha256": "3c4b0b7cb008851f3bd2629702bcf54f62d5284ee0556069cdbf1097f6866ce9"}, "downloads": -1, "filename": "PyProbe-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d292430af09752669a41707a84a652bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 7614, "upload_time": "2019-06-15T16:00:18", "upload_time_iso_8601": "2019-06-15T16:00:18.218879Z", "url": "https://files.pythonhosted.org/packages/cd/0a/60e89a889adf6e43667eac62d055930507b9b5f5cce8418d1ca210e10699/PyProbe-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:08 2020"}