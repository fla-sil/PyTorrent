{"info": {"author": "Panu P", "author_email": "panuph@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: POSIX", "Programming Language :: Python"], "description": "crone: a little extension to cron with timezone support\n\nOVERVIEW\n\nLike cron, but you can further indicate the timezone, the period and interval \nto run a command (tested on python 2.6 but should be fine to run with older \npython release). See USAGE for more detailed information.\n\nINSTALL\n\n1. Download the source distribution\n2. Untar/unzip the source distribution\n3. Run python setup.py install\n*** the module will appear as an editable source file in site-packages.\n\nor\n\n1. Run easy_install crone\n*** the module will appear as an uneditable binary file in site-packages.\n\nUSAGE\n\nLike cron, but you have more flexibility to scope down the time you want your\ncommands executed. First of all, you have to ask cron to run crone.py every\nminute with something like:\n\n* * * * * python -m crone -p cronetab > crone.log 2>&1\n\nIn your cronetab file, you specify crone (cron with extension) tasks, like:\n\n* * * * * * * * * echo \"Hello World!\"\n          | | | |\n          | | |  --> timezone, e.g. Australia/Melbourne and UTC (* = UTC)\n          | | --> interval from begin, e.g. 7d and 14d (* = 1d)\n          | --> end period, e.g. 2011-11-11T11:11:11 (* = 2099-12-31T23:59:59)\n          --> begin period, e.g. 2011-11-11T11:11:11 (* = 2000-01-01T00:00:00)\n\nThe first five conditions are exactly like cron. However, not all formats are\nsupported. At the moment, something like 1, 1,2,3, 0-10, * and */2, including\nall of them combined like 1,2,*,*/5,2-9 should work. The last fours are begin,\nend, interval (calculated from begin) and timezone conditions. Subject to this\nextension a command is executed iff the current time in the given timezone is \nwithin the period, i.e. begin to end (specified in format YYYY-mm-ddTHH:MM:SS) \ninclusively, and falls within the interval -- either day e.g. 7d, hour e.g. 7h \nor mintue e.g. 7m.\n\nMore examples of cronetab entries are shown below. Note that an entry prefixed\nwith # will never ever be executed.\n\n*/5 */1 * * * * * * Australia/Melbourne echo \"Hello Melbourne!\"\n* * * * * 2011-11-15T00:00:00 * 1d Australia/Melbourne echo \"Hello Melbourne!\"\n#* * * * * * * * * echo \"Hello Melbourne!\"\n\nTo view all possible arguments, you run python -m crone -h and will see things\nsimilar to below:\n\nUsage: crone.py [options]\n\nOptions:\n  -h, --help            show this help message and exit\n  -p PATH, --path=PATH  path to the cronetab file (default is ~/.cronetab)\n  -t TZPATH, --tzpath=TZPATH\n                        path to the timezone directory (default is\n                        /usr/share/zoneinfo)\n  --concurrent          run commands concurrentl (default if False)\n\nYou use -p to indicate the absolute path to your cronetab file, and you use -t\nto indicate the absolute path to the directory that contains timezone data. See\nhttp://www.linuxsa.org.au/tips/time.html for information about this topic. On\nmy machine, the directory is /usr/share/zoneinfo, so it is default in crone. By\ndefault, crone executes commands in order, waiting for each to complete before\nexecuting the next. If you flag --concurrent, crone will executes commands in\nconcurrent manner.\n\nDEPENDENCIES\n\npyparsing (easy_install pyparsing)\ndateutil (easy_install python-dateutil)\n\nCONTACT\n\nIf you have suggestions, reqeusts, etc, please feel free to create an issue in\nGitHub. Pull requests are also very much welcome.\n\nRELEASE NOTE\n\n1.0.0: Initial release.\n1.0.1: Add more information, instruction, etc.\n1.0.2: Resolve issues #1 and #2 (mostly about unit testing).\n1.0.3: Resolve issues #3, #5, #6 and #7 (bug fixes and improvements).", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/panuph/crone/downloads", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/panuph/crone", "keywords": null, "license": "Freeware", "maintainer": null, "maintainer_email": null, "name": "crone", "package_url": "https://pypi.org/project/crone/", "platform": "python", "project_url": "https://pypi.org/project/crone/", "project_urls": {"Download": "https://github.com/panuph/crone/downloads", "Homepage": "https://github.com/panuph/crone"}, "release_url": "https://pypi.org/project/crone/1.0.3/", "requires_dist": null, "requires_python": null, "summary": "a little extension to cron with timezone support", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            crone: a little extension to cron with timezone support<br><br>OVERVIEW<br><br>Like cron, but you can further indicate the timezone, the period and interval <br>to run a command (tested on python 2.6 but should be fine to run with older <br>python release). See USAGE for more detailed information.<br><br>INSTALL<br><br>1. Download the source distribution<br>2. Untar/unzip the source distribution<br>3. Run python setup.py install<br>*** the module will appear as an editable source file in site-packages.<br><br>or<br><br>1. Run easy_install crone<br>*** the module will appear as an uneditable binary file in site-packages.<br><br>USAGE<br><br>Like cron, but you have more flexibility to scope down the time you want your<br>commands executed. First of all, you have to ask cron to run crone.py every<br>minute with something like:<br><br>* * * * * python -m crone -p cronetab &gt; crone.log 2&gt;&amp;1<br><br>In your cronetab file, you specify crone (cron with extension) tasks, like:<br><br>* * * * * * * * * echo \"Hello World!\"<br>          | | | |<br>          | | |  --&gt; timezone, e.g. Australia/Melbourne and UTC (* = UTC)<br>          | | --&gt; interval from begin, e.g. 7d and 14d (* = 1d)<br>          | --&gt; end period, e.g. 2011-11-11T11:11:11 (* = 2099-12-31T23:59:59)<br>          --&gt; begin period, e.g. 2011-11-11T11:11:11 (* = 2000-01-01T00:00:00)<br><br>The first five conditions are exactly like cron. However, not all formats are<br>supported. At the moment, something like 1, 1,2,3, 0-10, * and */2, including<br>all of them combined like 1,2,*,*/5,2-9 should work. The last fours are begin,<br>end, interval (calculated from begin) and timezone conditions. Subject to this<br>extension a command is executed iff the current time in the given timezone is <br>within the period, i.e. begin to end (specified in format YYYY-mm-ddTHH:MM:SS) <br>inclusively, and falls within the interval -- either day e.g. 7d, hour e.g. 7h <br>or mintue e.g. 7m.<br><br>More examples of cronetab entries are shown below. Note that an entry prefixed<br>with # will never ever be executed.<br><br>*/5 */1 * * * * * * Australia/Melbourne echo \"Hello Melbourne!\"<br>* * * * * 2011-11-15T00:00:00 * 1d Australia/Melbourne echo \"Hello Melbourne!\"<br>#* * * * * * * * * echo \"Hello Melbourne!\"<br><br>To view all possible arguments, you run python -m crone -h and will see things<br>similar to below:<br><br>Usage: crone.py [options]<br><br>Options:<br>  -h, --help            show this help message and exit<br>  -p PATH, --path=PATH  path to the cronetab file (default is ~/.cronetab)<br>  -t TZPATH, --tzpath=TZPATH<br>                        path to the timezone directory (default is<br>                        /usr/share/zoneinfo)<br>  --concurrent          run commands concurrentl (default if False)<br><br>You use -p to indicate the absolute path to your cronetab file, and you use -t<br>to indicate the absolute path to the directory that contains timezone data. See<br>http://www.linuxsa.org.au/tips/time.html for information about this topic. On<br>my machine, the directory is /usr/share/zoneinfo, so it is default in crone. By<br>default, crone executes commands in order, waiting for each to complete before<br>executing the next. If you flag --concurrent, crone will executes commands in<br>concurrent manner.<br><br>DEPENDENCIES<br><br>pyparsing (easy_install pyparsing)<br>dateutil (easy_install python-dateutil)<br><br>CONTACT<br><br>If you have suggestions, reqeusts, etc, please feel free to create an issue in<br>GitHub. Pull requests are also very much welcome.<br><br>RELEASE NOTE<br><br>1.0.0: Initial release.<br>1.0.1: Add more information, instruction, etc.<br>1.0.2: Resolve issues #1 and #2 (mostly about unit testing).<br>1.0.3: Resolve issues #3, #5, #6 and #7 (bug fixes and improvements).\n          </div>"}, "last_serial": 788525, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "dfecdef36406a3dcaf06b20d6d7b6dd0", "sha256": "4a9ab88a7280139649d846fcf424c330a1b9c3fbc1ad161487964335d2234237"}, "downloads": -1, "filename": "crone-1.0.1.tar.gz", "has_sig": false, "md5_digest": "dfecdef36406a3dcaf06b20d6d7b6dd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3605, "upload_time": "2011-11-23T02:29:12", "upload_time_iso_8601": "2011-11-23T02:29:12.245796Z", "url": "https://files.pythonhosted.org/packages/a1/d5/cc0a1f4d27d4d687a03169bb06a4d84e1c79383aa9307ec21669f3c7f0aa/crone-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "1c26030fc437d8a939f2b692ea129b80", "sha256": "bf4bace583211fa88aa613f556aeefa1099316bd31a8b077e5deca3800375b69"}, "downloads": -1, "filename": "crone-1.0.2.tar.gz", "has_sig": false, "md5_digest": "1c26030fc437d8a939f2b692ea129b80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4583, "upload_time": "2011-11-28T05:55:03", "upload_time_iso_8601": "2011-11-28T05:55:03.620973Z", "url": "https://files.pythonhosted.org/packages/36/f1/508b90f4f6c118557db8d41b465fe58a6ff754a28b348f135ac77bb17c07/crone-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "d9fb99f0632e9b6d29fa2cf9a4ebda0a", "sha256": "1ce723965ebbfc9fa1c731daed1821784d112619ab6fbdde812264b0727bfd56"}, "downloads": -1, "filename": "crone-1.0.3.tar.gz", "has_sig": false, "md5_digest": "d9fb99f0632e9b6d29fa2cf9a4ebda0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5311, "upload_time": "2011-12-01T05:52:29", "upload_time_iso_8601": "2011-12-01T05:52:29.306126Z", "url": "https://files.pythonhosted.org/packages/87/9a/4f4c780c2a1c84671d638b03a9151889d39d7a0c9b064b85e35e1fdb7a0f/crone-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d9fb99f0632e9b6d29fa2cf9a4ebda0a", "sha256": "1ce723965ebbfc9fa1c731daed1821784d112619ab6fbdde812264b0727bfd56"}, "downloads": -1, "filename": "crone-1.0.3.tar.gz", "has_sig": false, "md5_digest": "d9fb99f0632e9b6d29fa2cf9a4ebda0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5311, "upload_time": "2011-12-01T05:52:29", "upload_time_iso_8601": "2011-12-01T05:52:29.306126Z", "url": "https://files.pythonhosted.org/packages/87/9a/4f4c780c2a1c84671d638b03a9151889d39d7a0c9b064b85e35e1fdb7a0f/crone-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:14 2020"}