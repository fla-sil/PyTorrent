{"info": {"author": "Daniel Danis", "author_email": "daniel.gordon.danis@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# ddalg\nAlgorithms and data structures for my Python projects.\n\n[![Build Status](https://travis-ci.org/ielis/ddalg.svg?branch=master)](https://travis-ci.org/ielis/ddalg)\n\n## Interval tree\n\nInterval tree is a data structure for holding intervals and to allow efficiently find intervals that overlap with given interval or point. Read more on [Wikipedia](https://en.wikipedia.org/wiki/Interval_tree).\n\n### Implementation note\nThis implementation uses half-open intervals, where begin coordinate is excluded. Half-open intervals are used in e.g. [BED genomic format](https://genome.ucsc.edu/FAQ/FAQformat.html#format1).\n\nThe current implementation needs to rebuild the tree after each `insert`, hence the tree is not efficient for using in *read/write* fashion.\n\n### Usage\n\n- implement your custom interval object while extending `Interval`. Two properties need to be overwritten:\n  - `begin` - 0-based (excluded) begin coordinate of the interval\n  - `end` - 0-based (included) end coordinate of the interval\n    ```python\n    from ddalg.model import Interval\n    \n    class YourInterval(Interval):\n    \n      def __init__(self, begin: int, end: int):\n        self._begin = begin\n        self._end = end\n        # anything else\n    \n      @property\n      def begin(self):\n        return self._begin\n    \n      @property\n      def end(self):\n        return self._end\n    ``` \n- create a collection of your intervals and store them in the interval tree:\n  ```python\n  from ddalg.itree import IntervalTree\n   \n  itree = IntervalTree([YourInterval(0, 3), YourInterval(1, 4)])\n  # ... \n  ```\n- query `itree`:\n  - using 1-based *position*:\n    ```python\n    itree.search(1)\n    ```\n    > returns `(0,3)`\n  - using half-open *interval coordinates*:\n    ```python\n    itree.get_overlaps(0, 1) \n    ``` \n    > returns `(0,3)`, effectively the same query as above\n  - for intervals with minimal required coverage\n    ```python\n    itree.fuzzy_query(0, 1, coverage=.90)\n    ```\n    > return intervals with >=.9 overlap with respect to query coordinates \n  - for intervals with minimal jaccard index\n    ```python\n    itree.jaccard_query(0, 1, min_jaccard=.90)\n    ```\n    > return intervals having jaccard_index>=.9 with respect to query coordinates", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ielis/ddalg", "keywords": "algorithms python", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "ddalg", "package_url": "https://pypi.org/project/ddalg/", "platform": "", "project_url": "https://pypi.org/project/ddalg/", "project_urls": {"Homepage": "https://github.com/ielis/ddalg"}, "release_url": "https://pypi.org/project/ddalg/0.0.3.post0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Algorithms and data structures for my Python projects", "version": "0.0.3.post0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ddalg</h1>\n<p>Algorithms and data structures for my Python projects.</p>\n<p><a href=\"https://travis-ci.org/ielis/ddalg\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9c0d70861296e1c30fda749c38e46d01bb0e64b1/68747470733a2f2f7472617669732d63692e6f72672f69656c69732f6464616c672e7376673f6272616e63683d6d6173746572\"></a></p>\n<h2>Interval tree</h2>\n<p>Interval tree is a data structure for holding intervals and to allow efficiently find intervals that overlap with given interval or point. Read more on <a href=\"https://en.wikipedia.org/wiki/Interval_tree\" rel=\"nofollow\">Wikipedia</a>.</p>\n<h3>Implementation note</h3>\n<p>This implementation uses half-open intervals, where begin coordinate is excluded. Half-open intervals are used in e.g. <a href=\"https://genome.ucsc.edu/FAQ/FAQformat.html#format1\" rel=\"nofollow\">BED genomic format</a>.</p>\n<p>The current implementation needs to rebuild the tree after each <code>insert</code>, hence the tree is not efficient for using in <em>read/write</em> fashion.</p>\n<h3>Usage</h3>\n<ul>\n<li>implement your custom interval object while extending <code>Interval</code>. Two properties need to be overwritten:\n<ul>\n<li><code>begin</code> - 0-based (excluded) begin coordinate of the interval</li>\n<li><code>end</code> - 0-based (included) end coordinate of the interval\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ddalg.model</span> <span class=\"kn\">import</span> <span class=\"n\">Interval</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">YourInterval</span><span class=\"p\">(</span><span class=\"n\">Interval</span><span class=\"p\">):</span>\n\n  <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">begin</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_begin</span> <span class=\"o\">=</span> <span class=\"n\">begin</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_end</span> <span class=\"o\">=</span> <span class=\"n\">end</span>\n    <span class=\"c1\"># anything else</span>\n\n  <span class=\"nd\">@property</span>\n  <span class=\"k\">def</span> <span class=\"nf\">begin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_begin</span>\n\n  <span class=\"nd\">@property</span>\n  <span class=\"k\">def</span> <span class=\"nf\">end</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_end</span>\n</pre>\n</li>\n</ul>\n</li>\n<li>create a collection of your intervals and store them in the interval tree:\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ddalg.itree</span> <span class=\"kn\">import</span> <span class=\"n\">IntervalTree</span>\n \n<span class=\"n\">itree</span> <span class=\"o\">=</span> <span class=\"n\">IntervalTree</span><span class=\"p\">([</span><span class=\"n\">YourInterval</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">YourInterval</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)])</span>\n<span class=\"c1\"># ... </span>\n</pre>\n</li>\n<li>query <code>itree</code>:\n<ul>\n<li>using 1-based <em>position</em>:\n<pre><span class=\"n\">itree</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<blockquote>\n<p>returns <code>(0,3)</code></p>\n</blockquote>\n</li>\n<li>using half-open <em>interval coordinates</em>:\n<pre><span class=\"n\">itree</span><span class=\"o\">.</span><span class=\"n\">get_overlaps</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> \n</pre>\n<blockquote>\n<p>returns <code>(0,3)</code>, effectively the same query as above</p>\n</blockquote>\n</li>\n<li>for intervals with minimal required coverage\n<pre><span class=\"n\">itree</span><span class=\"o\">.</span><span class=\"n\">fuzzy_query</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">coverage</span><span class=\"o\">=.</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n</pre>\n<blockquote>\n<p>return intervals with &gt;=.9 overlap with respect to query coordinates</p>\n</blockquote>\n</li>\n<li>for intervals with minimal jaccard index\n<pre><span class=\"n\">itree</span><span class=\"o\">.</span><span class=\"n\">jaccard_query</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">min_jaccard</span><span class=\"o\">=.</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n</pre>\n<blockquote>\n<p>return intervals having jaccard_index&gt;=.9 with respect to query coordinates</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6913807, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "82ecb3fb1a28448accf6e19e298a92d1", "sha256": "613ba6422f62eb3bca9ae656c39b044270839452c4b453f7cd7997f237cea924"}, "downloads": -1, "filename": "ddalg-0.0.1-py3.6.egg", "has_sig": true, "md5_digest": "82ecb3fb1a28448accf6e19e298a92d1", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 3663, "upload_time": "2020-03-27T00:45:10", "upload_time_iso_8601": "2020-03-27T00:45:10.987226Z", "url": "https://files.pythonhosted.org/packages/79/23/502b17d7db72dcc35d5cd6c4f8a5c439ee67ca200321164f307e11f9e4da/ddalg-0.0.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2dee477492bc85cf5400c49370425c82", "sha256": "90b640bf9321924da315e73d00cf8243af042e1ec3f21e027d91188d19ba025b"}, "downloads": -1, "filename": "ddalg-0.0.1-py3-none-any.whl", "has_sig": true, "md5_digest": "2dee477492bc85cf5400c49370425c82", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4675, "upload_time": "2020-03-27T00:45:07", "upload_time_iso_8601": "2020-03-27T00:45:07.871191Z", "url": "https://files.pythonhosted.org/packages/0b/9d/3dc21945cc4f8824ff3eedc4f02d9efbef52a3043691081ab918126724e3/ddalg-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd1f671d6cdb4150842244df661c6a40", "sha256": "cd7168dd3cea4546d64ac6f907cf26c4d7b2a26c5fe047ac8a6fca2ab995b270"}, "downloads": -1, "filename": "ddalg-0.0.1.tar.gz", "has_sig": true, "md5_digest": "dd1f671d6cdb4150842244df661c6a40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3085, "upload_time": "2020-03-27T00:45:12", "upload_time_iso_8601": "2020-03-27T00:45:12.756705Z", "url": "https://files.pythonhosted.org/packages/91/39/f2841b1429c4ba3b574d8892243b9c4ba8365c0b581bc7cfbe010091ad0b/ddalg-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "eb55b8e51c26baa3c25b0fa1672ac204", "sha256": "5ae85c8f3d2f29ec301ec9ce961bb4648c7bd27a2e6fe329710d891f1a787cec"}, "downloads": -1, "filename": "ddalg-0.0.2-py3.6.egg", "has_sig": true, "md5_digest": "eb55b8e51c26baa3c25b0fa1672ac204", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6", "size": 20763, "upload_time": "2020-03-27T20:00:17", "upload_time_iso_8601": "2020-03-27T20:00:17.397726Z", "url": "https://files.pythonhosted.org/packages/11/26/93277dac5fe0c329110baeea50b30344b16778a1a36bfe3dd8cd3216017d/ddalg-0.0.2-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f187e165c30efeaf4626bed150e3264", "sha256": "46103ca09c685375b3d04f72b415a9a81c3a165c2c69c640fd9fa0b3d7513eb1"}, "downloads": -1, "filename": "ddalg-0.0.2.tar.gz", "has_sig": true, "md5_digest": "5f187e165c30efeaf4626bed150e3264", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6972, "upload_time": "2020-03-27T20:00:19", "upload_time_iso_8601": "2020-03-27T20:00:19.318056Z", "url": "https://files.pythonhosted.org/packages/85/85/da71348180cd6510d2d892844d254d4483a8ea67fb15adec64cf486788cd/ddalg-0.0.2.tar.gz", "yanked": false}], "0.0.2.post1": [{"comment_text": "", "digests": {"md5": "9df18bad266619acf1e898619f883a14", "sha256": "eec8e164d5b10efd9523f5a9c12f6bd109722725aba63de7ded8ada5ea82ce1f"}, "downloads": -1, "filename": "ddalg-0.0.2.post1-py3.6.egg", "has_sig": true, "md5_digest": "9df18bad266619acf1e898619f883a14", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6", "size": 21394, "upload_time": "2020-03-27T21:39:29", "upload_time_iso_8601": "2020-03-27T21:39:29.631005Z", "url": "https://files.pythonhosted.org/packages/1e/c9/4daf46f77a9eacdafd231e0768dbe1db4149dd932f4ee4606086f9ea1cd7/ddalg-0.0.2.post1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5f14a47aa17bc32b64eb0aab74aad0f", "sha256": "08d66073dd61407d89ee91e3c07f26c07323775269acf69ea12f22274878dcd6"}, "downloads": -1, "filename": "ddalg-0.0.2.post1.tar.gz", "has_sig": true, "md5_digest": "b5f14a47aa17bc32b64eb0aab74aad0f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7243, "upload_time": "2020-03-27T21:39:31", "upload_time_iso_8601": "2020-03-27T21:39:31.578784Z", "url": "https://files.pythonhosted.org/packages/f9/9f/5d34c338f5207649b50458df04c5ef9081be15142327e90998704d12aab2/ddalg-0.0.2.post1.tar.gz", "yanked": false}], "0.0.2.post2": [{"comment_text": "", "digests": {"md5": "37837596cbefb70e9882d7a0a7dc2239", "sha256": "6de9a80b81dae2c6bac88b3b528a6801095077ad77a678385b934b9531864db0"}, "downloads": -1, "filename": "ddalg-0.0.2.post2-py3.6.egg", "has_sig": true, "md5_digest": "37837596cbefb70e9882d7a0a7dc2239", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6", "size": 22276, "upload_time": "2020-03-27T22:10:59", "upload_time_iso_8601": "2020-03-27T22:10:59.426432Z", "url": "https://files.pythonhosted.org/packages/92/1c/6d718be33a80f76c857aa49c561e3a26cc8ba9f061c981b39799a03359db/ddalg-0.0.2.post2-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7daf6284964c79fdbe0d1642a06e3302", "sha256": "486350139311115a7375c7b3e8a7f21533dfe56daaa776b4b3888908d315aa74"}, "downloads": -1, "filename": "ddalg-0.0.2.post2.tar.gz", "has_sig": true, "md5_digest": "7daf6284964c79fdbe0d1642a06e3302", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7588, "upload_time": "2020-03-27T22:11:01", "upload_time_iso_8601": "2020-03-27T22:11:01.321721Z", "url": "https://files.pythonhosted.org/packages/38/a9/bd8c147dd082cf7ebdd9f07fefa7be076cd5e072e3a768df4b3ca89f23c2/ddalg-0.0.2.post2.tar.gz", "yanked": false}], "0.0.2rc1": [{"comment_text": "", "digests": {"md5": "9d514374d397a17658b84f0e490e7fd7", "sha256": "714d60cb9d7714a927c5990e03b802e88f833b0e83edfbe4c44911d7def5b941"}, "downloads": -1, "filename": "ddalg-0.0.2rc1-py3.6.egg", "has_sig": true, "md5_digest": "9d514374d397a17658b84f0e490e7fd7", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6", "size": 9539, "upload_time": "2020-03-27T01:49:05", "upload_time_iso_8601": "2020-03-27T01:49:05.986624Z", "url": "https://files.pythonhosted.org/packages/54/54/2bdec1c15d2691544227f46cbc7388e0ca1bbb46fc3b0ec62c4d2d06bac7/ddalg-0.0.2rc1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a0d10d29cb636745d391ae8e891c5cf", "sha256": "6f4372b5b16652f571f8b1b7d2109d89bff10ae065fd01b9b4b66eb27d4f792d"}, "downloads": -1, "filename": "ddalg-0.0.2rc1.tar.gz", "has_sig": true, "md5_digest": "7a0d10d29cb636745d391ae8e891c5cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3848, "upload_time": "2020-03-27T01:49:07", "upload_time_iso_8601": "2020-03-27T01:49:07.754783Z", "url": "https://files.pythonhosted.org/packages/8b/0f/f3c4789f1063f0f7247cc9272888884eb14cb140fad81c85921f856157c3/ddalg-0.0.2rc1.tar.gz", "yanked": false}], "0.0.2rc2": [{"comment_text": "", "digests": {"md5": "1e08172b8b749559d4aa3a18f1b3faac", "sha256": "c8e376e77481e2fd67311e4c6318a774546898b0275ffdfc1fc4efae86b6d3eb"}, "downloads": -1, "filename": "ddalg-0.0.2rc2-py3.6.egg", "has_sig": true, "md5_digest": "1e08172b8b749559d4aa3a18f1b3faac", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6", "size": 20095, "upload_time": "2020-03-27T19:00:14", "upload_time_iso_8601": "2020-03-27T19:00:14.901404Z", "url": "https://files.pythonhosted.org/packages/e0/5f/9b44b5f763a278fdf1bb9d36ebfdcf3ee1863246b811df04a8dc1c73a1da/ddalg-0.0.2rc2-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0188b7f238708e3eb39c1bdb5721d40b", "sha256": "49488c6bdae7ad9c86fdc4214a11f67903664c38fe863050723fe10157d357df"}, "downloads": -1, "filename": "ddalg-0.0.2rc2.tar.gz", "has_sig": true, "md5_digest": "0188b7f238708e3eb39c1bdb5721d40b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6549, "upload_time": "2020-03-27T19:00:16", "upload_time_iso_8601": "2020-03-27T19:00:16.526573Z", "url": "https://files.pythonhosted.org/packages/24/38/7bdb00d3947f1bc1abf7920cf777b0fc055e1cedf050bce4357e8e1c72dd/ddalg-0.0.2rc2.tar.gz", "yanked": false}], "0.0.2rc3": [{"comment_text": "", "digests": {"md5": "42d928aec7a7523e9704f6b5b84f68f8", "sha256": "2348a7e307d4cd12a3d6a621ecde84ed4cfea0008effc096af6b9fb8ebb11cbc"}, "downloads": -1, "filename": "ddalg-0.0.2rc3-py3.6.egg", "has_sig": true, "md5_digest": "42d928aec7a7523e9704f6b5b84f68f8", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6", "size": 20773, "upload_time": "2020-03-27T19:50:26", "upload_time_iso_8601": "2020-03-27T19:50:26.486737Z", "url": "https://files.pythonhosted.org/packages/02/37/22844b19de4305c34465f7c0c0815b88aec1b13a4b34068aae030366776a/ddalg-0.0.2rc3-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ece07d1326274466215ddaaa3cc73aa1", "sha256": "b64dd818d3a9124d8aa78bbf6a6dffdfad95d8886e3c2af738ecddd23cd0d6de"}, "downloads": -1, "filename": "ddalg-0.0.2rc3.tar.gz", "has_sig": true, "md5_digest": "ece07d1326274466215ddaaa3cc73aa1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6973, "upload_time": "2020-03-27T19:50:28", "upload_time_iso_8601": "2020-03-27T19:50:28.360649Z", "url": "https://files.pythonhosted.org/packages/f6/fd/1160480fd04ca6fef39412d0f0d38f3be15aa0cbd75ade5ff9fd3b09da9b/ddalg-0.0.2rc3.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "81f98f3fb204be3c1d70a2f21ebbd569", "sha256": "363610c30129cc7f3805bf172ec6518956fa3a861ce7769c7ab4cf729dd7293b"}, "downloads": -1, "filename": "ddalg-0.0.3-py3.6.egg", "has_sig": true, "md5_digest": "81f98f3fb204be3c1d70a2f21ebbd569", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6", "size": 27004, "upload_time": "2020-03-30T15:18:28", "upload_time_iso_8601": "2020-03-30T15:18:28.023189Z", "url": "https://files.pythonhosted.org/packages/00/5a/412597fc09a8b40e64cbe1ecc1a1d6a733aff1ea293d33cf4a0fc9dc2cab/ddalg-0.0.3-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "62ac549e6a43dda61a0636498fe74af4", "sha256": "16a942d4f19c86e71de4ba16843f81ccf4a1763db21c68b8651d84386d204e2b"}, "downloads": -1, "filename": "ddalg-0.0.3.tar.gz", "has_sig": true, "md5_digest": "62ac549e6a43dda61a0636498fe74af4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8637, "upload_time": "2020-03-30T15:18:30", "upload_time_iso_8601": "2020-03-30T15:18:30.467846Z", "url": "https://files.pythonhosted.org/packages/ee/a5/02718d1074edf29f4cbb671c4b6daa40e682b27fc6f3f2fb5658d1775c93/ddalg-0.0.3.tar.gz", "yanked": false}], "0.0.3.post0": [{"comment_text": "", "digests": {"md5": "cba08ae69b280f69454ed290b07a0cbc", "sha256": "f548a3600ef4a4924cdf59a27b0049639881af618f9b9349df5ecee1a3d3389a"}, "downloads": -1, "filename": "ddalg-0.0.3.post0-py3.6.egg", "has_sig": true, "md5_digest": "cba08ae69b280f69454ed290b07a0cbc", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6", "size": 27140, "upload_time": "2020-03-30T15:29:27", "upload_time_iso_8601": "2020-03-30T15:29:27.527103Z", "url": "https://files.pythonhosted.org/packages/a2/10/41071dc7a9e8c93cfaf955cab698e804ad43aafae1a938f3968d795a3e9c/ddalg-0.0.3.post0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e3b06c84b4b6b80ecb4a3bb0581bfc8", "sha256": "845b57d46225d583e830a8dcf43975047a2fc8eb383dd30950623d3c4cd9d4a3"}, "downloads": -1, "filename": "ddalg-0.0.3.post0.tar.gz", "has_sig": true, "md5_digest": "7e3b06c84b4b6b80ecb4a3bb0581bfc8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8640, "upload_time": "2020-03-30T15:29:29", "upload_time_iso_8601": "2020-03-30T15:29:29.374847Z", "url": "https://files.pythonhosted.org/packages/c7/a3/eaea90e782baedb5be91839f97308bb2ea41591ca0d38d34537f92fce284/ddalg-0.0.3.post0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cba08ae69b280f69454ed290b07a0cbc", "sha256": "f548a3600ef4a4924cdf59a27b0049639881af618f9b9349df5ecee1a3d3389a"}, "downloads": -1, "filename": "ddalg-0.0.3.post0-py3.6.egg", "has_sig": true, "md5_digest": "cba08ae69b280f69454ed290b07a0cbc", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6", "size": 27140, "upload_time": "2020-03-30T15:29:27", "upload_time_iso_8601": "2020-03-30T15:29:27.527103Z", "url": "https://files.pythonhosted.org/packages/a2/10/41071dc7a9e8c93cfaf955cab698e804ad43aafae1a938f3968d795a3e9c/ddalg-0.0.3.post0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e3b06c84b4b6b80ecb4a3bb0581bfc8", "sha256": "845b57d46225d583e830a8dcf43975047a2fc8eb383dd30950623d3c4cd9d4a3"}, "downloads": -1, "filename": "ddalg-0.0.3.post0.tar.gz", "has_sig": true, "md5_digest": "7e3b06c84b4b6b80ecb4a3bb0581bfc8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8640, "upload_time": "2020-03-30T15:29:29", "upload_time_iso_8601": "2020-03-30T15:29:29.374847Z", "url": "https://files.pythonhosted.org/packages/c7/a3/eaea90e782baedb5be91839f97308bb2ea41591ca0d38d34537f92fce284/ddalg-0.0.3.post0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:45 2020"}