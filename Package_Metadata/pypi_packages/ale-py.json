{"info": {"author": "Arcade Learning Environment Authors", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "[![Build Status](https://travis-ci.org/mgbellemare/Arcade-Learning-Environment.svg?branch=master)](https://travis-ci.org/mgbellemare/Arcade-Learning-Environment)\n\n<img align=\"right\" src=\"doc/manual/figures/ale.gif\" width=50>\n\n# The Arcade Learning Environment\n\n## Overview\n\nThe Arcade Learning Environment (ALE) is a simple object-oriented framework that\nallows researchers and hobbyists to develop AI agents for Atari 2600 games. It\nis built on top of the Atari 2600 emulator\n[Stella](https://stella-emu.github.io/) and separates the details of emulation\nfrom agent design. This [video](https://www.youtube.com/watch?v=nzUiEkasXZI)\ndepicts over 50 games currently supported in the ALE.\n\nFor an overview of our goals for the ALE read [The Arcade Learning Environment:\nAn Evaluation Platform for General\nAgents](http://www.jair.org/papers/paper3912.html). If you use ALE in your\nresearch, we ask that you please cite this paper in reference to the environment\n(BibTeX entry at the end of this document). Also, if you have any questions or\ncomments about the ALE, please contact us through our [mailing\nlist](https://groups.google.com/forum/#!forum/arcade-learning-environment).\n\n\nFeedback and suggestions are welcome and may be addressed to any active member\nof the ALE team.\n\n## Features\n\n- Object-oriented framework with support to add agents and games.\n- Emulation core uncoupled from rendering and sound generation modules for fast\n  emulation with minimal library dependencies.\n- Automatic extraction of game score and end-of-game signal for more than 50\n  Atari 2600 games.\n- Multi-platform code (compiled and tested under OS X and several Linux\n  distributions, with Cygwin support).\n- Communication between agents and emulation core can be accomplished through\n  pipes, allowing for cross-language development (sample Java code included).\n- Python development is supported through ctypes.\n- Agents programmed in C++ have access to all features in the ALE.\n- Visualization tools.\n\n## Quick start\n\nInstall main dependences:\n\n```\nsudo apt-get install libsdl1.2-dev libsdl-gfx1.2-dev libsdl-image1.2-dev cmake\n```\n\nCompilation:\n\n```\n$ mkdir build && cd build\n$ cmake -DUSE_SDL=ON -DUSE_RLGLUE=OFF -DBUILD_EXAMPLES=ON ..\n$ make -j 4\n```\n\nTo install the Python module:\n\n```\n$ pip install .\n```\n\nor\n\n```\n$ pip install --user .\n```\n\nGetting the ALE to work on Visual Studio requires a bit of extra wrangling. You\nmay wish to use IslandMan93's [Visual Studio port of the\nALE.](https://github.com/Islandman93/Arcade-Learning-Environment)\n\nFor more details and installation instructions, see the [manual](doc/manual/manual.pdf).\nTo ask questions and discuss, please join the\n[ALE-users group](https://groups.google.com/forum/#!forum/arcade-learning-environment).\n\n## ALE releases\n\nReleases before v.0.5 are available for download in our previous\n[website](http://www.arcadelearningenvironment.org/). For the latest releases,\nplease check our [releases\npage](https://github.com/mgbellemare/Arcade-Learning-Environment/releases).\n\n## List of command-line parameters\n\nExecute `./ale -help` for more details; alternatively, see documentation\navailable at http://www.arcadelearningenvironment.org.\n\n```\n-random_seed [n] -- sets the random seed; defaults to the current time\n\n-game_controller [fifo|fifo_named] -- specifies how agents interact\n  with the ALE; see Java agent documentation for details\n\n-config [file] -- specifies a configuration file, from which additional \n  parameters are read\n\n-run_length_encoding [false|true] -- determine whether run-length encoding is\n  used to send data over pipes; irrelevant when an internal agent is \n  being used\n\n-max_num_frames_per_episode [n] -- sets the maximum number of frames per\n  episode. Once this number is reached, a new episode will start. Currently\n  implemented for all agents when using pipes (fifo/fifo_named) \n\n-max_num_frames [n] -- sets the maximum number of frames (independent of how \n  many episodes are played)\n```\n\n## Citing The Arcade Learning Environment\n\nIf you use the ALE in your research, we ask that you please cite the following.\n\n*M. G. Bellemare, Y. Naddaf, J. Veness and M. Bowling. The Arcade Learning Environment: An Evaluation Platform for General Agents, Journal of Artificial Intelligence Research, Volume 47, pages 253-279, 2013.*\n\nIn BibTeX format:\n\n```\n@Article{bellemare13arcade,\n  author = {{Bellemare}, M.~G. and {Naddaf}, Y. and {Veness}, J. and {Bowling}, M.},\n  title = {The Arcade Learning Environment: An Evaluation Platform for General Agents},\n  journal = {Journal of Artificial Intelligence Research},\n  year = \"2013\",\n  month = \"jun\",\n  volume = \"47\",\n  pages = \"253--279\",\n}\n```\n\nIf you use the ALE with sticky actions (flag `repeat_action_probability`), or if\nyou use the different game flavours (mode and difficulty switches), we ask you\nthat you also cite the following:\n\n*M. C. Machado, M. G. Bellemare, E. Talvitie, J. Veness, M. J. Hausknecht, M. Bowling. Revisiting the Arcade Learning Environment: Evaluation Protocols and Open Problems for General Agents,  Journal of Artificial Intelligence Research, Volume 61, pages 523-562, 2018.*\n\nIn BibTex format:\n\n```\n@Article{machado18arcade,\n  author = {Marlos C. Machado and Marc G. Bellemare and Erik Talvitie and Joel Veness and Matthew J. Hausknecht and Michael Bowling},\n  title = {Revisiting the Arcade Learning Environment: Evaluation Protocols and Open Problems for General Agents},\n  journal = {Journal of Artificial Intelligence Research},\n  volume = {61},\n  pages = {523--562},\n  year = {2018}\n}\n```\n\n## Contributing, code style\n\nIf you would like to make changes to the codebase, please adhere to the\nfollowing code style conventions.\n\nALE contains two sets of source files: Files .hxx and .cxx are part of the\nStella emulator code. Files .hpp and .cpp are original ALE code. The Stella\nfiles are not subject to our conventions, please retain their local style.\n\nThe ALE code style conventions are roughly summarised as \"clang-format with the\nfollowing settings: ReflowComments: false, PointerAlignment: Left,\nKeepEmptyLinesAtTheStartOfBlocks: false, IndentCaseLabels: true,\nAccessModifierOffset: -1\". That is:\n\n- Indent by two spaces; Egyptian braces, no extraneous newlines at the margins\n  of blocks and between top-level declarations.\n- Pointer/ref qualifiers go on the left (e.g. `void* p`).\n- Class member access modifiers are indented by _one_ space.\n- Inline comments should be separated from code by two spaces (though this is\n  not currently applied consistently).\n- There is no strict line length limit, but keep it reasonable.\n- Namespace close braces and `#endif`s should have comments.\n\nThe overall format should look reasonably \"compact\" without being crowded. Use\nblank lines generously _within_ blocks and long comments to create visual cues\nfor the segmentation of ideas.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mgbellemare/Arcade-Learning-Environment", "keywords": "reinforcement-learning,arcade-learning-environment,atari", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "ale-py", "package_url": "https://pypi.org/project/ale-py/", "platform": "", "project_url": "https://pypi.org/project/ale-py/", "project_urls": {"Homepage": "https://github.com/mgbellemare/Arcade-Learning-Environment"}, "release_url": "https://pypi.org/project/ale-py/0.6.0.dev20200207/", "requires_dist": ["numpy"], "requires_python": "", "summary": "Arcade Learning Environment Python Interface", "version": "0.6.0.dev20200207", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/mgbellemare/Arcade-Learning-Environment\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0cc598526fb6b0c39321179526ae22de1b16b849/68747470733a2f2f7472617669732d63692e6f72672f6d6762656c6c656d6172652f4172636164652d4c6561726e696e672d456e7669726f6e6d656e742e7376673f6272616e63683d6d6173746572\"></a></p>\n<img align=\"right\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca1013611c0fb61bfd793f9edc1ff9ffb94c7cca/646f632f6d616e75616c2f666967757265732f616c652e676966\" width=\"50\">\n<h1>The Arcade Learning Environment</h1>\n<h2>Overview</h2>\n<p>The Arcade Learning Environment (ALE) is a simple object-oriented framework that\nallows researchers and hobbyists to develop AI agents for Atari 2600 games. It\nis built on top of the Atari 2600 emulator\n<a href=\"https://stella-emu.github.io/\" rel=\"nofollow\">Stella</a> and separates the details of emulation\nfrom agent design. This <a href=\"https://www.youtube.com/watch?v=nzUiEkasXZI\" rel=\"nofollow\">video</a>\ndepicts over 50 games currently supported in the ALE.</p>\n<p>For an overview of our goals for the ALE read <a href=\"http://www.jair.org/papers/paper3912.html\" rel=\"nofollow\">The Arcade Learning Environment:\nAn Evaluation Platform for General\nAgents</a>. If you use ALE in your\nresearch, we ask that you please cite this paper in reference to the environment\n(BibTeX entry at the end of this document). Also, if you have any questions or\ncomments about the ALE, please contact us through our <a href=\"https://groups.google.com/forum/#!forum/arcade-learning-environment\" rel=\"nofollow\">mailing\nlist</a>.</p>\n<p>Feedback and suggestions are welcome and may be addressed to any active member\nof the ALE team.</p>\n<h2>Features</h2>\n<ul>\n<li>Object-oriented framework with support to add agents and games.</li>\n<li>Emulation core uncoupled from rendering and sound generation modules for fast\nemulation with minimal library dependencies.</li>\n<li>Automatic extraction of game score and end-of-game signal for more than 50\nAtari 2600 games.</li>\n<li>Multi-platform code (compiled and tested under OS X and several Linux\ndistributions, with Cygwin support).</li>\n<li>Communication between agents and emulation core can be accomplished through\npipes, allowing for cross-language development (sample Java code included).</li>\n<li>Python development is supported through ctypes.</li>\n<li>Agents programmed in C++ have access to all features in the ALE.</li>\n<li>Visualization tools.</li>\n</ul>\n<h2>Quick start</h2>\n<p>Install main dependences:</p>\n<pre><code>sudo apt-get install libsdl1.2-dev libsdl-gfx1.2-dev libsdl-image1.2-dev cmake\n</code></pre>\n<p>Compilation:</p>\n<pre><code>$ mkdir build &amp;&amp; cd build\n$ cmake -DUSE_SDL=ON -DUSE_RLGLUE=OFF -DBUILD_EXAMPLES=ON ..\n$ make -j 4\n</code></pre>\n<p>To install the Python module:</p>\n<pre><code>$ pip install .\n</code></pre>\n<p>or</p>\n<pre><code>$ pip install --user .\n</code></pre>\n<p>Getting the ALE to work on Visual Studio requires a bit of extra wrangling. You\nmay wish to use IslandMan93's <a href=\"https://github.com/Islandman93/Arcade-Learning-Environment\" rel=\"nofollow\">Visual Studio port of the\nALE.</a></p>\n<p>For more details and installation instructions, see the <a href=\"doc/manual/manual.pdf\" rel=\"nofollow\">manual</a>.\nTo ask questions and discuss, please join the\n<a href=\"https://groups.google.com/forum/#!forum/arcade-learning-environment\" rel=\"nofollow\">ALE-users group</a>.</p>\n<h2>ALE releases</h2>\n<p>Releases before v.0.5 are available for download in our previous\n<a href=\"http://www.arcadelearningenvironment.org/\" rel=\"nofollow\">website</a>. For the latest releases,\nplease check our <a href=\"https://github.com/mgbellemare/Arcade-Learning-Environment/releases\" rel=\"nofollow\">releases\npage</a>.</p>\n<h2>List of command-line parameters</h2>\n<p>Execute <code>./ale -help</code> for more details; alternatively, see documentation\navailable at <a href=\"http://www.arcadelearningenvironment.org\" rel=\"nofollow\">http://www.arcadelearningenvironment.org</a>.</p>\n<pre><code>-random_seed [n] -- sets the random seed; defaults to the current time\n\n-game_controller [fifo|fifo_named] -- specifies how agents interact\n  with the ALE; see Java agent documentation for details\n\n-config [file] -- specifies a configuration file, from which additional \n  parameters are read\n\n-run_length_encoding [false|true] -- determine whether run-length encoding is\n  used to send data over pipes; irrelevant when an internal agent is \n  being used\n\n-max_num_frames_per_episode [n] -- sets the maximum number of frames per\n  episode. Once this number is reached, a new episode will start. Currently\n  implemented for all agents when using pipes (fifo/fifo_named) \n\n-max_num_frames [n] -- sets the maximum number of frames (independent of how \n  many episodes are played)\n</code></pre>\n<h2>Citing The Arcade Learning Environment</h2>\n<p>If you use the ALE in your research, we ask that you please cite the following.</p>\n<p><em>M. G. Bellemare, Y. Naddaf, J. Veness and M. Bowling. The Arcade Learning Environment: An Evaluation Platform for General Agents, Journal of Artificial Intelligence Research, Volume 47, pages 253-279, 2013.</em></p>\n<p>In BibTeX format:</p>\n<pre><code>@Article{bellemare13arcade,\n  author = {{Bellemare}, M.~G. and {Naddaf}, Y. and {Veness}, J. and {Bowling}, M.},\n  title = {The Arcade Learning Environment: An Evaluation Platform for General Agents},\n  journal = {Journal of Artificial Intelligence Research},\n  year = \"2013\",\n  month = \"jun\",\n  volume = \"47\",\n  pages = \"253--279\",\n}\n</code></pre>\n<p>If you use the ALE with sticky actions (flag <code>repeat_action_probability</code>), or if\nyou use the different game flavours (mode and difficulty switches), we ask you\nthat you also cite the following:</p>\n<p><em>M. C. Machado, M. G. Bellemare, E. Talvitie, J. Veness, M. J. Hausknecht, M. Bowling. Revisiting the Arcade Learning Environment: Evaluation Protocols and Open Problems for General Agents,  Journal of Artificial Intelligence Research, Volume 61, pages 523-562, 2018.</em></p>\n<p>In BibTex format:</p>\n<pre><code>@Article{machado18arcade,\n  author = {Marlos C. Machado and Marc G. Bellemare and Erik Talvitie and Joel Veness and Matthew J. Hausknecht and Michael Bowling},\n  title = {Revisiting the Arcade Learning Environment: Evaluation Protocols and Open Problems for General Agents},\n  journal = {Journal of Artificial Intelligence Research},\n  volume = {61},\n  pages = {523--562},\n  year = {2018}\n}\n</code></pre>\n<h2>Contributing, code style</h2>\n<p>If you would like to make changes to the codebase, please adhere to the\nfollowing code style conventions.</p>\n<p>ALE contains two sets of source files: Files .hxx and .cxx are part of the\nStella emulator code. Files .hpp and .cpp are original ALE code. The Stella\nfiles are not subject to our conventions, please retain their local style.</p>\n<p>The ALE code style conventions are roughly summarised as \"clang-format with the\nfollowing settings: ReflowComments: false, PointerAlignment: Left,\nKeepEmptyLinesAtTheStartOfBlocks: false, IndentCaseLabels: true,\nAccessModifierOffset: -1\". That is:</p>\n<ul>\n<li>Indent by two spaces; Egyptian braces, no extraneous newlines at the margins\nof blocks and between top-level declarations.</li>\n<li>Pointer/ref qualifiers go on the left (e.g. <code>void* p</code>).</li>\n<li>Class member access modifiers are indented by <em>one</em> space.</li>\n<li>Inline comments should be separated from code by two spaces (though this is\nnot currently applied consistently).</li>\n<li>There is no strict line length limit, but keep it reasonable.</li>\n<li>Namespace close braces and <code>#endif</code>s should have comments.</li>\n</ul>\n<p>The overall format should look reasonably \"compact\" without being crowded. Use\nblank lines generously <em>within</em> blocks and long comments to create visual cues\nfor the segmentation of ideas.</p>\n\n          </div>"}, "last_serial": 6591503, "releases": {"0.6.0.dev20200207": [{"comment_text": "", "digests": {"md5": "2d7be9be0517a823f202846f5a3a268c", "sha256": "d9fbe0ef9f9bc4a8b64b4743dddc3c8293996f3bf9e4ded3c14bfdcbe7acc107"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp35-cp35m-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "2d7be9be0517a823f202846f5a3a268c", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 403703, "upload_time": "2020-02-07T22:34:24", "upload_time_iso_8601": "2020-02-07T22:34:24.115571Z", "url": "https://files.pythonhosted.org/packages/e2/f7/5d8933da11fc47a90801b03299a4141094e22c90db9d0fc89057fcc98163/ale_py-0.6.0.dev20200207-cp35-cp35m-macosx_10_9_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14ceb42275085a9b59cf03391086c449", "sha256": "3024c19ecceef18121e94544a26b3495c6a94e4d84b04c5115a4bfef5f6474a6"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp35-cp35m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "14ceb42275085a9b59cf03391086c449", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 709670, "upload_time": "2020-02-07T22:34:26", "upload_time_iso_8601": "2020-02-07T22:34:26.197613Z", "url": "https://files.pythonhosted.org/packages/67/af/fca118bf9ff3f44cdc39c316b8d3338a399eda4109230aa9433bb2844010/ale_py-0.6.0.dev20200207-cp35-cp35m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2a01de8bb9b46896c8be0ce756a6be4", "sha256": "0946398df60d99fe65d9f5e210735b621bc8c8cad313ce072695f55739908cdc"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "f2a01de8bb9b46896c8be0ce756a6be4", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 381579, "upload_time": "2020-02-07T22:34:27", "upload_time_iso_8601": "2020-02-07T22:34:27.411583Z", "url": "https://files.pythonhosted.org/packages/29/81/3f958c43dff83d2003af3a1c66dcd2fdf89634bf20be4bcfa56b09a5e6f5/ale_py-0.6.0.dev20200207-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73f3becd7a437db38c93b9801c26058e", "sha256": "df81297cd3e07770c4945d685dcb55d2c05b9bae808a47c56c52e253a21df5c8"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp36-cp36m-macosx_10_15_x86_64.whl", "has_sig": false, "md5_digest": "73f3becd7a437db38c93b9801c26058e", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 403253, "upload_time": "2020-02-07T22:34:28", "upload_time_iso_8601": "2020-02-07T22:34:28.813834Z", "url": "https://files.pythonhosted.org/packages/3d/8b/c21a518d7ac3fd1bb0fcb7d9a655578fc2dc81a10c7bec52d722ba1d0b0f/ale_py-0.6.0.dev20200207-cp36-cp36m-macosx_10_15_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "113d0d8360a617114fdac7bb52b39cef", "sha256": "bd34a4af59c94fc8d667dbeec915d48fb9cb41264105782f70ec581242c59b2b"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "113d0d8360a617114fdac7bb52b39cef", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 709670, "upload_time": "2020-02-07T22:34:29", "upload_time_iso_8601": "2020-02-07T22:34:29.993169Z", "url": "https://files.pythonhosted.org/packages/69/1d/b47f39e5dffc994bc6d3ab5688aed91a990b7f039046f0cdf666985cb189/ale_py-0.6.0.dev20200207-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "02d99a427dbe4316d01ec42cb955c1ca", "sha256": "748fb339b28f6f57890cbb9acfe964c810b23802910310cb5796bd96bdf361d4"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "02d99a427dbe4316d01ec42cb955c1ca", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 381580, "upload_time": "2020-02-07T22:34:31", "upload_time_iso_8601": "2020-02-07T22:34:31.248623Z", "url": "https://files.pythonhosted.org/packages/d4/40/efac7621b114e3fc9dc329e1f78b484d576c8203a3357c42e524feb33ebc/ale_py-0.6.0.dev20200207-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9ff9535aa5a26b0d6e071dbc5136692", "sha256": "28a915b16f13fdeefc4e870b9ffb0e251b3ad550dfb24ad39c0ac3af67419d33"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp37-cp37m-macosx_10_15_x86_64.whl", "has_sig": false, "md5_digest": "e9ff9535aa5a26b0d6e071dbc5136692", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 403254, "upload_time": "2020-02-07T22:34:32", "upload_time_iso_8601": "2020-02-07T22:34:32.626053Z", "url": "https://files.pythonhosted.org/packages/3d/5d/8b8e5142963f6eb20fc93cee82f41fc06696ea7a756b9334656543c2787d/ale_py-0.6.0.dev20200207-cp37-cp37m-macosx_10_15_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "386ce0e9db6abd9f6ac0a311da6028f7", "sha256": "cb0d5bee20bb9a169af5dfb7380a618db024168da03824a91555c9c2e37d93b4"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "386ce0e9db6abd9f6ac0a311da6028f7", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 709671, "upload_time": "2020-02-07T22:34:34", "upload_time_iso_8601": "2020-02-07T22:34:34.098783Z", "url": "https://files.pythonhosted.org/packages/65/22/762c71ae6aab65d8a662d89b1bf681a5baaec52e233c452f57d763e4efec/ale_py-0.6.0.dev20200207-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cccf1e288fa7e512fa40f5101a909f8", "sha256": "787099c96eee0f44ca83762fd83514d9817c253e39df0c0bcbca87c5ff2d4d08"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "5cccf1e288fa7e512fa40f5101a909f8", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 381582, "upload_time": "2020-02-07T22:34:35", "upload_time_iso_8601": "2020-02-07T22:34:35.268128Z", "url": "https://files.pythonhosted.org/packages/28/94/0608a975778fd21ad41d7c20b296456155a85192d7959df030dae502fe05/ale_py-0.6.0.dev20200207-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4dcad1661a01806896b8b7fa006b7dee", "sha256": "ef8e15957f6b374d0a36b2e435ba9b668db5d95a8a54cb8666f72505dec973d1"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp38-cp38-macosx_10_15_x86_64.whl", "has_sig": false, "md5_digest": "4dcad1661a01806896b8b7fa006b7dee", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 403249, "upload_time": "2020-02-07T22:34:36", "upload_time_iso_8601": "2020-02-07T22:34:36.762272Z", "url": "https://files.pythonhosted.org/packages/c7/c9/a1d2798dfe3486bc448ffce5cc15da9af51d4966e2c19dc3553063c16bfe/ale_py-0.6.0.dev20200207-cp38-cp38-macosx_10_15_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b2fa7c005a8af591018611322f32925", "sha256": "2113f2a7a2b6ff4d5c62174d70e8881cfac7c6939c9dc4eaf8a20cd584ec9578"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "2b2fa7c005a8af591018611322f32925", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 709670, "upload_time": "2020-02-07T22:34:37", "upload_time_iso_8601": "2020-02-07T22:34:37.981176Z", "url": "https://files.pythonhosted.org/packages/aa/59/198b3b3118884d03966b4d2153a1b830ae3b3acc5d658b32519f8b837d26/ale_py-0.6.0.dev20200207-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b4d3613181115d07a6e1bb74600c9a9", "sha256": "4a34e8c9a25b50a60599c9a126ca93b33b725bc518fa329b815df59e4269c800"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "8b4d3613181115d07a6e1bb74600c9a9", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 381578, "upload_time": "2020-02-07T22:34:39", "upload_time_iso_8601": "2020-02-07T22:34:39.060154Z", "url": "https://files.pythonhosted.org/packages/8e/1c/d8060ca730f1dcdf4606aba0878772508c7866d5b89e4c9321ec31cfd2ae/ale_py-0.6.0.dev20200207-cp38-cp38-win_amd64.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2d7be9be0517a823f202846f5a3a268c", "sha256": "d9fbe0ef9f9bc4a8b64b4743dddc3c8293996f3bf9e4ded3c14bfdcbe7acc107"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp35-cp35m-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "2d7be9be0517a823f202846f5a3a268c", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 403703, "upload_time": "2020-02-07T22:34:24", "upload_time_iso_8601": "2020-02-07T22:34:24.115571Z", "url": "https://files.pythonhosted.org/packages/e2/f7/5d8933da11fc47a90801b03299a4141094e22c90db9d0fc89057fcc98163/ale_py-0.6.0.dev20200207-cp35-cp35m-macosx_10_9_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14ceb42275085a9b59cf03391086c449", "sha256": "3024c19ecceef18121e94544a26b3495c6a94e4d84b04c5115a4bfef5f6474a6"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp35-cp35m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "14ceb42275085a9b59cf03391086c449", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 709670, "upload_time": "2020-02-07T22:34:26", "upload_time_iso_8601": "2020-02-07T22:34:26.197613Z", "url": "https://files.pythonhosted.org/packages/67/af/fca118bf9ff3f44cdc39c316b8d3338a399eda4109230aa9433bb2844010/ale_py-0.6.0.dev20200207-cp35-cp35m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2a01de8bb9b46896c8be0ce756a6be4", "sha256": "0946398df60d99fe65d9f5e210735b621bc8c8cad313ce072695f55739908cdc"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "f2a01de8bb9b46896c8be0ce756a6be4", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 381579, "upload_time": "2020-02-07T22:34:27", "upload_time_iso_8601": "2020-02-07T22:34:27.411583Z", "url": "https://files.pythonhosted.org/packages/29/81/3f958c43dff83d2003af3a1c66dcd2fdf89634bf20be4bcfa56b09a5e6f5/ale_py-0.6.0.dev20200207-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73f3becd7a437db38c93b9801c26058e", "sha256": "df81297cd3e07770c4945d685dcb55d2c05b9bae808a47c56c52e253a21df5c8"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp36-cp36m-macosx_10_15_x86_64.whl", "has_sig": false, "md5_digest": "73f3becd7a437db38c93b9801c26058e", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 403253, "upload_time": "2020-02-07T22:34:28", "upload_time_iso_8601": "2020-02-07T22:34:28.813834Z", "url": "https://files.pythonhosted.org/packages/3d/8b/c21a518d7ac3fd1bb0fcb7d9a655578fc2dc81a10c7bec52d722ba1d0b0f/ale_py-0.6.0.dev20200207-cp36-cp36m-macosx_10_15_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "113d0d8360a617114fdac7bb52b39cef", "sha256": "bd34a4af59c94fc8d667dbeec915d48fb9cb41264105782f70ec581242c59b2b"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "113d0d8360a617114fdac7bb52b39cef", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 709670, "upload_time": "2020-02-07T22:34:29", "upload_time_iso_8601": "2020-02-07T22:34:29.993169Z", "url": "https://files.pythonhosted.org/packages/69/1d/b47f39e5dffc994bc6d3ab5688aed91a990b7f039046f0cdf666985cb189/ale_py-0.6.0.dev20200207-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "02d99a427dbe4316d01ec42cb955c1ca", "sha256": "748fb339b28f6f57890cbb9acfe964c810b23802910310cb5796bd96bdf361d4"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "02d99a427dbe4316d01ec42cb955c1ca", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 381580, "upload_time": "2020-02-07T22:34:31", "upload_time_iso_8601": "2020-02-07T22:34:31.248623Z", "url": "https://files.pythonhosted.org/packages/d4/40/efac7621b114e3fc9dc329e1f78b484d576c8203a3357c42e524feb33ebc/ale_py-0.6.0.dev20200207-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9ff9535aa5a26b0d6e071dbc5136692", "sha256": "28a915b16f13fdeefc4e870b9ffb0e251b3ad550dfb24ad39c0ac3af67419d33"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp37-cp37m-macosx_10_15_x86_64.whl", "has_sig": false, "md5_digest": "e9ff9535aa5a26b0d6e071dbc5136692", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 403254, "upload_time": "2020-02-07T22:34:32", "upload_time_iso_8601": "2020-02-07T22:34:32.626053Z", "url": "https://files.pythonhosted.org/packages/3d/5d/8b8e5142963f6eb20fc93cee82f41fc06696ea7a756b9334656543c2787d/ale_py-0.6.0.dev20200207-cp37-cp37m-macosx_10_15_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "386ce0e9db6abd9f6ac0a311da6028f7", "sha256": "cb0d5bee20bb9a169af5dfb7380a618db024168da03824a91555c9c2e37d93b4"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "386ce0e9db6abd9f6ac0a311da6028f7", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 709671, "upload_time": "2020-02-07T22:34:34", "upload_time_iso_8601": "2020-02-07T22:34:34.098783Z", "url": "https://files.pythonhosted.org/packages/65/22/762c71ae6aab65d8a662d89b1bf681a5baaec52e233c452f57d763e4efec/ale_py-0.6.0.dev20200207-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cccf1e288fa7e512fa40f5101a909f8", "sha256": "787099c96eee0f44ca83762fd83514d9817c253e39df0c0bcbca87c5ff2d4d08"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "5cccf1e288fa7e512fa40f5101a909f8", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 381582, "upload_time": "2020-02-07T22:34:35", "upload_time_iso_8601": "2020-02-07T22:34:35.268128Z", "url": "https://files.pythonhosted.org/packages/28/94/0608a975778fd21ad41d7c20b296456155a85192d7959df030dae502fe05/ale_py-0.6.0.dev20200207-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4dcad1661a01806896b8b7fa006b7dee", "sha256": "ef8e15957f6b374d0a36b2e435ba9b668db5d95a8a54cb8666f72505dec973d1"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp38-cp38-macosx_10_15_x86_64.whl", "has_sig": false, "md5_digest": "4dcad1661a01806896b8b7fa006b7dee", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 403249, "upload_time": "2020-02-07T22:34:36", "upload_time_iso_8601": "2020-02-07T22:34:36.762272Z", "url": "https://files.pythonhosted.org/packages/c7/c9/a1d2798dfe3486bc448ffce5cc15da9af51d4966e2c19dc3553063c16bfe/ale_py-0.6.0.dev20200207-cp38-cp38-macosx_10_15_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b2fa7c005a8af591018611322f32925", "sha256": "2113f2a7a2b6ff4d5c62174d70e8881cfac7c6939c9dc4eaf8a20cd584ec9578"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "2b2fa7c005a8af591018611322f32925", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 709670, "upload_time": "2020-02-07T22:34:37", "upload_time_iso_8601": "2020-02-07T22:34:37.981176Z", "url": "https://files.pythonhosted.org/packages/aa/59/198b3b3118884d03966b4d2153a1b830ae3b3acc5d658b32519f8b837d26/ale_py-0.6.0.dev20200207-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b4d3613181115d07a6e1bb74600c9a9", "sha256": "4a34e8c9a25b50a60599c9a126ca93b33b725bc518fa329b815df59e4269c800"}, "downloads": -1, "filename": "ale_py-0.6.0.dev20200207-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "8b4d3613181115d07a6e1bb74600c9a9", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 381578, "upload_time": "2020-02-07T22:34:39", "upload_time_iso_8601": "2020-02-07T22:34:39.060154Z", "url": "https://files.pythonhosted.org/packages/8e/1c/d8060ca730f1dcdf4606aba0878772508c7866d5b89e4c9321ec31cfd2ae/ale_py-0.6.0.dev20200207-cp38-cp38-win_amd64.whl", "yanked": false}], "timestamp": "Thu May  7 16:19:57 2020"}