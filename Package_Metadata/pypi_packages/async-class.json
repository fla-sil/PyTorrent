{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Internet", "Topic :: Software Development", "Topic :: Software Development :: Libraries"], "description": "async-class\n===========\n\n[![PyPI - License](https://img.shields.io/pypi/l/async-class)](https://pypi.org/project/async-class) [![Wheel](https://img.shields.io/pypi/wheel/async-class)](https://pypi.org/project/async-class) [![PyPI](https://img.shields.io/pypi/v/async-class)](https://pypi.org/project/async-class) [![PyPI](https://img.shields.io/pypi/pyversions/async-class)](https://pypi.org/project/async-class) [![Coverage Status](https://coveralls.io/repos/github/mosquito/async-class/badge.svg?branch=master)](https://coveralls.io/github/mosquito/async-class?branch=master) [![GitHub Workflow Status](https://img.shields.io/github/workflow/status/mosquito/async-class/Python%20package)](https://github.com/mosquito/async-class/actions?query=workflow%3A%22Python+package%22)\n\nAdding abillity to write classes with awaitable initialization function.\n\n\nExample\n-------\n\n```python\n\nimport asyncio\nfrom async_class import AsyncClass\n\n\nclass MyAsyncClass(AsyncClass):\n    async def __ainit__(self):\n        future = self.create_future()\n        self.loop.call_soon(future.set_result)\n        await future\n\n\nasync def main():\n    instance = await MyAsyncClass()\n    print(instance)\n\n\nasyncio.run(main())\n\n```\n\n\nDocumentation\n=============\n\nModule provides useful abstractions for writing async code.\n\n\nTaskStore\n---------\n\n`TaskStore` is a task management helper. One instance has `create_task()`\nand `create_future()` methods and all created entities will be destroyed\nwhen `TaskStore` will be closed via `close()` method.\n\nAlso, a task store might create a linked copy of the self, which will be\nclosed when the parent instance will be closed.\n\n\n```python\nimport asyncio\nfrom async_class import TaskStore\n\n\nasync def main():\n    store = TaskStore()\n    task1 = store.create_task(asyncio.sleep(3600))\n\n    child_store = store.get_child()\n    task2 = child_store.create_task(asyncio.sleep(3600))\n\n    await store.close()\n\n    assert task1.done() and task2.done()\n\n\nasyncio.run(main())\n\n```\n\nAsyncClass\n----------\n\nBase class with task store instance and helpers for simple task management.\n\n```python\n\nimport asyncio\nfrom async_class import AsyncClass\n\n\nclass MyClass(AsyncClass):\n    def __ainit__(self):\n        self.task = self.create_task(asyncio.sleep(3600))\n\n\nasync def main():\n    obj = await MyClass()\n\n    assert not obj.task.done()\n\n    await obj.close()\n\n    assert obj.task.done()\n\n\nasyncio.run(main())\n```\n\nAsyncClassBase\n--------------\n\nIs a base wrapper with metaclass has no additional methods and properties like\n`self.loop` and `TaskStore` related helpers (`self.create_task`, `self.create_future`).\n\n\n```python\n\nimport asyncio\nfrom async_class import AsyncClassBase\n\n\nclass MyAsyncClass(AsyncClassBase):\n    async def __ainit__(self):\n        loop = asyncio.get_event_loop()\n        future = loop.create_future()\n        loop.call_soon(future.set_result)\n        await future\n\n\nasync def main():\n    instance = await MyAsyncClass()\n    print(instance)\n\n\nasyncio.run(main())\n\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "async-class", "package_url": "https://pypi.org/project/async-class/", "platform": "", "project_url": "https://pypi.org/project/async-class/", "project_urls": {"Source": "https://github.com/mosquito/async-class"}, "release_url": "https://pypi.org/project/async-class/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Write classes with async def __ainit__", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>async-class</h1>\n<p><a href=\"https://pypi.org/project/async-class\" rel=\"nofollow\"><img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/468bc9cd7eb1617c93d2b309e97761d81bd4f613/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6173796e632d636c617373\"></a> <a href=\"https://pypi.org/project/async-class\" rel=\"nofollow\"><img alt=\"Wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51ec83b098a805c52f9ae677fdf57298631d960d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f6173796e632d636c617373\"></a> <a href=\"https://pypi.org/project/async-class\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df29517ef52e906aa0a07a7aa73d0af711317af8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6173796e632d636c617373\"></a> <a href=\"https://pypi.org/project/async-class\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6b063f88968fd1c485b7969d9ca4344b5576e5cb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6173796e632d636c617373\"></a> <a href=\"https://coveralls.io/github/mosquito/async-class?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/912352e3582f3e0b65b012d964ce83be577db686/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d6f73717569746f2f6173796e632d636c6173732f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://github.com/mosquito/async-class/actions?query=workflow%3A%22Python+package%22\" rel=\"nofollow\"><img alt=\"GitHub Workflow Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d90b51c2e2d3378b1da48a3499f84a7694c265a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f6d6f73717569746f2f6173796e632d636c6173732f507974686f6e2532307061636b616765\"></a></p>\n<p>Adding abillity to write classes with awaitable initialization function.</p>\n<h2>Example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">async_class</span> <span class=\"kn\">import</span> <span class=\"n\">AsyncClass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyAsyncClass</span><span class=\"p\">(</span><span class=\"n\">AsyncClass</span><span class=\"p\">):</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">__ainit__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">future</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_future</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">call_soon</span><span class=\"p\">(</span><span class=\"n\">future</span><span class=\"o\">.</span><span class=\"n\">set_result</span><span class=\"p\">)</span>\n        <span class=\"k\">await</span> <span class=\"n\">future</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">MyAsyncClass</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<h1>Documentation</h1>\n<p>Module provides useful abstractions for writing async code.</p>\n<h2>TaskStore</h2>\n<p><code>TaskStore</code> is a task management helper. One instance has <code>create_task()</code>\nand <code>create_future()</code> methods and all created entities will be destroyed\nwhen <code>TaskStore</code> will be closed via <code>close()</code> method.</p>\n<p>Also, a task store might create a linked copy of the self, which will be\nclosed when the parent instance will be closed.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">async_class</span> <span class=\"kn\">import</span> <span class=\"n\">TaskStore</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">TaskStore</span><span class=\"p\">()</span>\n    <span class=\"n\">task1</span> <span class=\"o\">=</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3600</span><span class=\"p\">))</span>\n\n    <span class=\"n\">child_store</span> <span class=\"o\">=</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">get_child</span><span class=\"p\">()</span>\n    <span class=\"n\">task2</span> <span class=\"o\">=</span> <span class=\"n\">child_store</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3600</span><span class=\"p\">))</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n    <span class=\"k\">assert</span> <span class=\"n\">task1</span><span class=\"o\">.</span><span class=\"n\">done</span><span class=\"p\">()</span> <span class=\"ow\">and</span> <span class=\"n\">task2</span><span class=\"o\">.</span><span class=\"n\">done</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<h2>AsyncClass</h2>\n<p>Base class with task store instance and helpers for simple task management.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">async_class</span> <span class=\"kn\">import</span> <span class=\"n\">AsyncClass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyClass</span><span class=\"p\">(</span><span class=\"n\">AsyncClass</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__ainit__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3600</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">MyClass</span><span class=\"p\">()</span>\n\n    <span class=\"k\">assert</span> <span class=\"ow\">not</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">done</span><span class=\"p\">()</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n    <span class=\"k\">assert</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">done</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<h2>AsyncClassBase</h2>\n<p>Is a base wrapper with metaclass has no additional methods and properties like\n<code>self.loop</code> and <code>TaskStore</code> related helpers (<code>self.create_task</code>, <code>self.create_future</code>).</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">async_class</span> <span class=\"kn\">import</span> <span class=\"n\">AsyncClassBase</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyAsyncClass</span><span class=\"p\">(</span><span class=\"n\">AsyncClassBase</span><span class=\"p\">):</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">__ainit__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n        <span class=\"n\">future</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">create_future</span><span class=\"p\">()</span>\n        <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">call_soon</span><span class=\"p\">(</span><span class=\"n\">future</span><span class=\"o\">.</span><span class=\"n\">set_result</span><span class=\"p\">)</span>\n        <span class=\"k\">await</span> <span class=\"n\">future</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">MyAsyncClass</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n\n          </div>"}, "last_serial": 7115081, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "fc6df6084af516834ba7fa8f47c30065", "sha256": "aef85fb3f9f2edff00a590c3b359cec179aba507ce621bce345abcdb5e52c1b8"}, "downloads": -1, "filename": "async-class-0.0.2.tar.gz", "has_sig": false, "md5_digest": "fc6df6084af516834ba7fa8f47c30065", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3072, "upload_time": "2020-04-21T18:44:17", "upload_time_iso_8601": "2020-04-21T18:44:17.224244Z", "url": "https://files.pythonhosted.org/packages/e3/7a/3189f1a9ad0e0b459288991ef64befc2943218d6f336ba45bb97413c0c15/async-class-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "275a699a7ccecc5632ea8f3c37021b4d", "sha256": "16f6c01bbf82e6c97527f432c5591a5820ae1b48fd50e19a2eadf99752fa5747"}, "downloads": -1, "filename": "async_class-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "275a699a7ccecc5632ea8f3c37021b4d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3957, "upload_time": "2020-04-21T18:54:53", "upload_time_iso_8601": "2020-04-21T18:54:53.449232Z", "url": "https://files.pythonhosted.org/packages/65/55/5d26c3d498f1450c582bc5feee92f3c9a5004b5ac90f47057d764e0e4dbc/async_class-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78858862d2d289fd4e8ed456a16875b4", "sha256": "91e1c679d18073c653567ade5e812d81a91b2213249b0f755bd4dce54eb7939a"}, "downloads": -1, "filename": "async-class-0.0.3.tar.gz", "has_sig": false, "md5_digest": "78858862d2d289fd4e8ed456a16875b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3177, "upload_time": "2020-04-21T18:54:54", "upload_time_iso_8601": "2020-04-21T18:54:54.455208Z", "url": "https://files.pythonhosted.org/packages/da/dc/8024b136fd7c2cf37853ab114348c1bb9c61f8abb830bbb96e1badd55285/async-class-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "de94e015d77e64cbc08a33c68957090d", "sha256": "1da81420beba6bbbd9961030c13609c03413f271c46a2da2806b043bc2b791d5"}, "downloads": -1, "filename": "async_class-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "de94e015d77e64cbc08a33c68957090d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4102, "upload_time": "2020-04-22T21:16:50", "upload_time_iso_8601": "2020-04-22T21:16:50.765120Z", "url": "https://files.pythonhosted.org/packages/de/b5/c1d6787caa12f287eebef13b5de40252ebb7abc9fc50920093fd1d75e30d/async_class-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72f0bb04a2a59cecbea988291a9ad0d7", "sha256": "7a00bfbe212cb4776055cef56571e62dd7443164d9ea179edf1ea3e9befddcae"}, "downloads": -1, "filename": "async-class-0.1.0.tar.gz", "has_sig": false, "md5_digest": "72f0bb04a2a59cecbea988291a9ad0d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3395, "upload_time": "2020-04-22T21:16:52", "upload_time_iso_8601": "2020-04-22T21:16:52.138549Z", "url": "https://files.pythonhosted.org/packages/c0/f8/a15490ffdd0fb6f4e41633f7c55fbeaa47efa1dc355541b3f27ab7e3bfdd/async-class-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e06fda1e28886e19d364bcae9c750d89", "sha256": "275fa6cbd4c13627aab4ac62ae2eb55a677a320d4dae4115109b1267b747bdc2"}, "downloads": -1, "filename": "async_class-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e06fda1e28886e19d364bcae9c750d89", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4245, "upload_time": "2020-04-27T20:34:01", "upload_time_iso_8601": "2020-04-27T20:34:01.298419Z", "url": "https://files.pythonhosted.org/packages/11/1a/4c62883e237b791c8df969f97935e1388b1178b17229e5c00a019cd3b03e/async_class-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2524cfced2acdb83738202f6d455525c", "sha256": "f0bc0f81e7ab74f54ba619b160a4eb047d524f17f376e67212fda71e11f9d7fd"}, "downloads": -1, "filename": "async-class-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2524cfced2acdb83738202f6d455525c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3542, "upload_time": "2020-04-27T20:34:02", "upload_time_iso_8601": "2020-04-27T20:34:02.334888Z", "url": "https://files.pythonhosted.org/packages/fd/9d/c4099de80b30d52f5b2f78a04bf7e3eda9accfd544bf7c6b29651aa11fb5/async-class-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a1c6789b67acf8e81af054dfe4d37316", "sha256": "be43eb4a08b0d76ce228baafba58d1e4e8ef534872ba3389ff34c279e3eeaec3"}, "downloads": -1, "filename": "async_class-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a1c6789b67acf8e81af054dfe4d37316", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4243, "upload_time": "2020-04-27T20:38:51", "upload_time_iso_8601": "2020-04-27T20:38:51.740017Z", "url": "https://files.pythonhosted.org/packages/99/85/e9920d66c23b32405335bd7993a7ca3b5c76edc16a26f1867547f0e97367/async_class-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "754181e41560d8281e2612a8f5c64e57", "sha256": "203c728b6cc110ba51e9ba1cd0c153ec16400322656d8d1436fba06f572b8e86"}, "downloads": -1, "filename": "async-class-0.1.2.tar.gz", "has_sig": false, "md5_digest": "754181e41560d8281e2612a8f5c64e57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3552, "upload_time": "2020-04-27T20:38:53", "upload_time_iso_8601": "2020-04-27T20:38:53.191407Z", "url": "https://files.pythonhosted.org/packages/13/69/2475e92f86e13543031ef8674c9f6b70dca6d000cd32dd0c846ea04f0109/async-class-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a1c6789b67acf8e81af054dfe4d37316", "sha256": "be43eb4a08b0d76ce228baafba58d1e4e8ef534872ba3389ff34c279e3eeaec3"}, "downloads": -1, "filename": "async_class-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a1c6789b67acf8e81af054dfe4d37316", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4243, "upload_time": "2020-04-27T20:38:51", "upload_time_iso_8601": "2020-04-27T20:38:51.740017Z", "url": "https://files.pythonhosted.org/packages/99/85/e9920d66c23b32405335bd7993a7ca3b5c76edc16a26f1867547f0e97367/async_class-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "754181e41560d8281e2612a8f5c64e57", "sha256": "203c728b6cc110ba51e9ba1cd0c153ec16400322656d8d1436fba06f572b8e86"}, "downloads": -1, "filename": "async-class-0.1.2.tar.gz", "has_sig": false, "md5_digest": "754181e41560d8281e2612a8f5c64e57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3552, "upload_time": "2020-04-27T20:38:53", "upload_time_iso_8601": "2020-04-27T20:38:53.191407Z", "url": "https://files.pythonhosted.org/packages/13/69/2475e92f86e13543031ef8674c9f6b70dca6d000cd32dd0c846ea04f0109/async-class-0.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:46 2020"}