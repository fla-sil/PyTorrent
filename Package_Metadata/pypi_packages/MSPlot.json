{"info": {"author": "David Martin", "author_email": "d.m.a.martin@dundee.ac.uk", "bugtrack_url": null, "classifiers": [], "description": "MS Plotting utilities\n=====================\n\nThese scripts provide some simple utilities for mining and plotting MS data.\nThe data is expected to be available in mzML or the openMS featureXML format.\n\nScript files can be run as standalone apps or as a library.\n\n\nMSPlot.msplot3d\n---------------\n\nCommand Line Usage: msplot3d.py [options]\n\nOptions:\n  -h, --help            show this help message and exit\n  -m MZML, --mzml=MZML  Input mzML file\n  -f FEATURE, --feature=FEATURE\n                        comma separated list of featureXML files\n  -o OUTFILE, --output=OUTFILE\n                        output filename (default='plot.pdf')\n  -s, --showX11         Show X11 interactive plot.\n  -x XROT, --xrot=XROT  Xaxis rotation for plot (default (30)\n  -y YROT, --yrot=YROT  Yaxis rotation for plot (default: -45)\n  -l CLIP, --limit=CLIP\n                        Clip threshold for plot\n  -c COLOURS, --colours=COLOURS\n                        list of colours with which to plot features. Colours\n                        will be recycled when needed (default='r,g,m,c,y,k')\n  -r RTMIN, --rtmin=RTMIN\n                        minimum retention time\n  -R RTMAX, --rtmax=RTMAX\n                        maximum retention time\n  -t MZMIN, --mzmin=MZMIN\n                        minimum m/z value\n  -T MZMAX, --mzmax=MZMAX\n                        maximum m/z value\n  -w RTWINDOW, --rtwindow=RTWINDOW\n                        Window around plot area in which to identify feature\n                        peaks\n  -p, --plotms2         Plot MS2 events\n  -d MS2WIN, --ms2win=MS2WIN\n                        MS2 ion capture window size\n\nModule usage:\nmzml is the only non-named argument. All arguments as per the command line version except that lists should be provided as arrays rather than comma-delimited text.\n\n>>> import MSPlot.msplot3d\n>>> MSPlot.plot3d(mzml, featfiles=[], outfile='plot.pdf', show=False, xrot=30, yrot=-45, featcols=['r','g','b','m','c','k'], thresh=100, minrt=None,maxrt=None,minmz=None, maxmz=None, ms2win=2.0, rtwindow=20.0, plotms2=True)\n\n\nMSPlot.ms1pep\n-------------\nModule Usage:\n-------------\n>>> import Unimod.unimod\n>>> import MSPlot.ms1pep\n>>> peptide='ACDEFGHIKLMNPQRSTVWYKKACDPRFGHI'\n# protein amino acid sequence\n\n>>> frags=MSPlot.ms1pep.digestprotein(peptide, enzyme=1, overlap=True, unfavoured=False)\n    # overlap - include 1 missed cleavage\n    # unfavoured - include unfavourable sites (see the EMBOSS documentation for more details)\n    # enzyme - numerical enzyme selection according to the EMBOSS documentation\n    Enzymes and Reagents\n         1 : Trypsin\n         2 : Lys-C\n         3 : Arg-C\n         4 : Asp-N\n         5 : V8-bicarb\n         6 : V8-phosph\n         7 : Chymotrypsin\n         8 : CNBr\n>>> frags\n[{'start': '1', 'end': '15', 'sequence': 'ACDEFGHIKLMNPQR'}, {'start': '16', 'end': '23', 'sequence': 'STVWYKK'}, {'start': '24', 'end': '32', 'sequence': 'ACDPRFGHI'}, {'start': '1', 'end': '23', 'sequence': 'ACDEFGHIKLMNPQRSTVWYKK'}]\n# list of digested fragment peptides. \n\n>>> camc=Unimod.unimod.database.get_label('Carbamidomethyl')['delta_mono_mass']\n# get delta mass for fixed cysteine modification.\n\n>>> MSPlot.ms1pep.listmz(frags[0]['sequence'], charges=[2,3,4], modifications=[], fixedmods={'C': camc })\n[908.43562931579208, 605.95969455552802, 454.72172717539604]\n# returns a list of mz values\n\n>>> mzlist=MSPlot.ms1pep.listmz(frags[1]['sequence'], charges=[2,3,4], modifications=['2 Phospho (T)',], fixedmods={'C': camc })\n>>> mzlist\n[536.7538243454826, 358.17182457532175, 268.8808246902413]\n\n# listmz does not permute, so for variable modifications, call it with each permutation.\n\n>>> xics=MSPlot.ms1pep.getXIC(\"LCMSrun.mzML\", mzlist, tolerance=0.01, minrt=0, maxrt=None)\n>>> xics.keys()\n['rt', '358.171824575', '536.753824345', '268.88082469']\n# extracts the XIC for each mz ratio. The keys are a truncated string version of the full precision calculated mass. \n\nMSPlot.ms1pep.plotXIC(xics, colours=['r','g','b','m','c','k'], outfile=\"plot.pdf\", title=\"XIC plot\"):\n# plot the XICs. Any number can be plotted, but they are separated by 7% max(XIC)\n\n\nDependencies\n============\n\npyMS - OpenMS data parsing and analysis by Niek de Klein\npymzml - mzML parsing library\npyteomics - package for calculating mz values and more\nnumpy -  large scale data handling\nmatplotlib - plotting library\nEMBOSS (for the digest application)\nUnimod - module for handling a Unimod database.\n\n\n\nAuthor\n======\n\nDr David Martin, University of Dundee d.m.a.martin@dundee.ac.uk", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "MSPlot", "package_url": "https://pypi.org/project/MSPlot/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/MSPlot/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/MSPlot/0.1.3.5j/", "requires_dist": null, "requires_python": null, "summary": "Utilities for plotting 3D mass spec data, XIC etc from mzML data files", "version": "0.1.3.5j", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"ms-plotting-utilities\">\n<h2>MS Plotting utilities</h2>\n<p>These scripts provide some simple utilities for mining and plotting MS data.\nThe data is expected to be available in mzML or the openMS featureXML format.</p>\n<p>Script files can be run as standalone apps or as a library.</p>\n<div id=\"msplot-msplot3d\">\n<h3>MSPlot.msplot3d</h3>\n<p>Command Line Usage: msplot3d.py [options]</p>\n<dl>\n<dt>Options:</dt>\n<dd><table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-h</span>, <span class=\"option\">--help</span></kbd></td>\n<td>show this help message and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-m <var>MZML</var></span>, <span class=\"option\">--mzml=<var>MZML</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Input mzML file</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-f <var>FEATURE</var></span>, <span class=\"option\">--feature=<var>FEATURE</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>comma separated list of featureXML files</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-o <var>OUTFILE</var></span>, <span class=\"option\">--output=<var>OUTFILE</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>output filename (default=\u2019plot.pdf\u2019)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-s</span>, <span class=\"option\">--showX11</span></kbd></td>\n<td>Show X11 interactive plot.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-x <var>XROT</var></span>, <span class=\"option\">--xrot=<var>XROT</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Xaxis rotation for plot (default (30)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-y <var>YROT</var></span>, <span class=\"option\">--yrot=<var>YROT</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Yaxis rotation for plot (default: -45)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-l <var>CLIP</var></span>, <span class=\"option\">--limit=<var>CLIP</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Clip threshold for plot</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-c <var>COLOURS</var></span>, <span class=\"option\">--colours=<var>COLOURS</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>list of colours with which to plot features. Colours\nwill be recycled when needed (default=\u2019r,g,m,c,y,k\u2019)</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-r <var>RTMIN</var></span>, <span class=\"option\">--rtmin=<var>RTMIN</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>minimum retention time</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-R <var>RTMAX</var></span>, <span class=\"option\">--rtmax=<var>RTMAX</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>maximum retention time</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-t <var>MZMIN</var></span>, <span class=\"option\">--mzmin=<var>MZMIN</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>minimum m/z value</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-T <var>MZMAX</var></span>, <span class=\"option\">--mzmax=<var>MZMAX</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>maximum m/z value</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-w <var>RTWINDOW</var></span>, <span class=\"option\">--rtwindow=<var>RTWINDOW</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>Window around plot area in which to identify feature\npeaks</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-p</span>, <span class=\"option\">--plotms2</span></kbd></td>\n<td>Plot MS2 events</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-d <var>MS2WIN</var></span>, <span class=\"option\">--ms2win=<var>MS2WIN</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>MS2 ion capture window size</td></tr>\n</tbody>\n</table>\n</dd>\n</dl>\n<p>Module usage:\nmzml is the only non-named argument. All arguments as per the command line version except that lists should be provided as arrays rather than comma-delimited text.</p>\n<pre>&gt;&gt;&gt; import MSPlot.msplot3d\n&gt;&gt;&gt; MSPlot.plot3d(mzml, featfiles=[], outfile='plot.pdf', show=False, xrot=30, yrot=-45, featcols=['r','g','b','m','c','k'], thresh=100, minrt=None,maxrt=None,minmz=None, maxmz=None, ms2win=2.0, rtwindow=20.0, plotms2=True)\n</pre>\n</div>\n<div id=\"msplot-ms1pep\">\n<h3>MSPlot.ms1pep</h3>\n</div>\n<div id=\"module-usage\">\n<h3>Module Usage:</h3>\n<pre>&gt;&gt;&gt; import Unimod.unimod\n&gt;&gt;&gt; import MSPlot.ms1pep\n&gt;&gt;&gt; peptide='ACDEFGHIKLMNPQRSTVWYKKACDPRFGHI'\n# protein amino acid sequence\n</pre>\n<pre>&gt;&gt;&gt; frags=MSPlot.ms1pep.digestprotein(peptide, enzyme=1, overlap=True, unfavoured=False)\n    # overlap - include 1 missed cleavage\n    # unfavoured - include unfavourable sites (see the EMBOSS documentation for more details)\n    # enzyme - numerical enzyme selection according to the EMBOSS documentation\n    Enzymes and Reagents\n         1 : Trypsin\n         2 : Lys-C\n         3 : Arg-C\n         4 : Asp-N\n         5 : V8-bicarb\n         6 : V8-phosph\n         7 : Chymotrypsin\n         8 : CNBr\n&gt;&gt;&gt; frags\n[{'start': '1', 'end': '15', 'sequence': 'ACDEFGHIKLMNPQR'}, {'start': '16', 'end': '23', 'sequence': 'STVWYKK'}, {'start': '24', 'end': '32', 'sequence': 'ACDPRFGHI'}, {'start': '1', 'end': '23', 'sequence': 'ACDEFGHIKLMNPQRSTVWYKK'}]\n# list of digested fragment peptides.\n</pre>\n<pre>&gt;&gt;&gt; camc=Unimod.unimod.database.get_label('Carbamidomethyl')['delta_mono_mass']\n# get delta mass for fixed cysteine modification.\n</pre>\n<pre>&gt;&gt;&gt; MSPlot.ms1pep.listmz(frags[0]['sequence'], charges=[2,3,4], modifications=[], fixedmods={'C': camc })\n[908.43562931579208, 605.95969455552802, 454.72172717539604]\n# returns a list of mz values\n</pre>\n<pre>&gt;&gt;&gt; mzlist=MSPlot.ms1pep.listmz(frags[1]['sequence'], charges=[2,3,4], modifications=['2 Phospho (T)',], fixedmods={'C': camc })\n&gt;&gt;&gt; mzlist\n[536.7538243454826, 358.17182457532175, 268.8808246902413]\n</pre>\n<p># listmz does not permute, so for variable modifications, call it with each permutation.</p>\n<pre>&gt;&gt;&gt; xics=MSPlot.ms1pep.getXIC(\"LCMSrun.mzML\", mzlist, tolerance=0.01, minrt=0, maxrt=None)\n&gt;&gt;&gt; xics.keys()\n['rt', '358.171824575', '536.753824345', '268.88082469']\n# extracts the XIC for each mz ratio. The keys are a truncated string version of the full precision calculated mass.\n</pre>\n<p>MSPlot.ms1pep.plotXIC(xics, colours=[\u2018r\u2019,\u2019g\u2019,\u2019b\u2019,\u2019m\u2019,\u2019c\u2019,\u2019k\u2019], outfile=\u201dplot.pdf\u201d, title=\u201dXIC plot\u201d):\n# plot the XICs. Any number can be plotted, but they are separated by 7% max(XIC)</p>\n</div>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>pyMS - OpenMS data parsing and analysis by Niek de Klein\npymzml - mzML parsing library\npyteomics - package for calculating mz values and more\nnumpy -  large scale data handling\nmatplotlib - plotting library\nEMBOSS (for the digest application)\nUnimod - module for handling a Unimod database.</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>Dr David Martin, University of Dundee <a href=\"mailto:d.m.a.martin%40dundee.ac.uk\">d<span>.</span>m<span>.</span>a<span>.</span>martin<span>@</span>dundee<span>.</span>ac<span>.</span>uk</a></p>\n</div>\n\n          </div>"}, "last_serial": 784658, "releases": {"0.1.3.5j": [{"comment_text": "", "digests": {"md5": "dcd10cab57bc2a652e74b04947c53ed5", "sha256": "d04b1ad9668b58215e3400f7ec72c803476251c01695d76ac1e15b4c8e1e65f1"}, "downloads": -1, "filename": "MSPlot-0.1.3.5j.tar.gz", "has_sig": false, "md5_digest": "dcd10cab57bc2a652e74b04947c53ed5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26278, "upload_time": "2012-11-20T15:49:47", "upload_time_iso_8601": "2012-11-20T15:49:47.112736Z", "url": "https://files.pythonhosted.org/packages/41/89/0c3dfcaf1180324e21c5ea485b18ffd4f63ed588de361fb2d20364b0a4af/MSPlot-0.1.3.5j.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dcd10cab57bc2a652e74b04947c53ed5", "sha256": "d04b1ad9668b58215e3400f7ec72c803476251c01695d76ac1e15b4c8e1e65f1"}, "downloads": -1, "filename": "MSPlot-0.1.3.5j.tar.gz", "has_sig": false, "md5_digest": "dcd10cab57bc2a652e74b04947c53ed5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26278, "upload_time": "2012-11-20T15:49:47", "upload_time_iso_8601": "2012-11-20T15:49:47.112736Z", "url": "https://files.pythonhosted.org/packages/41/89/0c3dfcaf1180324e21c5ea485b18ffd4f63ed588de361fb2d20364b0a4af/MSPlot-0.1.3.5j.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:49 2020"}