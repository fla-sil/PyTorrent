{"info": {"author": "Andrey Antukh", "author_email": "niwi@niwi.be", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "====================\ndjorm-ext-pgfulltext\n====================\n\nPgfulltext module of django orm extensions package (collection of third party plugins build in one unified package).\n\n- Now compatible with python2 and python3 with same code base.\n- Ready for django 1.3, 1.4, 1.5 and 1.6\n\n\nIntroduction\n------------\n\nFull Text Searching (or just text search) provides the capability to identify natural-language documents that satisfy a query, and optionally to sort them by relevance to the query. The most common type of search is to find all documents containing given query terms and return them in order of their similarity to the query. Notions of query and similarity are very flexible and depend on the specific application. The simplest search considers query as a set of words and similarity as the frequency of query words in the document. (`From postgresql documentation.`)\n\n\nClasses\n^^^^^^^\n\n`djorm_pgfulltext.fields.VectorField`\n    An tsvector index field which stores converted text into special format.\n\n`djorm_pgfulltext.models.SearchManager`\n    Django manager that contains helper methods for search and re/genereate indexes.\n\n\nHow to use it\n-------------\n\nTo use it, you will need to add a new field. Obviously, this is not mandatory, as it can specify which fields you want to search at the time of calling the `search`. Keep in mind that you should put the corresponding indices for the fields to be used.\n\n.. code-block:: python\n\n    from djorm_pgfulltext.models import SearchManager\n    from djorm_pgfulltext.fields import VectorField\n    from django.db import models\n\n    class Page(models.Model):\n        name = models.CharField(max_length=200)\n        description = models.TextField()\n\n        search_index = VectorField()\n\n        objects = SearchManager(\n            fields = ('name', 'description'),\n            config = 'pg_catalog.english', # this is default\n            search_field = 'search_index', # this is default\n            auto_update_search_field = True\n        )\n\n\nThe manager automatically injected ``update_search_field`` method to the model instance.\nAlso, not to override the save method, you can pass the parameter ``auto_update_search_field = True``, so\nthe index field  is updated automatically by calling the ``save`` method.\n\n\nUsage examples:\n^^^^^^^^^^^^^^^\n\n- The config parameter is optional and defaults to 'pg_catalog.english'.\n- The fields parameter is optional. If a list of tuples, you can specify the ranking of each field, if it is None, it gets 'D' as the default.\n- It can also be a simple list of fields, and the ranking will be selected by default. If the field is empty, the index was applied to all fields ``CharField`` and ``TextField``.\n\nTo search, use the ``search`` method of the manager. The current implementation, by default uses unaccent extension for ignore the accents. Also, the searches are case insensitive.\n\n.. code-block:: python\n\n    >>> Page.objects.search(\"documentation & about\")\n    [<Page: Page: Home page>]\n    >>> Page.objects.search(\"about | documentation | django | home\", raw=True)\n    [<Page: Page: Home page>, <Page: Page: About>, <Page: Page: Navigation>]\n\nFTS extension by default uses plainto_tsquery instead of to_tosquery, for this reason the use of raw parameter.\n\n\nGeneral notes:\n^^^^^^^^^^^^^^\n\nYou must ensure you have installed the extension `unaccent`:\n\n.. code-block:: sql\n\n    CREATE EXTENSION unaccent;\n    ALTER FUNCTION unaccent(text) IMMUTABLE;\n\nYou can install this extension on template1 database for make this extension automatically available for all new created databases.\n\n\nChangelog\n---------\n\n**0.9**\n\n- Fix django 1.6 compatibility (transaction management).\n\n\n.. image:: https://d2weczhvl823v0.cloudfront.net/djangonauts/djorm-ext-pgfulltext/trend.png\n   :alt: Bitdeli badge\n   :target: https://bitdeli.com/free\n\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/niwibe/djorm-ext-pgfulltext", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "djorm-ext-pgfulltext", "package_url": "https://pypi.org/project/djorm-ext-pgfulltext/", "platform": "OS Independent", "project_url": "https://pypi.org/project/djorm-ext-pgfulltext/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/niwibe/djorm-ext-pgfulltext"}, "release_url": "https://pypi.org/project/djorm-ext-pgfulltext/0.10/", "requires_dist": null, "requires_python": null, "summary": "PostgreSQL Full Text Search integration with django orm.", "version": "0.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Pgfulltext module of django orm extensions package (collection of third party plugins build in one unified package).</p>\n<ul>\n<li>Now compatible with python2 and python3 with same code base.</li>\n<li>Ready for django 1.3, 1.4, 1.5 and 1.6</li>\n</ul>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Full Text Searching (or just text search) provides the capability to identify natural-language documents that satisfy a query, and optionally to sort them by relevance to the query. The most common type of search is to find all documents containing given query terms and return them in order of their similarity to the query. Notions of query and similarity are very flexible and depend on the specific application. The simplest search considers query as a set of words and similarity as the frequency of query words in the document. (<cite>From postgresql documentation.</cite>)</p>\n<div id=\"classes\">\n<h3>Classes</h3>\n<dl>\n<dt><cite>djorm_pgfulltext.fields.VectorField</cite></dt>\n<dd>An tsvector index field which stores converted text into special format.</dd>\n<dt><cite>djorm_pgfulltext.models.SearchManager</cite></dt>\n<dd>Django manager that contains helper methods for search and re/genereate indexes.</dd>\n</dl>\n</div>\n</div>\n<div id=\"how-to-use-it\">\n<h2>How to use it</h2>\n<p>To use it, you will need to add a new field. Obviously, this is not mandatory, as it can specify which fields you want to search at the time of calling the <cite>search</cite>. Keep in mind that you should put the corresponding indices for the fields to be used.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">djorm_pgfulltext.models</span> <span class=\"kn\">import</span> <span class=\"n\">SearchManager</span>\n<span class=\"kn\">from</span> <span class=\"nn\">djorm_pgfulltext.fields</span> <span class=\"kn\">import</span> <span class=\"n\">VectorField</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Page</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n    <span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">()</span>\n\n    <span class=\"n\">search_index</span> <span class=\"o\">=</span> <span class=\"n\">VectorField</span><span class=\"p\">()</span>\n\n    <span class=\"n\">objects</span> <span class=\"o\">=</span> <span class=\"n\">SearchManager</span><span class=\"p\">(</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'description'</span><span class=\"p\">),</span>\n        <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"s1\">'pg_catalog.english'</span><span class=\"p\">,</span> <span class=\"c1\"># this is default</span>\n        <span class=\"n\">search_field</span> <span class=\"o\">=</span> <span class=\"s1\">'search_index'</span><span class=\"p\">,</span> <span class=\"c1\"># this is default</span>\n        <span class=\"n\">auto_update_search_field</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>The manager automatically injected <tt>update_search_field</tt> method to the model instance.\nAlso, not to override the save method, you can pass the parameter <tt>auto_update_search_field = True</tt>, so\nthe index field  is updated automatically by calling the <tt>save</tt> method.</p>\n<div id=\"usage-examples\">\n<h3>Usage examples:</h3>\n<ul>\n<li>The config parameter is optional and defaults to \u2018pg_catalog.english\u2019.</li>\n<li>The fields parameter is optional. If a list of tuples, you can specify the ranking of each field, if it is None, it gets \u2018D\u2019 as the default.</li>\n<li>It can also be a simple list of fields, and the ranking will be selected by default. If the field is empty, the index was applied to all fields <tt>CharField</tt> and <tt>TextField</tt>.</li>\n</ul>\n<p>To search, use the <tt>search</tt> method of the manager. The current implementation, by default uses unaccent extension for ignore the accents. Also, the searches are case insensitive.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Page</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s2\">\"documentation &amp; about\"</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Page</span><span class=\"p\">:</span> <span class=\"n\">Page</span><span class=\"p\">:</span> <span class=\"n\">Home</span> <span class=\"n\">page</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Page</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s2\">\"about | documentation | django | home\"</span><span class=\"p\">,</span> <span class=\"n\">raw</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Page</span><span class=\"p\">:</span> <span class=\"n\">Page</span><span class=\"p\">:</span> <span class=\"n\">Home</span> <span class=\"n\">page</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Page</span><span class=\"p\">:</span> <span class=\"n\">Page</span><span class=\"p\">:</span> <span class=\"n\">About</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Page</span><span class=\"p\">:</span> <span class=\"n\">Page</span><span class=\"p\">:</span> <span class=\"n\">Navigation</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n</pre>\n<p>FTS extension by default uses plainto_tsquery instead of to_tosquery, for this reason the use of raw parameter.</p>\n</div>\n<div id=\"general-notes\">\n<h3>General notes:</h3>\n<p>You must ensure you have installed the extension <cite>unaccent</cite>:</p>\n<pre><span class=\"k\">CREATE</span> <span class=\"n\">EXTENSION</span> <span class=\"n\">unaccent</span><span class=\"p\">;</span>\n<span class=\"k\">ALTER</span> <span class=\"k\">FUNCTION</span> <span class=\"n\">unaccent</span><span class=\"p\">(</span><span class=\"nb\">text</span><span class=\"p\">)</span> <span class=\"k\">IMMUTABLE</span><span class=\"p\">;</span>\n</pre>\n<p>You can install this extension on template1 database for make this extension automatically available for all new created databases.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p><strong>0.9</strong></p>\n<ul>\n<li>Fix django 1.6 compatibility (transaction management).</li>\n</ul>\n<a href=\"https://bitdeli.com/free\" rel=\"nofollow\"><img alt=\"Bitdeli badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0347759a88626507acd16b8450d9857a2648ec14/68747470733a2f2f64327765637a68766c38323376302e636c6f756466726f6e742e6e65742f646a616e676f6e617574732f646a6f726d2d6578742d706766756c6c746578742f7472656e642e706e67\"></a>\n</div>\n\n          </div>"}, "last_serial": 1485324, "releases": {"0.10": [{"comment_text": "", "digests": {"md5": "489d80a6d4278697728602707822cbe9", "sha256": "12d074563c8a8a043c139ef12fbbb3bf28467e5c8d9f7e8831841dfe14c88e24"}, "downloads": -1, "filename": "djorm-ext-pgfulltext-0.10.tar.gz", "has_sig": false, "md5_digest": "489d80a6d4278697728602707822cbe9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7806, "upload_time": "2014-05-22T09:45:44", "upload_time_iso_8601": "2014-05-22T09:45:44.718322Z", "url": "https://files.pythonhosted.org/packages/da/aa/0fbf154a70812558fa9ad81e46d851211756cc983cc378c9fdb445f602c0/djorm-ext-pgfulltext-0.10.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "a0e5a5ad7472732f61501347d4539188", "sha256": "1371d18b54d22c46629516bbf3f30599a2352d28f91a36a1226581b8e21f3cd6"}, "downloads": -1, "filename": "djorm-ext-pgfulltext-0.4.0.tar.gz", "has_sig": false, "md5_digest": "a0e5a5ad7472732f61501347d4539188", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6646, "upload_time": "2012-10-01T21:24:39", "upload_time_iso_8601": "2012-10-01T21:24:39.573921Z", "url": "https://files.pythonhosted.org/packages/01/11/e53269172904f019b81310dde493748e095866adb4fa784b62aa9dbcd188/djorm-ext-pgfulltext-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "ee0db89edaee497e3cb7b5f28845015a", "sha256": "5116414d69326db0e533e24adf2fcf4797411aff330e926d7ed6b7385b8e0222"}, "downloads": -1, "filename": "djorm-ext-pgfulltext-0.4.1.tar.gz", "has_sig": false, "md5_digest": "ee0db89edaee497e3cb7b5f28845015a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6905, "upload_time": "2012-11-01T16:37:16", "upload_time_iso_8601": "2012-11-01T16:37:16.208756Z", "url": "https://files.pythonhosted.org/packages/f0/b7/0d2ba0922553304f0c53625aae2f0ee2df7c236e9e9a86a1ea69e9a85135/djorm-ext-pgfulltext-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "9e62aa5cd7aa564209c3e98a1019107d", "sha256": "7f1732f1525557fac9f4c5b83dbe0ac6724e1136f8dc5b35a9b4e3cdabed1a9f"}, "downloads": -1, "filename": "djorm-ext-pgfulltext-0.4.2.tar.gz", "has_sig": false, "md5_digest": "9e62aa5cd7aa564209c3e98a1019107d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6937, "upload_time": "2012-11-17T17:38:21", "upload_time_iso_8601": "2012-11-17T17:38:21.457082Z", "url": "https://files.pythonhosted.org/packages/16/00/d21c023ebb2ee7251a3a40e3e9a13c139a2050820c31689daad172c458eb/djorm-ext-pgfulltext-0.4.2.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "c8e658071523898b5f63beb45e2eaf0c", "sha256": "10a910944c9af06a411789f22a4a3e08b036a20485b00072f3ea2b6f06ba4a84"}, "downloads": -1, "filename": "djorm-ext-pgfulltext-0.5.tar.gz", "has_sig": false, "md5_digest": "c8e658071523898b5f63beb45e2eaf0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7108, "upload_time": "2012-11-17T18:24:25", "upload_time_iso_8601": "2012-11-17T18:24:25.669896Z", "url": "https://files.pythonhosted.org/packages/f8/b1/d7d56ebabdc03c99b8719ce20d1b0e16ac2ba65bf6ab28985f6f326913e9/djorm-ext-pgfulltext-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "185eafad43accb68d284f10aa09cb7c9", "sha256": "4df69f5a1db4181bd28fd829e318eb89c014281a83212c53c2f008cc17e87c39"}, "downloads": -1, "filename": "djorm-ext-pgfulltext-0.6.tar.gz", "has_sig": false, "md5_digest": "185eafad43accb68d284f10aa09cb7c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7112, "upload_time": "2012-11-29T19:42:34", "upload_time_iso_8601": "2012-11-29T19:42:34.849152Z", "url": "https://files.pythonhosted.org/packages/86/fc/9ceca6a1270b33a0422e026be5ea9c9a18bae65bf4662ec97d7b199c4ab4/djorm-ext-pgfulltext-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "8cf229bbd3add11fb1b34653d8bb0e1b", "sha256": "d61e2f2608ab68b11fb22529fb215c6a3d71756cc34815e262f4a5d3496c55c3"}, "downloads": -1, "filename": "djorm-ext-pgfulltext-0.7.tar.gz", "has_sig": false, "md5_digest": "8cf229bbd3add11fb1b34653d8bb0e1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7117, "upload_time": "2012-12-06T13:42:37", "upload_time_iso_8601": "2012-12-06T13:42:37.075660Z", "url": "https://files.pythonhosted.org/packages/14/a1/be664dc3a6b8004d3faa856f98aba0be95193aaad5769960f6f986ae8cfc/djorm-ext-pgfulltext-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "9787f250e4724af659c9251955235fe4", "sha256": "e14de08840f199fe41580197d4da2adb358d453393cac0668c70b1631e0e8681"}, "downloads": -1, "filename": "djorm-ext-pgfulltext-0.8.tar.gz", "has_sig": false, "md5_digest": "9787f250e4724af659c9251955235fe4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7131, "upload_time": "2013-02-23T19:49:36", "upload_time_iso_8601": "2013-02-23T19:49:36.740722Z", "url": "https://files.pythonhosted.org/packages/33/7c/35ee627e22ca2b498927fea81faca3792f8aa0cb1cac9731c333ae2a6890/djorm-ext-pgfulltext-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "ce18d6df8c0b388a662478932c2d543c", "sha256": "1dbb0856fc3d317f49c89df46beede543945dec5da60c951b1607d407e7d8350"}, "downloads": -1, "filename": "djorm-ext-pgfulltext-0.9.tar.gz", "has_sig": false, "md5_digest": "ce18d6df8c0b388a662478932c2d543c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7385, "upload_time": "2013-12-24T16:16:32", "upload_time_iso_8601": "2013-12-24T16:16:32.625379Z", "url": "https://files.pythonhosted.org/packages/17/89/0d17863d5ac9b65f5e542874f7e860ad07cdc48b6248dda8947a204b0a8f/djorm-ext-pgfulltext-0.9.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "efc1a9bedc07da330b08b9313de01432", "sha256": "e3195eceedb9ce2c45c6a693eb9d456e775b2a59f586e9ca73a30973cb45ad8e"}, "downloads": -1, "filename": "djorm-ext-pgfulltext-0.9.2.tar.gz", "has_sig": false, "md5_digest": "efc1a9bedc07da330b08b9313de01432", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9526, "upload_time": "2014-07-17T19:49:44", "upload_time_iso_8601": "2014-07-17T19:49:44.897868Z", "url": "https://files.pythonhosted.org/packages/fb/f8/1e1f99dcbe0bc91205644074e4d10074a46c32e41c3c91ed3d5539a4962a/djorm-ext-pgfulltext-0.9.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "0833d30063c1c86b6c0ca41364695ea2", "sha256": "cdf5057defdb0b7a3d74d48091b3019a57e0ca199421c36fbcdeac81694ddb64"}, "downloads": -1, "filename": "djorm_ext_pgfulltext-0.9.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0833d30063c1c86b6c0ca41364695ea2", "packagetype": "bdist_wheel", "python_version": "any", "requires_python": null, "size": 17440, "upload_time": "2015-03-31T17:16:44", "upload_time_iso_8601": "2015-03-31T17:16:44.457948Z", "url": "https://files.pythonhosted.org/packages/a8/c9/91bd36f2b3f594d51339273d8c02879f39de185bafe68470953b2e93e741/djorm_ext_pgfulltext-0.9.3-py2.py3-none-any.whl", "yanked": false}], "0.9.3": []}, "urls": [{"comment_text": "", "digests": {"md5": "489d80a6d4278697728602707822cbe9", "sha256": "12d074563c8a8a043c139ef12fbbb3bf28467e5c8d9f7e8831841dfe14c88e24"}, "downloads": -1, "filename": "djorm-ext-pgfulltext-0.10.tar.gz", "has_sig": false, "md5_digest": "489d80a6d4278697728602707822cbe9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7806, "upload_time": "2014-05-22T09:45:44", "upload_time_iso_8601": "2014-05-22T09:45:44.718322Z", "url": "https://files.pythonhosted.org/packages/da/aa/0fbf154a70812558fa9ad81e46d851211756cc983cc378c9fdb445f602c0/djorm-ext-pgfulltext-0.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:30 2020"}