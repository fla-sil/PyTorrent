{"info": {"author": "Ivan Surov", "author_email": "ivansurovv@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "==================\ndjango-async-tasks\n==================\n\nIt's a simple system to process queue task in real time.\n\n\nRequirements\n------------\n\n* python 2.7\n* Django 1.6 through Django 1.9\n* django-redis-cache\n\n\n\nInstall\n-------\n\n1. Download it from PyPi with ``pip install django-async-tasks``\n\n2. Add \"async_tasks\" to your INSTALLED_APPS setting like this::\n\n      INSTALLED_APPS = (\n          ...\n          'async_tasks',\n      )\n\n3. Configure settings\n\n* Set setting name that defined for Redis in ``settings.CACHES``. The default used 'default' setting name. ::\n\n      ASYNC_TASKS_REDIS_SETTING_NAME = 'default'\n\n* Setup log path and log filename. The default used for path ``os.path.join(BASE_DIR, 'logs')`` and filename ``'async-tasks.log'``. ::\n\n      ASYNC_TASKS_LOG_PATH = os.path.join(BASE_DIR, 'logs') # Log path\n      ASYNC_TASKS_LOG_FILENAME = 'async-tasks.log' # Log filename\n\n4. Add cron job to execute every minute::\n\n      python manage.py django_async_tasks\n\n\nHow to use?\n-----------\n\n1. Add task to execute ``delayed_task(your_function, **params)``, return identification code\n2. Check is task ready ``ready_task(identification_code)``. Return statuses: ``'PROCESS'``, ``'SUCCESS'``, ``'FAIL'``\n3. Get result ``result_task(identification_code)``\n\n\nExample\n-------\n\n.. code:: python\n\n      from async_tasks.utils import delay_task, ready_task, result_task\n\n      def test(a, b):\n          return a + b\n\n      def test_delay_task():\n          idn = delay_task(test, **{'a': 1, 'b': 2})\n          status = None\n          while status not in ['SUCCESS', 'FAIL']:\n              status = ready_task(idn)\n\n          if status == 'SUCCESS':\n              print result_task(idn)\n          else:\n              print status\n\n\n      if __name__ == \"__main__\":\n          test_delay_task()", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ivansurov/django-async-tasks", "keywords": "task queue,job queue,async tasks,redis,python,django", "license": "GNU General Public License (GPL)", "maintainer": null, "maintainer_email": null, "name": "django-async-tasks", "package_url": "https://pypi.org/project/django-async-tasks/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-async-tasks/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ivansurov/django-async-tasks"}, "release_url": "https://pypi.org/project/django-async-tasks/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Django application. It's a simple system to process queue task in real time.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>It\u2019s a simple system to process queue task in real time.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>python 2.7</li>\n<li>Django 1.6 through Django 1.9</li>\n<li>django-redis-cache</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<ol>\n<li><p>Download it from PyPi with <tt>pip install <span class=\"pre\">django-async-tasks</span></tt></p>\n</li>\n<li><p>Add \u201casync_tasks\u201d to your INSTALLED_APPS setting like this:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'async_tasks',\n)\n</pre>\n</li>\n<li><p>Configure settings</p>\n</li>\n</ol>\n<ul>\n<li><p>Set setting name that defined for Redis in <tt>settings.CACHES</tt>. The default used \u2018default\u2019 setting name.</p>\n<pre>ASYNC_TASKS_REDIS_SETTING_NAME = 'default'\n</pre>\n</li>\n<li><p>Setup log path and log filename. The default used for path <tt>os.path.join(BASE_DIR, 'logs')</tt> and filename <tt><span class=\"pre\">'async-tasks.log'</span></tt>.</p>\n<pre>ASYNC_TASKS_LOG_PATH = os.path.join(BASE_DIR, 'logs') # Log path\nASYNC_TASKS_LOG_FILENAME = 'async-tasks.log' # Log filename\n</pre>\n</li>\n</ul>\n<ol>\n<li><p>Add cron job to execute every minute:</p>\n<pre>python manage.py django_async_tasks\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use?</h2>\n<ol>\n<li>Add task to execute <tt>delayed_task(your_function, **params)</tt>, return identification code</li>\n<li>Check is task ready <tt>ready_task(identification_code)</tt>. Return statuses: <tt>'PROCESS'</tt>, <tt>'SUCCESS'</tt>, <tt>'FAIL'</tt></li>\n<li>Get result <tt>result_task(identification_code)</tt></li>\n</ol>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">async_tasks.utils</span> <span class=\"kn\">import</span> <span class=\"n\">delay_task</span><span class=\"p\">,</span> <span class=\"n\">ready_task</span><span class=\"p\">,</span> <span class=\"n\">result_task</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_delay_task</span><span class=\"p\">():</span>\n    <span class=\"n\">idn</span> <span class=\"o\">=</span> <span class=\"n\">delay_task</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"p\">{</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">})</span>\n    <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"k\">while</span> <span class=\"n\">status</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">'SUCCESS'</span><span class=\"p\">,</span> <span class=\"s1\">'FAIL'</span><span class=\"p\">]:</span>\n        <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">ready_task</span><span class=\"p\">(</span><span class=\"n\">idn</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"s1\">'SUCCESS'</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span> <span class=\"n\">result_task</span><span class=\"p\">(</span><span class=\"n\">idn</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span> <span class=\"n\">status</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">test_delay_task</span><span class=\"p\">()</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2188333, "releases": {"0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "aa3b68a3ad2eb65a6f16dd3fe3ae3986", "sha256": "c8409e090540266da4122f3a727883f209604d2ccbd5ea294c3853cd16a3b09f"}, "downloads": -1, "filename": "django-async-tasks-0.1.1.tar.gz", "has_sig": false, "md5_digest": "aa3b68a3ad2eb65a6f16dd3fe3ae3986", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13231, "upload_time": "2016-06-26T22:35:45", "upload_time_iso_8601": "2016-06-26T22:35:45.478012Z", "url": "https://files.pythonhosted.org/packages/35/14/f092656e3e8fae328cbf76308d631240c5386ec47ec7f8deacf7dd2fdaf1/django-async-tasks-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aa3b68a3ad2eb65a6f16dd3fe3ae3986", "sha256": "c8409e090540266da4122f3a727883f209604d2ccbd5ea294c3853cd16a3b09f"}, "downloads": -1, "filename": "django-async-tasks-0.1.1.tar.gz", "has_sig": false, "md5_digest": "aa3b68a3ad2eb65a6f16dd3fe3ae3986", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13231, "upload_time": "2016-06-26T22:35:45", "upload_time_iso_8601": "2016-06-26T22:35:45.478012Z", "url": "https://files.pythonhosted.org/packages/35/14/f092656e3e8fae328cbf76308d631240c5386ec47ec7f8deacf7dd2fdaf1/django-async-tasks-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:36 2020"}