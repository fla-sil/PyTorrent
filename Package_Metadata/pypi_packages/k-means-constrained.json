{"info": {"author": "Josh Levy-Kramer", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering"], "description": "![Python](https://img.shields.io/badge/python-3.6%20%7C%203.7%20%7C%203.8-blue) [![Build Status](https://travis-ci.com/joshlk/k-mean-constrained.svg?branch=master)](https://travis-ci.com/joshlk/k-mean-constrained)\n[API Documentation](https://joshlk.github.io/k-mean-constrained/)\n\n# k-means-constrained\nK-means clustering implementation whereby a minimum and/or maximum size for each\ncluster can be specified.\n\nThis K-means implementation modifies the cluster assignment step (E in EM)\nby formulating it as a Minimum Cost Flow (MCF) linear network\noptimisation problem. This is then solved using a cost-scaling\npush-relabel algorithm and uses [Google's Operations Research tools's\n`SimpleMinCostFlow`](https://developers.google.com/optimization/flow/mincostflow)\nwhich is a fast C++ implementation.\n\nThis package is inspired by [Bradley et al.](https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/tr-2000-65.pdf).\nThe original Minimum Cost Flow (MCF) network proposed by Bradley et al.\nhas been modified so maximum cluster sizes can also be specified along\nwith minimum cluster size. \n\nThe code is based on [scikit-lean's `KMeans`](http://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html)\nand implements the same API with modifications.\n\nRef:\n1. [Bradley, P. S., K. P. Bennett, and Ayhan Demiriz. \"Constrained k-means clustering.\"\n    Microsoft Research, Redmond (2000): 1-8.](https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/tr-2000-65.pdf)\n2. [Google's SimpleMinCostFlow C++ implementation](https://github.com/google/or-tools/blob/master/ortools/graph/min_cost_flow.h)\n\n# Installation\nYou can install the k-mean-constrained from PyPI:\n\n```\npip install k-mean-constrained\n```\n\nIt is suported on Python 3.6 and above.\n\n# Example\n```python\n>>> from k_means_constrained import KMeansConstrained\n>>> import numpy as np\n>>> X = np.array([[1, 2], [1, 4], [1, 0],\n>>>                [4, 2], [4, 4], [4, 0]])\n>>> clf = KMeansConstrained(\n>>>     n_clusters=2,\n>>>     size_min=2,\n>>>     size_max=5,\n>>>     random_state=0\n>>> )\n>>> clf.fit(X)\narray([0, 0, 0, 1, 1, 1], dtype=int32)\n>>> clf.cluster_centers_\narray([[ 1.,  2.],\n       [ 4.,  2.]])\n>>> clf.predict([[0, 0], [4, 4]])\narray([0, 1], dtype=int32)\n```\n\nFor more details see [API Documentation](https://joshlk.github.io/k-mean-constrained/).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/joshlk/k-mean-constrained", "keywords": "kmeans k-means minimum maximum cluster segmentation size", "license": "", "maintainer": "", "maintainer_email": "", "name": "k-means-constrained", "package_url": "https://pypi.org/project/k-means-constrained/", "platform": "", "project_url": "https://pypi.org/project/k-means-constrained/", "project_urls": {"Homepage": "https://github.com/joshlk/k-mean-constrained"}, "release_url": "https://pypi.org/project/k-means-constrained/0.3.1/", "requires_dist": ["ortools (>=6.7)", "scikit-learn (>=0.19)", "joblib"], "requires_python": ">=3", "summary": "K-Means clustering constrained with minimum and maximum cluster size", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8fbdc39b5b1557575d3fdb5b48e7e40e84984ee9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e36253230253743253230332e37253230253743253230332e382d626c7565\"> <a href=\"https://travis-ci.com/joshlk/k-mean-constrained\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50bfd8d7b70ee1c80c56a5c51900bcd5fda8928a/68747470733a2f2f7472617669732d63692e636f6d2f6a6f73686c6b2f6b2d6d65616e2d636f6e73747261696e65642e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://joshlk.github.io/k-mean-constrained/\" rel=\"nofollow\">API Documentation</a></p>\n<h1>k-means-constrained</h1>\n<p>K-means clustering implementation whereby a minimum and/or maximum size for each\ncluster can be specified.</p>\n<p>This K-means implementation modifies the cluster assignment step (E in EM)\nby formulating it as a Minimum Cost Flow (MCF) linear network\noptimisation problem. This is then solved using a cost-scaling\npush-relabel algorithm and uses <a href=\"https://developers.google.com/optimization/flow/mincostflow\" rel=\"nofollow\">Google's Operations Research tools's\n<code>SimpleMinCostFlow</code></a>\nwhich is a fast C++ implementation.</p>\n<p>This package is inspired by <a href=\"https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/tr-2000-65.pdf\" rel=\"nofollow\">Bradley et al.</a>.\nThe original Minimum Cost Flow (MCF) network proposed by Bradley et al.\nhas been modified so maximum cluster sizes can also be specified along\nwith minimum cluster size.</p>\n<p>The code is based on <a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html\" rel=\"nofollow\">scikit-lean's <code>KMeans</code></a>\nand implements the same API with modifications.</p>\n<p>Ref:</p>\n<ol>\n<li><a href=\"https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/tr-2000-65.pdf\" rel=\"nofollow\">Bradley, P. S., K. P. Bennett, and Ayhan Demiriz. \"Constrained k-means clustering.\"\nMicrosoft Research, Redmond (2000): 1-8.</a></li>\n<li><a href=\"https://github.com/google/or-tools/blob/master/ortools/graph/min_cost_flow.h\" rel=\"nofollow\">Google's SimpleMinCostFlow C++ implementation</a></li>\n</ol>\n<h1>Installation</h1>\n<p>You can install the k-mean-constrained from PyPI:</p>\n<pre><code>pip install k-mean-constrained\n</code></pre>\n<p>It is suported on Python 3.6 and above.</p>\n<h1>Example</h1>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">k_means_constrained</span> <span class=\"kn\">import</span> <span class=\"n\">KMeansConstrained</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n<span class=\"o\">&gt;&gt;&gt;</span>                <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">KMeansConstrained</span><span class=\"p\">(</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"n\">n_clusters</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"n\">size_min</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"n\">size_max</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">)</span>\n<span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">int32</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">cluster_centers_</span>\n<span class=\"n\">array</span><span class=\"p\">([[</span> <span class=\"mf\">1.</span><span class=\"p\">,</span>  <span class=\"mf\">2.</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span> <span class=\"mf\">4.</span><span class=\"p\">,</span>  <span class=\"mf\">2.</span><span class=\"p\">]])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">([[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]])</span>\n<span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">int32</span><span class=\"p\">)</span>\n</pre>\n<p>For more details see <a href=\"https://joshlk.github.io/k-mean-constrained/\" rel=\"nofollow\">API Documentation</a>.</p>\n\n          </div>"}, "last_serial": 6762837, "releases": {"0.3.1": [{"comment_text": "", "digests": {"md5": "53f60071c1bb4dee3ec29db72ff4f072", "sha256": "52915fe3db749f51c89c39200518657c5b7a9ff1b43b1bdf0688200cdf3551ff"}, "downloads": -1, "filename": "k_means_constrained-0.3.1-cp37-cp37m-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "53f60071c1bb4dee3ec29db72ff4f072", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3", "size": 163003, "upload_time": "2020-03-06T15:45:11", "upload_time_iso_8601": "2020-03-06T15:45:11.873856Z", "url": "https://files.pythonhosted.org/packages/bd/b0/8bf9281d3838b6577993ae6c14e9ce417b27cf9f268cc928f2048569c508/k_means_constrained-0.3.1-cp37-cp37m-macosx_10_9_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecfcef4481253e028ebddf5f0f5fc15a", "sha256": "9a141184434116e1b12e0dd3c46dc7e6193f6bb7893c7d000c874a33694ba323"}, "downloads": -1, "filename": "k_means_constrained-0.3.1.tar.gz", "has_sig": false, "md5_digest": "ecfcef4481253e028ebddf5f0f5fc15a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 224810, "upload_time": "2020-03-06T15:45:14", "upload_time_iso_8601": "2020-03-06T15:45:14.869686Z", "url": "https://files.pythonhosted.org/packages/da/d0/77a65151a3ff118d02451eb50663cedd3e5d87dc21e3e828c1fe8a35fcd8/k_means_constrained-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "53f60071c1bb4dee3ec29db72ff4f072", "sha256": "52915fe3db749f51c89c39200518657c5b7a9ff1b43b1bdf0688200cdf3551ff"}, "downloads": -1, "filename": "k_means_constrained-0.3.1-cp37-cp37m-macosx_10_9_x86_64.whl", "has_sig": false, "md5_digest": "53f60071c1bb4dee3ec29db72ff4f072", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3", "size": 163003, "upload_time": "2020-03-06T15:45:11", "upload_time_iso_8601": "2020-03-06T15:45:11.873856Z", "url": "https://files.pythonhosted.org/packages/bd/b0/8bf9281d3838b6577993ae6c14e9ce417b27cf9f268cc928f2048569c508/k_means_constrained-0.3.1-cp37-cp37m-macosx_10_9_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecfcef4481253e028ebddf5f0f5fc15a", "sha256": "9a141184434116e1b12e0dd3c46dc7e6193f6bb7893c7d000c874a33694ba323"}, "downloads": -1, "filename": "k_means_constrained-0.3.1.tar.gz", "has_sig": false, "md5_digest": "ecfcef4481253e028ebddf5f0f5fc15a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 224810, "upload_time": "2020-03-06T15:45:14", "upload_time_iso_8601": "2020-03-06T15:45:14.869686Z", "url": "https://files.pythonhosted.org/packages/da/d0/77a65151a3ff118d02451eb50663cedd3e5d87dc21e3e828c1fe8a35fcd8/k_means_constrained-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:17 2020"}