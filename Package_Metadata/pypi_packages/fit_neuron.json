{"info": {"author": "Nicolas D. Jimenez", "author_email": "nicodjimenez@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Science/Research", "License :: Freely Distributable", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "=============\nfit_neuron\n=============\n\n**fit_neuron** is an easy to use python package for the fast estimation of generalized integrate and fire neural models \nfrom patch clamp electrophysiological recordings.  The optimization routines implements a fitting procedure \ndescribed in [RB2005]_ and [MS2011]_.  The package includes an easy to use interface similar to scikit-learn for fitting models to data and then making predictions with the fitted models.  The routines used can estimate the models described in [RB2005]_, [MN2009]_, and [MS2011]_.  \nAs described in depth in the documentation, the subthreshold \nparameters are estimated using linear regression and the threshold parameters are estimated \nusing maximum likelihood.  The fitting routine is built for speed: it estimates neuron parameters for 10 seconds of data \nin about 50 seconds on a quad core Asus laptop.  *fit_neuron* also contains efficient implementations \nof the following spike distance measures: Victor-Purpura [DA2003]_, van Rossum [VR2001]_, Schreiber [SS2003]_, and Gamma [RJ2008]_\nwhich can be used to evaluate the accuracy of estimated models, as well as provide measures \nof synchrony between spike trains.  \n\n:Date: 2013-12-28\n:Version: 0.0.5\n:Authors: - Nicolas D. Jimenez\n\nLinks \n----------\n\n1) **Pypi** \n\nThe latest stable version is available to download at: https://pypi.python.org/pypi/fit_neuron.\n\n2)  **GitHub**\n\nThe latest development version is available at: https://github.com/nicodjimenez/fit_neuron.  All relevant contributions are welcome \nand fast review of pull requests is guaranteed.  \n\n3)  **Documentation**   \n\nSphinx documentation for this package is available at: http://pythonhosted.org/fit_neuron/.\n\n\nDependencies\n-------------\n\n1) **Numpy** \n\nThe standard python module for matrix and vector computations: https://pypi.python.org/pypi/numpy.\n\n2) **Scipy** \n\nThe standard python module for statistical analysis: http://www.scipy.org/install.html.\n\n3) **Matplotlib**\n\nThe standard python module for data visualization: http://matplotlib.org/users/installing.html.\n\nInstallation \n-----------------------\n\nThe fit_neuron package can be installed as follows::\n\n\tsudo pip install fit_neuron\n\t\n\nThe data for the fit_neuron package is then installed as follows::\n\n\tsudo python -m fit_neuron.data.dl_neuron_data\n\t\n\t\n.. warning:: \n\tRunning this script for the first time will download a 300 MB zip file containing test recordings \n\twhich is then unzipped to over 1 GB of text files in the installation directory of the *fit_neuron* \n\tpackage.  This may take up to 20 minutes depending on your bandwidth.  After the files are downloaded, the test \n\tdata will be easily accessible via the *fit_neuron.data* package.  \n\n\t\nTesting\n------------\nThere are two testing scripts that may be used.  Both scripts are \ndescribed in the documentation (http://pythonhosted.org/fit_neuron/).\n\nThe first script is far simpler and easier to understand but is less configurable::\n\n\tpython -m fit_neuron.tests.test_model\n\n\nThe more complicated and configurable testing script for fit_neuron can be run as follows:: \n\n\tpython -m fit_neuron.tests.test\n\n\nThis will create a directory called *test_output_figures* in the current directory.  \n\nFeel free to contact me at nicodjimenez [at] gmail.com if you have any questions / comments.  \n\nReferences\n------------------\n\n.. [RB2005] Brette, Romain, and Wulfram Gerstner. \"Adaptive exponential integrate-and-fire model as an effective description of neuronal activity.\" \n\t\t\tJournal of neurophysiology 94.5 (2005): 3637-3642.\n\t\t\t\n.. [MN2009] Mihalas, Stefan, and Ernst Niebur. \"A generalized linear integrate-and-fire neural model produces diverse spiking behaviors.\" \n\t\t\tNeural computation 21.3 (2009): 704-718.\n\t\t\t\n.. [MS2011] Mensi, Skander, et al. \"Parameter extraction and classification of three cortical neuron types reveals two distinct adaptation mechanisms.\" \n\t\t\tJournal of neurophysiology 107.6 (2012): 1756-1775.\n\n.. [RJ2008] Jolivet, Renaud, et al. \"A benchmark test for a quantitative assessment of simple neuron models.\" \n\t\t\tJournal of neuroscience methods 169.2 (2008): 417-424.\n\t\t\t\n.. [SS2003] Schreiber, S., et al. \"A new correlation-based measure of spike timing reliability.\" \n\t\t\tNeurocomputing 52 (2003): 925-931.\n\t\t\t\n.. [VR2001] van Rossum, Mark CW. \"A novel spike distance.\" \n\t\t\tNeural Computation 13.4 (2001): 751-763.\n\t\t\t\n.. [DA2003] Aronov, Dmitriy. \"Fast algorithm for the metric-space analysis \n\t\t\tof simultaneous responses of multiple single neurons.\" Journal \n\t\t\tof Neuroscience Methods 124.2 (2003): 175-179.", "description_content_type": null, "docs_url": "https://pythonhosted.org/fit_neuron/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pythonhosted.org/fit_neuron", "keywords": "neuron linear integrate and fire patch clamp fitting parameter estimation spike distance metrics", "license": "Apache", "maintainer": null, "maintainer_email": null, "name": "fit_neuron", "package_url": "https://pypi.org/project/fit_neuron/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fit_neuron/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pythonhosted.org/fit_neuron"}, "release_url": "https://pypi.org/project/fit_neuron/0.0.6/", "requires_dist": null, "requires_python": null, "summary": "Package for estimation and evaluation of neural models from patch clamp neural recordings.", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>fit_neuron</strong> is an easy to use python package for the fast estimation of generalized integrate and fire neural models\nfrom patch clamp electrophysiological recordings.  The optimization routines implements a fitting procedure\ndescribed in <a href=\"#rb2005\" id=\"id1\" rel=\"nofollow\">[RB2005]</a> and <a href=\"#ms2011\" id=\"id2\" rel=\"nofollow\">[MS2011]</a>.  The package includes an easy to use interface similar to scikit-learn for fitting models to data and then making predictions with the fitted models.  The routines used can estimate the models described in <a href=\"#rb2005\" id=\"id3\" rel=\"nofollow\">[RB2005]</a>, <a href=\"#mn2009\" id=\"id4\" rel=\"nofollow\">[MN2009]</a>, and <a href=\"#ms2011\" id=\"id5\" rel=\"nofollow\">[MS2011]</a>.\nAs described in depth in the documentation, the subthreshold\nparameters are estimated using linear regression and the threshold parameters are estimated\nusing maximum likelihood.  The fitting routine is built for speed: it estimates neuron parameters for 10 seconds of data\nin about 50 seconds on a quad core Asus laptop.  <em>fit_neuron</em> also contains efficient implementations\nof the following spike distance measures: Victor-Purpura <a href=\"#da2003\" id=\"id6\" rel=\"nofollow\">[DA2003]</a>, van Rossum <a href=\"#vr2001\" id=\"id7\" rel=\"nofollow\">[VR2001]</a>, Schreiber <a href=\"#ss2003\" id=\"id8\" rel=\"nofollow\">[SS2003]</a>, and Gamma <a href=\"#rj2008\" id=\"id9\" rel=\"nofollow\">[RJ2008]</a>\nwhich can be used to evaluate the accuracy of estimated models, as well as provide measures\nof synchrony between spike trains.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Date:</th><td><p>2013-12-28</p>\n</td>\n</tr>\n<tr><th>Version:</th><td><p>0.0.5</p>\n</td>\n</tr>\n<tr><th>Authors:</th><td><ul>\n<li>Nicolas D. Jimenez</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<div id=\"links\">\n<h2>Links</h2>\n<ol>\n<li><strong>Pypi</strong></li>\n</ol>\n<p>The latest stable version is available to download at: <a href=\"https://pypi.python.org/pypi/fit_neuron\" rel=\"nofollow\">https://pypi.python.org/pypi/fit_neuron</a>.</p>\n<ol>\n<li><strong>GitHub</strong></li>\n</ol>\n<p>The latest development version is available at: <a href=\"https://github.com/nicodjimenez/fit_neuron\" rel=\"nofollow\">https://github.com/nicodjimenez/fit_neuron</a>.  All relevant contributions are welcome\nand fast review of pull requests is guaranteed.</p>\n<ol>\n<li><strong>Documentation</strong></li>\n</ol>\n<p>Sphinx documentation for this package is available at: <a href=\"http://pythonhosted.org/fit_neuron/\" rel=\"nofollow\">http://pythonhosted.org/fit_neuron/</a>.</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ol>\n<li><strong>Numpy</strong></li>\n</ol>\n<p>The standard python module for matrix and vector computations: <a href=\"https://pypi.python.org/pypi/numpy\" rel=\"nofollow\">https://pypi.python.org/pypi/numpy</a>.</p>\n<ol>\n<li><strong>Scipy</strong></li>\n</ol>\n<p>The standard python module for statistical analysis: <a href=\"http://www.scipy.org/install.html\" rel=\"nofollow\">http://www.scipy.org/install.html</a>.</p>\n<ol>\n<li><strong>Matplotlib</strong></li>\n</ol>\n<p>The standard python module for data visualization: <a href=\"http://matplotlib.org/users/installing.html\" rel=\"nofollow\">http://matplotlib.org/users/installing.html</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The fit_neuron package can be installed as follows:</p>\n<pre>sudo pip install fit_neuron\n</pre>\n<p>The data for the fit_neuron package is then installed as follows:</p>\n<pre>sudo python -m fit_neuron.data.dl_neuron_data\n</pre>\n<div>\n<p>Warning</p>\n<p>Running this script for the first time will download a 300 MB zip file containing test recordings\nwhich is then unzipped to over 1 GB of text files in the installation directory of the <em>fit_neuron</em>\npackage.  This may take up to 20 minutes depending on your bandwidth.  After the files are downloaded, the test\ndata will be easily accessible via the <em>fit_neuron.data</em> package.</p>\n</div>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>There are two testing scripts that may be used.  Both scripts are\ndescribed in the documentation (<a href=\"http://pythonhosted.org/fit_neuron/\" rel=\"nofollow\">http://pythonhosted.org/fit_neuron/</a>).</p>\n<p>The first script is far simpler and easier to understand but is less configurable:</p>\n<pre>python -m fit_neuron.tests.test_model\n</pre>\n<p>The more complicated and configurable testing script for fit_neuron can be run as follows:</p>\n<pre>python -m fit_neuron.tests.test\n</pre>\n<p>This will create a directory called <em>test_output_figures</em> in the current directory.</p>\n<p>Feel free to contact me at nicodjimenez [at] gmail.com if you have any questions / comments.</p>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<table id=\"rb2005\">\n<col><col>\n<tbody>\n<tr><td>[RB2005]</td><td><em>(<a href=\"#id1\" rel=\"nofollow\">1</a>, <a href=\"#id3\" rel=\"nofollow\">2</a>)</em> Brette, Romain, and Wulfram Gerstner. \u201cAdaptive exponential integrate-and-fire model as an effective description of neuronal activity.\u201d\nJournal of neurophysiology 94.5 (2005): 3637-3642.</td></tr>\n</tbody>\n</table>\n<table id=\"mn2009\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id4\" rel=\"nofollow\">[MN2009]</a></td><td>Mihalas, Stefan, and Ernst Niebur. \u201cA generalized linear integrate-and-fire neural model produces diverse spiking behaviors.\u201d\nNeural computation 21.3 (2009): 704-718.</td></tr>\n</tbody>\n</table>\n<table id=\"ms2011\">\n<col><col>\n<tbody>\n<tr><td>[MS2011]</td><td><em>(<a href=\"#id2\" rel=\"nofollow\">1</a>, <a href=\"#id5\" rel=\"nofollow\">2</a>)</em> Mensi, Skander, et al. \u201cParameter extraction and classification of three cortical neuron types reveals two distinct adaptation mechanisms.\u201d\nJournal of neurophysiology 107.6 (2012): 1756-1775.</td></tr>\n</tbody>\n</table>\n<table id=\"rj2008\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id9\" rel=\"nofollow\">[RJ2008]</a></td><td>Jolivet, Renaud, et al. \u201cA benchmark test for a quantitative assessment of simple neuron models.\u201d\nJournal of neuroscience methods 169.2 (2008): 417-424.</td></tr>\n</tbody>\n</table>\n<table id=\"ss2003\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id8\" rel=\"nofollow\">[SS2003]</a></td><td>Schreiber, S., et al. \u201cA new correlation-based measure of spike timing reliability.\u201d\nNeurocomputing 52 (2003): 925-931.</td></tr>\n</tbody>\n</table>\n<table id=\"vr2001\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id7\" rel=\"nofollow\">[VR2001]</a></td><td>van Rossum, Mark CW. \u201cA novel spike distance.\u201d\nNeural Computation 13.4 (2001): 751-763.</td></tr>\n</tbody>\n</table>\n<table id=\"da2003\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id6\" rel=\"nofollow\">[DA2003]</a></td><td>Aronov, Dmitriy. \u201cFast algorithm for the metric-space analysis\nof simultaneous responses of multiple single neurons.\u201d Journal\nof Neuroscience Methods 124.2 (2003): 175-179.</td></tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 1052362, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "658c26796458231fd474c8bddacb1f76", "sha256": "ed5d8cccc277febafe9e6b5560d87c26f399c6d5044baeb40c91860a2c65d1f0"}, "downloads": -1, "filename": "fit_neuron-0.0.3.tar.gz", "has_sig": false, "md5_digest": "658c26796458231fd474c8bddacb1f76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27351, "upload_time": "2013-08-11T17:04:58", "upload_time_iso_8601": "2013-08-11T17:04:58.975155Z", "url": "https://files.pythonhosted.org/packages/a8/db/27a1c0f0668e4d0d7f16bbf0c1e2478485a3a0d81d4308c9e42672788c2b/fit_neuron-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "25a29707e7cb58beedfa9bfdec9679e8", "sha256": "f3db9c38799895473c398cdefea610c6ab94442a321e23b8c523ffaa289f5ea6"}, "downloads": -1, "filename": "fit_neuron-0.0.4.tar.gz", "has_sig": false, "md5_digest": "25a29707e7cb58beedfa9bfdec9679e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31051, "upload_time": "2013-09-06T03:05:41", "upload_time_iso_8601": "2013-09-06T03:05:41.321656Z", "url": "https://files.pythonhosted.org/packages/9e/73/2bc7af2e82e3483235ca51e2a80204546dcc37386192086b98554e186bd5/fit_neuron-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "5132cbe7da6c43bab3e9d3c9d9d68051", "sha256": "19356be04614a03b4e009350a6dbcf98f1eb128e9d57db55f81399860b99bf45"}, "downloads": -1, "filename": "fit_neuron-0.0.5.tar.gz", "has_sig": false, "md5_digest": "5132cbe7da6c43bab3e9d3c9d9d68051", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32278, "upload_time": "2013-12-29T02:58:07", "upload_time_iso_8601": "2013-12-29T02:58:07.639530Z", "url": "https://files.pythonhosted.org/packages/a9/ad/7274c528bcb1541a01fc30eb11cd91999b17eddfb114a5b9a21845103208/fit_neuron-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "4c0db9849a1d78b173561f815efaad91", "sha256": "97e07b34822a8c862117d7bb79c109c081f1b6c8ed76faecc80f65cb2142e64b"}, "downloads": -1, "filename": "fit_neuron-0.0.6.tar.gz", "has_sig": false, "md5_digest": "4c0db9849a1d78b173561f815efaad91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32138, "upload_time": "2014-04-06T05:07:23", "upload_time_iso_8601": "2014-04-06T05:07:23.907032Z", "url": "https://files.pythonhosted.org/packages/70/15/2153eb907ae40b6c1f572eaea7f525f76e6cc551336219ec786a38a49b76/fit_neuron-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4c0db9849a1d78b173561f815efaad91", "sha256": "97e07b34822a8c862117d7bb79c109c081f1b6c8ed76faecc80f65cb2142e64b"}, "downloads": -1, "filename": "fit_neuron-0.0.6.tar.gz", "has_sig": false, "md5_digest": "4c0db9849a1d78b173561f815efaad91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32138, "upload_time": "2014-04-06T05:07:23", "upload_time_iso_8601": "2014-04-06T05:07:23.907032Z", "url": "https://files.pythonhosted.org/packages/70/15/2153eb907ae40b6c1f572eaea7f525f76e6cc551336219ec786a38a49b76/fit_neuron-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:06 2020"}