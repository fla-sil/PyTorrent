{"info": {"author": "Christophe Brun", "author_email": "christophe.brun.cl194@gadz.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: BSD License", "Topic :: Utilities"], "description": "testlinkconsole\n===============\n[![Build Status](https://travis-ci.org/chbrun/testlinkconsole.svg?branch=master)](https://travis-ci.org/chbrun/testlinkconsole)\n[![Coverage Status](https://coveralls.io/repos/chbrun/testlinkconsole/badge.png?branch=master)](https://coveralls.io/r/chbrun/testlinkconsole?branch=master)\n\nTestlink console run script test with behat. \n\nInstallation\n============\n\n## github\n* Clonning repo\n* change settings in testlinkclient.cfg : serverUrl and serverKey (serverKey is in testlink)\n* Add custom variable in testlink :\n  * scriptBehat : type string. It contains path to testcase file.\n  * Browsers : type checkbox : Browser to use for testcase\n\n## package pypi\nTo install testlinkconsole with pip, simply : \n```bash\n pip install testlinkconsole\n```\n\nUsage\n=====\n\n* start console with\n```bash\ntestlinkconsole\n```\n* Configure testlink access :\n```bash\nconfig\nset serverUrl http://[monserver]/\nset serverKey [APIKey]\n```\n>APIKey is on the project page in testlink\n\n* you must setting a project id \n```bash\nlist projects\nset projectid [num of project]\n```\n* then set a testplan\n```\nlist testplans\nset testplanid [num of testplan]\n```\n* Finally run test plan\n```bash\nrun\n```\n>You must have behat and selenium installed et run selenium with\n\n```bash\njava -jar Selenium-[version].jar\n```\n\n\nConsole command\n===============\n* help   : commands help\n* save   : save config (testlinkclient.dfg)\n* list   : list projects, testplans, testcases, ...\n  * Rmq : list testplans is only available when projectid is valued\n* config : affiche les variables de la console\n* set    : set variable (projectid, testplanid, ...)\n  * Ex : set projectid 1 \n* get  : get value of variable\n* run  : run test plan\n\n> Note that the console will automatically reload the cfg file at startup, which avoids upgrade variables for each use\n\n\nTODO\n====\n- [ ] cmd run : run one test\n- [ ] add variable UserAgent \n- [X] plugins system \n- [ ] report system\n- [ ] Storage system \n  - [ ] : testlink storage : 50%\n  - [ ] : local storage\n- [ ] runner plugins\n  - [X] : Behat\n  - [ ] : Behave\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chbrun/testlinkconsole", "keywords": "console testlink", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "testlinkconsole", "package_url": "https://pypi.org/project/testlinkconsole/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/testlinkconsole/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/chbrun/testlinkconsole"}, "release_url": "https://pypi.org/project/testlinkconsole/0.3/", "requires_dist": null, "requires_python": null, "summary": "Testlink Console", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            testlinkconsole<br>===============<br>[![Build Status](https://travis-ci.org/chbrun/testlinkconsole.svg?branch=master)](https://travis-ci.org/chbrun/testlinkconsole)<br>[![Coverage Status](https://coveralls.io/repos/chbrun/testlinkconsole/badge.png?branch=master)](https://coveralls.io/r/chbrun/testlinkconsole?branch=master)<br><br>Testlink console run script test with behat. <br><br>Installation<br>============<br><br>## github<br>* Clonning repo<br>* change settings in testlinkclient.cfg : serverUrl and serverKey (serverKey is in testlink)<br>* Add custom variable in testlink :<br>  * scriptBehat : type string. It contains path to testcase file.<br>  * Browsers : type checkbox : Browser to use for testcase<br><br>## package pypi<br>To install testlinkconsole with pip, simply : <br>```bash<br> pip install testlinkconsole<br>```<br><br>Usage<br>=====<br><br>* start console with<br>```bash<br>testlinkconsole<br>```<br>* Configure testlink access :<br>```bash<br>config<br>set serverUrl http://[monserver]/<br>set serverKey [APIKey]<br>```<br>&gt;APIKey is on the project page in testlink<br><br>* you must setting a project id <br>```bash<br>list projects<br>set projectid [num of project]<br>```<br>* then set a testplan<br>```<br>list testplans<br>set testplanid [num of testplan]<br>```<br>* Finally run test plan<br>```bash<br>run<br>```<br>&gt;You must have behat and selenium installed et run selenium with<br><br>```bash<br>java -jar Selenium-[version].jar<br>```<br><br><br>Console command<br>===============<br>* help   : commands help<br>* save   : save config (testlinkclient.dfg)<br>* list   : list projects, testplans, testcases, ...<br>  * Rmq : list testplans is only available when projectid is valued<br>* config : affiche les variables de la console<br>* set    : set variable (projectid, testplanid, ...)<br>  * Ex : set projectid 1 <br>* get  : get value of variable<br>* run  : run test plan<br><br>&gt; Note that the console will automatically reload the cfg file at startup, which avoids upgrade variables for each use<br><br><br>TODO<br>====<br>- [ ] cmd run : run one test<br>- [ ] add variable UserAgent <br>- [X] plugins system <br>- [ ] report system<br>- [ ] Storage system <br>  - [ ] : testlink storage : 50%<br>  - [ ] : local storage<br>- [ ] runner plugins<br>  - [X] : Behat<br>  - [ ] : Behave<br>\n          </div>"}, "last_serial": 1160513, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "750a457d0fc60dea6df178b079648160", "sha256": "74ebfa8e8855105f6d512283f1fdd123921285a75209f338ba162d4ba60f14d3"}, "downloads": -1, "filename": "testlinkconsole-0.1.tar.gz", "has_sig": false, "md5_digest": "750a457d0fc60dea6df178b079648160", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27120, "upload_time": "2014-07-09T11:56:27", "upload_time_iso_8601": "2014-07-09T11:56:27.005102Z", "url": "https://files.pythonhosted.org/packages/44/1b/b648f5f0fd31b7837d2aa8084ea054743e832d4c370ae8d302afe5774c6f/testlinkconsole-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "33fe0431a64d26fbec8e2198609f29b7", "sha256": "648c696fb166b43ea8b7f9a1e09e341e5cbf92c1803b7ae887e534a56116cafd"}, "downloads": -1, "filename": "testlinkconsole-0.2.tar.gz", "has_sig": false, "md5_digest": "33fe0431a64d26fbec8e2198609f29b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29390, "upload_time": "2014-07-09T21:20:31", "upload_time_iso_8601": "2014-07-09T21:20:31.984048Z", "url": "https://files.pythonhosted.org/packages/e7/9e/4b23c8c9e0e9d4c4d6321c0bf517b35d20c7ba3aeb699e7c11d956463a83/testlinkconsole-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "73a9d19eb22f415884f80c3733053925", "sha256": "c3a33a59108b11ad221c0b8e9ac13c022029846d75b232e8bc4cc4ed9087b763"}, "downloads": -1, "filename": "testlinkconsole-0.3.tar.gz", "has_sig": false, "md5_digest": "73a9d19eb22f415884f80c3733053925", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29966, "upload_time": "2014-07-17T08:27:00", "upload_time_iso_8601": "2014-07-17T08:27:00.541236Z", "url": "https://files.pythonhosted.org/packages/f3/dc/5e7d22091bece9da78f92a1ff6a648720f034a851947e378c360beea40ce/testlinkconsole-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "73a9d19eb22f415884f80c3733053925", "sha256": "c3a33a59108b11ad221c0b8e9ac13c022029846d75b232e8bc4cc4ed9087b763"}, "downloads": -1, "filename": "testlinkconsole-0.3.tar.gz", "has_sig": false, "md5_digest": "73a9d19eb22f415884f80c3733053925", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29966, "upload_time": "2014-07-17T08:27:00", "upload_time_iso_8601": "2014-07-17T08:27:00.541236Z", "url": "https://files.pythonhosted.org/packages/f3/dc/5e7d22091bece9da78f92a1ff6a648720f034a851947e378c360beea40ce/testlinkconsole-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:25 2020"}