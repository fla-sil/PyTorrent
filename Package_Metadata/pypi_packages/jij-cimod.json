{"info": {"author": "Jij Inc.", "author_email": "openjij@j-ij.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python"], "description": "# cimod : C++ header-only library for a binary quadratic model \n\n* [Documents](https://openjij.github.io/cimod/html/index.html)\n\n# How to use\n\nYou should just include a header `src/binary_quadratic_model.hpp` in your project.\n\n## Example\n\n### C++\n\n```cpp\n#include \"src/binary_quadratic_model.hpp\"\n\nusing namespace cimod;\nint main()\n{\n// Set linear biases and quadratic biases\nLinear<uint32_t, double> linear{ {1, 1.0}, {2, 2.0}, {3, 3.0}, {4, 4.0} };\nQuadratic<uint32_t, double> quadratic\n{\n     {std::make_pair(1, 2), 12.0}, {std::make_pair(1, 3), 13.0}, {std::make_pair(1, 4), 14.0},\n     {std::make_pair(2, 3), 23.0}, {std::make_pair(2, 4), 24.0},\n     {std::make_pair(3, 4), 34.0}\n };\n\n// Set offset\ndouble offset = 0.0;\n\n// Set variable type\nVartype vartype = Vartype::BINARY;\n// Create a BinaryQuadraticModel instance\nBinaryQuadraticModel<uint32_t, double> bqm(linear, quadratic, offset, vartype);\n\n// Print informations of bqm\nbqm.print();\n\nreturn 0;\n}\n```\n\n### Python\n\n```python\nimport cimod\nimport dimod\n\n# Set linear biases and quadratic biases\nlinear = {1:1.0, 2:2.0, 3:3.0, 4:4.0}\nquadratic = {(1,2):12.0, (1,3):13.0, (1,4):14.0, (2,3):23.0, (2,4):24.0, (3,4):34.0}\n\n# Set offset\noffset = 0.0\n\n# Set variable type\nvartype = dimod.BINARY\n\n# Create a BinaryQuadraticModel instance\nbqm = cimod.BinaryQuadraticModel(linear, quadratic, offset, vartype)\n\n# Print informations of bqm\nbqm.print()\n```\n\n## Install (via python)\n\n```sh\n$ python setup.py install\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://openjij.github.io/OpenJij/", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "jij-cimod", "package_url": "https://pypi.org/project/jij-cimod/", "platform": "", "project_url": "https://pypi.org/project/jij-cimod/", "project_urls": {"Homepage": "https://openjij.github.io/OpenJij/"}, "release_url": "https://pypi.org/project/jij-cimod/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "C++ library for a binary quadratic model", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>cimod : C++ header-only library for a binary quadratic model</h1>\n<ul>\n<li><a href=\"https://openjij.github.io/cimod/html/index.html\" rel=\"nofollow\">Documents</a></li>\n</ul>\n<h1>How to use</h1>\n<p>You should just include a header <code>src/binary_quadratic_model.hpp</code> in your project.</p>\n<h2>Example</h2>\n<h3>C++</h3>\n<pre><span class=\"cp\">#include</span> <span class=\"cpf\">\"src/binary_quadratic_model.hpp\"</span><span class=\"cp\"></span>\n\n<span class=\"k\">using</span> <span class=\"k\">namespace</span> <span class=\"n\">cimod</span><span class=\"p\">;</span>\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"c1\">// Set linear biases and quadratic biases</span>\n<span class=\"n\">Linear</span><span class=\"o\">&lt;</span><span class=\"kt\">uint32_t</span><span class=\"p\">,</span> <span class=\"kt\">double</span><span class=\"o\">&gt;</span> <span class=\"n\">linear</span><span class=\"p\">{</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mf\">4.0</span><span class=\"p\">}</span> <span class=\"p\">};</span>\n<span class=\"n\">Quadratic</span><span class=\"o\">&lt;</span><span class=\"kt\">uint32_t</span><span class=\"p\">,</span> <span class=\"kt\">double</span><span class=\"o\">&gt;</span> <span class=\"n\">quadratic</span>\n<span class=\"p\">{</span>\n     <span class=\"p\">{</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">make_pair</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"mf\">12.0</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">make_pair</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"mf\">13.0</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">make_pair</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"mf\">14.0</span><span class=\"p\">},</span>\n     <span class=\"p\">{</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">make_pair</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"mf\">23.0</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">make_pair</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"mf\">24.0</span><span class=\"p\">},</span>\n     <span class=\"p\">{</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">make_pair</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"mf\">34.0</span><span class=\"p\">}</span>\n <span class=\"p\">};</span>\n\n<span class=\"c1\">// Set offset</span>\n<span class=\"kt\">double</span> <span class=\"n\">offset</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span><span class=\"p\">;</span>\n\n<span class=\"c1\">// Set variable type</span>\n<span class=\"n\">Vartype</span> <span class=\"n\">vartype</span> <span class=\"o\">=</span> <span class=\"n\">Vartype</span><span class=\"o\">::</span><span class=\"n\">BINARY</span><span class=\"p\">;</span>\n<span class=\"c1\">// Create a BinaryQuadraticModel instance</span>\n<span class=\"n\">BinaryQuadraticModel</span><span class=\"o\">&lt;</span><span class=\"kt\">uint32_t</span><span class=\"p\">,</span> <span class=\"kt\">double</span><span class=\"o\">&gt;</span> <span class=\"n\">bqm</span><span class=\"p\">(</span><span class=\"n\">linear</span><span class=\"p\">,</span> <span class=\"n\">quadratic</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"p\">,</span> <span class=\"n\">vartype</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// Print informations of bqm</span>\n<span class=\"n\">bqm</span><span class=\"p\">.</span><span class=\"n\">print</span><span class=\"p\">();</span>\n\n<span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Python</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cimod</span>\n<span class=\"kn\">import</span> <span class=\"nn\">dimod</span>\n\n<span class=\"c1\"># Set linear biases and quadratic biases</span>\n<span class=\"n\">linear</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"mf\">3.0</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"mf\">4.0</span><span class=\"p\">}</span>\n<span class=\"n\">quadratic</span> <span class=\"o\">=</span> <span class=\"p\">{(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">):</span><span class=\"mf\">12.0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">):</span><span class=\"mf\">13.0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">):</span><span class=\"mf\">14.0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">):</span><span class=\"mf\">23.0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">):</span><span class=\"mf\">24.0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">):</span><span class=\"mf\">34.0</span><span class=\"p\">}</span>\n\n<span class=\"c1\"># Set offset</span>\n<span class=\"n\">offset</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>\n\n<span class=\"c1\"># Set variable type</span>\n<span class=\"n\">vartype</span> <span class=\"o\">=</span> <span class=\"n\">dimod</span><span class=\"o\">.</span><span class=\"n\">BINARY</span>\n\n<span class=\"c1\"># Create a BinaryQuadraticModel instance</span>\n<span class=\"n\">bqm</span> <span class=\"o\">=</span> <span class=\"n\">cimod</span><span class=\"o\">.</span><span class=\"n\">BinaryQuadraticModel</span><span class=\"p\">(</span><span class=\"n\">linear</span><span class=\"p\">,</span> <span class=\"n\">quadratic</span><span class=\"p\">,</span> <span class=\"n\">offset</span><span class=\"p\">,</span> <span class=\"n\">vartype</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Print informations of bqm</span>\n<span class=\"n\">bqm</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">()</span>\n</pre>\n<h2>Install (via python)</h2>\n<pre>$ python setup.py install\n</pre>\n\n          </div>"}, "last_serial": 7107867, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "1e01f098d5787a067b924e876cb6a2fc", "sha256": "c8c17e9ade5aba920b2f5231bf1300578d41c2db4d669cc7b1f0889da2ee5dd9"}, "downloads": -1, "filename": "jij_cimod-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1e01f098d5787a067b924e876cb6a2fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152190, "upload_time": "2020-04-16T01:54:01", "upload_time_iso_8601": "2020-04-16T01:54:01.612119Z", "url": "https://files.pythonhosted.org/packages/29/1c/4c3955935910e8f40654d5b19bb07b512afd6169cf6a762faa466d70ea8e/jij_cimod-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "df046578f139a11367cdf1ca26d385bf", "sha256": "04da3b4ea044ec3b27adf4724f4936775423e078afc7f24a9b4f015b1e633492"}, "downloads": -1, "filename": "jij_cimod-1.0.1.tar.gz", "has_sig": false, "md5_digest": "df046578f139a11367cdf1ca26d385bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152586, "upload_time": "2020-04-16T15:49:13", "upload_time_iso_8601": "2020-04-16T15:49:13.447183Z", "url": "https://files.pythonhosted.org/packages/55/04/d631b4bd3dbc331055e585f944377d6830532bad94d3bee2f86c39857f5b/jij_cimod-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "cdfed29ef88bb56efd0b48c89bab20ce", "sha256": "49a944f606a30363d784014cc35c6a89943ec7b4e37e01bfc7f38e92f82ff8dd"}, "downloads": -1, "filename": "jij_cimod-1.0.2.tar.gz", "has_sig": false, "md5_digest": "cdfed29ef88bb56efd0b48c89bab20ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 155868, "upload_time": "2020-04-27T00:51:36", "upload_time_iso_8601": "2020-04-27T00:51:36.188511Z", "url": "https://files.pythonhosted.org/packages/a4/2a/09c6bb8f7b5ae80f64fc2d466b6ed1e4a1a5fe3bb15cd8a6e547f942c553/jij_cimod-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cdfed29ef88bb56efd0b48c89bab20ce", "sha256": "49a944f606a30363d784014cc35c6a89943ec7b4e37e01bfc7f38e92f82ff8dd"}, "downloads": -1, "filename": "jij_cimod-1.0.2.tar.gz", "has_sig": false, "md5_digest": "cdfed29ef88bb56efd0b48c89bab20ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 155868, "upload_time": "2020-04-27T00:51:36", "upload_time_iso_8601": "2020-04-27T00:51:36.188511Z", "url": "https://files.pythonhosted.org/packages/a4/2a/09c6bb8f7b5ae80f64fc2d466b6ed1e4a1a5fe3bb15cd8a6e547f942c553/jij_cimod-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:42 2020"}