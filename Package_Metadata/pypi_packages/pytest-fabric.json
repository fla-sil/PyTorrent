{"info": {"author": "Evan Fagerberg", "author_email": "adioevan@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Testing"], "description": "pytest-fabric\n-------------\n\n.. image:: https://travis-ci.org/efagerberg/pytest-fabric.svg?branch=master\n    :target: https://travis-ci.org/efagerberg/pytest-fabric\n\n\nRequirements\n============\n\n- Python 2.7\n- Fabric 1.14.0\n\n\nTODOs (will make into issues eventually)\n========================================\n\n* Only runs one host right now if using `fabric_host` fixture (Support multiple container)\n\n\nUsage\n=====\n\n``fabric_host`` will set up the fabric environment to be SSHable\nThe object is a `docker.models.containers.Container` object.\n\nFrom here, users should be able to exec into the container to check\nthings like the image files and such.\n\nNote: This should work for docker-machine or docker\n\n.. code:: python\n\n    from fabric.api import execute\n\n    from .fabric_tasks import create_readme\n\n\n    def test_fabric_task_executes(fabric_host):\n        execute(create_readme)\n        ls_results = fabric_host.exec_run('ls /tmp/')\n        assert ls_results[1].strip() == 'README.rst'\n\n\nNote: pytest-capture does not like when we try to actually write to stdout like in fabric so make sure to add ``-s`` to your pytest args\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/efagerberg/pytest-fabric", "keywords": "fabric docker pytest python", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pytest-fabric", "package_url": "https://pypi.org/project/pytest-fabric/", "platform": "", "project_url": "https://pypi.org/project/pytest-fabric/", "project_urls": {"Homepage": "http://github.com/efagerberg/pytest-fabric"}, "release_url": "https://pypi.org/project/pytest-fabric/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Provides test utilities to run fabric task tests by using docker containers", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/efagerberg/pytest-fabric\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/efagerberg/pytest-fabric.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/584aa78dd8760055ac3a89b3d5273a04b72a4af2/68747470733a2f2f7472617669732d63692e6f72672f656661676572626572672f7079746573742d6661627269632e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 2.7</li>\n<li>Fabric 1.14.0</li>\n</ul>\n</div>\n<div id=\"todos-will-make-into-issues-eventually\">\n<h2>TODOs (will make into issues eventually)</h2>\n<ul>\n<li>Only runs one host right now if using <cite>fabric_host</cite> fixture (Support multiple container)</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><tt>fabric_host</tt> will set up the fabric environment to be SSHable\nThe object is a <cite>docker.models.containers.Container</cite> object.</p>\n<p>From here, users should be able to exec into the container to check\nthings like the image files and such.</p>\n<p>Note: This should work for docker-machine or docker</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fabric.api</span> <span class=\"kn\">import</span> <span class=\"n\">execute</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.fabric_tasks</span> <span class=\"kn\">import</span> <span class=\"n\">create_readme</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">test_fabric_task_executes</span><span class=\"p\">(</span><span class=\"n\">fabric_host</span><span class=\"p\">):</span>\n    <span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">create_readme</span><span class=\"p\">)</span>\n    <span class=\"n\">ls_results</span> <span class=\"o\">=</span> <span class=\"n\">fabric_host</span><span class=\"o\">.</span><span class=\"n\">exec_run</span><span class=\"p\">(</span><span class=\"s1\">'ls /tmp/'</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">ls_results</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s1\">'README.rst'</span>\n</pre>\n<p>Note: pytest-capture does not like when we try to actually write to stdout like in fabric so make sure to add <tt><span class=\"pre\">-s</span></tt> to your pytest args</p>\n</div>\n\n          </div>"}, "last_serial": 4265647, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "f9f5b9f3f32b7f949fa9f666e9e50105", "sha256": "13b56c190a7a79f24431a976a7cc8f778cdd0f5d322c12da85bfc819b46c26bc"}, "downloads": -1, "filename": "pytest-fabric-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f9f5b9f3f32b7f949fa9f666e9e50105", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3706, "upload_time": "2018-09-12T16:41:24", "upload_time_iso_8601": "2018-09-12T16:41:24.068958Z", "url": "https://files.pythonhosted.org/packages/9a/f1/885e69753cc278cdc3439d88928699388ba284518829667004037e393645/pytest-fabric-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f9f5b9f3f32b7f949fa9f666e9e50105", "sha256": "13b56c190a7a79f24431a976a7cc8f778cdd0f5d322c12da85bfc819b46c26bc"}, "downloads": -1, "filename": "pytest-fabric-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f9f5b9f3f32b7f949fa9f666e9e50105", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3706, "upload_time": "2018-09-12T16:41:24", "upload_time_iso_8601": "2018-09-12T16:41:24.068958Z", "url": "https://files.pythonhosted.org/packages/9a/f1/885e69753cc278cdc3439d88928699388ba284518829667004037e393645/pytest-fabric-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:10 2020"}