{"info": {"author": "Alex Chan", "author_email": "alex@alexwlchan.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License"], "description": "python-taskpaper is a Python module for interacting with\r\n`Taskpaper <https://www.taskpaper.com>`_-formatted documents.\r\n\r\nWhat does it do?\r\n****************\r\n\r\nSo far?  Not much.   You can open, read and write TaskPaper documents, and\r\nadd or remove tags on items within that document, but that's about it.  I'd\r\nlike to expand it to be much more powerful, but it depends on when I have\r\nfree time.\r\n\r\nI will probably change the API in a non-backwards compatible way before 1.0.\r\nUser beware.\r\n\r\nLook in the ``docs`` directory for some examples of how I'm using it.  I'll\r\nwrite proper documentation soon.\r\n\r\nWhat does it require?\r\n*********************\r\n\r\nTo use this module, you need Python 2.7 or 3.3+.  Those are the only versions\r\nof Python that I'm interested in testing or writing for.  Standard library\r\nonly (for now).\r\n\r\nHow do I install it?\r\n********************\r\n\r\nYou can install it from PyPI::\r\n\r\n   pip install python-taskpaper\r\n\r\nWhy write this?  Why not use the built-in scripting?\r\n****************************************************\r\n\r\nTwo reasons:\r\n\r\n1.  I work with TaskPaper-formatted documents on Windows and Linux (for my day\r\n    job), and the best AppleScript support in the world is utterly useless\r\n    there.  :-(\r\n\r\n2.  I prefer Python to AppleScript and JavaScript.\r\n\r\nI hate Python.\r\n**************\r\n\r\nGood for you.\r\n\r\nThere's built-in support for scripting the TaskPaper app with JavaScript or\r\nAppleScript, or Matt Gemmell has written a `Ruby library <https://github.com/mattgemmell/TaskPaperRuby>`_ that you\r\ncould use.  (I'd use Matt's library if I actually knew any Ruby.)\r\n\r\nHow do I run the tests?\r\n***********************\r\n\r\nInstall ``tox``, ideally in a virtualenv::\r\n\r\n    pip install tox\r\n\r\nthen run the tests like so::\r\n\r\n    make test\r\n\r\nThis will run the tests, and show which lines aren't covered by existing tests.\r\nI'm trying to get better at writing tests with good coverage.\r\n\r\nLicense\r\n*******\r\n\r\nThe project is licensed under the MIT license.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alexwlchan/python-taskpaper", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "python-taskpaper", "package_url": "https://pypi.org/project/python-taskpaper/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/python-taskpaper/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/alexwlchan/python-taskpaper"}, "release_url": "https://pypi.org/project/python-taskpaper/0.3/", "requires_dist": null, "requires_python": null, "summary": "A module for interacting with TaskPaper formatted documents", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>python-taskpaper is a Python module for interacting with\n<a href=\"https://www.taskpaper.com\" rel=\"nofollow\">Taskpaper</a>-formatted documents.</p>\n<div id=\"what-does-it-do\">\n<h2>What does it do?</h2>\n<p>So far?  Not much.   You can open, read and write TaskPaper documents, and\nadd or remove tags on items within that document, but that\u2019s about it.  I\u2019d\nlike to expand it to be much more powerful, but it depends on when I have\nfree time.</p>\n<p>I will probably change the API in a non-backwards compatible way before 1.0.\nUser beware.</p>\n<p>Look in the <tt>docs</tt> directory for some examples of how I\u2019m using it.  I\u2019ll\nwrite proper documentation soon.</p>\n</div>\n<div id=\"what-does-it-require\">\n<h2>What does it require?</h2>\n<p>To use this module, you need Python 2.7 or 3.3+.  Those are the only versions\nof Python that I\u2019m interested in testing or writing for.  Standard library\nonly (for now).</p>\n</div>\n<div id=\"how-do-i-install-it\">\n<h2>How do I install it?</h2>\n<p>You can install it from PyPI:</p>\n<pre>pip install python-taskpaper\n</pre>\n</div>\n<div id=\"why-write-this-why-not-use-the-built-in-scripting\">\n<h2>Why write this?  Why not use the built-in scripting?</h2>\n<p>Two reasons:</p>\n<ol>\n<li>I work with TaskPaper-formatted documents on Windows and Linux (for my day\njob), and the best AppleScript support in the world is utterly useless\nthere.  :-(</li>\n<li>I prefer Python to AppleScript and JavaScript.</li>\n</ol>\n</div>\n<div id=\"i-hate-python\">\n<h2>I hate Python.</h2>\n<p>Good for you.</p>\n<p>There\u2019s built-in support for scripting the TaskPaper app with JavaScript or\nAppleScript, or Matt Gemmell has written a <a href=\"https://github.com/mattgemmell/TaskPaperRuby\" rel=\"nofollow\">Ruby library</a> that you\ncould use.  (I\u2019d use Matt\u2019s library if I actually knew any Ruby.)</p>\n</div>\n<div id=\"how-do-i-run-the-tests\">\n<h2>How do I run the tests?</h2>\n<p>Install <tt>tox</tt>, ideally in a virtualenv:</p>\n<pre>pip install tox\n</pre>\n<p>then run the tests like so:</p>\n<pre>make test\n</pre>\n<p>This will run the tests, and show which lines aren\u2019t covered by existing tests.\nI\u2019m trying to get better at writing tests with good coverage.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The project is licensed under the MIT license.</p>\n</div>\n\n          </div>"}, "last_serial": 2069026, "releases": {"0.1a": [{"comment_text": "", "digests": {"md5": "7aa729c5611c7a0c4eaf54150daf4da3", "sha256": "f99b5541e97f58134a01264efa3e385b3c9acf0e3c8dd1dd5e39f190c61f03d5"}, "downloads": -1, "filename": "python-taskpaper-0.1a.tar.gz", "has_sig": false, "md5_digest": "7aa729c5611c7a0c4eaf54150daf4da3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4701, "upload_time": "2016-04-05T06:53:02", "upload_time_iso_8601": "2016-04-05T06:53:02.313892Z", "url": "https://files.pythonhosted.org/packages/91/e3/e45dab976338d8a992cf50115d9b2d202ac6fe5cc8bba5c356a4339e2206/python-taskpaper-0.1a.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "6fd57fe2ef2500ed2d95c110d9357f10", "sha256": "4adecc9e112dfdb599cce538280d41f3be5152ce3c6f08eb43b7207812f02703"}, "downloads": -1, "filename": "python-taskpaper-0.2.tar.gz", "has_sig": false, "md5_digest": "6fd57fe2ef2500ed2d95c110d9357f10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4764, "upload_time": "2016-04-09T22:15:04", "upload_time_iso_8601": "2016-04-09T22:15:04.270791Z", "url": "https://files.pythonhosted.org/packages/78/43/3426ff2003bd2d1687c44fd17786edf464ff21bf104ca37ae4eaed8b00e9/python-taskpaper-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "3fb1124dc2e00ea2febcde2fa2be01c8", "sha256": "633490b05bde102f0212d662e786c994a502a57f31c07af9994841169778a98b"}, "downloads": -1, "filename": "python-taskpaper-0.3.tar.gz", "has_sig": false, "md5_digest": "3fb1124dc2e00ea2febcde2fa2be01c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4288, "upload_time": "2016-04-18T06:36:20", "upload_time_iso_8601": "2016-04-18T06:36:20.214349Z", "url": "https://files.pythonhosted.org/packages/1d/ff/60c315960b044308fffeeea7435e97f85ce8071430f7a31ec0b396eed052/python-taskpaper-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3fb1124dc2e00ea2febcde2fa2be01c8", "sha256": "633490b05bde102f0212d662e786c994a502a57f31c07af9994841169778a98b"}, "downloads": -1, "filename": "python-taskpaper-0.3.tar.gz", "has_sig": false, "md5_digest": "3fb1124dc2e00ea2febcde2fa2be01c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4288, "upload_time": "2016-04-18T06:36:20", "upload_time_iso_8601": "2016-04-18T06:36:20.214349Z", "url": "https://files.pythonhosted.org/packages/1d/ff/60c315960b044308fffeeea7435e97f85ce8071430f7a31ec0b396eed052/python-taskpaper-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:05 2020"}