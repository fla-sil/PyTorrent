{"info": {"author": "John Furr", "author_email": "john.furr@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.9", "Framework :: Django :: 2.0", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "MongoLog \n========\n.. image:: http://pepy.tech/badge/django-mongolog\n    :target: http://pepy.tech/count/django-mongolog\n\nMongoLog is a simple Mongo based log handler that can be easly used\nwith standard python/django logging.\n\nPlease visit the `MongoLog Users Group <https://groups.google.com/forum/#!forum/mongolog-users>`_ with any questions/suggestions.   Thanks.\n\n.. image:: https://travis-ci.org/gnulnx/django-mongolog.svg?branch=master\n    :target: https://travis-ci.org/gnulnx/django-mongolog\n    \n.. image:: https://coveralls.io/repos/gnulnx/django-mongolog/badge.svg?branch=master&service=github \n    :target: https://coveralls.io/github/gnulnx/django-mongolog?branch=master\n\n.. image:: https://api.codacy.com/project/badge/grade/d8d4eaa24bbe4ae5afe608210e4b8d28\n    :target: https://www.codacy.com/app/gnulnx/django-mongolog\n \n\nQuick start\n----------- \n\n1. Add \"mongolog\" to your INSTALLED_APPS like this\n    .. code:: python\n\n        INSTALLED_APPS = (\n            ...\n            'mongolog',\n        )\n\n2. Add the SimpleMongoLogHandler to your LOGGING config.  \n    .. code:: python\n\n        LOGGING = {\n            'version': 1,\n            'handlers': {\n                'mongolog': {\n                    'level': 'DEBUG',\n                    'class': 'mongolog.SimpleMongoLogHandler',\n                    \n                    # Set the connection string to the mongo instance.  \n                    'connection': 'mongodb://localhost:27017',\n                    \n                    # define mongo collection the log handler should use.  Default is mongolog\n                    # This is useful if you want different handlers to use different collections\n                    'collection': 'mongolog' \n                },\n            },\n            # Define a logger for your handler.  We are using the root '' logger in this case\n            'loggers': {\n                '': {\n                    'handlers': ['mongolog'],\n                    'level': 'DEBUG',\n                    'propagate': True\n                },\n            },\n        }\n\n3) Start your management shell::\n\n    ./manage.py shell\n\n4) Create a couple of log entries\n    .. code:: python\n    \n        import logging\n        import pymongo\n        logger = logging.getLogger(__name__)\n\n    One of the cool things about mongolog is that it can log complex data structures\n    in a way that makes them both human parsable and queryable.  So for instance if \n    we create the following log message:\n\n    .. code:: python\n\n        \n        # Pro Tip: You can copy and paste all of this\n        \n        LOG_MSG = {\n            'test': True,  \n            'test class': 'TestBaseMongoLogHandler',\n            'Life': {\n                'Domain': {\n                    'Bacteria': [\n                        {\n                            'name': ValueError,  # intentional bad value\n                            'description': 'Just a bad description'\n                        }\n                    ],\n                    'Archaea': [],\n                    'Eukaryota': [\n                        {\n                            'name': 'Excavata', \n                            'description': 'Various flagellate protozoa',\n                        },\n                        {   \n                            'name': 'Amoebozoa',\n                            'descritpion': 'most lobose amoeboids and slime moulds',\n                        },\n                        {\n                            'name': 'Opisthokonta',\n                            'description': 'animals, fungi, choanoflagellates, etc.',\n                        },\n                    ]\n                } \n            }\n        }\n\n    Now let's log our message at each of the defined log levels...\n\n    .. code:: python\n\n        logger.debug(LOG_MSG)\n        logger.info(LOG_MSG)\n        logger.warn(LOG_MSG)\n        logger.error(LOG_MSG)\n        try:\n            raise ValueError(\"Bad Value\")\n        except ValueError as e:\n            logger.exception(LOG_MSG)\n            raise\n\n5) Now log into your mongo shell and look at some results\n    .. code:: python\n\n        ./mongo\n\n        use mongolog\n        db.mongolog.findOne({'level': \"INFO\"})\n\n    Will produde a mongo document like:\n\n    .. code:: python\n\n        {\n            \"_id\" : ObjectId(\"5664a22bdd162ca58f0693d2\"),\n            \"name\" : \"__builtin__\",\n            \"thread\" : NumberLong(\"140735229362944\"),\n            \"level\" : \"INFO\",\n            \"process\" : 42383,\n            \"module\" : \"<console>\",\n            \"filename\" : \"<console>\",\n            \"func\" : \"<module>\",\n            \"time\" : ISODate(\"2015-12-06T21:01:31.258Z\"),\n            \"msg\" : {\n                \"test\" : true,\n                \"Life\" : {\n                    \"Domain\" : {\n                        \"Eukaryota\" : [\n                            {\n                                \"name\" : \"Excavata\",\n                                \"description\" : \"Various flagellate protozoa\"\n                            },\n                            {\n                                \"name\" : \"Amoebozoa\",\n                                \"descritpion\" : \"most lobose amoeboids and slime moulds\"\n                            },\n                            {\n                                \"name\" : \"Opisthokonta\",\n                                \"description\" : \"animals, fungi, choanoflagellates, etc.\"\n                            }\n                        ],\n                        \"Archaea\" : [ ],\n                        \"Bacteria\" : [\n                            {\n                                \"name\" : \"<type 'exceptions.ValueError'>\",\n                                \"description\" : \"Just a bad description\"\n                            }\n                        ]\n                    }\n                },\n                \"test class\" : \"TestBaseMongoLogHandler\"\n            },\n            \"path\" : \"<console>\",\n            \"line\" : 1\n        }\n\n    Take a look at the \"msg\" section and you will notice that all of the information from our LOG_MSG\n    is contained under that key in standard mongo data structures.  This means that we can query \n    based on our log message.  For example in your mongo shell try the following queries:\n\n    .. code:: javascript\n\n        // Find all documents logged with a 'test' key\n        > db.mongolog.find({'msg.test': {$exists: true}}).count()\n        5\n\n        // Find all documents that have a Eukaryota name in the list of  [\"Amoebozoa\", \"Opisthokonta\"]\n        > db.mongolog.find({\n            'msg.Life.Domain.Eukaryota.name': {\n                $in: [\"Amoebozoa\", \"Opisthokonta\"]\n            }\n          }).count()\n        1\n\n        // Same as above but only those documents logged at level INFO\n        >db.mongolog.find({\n            'level': 'INFO',\n            'msg.Life.Domain.Eukaryota.name': {$in: [\"Amoebozoa\", \"Opisthokonta\"]}, \n        }).count()\n        1\n\n        // And again at level ERROR.  \n        >db.mongolog.find({\n            'level': 'INFO',\n            'msg.Life.Domain.Eukaryota.name': {$in: [\"Amoebozoa\", \"Opisthokonta\"]}, \n        }).count()\n        2\n        \n        // Notice that now two records are returned.  This is because\n        // logger.exception(...) also logs at level ERROR, but also notice that if when we\n        // pretty print the records...\n        >db.mongolog.find({\n            'level': 'ERROR',\n            'msg.Life.Domain.Eukaryota.name': {$in: [\"Amoebozoa\", \"Opisthokonta\"]}, \n        }).pretty()\n\n        // ...that one of the entries has exception info.  When running in a real environment\n        // and not the console the 'trace' section will be populated with the full stack trace.\n        \"exception\" : {\n            \"info\" : [\n                \"<type 'exceptions.ValueError'>\",\n                \"Bad Value\",\n                \"<traceback object at 0x106853b90>\"\n            ],\n            \"trace\" :\n             null\n        }\n        \nManagement Commands (Django Only)\n---------------------------------\n\n1) ml_purge\n\nThe ml_urge command is used to clean up mongo collections. The command has two basic modes:  --purge and --delete. Purge will remove all documents and delete will remove documents older than {n} day's.\n\nTo backup and PURGE all documents from the collection defined in mongolog handler\n    ./manage.py ml_purge --purge --backup -logger mongolog\n\nTo remove all documents older than 14 days without backing up first\n    ./manage.py ml_purge --delete 14 -logger mongolog\n\n\nFuture  Roadmap\n---------------\n\nCurrently mongolog has pretty solid support for logging arbitrary datastructures.  If it finds\nan object it doesn't know how to natively serialize it will try to convert it to str().  \n\nThe next steps are to create a set of most used query operations for probing the log.\n\nPlease give a shout out with `feedback <https://groups.google.com/forum/#!forum/mongolog-users>`_ and feature requests.\n\nThanks", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/gnulnx/django-mongolog/tree/0.9.4", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gnulnx/django-mongolog", "keywords": "", "license": "GPL V3", "maintainer": "", "maintainer_email": "", "name": "django-mongolog", "package_url": "https://pypi.org/project/django-mongolog/", "platform": "", "project_url": "https://pypi.org/project/django-mongolog/", "project_urls": {"Download": "https://github.com/gnulnx/django-mongolog/tree/0.9.4", "Homepage": "https://github.com/gnulnx/django-mongolog"}, "release_url": "https://pypi.org/project/django-mongolog/0.9.4/", "requires_dist": null, "requires_python": "", "summary": "A simple mongo based log handler for python/django", "version": "0.9.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://pepy.tech/count/django-mongolog\" rel=\"nofollow\"><img alt=\"http://pepy.tech/badge/django-mongolog\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b5115b13407235b30611aa35d4d291a5762aa69/687474703a2f2f706570792e746563682f62616467652f646a616e676f2d6d6f6e676f6c6f67\"></a>\n<p>MongoLog is a simple Mongo based log handler that can be easly used\nwith standard python/django logging.</p>\n<p>Please visit the <a href=\"https://groups.google.com/forum/#!forum/mongolog-users\" rel=\"nofollow\">MongoLog Users Group</a> with any questions/suggestions.   Thanks.</p>\n<a href=\"https://travis-ci.org/gnulnx/django-mongolog\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/gnulnx/django-mongolog.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bff43493db843fc481032eeeb8eec1b636198c54/68747470733a2f2f7472617669732d63692e6f72672f676e756c6e782f646a616e676f2d6d6f6e676f6c6f672e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/gnulnx/django-mongolog?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/gnulnx/django-mongolog/badge.svg?branch=master&amp;service=github\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/39a9bea93f9f565895cb2241532fd43e37e4565b/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f676e756c6e782f646a616e676f2d6d6f6e676f6c6f672f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a>\n<a href=\"https://www.codacy.com/app/gnulnx/django-mongolog\" rel=\"nofollow\"><img alt=\"https://api.codacy.com/project/badge/grade/d8d4eaa24bbe4ae5afe608210e4b8d28\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b4c6548b6ce515bce1c41f488a205e8df2baea74/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f67726164652f6438643465616132346262653461653561666536303832313065346238643238\"></a>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li><dl>\n<dt>Add \u201cmongolog\u201d to your INSTALLED_APPS like this</dt>\n<dd><pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'mongolog'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Add the SimpleMongoLogHandler to your LOGGING config.</dt>\n<dd><pre><span class=\"n\">LOGGING</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'mongolog'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'class'</span><span class=\"p\">:</span> <span class=\"s1\">'mongolog.SimpleMongoLogHandler'</span><span class=\"p\">,</span>\n\n            <span class=\"c1\"># Set the connection string to the mongo instance.</span>\n            <span class=\"s1\">'connection'</span><span class=\"p\">:</span> <span class=\"s1\">'mongodb://localhost:27017'</span><span class=\"p\">,</span>\n\n            <span class=\"c1\"># define mongo collection the log handler should use.  Default is mongolog</span>\n            <span class=\"c1\"># This is useful if you want different handlers to use different collections</span>\n            <span class=\"s1\">'collection'</span><span class=\"p\">:</span> <span class=\"s1\">'mongolog'</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"c1\"># Define a logger for your handler.  We are using the root '' logger in this case</span>\n    <span class=\"s1\">'loggers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">''</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'mongolog'</span><span class=\"p\">],</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'propagate'</span><span class=\"p\">:</span> <span class=\"kc\">True</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n</dd>\n</dl>\n</li>\n</ol>\n<ol>\n<li><p>Start your management shell:</p>\n<pre>./manage.py shell\n</pre>\n</li>\n<li><dl>\n<dt>Create a couple of log entries</dt>\n<dd><pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pymongo</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n</pre>\n<p>One of the cool things about mongolog is that it can log complex data structures\nin a way that makes them both human parsable and queryable.  So for instance if\nwe create the following log message:</p>\n<pre><span class=\"c1\"># Pro Tip: You can copy and paste all of this</span>\n\n<span class=\"n\">LOG_MSG</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'test'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s1\">'test class'</span><span class=\"p\">:</span> <span class=\"s1\">'TestBaseMongoLogHandler'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Life'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'Domain'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'Bacteria'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"ne\">ValueError</span><span class=\"p\">,</span>  <span class=\"c1\"># intentional bad value</span>\n                    <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'Just a bad description'</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">],</span>\n            <span class=\"s1\">'Archaea'</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n            <span class=\"s1\">'Eukaryota'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Excavata'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'Various flagellate protozoa'</span><span class=\"p\">,</span>\n                <span class=\"p\">},</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Amoebozoa'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'descritpion'</span><span class=\"p\">:</span> <span class=\"s1\">'most lobose amoeboids and slime moulds'</span><span class=\"p\">,</span>\n                <span class=\"p\">},</span>\n                <span class=\"p\">{</span>\n                    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Opisthokonta'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'animals, fungi, choanoflagellates, etc.'</span><span class=\"p\">,</span>\n                <span class=\"p\">},</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Now let\u2019s log our message at each of the defined log levels\u2026</p>\n<pre><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"n\">LOG_MSG</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">LOG_MSG</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"n\">LOG_MSG</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"n\">LOG_MSG</span><span class=\"p\">)</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">\"Bad Value\"</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">ValueError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">(</span><span class=\"n\">LOG_MSG</span><span class=\"p\">)</span>\n    <span class=\"k\">raise</span>\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Now log into your mongo shell and look at some results</dt>\n<dd><pre><span class=\"o\">./</span><span class=\"n\">mongo</span>\n\n<span class=\"n\">use</span> <span class=\"n\">mongolog</span>\n<span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">mongolog</span><span class=\"o\">.</span><span class=\"n\">findOne</span><span class=\"p\">({</span><span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s2\">\"INFO\"</span><span class=\"p\">})</span>\n</pre>\n<p>Will produde a mongo document like:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"_id\"</span> <span class=\"p\">:</span> <span class=\"n\">ObjectId</span><span class=\"p\">(</span><span class=\"s2\">\"5664a22bdd162ca58f0693d2\"</span><span class=\"p\">),</span>\n    <span class=\"s2\">\"name\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"__builtin__\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"thread\"</span> <span class=\"p\">:</span> <span class=\"n\">NumberLong</span><span class=\"p\">(</span><span class=\"s2\">\"140735229362944\"</span><span class=\"p\">),</span>\n    <span class=\"s2\">\"level\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"INFO\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"process\"</span> <span class=\"p\">:</span> <span class=\"mi\">42383</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"module\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"&lt;console&gt;\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"filename\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"&lt;console&gt;\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"func\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"&lt;module&gt;\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"time\"</span> <span class=\"p\">:</span> <span class=\"n\">ISODate</span><span class=\"p\">(</span><span class=\"s2\">\"2015-12-06T21:01:31.258Z\"</span><span class=\"p\">),</span>\n    <span class=\"s2\">\"msg\"</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"test\"</span> <span class=\"p\">:</span> <span class=\"n\">true</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"Life\"</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"Domain\"</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"Eukaryota\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">\"name\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Excavata\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"description\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Various flagellate protozoa\"</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">\"name\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Amoebozoa\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"descritpion\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"most lobose amoeboids and slime moulds\"</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">\"name\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Opisthokonta\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"description\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"animals, fungi, choanoflagellates, etc.\"</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">],</span>\n                <span class=\"s2\">\"Archaea\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span> <span class=\"p\">],</span>\n                <span class=\"s2\">\"Bacteria\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">\"name\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"&lt;type 'exceptions.ValueError'&gt;\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"description\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Just a bad description\"</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s2\">\"test class\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"TestBaseMongoLogHandler\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"path\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"&lt;console&gt;\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"line\"</span> <span class=\"p\">:</span> <span class=\"mi\">1</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Take a look at the \u201cmsg\u201d section and you will notice that all of the information from our LOG_MSG\nis contained under that key in standard mongo data structures.  This means that we can query\nbased on our log message.  For example in your mongo shell try the following queries:</p>\n<pre><span class=\"c1\">// Find all documents logged with a 'test' key\n</span><span class=\"o\">&gt;</span> <span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">mongolog</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">({</span><span class=\"s1\">'msg.test'</span><span class=\"o\">:</span> <span class=\"p\">{</span><span class=\"nx\">$exists</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">}}).</span><span class=\"nx\">count</span><span class=\"p\">()</span>\n<span class=\"mi\">5</span>\n\n<span class=\"c1\">// Find all documents that have a Eukaryota name in the list of  [\"Amoebozoa\", \"Opisthokonta\"]\n</span><span class=\"o\">&gt;</span> <span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">mongolog</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">({</span>\n    <span class=\"s1\">'msg.Life.Domain.Eukaryota.name'</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"nx\">$in</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"Amoebozoa\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Opisthokonta\"</span><span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}).</span><span class=\"nx\">count</span><span class=\"p\">()</span>\n<span class=\"mi\">1</span>\n\n<span class=\"c1\">// Same as above but only those documents logged at level INFO\n</span><span class=\"o\">&gt;</span><span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">mongolog</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">({</span>\n    <span class=\"s1\">'level'</span><span class=\"o\">:</span> <span class=\"s1\">'INFO'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'msg.Life.Domain.Eukaryota.name'</span><span class=\"o\">:</span> <span class=\"p\">{</span><span class=\"nx\">$in</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"Amoebozoa\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Opisthokonta\"</span><span class=\"p\">]},</span>\n<span class=\"p\">}).</span><span class=\"nx\">count</span><span class=\"p\">()</span>\n<span class=\"mi\">1</span>\n\n<span class=\"c1\">// And again at level ERROR.\n</span><span class=\"o\">&gt;</span><span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">mongolog</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">({</span>\n    <span class=\"s1\">'level'</span><span class=\"o\">:</span> <span class=\"s1\">'INFO'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'msg.Life.Domain.Eukaryota.name'</span><span class=\"o\">:</span> <span class=\"p\">{</span><span class=\"nx\">$in</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"Amoebozoa\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Opisthokonta\"</span><span class=\"p\">]},</span>\n<span class=\"p\">}).</span><span class=\"nx\">count</span><span class=\"p\">()</span>\n<span class=\"mi\">2</span>\n\n<span class=\"c1\">// Notice that now two records are returned.  This is because\n// logger.exception(...) also logs at level ERROR, but also notice that if when we\n// pretty print the records...\n</span><span class=\"o\">&gt;</span><span class=\"nx\">db</span><span class=\"p\">.</span><span class=\"nx\">mongolog</span><span class=\"p\">.</span><span class=\"nx\">find</span><span class=\"p\">({</span>\n    <span class=\"s1\">'level'</span><span class=\"o\">:</span> <span class=\"s1\">'ERROR'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'msg.Life.Domain.Eukaryota.name'</span><span class=\"o\">:</span> <span class=\"p\">{</span><span class=\"nx\">$in</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"Amoebozoa\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Opisthokonta\"</span><span class=\"p\">]},</span>\n<span class=\"p\">}).</span><span class=\"nx\">pretty</span><span class=\"p\">()</span>\n\n<span class=\"c1\">// ...that one of the entries has exception info.  When running in a real environment\n// and not the console the 'trace' section will be populated with the full stack trace.\n</span><span class=\"s2\">\"exception\"</span> <span class=\"o\">:</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"info\"</span> <span class=\"o\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"&lt;type 'exceptions.ValueError'&gt;\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"Bad Value\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"&lt;traceback object at 0x106853b90&gt;\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">\"trace\"</span> <span class=\"o\">:</span>\n     <span class=\"kc\">null</span>\n<span class=\"p\">}</span>\n</pre>\n</dd>\n</dl>\n</li>\n</ol>\n</div>\n<div id=\"management-commands-django-only\">\n<h2>Management Commands (Django Only)</h2>\n<ol>\n<li>ml_purge</li>\n</ol>\n<p>The ml_urge command is used to clean up mongo collections. The command has two basic modes:  \u2013purge and \u2013delete. Purge will remove all documents and delete will remove documents older than {n} day\u2019s.</p>\n<dl>\n<dt>To backup and PURGE all documents from the collection defined in mongolog handler</dt>\n<dd>./manage.py ml_purge \u2013purge \u2013backup -logger mongolog</dd>\n<dt>To remove all documents older than 14 days without backing up first</dt>\n<dd>./manage.py ml_purge \u2013delete 14 -logger mongolog</dd>\n</dl>\n</div>\n<div id=\"future-roadmap\">\n<h2>Future  Roadmap</h2>\n<p>Currently mongolog has pretty solid support for logging arbitrary datastructures.  If it finds\nan object it doesn\u2019t know how to natively serialize it will try to convert it to str().</p>\n<p>The next steps are to create a set of most used query operations for probing the log.</p>\n<p>Please give a shout out with <a href=\"https://groups.google.com/forum/#!forum/mongolog-users\" rel=\"nofollow\">feedback</a> and feature requests.</p>\n<p>Thanks</p>\n</div>\n\n          </div>"}, "last_serial": 4709409, "releases": {"0.1": [], "0.1.6": [{"comment_text": "", "digests": {"md5": "4db14a86483deb99e2115cf206ba8243", "sha256": "394fe3cdf8c9bb6bc5dd8f0733ca26ba5d1481dc788185f7a8e9f01b8f23a4b9"}, "downloads": -1, "filename": "django-mongolog-0.1.6.tar.gz", "has_sig": false, "md5_digest": "4db14a86483deb99e2115cf206ba8243", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16757, "upload_time": "2015-11-25T00:09:45", "upload_time_iso_8601": "2015-11-25T00:09:45.275876Z", "url": "https://files.pythonhosted.org/packages/9a/94/1977b062bc384f05d551314c6a16fdf4bf92fffb226716a08ea2830782c7/django-mongolog-0.1.6.tar.gz", "yanked": false}], "0.1.6.3": [], "0.1.7": [{"comment_text": "", "digests": {"md5": "f924d09945eff3c7c20ac415e020a25a", "sha256": "92854a4a63ec8d34bcfd8b5a777aebfb710ad830e91af0ca176e710a75afbc41"}, "downloads": -1, "filename": "django-mongolog-0.1.7.tar.gz", "has_sig": false, "md5_digest": "f924d09945eff3c7c20ac415e020a25a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16523, "upload_time": "2015-11-25T12:01:35", "upload_time_iso_8601": "2015-11-25T12:01:35.927256Z", "url": "https://files.pythonhosted.org/packages/1d/89/06ea7a344fa70cddbc5d92f1119ba26c039acf445ce4b872f4dee8081169/django-mongolog-0.1.7.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "45f6667a61396f93d0abdcba348b89db", "sha256": "41512abc3a85ebd3a9a48e3d99f6b6cbd50b9e796a74dfdd34560500973a2b80"}, "downloads": -1, "filename": "django-mongolog-0.2.0.tar.gz", "has_sig": false, "md5_digest": "45f6667a61396f93d0abdcba348b89db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16686, "upload_time": "2015-11-26T13:59:08", "upload_time_iso_8601": "2015-11-26T13:59:08.574515Z", "url": "https://files.pythonhosted.org/packages/a9/b3/252f9635364d6b68a3e9ca1163895842460f13b11ca86f5a6c3f41c62af3/django-mongolog-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "153af4212021f9d1a022fe85103f5d61", "sha256": "3b2ffb6dcff26dca03b70ebf0e99f84d2a46ddb53dfbff17820c9c6cd9e46da4"}, "downloads": -1, "filename": "django-mongolog-0.3.0.tar.gz", "has_sig": false, "md5_digest": "153af4212021f9d1a022fe85103f5d61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18947, "upload_time": "2015-12-03T01:10:27", "upload_time_iso_8601": "2015-12-03T01:10:27.231071Z", "url": "https://files.pythonhosted.org/packages/5a/03/290c028aeb4b1cf8b85bd0c959a1ba1917e7e51af1ccbe31b69736942bb5/django-mongolog-0.3.0.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "748b8cfcb7bf8cdf481e8e4d0bbe1a24", "sha256": "fe62663514f1292ee8db072614a70fb35749f8b787636a486305a1a470c73c50"}, "downloads": -1, "filename": "django-mongolog-0.3.2.tar.gz", "has_sig": false, "md5_digest": "748b8cfcb7bf8cdf481e8e4d0bbe1a24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19599, "upload_time": "2015-12-04T14:55:25", "upload_time_iso_8601": "2015-12-04T14:55:25.059834Z", "url": "https://files.pythonhosted.org/packages/3a/0e/ad90a30ba1ce2f627102771519c3efe44b55bef3d61141421c48b4773b62/django-mongolog-0.3.2.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "5714e90ca125a747d6a6c0be967207cc", "sha256": "2e0525e9351007a7efea1406ae13c72496d3ab3eea80cbda274f73d6365cee17"}, "downloads": -1, "filename": "django-mongolog-0.4.1.tar.gz", "has_sig": false, "md5_digest": "5714e90ca125a747d6a6c0be967207cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24115, "upload_time": "2015-12-06T22:59:52", "upload_time_iso_8601": "2015-12-06T22:59:52.392944Z", "url": "https://files.pythonhosted.org/packages/fa/4d/b82a23ec4854ad2ced651d0143f466995b07012ed1182f9c9d3cff0c5ade/django-mongolog-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "03b36f43653a200833d6f4ea1562bd99", "sha256": "400c4d26dda5af14ebd602ee6b1774ce0e890de7070bb2131d92c7b2221a2c75"}, "downloads": -1, "filename": "django-mongolog-0.4.2.tar.gz", "has_sig": false, "md5_digest": "03b36f43653a200833d6f4ea1562bd99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24144, "upload_time": "2015-12-10T21:32:43", "upload_time_iso_8601": "2015-12-10T21:32:43.198187Z", "url": "https://files.pythonhosted.org/packages/96/f6/22e9c4cfa2c87d728eb6f68b409224f706f85063bdb34ee2dd5f5588fbd3/django-mongolog-0.4.2.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "5f851302df5cbd12c9b9cf77314ee3b2", "sha256": "bd9365d99a7b329d246c8ef48945aa78e470f75dc1ab7a6985defac55f532617"}, "downloads": -1, "filename": "django-mongolog-0.5.0.tar.gz", "has_sig": false, "md5_digest": "5f851302df5cbd12c9b9cf77314ee3b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26078, "upload_time": "2015-12-18T13:59:58", "upload_time_iso_8601": "2015-12-18T13:59:58.851760Z", "url": "https://files.pythonhosted.org/packages/e8/44/8bf40122cc0ad83437c71e6c3ca05a889c95ba197a49bebdc41278738f9c/django-mongolog-0.5.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "dbcd878eca2ea54cc709835bcf7cfaf4", "sha256": "268c1beeb0caf5a1e3b2a5464f3dae913d98a7efc30f2b42deba88b06bbe0600"}, "downloads": -1, "filename": "django-mongolog-0.6.1.tar.gz", "has_sig": false, "md5_digest": "dbcd878eca2ea54cc709835bcf7cfaf4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26680, "upload_time": "2016-01-13T21:02:10", "upload_time_iso_8601": "2016-01-13T21:02:10.138253Z", "url": "https://files.pythonhosted.org/packages/a2/39/0d8f7d3d17f3d61ae03d4d5a7ec7cc979803ae9b5ed4dc7b254718972f94/django-mongolog-0.6.1.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "546664a1869a261f80eab68b45aaabc7", "sha256": "981ccdc85f602a57201a28144fbf6a27a54852df47bc20bde54970afbc6266c6"}, "downloads": -1, "filename": "django-mongolog-0.6.3.tar.gz", "has_sig": false, "md5_digest": "546664a1869a261f80eab68b45aaabc7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27315, "upload_time": "2016-09-19T17:05:10", "upload_time_iso_8601": "2016-09-19T17:05:10.484626Z", "url": "https://files.pythonhosted.org/packages/f5/09/cb9b25b49ec326e97d3a61e33e8d36fbb8cb66c02eee27622418ee5c1c7c/django-mongolog-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "55d858cf3810b17e39b96664636f6dbb", "sha256": "7632feb3fdb48d42a23d7cf7950ed2707377affcd1ea55a635f01193367ee464"}, "downloads": -1, "filename": "django-mongolog-0.6.4.tar.gz", "has_sig": false, "md5_digest": "55d858cf3810b17e39b96664636f6dbb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29625, "upload_time": "2016-09-21T11:08:34", "upload_time_iso_8601": "2016-09-21T11:08:34.865152Z", "url": "https://files.pythonhosted.org/packages/5d/d4/82f5c9c22b460c76de5d10078aa2c119a9099bf2f7d291e1f7c895feeda6/django-mongolog-0.6.4.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "8f5a4a98800410a5cd9ff9fd90c8dfd3", "sha256": "65dd3605dc6452c655e128f7d0cc5f857e7b627a44975a5cd485df335d2f78af"}, "downloads": -1, "filename": "django-mongolog-0.7.0.tar.gz", "has_sig": false, "md5_digest": "8f5a4a98800410a5cd9ff9fd90c8dfd3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29912, "upload_time": "2016-09-22T01:13:46", "upload_time_iso_8601": "2016-09-22T01:13:46.365107Z", "url": "https://files.pythonhosted.org/packages/2d/15/80b418a5cbde8b803c4bda6992095e8e860161b69684379947b27c93fb84/django-mongolog-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "841cdd0fb41111495576c2a636030eaf", "sha256": "5ebadaaf49ef0ead731af5da2b55224cc6e35672c3bc44e7c4ad3d98f19b6218"}, "downloads": -1, "filename": "django-mongolog-0.7.1.tar.gz", "has_sig": false, "md5_digest": "841cdd0fb41111495576c2a636030eaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28627, "upload_time": "2016-09-24T17:26:51", "upload_time_iso_8601": "2016-09-24T17:26:51.436398Z", "url": "https://files.pythonhosted.org/packages/92/9a/4b2f33f20e2bf2083ab869302a390827412a66673072165a10977f3d85e4/django-mongolog-0.7.1.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "2a59f129709f6e380220700f41c326e2", "sha256": "8af1896b6b6762f38ac245ad39430dfb0ac23b29e4872d88f3b5e3c797330fd5"}, "downloads": -1, "filename": "django-mongolog-0.7.3.tar.gz", "has_sig": false, "md5_digest": "2a59f129709f6e380220700f41c326e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31261, "upload_time": "2016-09-25T21:39:01", "upload_time_iso_8601": "2016-09-25T21:39:01.918448Z", "url": "https://files.pythonhosted.org/packages/b2/76/d61ff4bb552e76fe7a2d4f85003493dbaa42e9b005dbe13c02b2cb095711/django-mongolog-0.7.3.tar.gz", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "960a5b23de770e7665435d1c78687636", "sha256": "80ad0d64f5998ed1fb99dff52135583c5271ee48b8946f1ae0935ac1f1b66850"}, "downloads": -1, "filename": "django-mongolog-0.7.4.tar.gz", "has_sig": false, "md5_digest": "960a5b23de770e7665435d1c78687636", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32723, "upload_time": "2016-09-29T22:16:18", "upload_time_iso_8601": "2016-09-29T22:16:18.565966Z", "url": "https://files.pythonhosted.org/packages/f4/0f/3f9736a32537b955149da81b85867565d7642cdf0cbb4455ef3db30a1063/django-mongolog-0.7.4.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "a960e2dbed639084882d38f61b95c0d8", "sha256": "f0d3f344036b324dc54311298acc8bc8dba6f1d04ebdd85d5ea11182e028ac0f"}, "downloads": -1, "filename": "django-mongolog-0.8.0.tar.gz", "has_sig": false, "md5_digest": "a960e2dbed639084882d38f61b95c0d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33590, "upload_time": "2016-10-02T14:17:58", "upload_time_iso_8601": "2016-10-02T14:17:58.291423Z", "url": "https://files.pythonhosted.org/packages/96/58/9a9c806579c8a11be2df9768071383134ed614729f4f433442fb50db2d15/django-mongolog-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "3c333a36af86aca0c00eea7abb991ec1", "sha256": "b4daa24c000ae86a35cb22420168652625eafadef1d7f477961f57525c06ea80"}, "downloads": -1, "filename": "django-mongolog-0.8.1.tar.gz", "has_sig": false, "md5_digest": "3c333a36af86aca0c00eea7abb991ec1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32479, "upload_time": "2016-10-25T22:56:46", "upload_time_iso_8601": "2016-10-25T22:56:46.031276Z", "url": "https://files.pythonhosted.org/packages/c5/ad/53899a959749231ea4e3445d94d112b3b47bb314ba69504890555d88fffb/django-mongolog-0.8.1.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "7a945721c1bff921121686150356fe93", "sha256": "7cf03a5559f2774972c05966028c65b6bd459f08b0ba8b9f65277a4385cc1885"}, "downloads": -1, "filename": "django-mongolog-0.9.1.tar.gz", "has_sig": false, "md5_digest": "7a945721c1bff921121686150356fe93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32114, "upload_time": "2018-10-01T11:24:06", "upload_time_iso_8601": "2018-10-01T11:24:06.356811Z", "url": "https://files.pythonhosted.org/packages/f4/14/30f1e5ac8e872814498232f4f210df0d3230c4b3c7ebe8dea2293e4eea31/django-mongolog-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "f5a0555ac7d78533e8919275caf779c4", "sha256": "d5da60c7eaff089c023b90a74e3b375f1c2acb866a4f819643a0141acebf3867"}, "downloads": -1, "filename": "django-mongolog-0.9.2.tar.gz", "has_sig": false, "md5_digest": "f5a0555ac7d78533e8919275caf779c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33316, "upload_time": "2019-01-10T22:18:59", "upload_time_iso_8601": "2019-01-10T22:18:59.053428Z", "url": "https://files.pythonhosted.org/packages/8f/3a/595a8a66ab13327ed065b44f596075ed13cfa36187f3723ec91eb5c0506a/django-mongolog-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "5aa89a8f7e3f5733a88f1e03495ab97f", "sha256": "b7760e2d61765a3b849a32d42cc9d8ac158a0bff54eca047f8bdecf80a48cd07"}, "downloads": -1, "filename": "django-mongolog-0.9.3.tar.gz", "has_sig": false, "md5_digest": "5aa89a8f7e3f5733a88f1e03495ab97f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34956, "upload_time": "2019-01-17T18:26:33", "upload_time_iso_8601": "2019-01-17T18:26:33.738170Z", "url": "https://files.pythonhosted.org/packages/9d/19/7ccb7d7e7ba0469543831a9c72c0236ac09e05c1d395bb015f2ca4e9f4fb/django-mongolog-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "d9003aa4f78b3ddfc16fc30570da6ab4", "sha256": "42a9de3a8fbc56405944e598ebb298a41db3402f10018eafebf1379aff32c3cf"}, "downloads": -1, "filename": "django-mongolog-0.9.4.tar.gz", "has_sig": false, "md5_digest": "d9003aa4f78b3ddfc16fc30570da6ab4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34958, "upload_time": "2019-01-17T19:30:29", "upload_time_iso_8601": "2019-01-17T19:30:29.187240Z", "url": "https://files.pythonhosted.org/packages/1e/c2/c8e482a980cfc35fd7beac498ea8eaf0cf5a71616a9bcf4d03ea05194984/django-mongolog-0.9.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d9003aa4f78b3ddfc16fc30570da6ab4", "sha256": "42a9de3a8fbc56405944e598ebb298a41db3402f10018eafebf1379aff32c3cf"}, "downloads": -1, "filename": "django-mongolog-0.9.4.tar.gz", "has_sig": false, "md5_digest": "d9003aa4f78b3ddfc16fc30570da6ab4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34958, "upload_time": "2019-01-17T19:30:29", "upload_time_iso_8601": "2019-01-17T19:30:29.187240Z", "url": "https://files.pythonhosted.org/packages/1e/c2/c8e482a980cfc35fd7beac498ea8eaf0cf5a71616a9bcf4d03ea05194984/django-mongolog-0.9.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:34:59 2020"}