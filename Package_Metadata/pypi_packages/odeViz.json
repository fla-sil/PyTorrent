{"info": {"author": "Andr\u00e9 Dietrich", "author_email": "dietrich@ivs.cs.uni-magdeburg.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: BSD License", "Topic :: Utilities"], "description": "odeViz: (or as I use to say: ode - visualization)\n\n\n0. Contact: \n===========\n\nIf you change the code, improve this project, fix bugs, or just have comments, \nfeel free to contact me...\n\nAndr\u00e9 Dietrich: dietrich@ivs.cs.uni-magdeburg.de\n\nWebsite: http://eos.cs.ovgu.de/en/crew/dietrich\n\n\n1. Preface: \n===========\n\nI wrote this simple library, because I was fed up with dealing with the visualization for every ode-simulation. All geometrical information are allready within the simulation, so why was it not done automatically.\n\n\n2. Requirements: \n================\n\nOpen Dynamics Engine: http://www.ode.org\n----------------------------------------\nDownload the current version, compile it or use binary-packages. \n\nPyODE: http://pyode.sourceforge.net\n-----------------------------------\nThis is the ode-interface for Python, it also contains the xode-project, which enables the definition of ode-simulations with XML. See the ReadMe for further\ninstallation information. \n\nVisualization Toolkit (VTK): http://www.vtk.org\n-----------------------------------------------\nDownload VTK if you haven't insalled it yet and compile it with Python support. See also ReadMe for further installation information.\n\nAdditional:\n-----------\nIf you are using Linux as I do (Ubuntu), nearly all of these tools and libraries can be installed from precompiled versions. But for xode you will have to download PyODE from http://pyode.sourceforge.net.\n\n\n3. Install: \n===========\n\nUsing ``pip``::\n\n    $ pip install odeViz\n\nFrom a tarball::\n\n    $ python setup.py install\n\n\n4. Running the examples:\n========================\n\nI put two examples in this project, one (tutorial3.py) was taken from the PyODE-tutorial. In fact it is the same, I just removed all OpenGL-functionality. The second example (test.py) shows, how easy it is to define a simulation for ode with an XML document (see test.xml). To run this example you will have to use xode.\n\nFor further explanation, have a look at our tutorial at: http://www.aizac.info/projects/ode-viz", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.python.org/pypi/ode-viz", "keywords": "ode,vtk", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "odeViz", "package_url": "https://pypi.org/project/odeViz/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/odeViz/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://pypi.python.org/pypi/ode-viz"}, "release_url": "https://pypi.org/project/odeViz/0.2/", "requires_dist": null, "requires_python": null, "summary": "This toolbox generates automatically a vtk-visualization for an ode (Open Dynamics Engine) simulation under Python. You only have to define the simulation space and world and forward these entities to the visualization.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>odeViz: (or as I use to say: ode - visualization)</p>\n<div id=\"contact\">\n<h2>0. Contact:</h2>\n<p>If you change the code, improve this project, fix bugs, or just have comments,\nfeel free to contact me\u2026</p>\n<p>Andr\u00e9 Dietrich: <a href=\"mailto:dietrich%40ivs.cs.uni-magdeburg.de\">dietrich<span>@</span>ivs<span>.</span>cs<span>.</span>uni-magdeburg<span>.</span>de</a></p>\n<p>Website: <a href=\"http://eos.cs.ovgu.de/en/crew/dietrich\" rel=\"nofollow\">http://eos.cs.ovgu.de/en/crew/dietrich</a></p>\n</div>\n<div id=\"preface\">\n<h2>1. Preface:</h2>\n<p>I wrote this simple library, because I was fed up with dealing with the visualization for every ode-simulation. All geometrical information are allready within the simulation, so why was it not done automatically.</p>\n</div>\n<div id=\"requirements\">\n<h2>2. Requirements:</h2>\n<div id=\"open-dynamics-engine-http-www-ode-org\">\n<h3>Open Dynamics Engine: <a href=\"http://www.ode.org\" rel=\"nofollow\">http://www.ode.org</a></h3>\n<p>Download the current version, compile it or use binary-packages.</p>\n</div>\n<div id=\"pyode-http-pyode-sourceforge-net\">\n<h3>PyODE: <a href=\"http://pyode.sourceforge.net\" rel=\"nofollow\">http://pyode.sourceforge.net</a></h3>\n<p>This is the ode-interface for Python, it also contains the xode-project, which enables the definition of ode-simulations with XML. See the ReadMe for further\ninstallation information.</p>\n</div>\n<div id=\"visualization-toolkit-vtk-http-www-vtk-org\">\n<h3>Visualization Toolkit (VTK): <a href=\"http://www.vtk.org\" rel=\"nofollow\">http://www.vtk.org</a></h3>\n<p>Download VTK if you haven\u2019t insalled it yet and compile it with Python support. See also ReadMe for further installation information.</p>\n</div>\n<div id=\"additional\">\n<h3>Additional:</h3>\n<p>If you are using Linux as I do (Ubuntu), nearly all of these tools and libraries can be installed from precompiled versions. But for xode you will have to download PyODE from <a href=\"http://pyode.sourceforge.net\" rel=\"nofollow\">http://pyode.sourceforge.net</a>.</p>\n</div>\n</div>\n<div id=\"install\">\n<h2>3. Install:</h2>\n<p>Using <tt>pip</tt>:</p>\n<pre>$ pip install odeViz\n</pre>\n<p>From a tarball:</p>\n<pre>$ python setup.py install\n</pre>\n</div>\n<div id=\"running-the-examples\">\n<h2>4. Running the examples:</h2>\n<p>I put two examples in this project, one (tutorial3.py) was taken from the PyODE-tutorial. In fact it is the same, I just removed all OpenGL-functionality. The second example (test.py) shows, how easy it is to define a simulation for ode with an XML document (see test.xml). To run this example you will have to use xode.</p>\n<p>For further explanation, have a look at our tutorial at: <a href=\"http://www.aizac.info/projects/ode-viz\" rel=\"nofollow\">http://www.aizac.info/projects/ode-viz</a></p>\n</div>\n\n          </div>"}, "last_serial": 795669, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "b51e3490f5fe751c1adb563514c24c51", "sha256": "03082a28a278e274d8a0d0f8133d7b97bff0bc23276a3310044247142ffc227b"}, "downloads": -1, "filename": "odeViz-0.2.tar.gz", "has_sig": false, "md5_digest": "b51e3490f5fe751c1adb563514c24c51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6131, "upload_time": "2013-05-02T20:22:32", "upload_time_iso_8601": "2013-05-02T20:22:32.725265Z", "url": "https://files.pythonhosted.org/packages/23/ca/c216c6ae18375806064d76130c0308742b484cd3b47ad313a9f789553c11/odeViz-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b51e3490f5fe751c1adb563514c24c51", "sha256": "03082a28a278e274d8a0d0f8133d7b97bff0bc23276a3310044247142ffc227b"}, "downloads": -1, "filename": "odeViz-0.2.tar.gz", "has_sig": false, "md5_digest": "b51e3490f5fe751c1adb563514c24c51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6131, "upload_time": "2013-05-02T20:22:32", "upload_time_iso_8601": "2013-05-02T20:22:32.725265Z", "url": "https://files.pythonhosted.org/packages/23/ca/c216c6ae18375806064d76130c0308742b484cd3b47ad313a9f789553c11/odeViz-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:31 2020"}