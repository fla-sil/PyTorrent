{"info": {"author": "LouiSakaki", "author_email": "e1352207@outlook.jp", "bugtrack_url": null, "classifiers": [], "description": "pyokaka\n===\nSimple tool for converting [Roma-ji][^1] sentences into [Hiragana][^2] one.\\\n\u30ed\u30fc\u30de\u5b57\u306e\u6587\u3092\u5e73\u4eee\u540d\u306b\u5909\u63db\u3059\u308b\u30b7\u30f3\u30d7\u30eb\u306a\u30c4\u30fc\u30eb\u3067\u3059\u3002\n\n## The origin of package name\n\nAn homage to [pykakashi](https://pypi.org/project/pykakasi/) that provides highly function to convert Kana-Kanji into Roma-ji.\n_Okaka_(\u304a\u304b\u304b) is easy Japanese word that mean bonito flakes.\n\n[^1]: https://en.wikipedia.org/wiki/Romanization_of_Japanese\n[^2]: https://en.wikipedia.org/wiki/Hiragana\n\n## Demo\n\n**As command line tool**\\\nUse as REPL just by calling from terminal. To quit, send EOF.\n```cmd\n$ python -m pyokaka.okaka\n\nRoman >>> ohayougozaimasu\nJKana ... \u304a\u306f\u3088\u3046\u3054\u3056\u3044\u307e\u3059\nRoman >>> kon'nichiwa\nJKana ... \u3053\u3093\u306b\u3061\u308f\nRoman >>> oyasuminasai\nJKana ... \u304a\u3084\u3059\u307f\u306a\u3055\u3044\n```\n\nYou can indicate file you want to convert.\n```cmd\n$ cat sample.txt\nIma wa mukashi, taketori no okina to iu mono ari keri.\n\n$ python -m pyokaka.okaka sample.txt\n\u3044\u307e \u308f \u3080\u304b\u3057, \u305f\u3051\u3068\u308a \u306e \u304a\u304d\u306a \u3068 \u3044\u3046 \u3082\u306e \u3042\u308a \u3051\u308a.\n```\n\nTo apply additional rule, load **utf-8 encoded** json file. \n```json:sample.json\n{\n    \"\u3089\": [\"la\"], \"\u308a\": [\"li\"], \"\u308b\": [\"lu\"], \"\u308c\": [\"le\"], \"\u308d\": [\"lo\"],\n    \"\u3075\u3041\": [\"pha\", \"hua\"], \"\u3075\u3043\": [\"phi\"]\n}\n```\n\n```cmd\n$ cat sample.txt\nelephant\nlalallalalla\n\n$ python -m pyokaka.okaka sample.txt\n\u3048l\u3048p\u306f\u3093t\nl\u3042l\u3042ll\u3042l\u3042ll\u3042\n\n$ python -m pyokaka.okaka sample.txt --load sample.json\nload for sample.json...\n\u3048\u308c\u3075\u3041\u3093t\n\u3089\u3089\u3063\u3089\u3089\u3063\u3089\n```\n\nFor more information, view `python -m pyokaka.okaka --help`.\n\n**As library**\n```python\n>>> from pyokaka import okaka\n>>> okaka.convert('katsuobushi')\n'\u304b\u3064\u304a\u3076\u3057'\n```\n\nYou can add more vocabulary as described below.\n```python\n>>> okaka.convert('philipps')\n'p\u3072l\u3044pps'\n>>>\n>>> okaka.update_convert_dct({\n...     'p': '\u3077', 's': '\u3059'\n... })\n>>>\n>>> okaka.convert('philips')\n'\u3077\u3072l\u3044\u3077\u3059'\n>>>\n>>> import json\n>>> with open('sample.json', encoding='utf-8') as fin:\n...     table = json.load(fin)\n...\n>>> okaka.update_transtable(table)\n>>> okaka.convert('philips')\n'\u3075\u3043\u308a\u3077\u3059'\n```\n\n## Notes\n\n- You cannot reset convert table without restart.\n- Though converter ignores letter what can be not interpret as a part of Roma-ji, remaining letters always be converted.\n    ```cmd\n    $ python -m pyokaka.okaka\n    Roman >>> Oh dear, this is English!\n    JKana ... \u304ah \u3067\u3042r, t\u3072s \u3044s \u3048\u3093gl\u3044sh!\n    ```\n\n- Hyphen always be replaced with [Cho'onpu](https://en.wikipedia.org/wiki/Ch%C5%8Donpu).\n    ```cmd\n    $ python -m pyokaka.okaka\n    Roman >>> Roma-ji\n    JKana ... \u308d\u307e\u30fc\u3058\n    ```\n\n- Converter never analyze sentence structure. So it cannot recognize 'wa', 'o' and 'e' as postpositional particle.\n    ```cmd\n    $ python -m pyokaka.okaka\n    Roman >>> Watashi wa depa-to e enpitsu o kai ni ikimashita.\n    JKana ... \u308f\u305f\u3057 \u308f \u3067\u3071\u30fc\u3068 \u3048 \u3048\u3093\u3074\u3064 \u304a \u304b\u3044 \u306b \u3044\u304d\u307e\u3057\u305f.\n    ```\n\n- Conversion is based on greedy algorithm. Single quote can be used as separater if you need.\n    ```cmd\n    Roman >>> honya\n    JKana ... \u307b\u306b\u3083\n    Roman >>> honnya\n    JKana ... \u307b\u3063\u306b\u3083\n    Roman >>> honnnya\n    JKana ... \u307b\u3093\u306b\u3083\n\n    Roman >>> hon'ya\n    JKana ... \u307b\u3093\u3084\n    ```\n\n## Install\n\nThis module is registered at PyPI. [PyPI - pyokaka](https://pypi.org/project/pyokaka/)\n\n```\n$ pip install pyokaka\n```\n\n## License\n[MIT](https://github.com/LouiS0616/brainbite/blob/master/LICENSE)\n\n## Author\n[LouiS0616](https://github.com/LouiS0616)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LouiS0616/pyokaka", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyokaka", "package_url": "https://pypi.org/project/pyokaka/", "platform": "", "project_url": "https://pypi.org/project/pyokaka/", "project_urls": {"Homepage": "https://github.com/LouiS0616/pyokaka"}, "release_url": "https://pypi.org/project/pyokaka/1.0.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Simple tool to translate from Roma-ji into Hiragana.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyokaka</h1>\n<p>Simple tool for converting <a href=\"https://en.wikipedia.org/wiki/Romanization_of_Japanese\" rel=\"nofollow\">Roma-ji</a> sentences into <a href=\"https://en.wikipedia.org/wiki/Hiragana\" rel=\"nofollow\">Hiragana</a> one.<br>\n\u30ed\u30fc\u30de\u5b57\u306e\u6587\u3092\u5e73\u4eee\u540d\u306b\u5909\u63db\u3059\u308b\u30b7\u30f3\u30d7\u30eb\u306a\u30c4\u30fc\u30eb\u3067\u3059\u3002</p>\n<h2>The origin of package name</h2>\n<p>An homage to <a href=\"https://pypi.org/project/pykakasi/\" rel=\"nofollow\">pykakashi</a> that provides highly function to convert Kana-Kanji into Roma-ji.\n<em>Okaka</em>(\u304a\u304b\u304b) is easy Japanese word that mean bonito flakes.</p>\n<h2>Demo</h2>\n<p><strong>As command line tool</strong><br>\nUse as REPL just by calling from terminal. To quit, send EOF.</p>\n<pre>$ python -m pyokaka.okaka\n\nRoman &gt;&gt;&gt; ohayougozaimasu\nJKana ... \u304a\u306f\u3088\u3046\u3054\u3056\u3044\u307e\u3059\nRoman &gt;&gt;&gt; kon'nichiwa\nJKana ... \u3053\u3093\u306b\u3061\u308f\nRoman &gt;&gt;&gt; oyasuminasai\nJKana ... \u304a\u3084\u3059\u307f\u306a\u3055\u3044\n</pre>\n<p>You can indicate file you want to convert.</p>\n<pre>$ cat sample.txt\nIma wa mukashi, taketori no okina to iu mono ari keri.\n\n$ python -m pyokaka.okaka sample.txt\n\u3044\u307e \u308f \u3080\u304b\u3057, \u305f\u3051\u3068\u308a \u306e \u304a\u304d\u306a \u3068 \u3044\u3046 \u3082\u306e \u3042\u308a \u3051\u308a.\n</pre>\n<p>To apply additional rule, load <strong>utf-8 encoded</strong> json file.</p>\n<pre>{\n    \"\u3089\": [\"la\"], \"\u308a\": [\"li\"], \"\u308b\": [\"lu\"], \"\u308c\": [\"le\"], \"\u308d\": [\"lo\"],\n    \"\u3075\u3041\": [\"pha\", \"hua\"], \"\u3075\u3043\": [\"phi\"]\n}\n</pre>\n<pre>$ cat sample.txt\nelephant\nlalallalalla\n\n$ python -m pyokaka.okaka sample.txt\n\u3048l\u3048p\u306f\u3093t\nl\u3042l\u3042ll\u3042l\u3042ll\u3042\n\n$ python -m pyokaka.okaka sample.txt --load sample.json\nload for sample.json...\n\u3048\u308c\u3075\u3041\u3093t\n\u3089\u3089\u3063\u3089\u3089\u3063\u3089\n</pre>\n<p>For more information, view <code>python -m pyokaka.okaka --help</code>.</p>\n<p><strong>As library</strong></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyokaka</span> <span class=\"kn\">import</span> <span class=\"n\">okaka</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">okaka</span><span class=\"o\">.</span><span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"s1\">'katsuobushi'</span><span class=\"p\">)</span>\n<span class=\"s1\">'\u304b\u3064\u304a\u3076\u3057'</span>\n</pre>\n<p>You can add more vocabulary as described below.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">okaka</span><span class=\"o\">.</span><span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"s1\">'philipps'</span><span class=\"p\">)</span>\n<span class=\"s1\">'p\u3072l\u3044pps'</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">okaka</span><span class=\"o\">.</span><span class=\"n\">update_convert_dct</span><span class=\"p\">({</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'p'</span><span class=\"p\">:</span> <span class=\"s1\">'\u3077'</span><span class=\"p\">,</span> <span class=\"s1\">'s'</span><span class=\"p\">:</span> <span class=\"s1\">'\u3059'</span>\n<span class=\"o\">...</span> <span class=\"p\">})</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">okaka</span><span class=\"o\">.</span><span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"s1\">'philips'</span><span class=\"p\">)</span>\n<span class=\"s1\">'\u3077\u3072l\u3044\u3077\u3059'</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'sample.json'</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf-8'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fin</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">fin</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">okaka</span><span class=\"o\">.</span><span class=\"n\">update_transtable</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">okaka</span><span class=\"o\">.</span><span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"s1\">'philips'</span><span class=\"p\">)</span>\n<span class=\"s1\">'\u3075\u3043\u308a\u3077\u3059'</span>\n</pre>\n<h2>Notes</h2>\n<ul>\n<li>\n<p>You cannot reset convert table without restart.</p>\n</li>\n<li>\n<p>Though converter ignores letter what can be not interpret as a part of Roma-ji, remaining letters always be converted.</p>\n<pre>$ python -m pyokaka.okaka\nRoman &gt;&gt;&gt; Oh dear, this is English!\nJKana ... \u304ah \u3067\u3042r, t\u3072s \u3044s \u3048\u3093gl\u3044sh!\n</pre>\n</li>\n<li>\n<p>Hyphen always be replaced with <a href=\"https://en.wikipedia.org/wiki/Ch%C5%8Donpu\" rel=\"nofollow\">Cho'onpu</a>.</p>\n<pre>$ python -m pyokaka.okaka\nRoman &gt;&gt;&gt; Roma-ji\nJKana ... \u308d\u307e\u30fc\u3058\n</pre>\n</li>\n<li>\n<p>Converter never analyze sentence structure. So it cannot recognize 'wa', 'o' and 'e' as postpositional particle.</p>\n<pre>$ python -m pyokaka.okaka\nRoman &gt;&gt;&gt; Watashi wa depa-to e enpitsu o kai ni ikimashita.\nJKana ... \u308f\u305f\u3057 \u308f \u3067\u3071\u30fc\u3068 \u3048 \u3048\u3093\u3074\u3064 \u304a \u304b\u3044 \u306b \u3044\u304d\u307e\u3057\u305f.\n</pre>\n</li>\n<li>\n<p>Conversion is based on greedy algorithm. Single quote can be used as separater if you need.</p>\n<pre>Roman &gt;&gt;&gt; honya\nJKana ... \u307b\u306b\u3083\nRoman &gt;&gt;&gt; honnya\nJKana ... \u307b\u3063\u306b\u3083\nRoman &gt;&gt;&gt; honnnya\nJKana ... \u307b\u3093\u306b\u3083\n\nRoman &gt;&gt;&gt; hon'ya\nJKana ... \u307b\u3093\u3084\n</pre>\n</li>\n</ul>\n<h2>Install</h2>\n<p>This module is registered at PyPI. <a href=\"https://pypi.org/project/pyokaka/\" rel=\"nofollow\">PyPI - pyokaka</a></p>\n<pre><code>$ pip install pyokaka\n</code></pre>\n<h2>License</h2>\n<p><a href=\"https://github.com/LouiS0616/brainbite/blob/master/LICENSE\" rel=\"nofollow\">MIT</a></p>\n<h2>Author</h2>\n<p><a href=\"https://github.com/LouiS0616\" rel=\"nofollow\">LouiS0616</a></p>\n\n          </div>"}, "last_serial": 5521214, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "cfda7716f79196d3f8a5f8685299c35c", "sha256": "332ea1595316c2c870d5c8b7dc4623cd777c1721eb0231c562694d23111c890e"}, "downloads": -1, "filename": "pyokaka-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cfda7716f79196d3f8a5f8685299c35c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7331, "upload_time": "2019-07-12T03:09:46", "upload_time_iso_8601": "2019-07-12T03:09:46.131956Z", "url": "https://files.pythonhosted.org/packages/76/22/1683e079784efe30cb58fab92be0e0ba4d812364739d9c1555e821bab8fb/pyokaka-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c06081ae98ca95edbeee0154fbddef4d", "sha256": "12c963c5245bd335ba070cfd273f7e34d5fa481416c74371bebe5e6e3746d57c"}, "downloads": -1, "filename": "pyokaka-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c06081ae98ca95edbeee0154fbddef4d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5827, "upload_time": "2019-07-12T03:09:48", "upload_time_iso_8601": "2019-07-12T03:09:48.472013Z", "url": "https://files.pythonhosted.org/packages/80/1f/98b23ee9f4910a27df6c1976abad02abade5d3d5b9e66d1be292ebe54fc2/pyokaka-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cfda7716f79196d3f8a5f8685299c35c", "sha256": "332ea1595316c2c870d5c8b7dc4623cd777c1721eb0231c562694d23111c890e"}, "downloads": -1, "filename": "pyokaka-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cfda7716f79196d3f8a5f8685299c35c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7331, "upload_time": "2019-07-12T03:09:46", "upload_time_iso_8601": "2019-07-12T03:09:46.131956Z", "url": "https://files.pythonhosted.org/packages/76/22/1683e079784efe30cb58fab92be0e0ba4d812364739d9c1555e821bab8fb/pyokaka-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c06081ae98ca95edbeee0154fbddef4d", "sha256": "12c963c5245bd335ba070cfd273f7e34d5fa481416c74371bebe5e6e3746d57c"}, "downloads": -1, "filename": "pyokaka-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c06081ae98ca95edbeee0154fbddef4d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5827, "upload_time": "2019-07-12T03:09:48", "upload_time_iso_8601": "2019-07-12T03:09:48.472013Z", "url": "https://files.pythonhosted.org/packages/80/1f/98b23ee9f4910a27df6c1976abad02abade5d3d5b9e66d1be292ebe54fc2/pyokaka-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:18 2020"}