{"info": {"author": "Jacob Rief", "author_email": "jacob.rief@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Application Frameworks"], "description": "# SendCloud Shipping Provider Integration for django-SHOP\n\nThis integrates the **SendCloud** API for **django-SHOP** version 1.0 and above.\n\n\n## Installation\n\nfor django-SHOP version 1.0 and later:\n\n```\npip install djangoshop-sendcloud<1.1\n```\n\n\n## Preparation\n\nAt [SendCloud](https://panel.sendcloud.sc/) create an account.\n\nIn your personal account settings, click on **Settings**. There:\n\n* Add a **Sender Address**.\n* In **Financial > Direct Debit** add your recurring payment settings. There your bank account is\n  charged with \u20ac 0.01, but this may take a few hours or even one day until everything is checked.\n* In **Selected Shop** select **SendCloud API** with a name of your choice. There, extract the\n  **Public Key** and the **Secret Key** (see below).\n\n\n## Configuration\n\nIn `settings.py` of the merchant's project:\n\nAdd `'shop_sendcloud'` to `INSTALLED_APPS`.\n\nAdd `'shop_sendcloud.modifiers.SendcloudShippingModifier'` to the list of `SHOP_CART_MODIFIERS`.\n\nAdd `'shop_sendcloud.shipping.OrderWorkflowMixin'` to the list of `SHOP_ORDER_WORKFLOWS`.\n\nIf you run **django-SHOP** with partial delivery, replace the `OrderItemSerializer` with the one provided:\n`SHOP_ORDER_ITEM_SERIALIZER = 'shop_sendcloud.serializers.OrderItemSerializer'`\nand change the workflow to:\n\n```python\nSHOP_ORDER_WORKFLOWS = [\n    ...\n    'shop_sendcloud.workflows.CommonOrderWorkflowMixin',\n    'shop.shipping.workflows.PartialDeliveryWorkflowMixin',\n]\n```\n\nOtherwise, without partial delivery, change the workflow to:\n\n```python\nSHOP_ORDER_WORKFLOWS = [\n    ...\n    'shop_sendcloud.workflows.SingularOrderWorkflowMixin',\n    'shop.shipping.workflows.CommissionGoodsWorkflowMixin',\n]\n```\n\nAdd the **Public Key** and the **Secret Key** as provided by SendCloud (see above):\n\n```python\nSHOP_SENDCLOUD = {\n  'API_KEY': '<public-key-as-provided-by-SendCloud>',\n  'API_SECRET': '<secret-key-as-provided-by-SendCloud>',\n}\n```\n\nSince SendClouds sets the Shipping ID for us, we disable that field in the\nbackend, using `SHOP_MANUAL_SHIPPING_ID = False`.\n\n**SendCloud** requires a specific address model, therefore ensure that you \"materialize\" the one\nprovided with **djangoshop-sendcloud** and not the defaults from `shop/models/defaults/address`.\n\nTypically, it's enough to import the alternative classes for `BillingAddress`, `ShippingAddress`\nand `Customer` into `models.py` of your merchant implementation:\n\n```python\nfrom shop_sendcloud.models.address import BillingAddress, ShippingAddress\nfrom shop_sendcloud.models.customer import Customer\n```\n\n\n## Initialization\n\nCreate two additional database tables as required by **djangoshop-sendcloud**:\n\n```bash\npython manange.py migrate djangoshop_sendcloud\n```\n\nFinally, load all possible shipping options into your shop:\n\n```bash\npython manange.py sendcloud_import\n```\nremember to run this job on a regular basis, say once a week, to update shipping prices.\n\n\n## Usage\n\nWhen **django-SHOP** renders the form **Shipping Method** inside the checkout view, additional\noptions will be available. For each carrier configured in the **SendCloud** backend, an extra radio\nbutton appears. Whatever the customer selects, will be stored inside **django-SHOP**'s `OrderModel`.\n\nIn the Django Admin backend, only after fulfilling the order, a new button apprears named\n**PRINT SHIPPING LABEL**. Clicking on that button fetches a PDF document from the SendCloud API and\nforwards it to the Django Admin interface, from where it can be printed out.\n\n\n## Changes\n\n### 1.0.1\n* Adopt Models to work with Django>2.\n\n### 1.0\n* Initial working release.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jrief/djangoshop-sendcloud", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "djangoshop-sendcloud", "package_url": "https://pypi.org/project/djangoshop-sendcloud/", "platform": "OS Independent", "project_url": "https://pypi.org/project/djangoshop-sendcloud/", "project_urls": {"Homepage": "https://github.com/jrief/djangoshop-sendcloud"}, "release_url": "https://pypi.org/project/djangoshop-sendcloud/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "SendCloud Shipping Provider Integration for django-shop", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SendCloud Shipping Provider Integration for django-SHOP</h1>\n<p>This integrates the <strong>SendCloud</strong> API for <strong>django-SHOP</strong> version 1.0 and above.</p>\n<h2>Installation</h2>\n<p>for django-SHOP version 1.0 and later:</p>\n<pre><code>pip install djangoshop-sendcloud&lt;1.1\n</code></pre>\n<h2>Preparation</h2>\n<p>At <a href=\"https://panel.sendcloud.sc/\" rel=\"nofollow\">SendCloud</a> create an account.</p>\n<p>In your personal account settings, click on <strong>Settings</strong>. There:</p>\n<ul>\n<li>Add a <strong>Sender Address</strong>.</li>\n<li>In <strong>Financial &gt; Direct Debit</strong> add your recurring payment settings. There your bank account is\ncharged with \u20ac 0.01, but this may take a few hours or even one day until everything is checked.</li>\n<li>In <strong>Selected Shop</strong> select <strong>SendCloud API</strong> with a name of your choice. There, extract the\n<strong>Public Key</strong> and the <strong>Secret Key</strong> (see below).</li>\n</ul>\n<h2>Configuration</h2>\n<p>In <code>settings.py</code> of the merchant's project:</p>\n<p>Add <code>'shop_sendcloud'</code> to <code>INSTALLED_APPS</code>.</p>\n<p>Add <code>'shop_sendcloud.modifiers.SendcloudShippingModifier'</code> to the list of <code>SHOP_CART_MODIFIERS</code>.</p>\n<p>Add <code>'shop_sendcloud.shipping.OrderWorkflowMixin'</code> to the list of <code>SHOP_ORDER_WORKFLOWS</code>.</p>\n<p>If you run <strong>django-SHOP</strong> with partial delivery, replace the <code>OrderItemSerializer</code> with the one provided:\n<code>SHOP_ORDER_ITEM_SERIALIZER = 'shop_sendcloud.serializers.OrderItemSerializer'</code>\nand change the workflow to:</p>\n<pre><span class=\"n\">SHOP_ORDER_WORKFLOWS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'shop_sendcloud.workflows.CommonOrderWorkflowMixin'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'shop.shipping.workflows.PartialDeliveryWorkflowMixin'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Otherwise, without partial delivery, change the workflow to:</p>\n<pre><span class=\"n\">SHOP_ORDER_WORKFLOWS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'shop_sendcloud.workflows.SingularOrderWorkflowMixin'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'shop.shipping.workflows.CommissionGoodsWorkflowMixin'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Add the <strong>Public Key</strong> and the <strong>Secret Key</strong> as provided by SendCloud (see above):</p>\n<pre><span class=\"n\">SHOP_SENDCLOUD</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s1\">'API_KEY'</span><span class=\"p\">:</span> <span class=\"s1\">'&lt;public-key-as-provided-by-SendCloud&gt;'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'API_SECRET'</span><span class=\"p\">:</span> <span class=\"s1\">'&lt;secret-key-as-provided-by-SendCloud&gt;'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Since SendClouds sets the Shipping ID for us, we disable that field in the\nbackend, using <code>SHOP_MANUAL_SHIPPING_ID = False</code>.</p>\n<p><strong>SendCloud</strong> requires a specific address model, therefore ensure that you \"materialize\" the one\nprovided with <strong>djangoshop-sendcloud</strong> and not the defaults from <code>shop/models/defaults/address</code>.</p>\n<p>Typically, it's enough to import the alternative classes for <code>BillingAddress</code>, <code>ShippingAddress</code>\nand <code>Customer</code> into <code>models.py</code> of your merchant implementation:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">shop_sendcloud.models.address</span> <span class=\"kn\">import</span> <span class=\"n\">BillingAddress</span><span class=\"p\">,</span> <span class=\"n\">ShippingAddress</span>\n<span class=\"kn\">from</span> <span class=\"nn\">shop_sendcloud.models.customer</span> <span class=\"kn\">import</span> <span class=\"n\">Customer</span>\n</pre>\n<h2>Initialization</h2>\n<p>Create two additional database tables as required by <strong>djangoshop-sendcloud</strong>:</p>\n<pre>python manange.py migrate djangoshop_sendcloud\n</pre>\n<p>Finally, load all possible shipping options into your shop:</p>\n<pre>python manange.py sendcloud_import\n</pre>\n<p>remember to run this job on a regular basis, say once a week, to update shipping prices.</p>\n<h2>Usage</h2>\n<p>When <strong>django-SHOP</strong> renders the form <strong>Shipping Method</strong> inside the checkout view, additional\noptions will be available. For each carrier configured in the <strong>SendCloud</strong> backend, an extra radio\nbutton appears. Whatever the customer selects, will be stored inside <strong>django-SHOP</strong>'s <code>OrderModel</code>.</p>\n<p>In the Django Admin backend, only after fulfilling the order, a new button apprears named\n<strong>PRINT SHIPPING LABEL</strong>. Clicking on that button fetches a PDF document from the SendCloud API and\nforwards it to the Django Admin interface, from where it can be printed out.</p>\n<h2>Changes</h2>\n<h3>1.0.1</h3>\n<ul>\n<li>Adopt Models to work with Django&gt;2.</li>\n</ul>\n<h3>1.0</h3>\n<ul>\n<li>Initial working release.</li>\n</ul>\n\n          </div>"}, "last_serial": 6425584, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "7484fae20c161b01ac1002c410045fe8", "sha256": "2cd34a270ae3a891c6263e6fd94a3bae9222ed27242febcb6333a77b59d6cb0d"}, "downloads": -1, "filename": "djangoshop-sendcloud-1.0.tar.gz", "has_sig": false, "md5_digest": "7484fae20c161b01ac1002c410045fe8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11072, "upload_time": "2019-05-04T07:39:17", "upload_time_iso_8601": "2019-05-04T07:39:17.737256Z", "url": "https://files.pythonhosted.org/packages/2f/1d/014ea5ac241efdf46bc6bd5bce48eed978e706540b3d61c44383b37ab210/djangoshop-sendcloud-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "d6ff8a5af9cc5503a224e0a5b0999c2b", "sha256": "7b8e40fca84c7ac2c74b4ced1b55d5d0d3f95d7c14afc493280228a8761e9eea"}, "downloads": -1, "filename": "djangoshop-sendcloud-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d6ff8a5af9cc5503a224e0a5b0999c2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11202, "upload_time": "2020-01-09T22:35:31", "upload_time_iso_8601": "2020-01-09T22:35:31.814716Z", "url": "https://files.pythonhosted.org/packages/ec/7e/8c3ce9d37952edb0baa9bd7b6184607250a140b05097ed2cfd61a62537fa/djangoshop-sendcloud-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d6ff8a5af9cc5503a224e0a5b0999c2b", "sha256": "7b8e40fca84c7ac2c74b4ced1b55d5d0d3f95d7c14afc493280228a8761e9eea"}, "downloads": -1, "filename": "djangoshop-sendcloud-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d6ff8a5af9cc5503a224e0a5b0999c2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11202, "upload_time": "2020-01-09T22:35:31", "upload_time_iso_8601": "2020-01-09T22:35:31.814716Z", "url": "https://files.pythonhosted.org/packages/ec/7e/8c3ce9d37952edb0baa9bd7b6184607250a140b05097ed2cfd61a62537fa/djangoshop-sendcloud-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:29 2020"}