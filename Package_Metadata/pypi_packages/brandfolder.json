{"info": {"author": "Brandfolder", "author_email": "developers@brandfolder.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# The Official Python Brandfolder SDK\n\n[![Brandfolder](https://cdn.brandfolder.io/YUHW9ZNT/as/znoqr595/Primary_Brandfolder_Logo.png)](https://brandfolder.com)\n\n### What is Brandfolder?\n\nBrandfolder is a visually-elegant and user-friendly Digital Asset Management software that allows marketers and creatives across industries to maximize their brand management potential. Brandfolder is more than just storage for your digital assets; with our solution's cloud-first architecture, users can organize, manipulate, distribute, and analyze their most important digital collateral from a single source of truth. With advanced AI-powered smart search, asset editing and manipulation, annotated workflow with approvals and notifications, and actionable brand insights, Brandfolder's feature suite amplifies cross-team collaboration and productivity, and empowers external users to access the content they need with unprecedented ease.\n\n## Installation\n\nInstall latest official build:\n```sh\npip install brandfolder\n```\n\nInstall from source:\n```sh\ngit clone git@github.com:brandfolder/sdk-python.git\ncd sdk-python\npython setup.py install\n```\n\n## Usage\nInteraction with the Brandfolder API via the Python SDK is client based. The first thing you need to do\nis create a client:\n\n`client = Client(api_key=API_KEY)`\n\nA valid Brandfolder API key is required for all actions. Find yours at https://brandfolder.com/profile#integrations.\n\n#### Methods for interacting with resource objects from Brandfolder:\n\n`obj.fetch()`: Returns a list from the first page of available objects of the provided type.\n\n`obj.first()`: Returns the first object returned of the provided type.\n\n`obj.fetch_by_id(<resource_id>)`: Returns the object associated with the provided type and id.\n\n`obj.get(<attribute>)`: Returns the provided attribute value of the associated object.\n\n`obj.refresh()`: Updates local object attributes with what currently exists in Brandfolder.\n\n`obj.set(<updates>)`: Prepares to apply provided updates to the associated object.\n\n`obj.update()`: Pushes updates to the associated object to Brandfolder.\n\n`obj.delete()`: Deletes the associated object in Brandfolder.\n\n`brandfolder_obj.create_section()`: Creates section in the associated Brandfolder.\n\n`brandfolder_obj.create_collection()`: Creates collection in the associated Brandfolder.\n\n`brandfolder_obj.create_asset(attachments_data, section_key, **attributes)`: Creates asset in the associated Brandfolder. This is also available for a Collection.\n\n`brandfolder_obj.search(query)`: Returns assets in the associated Brandfolder that match the query parameters provided.\n\n#### Fields on resource objects:\n`obj.id`: The id of the associated object.\n\n`obj.attributes`: The attributes of the provided object.\n\n`obj.updates`: A dict of staged updates to the associated object that are ready to apply.\n\n\n#### Examples:\nSee the complete API documentation at https://developer.brandfolder.com for more examples.\n\nGet all available organizations:\n```python\norgs = client.organizations.fetch()\n```\n\nGet a specific Brandfolder:\n```python\nbf = client.brandfolders.fetch_by_id(<brandfolder_id>)\n```\n\nUpdating an asset:\n```python\nasset = bf.assets.fetch_by_id(<asset_id>)  # Grab an asset\nasset.set(name='New Name')\nasset.update()  # Pushes new attributes to Brandfolder\n```\n\nSearch for assets within a Brandfolder:\n```python\n# Will return results with a name containing \"Sample\" of filetype \".png\"\n\nbf = client.brandfolders.fetch_by_id(<brandfolder_id>)\nsearch_parameters = ['name:sample', 'extension:png']\nresults = bf.assets.search(search_parameters)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brandfolder/sdk-python", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "brandfolder", "package_url": "https://pypi.org/project/brandfolder/", "platform": "", "project_url": "https://pypi.org/project/brandfolder/", "project_urls": {"Homepage": "https://github.com/brandfolder/sdk-python"}, "release_url": "https://pypi.org/project/brandfolder/1.1.0/", "requires_dist": ["requests (>=2)"], "requires_python": "", "summary": "A simple wrapper for the Brandfolder API", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>The Official Python Brandfolder SDK</h1>\n<p><a href=\"https://brandfolder.com\" rel=\"nofollow\"><img alt=\"Brandfolder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/680ffffcd2300784f480a8b61d1da7ef2e9cbd04/68747470733a2f2f63646e2e6272616e64666f6c6465722e696f2f59554857395a4e542f61732f7a6e6f71723539352f5072696d6172795f4272616e64666f6c6465725f4c6f676f2e706e67\"></a></p>\n<h3>What is Brandfolder?</h3>\n<p>Brandfolder is a visually-elegant and user-friendly Digital Asset Management software that allows marketers and creatives across industries to maximize their brand management potential. Brandfolder is more than just storage for your digital assets; with our solution's cloud-first architecture, users can organize, manipulate, distribute, and analyze their most important digital collateral from a single source of truth. With advanced AI-powered smart search, asset editing and manipulation, annotated workflow with approvals and notifications, and actionable brand insights, Brandfolder's feature suite amplifies cross-team collaboration and productivity, and empowers external users to access the content they need with unprecedented ease.</p>\n<h2>Installation</h2>\n<p>Install latest official build:</p>\n<pre>pip install brandfolder\n</pre>\n<p>Install from source:</p>\n<pre>git clone git@github.com:brandfolder/sdk-python.git\n<span class=\"nb\">cd</span> sdk-python\npython setup.py install\n</pre>\n<h2>Usage</h2>\n<p>Interaction with the Brandfolder API via the Python SDK is client based. The first thing you need to do\nis create a client:</p>\n<p><code>client = Client(api_key=API_KEY)</code></p>\n<p>A valid Brandfolder API key is required for all actions. Find yours at <a href=\"https://brandfolder.com/profile#integrations\" rel=\"nofollow\">https://brandfolder.com/profile#integrations</a>.</p>\n<h4>Methods for interacting with resource objects from Brandfolder:</h4>\n<p><code>obj.fetch()</code>: Returns a list from the first page of available objects of the provided type.</p>\n<p><code>obj.first()</code>: Returns the first object returned of the provided type.</p>\n<p><code>obj.fetch_by_id(&lt;resource_id&gt;)</code>: Returns the object associated with the provided type and id.</p>\n<p><code>obj.get(&lt;attribute&gt;)</code>: Returns the provided attribute value of the associated object.</p>\n<p><code>obj.refresh()</code>: Updates local object attributes with what currently exists in Brandfolder.</p>\n<p><code>obj.set(&lt;updates&gt;)</code>: Prepares to apply provided updates to the associated object.</p>\n<p><code>obj.update()</code>: Pushes updates to the associated object to Brandfolder.</p>\n<p><code>obj.delete()</code>: Deletes the associated object in Brandfolder.</p>\n<p><code>brandfolder_obj.create_section()</code>: Creates section in the associated Brandfolder.</p>\n<p><code>brandfolder_obj.create_collection()</code>: Creates collection in the associated Brandfolder.</p>\n<p><code>brandfolder_obj.create_asset(attachments_data, section_key, **attributes)</code>: Creates asset in the associated Brandfolder. This is also available for a Collection.</p>\n<p><code>brandfolder_obj.search(query)</code>: Returns assets in the associated Brandfolder that match the query parameters provided.</p>\n<h4>Fields on resource objects:</h4>\n<p><code>obj.id</code>: The id of the associated object.</p>\n<p><code>obj.attributes</code>: The attributes of the provided object.</p>\n<p><code>obj.updates</code>: A dict of staged updates to the associated object that are ready to apply.</p>\n<h4>Examples:</h4>\n<p>See the complete API documentation at <a href=\"https://developer.brandfolder.com\" rel=\"nofollow\">https://developer.brandfolder.com</a> for more examples.</p>\n<p>Get all available organizations:</p>\n<pre><span class=\"n\">orgs</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">organizations</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">()</span>\n</pre>\n<p>Get a specific Brandfolder:</p>\n<pre><span class=\"n\">bf</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">brandfolders</span><span class=\"o\">.</span><span class=\"n\">fetch_by_id</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">brandfolder_id</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n</pre>\n<p>Updating an asset:</p>\n<pre><span class=\"n\">asset</span> <span class=\"o\">=</span> <span class=\"n\">bf</span><span class=\"o\">.</span><span class=\"n\">assets</span><span class=\"o\">.</span><span class=\"n\">fetch_by_id</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">asset_id</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>  <span class=\"c1\"># Grab an asset</span>\n<span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'New Name'</span><span class=\"p\">)</span>\n<span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>  <span class=\"c1\"># Pushes new attributes to Brandfolder</span>\n</pre>\n<p>Search for assets within a Brandfolder:</p>\n<pre><span class=\"c1\"># Will return results with a name containing \"Sample\" of filetype \".png\"</span>\n\n<span class=\"n\">bf</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">brandfolders</span><span class=\"o\">.</span><span class=\"n\">fetch_by_id</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">brandfolder_id</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n<span class=\"n\">search_parameters</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'name:sample'</span><span class=\"p\">,</span> <span class=\"s1\">'extension:png'</span><span class=\"p\">]</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">bf</span><span class=\"o\">.</span><span class=\"n\">assets</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">search_parameters</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6988446, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "430d05397719ad838ccd61ae314028a1", "sha256": "1d0c26667df6ef2f519312340937d52d7c75e34df2df656bb1913c7a250ead0d"}, "downloads": -1, "filename": "brandfolder-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "430d05397719ad838ccd61ae314028a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8448, "upload_time": "2020-04-01T17:48:12", "upload_time_iso_8601": "2020-04-01T17:48:12.408822Z", "url": "https://files.pythonhosted.org/packages/3f/2d/a39bde3630fd9d795c7c008b70c96c4ec7c9b9996109d5e0d2701844c2bc/brandfolder-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "215b2bc4491934cd20ab938d7c80271d", "sha256": "f0eea301ca0fd7f020943f370c332bc0936d3344fbe2679115fd0fe13afd86a2"}, "downloads": -1, "filename": "brandfolder-1.0.0.tar.gz", "has_sig": false, "md5_digest": "215b2bc4491934cd20ab938d7c80271d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5330, "upload_time": "2020-04-01T17:48:14", "upload_time_iso_8601": "2020-04-01T17:48:14.513471Z", "url": "https://files.pythonhosted.org/packages/93/12/7ebcef451c780f9aa9bffed17e49f3b48d8851846fa28214adfc99916f04/brandfolder-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4c2564a4eca877940bffc2b25ac2234e", "sha256": "8f436b7ca007ca1fbdb45857c818d7833f3dbd02a3d7e283b3867e12d0807016"}, "downloads": -1, "filename": "brandfolder-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4c2564a4eca877940bffc2b25ac2234e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8822, "upload_time": "2020-04-09T18:24:20", "upload_time_iso_8601": "2020-04-09T18:24:20.243747Z", "url": "https://files.pythonhosted.org/packages/9d/4e/ae43d3032861c54cb7a5a85d0ea999256004dcf1ad52ed26c64b219c0383/brandfolder-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6141617c0d2702190a95277ac0e9b94", "sha256": "7da9c6529f49cdc7dcc60a7a757f2651eba636a97ca4523faadb13ce640b947e"}, "downloads": -1, "filename": "brandfolder-1.0.1.tar.gz", "has_sig": false, "md5_digest": "e6141617c0d2702190a95277ac0e9b94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5712, "upload_time": "2020-04-09T18:24:20", "upload_time_iso_8601": "2020-04-09T18:24:20.975161Z", "url": "https://files.pythonhosted.org/packages/7c/60/acdc6ab75e9fbf5167db76dea0bb78d73ba7651426f0375f08100a9d6d59/brandfolder-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "7d7792809372010f79d2221e70257fd4", "sha256": "26be1d559752472f54e12f61a1a508b6e42a05a854e9f2c3a399381c5f4b9fac"}, "downloads": -1, "filename": "brandfolder-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7d7792809372010f79d2221e70257fd4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8825, "upload_time": "2020-04-09T18:31:23", "upload_time_iso_8601": "2020-04-09T18:31:23.629296Z", "url": "https://files.pythonhosted.org/packages/18/92/d706ef0018a15d77081aa0f4f8f92c529cbe7349ff29c3c05880472dbc16/brandfolder-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "86712ca5aa58279fca61990960effce0", "sha256": "07dcb35be27bbd1d9e63d6871d4f54507895554d7e0f5b094ae032fc335f9ccd"}, "downloads": -1, "filename": "brandfolder-1.0.2.tar.gz", "has_sig": false, "md5_digest": "86712ca5aa58279fca61990960effce0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5762, "upload_time": "2020-04-09T18:31:24", "upload_time_iso_8601": "2020-04-09T18:31:24.383219Z", "url": "https://files.pythonhosted.org/packages/86/58/41a5f858afa848be5ebb774434dba710b229409e72442502ee936fe2c7ad/brandfolder-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "6feaf73c9f5513a469b62a1730340a72", "sha256": "8905f549115bd1ebffdd5cef4cadbd51b882b178bf54a9aa3f9505afb3bdf14f"}, "downloads": -1, "filename": "brandfolder-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6feaf73c9f5513a469b62a1730340a72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9349, "upload_time": "2020-04-09T18:38:25", "upload_time_iso_8601": "2020-04-09T18:38:25.577320Z", "url": "https://files.pythonhosted.org/packages/ef/bf/6e09d178b8f82b6b91f827d282dd37302ff97889b08e02f9407dd257927b/brandfolder-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c86f0005ac69bf7236bebf423100710", "sha256": "02330b90967c4246f91913193624feab059a4d8bcaa857c2078186cf9678d317"}, "downloads": -1, "filename": "brandfolder-1.1.0.tar.gz", "has_sig": false, "md5_digest": "2c86f0005ac69bf7236bebf423100710", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6073, "upload_time": "2020-04-09T18:38:26", "upload_time_iso_8601": "2020-04-09T18:38:26.301405Z", "url": "https://files.pythonhosted.org/packages/e1/ac/c167cd62af2f5adf316a1298744826bc7172f7b2ccf326aaf7d5bef651da/brandfolder-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6feaf73c9f5513a469b62a1730340a72", "sha256": "8905f549115bd1ebffdd5cef4cadbd51b882b178bf54a9aa3f9505afb3bdf14f"}, "downloads": -1, "filename": "brandfolder-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6feaf73c9f5513a469b62a1730340a72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9349, "upload_time": "2020-04-09T18:38:25", "upload_time_iso_8601": "2020-04-09T18:38:25.577320Z", "url": "https://files.pythonhosted.org/packages/ef/bf/6e09d178b8f82b6b91f827d282dd37302ff97889b08e02f9407dd257927b/brandfolder-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c86f0005ac69bf7236bebf423100710", "sha256": "02330b90967c4246f91913193624feab059a4d8bcaa857c2078186cf9678d317"}, "downloads": -1, "filename": "brandfolder-1.1.0.tar.gz", "has_sig": false, "md5_digest": "2c86f0005ac69bf7236bebf423100710", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6073, "upload_time": "2020-04-09T18:38:26", "upload_time_iso_8601": "2020-04-09T18:38:26.301405Z", "url": "https://files.pythonhosted.org/packages/e1/ac/c167cd62af2f5adf316a1298744826bc7172f7b2ccf326aaf7d5bef651da/brandfolder-1.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:23 2020"}