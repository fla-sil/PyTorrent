{"info": {"author": "Microsoft HPC Pack", "author_email": "hpccoree@microsoft.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# HPC Pack ACM API for Python\n\n## Requirements.\n\nPython 2.7, 3.5 or 3.6.\n\n## Installation & Usage\n\n```sh\npython -m pip install --user hpc-acm\n```\n\nThen import the package:\n```python\nimport hpc_acm\n```\n\n## Getting Started\n\nPlease follow the [installation procedure](#installation--usage) and then run the following:\n\n```python\nfrom __future__ import print_function\nimport time\nimport hpc_acm\nfrom hpc_acm.rest import ApiException\nfrom pprint import pprint\n\n# Set your API Base Point\nhpc_acm.configuration.host = 'https://YOUR_SERVER_NAME/YOUR_PATH'\n# Configure OAuth2 access token for authorization: aad\nhpc_acm.configuration.access_token = 'YOUR_ACCESS_TOKEN'\n# create an instance of the API class\napi_instance = hpc_acm.DefaultApi()\n\ntry:\n    # Get a list of nodes\n    nodes = api_instance.get_nodes()\nexcept ApiException as e:\n    print(e)\nelse:\n    for node in nodes:\n        print(node)\n\n```\n\n## Documentation for API Endpoints\n\nAll URIs are relative to API Base Point, which is be set by `host` in configuration as shown above.\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*DefaultApi* | [**cancel_clusrun_job**](docs/DefaultApi.md#cancel_clusrun_job) | **PATCH** /clusrun/{id} | Cancel a clusrun\n*DefaultApi* | [**cancel_diagnostic_job**](docs/DefaultApi.md#cancel_diagnostic_job) | **PATCH** /diagnostics/{id} | Cancel a diagnostic test run\n*DefaultApi* | [**create_clusrun_job**](docs/DefaultApi.md#create_clusrun_job) | **POST** /clusrun | Create a clusrun\n*DefaultApi* | [**create_diagnostic_job**](docs/DefaultApi.md#create_diagnostic_job) | **POST** /diagnostics | Create a diagnostic test run\n*DefaultApi* | [**get_clus_run_job_summary**](docs/DefaultApi.md#get_clus_run_job_summary) | **GET** /dashboard/clusrun | Get summary of ClusRun jobs\n*DefaultApi* | [**get_clusrun_events**](docs/DefaultApi.md#get_clusrun_events) | **GET** /clusrun/{id}/events | Get clusrun events\n*DefaultApi* | [**get_clusrun_job**](docs/DefaultApi.md#get_clusrun_job) | **GET** /clusrun/{id} | Get a clusrun\n*DefaultApi* | [**get_clusrun_job_aggregation_result**](docs/DefaultApi.md#get_clusrun_job_aggregation_result) | **GET** /clusrun/{id}/aggregationResult | Get aggregation result of a clusrun job\n*DefaultApi* | [**get_clusrun_jobs**](docs/DefaultApi.md#get_clusrun_jobs) | **GET** /clusrun | Get a list of clusruns\n*DefaultApi* | [**get_clusrun_output**](docs/DefaultApi.md#get_clusrun_output) | **GET** /output/clusrun/{key}/raw | Get the whole output of a task\n*DefaultApi* | [**get_clusrun_output_in_page**](docs/DefaultApi.md#get_clusrun_output_in_page) | **GET** /output/clusrun/{key}/page | Get partial output of a task\n*DefaultApi* | [**get_clusrun_task**](docs/DefaultApi.md#get_clusrun_task) | **GET** /clusrun/{id}/tasks/{taskId} | Get a task of a clusrun\n*DefaultApi* | [**get_clusrun_task_result**](docs/DefaultApi.md#get_clusrun_task_result) | **GET** /clusrun/{id}/tasks/{taskId}/result | Get a task result of a clusrun\n*DefaultApi* | [**get_clusrun_tasks**](docs/DefaultApi.md#get_clusrun_tasks) | **GET** /clusrun/{id}/tasks | Get tasks of a clusrun\n*DefaultApi* | [**get_diagnostic_events**](docs/DefaultApi.md#get_diagnostic_events) | **GET** /diagnostics/{id}/events | Get events of a diagnostic test run\n*DefaultApi* | [**get_diagnostic_job**](docs/DefaultApi.md#get_diagnostic_job) | **GET** /diagnostics/{id} | Get a diagnostic test run\n*DefaultApi* | [**get_diagnostic_job_aggregation_result**](docs/DefaultApi.md#get_diagnostic_job_aggregation_result) | **GET** /diagnostics/{id}/aggregationResult | Get aggregation result of a diagnostic job\n*DefaultApi* | [**get_diagnostic_job_summary**](docs/DefaultApi.md#get_diagnostic_job_summary) | **GET** /dashboard/diagnostics | Get summary of diagnostic jobs\n*DefaultApi* | [**get_diagnostic_jobs**](docs/DefaultApi.md#get_diagnostic_jobs) | **GET** /diagnostics | Get a list of diagnostic test runs\n*DefaultApi* | [**get_diagnostic_task**](docs/DefaultApi.md#get_diagnostic_task) | **GET** /diagnostics/{id}/tasks/{taskId} | Get a task of a diagnostic test run\n*DefaultApi* | [**get_diagnostic_task_result**](docs/DefaultApi.md#get_diagnostic_task_result) | **GET** /diagnostics/{id}/tasks/{taskId}/result | Get a task result of a diagnostic test run\n*DefaultApi* | [**get_diagnostic_tasks**](docs/DefaultApi.md#get_diagnostic_tasks) | **GET** /diagnostics/{id}/tasks | Get tasks of a diagnostic test run\n*DefaultApi* | [**get_diagnostic_tests**](docs/DefaultApi.md#get_diagnostic_tests) | **GET** /diagnostics/tests | Get available diagnostic tests\n*DefaultApi* | [**get_metric_categories**](docs/DefaultApi.md#get_metric_categories) | **GET** /metrics/categories | Get node metric categories\n*DefaultApi* | [**get_metrics_of_category**](docs/DefaultApi.md#get_metrics_of_category) | **GET** /metrics/{category} | Get node merics in a category\n*DefaultApi* | [**get_node**](docs/DefaultApi.md#get_node) | **GET** /nodes/{id} | Get a node\n*DefaultApi* | [**get_node_events**](docs/DefaultApi.md#get_node_events) | **GET** /nodes/{id}/events | Get events of a node\n*DefaultApi* | [**get_node_jobs**](docs/DefaultApi.md#get_node_jobs) | **GET** /nodes/{id}/jobs | Get jobs of a node\n*DefaultApi* | [**get_node_metadata**](docs/DefaultApi.md#get_node_metadata) | **GET** /nodes/{id}/metadata | get metadata of a node\n*DefaultApi* | [**get_node_metric_history**](docs/DefaultApi.md#get_node_metric_history) | **GET** /nodes/{id}/metricHistory | Get metric history of a node\n*DefaultApi* | [**get_node_scheduled_events**](docs/DefaultApi.md#get_node_scheduled_events) | **GET** /nodes/{id}/scheduledEvents | get scheduled events of a node\n*DefaultApi* | [**get_node_summary**](docs/DefaultApi.md#get_node_summary) | **GET** /dashboard/nodes | Get summary of nodes\n*DefaultApi* | [**get_nodes**](docs/DefaultApi.md#get_nodes) | **GET** /nodes | Get a list of nodes\n*DefaultApi* | [**sync_scripts**](docs/DefaultApi.md#sync_scripts) | **POST** /sync | Sync diagnostic and metric scripts from GitHub\n\n\n## Documentation For Models\n\n - [DiagnoticTest](docs/DiagnoticTest.md)\n - [Event](docs/Event.md)\n - [IpV4](docs/IpV4.md)\n - [IpV6](docs/IpV6.md)\n - [Job](docs/Job.md)\n - [JobState](docs/JobState.md)\n - [JobSummary](docs/JobSummary.md)\n - [JobType](docs/JobType.md)\n - [JobUpdate](docs/JobUpdate.md)\n - [MacAddress](docs/MacAddress.md)\n - [Metrics](docs/Metrics.md)\n - [MetricsValues](docs/MetricsValues.md)\n - [Node](docs/Node.md)\n - [NodeGpu](docs/NodeGpu.md)\n - [NodeJob](docs/NodeJob.md)\n - [NodeMetadata](docs/NodeMetadata.md)\n - [NodeMetadataCompute](docs/NodeMetadataCompute.md)\n - [NodeMetadataNetwork](docs/NodeMetadataNetwork.md)\n - [NodeMetadataNetworkInterface](docs/NodeMetadataNetworkInterface.md)\n - [NodeMetadataNetworkIpv4](docs/NodeMetadataNetworkIpv4.md)\n - [NodeMetadataNetworkIpv4IpAddress](docs/NodeMetadataNetworkIpv4IpAddress.md)\n - [NodeMetadataNetworkIpv4Subnet](docs/NodeMetadataNetworkIpv4Subnet.md)\n - [NodeMetadataNetworkIpv6](docs/NodeMetadataNetworkIpv6.md)\n - [NodeMetrics](docs/NodeMetrics.md)\n - [NodeMetricsData](docs/NodeMetricsData.md)\n - [NodeMetricsMetricItems](docs/NodeMetricsMetricItems.md)\n - [NodeNetwork](docs/NodeNetwork.md)\n - [NodeRegistration](docs/NodeRegistration.md)\n - [NodeSummary](docs/NodeSummary.md)\n - [ScheduledEvent](docs/ScheduledEvent.md)\n - [ScheduledEvents](docs/ScheduledEvents.md)\n - [Task](docs/Task.md)\n - [TaskOutput](docs/TaskOutput.md)\n - [TaskResult](docs/TaskResult.md)\n - [TaskState](docs/TaskState.md)\n\n\n## Documentation For Authorization\n\n\n## aad\n\n- **Type**: OAuth\n- **Flow**: application\n- **Authorization URL**: \n- **Scopes**: N/A\n\n\n## Author\n\n\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Azure/hpcpack-acm-api-python", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "hpc-acm", "package_url": "https://pypi.org/project/hpc-acm/", "platform": "", "project_url": "https://pypi.org/project/hpc-acm/", "project_urls": {"Homepage": "https://github.com/Azure/hpcpack-acm-api-python"}, "release_url": "https://pypi.org/project/hpc-acm/1.3.1/", "requires_dist": ["urllib3 (>=1.15)", "six (>=1.10)", "certifi", "python-dateutil"], "requires_python": "", "summary": "HPC Web API", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # HPC Pack ACM API for Python<br><br>## Requirements.<br><br>Python 2.7, 3.5 or 3.6.<br><br>## Installation &amp; Usage<br><br>```sh<br>python -m pip install --user hpc-acm<br>```<br><br>Then import the package:<br>```python<br>import hpc_acm<br>```<br><br>## Getting Started<br><br>Please follow the [installation procedure](#installation--usage) and then run the following:<br><br>```python<br>from __future__ import print_function<br>import time<br>import hpc_acm<br>from hpc_acm.rest import ApiException<br>from pprint import pprint<br><br># Set your API Base Point<br>hpc_acm.configuration.host = 'https://YOUR_SERVER_NAME/YOUR_PATH'<br># Configure OAuth2 access token for authorization: aad<br>hpc_acm.configuration.access_token = 'YOUR_ACCESS_TOKEN'<br># create an instance of the API class<br>api_instance = hpc_acm.DefaultApi()<br><br>try:<br>    # Get a list of nodes<br>    nodes = api_instance.get_nodes()<br>except ApiException as e:<br>    print(e)<br>else:<br>    for node in nodes:<br>        print(node)<br><br>```<br><br>## Documentation for API Endpoints<br><br>All URIs are relative to API Base Point, which is be set by `host` in configuration as shown above.<br><br>Class | Method | HTTP request | Description<br>------------ | ------------- | ------------- | -------------<br>*DefaultApi* | [**cancel_clusrun_job**](docs/DefaultApi.md#cancel_clusrun_job) | **PATCH** /clusrun/{id} | Cancel a clusrun<br>*DefaultApi* | [**cancel_diagnostic_job**](docs/DefaultApi.md#cancel_diagnostic_job) | **PATCH** /diagnostics/{id} | Cancel a diagnostic test run<br>*DefaultApi* | [**create_clusrun_job**](docs/DefaultApi.md#create_clusrun_job) | **POST** /clusrun | Create a clusrun<br>*DefaultApi* | [**create_diagnostic_job**](docs/DefaultApi.md#create_diagnostic_job) | **POST** /diagnostics | Create a diagnostic test run<br>*DefaultApi* | [**get_clus_run_job_summary**](docs/DefaultApi.md#get_clus_run_job_summary) | **GET** /dashboard/clusrun | Get summary of ClusRun jobs<br>*DefaultApi* | [**get_clusrun_events**](docs/DefaultApi.md#get_clusrun_events) | **GET** /clusrun/{id}/events | Get clusrun events<br>*DefaultApi* | [**get_clusrun_job**](docs/DefaultApi.md#get_clusrun_job) | **GET** /clusrun/{id} | Get a clusrun<br>*DefaultApi* | [**get_clusrun_job_aggregation_result**](docs/DefaultApi.md#get_clusrun_job_aggregation_result) | **GET** /clusrun/{id}/aggregationResult | Get aggregation result of a clusrun job<br>*DefaultApi* | [**get_clusrun_jobs**](docs/DefaultApi.md#get_clusrun_jobs) | **GET** /clusrun | Get a list of clusruns<br>*DefaultApi* | [**get_clusrun_output**](docs/DefaultApi.md#get_clusrun_output) | **GET** /output/clusrun/{key}/raw | Get the whole output of a task<br>*DefaultApi* | [**get_clusrun_output_in_page**](docs/DefaultApi.md#get_clusrun_output_in_page) | **GET** /output/clusrun/{key}/page | Get partial output of a task<br>*DefaultApi* | [**get_clusrun_task**](docs/DefaultApi.md#get_clusrun_task) | **GET** /clusrun/{id}/tasks/{taskId} | Get a task of a clusrun<br>*DefaultApi* | [**get_clusrun_task_result**](docs/DefaultApi.md#get_clusrun_task_result) | **GET** /clusrun/{id}/tasks/{taskId}/result | Get a task result of a clusrun<br>*DefaultApi* | [**get_clusrun_tasks**](docs/DefaultApi.md#get_clusrun_tasks) | **GET** /clusrun/{id}/tasks | Get tasks of a clusrun<br>*DefaultApi* | [**get_diagnostic_events**](docs/DefaultApi.md#get_diagnostic_events) | **GET** /diagnostics/{id}/events | Get events of a diagnostic test run<br>*DefaultApi* | [**get_diagnostic_job**](docs/DefaultApi.md#get_diagnostic_job) | **GET** /diagnostics/{id} | Get a diagnostic test run<br>*DefaultApi* | [**get_diagnostic_job_aggregation_result**](docs/DefaultApi.md#get_diagnostic_job_aggregation_result) | **GET** /diagnostics/{id}/aggregationResult | Get aggregation result of a diagnostic job<br>*DefaultApi* | [**get_diagnostic_job_summary**](docs/DefaultApi.md#get_diagnostic_job_summary) | **GET** /dashboard/diagnostics | Get summary of diagnostic jobs<br>*DefaultApi* | [**get_diagnostic_jobs**](docs/DefaultApi.md#get_diagnostic_jobs) | **GET** /diagnostics | Get a list of diagnostic test runs<br>*DefaultApi* | [**get_diagnostic_task**](docs/DefaultApi.md#get_diagnostic_task) | **GET** /diagnostics/{id}/tasks/{taskId} | Get a task of a diagnostic test run<br>*DefaultApi* | [**get_diagnostic_task_result**](docs/DefaultApi.md#get_diagnostic_task_result) | **GET** /diagnostics/{id}/tasks/{taskId}/result | Get a task result of a diagnostic test run<br>*DefaultApi* | [**get_diagnostic_tasks**](docs/DefaultApi.md#get_diagnostic_tasks) | **GET** /diagnostics/{id}/tasks | Get tasks of a diagnostic test run<br>*DefaultApi* | [**get_diagnostic_tests**](docs/DefaultApi.md#get_diagnostic_tests) | **GET** /diagnostics/tests | Get available diagnostic tests<br>*DefaultApi* | [**get_metric_categories**](docs/DefaultApi.md#get_metric_categories) | **GET** /metrics/categories | Get node metric categories<br>*DefaultApi* | [**get_metrics_of_category**](docs/DefaultApi.md#get_metrics_of_category) | **GET** /metrics/{category} | Get node merics in a category<br>*DefaultApi* | [**get_node**](docs/DefaultApi.md#get_node) | **GET** /nodes/{id} | Get a node<br>*DefaultApi* | [**get_node_events**](docs/DefaultApi.md#get_node_events) | **GET** /nodes/{id}/events | Get events of a node<br>*DefaultApi* | [**get_node_jobs**](docs/DefaultApi.md#get_node_jobs) | **GET** /nodes/{id}/jobs | Get jobs of a node<br>*DefaultApi* | [**get_node_metadata**](docs/DefaultApi.md#get_node_metadata) | **GET** /nodes/{id}/metadata | get metadata of a node<br>*DefaultApi* | [**get_node_metric_history**](docs/DefaultApi.md#get_node_metric_history) | **GET** /nodes/{id}/metricHistory | Get metric history of a node<br>*DefaultApi* | [**get_node_scheduled_events**](docs/DefaultApi.md#get_node_scheduled_events) | **GET** /nodes/{id}/scheduledEvents | get scheduled events of a node<br>*DefaultApi* | [**get_node_summary**](docs/DefaultApi.md#get_node_summary) | **GET** /dashboard/nodes | Get summary of nodes<br>*DefaultApi* | [**get_nodes**](docs/DefaultApi.md#get_nodes) | **GET** /nodes | Get a list of nodes<br>*DefaultApi* | [**sync_scripts**](docs/DefaultApi.md#sync_scripts) | **POST** /sync | Sync diagnostic and metric scripts from GitHub<br><br><br>## Documentation For Models<br><br> - [DiagnoticTest](docs/DiagnoticTest.md)<br> - [Event](docs/Event.md)<br> - [IpV4](docs/IpV4.md)<br> - [IpV6](docs/IpV6.md)<br> - [Job](docs/Job.md)<br> - [JobState](docs/JobState.md)<br> - [JobSummary](docs/JobSummary.md)<br> - [JobType](docs/JobType.md)<br> - [JobUpdate](docs/JobUpdate.md)<br> - [MacAddress](docs/MacAddress.md)<br> - [Metrics](docs/Metrics.md)<br> - [MetricsValues](docs/MetricsValues.md)<br> - [Node](docs/Node.md)<br> - [NodeGpu](docs/NodeGpu.md)<br> - [NodeJob](docs/NodeJob.md)<br> - [NodeMetadata](docs/NodeMetadata.md)<br> - [NodeMetadataCompute](docs/NodeMetadataCompute.md)<br> - [NodeMetadataNetwork](docs/NodeMetadataNetwork.md)<br> - [NodeMetadataNetworkInterface](docs/NodeMetadataNetworkInterface.md)<br> - [NodeMetadataNetworkIpv4](docs/NodeMetadataNetworkIpv4.md)<br> - [NodeMetadataNetworkIpv4IpAddress](docs/NodeMetadataNetworkIpv4IpAddress.md)<br> - [NodeMetadataNetworkIpv4Subnet](docs/NodeMetadataNetworkIpv4Subnet.md)<br> - [NodeMetadataNetworkIpv6](docs/NodeMetadataNetworkIpv6.md)<br> - [NodeMetrics](docs/NodeMetrics.md)<br> - [NodeMetricsData](docs/NodeMetricsData.md)<br> - [NodeMetricsMetricItems](docs/NodeMetricsMetricItems.md)<br> - [NodeNetwork](docs/NodeNetwork.md)<br> - [NodeRegistration](docs/NodeRegistration.md)<br> - [NodeSummary](docs/NodeSummary.md)<br> - [ScheduledEvent](docs/ScheduledEvent.md)<br> - [ScheduledEvents](docs/ScheduledEvents.md)<br> - [Task](docs/Task.md)<br> - [TaskOutput](docs/TaskOutput.md)<br> - [TaskResult](docs/TaskResult.md)<br> - [TaskState](docs/TaskState.md)<br><br><br>## Documentation For Authorization<br><br><br>## aad<br><br>- **Type**: OAuth<br>- **Flow**: application<br>- **Authorization URL**: <br>- **Scopes**: N/A<br><br><br>## Author<br><br><br><br><br><br>\n          </div>"}, "last_serial": 5148218, "releases": {"1.0.5": [{"comment_text": "", "digests": {"md5": "f79a5345aabbc7fb0fc66c62ff10d64e", "sha256": "833adcf3dbc450bc5a975e977bb47232bee3570538c58918370b2d37ee955ab1"}, "downloads": -1, "filename": "hpc_acm-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f79a5345aabbc7fb0fc66c62ff10d64e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 91779, "upload_time": "2018-09-21T03:45:39", "upload_time_iso_8601": "2018-09-21T03:45:39.958922Z", "url": "https://files.pythonhosted.org/packages/fb/f1/d7e407ca27dddbd87fce6e27167f03540b1bd2df81bd1fc1e244b7383c3d/hpc_acm-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7e95e0ab2f0e5bb4909d4866a7bf998", "sha256": "092fd3ee686f2342b333a210992d28f485684743669267a317502eb23280990d"}, "downloads": -1, "filename": "hpc-acm-1.0.5.tar.gz", "has_sig": false, "md5_digest": "e7e95e0ab2f0e5bb4909d4866a7bf998", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37843, "upload_time": "2018-09-21T03:45:42", "upload_time_iso_8601": "2018-09-21T03:45:42.006053Z", "url": "https://files.pythonhosted.org/packages/e3/8e/20edb488b55eb8507990d0a8537f5212562b23aee5633f6fb86e5ba34292/hpc-acm-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "a626bb3a2416c0ca13bbeca823fa3467", "sha256": "7636d1398772a0d74db9304153ab6c1138a363b6a1a1aa1e571bf654470a626e"}, "downloads": -1, "filename": "hpc_acm-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "a626bb3a2416c0ca13bbeca823fa3467", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 91526, "upload_time": "2018-09-21T07:13:08", "upload_time_iso_8601": "2018-09-21T07:13:08.361359Z", "url": "https://files.pythonhosted.org/packages/44/67/a26b77e877bc3a1bd26ed8b1ba23e691a784370093e7900b37b0be3c820f/hpc_acm-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f6b4bf8fef70ccf9ab4cc115cec4a27", "sha256": "5497e521daf82b4d25739f3f6763e5eed5213dd9f363acb572b9e00887ed8f3c"}, "downloads": -1, "filename": "hpc-acm-1.0.6.tar.gz", "has_sig": false, "md5_digest": "7f6b4bf8fef70ccf9ab4cc115cec4a27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37570, "upload_time": "2018-09-21T07:13:10", "upload_time_iso_8601": "2018-09-21T07:13:10.065580Z", "url": "https://files.pythonhosted.org/packages/59/61/3c9446f8f9d2322fb55b8f7a85dac9e61ecf3503e5e9704dd8d7720d080c/hpc-acm-1.0.6.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "db66633a248899b90b7c8775dd9ffbec", "sha256": "d061638be6e00edb9cfaa984eeaf8e7edafac47dfecda64dfc564d8163f9df22"}, "downloads": -1, "filename": "hpc_acm-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "db66633a248899b90b7c8775dd9ffbec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 91834, "upload_time": "2018-09-27T07:10:05", "upload_time_iso_8601": "2018-09-27T07:10:05.416048Z", "url": "https://files.pythonhosted.org/packages/66/12/3a0bc438721b1b65885b315562605e6b2b8e03ce5363a639ef25eab76762/hpc_acm-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c2b5cc5c058a4728b7b62319532d3d7", "sha256": "999c95f0fdc29670e21913381386f03c57699025a2a4dc753bd2d51a0dc5b4ac"}, "downloads": -1, "filename": "hpc-acm-1.1.0.tar.gz", "has_sig": false, "md5_digest": "3c2b5cc5c058a4728b7b62319532d3d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37895, "upload_time": "2018-09-27T07:10:07", "upload_time_iso_8601": "2018-09-27T07:10:07.079721Z", "url": "https://files.pythonhosted.org/packages/e0/ed/bf6d61f2b9f2c604d2eba905ac54fcb308be0e1e480ce0db3277cbcd784d/hpc-acm-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "9473ce511fbcb5f70b6218641d5d03e0", "sha256": "671c6ceae28ca019ed4d8382c9a8a5113b44283cf346eee7182aedbcfb5c707d"}, "downloads": -1, "filename": "hpc_acm-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9473ce511fbcb5f70b6218641d5d03e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 91854, "upload_time": "2019-01-10T03:12:32", "upload_time_iso_8601": "2019-01-10T03:12:32.906550Z", "url": "https://files.pythonhosted.org/packages/e8/41/6ad4506f180ebf8a57dbd6b341ace950ac9e89d9baecec70e8466d23b139/hpc_acm-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a26aef3d3eb0e21b45bdc18719cc410", "sha256": "8c8743a2ba6d30b6bcb7514b92d45faab8f6c35658b93123fe1188e2d2ddf0ee"}, "downloads": -1, "filename": "hpc-acm-1.2.0.tar.gz", "has_sig": false, "md5_digest": "4a26aef3d3eb0e21b45bdc18719cc410", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37951, "upload_time": "2019-01-10T03:12:35", "upload_time_iso_8601": "2019-01-10T03:12:35.113338Z", "url": "https://files.pythonhosted.org/packages/5d/4a/7c26d0ff919223f764644ecf378a6b91bb77dd2c3d3d5765e1578f178d5d/hpc-acm-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "b01efb0b2ec55da98e5653e54c738487", "sha256": "b0ee327f24c2cd1a198e1a6af988ac563dc1be34ca18007e981520d606ff79b4"}, "downloads": -1, "filename": "hpc_acm-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b01efb0b2ec55da98e5653e54c738487", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 94512, "upload_time": "2019-01-29T07:14:50", "upload_time_iso_8601": "2019-01-29T07:14:50.004410Z", "url": "https://files.pythonhosted.org/packages/58/b5/c4ae56a3b680e47d294459954504d1f207461cb738ec2b41f8db557aa028/hpc_acm-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2346029f557a285ffb323bf3bedc5f4f", "sha256": "6a7c9719d5728a6fd18602fcf32fa09ffabb81faf02fbdd0cbd9a5b1d3105673"}, "downloads": -1, "filename": "hpc-acm-1.3.0.tar.gz", "has_sig": false, "md5_digest": "2346029f557a285ffb323bf3bedc5f4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38003, "upload_time": "2019-01-29T07:14:52", "upload_time_iso_8601": "2019-01-29T07:14:52.043798Z", "url": "https://files.pythonhosted.org/packages/19/38/5aaff1a0c7f4b96aea1c3d86ff64a7f799fbe9edd75a5bb37ab573e16647/hpc-acm-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "509a8d7f6a00fb74c590dcb2a565e8b3", "sha256": "00eaed651af684932b0ab2fbe53f90a6c9b8c31f6f579e33133969110464694d"}, "downloads": -1, "filename": "hpc_acm-1.3.1-py2-none-any.whl", "has_sig": false, "md5_digest": "509a8d7f6a00fb74c590dcb2a565e8b3", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 100782, "upload_time": "2019-04-16T05:33:20", "upload_time_iso_8601": "2019-04-16T05:33:20.012398Z", "url": "https://files.pythonhosted.org/packages/f2/5d/5a9e0497d2a2b224bbd3acfbe42bb05efcd1ea45fb504fa11f78812aa03f/hpc_acm-1.3.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1015ed5a802d692ac6d12fc82589aa0b", "sha256": "92f65e11a1aa8c1af736eaf9c7ba5bdb27766e1a9fb4210f266aa4a968fedb50"}, "downloads": -1, "filename": "hpc-acm-1.3.1.tar.gz", "has_sig": false, "md5_digest": "1015ed5a802d692ac6d12fc82589aa0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38058, "upload_time": "2019-04-16T05:33:22", "upload_time_iso_8601": "2019-04-16T05:33:22.249967Z", "url": "https://files.pythonhosted.org/packages/c7/71/51f6d7bed578d09343a5b47c5d45ac4746fa46d955a92b6f9f5a37051bf8/hpc-acm-1.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "509a8d7f6a00fb74c590dcb2a565e8b3", "sha256": "00eaed651af684932b0ab2fbe53f90a6c9b8c31f6f579e33133969110464694d"}, "downloads": -1, "filename": "hpc_acm-1.3.1-py2-none-any.whl", "has_sig": false, "md5_digest": "509a8d7f6a00fb74c590dcb2a565e8b3", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 100782, "upload_time": "2019-04-16T05:33:20", "upload_time_iso_8601": "2019-04-16T05:33:20.012398Z", "url": "https://files.pythonhosted.org/packages/f2/5d/5a9e0497d2a2b224bbd3acfbe42bb05efcd1ea45fb504fa11f78812aa03f/hpc_acm-1.3.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1015ed5a802d692ac6d12fc82589aa0b", "sha256": "92f65e11a1aa8c1af736eaf9c7ba5bdb27766e1a9fb4210f266aa4a968fedb50"}, "downloads": -1, "filename": "hpc-acm-1.3.1.tar.gz", "has_sig": false, "md5_digest": "1015ed5a802d692ac6d12fc82589aa0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38058, "upload_time": "2019-04-16T05:33:22", "upload_time_iso_8601": "2019-04-16T05:33:22.249967Z", "url": "https://files.pythonhosted.org/packages/c7/71/51f6d7bed578d09343a5b47c5d45ac4746fa46d955a92b6f9f5a37051bf8/hpc-acm-1.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:28 2020"}