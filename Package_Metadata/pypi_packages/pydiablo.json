{"info": {"author": "youbetterdont", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pydiablo\npydiablo is a Diablo 2 toolkit written in Python. The original goal was to calculate and simulate the time required to kill specific monsters using different builds and equipment. The library is still in early stages. It currently has an accurate monster stats parser and the beginnings of a weapon speed calculator.\n\n## usage\n\n### monster stats\n```python\nimport sys\nimport pydiablo as d2\n# interesting monster_ids\n# unraveler5: wave2 minions\n# unraveler8/9: high exp dudes in WSK/throne\n# bloodlord5: death lords in WSK/throne\n# fallen5: wave1 minions\n# dkfig2, dkmag2: act5 doom knights and oblivion knights\n# venomlord: wave4\n# baalhighpriest: wave3\n# baalminion1: wave5\nmonster_id = 'doomknight1'\ndifficulty = d2.monster.HELL\n# write the area table (if we want to choose a specific area)\nd2.monster.Monster.levels.write_area_table(sys.stdout, monster_id, difficulty)\n# with no specific area chosen, it defaults to highest level available\nMonsterType = d2.monster.MinionMonster.create_monster_type(monster_id, difficulty)\nprint('========')\nprint('Class name: ' + MonsterType.__name__)\nprint('Areas: ' + str(MonsterType.mlvl_specific_area_names()))\nprint('Monster: ' + MonsterType.monster_name())\nprint('mlvl: ' + str(MonsterType.mlvl))\nprint('hp range: ' + str(MonsterType.base_hp()))\nprint('exp: ' + str(MonsterType.base_experience()))\nprint('block chance: ' + str(MonsterType.block_chance()))\nprint('defense: ' + str(MonsterType.base_defense()))\nprint('cold effect: ' + str(MonsterType.cold_effect()))\nprint('drain effect: ' + str(MonsterType.drain_effect()))\nprint('fire resist: ' + str(MonsterType.base_fire_resist()))\nprint('cold resist: ' + str(MonsterType.base_cold_resist()))\nprint('lightning resist: ' + str(MonsterType.base_lightning_resist()))\nprint('poison resist: ' + str(MonsterType.base_poison_resist()))\nprint('damage resist: ' + str(MonsterType.base_damage_resist()))\nprint('magic resist: ' + str(MonsterType.magic_resist()))\n\nmonster = MonsterType(player_count=8, rand=False)\nprint('==========')\nprint('max_life: ' + str(monster.max_life))\nprint('experience: ' + str(monster.experience()))\n```\n\n### weapon speed\n```python\nimport sys\nimport pydiablo as d2\n\n# write a few selected ias breakpoint tables\nd2.char.write_bp_table(sys.stdout, d2.char.Amazon.strafe_duration, 'BOW', 100, 0, 10)\nd2.char.write_bp_table(sys.stdout, d2.char.WolfDruid.fury_duration, 'STF', 100, 68, 10, WIAS=90)\nd2.char.write_bp_table(sys.stdout, d2.char.Paladin.zeal_duration, '2HS', 100, 37, 10, WIAS=0)\nd2.char.write_bp_table(sys.stdout, d2.char.Act2Merc.jab_duration, 'HTH', 100, 0, -10)\n```\n\n### character data import\nThis feature is brand new, and there's not a lot of interesting stuff you can do with it yet.\n\n#### from slashdiablo or nokka's d2s parser (https://github.com/nokka/d2s)\n```python\nimport pydiablo as d2\n\nchar_name = 'netease'\nchar = d2.char.chardata_from_slash(char_name)\n# if you want to import another d2s file parsed by nokka's d2s\n# char_json = ... # from d2s parser\n# char = create_from_json(char_json)\n\n#print some stuff\nprint(char.primary_weapon_stats)\nprint(char.secondary_weapon_stats)\nprint(char.off_weapon_stats)\n```\n\n## license\nSee the LICENSE file for license details on source files contained in pydiablo. The files in data and data2 are derivative of Diablo 2 game data; the license in the LICENSE file does not apply.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/youbetterdont/pydiablo", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pydiablo", "package_url": "https://pypi.org/project/pydiablo/", "platform": "", "project_url": "https://pypi.org/project/pydiablo/", "project_urls": {"Homepage": "https://github.com/youbetterdont/pydiablo"}, "release_url": "https://pypi.org/project/pydiablo/0.0.3/", "requires_dist": ["numpy (>=1.15)"], "requires_python": "", "summary": "A collection of Diablo 2 utilities.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pydiablo</h1>\n<p>pydiablo is a Diablo 2 toolkit written in Python. The original goal was to calculate and simulate the time required to kill specific monsters using different builds and equipment. The library is still in early stages. It currently has an accurate monster stats parser and the beginnings of a weapon speed calculator.</p>\n<h2>usage</h2>\n<h3>monster stats</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pydiablo</span> <span class=\"k\">as</span> <span class=\"nn\">d2</span>\n<span class=\"c1\"># interesting monster_ids</span>\n<span class=\"c1\"># unraveler5: wave2 minions</span>\n<span class=\"c1\"># unraveler8/9: high exp dudes in WSK/throne</span>\n<span class=\"c1\"># bloodlord5: death lords in WSK/throne</span>\n<span class=\"c1\"># fallen5: wave1 minions</span>\n<span class=\"c1\"># dkfig2, dkmag2: act5 doom knights and oblivion knights</span>\n<span class=\"c1\"># venomlord: wave4</span>\n<span class=\"c1\"># baalhighpriest: wave3</span>\n<span class=\"c1\"># baalminion1: wave5</span>\n<span class=\"n\">monster_id</span> <span class=\"o\">=</span> <span class=\"s1\">'doomknight1'</span>\n<span class=\"n\">difficulty</span> <span class=\"o\">=</span> <span class=\"n\">d2</span><span class=\"o\">.</span><span class=\"n\">monster</span><span class=\"o\">.</span><span class=\"n\">HELL</span>\n<span class=\"c1\"># write the area table (if we want to choose a specific area)</span>\n<span class=\"n\">d2</span><span class=\"o\">.</span><span class=\"n\">monster</span><span class=\"o\">.</span><span class=\"n\">Monster</span><span class=\"o\">.</span><span class=\"n\">levels</span><span class=\"o\">.</span><span class=\"n\">write_area_table</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">,</span> <span class=\"n\">monster_id</span><span class=\"p\">,</span> <span class=\"n\">difficulty</span><span class=\"p\">)</span>\n<span class=\"c1\"># with no specific area chosen, it defaults to highest level available</span>\n<span class=\"n\">MonsterType</span> <span class=\"o\">=</span> <span class=\"n\">d2</span><span class=\"o\">.</span><span class=\"n\">monster</span><span class=\"o\">.</span><span class=\"n\">MinionMonster</span><span class=\"o\">.</span><span class=\"n\">create_monster_type</span><span class=\"p\">(</span><span class=\"n\">monster_id</span><span class=\"p\">,</span> <span class=\"n\">difficulty</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'========'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Class name: '</span> <span class=\"o\">+</span> <span class=\"n\">MonsterType</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Areas: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">MonsterType</span><span class=\"o\">.</span><span class=\"n\">mlvl_specific_area_names</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Monster: '</span> <span class=\"o\">+</span> <span class=\"n\">MonsterType</span><span class=\"o\">.</span><span class=\"n\">monster_name</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'mlvl: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">MonsterType</span><span class=\"o\">.</span><span class=\"n\">mlvl</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'hp range: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">MonsterType</span><span class=\"o\">.</span><span class=\"n\">base_hp</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'exp: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">MonsterType</span><span class=\"o\">.</span><span class=\"n\">base_experience</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'block chance: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">MonsterType</span><span class=\"o\">.</span><span class=\"n\">block_chance</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'defense: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">MonsterType</span><span class=\"o\">.</span><span class=\"n\">base_defense</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'cold effect: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">MonsterType</span><span class=\"o\">.</span><span class=\"n\">cold_effect</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'drain effect: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">MonsterType</span><span class=\"o\">.</span><span class=\"n\">drain_effect</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'fire resist: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">MonsterType</span><span class=\"o\">.</span><span class=\"n\">base_fire_resist</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'cold resist: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">MonsterType</span><span class=\"o\">.</span><span class=\"n\">base_cold_resist</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'lightning resist: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">MonsterType</span><span class=\"o\">.</span><span class=\"n\">base_lightning_resist</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'poison resist: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">MonsterType</span><span class=\"o\">.</span><span class=\"n\">base_poison_resist</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'damage resist: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">MonsterType</span><span class=\"o\">.</span><span class=\"n\">base_damage_resist</span><span class=\"p\">()))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'magic resist: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">MonsterType</span><span class=\"o\">.</span><span class=\"n\">magic_resist</span><span class=\"p\">()))</span>\n\n<span class=\"n\">monster</span> <span class=\"o\">=</span> <span class=\"n\">MonsterType</span><span class=\"p\">(</span><span class=\"n\">player_count</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"n\">rand</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'=========='</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'max_life: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">monster</span><span class=\"o\">.</span><span class=\"n\">max_life</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'experience: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">monster</span><span class=\"o\">.</span><span class=\"n\">experience</span><span class=\"p\">()))</span>\n</pre>\n<h3>weapon speed</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pydiablo</span> <span class=\"k\">as</span> <span class=\"nn\">d2</span>\n\n<span class=\"c1\"># write a few selected ias breakpoint tables</span>\n<span class=\"n\">d2</span><span class=\"o\">.</span><span class=\"n\">char</span><span class=\"o\">.</span><span class=\"n\">write_bp_table</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">,</span> <span class=\"n\">d2</span><span class=\"o\">.</span><span class=\"n\">char</span><span class=\"o\">.</span><span class=\"n\">Amazon</span><span class=\"o\">.</span><span class=\"n\">strafe_duration</span><span class=\"p\">,</span> <span class=\"s1\">'BOW'</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">d2</span><span class=\"o\">.</span><span class=\"n\">char</span><span class=\"o\">.</span><span class=\"n\">write_bp_table</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">,</span> <span class=\"n\">d2</span><span class=\"o\">.</span><span class=\"n\">char</span><span class=\"o\">.</span><span class=\"n\">WolfDruid</span><span class=\"o\">.</span><span class=\"n\">fury_duration</span><span class=\"p\">,</span> <span class=\"s1\">'STF'</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">68</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">WIAS</span><span class=\"o\">=</span><span class=\"mi\">90</span><span class=\"p\">)</span>\n<span class=\"n\">d2</span><span class=\"o\">.</span><span class=\"n\">char</span><span class=\"o\">.</span><span class=\"n\">write_bp_table</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">,</span> <span class=\"n\">d2</span><span class=\"o\">.</span><span class=\"n\">char</span><span class=\"o\">.</span><span class=\"n\">Paladin</span><span class=\"o\">.</span><span class=\"n\">zeal_duration</span><span class=\"p\">,</span> <span class=\"s1\">'2HS'</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">37</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">WIAS</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">d2</span><span class=\"o\">.</span><span class=\"n\">char</span><span class=\"o\">.</span><span class=\"n\">write_bp_table</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">,</span> <span class=\"n\">d2</span><span class=\"o\">.</span><span class=\"n\">char</span><span class=\"o\">.</span><span class=\"n\">Act2Merc</span><span class=\"o\">.</span><span class=\"n\">jab_duration</span><span class=\"p\">,</span> <span class=\"s1\">'HTH'</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<h3>character data import</h3>\n<p>This feature is brand new, and there's not a lot of interesting stuff you can do with it yet.</p>\n<h4>from slashdiablo or nokka's d2s parser (<a href=\"https://github.com/nokka/d2s\" rel=\"nofollow\">https://github.com/nokka/d2s</a>)</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pydiablo</span> <span class=\"k\">as</span> <span class=\"nn\">d2</span>\n\n<span class=\"n\">char_name</span> <span class=\"o\">=</span> <span class=\"s1\">'netease'</span>\n<span class=\"n\">char</span> <span class=\"o\">=</span> <span class=\"n\">d2</span><span class=\"o\">.</span><span class=\"n\">char</span><span class=\"o\">.</span><span class=\"n\">chardata_from_slash</span><span class=\"p\">(</span><span class=\"n\">char_name</span><span class=\"p\">)</span>\n<span class=\"c1\"># if you want to import another d2s file parsed by nokka's d2s</span>\n<span class=\"c1\"># char_json = ... # from d2s parser</span>\n<span class=\"c1\"># char = create_from_json(char_json)</span>\n\n<span class=\"c1\">#print some stuff</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">char</span><span class=\"o\">.</span><span class=\"n\">primary_weapon_stats</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">char</span><span class=\"o\">.</span><span class=\"n\">secondary_weapon_stats</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">char</span><span class=\"o\">.</span><span class=\"n\">off_weapon_stats</span><span class=\"p\">)</span>\n</pre>\n<h2>license</h2>\n<p>See the LICENSE file for license details on source files contained in pydiablo. The files in data and data2 are derivative of Diablo 2 game data; the license in the LICENSE file does not apply.</p>\n\n          </div>"}, "last_serial": 5376196, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "38074f96de04366afd0c26e6f9a64d6a", "sha256": "b3e731dcfc54ff7c192a3f8869b09054c6d14f11572c6ef3fb18a938f0d47927"}, "downloads": -1, "filename": "pydiablo-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "38074f96de04366afd0c26e6f9a64d6a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 153468, "upload_time": "2019-06-08T21:18:56", "upload_time_iso_8601": "2019-06-08T21:18:56.870881Z", "url": "https://files.pythonhosted.org/packages/ac/39/a73c665a5b864c3b1b487700e26f10b46e960350d2d0562ca681a19ac992/pydiablo-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f7dca5fa95d2631ef868b83a6f87944", "sha256": "a3d275e373560ce91143b36765ab5c450c8b909d70bc3825116edc1b0d6b32c5"}, "downloads": -1, "filename": "pydiablo-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0f7dca5fa95d2631ef868b83a6f87944", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 146491, "upload_time": "2019-06-08T21:19:00", "upload_time_iso_8601": "2019-06-08T21:19:00.378620Z", "url": "https://files.pythonhosted.org/packages/c3/40/626979e67ff536f3303da22deb276669a9f73889e9291a53db2f0246e4a9/pydiablo-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38074f96de04366afd0c26e6f9a64d6a", "sha256": "b3e731dcfc54ff7c192a3f8869b09054c6d14f11572c6ef3fb18a938f0d47927"}, "downloads": -1, "filename": "pydiablo-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "38074f96de04366afd0c26e6f9a64d6a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 153468, "upload_time": "2019-06-08T21:18:56", "upload_time_iso_8601": "2019-06-08T21:18:56.870881Z", "url": "https://files.pythonhosted.org/packages/ac/39/a73c665a5b864c3b1b487700e26f10b46e960350d2d0562ca681a19ac992/pydiablo-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f7dca5fa95d2631ef868b83a6f87944", "sha256": "a3d275e373560ce91143b36765ab5c450c8b909d70bc3825116edc1b0d6b32c5"}, "downloads": -1, "filename": "pydiablo-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0f7dca5fa95d2631ef868b83a6f87944", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 146491, "upload_time": "2019-06-08T21:19:00", "upload_time_iso_8601": "2019-06-08T21:19:00.378620Z", "url": "https://files.pythonhosted.org/packages/c3/40/626979e67ff536f3303da22deb276669a9f73889e9291a53db2f0246e4a9/pydiablo-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:03 2020"}