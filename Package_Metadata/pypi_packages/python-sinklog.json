{"info": {"author": "Ben Wilber", "author_email": "benwilber@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.0", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "# Python Sinklog\nLogging handler and CLI for Sinklog.com\n\n## Install\n```bash\n$ pip install python-sinklog\n```\n\n## Usage\nObtain a log key from https://sinklog.com/\n\n### CLI\n```bash\nusage: sinklog [-h] --key KEY [--host HOST] [--port PORT] [--format FORMAT]\n               [--level {WARN,INFO,DEBUG,ERROR}] [--tee]\n               [message]\n\nA simple logger for sinklog.com\n\npositional arguments:\n  message               messages to log\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --key KEY, -k KEY     Sinklog.com log key\n  --host HOST, -H HOST  Sinklog host\n  --port PORT, -P PORT  Sinklog port\n  --format FORMAT, -F FORMAT\n                        Python log format\n  --level {WARN,INFO,DEBUG,ERROR}, -l {WARN,INFO,DEBUG,ERROR}\n                        Python log level\n  --tee, -t             when reading from stdin, copy to stdout\n\n    example usage:\n\n    # log a message on the command line\n    $ sinklog -k <log key> \"my log message\"\n\n    # log from stdin\n    $ tail -f /var/log/myapp.log | sinklog -k <log key>\n\n    # usage in a pipeline\n    $ tail -f /var/log/myapp.log | sinklog -k <log key> --tee | grep foo\n```\n\n### Python\nAny Python script or app:\n\n```python\nimport logging\nfrom sinklog import SinklogHandler\n\nsinklog = SinklogHandler(logkey=\"<log key>\", transport=\"tls\")\nlogger = logging.getLogger()\nlogger.setLevel(logging.INFO)\nlogger.addHandler(sinklog)\n\n# Just use the logger as you would normally and log\n# messages will be forwarded to your Sinklog stream.\nlogger.info(\"Hello Sinklog!\")\n```\n\n### Django\nAdd `SinklogHandler` to your Django logging config:\n\n```python\n'handlers': {\n    'sinklog': {\n        'level': \"DEBUG\",\n        'class': \"sinklog.SinklogHandler\",\n        'logkey': \"<log key>\",\n        'transport': \"tls\"\n    }\n},\n'loggers': {\n    'django.db.backends': {\n        'level': 'ERROR',\n        'handlers': ['sinklog'],\n        'propagate': False\n    }\n}\n```\n\n### Flask\nAdd `SinklogHandler` to Flask's root app logger:\n\n```python\nfrom sinklog import SinklogHandler\n\nsinklog = SinklogHandler(logkey=\"<log key>\", transport=\"tcp\")\napp.logger.addHandler(sinklog)\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/benwilber/python-sinklog", "keywords": "sinklog syslog logging django flask", "license": "APACHE", "maintainer": null, "maintainer_email": null, "name": "python-sinklog", "package_url": "https://pypi.org/project/python-sinklog/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/python-sinklog/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/benwilber/python-sinklog"}, "release_url": "https://pypi.org/project/python-sinklog/1.1/", "requires_dist": null, "requires_python": null, "summary": "Logging handler and CLI for Sinklog.com", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Python Sinklog<br>Logging handler and CLI for Sinklog.com<br><br>## Install<br>```bash<br>$ pip install python-sinklog<br>```<br><br>## Usage<br>Obtain a log key from https://sinklog.com/<br><br>### CLI<br>```bash<br>usage: sinklog [-h] --key KEY [--host HOST] [--port PORT] [--format FORMAT]<br>               [--level {WARN,INFO,DEBUG,ERROR}] [--tee]<br>               [message]<br><br>A simple logger for sinklog.com<br><br>positional arguments:<br>  message               messages to log<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  --key KEY, -k KEY     Sinklog.com log key<br>  --host HOST, -H HOST  Sinklog host<br>  --port PORT, -P PORT  Sinklog port<br>  --format FORMAT, -F FORMAT<br>                        Python log format<br>  --level {WARN,INFO,DEBUG,ERROR}, -l {WARN,INFO,DEBUG,ERROR}<br>                        Python log level<br>  --tee, -t             when reading from stdin, copy to stdout<br><br>    example usage:<br><br>    # log a message on the command line<br>    $ sinklog -k &lt;log key&gt; \"my log message\"<br><br>    # log from stdin<br>    $ tail -f /var/log/myapp.log | sinklog -k &lt;log key&gt;<br><br>    # usage in a pipeline<br>    $ tail -f /var/log/myapp.log | sinklog -k &lt;log key&gt; --tee | grep foo<br>```<br><br>### Python<br>Any Python script or app:<br><br>```python<br>import logging<br>from sinklog import SinklogHandler<br><br>sinklog = SinklogHandler(logkey=\"&lt;log key&gt;\", transport=\"tls\")<br>logger = logging.getLogger()<br>logger.setLevel(logging.INFO)<br>logger.addHandler(sinklog)<br><br># Just use the logger as you would normally and log<br># messages will be forwarded to your Sinklog stream.<br>logger.info(\"Hello Sinklog!\")<br>```<br><br>### Django<br>Add `SinklogHandler` to your Django logging config:<br><br>```python<br>'handlers': {<br>    'sinklog': {<br>        'level': \"DEBUG\",<br>        'class': \"sinklog.SinklogHandler\",<br>        'logkey': \"&lt;log key&gt;\",<br>        'transport': \"tls\"<br>    }<br>},<br>'loggers': {<br>    'django.db.backends': {<br>        'level': 'ERROR',<br>        'handlers': ['sinklog'],<br>        'propagate': False<br>    }<br>}<br>```<br><br>### Flask<br>Add `SinklogHandler` to Flask's root app logger:<br><br>```python<br>from sinklog import SinklogHandler<br><br>sinklog = SinklogHandler(logkey=\"&lt;log key&gt;\", transport=\"tcp\")<br>app.logger.addHandler(sinklog)<br>```\n          </div>"}, "last_serial": 1932509, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "bbb71153d568ca9631d20be40020bbb2", "sha256": "bdbb3b6fa924223ff26c76382a8e4f7b54655cf7b798ac540c70823ffec25600"}, "downloads": -1, "filename": "python-sinklog-1.0.tar.gz", "has_sig": false, "md5_digest": "bbb71153d568ca9631d20be40020bbb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7329, "upload_time": "2016-01-11T01:00:42", "upload_time_iso_8601": "2016-01-11T01:00:42.785099Z", "url": "https://files.pythonhosted.org/packages/09/e9/d1651becdbef4323af50a8a4cf0b7212dd4e9ac1990b071488f5a65830d4/python-sinklog-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "d324beaee2608c39ce38438a70b8efc4", "sha256": "2a9ecc353856b284bf444a493d902fbb75caea73583bd3b44bbcf5594e87c0b3"}, "downloads": -1, "filename": "python-sinklog-1.1.tar.gz", "has_sig": false, "md5_digest": "d324beaee2608c39ce38438a70b8efc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7718, "upload_time": "2016-01-31T21:17:24", "upload_time_iso_8601": "2016-01-31T21:17:24.583214Z", "url": "https://files.pythonhosted.org/packages/34/34/d274509bf9e980d40d96c75ee7c30821fcd7e11e36da203fc60beffae848/python-sinklog-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d324beaee2608c39ce38438a70b8efc4", "sha256": "2a9ecc353856b284bf444a493d902fbb75caea73583bd3b44bbcf5594e87c0b3"}, "downloads": -1, "filename": "python-sinklog-1.1.tar.gz", "has_sig": false, "md5_digest": "d324beaee2608c39ce38438a70b8efc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7718, "upload_time": "2016-01-31T21:17:24", "upload_time_iso_8601": "2016-01-31T21:17:24.583214Z", "url": "https://files.pythonhosted.org/packages/34/34/d274509bf9e980d40d96c75ee7c30821fcd7e11e36da203fc60beffae848/python-sinklog-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:23 2020"}