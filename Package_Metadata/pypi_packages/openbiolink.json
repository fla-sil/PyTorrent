{"info": {"author": "Anna Breit, Matthias Samwald, Simon Ott, Laura Graf, Asan Agibetov", "author_email": "matthiassamwald@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# OpenBioLink\n\nOpenBioLink is a resource and evaluation framework for evaluating link prediction models on heterogeneous biomedical graph data. It contains benchmark datasets as well as the underlying scrips to create them and to evaluate a costume model on them.\n\n[Paper preprint on arXiv](https://arxiv.org/abs/1912.04616)\n\n[Supplementary data](https://github.com/OpenBioLink/OpenBioLink/raw/master/paper/supplementary%20data.pdf)\n\n## Installation\n\n### Pip\n1) Install a pytorch version suitable for your system https://pytorch.org/\n2) ```pip install openbiolink```\n\n### Source\n1) clone the git repository or download the project\n1) Create a new python3.7, or python3.6 virtual environment  *(note: under Windows, only python3.6 will work)*\ne.g.:\n```python3 -m venv my_venv```\n1) activate the virtual environment\n    * windows: ``my_venv\\Scrips\\activate``\n    * linux/mac: ``source my_venv/bin/activate``\n1) Install a pytorch version suitable for your system https://pytorch.org/\n1) Install the requirements stated in requirements.txt e.g.  ```pip install -r requirements.txt```\n\n## Benchmark Dataset\n The [OpenBioLink2020 Dataset](https://samwald.info/res/OpenBioLink_2020/HQ_DIR.zip) is a highly challenging\n benchmark dataset containing over 5 million positive and negative edges.\n The test set does not contain trivially predictable, inverse edges from the training set \n and does contain all different edge types, to provide a more realistic edge prediction\n scenario.\n\n ### Leaderboard    \n\n | model | hits@10 | hits@1 |  paper | code |\n|-------|---------|--------|-------|------|\n|   TransE (Baseline)   |    0.0749     |   0.0125     | (under review)      | [Code](https://github.com/OpenBioLink/OpenBioLink/tree/master/src/openBioLink/evaluation)     |\n|   TransR (Baseline)   |    0.0639     |   0.0096     | (under review)      | [Code](https://github.com/OpenBioLink/OpenBioLink/tree/master/src/openBioLink/evaluation)     |\n\n\nTo also be able to analyze the effect of the data quality as well as the directionality of the \nevaluation graph other settings of OpenBioLink2020 are provided, in directed and undirected setting,\nwith and without quality cutoff.\n\n* [OpenBioLink2020: directed, high quality](https://samwald.info/res/OpenBioLink_2020/HQ_DIR.zip) (default dataset)\n* [OpenBioLink2020: undirected, high quality](https://samwald.info/res/OpenBioLink_2020/HQ_UNDIR.zip)\n* [OpenBioLink2020: directed, no quality cutoff](https://samwald.info/res/OpenBioLink_2020/ALL_DIR.zip)\n* [OpenBioLink2020: undirected, no quality cutoff](https://samwald.info/res/OpenBioLink_2020/ALL_UNDIR.zip)\n\n\n## Manual\n\nThe OpenBioLink framework consists of three parts, called actions\n 1) graph creation\n 2) train-test split creation\n 3) training and evaluation\n\nWith the graph creation and the train-test set action, costumed data sets can be created to suit individual needs.\nThe last action serves as interface to train and evaluate link prediction models.\n\n#### Calling via GUI\nBy calling the program without any parameters, the gui is started, \nproviding a handy interface to define parameters needed. In the last step, \nthe corresponding command line options are displayed.\n\n#### Calling via command line\nFrom folder src\n```python -m openbiolink.openBioLink -p WORKING_DIR_PATH [-action] [--options] ...```\n\n**Action: Graph Creation**\n````\n-g:    \n    --undir         Output-Graph should be undirectional (default = directional)\n    --qual          quality cutoff of the output-graph, options = [hq, mq, lq], (default = None -> all entries are used)\n    --no_interact   Disables interactive mode - existing files will be replaced (default = interactive)\n    --skip          Existing files will be skipped - in combination with --no_interact (default = replace)\n    --no_dl         No download is being performed (e.g. when local data is used)\n    --no_in         No input_files are created (e.g. when local data is used)\n    --no_create     No graph is created (e.g. when only in-files should be created)\n    --out_format [Format] [Sep]       Format of graph output, takes 2 arguments: list of file formats \n                                      [s= single file, m=multiple files] and list of separators \n                                      (e.g. t=tab, n=newline, or any other character) (default= s t)\n    --no_qscore     The output files will contain no scores\n    --dbs [Cls]     custom source databases selection to be used, full class name, options --> see doc\n    --mes [Cls]     custom meta edges selection to be used, full class name, options --> see doc\n````\n**Action: Train- Test Split Generation**\n ````\n-s\n    --edges Path        Path to edges.csv file (required with action -s\n    --tn_edges Path     Path to true_negatives_edges.csv file (required with action -s)\n    --nodes Path        Path to nodes.csv file (required with action -s)\n    --tts_sep [Sep]     Separator of edge, tn-edge and nodes file (e.g. t=tab, n=newline, \n                        or any other character) (default=t)\n    --mode rand|time    Mode of train-test-set split, options=[rand, time], (default=rand)\n    --test_frac F       Fraction of test set as float (default= 0.2)\n    --crossval          Multiple train-validation-sets are generated\n    --val F             fraction of validation set as float (default= 0.2) or number of folds as int\n    --tmo_edges Path    Path to edges.csv file of t-minus-one graph (required for --mode time\n    --tmo_tn_edges Path     Path to true_negatives_edges.csv file of t-minus-one graph (required for --mode time)\n    --tmo_nodes Path        Path to nodes.csv file of t-minus-one graph (required for --mode time)\n````\n**Action: Training and Evaluation**\n````\n-e\n    --model_cls Cls         class of the model to be trained/evaluated (required with -e)\n    --config Path           Path to the models config file\n    --no_train              No training is being performed, trained model id provided via --trained_model\n    --trained_model Path    Path to trained model (required with --no_train)\n    --no_eval               No evaluation is being performed, only training\n    --test Path             Path to test set file (required with -e)\n    --train Path            Path to trainings set file')\n    --eval_nodes Path       Path to the nodes file (required for ranked triples if no corrupted triples \n                            file is provided and nodes cannot be taken from graph creation\n    --metrics [Metric]      list of evaluation metrics\n    --ks [K]                k's for hits@k metric (integer list)\n````\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/OpenBioLink/OpenBioLink", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "openbiolink", "package_url": "https://pypi.org/project/openbiolink/", "platform": "", "project_url": "https://pypi.org/project/openbiolink/", "project_urls": {"Homepage": "https://github.com/OpenBioLink/OpenBioLink"}, "release_url": "https://pypi.org/project/openbiolink/0.1.1/", "requires_dist": ["numpy", "pandas (==0.23.4)", "pykeen", "pytest (==5.0.1)", "tqdm (==4.29.1)", "sortedcontainers", "scikit-learn (==0.19.1) ; python_version == \"3.6\"", "scikit-learn ; python_version == \"3.7\""], "requires_python": ">=3.6", "summary": "A framework for evaluating link prediction models on heterogeneous biomedical graph data", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>OpenBioLink</h1>\n<p>OpenBioLink is a resource and evaluation framework for evaluating link prediction models on heterogeneous biomedical graph data. It contains benchmark datasets as well as the underlying scrips to create them and to evaluate a costume model on them.</p>\n<p><a href=\"https://arxiv.org/abs/1912.04616\" rel=\"nofollow\">Paper preprint on arXiv</a></p>\n<p><a href=\"https://github.com/OpenBioLink/OpenBioLink/raw/master/paper/supplementary%20data.pdf\" rel=\"nofollow\">Supplementary data</a></p>\n<h2>Installation</h2>\n<h3>Pip</h3>\n<ol>\n<li>Install a pytorch version suitable for your system <a href=\"https://pytorch.org/\" rel=\"nofollow\">https://pytorch.org/</a></li>\n<li><code>pip install openbiolink</code></li>\n</ol>\n<h3>Source</h3>\n<ol>\n<li>clone the git repository or download the project</li>\n<li>Create a new python3.7, or python3.6 virtual environment  <em>(note: under Windows, only python3.6 will work)</em>\ne.g.:\n<code>python3 -m venv my_venv</code></li>\n<li>activate the virtual environment\n<ul>\n<li>windows: <code>my_venv\\Scrips\\activate</code></li>\n<li>linux/mac: <code>source my_venv/bin/activate</code></li>\n</ul>\n</li>\n<li>Install a pytorch version suitable for your system <a href=\"https://pytorch.org/\" rel=\"nofollow\">https://pytorch.org/</a></li>\n<li>Install the requirements stated in requirements.txt e.g.  <code>pip install -r requirements.txt</code></li>\n</ol>\n<h2>Benchmark Dataset</h2>\n<p>The <a href=\"https://samwald.info/res/OpenBioLink_2020/HQ_DIR.zip\" rel=\"nofollow\">OpenBioLink2020 Dataset</a> is a highly challenging\nbenchmark dataset containing over 5 million positive and negative edges.\nThe test set does not contain trivially predictable, inverse edges from the training set\nand does contain all different edge types, to provide a more realistic edge prediction\nscenario.</p>\n<h3>Leaderboard</h3>\n<table>\n<thead>\n<tr>\n<th>model</th>\n<th>hits@10</th>\n<th>hits@1</th>\n<th>paper</th>\n<th>code</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>TransE (Baseline)</td>\n<td>0.0749</td>\n<td>0.0125</td>\n<td>(under review)</td>\n<td><a href=\"https://github.com/OpenBioLink/OpenBioLink/tree/master/src/openBioLink/evaluation\" rel=\"nofollow\">Code</a></td>\n</tr>\n<tr>\n<td>TransR (Baseline)</td>\n<td>0.0639</td>\n<td>0.0096</td>\n<td>(under review)</td>\n<td><a href=\"https://github.com/OpenBioLink/OpenBioLink/tree/master/src/openBioLink/evaluation\" rel=\"nofollow\">Code</a></td>\n</tr></tbody></table>\n<p>To also be able to analyze the effect of the data quality as well as the directionality of the\nevaluation graph other settings of OpenBioLink2020 are provided, in directed and undirected setting,\nwith and without quality cutoff.</p>\n<ul>\n<li><a href=\"https://samwald.info/res/OpenBioLink_2020/HQ_DIR.zip\" rel=\"nofollow\">OpenBioLink2020: directed, high quality</a> (default dataset)</li>\n<li><a href=\"https://samwald.info/res/OpenBioLink_2020/HQ_UNDIR.zip\" rel=\"nofollow\">OpenBioLink2020: undirected, high quality</a></li>\n<li><a href=\"https://samwald.info/res/OpenBioLink_2020/ALL_DIR.zip\" rel=\"nofollow\">OpenBioLink2020: directed, no quality cutoff</a></li>\n<li><a href=\"https://samwald.info/res/OpenBioLink_2020/ALL_UNDIR.zip\" rel=\"nofollow\">OpenBioLink2020: undirected, no quality cutoff</a></li>\n</ul>\n<h2>Manual</h2>\n<p>The OpenBioLink framework consists of three parts, called actions</p>\n<ol>\n<li>graph creation</li>\n<li>train-test split creation</li>\n<li>training and evaluation</li>\n</ol>\n<p>With the graph creation and the train-test set action, costumed data sets can be created to suit individual needs.\nThe last action serves as interface to train and evaluate link prediction models.</p>\n<h4>Calling via GUI</h4>\n<p>By calling the program without any parameters, the gui is started,\nproviding a handy interface to define parameters needed. In the last step,\nthe corresponding command line options are displayed.</p>\n<h4>Calling via command line</h4>\n<p>From folder src\n<code>python -m openbiolink.openBioLink -p WORKING_DIR_PATH [-action] [--options] ...</code></p>\n<p><strong>Action: Graph Creation</strong></p>\n<pre><code>-g:    \n    --undir         Output-Graph should be undirectional (default = directional)\n    --qual          quality cutoff of the output-graph, options = [hq, mq, lq], (default = None -&gt; all entries are used)\n    --no_interact   Disables interactive mode - existing files will be replaced (default = interactive)\n    --skip          Existing files will be skipped - in combination with --no_interact (default = replace)\n    --no_dl         No download is being performed (e.g. when local data is used)\n    --no_in         No input_files are created (e.g. when local data is used)\n    --no_create     No graph is created (e.g. when only in-files should be created)\n    --out_format [Format] [Sep]       Format of graph output, takes 2 arguments: list of file formats \n                                      [s= single file, m=multiple files] and list of separators \n                                      (e.g. t=tab, n=newline, or any other character) (default= s t)\n    --no_qscore     The output files will contain no scores\n    --dbs [Cls]     custom source databases selection to be used, full class name, options --&gt; see doc\n    --mes [Cls]     custom meta edges selection to be used, full class name, options --&gt; see doc\n</code></pre>\n<p><strong>Action: Train- Test Split Generation</strong></p>\n<pre><code>-s\n   --edges Path        Path to edges.csv file (required with action -s\n   --tn_edges Path     Path to true_negatives_edges.csv file (required with action -s)\n   --nodes Path        Path to nodes.csv file (required with action -s)\n   --tts_sep [Sep]     Separator of edge, tn-edge and nodes file (e.g. t=tab, n=newline, \n                       or any other character) (default=t)\n   --mode rand|time    Mode of train-test-set split, options=[rand, time], (default=rand)\n   --test_frac F       Fraction of test set as float (default= 0.2)\n   --crossval          Multiple train-validation-sets are generated\n   --val F             fraction of validation set as float (default= 0.2) or number of folds as int\n   --tmo_edges Path    Path to edges.csv file of t-minus-one graph (required for --mode time\n   --tmo_tn_edges Path     Path to true_negatives_edges.csv file of t-minus-one graph (required for --mode time)\n   --tmo_nodes Path        Path to nodes.csv file of t-minus-one graph (required for --mode time)\n</code></pre>\n<p><strong>Action: Training and Evaluation</strong></p>\n<pre><code>-e\n    --model_cls Cls         class of the model to be trained/evaluated (required with -e)\n    --config Path           Path to the models config file\n    --no_train              No training is being performed, trained model id provided via --trained_model\n    --trained_model Path    Path to trained model (required with --no_train)\n    --no_eval               No evaluation is being performed, only training\n    --test Path             Path to test set file (required with -e)\n    --train Path            Path to trainings set file')\n    --eval_nodes Path       Path to the nodes file (required for ranked triples if no corrupted triples \n                            file is provided and nodes cannot be taken from graph creation\n    --metrics [Metric]      list of evaluation metrics\n    --ks [K]                k's for hits@k metric (integer list)\n</code></pre>\n\n          </div>"}, "last_serial": 6509603, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e193d706e9f4a3f79f4681a461772d57", "sha256": "a788dda3ef3ae995bb57426fddfcb701b8ebcf12b55d0ece6807b87baa5efc60"}, "downloads": -1, "filename": "openbiolink-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e193d706e9f4a3f79f4681a461772d57", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 208968, "upload_time": "2020-01-13T22:53:07", "upload_time_iso_8601": "2020-01-13T22:53:07.372988Z", "url": "https://files.pythonhosted.org/packages/d8/53/15926b5932333b85a8c1e9ae9ff0e4847cde3c20157de296cf19af8bad47/openbiolink-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "364436ceeb20ea0b75b9f84a2e03c821", "sha256": "bbc0b393588b1dd04291cc7339ac2e22e982fb048c05a5da52cf8817c3b8dc94"}, "downloads": -1, "filename": "openbiolink-0.1.0.tar.gz", "has_sig": false, "md5_digest": "364436ceeb20ea0b75b9f84a2e03c821", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 73556, "upload_time": "2020-01-13T22:53:10", "upload_time_iso_8601": "2020-01-13T22:53:10.192287Z", "url": "https://files.pythonhosted.org/packages/2a/fa/b8ee9d58ca60f9f112badfa01cff2fe1d5b565e4542199c057b36d0839eb/openbiolink-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4a0e52ae5bb7bbd9f3b05fb107c362fc", "sha256": "782f3cc4e623916c5fd825c0f50acc172b63d4cddce0fe474d22dcc33d9118d3"}, "downloads": -1, "filename": "openbiolink-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4a0e52ae5bb7bbd9f3b05fb107c362fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 208920, "upload_time": "2020-01-23T19:25:47", "upload_time_iso_8601": "2020-01-23T19:25:47.042780Z", "url": "https://files.pythonhosted.org/packages/0d/14/5ab3677518ec6e5e95b90a6fc32092217bb277f4bfc9f26d062ac5563a0a/openbiolink-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e55b735407e66580cc713264bfde1fe4", "sha256": "99bf28cf3b473575d886effc6ebed9938560561600e0875da6aa8275d3afb669"}, "downloads": -1, "filename": "openbiolink-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e55b735407e66580cc713264bfde1fe4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 70559, "upload_time": "2020-01-23T19:25:48", "upload_time_iso_8601": "2020-01-23T19:25:48.865740Z", "url": "https://files.pythonhosted.org/packages/0f/2b/4dbf88110a58dd092ebd26dabf0e5889a12915bbd9c7ec5393262568aa1a/openbiolink-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4a0e52ae5bb7bbd9f3b05fb107c362fc", "sha256": "782f3cc4e623916c5fd825c0f50acc172b63d4cddce0fe474d22dcc33d9118d3"}, "downloads": -1, "filename": "openbiolink-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4a0e52ae5bb7bbd9f3b05fb107c362fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 208920, "upload_time": "2020-01-23T19:25:47", "upload_time_iso_8601": "2020-01-23T19:25:47.042780Z", "url": "https://files.pythonhosted.org/packages/0d/14/5ab3677518ec6e5e95b90a6fc32092217bb277f4bfc9f26d062ac5563a0a/openbiolink-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e55b735407e66580cc713264bfde1fe4", "sha256": "99bf28cf3b473575d886effc6ebed9938560561600e0875da6aa8275d3afb669"}, "downloads": -1, "filename": "openbiolink-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e55b735407e66580cc713264bfde1fe4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 70559, "upload_time": "2020-01-23T19:25:48", "upload_time_iso_8601": "2020-01-23T19:25:48.865740Z", "url": "https://files.pythonhosted.org/packages/0f/2b/4dbf88110a58dd092ebd26dabf0e5889a12915bbd9c7ec5393262568aa1a/openbiolink-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:25 2020"}