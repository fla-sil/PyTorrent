{"info": {"author": "concurrent-studio", "author_email": "info@concurrent.studio", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# cloudburst \u26c8\n[![CircleCI](https://circleci.com/gh/concurrent-studio/cloudburst.svg?style=shield)](https://circleci.com/gh/concurrent-studio/cloudburst) [![Documentation](https://img.shields.io/badge/docs-reference-brightgreen.svg)](https://concurrent-studio.github.io/cloudburst/) [![License: MIT](https://img.shields.io/badge/packager-pypak-dbd3cd.svg)](https://github.com/concurrent-studio/pypak) [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black) [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT) \n\n\nA python package for computational design by [CONCURRENT STUDIO\u2122](https://www.concurrent.studio)\n\n\n## \u23f3 Installation\n### \ud83d\udc0d Pip\n```bash\npip3 install cloudburst\n```\n\n### \ud83d\uddc3 Source\n```bash\ngit clone https://github.com/concurrent-studio/cloudburst.git\ncd cloudburst\npip3 install -e .\n```\n\n## Documentation \nA brief description of modules and submodules exists below.  \nFor ruther information, see the [usage guide](https://concurrent-studio.github.io/cloudburst/).\n\n### \ud83d\udce6 Modules + Submodules\n#### \ud83d\udee0 Core Functions\n##### Usage\n```python\nimport cloudburst as cb\n```\n\n##### Components\n- Core\n    - `concurrent`\n        - Execute a function concurrently over a list\n    - `mkdir`\n        - Make a new directory if one doesn't exist\n    - `query`\n        - Query a folder by filename extension\n    - `write_list_to_file`\n        - Write a given list to a file\n    - `get_list_from_file`\n        - Read a file line by line into a list\n    - `write_dict_to_file`\n        - Write a dictionary to a .json file\n    - `sort_tuples`\n        - Sort a list of tuples by their second element\n- Math\n    - `line_coeff_from_segment`\n        - Get slope and y intersect given two points on a line\n    - `tri_centroid`\n        - Calculate the centroid of a triangle given its vertices\n    - `quad_centroid`\n        - Calculate the centroid of a quadrilateral given its vertices\n    - `point_in_rect`\n        - Check whether a point is in a rectangle given the rectangle's vertices\n\n#### \ud83d\udcf1 Social\n##### Usage\n```python\nfrom cloudburst import social as cbs\n```\n\n##### Components\n- `Instagram`\n    - Class for scraping the data of an Instagram user\n    - `__init__`\n        - Constructor method\n    - `download_profile_picture`\n        - Download an Instagram user's profile picure in its highest quality\n    - `get_post_shortcodes`\n        - Retrieve all shortcodes associated with a user, saving them in a text file\n    - `download_posts`\n        - Download all posts from an Instagram user\n    - `download_faces`\n        - Download all cropped faces present in a given user's posts\n    - `download_faces_and_colors`\n        - Same as `download_faces`, but with the addition of retrieving color palettes from the posts\n- `download_instagram_by_shortcode`\n    - Download media and data from a posed given its shortcode \n\n- `VSCO`\n    - Class for scraping the data of a VSCO user\n    - `download_images`\n        - Download the user's images\n    - `download_journal`\n        - Download the user's journal posts\n    - `download_all`\n        - `download_images` and `download_journal` encapsulated in a single call\n\n#### \ud83d\udcf9 Vision\n##### Usage\n```python\nfrom cloudburst import vision as cbv\n```\n\n##### Components\n- Color\n    - `color_delta`\n        - Compute the percent difference between two given colors\n    - `get_colors`\n        - Get a color palette from a given image\n- Image\n    - `download`\n        - Download an image or video from a url\n    - `draw_points_on_image`\n        - Draw a set of points on top of an image\n    - `write_points_to_disk`\n        - Write a list of points to disk\n    - `get_points_from_disk`\n        - Get points saved through above function\n    - `create_collage`\n        - Create a collage from a list of images\n-  Face\n    - `crop_faces`\n        - Crop and save all faces in a list of images\n    - `crop_eyes`\n        - Crop and save all eyes in a list of images\n    - `face_match`\n        - Compare a list of unknown faces against a known one\n    - `get_landmarks`\n        - Get 68 facial landmarks from an image\n    - `get_5_landmarks`\n        - Get 5 facial landmarks from an image\n    - `write_landmarks_database`\n        - Save a list of 68 facial landmarks as a text file\n    - `write_5_landmarks_database`\n        - Save a list of 5 facial landmarks as a text file\n    - `average_faces`\n        - Compute the average of all faces in a directory", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/concurrent-studio/cloudburst", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cloudburst", "package_url": "https://pypi.org/project/cloudburst/", "platform": "", "project_url": "https://pypi.org/project/cloudburst/", "project_urls": {"Homepage": "https://github.com/concurrent-studio/cloudburst"}, "release_url": "https://pypi.org/project/cloudburst/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "A python package for computational design by CONCURRENT STUDIO\u2122", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>cloudburst \u26c8</h1>\n<p><a href=\"https://circleci.com/gh/concurrent-studio/cloudburst\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a6dd9a049c00f47ebb8da19253f5fd98963fa16/68747470733a2f2f636972636c6563692e636f6d2f67682f636f6e63757272656e742d73747564696f2f636c6f756462757273742e7376673f7374796c653d736869656c64\"></a> <a href=\"https://concurrent-studio.github.io/cloudburst/\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7c5b1be1250ac495f90fffcba634ebcefcdf815/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d7265666572656e63652d627269676874677265656e2e737667\"></a> <a href=\"https://github.com/concurrent-studio/pypak\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a232fd561fd384ceced8259d7c42615092db6d98/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7061636b616765722d707970616b2d6462643363642e737667\"></a> <a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a> <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a></p>\n<p>A python package for computational design by <a href=\"https://www.concurrent.studio\" rel=\"nofollow\">CONCURRENT STUDIO\u2122</a></p>\n<h2>\u23f3 Installation</h2>\n<h3>\ud83d\udc0d Pip</h3>\n<pre>pip3 install cloudburst\n</pre>\n<h3>\ud83d\uddc3 Source</h3>\n<pre>git clone https://github.com/concurrent-studio/cloudburst.git\n<span class=\"nb\">cd</span> cloudburst\npip3 install -e .\n</pre>\n<h2>Documentation</h2>\n<p>A brief description of modules and submodules exists below.<br>\nFor ruther information, see the <a href=\"https://concurrent-studio.github.io/cloudburst/\" rel=\"nofollow\">usage guide</a>.</p>\n<h3>\ud83d\udce6 Modules + Submodules</h3>\n<h4>\ud83d\udee0 Core Functions</h4>\n<h5>Usage</h5>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cloudburst</span> <span class=\"k\">as</span> <span class=\"nn\">cb</span>\n</pre>\n<h5>Components</h5>\n<ul>\n<li>Core\n<ul>\n<li><code>concurrent</code>\n<ul>\n<li>Execute a function concurrently over a list</li>\n</ul>\n</li>\n<li><code>mkdir</code>\n<ul>\n<li>Make a new directory if one doesn't exist</li>\n</ul>\n</li>\n<li><code>query</code>\n<ul>\n<li>Query a folder by filename extension</li>\n</ul>\n</li>\n<li><code>write_list_to_file</code>\n<ul>\n<li>Write a given list to a file</li>\n</ul>\n</li>\n<li><code>get_list_from_file</code>\n<ul>\n<li>Read a file line by line into a list</li>\n</ul>\n</li>\n<li><code>write_dict_to_file</code>\n<ul>\n<li>Write a dictionary to a .json file</li>\n</ul>\n</li>\n<li><code>sort_tuples</code>\n<ul>\n<li>Sort a list of tuples by their second element</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Math\n<ul>\n<li><code>line_coeff_from_segment</code>\n<ul>\n<li>Get slope and y intersect given two points on a line</li>\n</ul>\n</li>\n<li><code>tri_centroid</code>\n<ul>\n<li>Calculate the centroid of a triangle given its vertices</li>\n</ul>\n</li>\n<li><code>quad_centroid</code>\n<ul>\n<li>Calculate the centroid of a quadrilateral given its vertices</li>\n</ul>\n</li>\n<li><code>point_in_rect</code>\n<ul>\n<li>Check whether a point is in a rectangle given the rectangle's vertices</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4>\ud83d\udcf1 Social</h4>\n<h5>Usage</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cloudburst</span> <span class=\"kn\">import</span> <span class=\"n\">social</span> <span class=\"k\">as</span> <span class=\"n\">cbs</span>\n</pre>\n<h5>Components</h5>\n<ul>\n<li>\n<p><code>Instagram</code></p>\n<ul>\n<li>Class for scraping the data of an Instagram user</li>\n<li><code>__init__</code>\n<ul>\n<li>Constructor method</li>\n</ul>\n</li>\n<li><code>download_profile_picture</code>\n<ul>\n<li>Download an Instagram user's profile picure in its highest quality</li>\n</ul>\n</li>\n<li><code>get_post_shortcodes</code>\n<ul>\n<li>Retrieve all shortcodes associated with a user, saving them in a text file</li>\n</ul>\n</li>\n<li><code>download_posts</code>\n<ul>\n<li>Download all posts from an Instagram user</li>\n</ul>\n</li>\n<li><code>download_faces</code>\n<ul>\n<li>Download all cropped faces present in a given user's posts</li>\n</ul>\n</li>\n<li><code>download_faces_and_colors</code>\n<ul>\n<li>Same as <code>download_faces</code>, but with the addition of retrieving color palettes from the posts</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><code>download_instagram_by_shortcode</code></p>\n<ul>\n<li>Download media and data from a posed given its shortcode</li>\n</ul>\n</li>\n<li>\n<p><code>VSCO</code></p>\n<ul>\n<li>Class for scraping the data of a VSCO user</li>\n<li><code>download_images</code>\n<ul>\n<li>Download the user's images</li>\n</ul>\n</li>\n<li><code>download_journal</code>\n<ul>\n<li>Download the user's journal posts</li>\n</ul>\n</li>\n<li><code>download_all</code>\n<ul>\n<li><code>download_images</code> and <code>download_journal</code> encapsulated in a single call</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4>\ud83d\udcf9 Vision</h4>\n<h5>Usage</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cloudburst</span> <span class=\"kn\">import</span> <span class=\"n\">vision</span> <span class=\"k\">as</span> <span class=\"n\">cbv</span>\n</pre>\n<h5>Components</h5>\n<ul>\n<li>Color\n<ul>\n<li><code>color_delta</code>\n<ul>\n<li>Compute the percent difference between two given colors</li>\n</ul>\n</li>\n<li><code>get_colors</code>\n<ul>\n<li>Get a color palette from a given image</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Image\n<ul>\n<li><code>download</code>\n<ul>\n<li>Download an image or video from a url</li>\n</ul>\n</li>\n<li><code>draw_points_on_image</code>\n<ul>\n<li>Draw a set of points on top of an image</li>\n</ul>\n</li>\n<li><code>write_points_to_disk</code>\n<ul>\n<li>Write a list of points to disk</li>\n</ul>\n</li>\n<li><code>get_points_from_disk</code>\n<ul>\n<li>Get points saved through above function</li>\n</ul>\n</li>\n<li><code>create_collage</code>\n<ul>\n<li>Create a collage from a list of images</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Face\n<ul>\n<li><code>crop_faces</code>\n<ul>\n<li>Crop and save all faces in a list of images</li>\n</ul>\n</li>\n<li><code>crop_eyes</code>\n<ul>\n<li>Crop and save all eyes in a list of images</li>\n</ul>\n</li>\n<li><code>face_match</code>\n<ul>\n<li>Compare a list of unknown faces against a known one</li>\n</ul>\n</li>\n<li><code>get_landmarks</code>\n<ul>\n<li>Get 68 facial landmarks from an image</li>\n</ul>\n</li>\n<li><code>get_5_landmarks</code>\n<ul>\n<li>Get 5 facial landmarks from an image</li>\n</ul>\n</li>\n<li><code>write_landmarks_database</code>\n<ul>\n<li>Save a list of 68 facial landmarks as a text file</li>\n</ul>\n</li>\n<li><code>write_5_landmarks_database</code>\n<ul>\n<li>Save a list of 5 facial landmarks as a text file</li>\n</ul>\n</li>\n<li><code>average_faces</code>\n<ul>\n<li>Compute the average of all faces in a directory</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 7158596, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "929e4ac792adc559035b1a55bdbd31da", "sha256": "e5ddd19be5c180598b64297dc4be088d7cbb2f2c9c3b39735147e9a40a1b5ec4"}, "downloads": -1, "filename": "cloudburst-0.1.tar.gz", "has_sig": false, "md5_digest": "929e4ac792adc559035b1a55bdbd31da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15682, "upload_time": "2020-04-24T04:41:34", "upload_time_iso_8601": "2020-04-24T04:41:34.041561Z", "url": "https://files.pythonhosted.org/packages/42/29/2f75a289681deab22aea7db3807045676fcb85987042015991aee230dab0/cloudburst-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e997a8f5d03e831eef8401a108586285", "sha256": "c66de9ff3746d6fc735a826e97a52d795d8f12761af0ccb94e1ac8eb88e8d6f5"}, "downloads": -1, "filename": "cloudburst-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e997a8f5d03e831eef8401a108586285", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22784, "upload_time": "2020-05-03T17:33:05", "upload_time_iso_8601": "2020-05-03T17:33:05.224513Z", "url": "https://files.pythonhosted.org/packages/af/84/50bbd4522c086a662b7469c103ce09397e562f71419a1fd3f28b52e6349c/cloudburst-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e997a8f5d03e831eef8401a108586285", "sha256": "c66de9ff3746d6fc735a826e97a52d795d8f12761af0ccb94e1ac8eb88e8d6f5"}, "downloads": -1, "filename": "cloudburst-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e997a8f5d03e831eef8401a108586285", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22784, "upload_time": "2020-05-03T17:33:05", "upload_time_iso_8601": "2020-05-03T17:33:05.224513Z", "url": "https://files.pythonhosted.org/packages/af/84/50bbd4522c086a662b7469c103ce09397e562f71419a1fd3f28b52e6349c/cloudburst-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:52 2020"}