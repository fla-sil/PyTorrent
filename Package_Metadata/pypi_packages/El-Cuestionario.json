{"info": {"author": "Jochen Kupperschmidt", "author_email": "homework@nwsnet.de", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Flask", "Intended Audience :: Other Audience", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Games/Entertainment"], "description": "El Cuestionario\n===============\n\n**El Cuestionario** (formerly known as **Rate Yourself**) is a tiny web\napplication to display and evaluate single-page questionnaires.\n\nA questionnaire (questions, their answers, and score ratings) is\ndefined as JSON_ in a single file.\n\nThe questions are presented in the order they are defined in the data\nfile while the answers are shown in random order.\n\nOnce all questions are answered, the user's score is calculated based\non the answers' weight (as defined) and is presented with a suitable\ncomment.\n\n:Copyright: 2005-2015 `Jochen Kupperschmidt <http://homework.nwsnet.de/>`_\n:Date: 02-Oct-2015 (original release: 26-Apr-2006)\n:License: GNU General Public License version 2, see LICENSE for details.\n:Version: 0.4.1\n\n\nRequirements\n------------\n\n- Python_ 2.7+ or 3.3+\n- Flask_\n\n\nInstallation\n------------\n\nInstall dependencies:\n\n.. code:: sh\n\n    $ pip install -r requirements.txt\n\nMake the script to run the application executable:\n\n.. code:: sh\n\n    $ chmod +x runserver.py\n\nThis script (which uses the built-in web server) is fine to get up and\nrunning quickly. However, to actually serve the application on the\nInternet, please consider the other `deployment options`_ described in\nFlask's excellent documentation.\n\n\nConfiguration\n-------------\n\nTake a look at ``data/example.json`` regarding how a questionnaire is\ndefined. Just copy the file, adjust its content and update the value of\nthe ``SURVEY_FILENAME`` variable in the main script accordingly.\n\n\nTitle\n+++++\n\nA questionnaire has a title:\n\n.. code:: json\n\n    \"title\": \"A Bunch of Questions\",\n\n\nQuestions and Answers\n+++++++++++++++++++++\n\nEach question should have multiple answers.\n\nEach answer must have weighting, defined as a float number between\n``0.0`` and ``1.0``.\n\nException: I sometimes use a value of ``1.1`` for \"bonus answers\" which\nallows for an overall score of more than 100%).\n\nTo calculate the overall score, the weighting of each question's answer\nwill be used.\n\nExample:\n\n.. code:: json\n\n    \"questions\": [\n        {\n            \"text\": \"What's your favorite color?\",\n            \"answers\": [\n                { \"text\": \"blue\",      \"weighting\": 0.7  },\n                { \"text\": \"green\",     \"weighting\": 0.5  },\n                { \"text\": \"yellow\",    \"weighting\": 0.1  },\n                { \"text\": \"red\",       \"weighting\": 0.25 },\n                { \"text\": \"none\",      \"weighting\": 1.0  },\n                { \"text\": \"checkered\", \"weighting\": 1.1  }\n            ]\n        }\n    ]\n\n\nRatings\n+++++++\n\nRatings can be defined to add a text to the result based on the\nachieved overall score. Each is bound to a score range.\n\nThe `minimum_score` value sets the threshold for each rating. The\nadequate rating will be chosen by finding the one with the highest\n`minimum_score` value that is lower than the score. For example, with a\nscore of 53 % and ratings with `minimum_score` values of\n`[10, 20, ..., 90, 100]`, the selected rating will be the one with a\n`minimum_score` value of ``50`` since it is lower than ``53`` and the\nnext higher `minimum_score` value, ``60``, is not lower than the score\nof ``53``.\n\nTherefore, a rating's `minimum_score` value defines the minimum score\none has to gain to be given that rating, as long as no other rating is\nmore suitable considering its `minimum_score` minimum.\n\nExample:\n\n.. code:: json\n\n    \"rating_levels\": [\n        { \"minimum_score\":  0, \"text\": \"OMG, please waste time with something else!\" },\n        { \"minimum_score\": 40, \"text\": \"Not bad.\" },\n        { \"minimum_score\": 70, \"text\": \"Looking good.\" },\n        { \"minimum_score\": 90, \"text\": \"Yeah, great result!\" }\n    ]\n\nRating levels are optional. If none are defined in the data file, to\nrating text is shown on the result page.\n\n\nUsage\n-----\n\nStart the application with the example configuration:\n\n.. code:: sh\n\n    $ ./runserver.py data/example.json\n\nIt will spawn a web server on port 5000.\n\nTo access the questionnaire, point a web browser to\nhttp://localhost:5000/.\n\nYou can also specify a custom port to listen on as well as enable debug\nmode:\n\n.. code:: sh\n\n    $ ./runserver.py --debug --port 8080 data/example.json\n\n\nThis will make the questionnaire available on http://localhost:8080/ and\nprovide an in-browser debugger in case an exception is raised by the\napplication.\n\n\nChanges\n-------\n\nNotable changes since the first release:\n\n- The data format for a questionnaire changed from XML to JSON_.\n\n- WSGI_ (via Werkzeug_) has replaced CGI as the interface to the web\n  server to support more `deployment options`_.\n\n- Jinja_ has replaced Kid_ as the template engine.\n\n- The original script evolved into a Flask_ application with separate\n  modules and templates.\n\n- Tests have been added.\n\n- Naming has been adjusted to follow `PEP 8`_ more closely.\n\n- Python 3 is supported.\n\n\n.. _JSON:               http://www.json.com/\n.. _Python:             http://www.python.org/\n.. _Flask:              http://flask.pocoo.org/\n.. _deployment options: http://flask.pocoo.org/docs/deploying/#deployment\n.. _WSGI:               http://www.wsgi.org/\n.. _Werkzeug:           http://werkzeug.pocoo.org/\n.. _Jinja:              http://jinja.pocoo.org/\n.. _Kid:                http://www.kid-templating.org/\n.. _ElementTree:        http://effbot.org/zone/element-index.htm\n.. _PEP 8:              http://www.python.org/dev/peps/pep-0008/", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://homework.nwsnet.de/releases/8909/#el-cuestionario", "keywords": null, "license": "GPLv2", "maintainer": null, "maintainer_email": null, "name": "El-Cuestionario", "package_url": "https://pypi.org/project/El-Cuestionario/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/El-Cuestionario/", "project_urls": {"Homepage": "http://homework.nwsnet.de/releases/8909/#el-cuestionario"}, "release_url": "https://pypi.org/project/El-Cuestionario/0.4.1/", "requires_dist": null, "requires_python": null, "summary": "A tiny web application to display and evaluate single-page questionnaires", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>El Cuestionario</strong> (formerly known as <strong>Rate Yourself</strong>) is a tiny web\napplication to display and evaluate single-page questionnaires.</p>\n<p>A questionnaire (questions, their answers, and score ratings) is\ndefined as <a href=\"http://www.json.com/\" rel=\"nofollow\">JSON</a> in a single file.</p>\n<p>The questions are presented in the order they are defined in the data\nfile while the answers are shown in random order.</p>\n<p>Once all questions are answered, the user\u2019s score is calculated based\non the answers\u2019 weight (as defined) and is presented with a suitable\ncomment.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Copyright:</th><td>2005-2015 <a href=\"http://homework.nwsnet.de/\" rel=\"nofollow\">Jochen Kupperschmidt</a></td>\n</tr>\n<tr><th>Date:</th><td>02-Oct-2015 (original release: 26-Apr-2006)</td>\n</tr>\n<tr><th>License:</th><td>GNU General Public License version 2, see LICENSE for details.</td>\n</tr>\n<tr><th>Version:</th><td>0.4.1</td>\n</tr>\n</tbody>\n</table>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"http://www.python.org/\" rel=\"nofollow\">Python</a> 2.7+ or 3.3+</li>\n<li><a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install dependencies:</p>\n<pre>$ pip install -r requirements.txt\n</pre>\n<p>Make the script to run the application executable:</p>\n<pre>$ chmod +x runserver.py\n</pre>\n<p>This script (which uses the built-in web server) is fine to get up and\nrunning quickly. However, to actually serve the application on the\nInternet, please consider the other <a href=\"http://flask.pocoo.org/docs/deploying/#deployment\" rel=\"nofollow\">deployment options</a> described in\nFlask\u2019s excellent documentation.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Take a look at <tt>data/example.json</tt> regarding how a questionnaire is\ndefined. Just copy the file, adjust its content and update the value of\nthe <tt>SURVEY_FILENAME</tt> variable in the main script accordingly.</p>\n<div id=\"title\">\n<h3>Title</h3>\n<p>A questionnaire has a title:</p>\n<pre><span class=\"s2\">\"title\"</span><span class=\"err\">:</span> <span class=\"s2\">\"A Bunch of Questions\"</span><span class=\"err\">,</span>\n</pre>\n</div>\n<div id=\"questions-and-answers\">\n<h3>Questions and Answers</h3>\n<p>Each question should have multiple answers.</p>\n<p>Each answer must have weighting, defined as a float number between\n<tt>0.0</tt> and <tt>1.0</tt>.</p>\n<p>Exception: I sometimes use a value of <tt>1.1</tt> for \u201cbonus answers\u201d which\nallows for an overall score of more than 100%).</p>\n<p>To calculate the overall score, the weighting of each question\u2019s answer\nwill be used.</p>\n<p>Example:</p>\n<pre><span class=\"s2\">\"questions\"</span><span class=\"err\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"What's your favorite color?\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"answers\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span> <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"blue\"</span><span class=\"p\">,</span>      <span class=\"nt\">\"weighting\"</span><span class=\"p\">:</span> <span class=\"mf\">0.7</span>  <span class=\"p\">},</span>\n            <span class=\"p\">{</span> <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"green\"</span><span class=\"p\">,</span>     <span class=\"nt\">\"weighting\"</span><span class=\"p\">:</span> <span class=\"mf\">0.5</span>  <span class=\"p\">},</span>\n            <span class=\"p\">{</span> <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"yellow\"</span><span class=\"p\">,</span>    <span class=\"nt\">\"weighting\"</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span>  <span class=\"p\">},</span>\n            <span class=\"p\">{</span> <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"red\"</span><span class=\"p\">,</span>       <span class=\"nt\">\"weighting\"</span><span class=\"p\">:</span> <span class=\"mf\">0.25</span> <span class=\"p\">},</span>\n            <span class=\"p\">{</span> <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"none\"</span><span class=\"p\">,</span>      <span class=\"nt\">\"weighting\"</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span>  <span class=\"p\">},</span>\n            <span class=\"p\">{</span> <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"checkered\"</span><span class=\"p\">,</span> <span class=\"nt\">\"weighting\"</span><span class=\"p\">:</span> <span class=\"mf\">1.1</span>  <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"ratings\">\n<h3>Ratings</h3>\n<p>Ratings can be defined to add a text to the result based on the\nachieved overall score. Each is bound to a score range.</p>\n<p>The <cite>minimum_score</cite> value sets the threshold for each rating. The\nadequate rating will be chosen by finding the one with the highest\n<cite>minimum_score</cite> value that is lower than the score. For example, with a\nscore of 53 % and ratings with <cite>minimum_score</cite> values of\n<cite>[10, 20, \u2026, 90, 100]</cite>, the selected rating will be the one with a\n<cite>minimum_score</cite> value of <tt>50</tt> since it is lower than <tt>53</tt> and the\nnext higher <cite>minimum_score</cite> value, <tt>60</tt>, is not lower than the score\nof <tt>53</tt>.</p>\n<p>Therefore, a rating\u2019s <cite>minimum_score</cite> value defines the minimum score\none has to gain to be given that rating, as long as no other rating is\nmore suitable considering its <cite>minimum_score</cite> minimum.</p>\n<p>Example:</p>\n<pre><span class=\"s2\">\"rating_levels\"</span><span class=\"err\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span> <span class=\"nt\">\"minimum_score\"</span><span class=\"p\">:</span>  <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"OMG, please waste time with something else!\"</span> <span class=\"p\">},</span>\n    <span class=\"p\">{</span> <span class=\"nt\">\"minimum_score\"</span><span class=\"p\">:</span> <span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Not bad.\"</span> <span class=\"p\">},</span>\n    <span class=\"p\">{</span> <span class=\"nt\">\"minimum_score\"</span><span class=\"p\">:</span> <span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Looking good.\"</span> <span class=\"p\">},</span>\n    <span class=\"p\">{</span> <span class=\"nt\">\"minimum_score\"</span><span class=\"p\">:</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Yeah, great result!\"</span> <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Rating levels are optional. If none are defined in the data file, to\nrating text is shown on the result page.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Start the application with the example configuration:</p>\n<pre>$ ./runserver.py data/example.json\n</pre>\n<p>It will spawn a web server on port 5000.</p>\n<p>To access the questionnaire, point a web browser to\n<a href=\"http://localhost:5000/\" rel=\"nofollow\">http://localhost:5000/</a>.</p>\n<p>You can also specify a custom port to listen on as well as enable debug\nmode:</p>\n<pre>$ ./runserver.py --debug --port <span class=\"m\">8080</span> data/example.json\n</pre>\n<p>This will make the questionnaire available on <a href=\"http://localhost:8080/\" rel=\"nofollow\">http://localhost:8080/</a> and\nprovide an in-browser debugger in case an exception is raised by the\napplication.</p>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<p>Notable changes since the first release:</p>\n<ul>\n<li>The data format for a questionnaire changed from XML to <a href=\"http://www.json.com/\" rel=\"nofollow\">JSON</a>.</li>\n<li><a href=\"http://www.wsgi.org/\" rel=\"nofollow\">WSGI</a> (via <a href=\"http://werkzeug.pocoo.org/\" rel=\"nofollow\">Werkzeug</a>) has replaced CGI as the interface to the web\nserver to support more <a href=\"http://flask.pocoo.org/docs/deploying/#deployment\" rel=\"nofollow\">deployment options</a>.</li>\n<li><a href=\"http://jinja.pocoo.org/\" rel=\"nofollow\">Jinja</a> has replaced <a href=\"http://www.kid-templating.org/\" rel=\"nofollow\">Kid</a> as the template engine.</li>\n<li>The original script evolved into a <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a> application with separate\nmodules and templates.</li>\n<li>Tests have been added.</li>\n<li>Naming has been adjusted to follow <a href=\"http://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP 8</a> more closely.</li>\n<li>Python 3 is supported.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1748213, "releases": {"0.4.1": [{"comment_text": "", "digests": {"md5": "49a77de6ea2abc7382a3c38566fa5ec8", "sha256": "036f5259915c75ff75c7160d74d2fc6d953e2868587ca69c59a26a7d7a5addeb"}, "downloads": -1, "filename": "El_Cuestionario-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "49a77de6ea2abc7382a3c38566fa5ec8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11676, "upload_time": "2015-10-02T02:12:42", "upload_time_iso_8601": "2015-10-02T02:12:42.115796Z", "url": "https://files.pythonhosted.org/packages/7a/54/676941faa199deb3a7d53d699cdda372b317ccc31a3dce120f567ded05aa/El_Cuestionario-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9139b6d151cf9981012135eab3bb6131", "sha256": "997d6ff155d3cad5e946ff50e04d867ca07904bf422fbe2c149a34364d24e8eb"}, "downloads": -1, "filename": "El Cuestionario-0.4.1.tar.gz", "has_sig": false, "md5_digest": "9139b6d151cf9981012135eab3bb6131", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92305, "upload_time": "2015-10-02T02:12:47", "upload_time_iso_8601": "2015-10-02T02:12:47.282719Z", "url": "https://files.pythonhosted.org/packages/1b/6a/f977ecbda15f3f70fd3dd1c63dd481b53346ceeb14be9521e7b5d266072c/El%20Cuestionario-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "49a77de6ea2abc7382a3c38566fa5ec8", "sha256": "036f5259915c75ff75c7160d74d2fc6d953e2868587ca69c59a26a7d7a5addeb"}, "downloads": -1, "filename": "El_Cuestionario-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "49a77de6ea2abc7382a3c38566fa5ec8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11676, "upload_time": "2015-10-02T02:12:42", "upload_time_iso_8601": "2015-10-02T02:12:42.115796Z", "url": "https://files.pythonhosted.org/packages/7a/54/676941faa199deb3a7d53d699cdda372b317ccc31a3dce120f567ded05aa/El_Cuestionario-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9139b6d151cf9981012135eab3bb6131", "sha256": "997d6ff155d3cad5e946ff50e04d867ca07904bf422fbe2c149a34364d24e8eb"}, "downloads": -1, "filename": "El Cuestionario-0.4.1.tar.gz", "has_sig": false, "md5_digest": "9139b6d151cf9981012135eab3bb6131", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92305, "upload_time": "2015-10-02T02:12:47", "upload_time_iso_8601": "2015-10-02T02:12:47.282719Z", "url": "https://files.pythonhosted.org/packages/1b/6a/f977ecbda15f3f70fd3dd1c63dd481b53346ceeb14be9521e7b5d266072c/El%20Cuestionario-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:56 2020"}