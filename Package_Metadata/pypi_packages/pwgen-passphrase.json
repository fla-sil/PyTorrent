{"info": {"author": "Michal Krenek (Mikos)", "author_email": "m.krenek@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: End Users/Desktop", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Security", "Topic :: Utilities"], "description": "pwgen-passphrase\n================\n\nSecure wordlist-based passphrase generator\n\nDescription\n-----------\n\nUse ``pwgen-passphrase`` to generate secure (yet easy to remember) random passphrase from wordlist.\nSee legendary `xkcd: Password Strength <https://xkcd.com/936>`_ comic strip for more details ;-)\n\nIncluded wordlists are:\n\n- `diceware <http://world.std.com/~reinhold/diceware.html>`_ (English: 7776 words)\n- `eff-long <https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases>`_ (English: 7776 words)\n- `eff-short <https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases>`_ (English: 1296 words)\n- `eff-short2 <https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases>`_ (English: 1296 words)\n- `bip0039 <https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki>`_ (English: 2048 words)\n- `skey <https://tools.ietf.org/html/rfc1760>`_ (English: 2048 words)\n- `cracklib-small <https://github.com/cracklib/cracklib>`_ (English: 52875 words)\n- `aspell-en <http://aspell.net>`_ (English: 123232 words)\n- `aspell-cs <http://aspell.net>`_ (Czech: 304607 words)\n\nRequirements\n------------\n\n- `Python 3 <https://www.python.org>`_\n- Optional: `PyQt <https://www.riverbankcomputing.com/software/pyqt/intro>`_\n  (for copying generated passphrase to clipboard)\n- Optional: `regex <https://bitbucket.org/mrabarnett/mrab-regex>`_\n  (for better regex filtering, e.g. ``^[\\p{Ll}]+`` for Unicode lower-case letters only)\n\nUsage\n-----\n\nRun ``pwgen-passphrase --help`` to see all available options.\n\nExample::\n\n    [randall@xkcd.com ~] pwgen-passphrase -w cracklib-small -l 4 -t\n    correct horse battery staple\n    \n    Statistics:\n    ===========\n    Number of words in passphrase: 4\n    Wordlist length: 52875 words\n    Passphrase strength (entropy): 62.8 bits\n    \n    Passphrase length: 28 chars\n    Length of equivalent case sensitive alphanumeric password: 11 chars\n    Length of equivalent all ASCII printable characters password: 10 chars\n\nHelp\n----\n::\n\n    usage: pwgen-passphrase [-h] [-t] [-c] [-s SEPARATOR] [-n COUNT]\n                            [-w {aspell-cs,aspell-en,bip0039,cracklib-small,diceware,eff-long,eff-short,eff-short2,skey} | -f WORDLIST_FILE]\n                            [-l LENGTH | -b BITS] [-L | -U | -C] [--min MIN]\n                            [--max MAX] [-r] [-e REGEX] [--version]\n    \n    generate secure random passphrase from wordlist\n    \n    optional arguments:\n      -h, --help            show this help message and exit\n      -t, --stats           show statistics about generated passphrase\n      -c, --clipboard       copy generated passphrase to clipboard (needs PyQt)\n      -s SEPARATOR, --separator SEPARATOR\n                            words separator (default is space)\n      -n COUNT, --count COUNT\n                            generate multiple passphrases (default is 1)\n      -w {aspell-cs,aspell-en,bip0039,cracklib-small,diceware,eff-long,eff-short,eff-short2,skey}, --wordlist {aspell-cs,aspell-en,bip0039,cracklib-small,diceware,eff-long,eff-short,eff-short2,skey}\n                            select wordlist (default is eff-long)\n      -f WORDLIST_FILE, --wordlist-file WORDLIST_FILE\n                            path to external wordlist file\n      -l LENGTH, --length LENGTH\n                            length of generated passphrase (number of words,\n                            default is 6)\n      -b BITS, --bits BITS  minimal passphrase strength (bits of entropy)\n      -L, --lower           make words lowercase\n      -U, --upper           make words uppercase\n      -C, --capitalize      make words capitalized\n      --min MIN             limit minimum length of word (default is unlimited)\n      --max MAX             limit maximum length of word (default is unlimited)\n      -r, --transliterate   transliterate Unicode characters to ASCII and remove\n                            duplicates\n      -e REGEX, --regex REGEX\n                            remove words that do not match regular expression\n      --version             show program's version number and exit\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/xmikos/pwgen-passphrase", "keywords": "", "license": "GNU GPLv3", "maintainer": "", "maintainer_email": "", "name": "pwgen-passphrase", "package_url": "https://pypi.org/project/pwgen-passphrase/", "platform": "", "project_url": "https://pypi.org/project/pwgen-passphrase/", "project_urls": {"Homepage": "https://github.com/xmikos/pwgen-passphrase"}, "release_url": "https://pypi.org/project/pwgen-passphrase/1.2/", "requires_dist": null, "requires_python": "", "summary": "Secure wordlist-based passphrase generator", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Secure wordlist-based passphrase generator</p>\n<div id=\"description\">\n<h2>Description</h2>\n<p>Use <tt><span class=\"pre\">pwgen-passphrase</span></tt> to generate secure (yet easy to remember) random passphrase from wordlist.\nSee legendary <a href=\"https://xkcd.com/936\" rel=\"nofollow\">xkcd: Password Strength</a> comic strip for more details ;-)</p>\n<p>Included wordlists are:</p>\n<ul>\n<li><a href=\"http://world.std.com/~reinhold/diceware.html\" rel=\"nofollow\">diceware</a> (English: 7776 words)</li>\n<li><a href=\"https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases\" rel=\"nofollow\">eff-long</a> (English: 7776 words)</li>\n<li><a href=\"https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases\" rel=\"nofollow\">eff-short</a> (English: 1296 words)</li>\n<li><a href=\"https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases\" rel=\"nofollow\">eff-short2</a> (English: 1296 words)</li>\n<li><a href=\"https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\" rel=\"nofollow\">bip0039</a> (English: 2048 words)</li>\n<li><a href=\"https://tools.ietf.org/html/rfc1760\" rel=\"nofollow\">skey</a> (English: 2048 words)</li>\n<li><a href=\"https://github.com/cracklib/cracklib\" rel=\"nofollow\">cracklib-small</a> (English: 52875 words)</li>\n<li><a href=\"http://aspell.net\" rel=\"nofollow\">aspell-en</a> (English: 123232 words)</li>\n<li><a href=\"http://aspell.net\" rel=\"nofollow\">aspell-cs</a> (Czech: 304607 words)</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"https://www.python.org\" rel=\"nofollow\">Python 3</a></li>\n<li>Optional: <a href=\"https://www.riverbankcomputing.com/software/pyqt/intro\" rel=\"nofollow\">PyQt</a>\n(for copying generated passphrase to clipboard)</li>\n<li>Optional: <a href=\"https://bitbucket.org/mrabarnett/mrab-regex\" rel=\"nofollow\">regex</a>\n(for better regex filtering, e.g. <tt><span class=\"pre\">^[\\p{Ll}]+</span></tt> for Unicode lower-case letters only)</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Run <tt><span class=\"pre\">pwgen-passphrase</span> <span class=\"pre\">--help</span></tt> to see all available options.</p>\n<p>Example:</p>\n<pre>[randall@xkcd.com ~] pwgen-passphrase -w cracklib-small -l 4 -t\ncorrect horse battery staple\n\nStatistics:\n===========\nNumber of words in passphrase: 4\nWordlist length: 52875 words\nPassphrase strength (entropy): 62.8 bits\n\nPassphrase length: 28 chars\nLength of equivalent case sensitive alphanumeric password: 11 chars\nLength of equivalent all ASCII printable characters password: 10 chars\n</pre>\n</div>\n<div id=\"help\">\n<h2>Help</h2>\n<pre>usage: pwgen-passphrase [-h] [-t] [-c] [-s SEPARATOR] [-n COUNT]\n                        [-w {aspell-cs,aspell-en,bip0039,cracklib-small,diceware,eff-long,eff-short,eff-short2,skey} | -f WORDLIST_FILE]\n                        [-l LENGTH | -b BITS] [-L | -U | -C] [--min MIN]\n                        [--max MAX] [-r] [-e REGEX] [--version]\n\ngenerate secure random passphrase from wordlist\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -t, --stats           show statistics about generated passphrase\n  -c, --clipboard       copy generated passphrase to clipboard (needs PyQt)\n  -s SEPARATOR, --separator SEPARATOR\n                        words separator (default is space)\n  -n COUNT, --count COUNT\n                        generate multiple passphrases (default is 1)\n  -w {aspell-cs,aspell-en,bip0039,cracklib-small,diceware,eff-long,eff-short,eff-short2,skey}, --wordlist {aspell-cs,aspell-en,bip0039,cracklib-small,diceware,eff-long,eff-short,eff-short2,skey}\n                        select wordlist (default is eff-long)\n  -f WORDLIST_FILE, --wordlist-file WORDLIST_FILE\n                        path to external wordlist file\n  -l LENGTH, --length LENGTH\n                        length of generated passphrase (number of words,\n                        default is 6)\n  -b BITS, --bits BITS  minimal passphrase strength (bits of entropy)\n  -L, --lower           make words lowercase\n  -U, --upper           make words uppercase\n  -C, --capitalize      make words capitalized\n  --min MIN             limit minimum length of word (default is unlimited)\n  --max MAX             limit maximum length of word (default is unlimited)\n  -r, --transliterate   transliterate Unicode characters to ASCII and remove\n                        duplicates\n  -e REGEX, --regex REGEX\n                        remove words that do not match regular expression\n  --version             show program's version number and exit\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2736889, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "6ca99dd0bee77773c663f3d8d67fdeb8", "sha256": "2d534529d8bc33b6331062a8f537b04be6e2a749cd6694d0ec869a2f8a4773d9"}, "downloads": -1, "filename": "pwgen-passphrase-1.0.tar.gz", "has_sig": false, "md5_digest": "6ca99dd0bee77773c663f3d8d67fdeb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 195565, "upload_time": "2015-11-13T21:47:43", "upload_time_iso_8601": "2015-11-13T21:47:43.640322Z", "url": "https://files.pythonhosted.org/packages/f2/87/51256a0b72893c88f163492bd515b0e8fa39fff1edac803394ef6bdd759f/pwgen-passphrase-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "0cbf90cf5b9b89d2bd6181733edbe4e0", "sha256": "d0adc5aa6c99e1061317cb2bffbc7ac6d310b7ab40ac71428c10c89c91e3b86d"}, "downloads": -1, "filename": "pwgen-passphrase-1.1.tar.gz", "has_sig": false, "md5_digest": "0cbf90cf5b9b89d2bd6181733edbe4e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1212375, "upload_time": "2015-11-19T10:24:32", "upload_time_iso_8601": "2015-11-19T10:24:32.135871Z", "url": "https://files.pythonhosted.org/packages/61/72/0435f15ef182edd79064c1ae4d9576282b157839af7c2c2567907bf010f3/pwgen-passphrase-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "af5bb0344612d91cb96c0106af13d135", "sha256": "7a44412f435c846c36ea78ccbef50d73a073d26178fb80b04c911e33fea6fb73"}, "downloads": -1, "filename": "pwgen-passphrase-1.2.tar.gz", "has_sig": false, "md5_digest": "af5bb0344612d91cb96c0106af13d135", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1243037, "upload_time": "2017-03-28T19:16:07", "upload_time_iso_8601": "2017-03-28T19:16:07.121177Z", "url": "https://files.pythonhosted.org/packages/32/20/e8a0b5adbc5e5c051d8b42661140433f36a2ad3d369b6e63bd6ac462e115/pwgen-passphrase-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "af5bb0344612d91cb96c0106af13d135", "sha256": "7a44412f435c846c36ea78ccbef50d73a073d26178fb80b04c911e33fea6fb73"}, "downloads": -1, "filename": "pwgen-passphrase-1.2.tar.gz", "has_sig": false, "md5_digest": "af5bb0344612d91cb96c0106af13d135", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1243037, "upload_time": "2017-03-28T19:16:07", "upload_time_iso_8601": "2017-03-28T19:16:07.121177Z", "url": "https://files.pythonhosted.org/packages/32/20/e8a0b5adbc5e5c051d8b42661140433f36a2ad3d369b6e63bd6ac462e115/pwgen-passphrase-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:48 2020"}