{"info": {"author": "Neil Freeman", "author_email": "contact@fakeisthenewreal.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Religion", "Topic :: Scientific/Engineering :: Astronomy"], "description": "convertdate\n===========\n\nThe convertdate package was originally developed as \"[Python Date\nUtils](http://sourceforge.net/projects/pythondateutil/)\" by Phil\nSchwartz. It had been significantly updated and expanded.\n\nAvailable calendars:\n\n-   Bahai\n-   Coptic (Alexandrian)\n-   French Republican\n-   Gregorian\n-   Hebrew\n-   Indian Civil\n-   Islamic\n-   Julian\n-   Mayan\n-   Persian\n-   Positivist\n-   Mayan\n-   ISO\n-   Ordinal (day of year)\n-   Dublin day count\n-   Julian day count\n\nThe `holidays` module also provides some useful holiday-calculation,\nwith a focus on North American and Jewish holidays.\n\nInstalling\n----------\n\n`pip install convertdate`\n\nOr download the package and run `python setup.py install`.\n\nUsing\n-----\n\n    from convertdate import french_republican\n    from convertdate import hebrew\n\n    french_republican.from_gregorian(2014, 10, 31)\n    # (223, 2, 1, 9)\n\n    hebrew.from_gregorian(2014, 10, 31)\n    # (5775, 8, 7)\n\nNote that in some calendar systems, the day begins at sundown.\nConvertdate gives the conversion for noon of the day in question.\n\nEach module includes a monthcalendar function, which will generate a\ncalender-like nested list for a year and month (each list of dates runs\nfrom Sunday to Saturday)\n\n    hebrew.monthcalendar(5775, 8)\n    # [\n    #     [None, None, None, None, None, None, 1],\n    #     [2, 3, 4, 5, 6, 7, 8],\n    #     [9, 10, 11, 12, 13, 14, 15],\n    #     [16, 17, 18, 19, 20, 21, 22],\n    #     [23, 24, 25, 26, 27, 28, 29]\n    # ]\n\n    julian.monthcalendar(2015, 1)\n    # [\n    #    [None, None, None, 1, 2, 3, 4],\n    #    [5, 6, 7, 8, 9, 10, 11],\n    #    [12, 13, 14, 15, 16, 17, 18],\n    #    [19, 20, 21, 22, 23, 24, 25],\n    #    [26, 27, 28, 29, 30, 31, None]\n    # ]\n\nSpecial Options\n---------------\n\n### French Republican\n\nLeap year calculations in the French Republican calendar are a matter of\ndispute. By default, `convertdate` calculates leap years using the\nautumnal equinox. You can also use one of three more systematic methods\nproposed over the years.\n\n-   Romme, a co-creator of the calendar, proposed leap years in years\n    divisible by four, except for years divisible by 100.\n-   Some concordances were drawn up in the 19th century that gave leap\n    years every 4 years, in years that give a remainder of three when\n    divided by four (19, 23, 27, etc...).\n-   Von M&auml;dler proposed leap years in years divisible by four, except\n    for years divisible by 128.\n\nYou can specify any of these three methods with the method keyword\nargument in `french_republican` conversion functions.\n\n    from convertdate import french_republican\n\n    # Romme's method\n    french_republican.to_gregorian(20, 1, 1), method='romme')\n    # (1811, 9, 23)\n\n    # continuous method\n    french_republican.to_gregorian(20, 1, 1), method='continuous')\n    # (1811, 9, 24)\n\n    # von Madler's method\n    french_republican.to_gregorian(20, 1, 1), method='madler')\n    # (1811, 9, 23)\n\nAll the conversion methods correctly assign the leap years implemented\nwhile calendar was in use (3, 7, 11).\n\nBaha'i\n------\n\nThe Bah&aacute;'&iacute; (Bad&iacute;) calendar has an intercalary period, Ayyam-i-H&aacute;, which occurs between the 18th and 19th months.\nDates in this period are returned as month 19, and the month of &lsquo;Al&aacute; is reported as month 20.\n\n```python\nfrom convertdate import bahai\n# the first day of Ayyam-i-Ha:\nbahai.to_gregorian(175, 19, 1)\n# (2019, 2, 11)\n# The first day of 'Ala:\nbahai.to_gregorian(175, 20, 1)\n# (2019, 3, 2)\n```\n\nBefore the Common Era\n---------------------\n\nFor dates before the Common Era (year 1), `convertdate` uses\nastronomical notation: 1 BC is recorded as 0, 2 BC is -1, etc. This\nmakes arithmatic much easier at the expense of ignoring custom.\n\nNote that for dates before 4 CE, `convertdate` uses the [proleptic\nJulian\ncalendar](https://en.wikipedia.org/wiki/Proleptic_Julian_calendar). The\nJulian Calendar was in use from 45 BC, but before 4 CE the leap year\nleap year pattern was irregular.\n\nThe [proleptic Gregorian\ncalendar](https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar) is\nused for dates before 1582 CE, the year of the Gregorian calendar\nreform.\n\nHolidays\n--------\n\nNorth American holidays are the current focus of the `holidays` module,\nbut pull requests are welcome.\n\n    from convertdate import holidays\n\n    # For simplicity, functions in the holidays module return a tuple\n    # In the format (year, month, day)\n\n    holidays.new_years(2014)\n    # (2014, 1, 1)\n\n    holidays.memorial_day(2014)\n    # (2014, 5, 26)\n\n    # USA is default\n    holidays.thanksgiving(2014)\n    # (2014, 11, 27)\n\n    # But there is a Canadian option for some holidays\n    holidays.thanksgiving(2014, 'canada')\n    # (2014, 10, 13)\n\n    # Mexican national holidays\n    holidays.natalicio_benito_juarez(2016)\n    # (2016, 3, 21)\n\n    holidays.dia_revolucion(2016)\n    # (2016, 11, 21)\n\n    # Some Jewish holidays are included\n    holidays.rosh_hashanah(2014)\n\nUtils\n-----\n\nConvertdate includes some utilities for manipulating and calculating\ndates.\n\n    from convertdate import utils\n\n    # Calculate an arbitrary day of the week\n    THUR = 3\n    APRIL = 4\n\n    # 3rd Thursday in April\n    utils.nth_day_of_month(3, THUR, APRIL, 2014)\n    # (2014, 4, 17)\n\n    utils.nth_day_of_month(5, THUR, APRIL, 2014)\n    # IndexError: No 5th day of month 4\n\n    # Use 0 for the first argument to get the last weekday of a month\n    utils.nth_day_of_month(0, THUR, APRIL, 2014)\n    # (2014, 4, 24)\n\nNote that when calculating weekdays, convertdate uses the convention of\nthe calendar and time modules: Monday is 0, Sunday is 6.\n\n    from convertdate import gregorian\n\n    SUN = 6\n\n    day = gregorian.to_jd(2014, 4, 17)\n    nextsunday = utils.next_weekday(SUN, day)\n\n    gregorian.from_jd(nextsunday)\n    # (2014, 4, 20)\n\nOther utility functions:\n\n-   nearest\\_weekday\n-   next\\_or\\_current\\_weekday\n-   previous\\_weekday\n-   previous\\_or\\_current\\_weekday\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fitnr/convertdate", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "convertdate", "package_url": "https://pypi.org/project/convertdate/", "platform": "", "project_url": "https://pypi.org/project/convertdate/", "project_urls": {"Homepage": "https://github.com/fitnr/convertdate"}, "release_url": "https://pypi.org/project/convertdate/2.2.0/", "requires_dist": ["pytz (<2020,>=2014.10)", "pymeeus (<=1,>=0.3.6)"], "requires_python": "", "summary": "Converts between Gregorian dates and other calendar systems.Calendars included: Baha'i, French Republican, Hebrew, Indian Civil, Islamic, ISO, Julian, Mayan and Persian.", "version": "2.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>convertdate</h1>\n<p>The convertdate package was originally developed as \"<a href=\"http://sourceforge.net/projects/pythondateutil/\" rel=\"nofollow\">Python Date\nUtils</a>\" by Phil\nSchwartz. It had been significantly updated and expanded.</p>\n<p>Available calendars:</p>\n<ul>\n<li>Bahai</li>\n<li>Coptic (Alexandrian)</li>\n<li>French Republican</li>\n<li>Gregorian</li>\n<li>Hebrew</li>\n<li>Indian Civil</li>\n<li>Islamic</li>\n<li>Julian</li>\n<li>Mayan</li>\n<li>Persian</li>\n<li>Positivist</li>\n<li>Mayan</li>\n<li>ISO</li>\n<li>Ordinal (day of year)</li>\n<li>Dublin day count</li>\n<li>Julian day count</li>\n</ul>\n<p>The <code>holidays</code> module also provides some useful holiday-calculation,\nwith a focus on North American and Jewish holidays.</p>\n<h2>Installing</h2>\n<p><code>pip install convertdate</code></p>\n<p>Or download the package and run <code>python setup.py install</code>.</p>\n<h2>Using</h2>\n<pre><code>from convertdate import french_republican\nfrom convertdate import hebrew\n\nfrench_republican.from_gregorian(2014, 10, 31)\n# (223, 2, 1, 9)\n\nhebrew.from_gregorian(2014, 10, 31)\n# (5775, 8, 7)\n</code></pre>\n<p>Note that in some calendar systems, the day begins at sundown.\nConvertdate gives the conversion for noon of the day in question.</p>\n<p>Each module includes a monthcalendar function, which will generate a\ncalender-like nested list for a year and month (each list of dates runs\nfrom Sunday to Saturday)</p>\n<pre><code>hebrew.monthcalendar(5775, 8)\n# [\n#     [None, None, None, None, None, None, 1],\n#     [2, 3, 4, 5, 6, 7, 8],\n#     [9, 10, 11, 12, 13, 14, 15],\n#     [16, 17, 18, 19, 20, 21, 22],\n#     [23, 24, 25, 26, 27, 28, 29]\n# ]\n\njulian.monthcalendar(2015, 1)\n# [\n#    [None, None, None, 1, 2, 3, 4],\n#    [5, 6, 7, 8, 9, 10, 11],\n#    [12, 13, 14, 15, 16, 17, 18],\n#    [19, 20, 21, 22, 23, 24, 25],\n#    [26, 27, 28, 29, 30, 31, None]\n# ]\n</code></pre>\n<h2>Special Options</h2>\n<h3>French Republican</h3>\n<p>Leap year calculations in the French Republican calendar are a matter of\ndispute. By default, <code>convertdate</code> calculates leap years using the\nautumnal equinox. You can also use one of three more systematic methods\nproposed over the years.</p>\n<ul>\n<li>Romme, a co-creator of the calendar, proposed leap years in years\ndivisible by four, except for years divisible by 100.</li>\n<li>Some concordances were drawn up in the 19th century that gave leap\nyears every 4 years, in years that give a remainder of three when\ndivided by four (19, 23, 27, etc...).</li>\n<li>Von M\u00e4dler proposed leap years in years divisible by four, except\nfor years divisible by 128.</li>\n</ul>\n<p>You can specify any of these three methods with the method keyword\nargument in <code>french_republican</code> conversion functions.</p>\n<pre><code>from convertdate import french_republican\n\n# Romme's method\nfrench_republican.to_gregorian(20, 1, 1), method='romme')\n# (1811, 9, 23)\n\n# continuous method\nfrench_republican.to_gregorian(20, 1, 1), method='continuous')\n# (1811, 9, 24)\n\n# von Madler's method\nfrench_republican.to_gregorian(20, 1, 1), method='madler')\n# (1811, 9, 23)\n</code></pre>\n<p>All the conversion methods correctly assign the leap years implemented\nwhile calendar was in use (3, 7, 11).</p>\n<h2>Baha'i</h2>\n<p>The Bah\u00e1'\u00ed (Bad\u00ed) calendar has an intercalary period, Ayyam-i-H\u00e1, which occurs between the 18th and 19th months.\nDates in this period are returned as month 19, and the month of \u2018Al\u00e1 is reported as month 20.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">convertdate</span> <span class=\"kn\">import</span> <span class=\"n\">bahai</span>\n<span class=\"c1\"># the first day of Ayyam-i-Ha:</span>\n<span class=\"n\">bahai</span><span class=\"o\">.</span><span class=\"n\">to_gregorian</span><span class=\"p\">(</span><span class=\"mi\">175</span><span class=\"p\">,</span> <span class=\"mi\">19</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"c1\"># (2019, 2, 11)</span>\n<span class=\"c1\"># The first day of 'Ala:</span>\n<span class=\"n\">bahai</span><span class=\"o\">.</span><span class=\"n\">to_gregorian</span><span class=\"p\">(</span><span class=\"mi\">175</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"c1\"># (2019, 3, 2)</span>\n</pre>\n<h2>Before the Common Era</h2>\n<p>For dates before the Common Era (year 1), <code>convertdate</code> uses\nastronomical notation: 1 BC is recorded as 0, 2 BC is -1, etc. This\nmakes arithmatic much easier at the expense of ignoring custom.</p>\n<p>Note that for dates before 4 CE, <code>convertdate</code> uses the <a href=\"https://en.wikipedia.org/wiki/Proleptic_Julian_calendar\" rel=\"nofollow\">proleptic\nJulian\ncalendar</a>. The\nJulian Calendar was in use from 45 BC, but before 4 CE the leap year\nleap year pattern was irregular.</p>\n<p>The <a href=\"https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar\" rel=\"nofollow\">proleptic Gregorian\ncalendar</a> is\nused for dates before 1582 CE, the year of the Gregorian calendar\nreform.</p>\n<h2>Holidays</h2>\n<p>North American holidays are the current focus of the <code>holidays</code> module,\nbut pull requests are welcome.</p>\n<pre><code>from convertdate import holidays\n\n# For simplicity, functions in the holidays module return a tuple\n# In the format (year, month, day)\n\nholidays.new_years(2014)\n# (2014, 1, 1)\n\nholidays.memorial_day(2014)\n# (2014, 5, 26)\n\n# USA is default\nholidays.thanksgiving(2014)\n# (2014, 11, 27)\n\n# But there is a Canadian option for some holidays\nholidays.thanksgiving(2014, 'canada')\n# (2014, 10, 13)\n\n# Mexican national holidays\nholidays.natalicio_benito_juarez(2016)\n# (2016, 3, 21)\n\nholidays.dia_revolucion(2016)\n# (2016, 11, 21)\n\n# Some Jewish holidays are included\nholidays.rosh_hashanah(2014)\n</code></pre>\n<h2>Utils</h2>\n<p>Convertdate includes some utilities for manipulating and calculating\ndates.</p>\n<pre><code>from convertdate import utils\n\n# Calculate an arbitrary day of the week\nTHUR = 3\nAPRIL = 4\n\n# 3rd Thursday in April\nutils.nth_day_of_month(3, THUR, APRIL, 2014)\n# (2014, 4, 17)\n\nutils.nth_day_of_month(5, THUR, APRIL, 2014)\n# IndexError: No 5th day of month 4\n\n# Use 0 for the first argument to get the last weekday of a month\nutils.nth_day_of_month(0, THUR, APRIL, 2014)\n# (2014, 4, 24)\n</code></pre>\n<p>Note that when calculating weekdays, convertdate uses the convention of\nthe calendar and time modules: Monday is 0, Sunday is 6.</p>\n<pre><code>from convertdate import gregorian\n\nSUN = 6\n\nday = gregorian.to_jd(2014, 4, 17)\nnextsunday = utils.next_weekday(SUN, day)\n\ngregorian.from_jd(nextsunday)\n# (2014, 4, 20)\n</code></pre>\n<p>Other utility functions:</p>\n<ul>\n<li>nearest_weekday</li>\n<li>next_or_current_weekday</li>\n<li>previous_weekday</li>\n<li>previous_or_current_weekday</li>\n</ul>\n\n          </div>"}, "last_serial": 6034505, "releases": {"2.0.1": [{"comment_text": "", "digests": {"md5": "8279a000e4b8bb3d76ae93681a281e31", "sha256": "2cd387de9fabe4dfddff2ceb5923cdb08f6f9a4573c17b1d963a095bc3d5bba3"}, "downloads": -1, "filename": "convertdate-2.0.1.tar.gz", "has_sig": false, "md5_digest": "8279a000e4b8bb3d76ae93681a281e31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16760, "upload_time": "2014-11-05T23:21:09", "upload_time_iso_8601": "2014-11-05T23:21:09.698508Z", "url": "https://files.pythonhosted.org/packages/2c/e2/b65ad01afed47c9aad80a713997d6b7a6c4a12a1d6cfeb9a17867e575c4a/convertdate-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "feaf9114af7283e48072f3aab74eb939", "sha256": "c621a27b50fc726dcc7aad5dedb0c52e865c481d87aef0051595c06610755d40"}, "downloads": -1, "filename": "convertdate-2.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "feaf9114af7283e48072f3aab74eb939", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 22789, "upload_time": "2014-11-15T18:44:44", "upload_time_iso_8601": "2014-11-15T18:44:44.052822Z", "url": "https://files.pythonhosted.org/packages/62/c0/426578dafbbc48ee0c39b9b64f7d89f83104f44be65b5806df06047b1c4e/convertdate-2.0.2-py2.py3-none-any.whl", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "f146a202e1549f3e165ecfcc7e82b3ed", "sha256": "1684060c6e56aeef02ef5b0bd2765293f1cea13bbf24e115a375a1a19f40986c"}, "downloads": -1, "filename": "convertdate-2.0.3.tar.gz", "has_sig": false, "md5_digest": "f146a202e1549f3e165ecfcc7e82b3ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16266, "upload_time": "2014-11-24T18:46:33", "upload_time_iso_8601": "2014-11-24T18:46:33.965590Z", "url": "https://files.pythonhosted.org/packages/f5/db/92530efa196526ea7974f49c7cce73a96d74af52b2658696a612c6a9b6c6/convertdate-2.0.3.tar.gz", "yanked": false}], "2.0.3.1": [{"comment_text": "", "digests": {"md5": "b1251c7a58eda32aa2f636a48c316e11", "sha256": "ba4120e69f0e684e4da384886813c2e42d9988653b2f2a1869dfe7695d488713"}, "downloads": -1, "filename": "convertdate-2.0.3.1.tar.gz", "has_sig": false, "md5_digest": "b1251c7a58eda32aa2f636a48c316e11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16946, "upload_time": "2014-11-25T17:45:32", "upload_time_iso_8601": "2014-11-25T17:45:32.412055Z", "url": "https://files.pythonhosted.org/packages/50/1e/be3103fdca39575d67ac01f63e0346fd299a18306b7dc57abfd3d59ccf97/convertdate-2.0.3.1.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "2dd37b7be415e0ba8b6c28526e5764b3", "sha256": "3badd3ee86f149deac74d216e1bf3cb1374066dbe7d42572d4594544bc1b3121"}, "downloads": -1, "filename": "convertdate-2.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2dd37b7be415e0ba8b6c28526e5764b3", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 27411, "upload_time": "2015-03-23T02:49:26", "upload_time_iso_8601": "2015-03-23T02:49:26.761961Z", "url": "https://files.pythonhosted.org/packages/5c/1c/deccf4b2652e0719b3cd6dafdc524e8df54f862c2d9a3852880f458ce0f9/convertdate-2.0.4-py3-none-any.whl", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "cf3b9aa9d4aa47383a50aa01753bfa9b", "sha256": "21b26669b2ca9acc36d03d8de6846d809d09f5910171d77f23ea4c4af973a6d8"}, "downloads": -1, "filename": "convertdate-2.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cf3b9aa9d4aa47383a50aa01753bfa9b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 27973, "upload_time": "2015-09-14T16:18:17", "upload_time_iso_8601": "2015-09-14T16:18:17.083082Z", "url": "https://files.pythonhosted.org/packages/43/61/b6e25282c8ade368becad2dec3dd0b95678d857c88bbe49432bbc2c73071/convertdate-2.0.5-py2.py3-none-any.whl", "yanked": false}], "2.0.6": [{"comment_text": "", "digests": {"md5": "c839fe33edd89ca3fb78129cea6eea72", "sha256": "af4827fc139f47033db4fc6fd858291fa53ee1a585cf6b798c42a056b2f267a5"}, "downloads": -1, "filename": "convertdate-2.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c839fe33edd89ca3fb78129cea6eea72", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 29732, "upload_time": "2015-09-28T16:37:41", "upload_time_iso_8601": "2015-09-28T16:37:41.929358Z", "url": "https://files.pythonhosted.org/packages/b9/4f/29883157824526d2dcc7fed9545482830a900120f34902e972918ed0a8ba/convertdate-2.0.6-py2.py3-none-any.whl", "yanked": false}], "2.0.7": [{"comment_text": "", "digests": {"md5": "64ba39229ddac0454bfbe0048719fea6", "sha256": "329c9672d6178f799488de9b75d4898d2168043b2e8cb7f1313b7bbc3048d646"}, "downloads": -1, "filename": "convertdate-2.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "64ba39229ddac0454bfbe0048719fea6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32369, "upload_time": "2016-03-28T17:06:32", "upload_time_iso_8601": "2016-03-28T17:06:32.822748Z", "url": "https://files.pythonhosted.org/packages/84/8a/2481d7cdd1c11df456e6140c608612c838bd362b707a94ef0af726539efd/convertdate-2.0.7-py2.py3-none-any.whl", "yanked": false}], "2.0.8": [{"comment_text": "", "digests": {"md5": "bc3a5a51a8fc03ade1c58c7b070f6c5f", "sha256": "f4462985c2847e6896ab0362d84f2cf685bee60c169367f09c264bb9b5d5b3bc"}, "downloads": -1, "filename": "convertdate-2.0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bc3a5a51a8fc03ade1c58c7b070f6c5f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32368, "upload_time": "2016-12-13T13:52:35", "upload_time_iso_8601": "2016-12-13T13:52:35.074993Z", "url": "https://files.pythonhosted.org/packages/48/e0/40f032614e2a4b6dd8879e333b36e993244ac0ab86acaa1f534e896935bb/convertdate-2.0.8-py2.py3-none-any.whl", "yanked": false}], "2.0.9": [{"comment_text": "", "digests": {"md5": "d4331fdcfe5d99b6a4913f8e96d135d4", "sha256": "4263e103450d1e64798eed689b5af2f8059ac5528d7e694d6fd17c0445d19fa8"}, "downloads": -1, "filename": "convertdate-2.0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d4331fdcfe5d99b6a4913f8e96d135d4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32363, "upload_time": "2016-12-26T15:09:53", "upload_time_iso_8601": "2016-12-26T15:09:53.249402Z", "url": "https://files.pythonhosted.org/packages/82/ea/0ad7c5cc3f1c331b9562db4819d3bdc4932e92bd1342b7d9f4c479f9f65e/convertdate-2.0.9-py2.py3-none-any.whl", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "8a6853ddd0818582181e13b127551352", "sha256": "9c5d8dc984e51789ffaa92e988939ba8734c56ed718a3943998e7832fffa66ed"}, "downloads": -1, "filename": "convertdate-2.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8a6853ddd0818582181e13b127551352", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 38820, "upload_time": "2016-12-27T02:39:14", "upload_time_iso_8601": "2016-12-27T02:39:14.592893Z", "url": "https://files.pythonhosted.org/packages/89/b8/573abdf630d9961ac247200ed5dc325bf1dabdf76d6f799dd4966abf1a0f/convertdate-2.1.0-py2.py3-none-any.whl", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "46bd0874e6bc84523d3798a3fc481c9f", "sha256": "cd3a906060760520b999b032cda6c0dd6db9b2011c954c5dbdb1a76bed611d12"}, "downloads": -1, "filename": "convertdate-2.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "46bd0874e6bc84523d3798a3fc481c9f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 39816, "upload_time": "2017-03-23T13:46:17", "upload_time_iso_8601": "2017-03-23T13:46:17.502247Z", "url": "https://files.pythonhosted.org/packages/69/30/fbbc87150519ceeedc13e16c59f484cf93842bb9931335fc88c05b85b197/convertdate-2.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebbb422c7f59b264cd2d3d5f3f5d69ca", "sha256": "b06f09139e1717c7ae67013c93476e48f2909bbf37a7c29ea7b11282276d9d85"}, "downloads": -1, "filename": "convertdate-2.1.1.tar.gz", "has_sig": false, "md5_digest": "ebbb422c7f59b264cd2d3d5f3f5d69ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28844, "upload_time": "2017-10-18T16:11:35", "upload_time_iso_8601": "2017-10-18T16:11:35.647926Z", "url": "https://files.pythonhosted.org/packages/05/e5/46eccb9991e3321c7c5924ffcc60b22315444f4d6ad8863830a3ba6d63aa/convertdate-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "294499f9d33544a904b7f8f00d4c0947", "sha256": "f2f840eb768ff8ba5b29f4b9f6b98bdea113d7fc39c3a984bff845cab1e1738e"}, "downloads": -1, "filename": "convertdate-2.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "294499f9d33544a904b7f8f00d4c0947", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 39876, "upload_time": "2017-10-18T17:09:25", "upload_time_iso_8601": "2017-10-18T17:09:25.882911Z", "url": "https://files.pythonhosted.org/packages/94/6a/d9abf63e6d50f791872b60673bc2909fc3cd8dfdb5cf58702c1bd9fa0740/convertdate-2.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "925b0e3c052ae1bbd18840ac4344abed", "sha256": "5656e58ee697b3ad59b3cc729eb1c823a73095bb0240a37a26c10cfc0500d412"}, "downloads": -1, "filename": "convertdate-2.1.2.tar.gz", "has_sig": false, "md5_digest": "925b0e3c052ae1bbd18840ac4344abed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28884, "upload_time": "2017-10-18T17:09:27", "upload_time_iso_8601": "2017-10-18T17:09:27.674147Z", "url": "https://files.pythonhosted.org/packages/a9/0d/01a23849549245f52e3ac779a2ab2286feb1fc0dd351fce96370bcf7eff2/convertdate-2.1.2.tar.gz", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "28ed1befef2d33f9d5289a9154badd45", "sha256": "b38a62cadcd68677d6a752f35d17d7a84e5e05f056436705ea5484888c113467"}, "downloads": -1, "filename": "convertdate-2.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "28ed1befef2d33f9d5289a9154badd45", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 39879, "upload_time": "2018-08-25T19:42:11", "upload_time_iso_8601": "2018-08-25T19:42:11.767602Z", "url": "https://files.pythonhosted.org/packages/74/83/d0fa07078f4d4ae473a89d7d521aafc66d82641ea0af0ef04a47052e8f17/convertdate-2.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c5437ba86107c839799b5aa95a3084e", "sha256": "c3ca5ba66b31e29d2732bdb361422ed804d3b22c115659d05a43d1fc527b9773"}, "downloads": -1, "filename": "convertdate-2.1.3.tar.gz", "has_sig": false, "md5_digest": "2c5437ba86107c839799b5aa95a3084e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28903, "upload_time": "2018-08-25T19:42:13", "upload_time_iso_8601": "2018-08-25T19:42:13.038669Z", "url": "https://files.pythonhosted.org/packages/81/73/287ef9e7989661ed8218fe074603041d2ea6d76e06afebe1c646a7fd9d65/convertdate-2.1.3.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "dd3921e8973c41ca2f742cf1c59e3acd", "sha256": "fc34133ef6ceb31738cf1169b528ba487d0164d69f4451a7cef206887c45b71d"}, "downloads": -1, "filename": "convertdate-2.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dd3921e8973c41ca2f742cf1c59e3acd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37759, "upload_time": "2019-10-26T17:55:54", "upload_time_iso_8601": "2019-10-26T17:55:54.735700Z", "url": "https://files.pythonhosted.org/packages/c9/f8/02a18000b0fbfd714f78aa16359796727a181e80f679682e3f62771a5c23/convertdate-2.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2411d2fd8f1a7d119311522958aabc9b", "sha256": "9d2b0cd8d5382d2458d4cfa59665abba398a9e9bfd3a01c6f61b7b47768d28bf"}, "downloads": -1, "filename": "convertdate-2.2.0.tar.gz", "has_sig": false, "md5_digest": "2411d2fd8f1a7d119311522958aabc9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29774, "upload_time": "2019-10-26T17:57:18", "upload_time_iso_8601": "2019-10-26T17:57:18.742254Z", "url": "https://files.pythonhosted.org/packages/92/c1/1125eba52ce9bccf783f0640eaad39ffa6e4271dcf37d19438c2ef115233/convertdate-2.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dd3921e8973c41ca2f742cf1c59e3acd", "sha256": "fc34133ef6ceb31738cf1169b528ba487d0164d69f4451a7cef206887c45b71d"}, "downloads": -1, "filename": "convertdate-2.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dd3921e8973c41ca2f742cf1c59e3acd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 37759, "upload_time": "2019-10-26T17:55:54", "upload_time_iso_8601": "2019-10-26T17:55:54.735700Z", "url": "https://files.pythonhosted.org/packages/c9/f8/02a18000b0fbfd714f78aa16359796727a181e80f679682e3f62771a5c23/convertdate-2.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2411d2fd8f1a7d119311522958aabc9b", "sha256": "9d2b0cd8d5382d2458d4cfa59665abba398a9e9bfd3a01c6f61b7b47768d28bf"}, "downloads": -1, "filename": "convertdate-2.2.0.tar.gz", "has_sig": false, "md5_digest": "2411d2fd8f1a7d119311522958aabc9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29774, "upload_time": "2019-10-26T17:57:18", "upload_time_iso_8601": "2019-10-26T17:57:18.742254Z", "url": "https://files.pythonhosted.org/packages/92/c1/1125eba52ce9bccf783f0640eaad39ffa6e4271dcf37d19438c2ef115233/convertdate-2.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:27 2020"}