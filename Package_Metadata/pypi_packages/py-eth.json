{"info": {"author": "Jason Carver", "author_email": "ethcalibur+pip@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: PyPy"], "description": "# py-eth\n\n[![Join the chat at https://gitter.im/ethereum/py-eth](https://badges.gitter.im/ethereum/py-eth.svg)](https://gitter.im/ethereum/py-eth?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Build Status](https://circleci.com/gh/ethereum/py-eth.svg?style=shield)](https://circleci.com/gh/ethereum/py-eth)\n[![PyPI version](https://badge.fury.io/py/py-eth.svg)](https://badge.fury.io/py/py-eth)\n[![Python versions](https://img.shields.io/pypi/pyversions/py-eth.svg)](https://pypi.python.org/pypi/py-eth)\n[![Docs build](https://readthedocs.org/projects/py-eth/badge/?version=latest)](http://py-eth.readthedocs.io/en/latest/?badge=latest)\n\n\n\n\nRead more in the [documentation on ReadTheDocs](https://py-eth.readthedocs.io/). [View the change log](https://py-eth.readthedocs.io/en/latest/releases.html).\n\n## Quickstart\n\n```sh\npip install py-eth\n```\n\n## Developer Setup\n\nIf you would like to hack on py-eth, please check out the\n[Ethereum Development Tactical Manual](https://github.com/pipermerriam/ethereum-dev-tactical-manual)\nfor information on how we do:\n\n- Testing\n- Pull Requests\n- Code Style\n- Documentation\n\n### Development Environment Setup\n\nYou can set up your dev environment with:\n\n```sh\ngit clone git@github.com:ethereum/py-eth.git\ncd py-eth\nvirtualenv -p python3 venv\n. venv/bin/activate\npip install -e .[dev]\n```\n\n### Testing Setup\n\nDuring development, you might like to have tests run on every file save.\n\nShow flake8 errors on file change:\n\n```sh\n# Test flake8\nwhen-changed -v -s -r -1 eth/ tests/ -c \"clear; flake8 eth tests && echo 'flake8 success' || echo 'error'\"\n```\n\nRun multi-process tests in one command, but without color:\n\n```sh\n# in the project root:\npytest --numprocesses=4 --looponfail --maxfail=1\n# the same thing, succinctly:\npytest -n 4 -f --maxfail=1\n```\n\nRun in one thread, with color and desktop notifications:\n\n```sh\ncd venv\nptw --onfail \"notify-send -t 5000 'Test failure \u26a0\u26a0\u26a0\u26a0\u26a0' 'python 3 test on py-eth failed'\" ../tests ../eth\n```\n\n### Release setup\n\nFor Debian-like systems:\n```\napt install pandoc\n```\n\nTo release a new version:\n\n```sh\nmake release bump=$$VERSION_PART_TO_BUMP$$\n```\n\n#### How to bumpversion\n\nThe version format for this repo is `{major}.{minor}.{patch}` for stable, and\n`{major}.{minor}.{patch}-{stage}.{devnum}` for unstable (`stage` can be alpha or beta).\n\nTo issue the next version in line, specify which part to bump,\nlike `make release bump=minor` or `make release bump=devnum`. This is typically done from the\nmaster branch, except when releasing a beta (in which case the beta is released from master,\nand the previous stable branch is released from said branch). To include changes made with each\nrelease, update \"docs/releases.rst\" with the changes, and apply commit directly to master \nbefore release.\n\nIf you are in a beta version, `make release bump=stage` will switch to a stable.\n\nTo issue an unstable version when the current version is stable, specify the\nnew version explicitly, like `make release bump=\"--new-version 4.0.0-alpha.1 devnum\"`\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ethereum/py-eth", "keywords": "ethereum", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "py-eth", "package_url": "https://pypi.org/project/py-eth/", "platform": "", "project_url": "https://pypi.org/project/py-eth/", "project_urls": {"Homepage": "https://github.com/ethereum/py-eth"}, "release_url": "https://pypi.org/project/py-eth/0.1.1/", "requires_dist": ["eth-utils (<2,>=1)", "Sphinx (<2,>=1.6.5); extra == 'dev'", "bumpversion (<1,>=0.5.3); extra == 'dev'", "flake8 (==3.4.1); extra == 'dev'", "ipython; extra == 'dev'", "isort (<5,>=4.2.15); extra == 'dev'", "pytest-watch (<5,>=4.1.0); extra == 'dev'", "pytest-xdist; extra == 'dev'", "pytest (==3.3.2); extra == 'dev'", "sphinx-rtd-theme (>=0.1.9); extra == 'dev'", "tox (<3,>=2.9.1); extra == 'dev'", "twine; extra == 'dev'", "wheel; extra == 'dev'", "Sphinx (<2,>=1.6.5); extra == 'doc'", "sphinx-rtd-theme (>=0.1.9); extra == 'doc'", "flake8 (==3.4.1); extra == 'lint'", "isort (<5,>=4.2.15); extra == 'lint'", "pytest-xdist; extra == 'test'", "pytest (==3.3.2); extra == 'test'", "tox (<3,>=2.9.1); extra == 'test'"], "requires_python": ">=3.5, <4", "summary": "py-eth:", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># py-eth</p>\n<p>[![Join the chat at <a href=\"https://gitter.im/ethereum/py-eth%5D(https://badges.gitter.im/ethereum/py-eth.svg)%5D(https://gitter.im/ethereum/py-eth?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\">https://gitter.im/ethereum/py-eth](https://badges.gitter.im/ethereum/py-eth.svg)](https://gitter.im/ethereum/py-eth?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge</a>)\n[![Build Status](<a href=\"https://circleci.com/gh/ethereum/py-eth.svg?style=shield)%5D(https://circleci.com/gh/ethereum/py-eth\" rel=\"nofollow\">https://circleci.com/gh/ethereum/py-eth.svg?style=shield)](https://circleci.com/gh/ethereum/py-eth</a>)\n[![PyPI version](<a href=\"https://badge.fury.io/py/py-eth.svg)%5D(https://badge.fury.io/py/py-eth\" rel=\"nofollow\">https://badge.fury.io/py/py-eth.svg)](https://badge.fury.io/py/py-eth</a>)\n[![Python versions](<a href=\"https://img.shields.io/pypi/pyversions/py-eth.svg)%5D(https://pypi.python.org/pypi/py-eth\" rel=\"nofollow\">https://img.shields.io/pypi/pyversions/py-eth.svg)](https://pypi.python.org/pypi/py-eth</a>)\n[![Docs build](<a href=\"https://readthedocs.org/projects/py-eth/badge/?version=latest)%5D(http://py-eth.readthedocs.io/en/latest/\" rel=\"nofollow\">https://readthedocs.org/projects/py-eth/badge/?version=latest)](http://py-eth.readthedocs.io/en/latest/</a>?badge=latest)</p>\n<p>Read more in the [documentation on ReadTheDocs](<a href=\"https://py-eth.readthedocs.io/\" rel=\"nofollow\">https://py-eth.readthedocs.io/</a>). [View the change log](<a href=\"https://py-eth.readthedocs.io/en/latest/releases.html\" rel=\"nofollow\">https://py-eth.readthedocs.io/en/latest/releases.html</a>).</p>\n<p>## Quickstart</p>\n<p><tt>`sh\npip install <span class=\"pre\">py-eth</span>\n`</tt></p>\n<p>## Developer Setup</p>\n<p>If you would like to hack on py-eth, please check out the\n[Ethereum Development Tactical Manual](<a href=\"https://github.com/pipermerriam/ethereum-dev-tactical-manual\" rel=\"nofollow\">https://github.com/pipermerriam/ethereum-dev-tactical-manual</a>)\nfor information on how we do:</p>\n<ul>\n<li>Testing</li>\n<li>Pull Requests</li>\n<li>Code Style</li>\n<li>Documentation</li>\n</ul>\n<p>### Development Environment Setup</p>\n<p>You can set up your dev environment with:</p>\n<p><tt>`sh\ngit clone <span class=\"pre\">git@github.com:ethereum/py-eth.git</span>\ncd <span class=\"pre\">py-eth</span>\nvirtualenv <span class=\"pre\">-p</span> python3 venv\n. venv/bin/activate\npip install <span class=\"pre\">-e</span> .[dev]\n`</tt></p>\n<p>### Testing Setup</p>\n<p>During development, you might like to have tests run on every file save.</p>\n<p>Show flake8 errors on file change:</p>\n<p><tt>`sh\n# Test flake8\n<span class=\"pre\">when-changed</span> <span class=\"pre\">-v</span> <span class=\"pre\">-s</span> <span class=\"pre\">-r</span> <span class=\"pre\">-1</span> eth/ tests/ <span class=\"pre\">-c</span> \"clear; flake8 eth tests &amp;&amp; echo 'flake8 success' || echo 'error'\"\n`</tt></p>\n<p>Run multi-process tests in one command, but without color:</p>\n<p><tt>`sh\n# in the project root:\npytest <span class=\"pre\">--numprocesses=4</span> <span class=\"pre\">--looponfail</span> <span class=\"pre\">--maxfail=1</span>\n# the same thing, succinctly:\npytest <span class=\"pre\">-n</span> 4 <span class=\"pre\">-f</span> <span class=\"pre\">--maxfail=1</span>\n`</tt></p>\n<p>Run in one thread, with color and desktop notifications:</p>\n<p><tt>`sh\ncd venv\nptw <span class=\"pre\">--onfail</span> <span class=\"pre\">\"notify-send</span> <span class=\"pre\">-t</span> 5000 'Test failure <span class=\"pre\">\u26a0\u26a0\u26a0\u26a0\u26a0'</span> 'python 3 test on <span class=\"pre\">py-eth</span> failed'\" <span class=\"pre\">../tests</span> <span class=\"pre\">../eth</span>\n`</tt></p>\n<p>### Release setup</p>\n<p>For Debian-like systems:\n<tt>`\napt install pandoc\n`</tt></p>\n<p>To release a new version:</p>\n<p><tt>`sh\nmake release <span class=\"pre\">bump=$$VERSION_PART_TO_BUMP$$</span>\n`</tt></p>\n<p>#### How to bumpversion</p>\n<p>The version format for this repo is <cite>{major}.{minor}.{patch}</cite> for stable, and\n<cite>{major}.{minor}.{patch}-{stage}.{devnum}</cite> for unstable (<cite>stage</cite> can be alpha or beta).</p>\n<p>To issue the next version in line, specify which part to bump,\nlike <cite>make release bump=minor</cite> or <cite>make release bump=devnum</cite>. This is typically done from the\nmaster branch, except when releasing a beta (in which case the beta is released from master,\nand the previous stable branch is released from said branch). To include changes made with each\nrelease, update \u201cdocs/releases.rst\u201d with the changes, and apply commit directly to master\nbefore release.</p>\n<p>If you are in a beta version, <cite>make release bump=stage</cite> will switch to a stable.</p>\n<p>To issue an unstable version when the current version is stable, specify the\nnew version explicitly, like <cite>make release bump=\u201d\u2013new-version 4.0.0-alpha.1 devnum\u201d</cite></p>\n\n          </div>"}, "last_serial": 4482666, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "ef5c46e05960527af3676a4107f01119", "sha256": "e61610eccdd98a4c9372694923d2c9e8a7832990700ac71fb7da2d823b66da25"}, "downloads": -1, "filename": "py_eth-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "ef5c46e05960527af3676a4107f01119", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.5, <4", "size": 5367, "upload_time": "2018-11-13T18:07:43", "upload_time_iso_8601": "2018-11-13T18:07:43.514921Z", "url": "https://files.pythonhosted.org/packages/41/0a/d2fa9f38777a7adf0d0c0c182110eabfb10a76fc9096fb8a67a7686350a2/py_eth-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9444a25a3ae79858cc4a10658f3bb98e", "sha256": "78b4a52976add7364f56cc3e7f8933ec0fe96552fbe83ad09ff6b9216846e1ec"}, "downloads": -1, "filename": "py-eth-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9444a25a3ae79858cc4a10658f3bb98e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <4", "size": 3372, "upload_time": "2018-11-13T18:07:45", "upload_time_iso_8601": "2018-11-13T18:07:45.812520Z", "url": "https://files.pythonhosted.org/packages/4f/a0/486157d604959799df1ea092441d3b52b6bf156cb1d4c0cec7cda95d4132/py-eth-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ef5c46e05960527af3676a4107f01119", "sha256": "e61610eccdd98a4c9372694923d2c9e8a7832990700ac71fb7da2d823b66da25"}, "downloads": -1, "filename": "py_eth-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "ef5c46e05960527af3676a4107f01119", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.5, <4", "size": 5367, "upload_time": "2018-11-13T18:07:43", "upload_time_iso_8601": "2018-11-13T18:07:43.514921Z", "url": "https://files.pythonhosted.org/packages/41/0a/d2fa9f38777a7adf0d0c0c182110eabfb10a76fc9096fb8a67a7686350a2/py_eth-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9444a25a3ae79858cc4a10658f3bb98e", "sha256": "78b4a52976add7364f56cc3e7f8933ec0fe96552fbe83ad09ff6b9216846e1ec"}, "downloads": -1, "filename": "py-eth-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9444a25a3ae79858cc4a10658f3bb98e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <4", "size": 3372, "upload_time": "2018-11-13T18:07:45", "upload_time_iso_8601": "2018-11-13T18:07:45.812520Z", "url": "https://files.pythonhosted.org/packages/4f/a0/486157d604959799df1ea092441d3b52b6bf156cb1d4c0cec7cda95d4132/py-eth-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:16 2020"}