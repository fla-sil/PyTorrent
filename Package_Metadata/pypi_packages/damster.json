{"info": {"author": "Xabier Davila", "author_email": "davila.xabier@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: OS Independent", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "\n# Damster\n\n> _Damster_\tBuilder of dams for logging purposes\n\nDamster is a collection of scripts to collect metrics and reports from Atlassian tools.\n\nThis is a WIP, starting with some reports from Bamboo and Confluence:\n\n* Bamboo\n  * **builds:** All builds for a specific time period\n  * **deployments:** All deployments for a specific time period\n  * **deployment-permissions:** Permissions per deployment project and environment\n* Confluence\n  * **changes**: changes in Confluence content in the specific period\n\nMost fo this reports will produce 3 files:\n* `.json` contains the raw data used for the report.\n* `.csv` contains the above data 'flattened' as csv\n* `.html` is a more visual representation of the report\n\nThe output location for this files can be defined in the configuration:\n\n```ini\n[Reports]\ndestination_folder=C:\\work\\damster\\globalitconfluence\n```\n\n# Usage\n\nCreate a virtualenv and install `damster`, either from source or from PyPi:\n\n```bash\n$ virtualenv .env\n$ source .env/bin/activate\n(.env) $ pip install damster                # Install from PyPi\n(.env) $ pip install -e ./path/to/damster   # Install from source\n```\n\nFor specific instructions on how to use a report, you can request help form the cli:\n\n```bash\n(.env) $ damster bamboo builds --help\nUsage: damster bamboo builds [OPTIONS] FROM_DATE [TO_DATE]\n\n  Generate a builds report\n\nOptions:\n  --use-cache / --no-use-cache\n  --help                        Show this message and exit.\n\n```\n\n# Configuration\n\nThere are 3 levels of configuration files that can override settings from the previous level:\n\n1. Package defaults, stored in `damster/deaults.cfg`. This file contains the whole set of available\nsettings and is a good default for your development install.\n2. User settings, from `~/.config/damster.cfg` can be used to store user specific settings, like secrets, etc\n3. Per-use settings, passes as an argument to damster in each call to the command line:\n\n```bash\n(.env) $ damster -c path/to/bamboo-prod.cfg bamboo builds\n```\n\nSome of the reports use the REST API for retrieving dat, while others will try to connect directly to the\ndatabase. For the REST API reports you will need to provide a user credentials with sufficient permissions,\nwhile for the database reports you will need the credentials of a user with, at least, `SELECT` privileges\non the corresponding database.\n\n## Database configuration\n\nIn order to use any of the queries that access directly to the database, you will need to provide a database\nconfiguration section.\n\n### Direct connection\n\nUse this settings if you can connect directly to the DB port\n\n```ini\n[Confluence DB]\ndbname=confluence\ndbuser=confluence\npassword=password1\nhost=dbhost.example.com\nport=5432\n```\n\n### Use SSH tunnel\n\nUse this configuration when you can not access the DB directly, for example, if your DB is an\nRDS instance in AWS:\n\n```\n\n----------------------------------------------------------------------\n\n                          |\n-------------+            |    +---------+              +--------+\n    LOCAL    |            |    |  APP    |              |  RDS   |\n    CLIENT   | <== SSH ======> | SERVER  | <== Sec  ==> | SERVER |\n-------------+            |    +---------+    Group     +--------+\n                          |\n                      AWS (only access to port 22 on app.server)\n\n----------------------------------------------------------------------\n```\n\nExample configuration for the above case:\n\n```ini\n[Confluence DB]\ndbname=confluence\ndbuser=confluence\npassword=password1\nssh_gateway=app.server\nhost=rds.server\nport=5432\n```\n\nAdditionally, you may also need an SSH section, if the defaults (below) do not work for your case:\n\n```ini\n[SSH]\n; All below values are optional. Examples are the default values\n;ssh_username: current_user\n;ssh_private_key: id_rsa\n;port: 22\n;local_bind_port: 6543\n```\n\nDon't forget to instruct `damster` to use the ssh gateway by adding the `-S` flag:\n\n```bash\n(.env) $ damster -c myconfig.cfg confluence changes -S\n```\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/cattz/damster", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "damster", "package_url": "https://pypi.org/project/damster/", "platform": "Platform Independent", "project_url": "https://pypi.org/project/damster/", "project_urls": {"Download": "https://github.com/cattz/damster"}, "release_url": "https://pypi.org/project/damster/0.2.1/", "requires_dist": ["configparser", "arrow", "click", "atlassian-python-api", "arrow", "influxdb", "schedule", "jinja2", "psycopg2", "sshtunnel", "six", "pytest; extra == 'dev'", "pytest-pep8; extra == 'dev'", "coverage; extra == 'dev'", "tox; extra == 'dev'"], "requires_python": "", "summary": "Reports and metrics for Atlassian Tools", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <br># Damster<br><br>&gt; _Damster_\tBuilder of dams for logging purposes<br><br>Damster is a collection of scripts to collect metrics and reports from Atlassian tools.<br><br>This is a WIP, starting with some reports from Bamboo and Confluence:<br><br>* Bamboo<br>  * **builds:** All builds for a specific time period<br>  * **deployments:** All deployments for a specific time period<br>  * **deployment-permissions:** Permissions per deployment project and environment<br>* Confluence<br>  * **changes**: changes in Confluence content in the specific period<br><br>Most fo this reports will produce 3 files:<br>* `.json` contains the raw data used for the report.<br>* `.csv` contains the above data 'flattened' as csv<br>* `.html` is a more visual representation of the report<br><br>The output location for this files can be defined in the configuration:<br><br>```ini<br>[Reports]<br>destination_folder=C:\\work\\damster\\globalitconfluence<br>```<br><br># Usage<br><br>Create a virtualenv and install `damster`, either from source or from PyPi:<br><br>```bash<br>$ virtualenv .env<br>$ source .env/bin/activate<br>(.env) $ pip install damster                # Install from PyPi<br>(.env) $ pip install -e ./path/to/damster   # Install from source<br>```<br><br>For specific instructions on how to use a report, you can request help form the cli:<br><br>```bash<br>(.env) $ damster bamboo builds --help<br>Usage: damster bamboo builds [OPTIONS] FROM_DATE [TO_DATE]<br><br>  Generate a builds report<br><br>Options:<br>  --use-cache / --no-use-cache<br>  --help                        Show this message and exit.<br><br>```<br><br># Configuration<br><br>There are 3 levels of configuration files that can override settings from the previous level:<br><br>1. Package defaults, stored in `damster/deaults.cfg`. This file contains the whole set of available<br>settings and is a good default for your development install.<br>2. User settings, from `~/.config/damster.cfg` can be used to store user specific settings, like secrets, etc<br>3. Per-use settings, passes as an argument to damster in each call to the command line:<br><br>```bash<br>(.env) $ damster -c path/to/bamboo-prod.cfg bamboo builds<br>```<br><br>Some of the reports use the REST API for retrieving dat, while others will try to connect directly to the<br>database. For the REST API reports you will need to provide a user credentials with sufficient permissions,<br>while for the database reports you will need the credentials of a user with, at least, `SELECT` privileges<br>on the corresponding database.<br><br>## Database configuration<br><br>In order to use any of the queries that access directly to the database, you will need to provide a database<br>configuration section.<br><br>### Direct connection<br><br>Use this settings if you can connect directly to the DB port<br><br>```ini<br>[Confluence DB]<br>dbname=confluence<br>dbuser=confluence<br>password=password1<br>host=dbhost.example.com<br>port=5432<br>```<br><br>### Use SSH tunnel<br><br>Use this configuration when you can not access the DB directly, for example, if your DB is an<br>RDS instance in AWS:<br><br>```<br><br>----------------------------------------------------------------------<br><br>                          |<br>-------------+            |    +---------+              +--------+<br>    LOCAL    |            |    |  APP    |              |  RDS   |<br>    CLIENT   | &lt;== SSH ======&gt; | SERVER  | &lt;== Sec  ==&gt; | SERVER |<br>-------------+            |    +---------+    Group     +--------+<br>                          |<br>                      AWS (only access to port 22 on app.server)<br><br>----------------------------------------------------------------------<br>```<br><br>Example configuration for the above case:<br><br>```ini<br>[Confluence DB]<br>dbname=confluence<br>dbuser=confluence<br>password=password1<br>ssh_gateway=app.server<br>host=rds.server<br>port=5432<br>```<br><br>Additionally, you may also need an SSH section, if the defaults (below) do not work for your case:<br><br>```ini<br>[SSH]<br>; All below values are optional. Examples are the default values<br>;ssh_username: current_user<br>;ssh_private_key: id_rsa<br>;port: 22<br>;local_bind_port: 6543<br>```<br><br>Don't forget to instruct `damster` to use the ssh gateway by adding the `-S` flag:<br><br>```bash<br>(.env) $ damster -c myconfig.cfg confluence changes -S<br>```<br><br><br>\n          </div>"}, "last_serial": 3834269, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "119868ce23b8ca3aa5ffbdd98fa1c05b", "sha256": "97bf4ee9368efeb3f1e33d81b8b2ac21e434d112d1596948d88f18e5bcc50f7f"}, "downloads": -1, "filename": "damster-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "119868ce23b8ca3aa5ffbdd98fa1c05b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22940, "upload_time": "2018-05-03T17:16:33", "upload_time_iso_8601": "2018-05-03T17:16:33.530547Z", "url": "https://files.pythonhosted.org/packages/14/6f/d0e2f3a4a075b80a45c53c9982c4e870601b184f6ac434fdb259e1f3261f/damster-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40d48be0f90962a7f05e7cd27cb56749", "sha256": "e89f1bb4e050acba8d76d76b1e9505a598d57860819fcd95c1b78d86d33a8e97"}, "downloads": -1, "filename": "damster-0.0.0.tar.gz", "has_sig": false, "md5_digest": "40d48be0f90962a7f05e7cd27cb56749", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19281, "upload_time": "2018-05-03T17:16:34", "upload_time_iso_8601": "2018-05-03T17:16:34.787973Z", "url": "https://files.pythonhosted.org/packages/6b/30/449c45a73441a7a1eec0aba7105aa936f34a2c23ca47ec3b0070dc971f7a/damster-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "3c386152cbcb874b0e1d0454890ea709", "sha256": "e1d4e90562fe75b46720225d86f572467b509e243ac9b268d8b5f89b944c0cc3"}, "downloads": -1, "filename": "damster-0.0.1.zip", "has_sig": false, "md5_digest": "3c386152cbcb874b0e1d0454890ea709", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18443, "upload_time": "2018-02-02T16:32:01", "upload_time_iso_8601": "2018-02-02T16:32:01.147450Z", "url": "https://files.pythonhosted.org/packages/6d/6b/f71936393468c7b973017406ae4cf3893c6d0fedd0b1b8d63ee168f6a406/damster-0.0.1.zip", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f504326413448090d6d35a07cd95e17e", "sha256": "77b6532231d2afd1d70bcc25017404a125f595b9953de58cbbe6417eefd96d8e"}, "downloads": -1, "filename": "damster-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f504326413448090d6d35a07cd95e17e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22941, "upload_time": "2018-05-04T05:47:03", "upload_time_iso_8601": "2018-05-04T05:47:03.748914Z", "url": "https://files.pythonhosted.org/packages/5b/85/a8765a41c1666af30d1aa45ebf5084d0fb98908614bc225a2b41285f6be9/damster-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e583960e2c596fecffbe6016dd99639", "sha256": "554e9b091f903e0fc34d205531f1211ea7f1b364fd8913389784548c94920db4"}, "downloads": -1, "filename": "damster-0.2.0.tar.gz", "has_sig": false, "md5_digest": "3e583960e2c596fecffbe6016dd99639", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19286, "upload_time": "2018-05-04T05:47:04", "upload_time_iso_8601": "2018-05-04T05:47:04.905386Z", "url": "https://files.pythonhosted.org/packages/9d/ae/23f09dcd1d1428dcc28b094521642e7eb34f5ee4f1e5ec8aea4c0becc593/damster-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "65f5b201620b1a751e4d852b85ab8282", "sha256": "af6d529600047ec0cf854564649b3ba108a4dec6a20a8169348d40ccf437518a"}, "downloads": -1, "filename": "damster-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "65f5b201620b1a751e4d852b85ab8282", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23885, "upload_time": "2018-05-04T12:55:36", "upload_time_iso_8601": "2018-05-04T12:55:36.859167Z", "url": "https://files.pythonhosted.org/packages/ff/8b/5f0d28b064442825041e5fbb2c9fa6191ce2cc8487bee3cbcedf34de44c2/damster-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "188921788338db850f2ef2aee43a63d2", "sha256": "27d18fa2f9d9db6fedce5173112722dd0f2e9712cb660f06ac9f9b3ef0e97704"}, "downloads": -1, "filename": "damster-0.2.1.tar.gz", "has_sig": false, "md5_digest": "188921788338db850f2ef2aee43a63d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20817, "upload_time": "2018-05-04T12:55:38", "upload_time_iso_8601": "2018-05-04T12:55:38.027408Z", "url": "https://files.pythonhosted.org/packages/3e/31/55b90b8162aef263bc5ec5f8efbd116179b5ee3495c94e984ecfc24e7855/damster-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "65f5b201620b1a751e4d852b85ab8282", "sha256": "af6d529600047ec0cf854564649b3ba108a4dec6a20a8169348d40ccf437518a"}, "downloads": -1, "filename": "damster-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "65f5b201620b1a751e4d852b85ab8282", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23885, "upload_time": "2018-05-04T12:55:36", "upload_time_iso_8601": "2018-05-04T12:55:36.859167Z", "url": "https://files.pythonhosted.org/packages/ff/8b/5f0d28b064442825041e5fbb2c9fa6191ce2cc8487bee3cbcedf34de44c2/damster-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "188921788338db850f2ef2aee43a63d2", "sha256": "27d18fa2f9d9db6fedce5173112722dd0f2e9712cb660f06ac9f9b3ef0e97704"}, "downloads": -1, "filename": "damster-0.2.1.tar.gz", "has_sig": false, "md5_digest": "188921788338db850f2ef2aee43a63d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20817, "upload_time": "2018-05-04T12:55:38", "upload_time_iso_8601": "2018-05-04T12:55:38.027408Z", "url": "https://files.pythonhosted.org/packages/3e/31/55b90b8162aef263bc5ec5f8efbd116179b5ee3495c94e984ecfc24e7855/damster-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:44 2020"}