{"info": {"author": "David Smith", "author_email": "dasmith2@example.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Introduction\n\nThese utility functions are helpful in handling dates, datetimes, and timezones\nin Django.\n\n# Examples\n\nLet's say you have the following in your Django settings.py\n\n    TIME_ZONE = 'EST'\n    USE_TZ = True\n\nNow let's attempt to write our own tomorrow() function.\n\n    from datetime import timedelta\n    from django.utils.timezone import now\n\n    def tomorrow():\n      # Subtle bug! Django's now() function returns a timezone enabled datetime\n      # in UTC, regardless of the TIME_ZONE setting. If it's 11 Wednesday\n      # MORNING in New York, this function will work. But if it's 11 Wednesday\n      # NIGHT in New York, the UTC timezone is already in Thursday, so in that\n      # case this code will return Friday.\n      return now().date() + timedelta(days=1)\n\nHere's one way to fix the problem.\n\n    from datetime import timedelta\n    from djavedt import now\n\n    def tomorrow():\n      # djavedt's now() function returns a timezone enabled datetime in the\n      # timezone of the TIME_ZONE setting, which is EST in our example. So this\n      # function will work as expected at 11PM in New York.\n      return now().date() + timedelta(days=1)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dasmith2/djavedt", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "djavedt", "package_url": "https://pypi.org/project/djavedt/", "platform": "", "project_url": "https://pypi.org/project/djavedt/", "project_urls": {"Homepage": "https://github.com/dasmith2/djavedt"}, "release_url": "https://pypi.org/project/djavedt/1.0.0/", "requires_dist": ["django"], "requires_python": ">=3.6", "summary": "Some useful datetime functions for Django", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Introduction</h1>\n<p>These utility functions are helpful in handling dates, datetimes, and timezones\nin Django.</p>\n<h1>Examples</h1>\n<p>Let's say you have the following in your Django settings.py</p>\n<pre><code>TIME_ZONE = 'EST'\nUSE_TZ = True\n</code></pre>\n<p>Now let's attempt to write our own tomorrow() function.</p>\n<pre><code>from datetime import timedelta\nfrom django.utils.timezone import now\n\ndef tomorrow():\n  # Subtle bug! Django's now() function returns a timezone enabled datetime\n  # in UTC, regardless of the TIME_ZONE setting. If it's 11 Wednesday\n  # MORNING in New York, this function will work. But if it's 11 Wednesday\n  # NIGHT in New York, the UTC timezone is already in Thursday, so in that\n  # case this code will return Friday.\n  return now().date() + timedelta(days=1)\n</code></pre>\n<p>Here's one way to fix the problem.</p>\n<pre><code>from datetime import timedelta\nfrom djavedt import now\n\ndef tomorrow():\n  # djavedt's now() function returns a timezone enabled datetime in the\n  # timezone of the TIME_ZONE setting, which is EST in our example. So this\n  # function will work as expected at 11PM in New York.\n  return now().date() + timedelta(days=1)\n</code></pre>\n\n          </div>"}, "last_serial": 6988929, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "664cfedbcd5e9921786b577040d545ea", "sha256": "09d5e14ffae28112b98f6721ac5c5e77c5e5bb9d9ef74f952711b0f1434958a0"}, "downloads": -1, "filename": "djavedt-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "664cfedbcd5e9921786b577040d545ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5549, "upload_time": "2020-04-09T20:12:49", "upload_time_iso_8601": "2020-04-09T20:12:49.466132Z", "url": "https://files.pythonhosted.org/packages/a8/3d/2e21a44d57087daf7418b99b1c5402dc0053ee43f2c3def5bc76942784ca/djavedt-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bc5d81750f6e49b7901c8045868dc10", "sha256": "18b49e43a9fa8e5af2a40620b51e8748ac6032860b43253a3d4601cbdf56957c"}, "downloads": -1, "filename": "djavedt-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9bc5d81750f6e49b7901c8045868dc10", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4493, "upload_time": "2020-04-09T20:12:51", "upload_time_iso_8601": "2020-04-09T20:12:51.614578Z", "url": "https://files.pythonhosted.org/packages/e8/07/8d03eba62db1f14c70945948d19b17ade8d9c623862070c3731d8b6ad50d/djavedt-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "664cfedbcd5e9921786b577040d545ea", "sha256": "09d5e14ffae28112b98f6721ac5c5e77c5e5bb9d9ef74f952711b0f1434958a0"}, "downloads": -1, "filename": "djavedt-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "664cfedbcd5e9921786b577040d545ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5549, "upload_time": "2020-04-09T20:12:49", "upload_time_iso_8601": "2020-04-09T20:12:49.466132Z", "url": "https://files.pythonhosted.org/packages/a8/3d/2e21a44d57087daf7418b99b1c5402dc0053ee43f2c3def5bc76942784ca/djavedt-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bc5d81750f6e49b7901c8045868dc10", "sha256": "18b49e43a9fa8e5af2a40620b51e8748ac6032860b43253a3d4601cbdf56957c"}, "downloads": -1, "filename": "djavedt-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9bc5d81750f6e49b7901c8045868dc10", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4493, "upload_time": "2020-04-09T20:12:51", "upload_time_iso_8601": "2020-04-09T20:12:51.614578Z", "url": "https://files.pythonhosted.org/packages/e8/07/8d03eba62db1f14c70945948d19b17ade8d9c623862070c3731d8b6ad50d/djavedt-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:41 2020"}