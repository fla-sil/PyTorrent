{"info": {"author": "Jeremy McRae", "author_email": "jmcrae@illumina.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "### Another bgen reader\n![travis](https://travis-ci.org/jeremymcrae/bgen.svg?branch=master)\n\nThis is a package for reading [bgen files](https://www.well.ox.ac.uk/~gav/).\n\nThis package uses cython to wrap c++ code for parsing bgen files. It's not too\nslow, it can parse genotypes from 500,000 individuals at >100 variants per\nsecond within python.\n\nThis has been primarily been designed around UKBiobank bgen files (i.e. bgen\nversion 1.2 with zlib compressed genotype probabilities, but the other versions\nand compression schemes have also been tested using example bgen files).\n\n#### Install\n`pip install bgen`\n\n#### Usage\n```python\nfrom bgen import BgenFile\nbfile = BgenFile(BGEN_PATH, SAMPLE_PATH=None)\nrsids = bfile.rsids()\n\n# select a variant by indexing\nvar = bfile[1000]\n\n# pull out genotype probabilities\nprobs = var.probabilities()  # returns 2D numpy array\ndosage = var.alt_dosage()  # requires biallelic variant, returns numpy array\n\n# exclude variants from analyses by passing in indices\nto_drop = [1, 3, 500]\nbfile.drop_variants(to_drop)\n\n# pickle variants for easy message passing\nimport pickle\ndumped = pickle.dumps(var)\nvar = pickle.loads(dumped)\n\n# iterate through every variant in the file, without preloading every variant\nwith BgenFile(BGEN_PATH, SAMPLE_PATH=None, delay_parsing=True) as bfile:\n  for var in bfile:\n      probs = var.probabilities()\n      dosage = var.alt_dosage()\n      ploidy = var.ploidy\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jeremymcrae/bgen", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "bgen", "package_url": "https://pypi.org/project/bgen/", "platform": "", "project_url": "https://pypi.org/project/bgen/", "project_urls": {"Homepage": "https://github.com/jeremymcrae/bgen"}, "release_url": "https://pypi.org/project/bgen/1.1.2/", "requires_dist": null, "requires_python": "", "summary": "Package for loading data from bgen files", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h3>Another bgen reader</h3>\n<p><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7fe93eb2ff545345e1554ac83412472eaa1cd8d8/68747470733a2f2f7472617669732d63692e6f72672f6a6572656d796d637261652f6267656e2e7376673f6272616e63683d6d6173746572\"></p>\n<p>This is a package for reading <a href=\"https://www.well.ox.ac.uk/%7Egav/\" rel=\"nofollow\">bgen files</a>.</p>\n<p>This package uses cython to wrap c++ code for parsing bgen files. It's not too\nslow, it can parse genotypes from 500,000 individuals at &gt;100 variants per\nsecond within python.</p>\n<p>This has been primarily been designed around UKBiobank bgen files (i.e. bgen\nversion 1.2 with zlib compressed genotype probabilities, but the other versions\nand compression schemes have also been tested using example bgen files).</p>\n<h4>Install</h4>\n<p><code>pip install bgen</code></p>\n<h4>Usage</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bgen</span> <span class=\"kn\">import</span> <span class=\"n\">BgenFile</span>\n<span class=\"n\">bfile</span> <span class=\"o\">=</span> <span class=\"n\">BgenFile</span><span class=\"p\">(</span><span class=\"n\">BGEN_PATH</span><span class=\"p\">,</span> <span class=\"n\">SAMPLE_PATH</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"n\">rsids</span> <span class=\"o\">=</span> <span class=\"n\">bfile</span><span class=\"o\">.</span><span class=\"n\">rsids</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># select a variant by indexing</span>\n<span class=\"n\">var</span> <span class=\"o\">=</span> <span class=\"n\">bfile</span><span class=\"p\">[</span><span class=\"mi\">1000</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># pull out genotype probabilities</span>\n<span class=\"n\">probs</span> <span class=\"o\">=</span> <span class=\"n\">var</span><span class=\"o\">.</span><span class=\"n\">probabilities</span><span class=\"p\">()</span>  <span class=\"c1\"># returns 2D numpy array</span>\n<span class=\"n\">dosage</span> <span class=\"o\">=</span> <span class=\"n\">var</span><span class=\"o\">.</span><span class=\"n\">alt_dosage</span><span class=\"p\">()</span>  <span class=\"c1\"># requires biallelic variant, returns numpy array</span>\n\n<span class=\"c1\"># exclude variants from analyses by passing in indices</span>\n<span class=\"n\">to_drop</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">]</span>\n<span class=\"n\">bfile</span><span class=\"o\">.</span><span class=\"n\">drop_variants</span><span class=\"p\">(</span><span class=\"n\">to_drop</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># pickle variants for easy message passing</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pickle</span>\n<span class=\"n\">dumped</span> <span class=\"o\">=</span> <span class=\"n\">pickle</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">var</span><span class=\"p\">)</span>\n<span class=\"n\">var</span> <span class=\"o\">=</span> <span class=\"n\">pickle</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">dumped</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># iterate through every variant in the file, without preloading every variant</span>\n<span class=\"k\">with</span> <span class=\"n\">BgenFile</span><span class=\"p\">(</span><span class=\"n\">BGEN_PATH</span><span class=\"p\">,</span> <span class=\"n\">SAMPLE_PATH</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">delay_parsing</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">bfile</span><span class=\"p\">:</span>\n  <span class=\"k\">for</span> <span class=\"n\">var</span> <span class=\"ow\">in</span> <span class=\"n\">bfile</span><span class=\"p\">:</span>\n      <span class=\"n\">probs</span> <span class=\"o\">=</span> <span class=\"n\">var</span><span class=\"o\">.</span><span class=\"n\">probabilities</span><span class=\"p\">()</span>\n      <span class=\"n\">dosage</span> <span class=\"o\">=</span> <span class=\"n\">var</span><span class=\"o\">.</span><span class=\"n\">alt_dosage</span><span class=\"p\">()</span>\n      <span class=\"n\">ploidy</span> <span class=\"o\">=</span> <span class=\"n\">var</span><span class=\"o\">.</span><span class=\"n\">ploidy</span>\n</pre>\n\n          </div>"}, "last_serial": 7175655, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "5b9867ed4950e00f45be75bc4e7c5f12", "sha256": "7f1c4be8665235f09cac049688ff2d5db1c7f0f5dd1e225e8c2e3fd59fc6d7aa"}, "downloads": -1, "filename": "bgen-1.0.0.tar.gz", "has_sig": false, "md5_digest": "5b9867ed4950e00f45be75bc4e7c5f12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 642271, "upload_time": "2020-04-27T22:16:04", "upload_time_iso_8601": "2020-04-27T22:16:04.732621Z", "url": "https://files.pythonhosted.org/packages/59/16/88095bb66574701e1ed276893ee5c9c78f98b46347fc09a43f263255d4d2/bgen-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "156e1a9fca312d18e527053e61864523", "sha256": "459c23558ef8dedc027bc6501a3b66300066e4a8dcd53e51ac30cf31e67664a6"}, "downloads": -1, "filename": "bgen-1.1.0.tar.gz", "has_sig": false, "md5_digest": "156e1a9fca312d18e527053e61864523", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 644491, "upload_time": "2020-05-04T20:26:25", "upload_time_iso_8601": "2020-05-04T20:26:25.569017Z", "url": "https://files.pythonhosted.org/packages/3b/d1/497f2f13db91549fd323d3e11a67df19b3b2a94fdff2f8cb4c2a59e75831/bgen-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "c6cfbef1767593c18ad4b89c47a94511", "sha256": "81c163b46ce02ad4cc81990057284f35873ca95aff660ab772750325d7ae0d17"}, "downloads": -1, "filename": "bgen-1.1.1.tar.gz", "has_sig": false, "md5_digest": "c6cfbef1767593c18ad4b89c47a94511", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 644717, "upload_time": "2020-05-05T19:56:12", "upload_time_iso_8601": "2020-05-05T19:56:12.604224Z", "url": "https://files.pythonhosted.org/packages/10/1e/c40dace27b2e6c0559b9ebaf478323f83a937b0e7df4977c867ac1d174e5/bgen-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "0be703d2a4d2fd3c011d465bbb94c15a", "sha256": "05d4ca9d8e182a2dd9d0782035bfa1991018d47ea1863edd67becb477355e54d"}, "downloads": -1, "filename": "bgen-1.1.2.tar.gz", "has_sig": false, "md5_digest": "0be703d2a4d2fd3c011d465bbb94c15a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 644723, "upload_time": "2020-05-05T20:31:46", "upload_time_iso_8601": "2020-05-05T20:31:46.139530Z", "url": "https://files.pythonhosted.org/packages/27/ee/00f4cf7df9cc06e57f8bf631fdecb8723acea51fab8f71989401d2a00e00/bgen-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0be703d2a4d2fd3c011d465bbb94c15a", "sha256": "05d4ca9d8e182a2dd9d0782035bfa1991018d47ea1863edd67becb477355e54d"}, "downloads": -1, "filename": "bgen-1.1.2.tar.gz", "has_sig": false, "md5_digest": "0be703d2a4d2fd3c011d465bbb94c15a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 644723, "upload_time": "2020-05-05T20:31:46", "upload_time_iso_8601": "2020-05-05T20:31:46.139530Z", "url": "https://files.pythonhosted.org/packages/27/ee/00f4cf7df9cc06e57f8bf631fdecb8723acea51fab8f71989401d2a00e00/bgen-1.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:40 2020"}