{"info": {"author": "Vijay Ragavan", "author_email": "vijay@moneychakra.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Django is a high-level Python Web framework that encourages rapid development\nand clean, pragmatic design. This patch (pkg name Django-ArrayAccum on pypi) allows you to use the array_accum function available in Postgresql. This function will *NOT* work in other databases. If you are happy with Postgresql and want to be able to use the array_accum within Django (and not write custom sql) this fork is for you to try.\n\nThis patch was created for Django-1.6.1. Install Django-1.6.1 before you install this patch.\n\nThis patch modifies two files.\n\n1) django/db/models/aggregates.py\n2) django/db/models/sql/aggregates.py\n\nThis adds a function called ArrayAccum which you can then use in any query involving aggregations (similar to Sum, Avg etc which are built-in).\n\nExample Usage:\nSuppose you have a model defined as such::\n\n    class People(models.Model):\n        first_name = models.CharField(max_length=100)\n        last_name = models.CharField(max_length=100)\n\nAnd lets say you want to show the most common last names, count, associated first names --- then here is how you can do it::\n\n    from django.db.models import Count, ArrayAccum\n    results = People.objects.values(\"last_name\").annotate(count=Count('id'),\n                            unique_first_names=ArrayAccum(\"first_name\", distinct=True)).order_by('-count')\n", "description_content_type": null, "docs_url": null, "download_url": "http://pypi.python.org/packages/source/D/Django-ArrayAccum/Django-ArrayAccum-1.6.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/Django-ArrayAccum/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "Django-ArrayAccum", "package_url": "https://pypi.org/project/Django-ArrayAccum/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Django-ArrayAccum/", "project_urls": {"Download": "http://pypi.python.org/packages/source/D/Django-ArrayAccum/Django-ArrayAccum-1.6.1.tar.gz", "Homepage": "http://pypi.python.org/pypi/Django-ArrayAccum/"}, "release_url": "https://pypi.org/project/Django-ArrayAccum/1.6.1/", "requires_dist": null, "requires_python": null, "summary": "Patch for Django-1.6.1 that allows you to use Postgres's array_accum function. It adds function ArrayAccum in django.db.models. Using ArrayAccum will only work on Postgresql. First install Django-1.6.1 then install this package.", "version": "1.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django is a high-level Python Web framework that encourages rapid development\nand clean, pragmatic design. This patch (pkg name Django-ArrayAccum on pypi) allows you to use the array_accum function available in Postgresql. This function will <em>NOT</em> work in other databases. If you are happy with Postgresql and want to be able to use the array_accum within Django (and not write custom sql) this fork is for you to try.</p>\n<p>This patch was created for Django-1.6.1. Install Django-1.6.1 before you install this patch.</p>\n<p>This patch modifies two files.</p>\n<ol>\n<li>django/db/models/aggregates.py</li>\n<li>django/db/models/sql/aggregates.py</li>\n</ol>\n<p>This adds a function called ArrayAccum which you can then use in any query involving aggregations (similar to Sum, Avg etc which are built-in).</p>\n<p>Example Usage:\nSuppose you have a model defined as such:</p>\n<pre>class People(models.Model):\n    first_name = models.CharField(max_length=100)\n    last_name = models.CharField(max_length=100)\n</pre>\n<p>And lets say you want to show the most common last names, count, associated first names \u2014 then here is how you can do it:</p>\n<pre>from django.db.models import Count, ArrayAccum\nresults = People.objects.values(\"last_name\").annotate(count=Count('id'),\n                        unique_first_names=ArrayAccum(\"first_name\", distinct=True)).order_by('-count')\n</pre>\n\n          </div>"}, "last_serial": 972722, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "5e58b2004ede1a7a17471d7165e81348", "sha256": "613fdba281c0208176a755d1f0318508c6ab0c52f9d1af0edd04c51bdb0a2194"}, "downloads": -1, "filename": "Django-ArrayAccum-0.9.tar.gz", "has_sig": false, "md5_digest": "5e58b2004ede1a7a17471d7165e81348", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7720980, "upload_time": "2012-11-14T20:26:09", "upload_time_iso_8601": "2012-11-14T20:26:09.513835Z", "url": "https://files.pythonhosted.org/packages/a1/81/839a5fc9d0fb9cdf181682a119e585bf5b06095a24d27f359540421bf9b4/Django-ArrayAccum-0.9.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "2443c36d55f950271a186998cc54eb95", "sha256": "dde2bb3e208e7c03070c26ebe9366ffe6820a196431bf051e95daf3528806c57"}, "downloads": -1, "filename": "Django-ArrayAccum-1.0.tar.gz", "has_sig": false, "md5_digest": "2443c36d55f950271a186998cc54eb95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7721263, "upload_time": "2012-11-15T00:57:28", "upload_time_iso_8601": "2012-11-15T00:57:28.397078Z", "url": "https://files.pythonhosted.org/packages/44/df/a032692a5f9eb3d44fd904d07de18475dba9a8c6d2b256323d9c0017391d/Django-ArrayAccum-1.0.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "2f8dfa406deacd8699605319395f1748", "sha256": "a8924fdce6543986cafd201f5c4a1d69ce58fb190552207854d80f0dc5c6822c"}, "downloads": -1, "filename": "Django-ArrayAccum-1.4.2.tar.gz", "has_sig": false, "md5_digest": "2f8dfa406deacd8699605319395f1748", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14786, "upload_time": "2012-11-19T21:04:20", "upload_time_iso_8601": "2012-11-19T21:04:20.576583Z", "url": "https://files.pythonhosted.org/packages/57/6c/074a405f833ec9027f05a9a7be2b588e0b882c088724aa1ddecf88b17d70/Django-ArrayAccum-1.4.2.tar.gz", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "f000d437fdd72517e99b340332fe2454", "sha256": "619fcdba7f374b94584d55ea6327de942dba5c9d4a49cb47b668e0925d9ef1f2"}, "downloads": -1, "filename": "Django-ArrayAccum-1.6.1.tar.gz", "has_sig": false, "md5_digest": "f000d437fdd72517e99b340332fe2454", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5986, "upload_time": "2014-01-17T18:26:45", "upload_time_iso_8601": "2014-01-17T18:26:45.347394Z", "url": "https://files.pythonhosted.org/packages/fe/71/1e4cedd6e401fb677e55cdac487bb2e3ec556b592fc3a239aac91c06cd92/Django-ArrayAccum-1.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f000d437fdd72517e99b340332fe2454", "sha256": "619fcdba7f374b94584d55ea6327de942dba5c9d4a49cb47b668e0925d9ef1f2"}, "downloads": -1, "filename": "Django-ArrayAccum-1.6.1.tar.gz", "has_sig": false, "md5_digest": "f000d437fdd72517e99b340332fe2454", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5986, "upload_time": "2014-01-17T18:26:45", "upload_time_iso_8601": "2014-01-17T18:26:45.347394Z", "url": "https://files.pythonhosted.org/packages/fe/71/1e4cedd6e401fb677e55cdac487bb2e3ec556b592fc3a239aac91c06cd92/Django-ArrayAccum-1.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:37 2020"}