{"info": {"author": "Peter Landwehr", "author_email": "plandweh@cs.cmu.edu", "bugtrack_url": null, "classifiers": [], "description": "=============\ndynetml2other\n=============\n\n**dynetml2other_.** provides a set of tools for loading Dynamic Network Markup Language (DyNetML) files into the\nigraph_. and NetworkX_. Python packages for analyzing networks. It also supports a vanilla network format that uses\ndictionaries; while this format doesn't support the graph libraries' ability to calculate network features,\nit should be much quicker for exploring relationships between nodes.\n\n\nWhat is DyNetML?\n================\nDyNetML_. is a GraphML-based format for specifying network graphs. It is intended to support 'Meta-Networks' that\ncombine multiple types of nodes that are related in many one- and two-mode networks. It's the primary format used by the\nORA_. network analysis tool.\n\n\nWhy dynetml2other?\n==================\nWhile potent, ORA is designed to be used through a GUI and doesn't allow users to manipulate or work with their data\nin a programmatic fashion; this makes systematic use of the tool largely impossible. dynetml2other provides a workaround\nfor this by allowing users to load DyNetML files into graph libraries for Python. Users can manipulate these graphs,\ncalculate necessary metrics, and then save out the changed results as DyNetML files or any other format of choice.\n\n\nWhat dynetml2other Is Not:\n==========================\ndynetml2other is *not* a full-featured replacement for ORA or many of its reports.\n\n\nWhat dynetml2other Is:\n======================\ndynetml2other is a way to use igraph or NetworkX to analyze networks stored in DyNetML. It provides tools for\nmanipulating DyNetML data that approximate a small number of ORA's tools form manipulation, and allows users to save\nout their work for further manipulation in ORA or other tools.\n\n\n.. _dynetml2other: http://pmlandwehr.github.io/dynetml2other/\n.. _igraph: http://igraph.org/python/\n.. _NetworkX: http://networkx.github.io\n.. _DyNetML: http://www.casos.cs.cmu.edu/projects/dynetml/\n.. _ORA: http://www.casos.cs.cmu.edu/projects/ora/", "description_content_type": null, "docs_url": "https://pythonhosted.org/dynetml2other/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pmlandwehr.github.io/dynetml2other/", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "dynetml2other", "package_url": "https://pypi.org/project/dynetml2other/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dynetml2other/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pmlandwehr.github.io/dynetml2other/"}, "release_url": "https://pypi.org/project/dynetml2other/0.11/", "requires_dist": null, "requires_python": null, "summary": "DyNetML parsing and manipulation", "version": "0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>dynetml2other_.</strong> provides a set of tools for loading Dynamic Network Markup Language (DyNetML) files into the\n<a href=\"http://igraph.org/python/\" rel=\"nofollow\">igraph</a>. and <a href=\"http://networkx.github.io\" rel=\"nofollow\">NetworkX</a>. Python packages for analyzing networks. It also supports a vanilla network format that uses\ndictionaries; while this format doesn\u2019t support the graph libraries\u2019 ability to calculate network features,\nit should be much quicker for exploring relationships between nodes.</p>\n<div id=\"what-is-dynetml\">\n<h2>What is DyNetML?</h2>\n<p><a href=\"http://www.casos.cs.cmu.edu/projects/dynetml/\" rel=\"nofollow\">DyNetML</a>. is a GraphML-based format for specifying network graphs. It is intended to support \u2018Meta-Networks\u2019 that\ncombine multiple types of nodes that are related in many one- and two-mode networks. It\u2019s the primary format used by the\n<a href=\"http://www.casos.cs.cmu.edu/projects/ora/\" rel=\"nofollow\">ORA</a>. network analysis tool.</p>\n</div>\n<div id=\"why-dynetml2other\">\n<h2>Why dynetml2other?</h2>\n<p>While potent, ORA is designed to be used through a GUI and doesn\u2019t allow users to manipulate or work with their data\nin a programmatic fashion; this makes systematic use of the tool largely impossible. dynetml2other provides a workaround\nfor this by allowing users to load DyNetML files into graph libraries for Python. Users can manipulate these graphs,\ncalculate necessary metrics, and then save out the changed results as DyNetML files or any other format of choice.</p>\n</div>\n<div id=\"what-dynetml2other-is-not\">\n<h2>What dynetml2other Is Not:</h2>\n<p>dynetml2other is <em>not</em> a full-featured replacement for ORA or many of its reports.</p>\n</div>\n<div id=\"what-dynetml2other-is\">\n<h2>What dynetml2other Is:</h2>\n<p>dynetml2other is a way to use igraph or NetworkX to analyze networks stored in DyNetML. It provides tools for\nmanipulating DyNetML data that approximate a small number of ORA\u2019s tools form manipulation, and allows users to save\nout their work for further manipulation in ORA or other tools.</p>\n</div>\n\n          </div>"}, "last_serial": 1139332, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "94fe7e8fff71eeca5d037c7690231f50", "sha256": "99a3c9d0a11c90aea173576a964ca2ccf798598b5afc0a30356b23d6b07fd824"}, "downloads": -1, "filename": "dynetml2other-0.1.tar.gz", "has_sig": false, "md5_digest": "94fe7e8fff71eeca5d037c7690231f50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 116250, "upload_time": "2014-06-14T20:49:04", "upload_time_iso_8601": "2014-06-14T20:49:04.848574Z", "url": "https://files.pythonhosted.org/packages/42/12/0c611b618fe8dcdc1ce7c3d40a919d4694840c3463cf268936f9603162ce/dynetml2other-0.1.tar.gz", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "f4bdba9ee8d07161bc6662940d1274d5", "sha256": "8ac01f23215bb9fda95405b9ecd9f01fee3a81224abb6ab481bdd6bab8b941f0"}, "downloads": -1, "filename": "dynetml2other-0.11.tar.gz", "has_sig": false, "md5_digest": "f4bdba9ee8d07161bc6662940d1274d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 117738, "upload_time": "2014-06-27T02:34:42", "upload_time_iso_8601": "2014-06-27T02:34:42.117179Z", "url": "https://files.pythonhosted.org/packages/08/8c/ecc2e547ddff66909b8456c53315a551c99356c6dd01b183d731078e695f/dynetml2other-0.11.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f4bdba9ee8d07161bc6662940d1274d5", "sha256": "8ac01f23215bb9fda95405b9ecd9f01fee3a81224abb6ab481bdd6bab8b941f0"}, "downloads": -1, "filename": "dynetml2other-0.11.tar.gz", "has_sig": false, "md5_digest": "f4bdba9ee8d07161bc6662940d1274d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 117738, "upload_time": "2014-06-27T02:34:42", "upload_time_iso_8601": "2014-06-27T02:34:42.117179Z", "url": "https://files.pythonhosted.org/packages/08/8c/ecc2e547ddff66909b8456c53315a551c99356c6dd01b183d731078e695f/dynetml2other-0.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:38 2020"}