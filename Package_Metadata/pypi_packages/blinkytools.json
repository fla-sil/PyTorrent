{"info": {"author": "Robin Scheibler", "author_email": "fakufaku@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Blinky Tools\n============\n\nThis package contains a number of tools to work with Blinkies, small sound-to-light conversion sensors.\n\nInstall\n-------\n\n    pip install blinkytools\n\n\nUse the GUI\n-----------\n\nThe GUI can be used to record Blinky signals on live data by\nproviding the identifier of the video stream\n\n    python -m blinkytools -v <video_stream>\n\nor from a file by providing a file name\n\n    python -m blinkytools -v <video_filename>\n\nWhen called without argument, the default video stream is used.\n\nThe GUI can also be used with a\n[Shodensha  DN3V-130BU](https://www.shodensha-inc.co.jp/ja/dn3v-130bu/)\nindustrial camera, but this requires to install the driver and python bindings\nfor the driver from [here](https://github.com/onolab-tmu/icube_sdk).\n\n    python -m blinkytools -i\n\nPreview the content of a file\n-----------------------------\n\nThe package can also be used to preview the content\nof a file recorded using the GUI.\n\n    python -m blinkytools.file_preview <filename>\n\nOpen file from within Python\n----------------------------\n\nThe file format is [MessagePack](https://msgpack.org) and can thus be read by\nany appropriate software package.\nThe content is as follows:\n\n* Software version\n* File creation date\n* Framerate of the signal\n* A dictionary of extra metadata\n* The Blinky signals stored as a binary data array\n\nThis is an example of script that opens a Blinky file.\n\n    from blinkytools import BlinkyFile\n\n    # open the file and load the content\n    filename = \"myfile.blinky\"\n    content = BlinkyFile.load(filename)\n\n    print(\"Software version used:\", content.version)\n    print(\"Framerate:\", content.fps)\n    print(\"File created on:\", content.creation)\n    print(\"Dictionary of extra metadata:\", content.metadata)\n\n    # The Blinky signal are in the data attribute\n    print(\"The data shape and type:\", content.data.shape, content.data.dtype)\n\nThe dimension of the `content.data` array is as follows.\n\n* For **monochrome** cameras, the array has 4 dimensions, with `shape ==\n  (n_time, n_blinkies, h_patch, w_patch)`, where `n_time` and `n_blinkies` are\n  the number of frames and Blinky sensors, respectively. The data is exctraced\n  in small patches of `h_patch x w_patch` around the Blinky locations.\n* For **color** cameras, the array has 5 dimensions, with `shape == (n_time,\n  n_blinkies, h_patch, w_patch, n_colors)`, where `n_colors` is the number of\n  color channels.\n\n### Note on storage of Numpy arrays in MessagePack\n\nWhen using the `BlinkyFile` class, the signals are automatically transformed into `numpy.ndarray`.\nThe arrays are stored in MessagePack format as the following dictionary:\n\n    {\n      \"__nd__\": True,  # indicates this is a numpy ndarray\n      \"shape\": obj.shape,  # shape of the array\n      \"dtype\": obj.dtype.str,  # numeric type of the data\n      \"data\": obj.tobytes(),  # the data as a byte array\n    }\n\nNote that this information is only needed if dealing with the content of the file directly.l\nWhen using `blinkytools`, the conversion is transparent.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/onolab-tmu/blinky", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "blinkytools", "package_url": "https://pypi.org/project/blinkytools/", "platform": "", "project_url": "https://pypi.org/project/blinkytools/", "project_urls": {"Homepage": "https://github.com/onolab-tmu/blinky"}, "release_url": "https://pypi.org/project/blinkytools/0.0.5/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Software tools to work with Blinky sound-to-light conversion sensors.", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Blinky Tools</h1>\n<p>This package contains a number of tools to work with Blinkies, small sound-to-light conversion sensors.</p>\n<h2>Install</h2>\n<pre><code>pip install blinkytools\n</code></pre>\n<h2>Use the GUI</h2>\n<p>The GUI can be used to record Blinky signals on live data by\nproviding the identifier of the video stream</p>\n<pre><code>python -m blinkytools -v &lt;video_stream&gt;\n</code></pre>\n<p>or from a file by providing a file name</p>\n<pre><code>python -m blinkytools -v &lt;video_filename&gt;\n</code></pre>\n<p>When called without argument, the default video stream is used.</p>\n<p>The GUI can also be used with a\n<a href=\"https://www.shodensha-inc.co.jp/ja/dn3v-130bu/\" rel=\"nofollow\">Shodensha  DN3V-130BU</a>\nindustrial camera, but this requires to install the driver and python bindings\nfor the driver from <a href=\"https://github.com/onolab-tmu/icube_sdk\" rel=\"nofollow\">here</a>.</p>\n<pre><code>python -m blinkytools -i\n</code></pre>\n<h2>Preview the content of a file</h2>\n<p>The package can also be used to preview the content\nof a file recorded using the GUI.</p>\n<pre><code>python -m blinkytools.file_preview &lt;filename&gt;\n</code></pre>\n<h2>Open file from within Python</h2>\n<p>The file format is <a href=\"https://msgpack.org\" rel=\"nofollow\">MessagePack</a> and can thus be read by\nany appropriate software package.\nThe content is as follows:</p>\n<ul>\n<li>Software version</li>\n<li>File creation date</li>\n<li>Framerate of the signal</li>\n<li>A dictionary of extra metadata</li>\n<li>The Blinky signals stored as a binary data array</li>\n</ul>\n<p>This is an example of script that opens a Blinky file.</p>\n<pre><code>from blinkytools import BlinkyFile\n\n# open the file and load the content\nfilename = \"myfile.blinky\"\ncontent = BlinkyFile.load(filename)\n\nprint(\"Software version used:\", content.version)\nprint(\"Framerate:\", content.fps)\nprint(\"File created on:\", content.creation)\nprint(\"Dictionary of extra metadata:\", content.metadata)\n\n# The Blinky signal are in the data attribute\nprint(\"The data shape and type:\", content.data.shape, content.data.dtype)\n</code></pre>\n<p>The dimension of the <code>content.data</code> array is as follows.</p>\n<ul>\n<li>For <strong>monochrome</strong> cameras, the array has 4 dimensions, with <code>shape == (n_time, n_blinkies, h_patch, w_patch)</code>, where <code>n_time</code> and <code>n_blinkies</code> are\nthe number of frames and Blinky sensors, respectively. The data is exctraced\nin small patches of <code>h_patch x w_patch</code> around the Blinky locations.</li>\n<li>For <strong>color</strong> cameras, the array has 5 dimensions, with <code>shape == (n_time, n_blinkies, h_patch, w_patch, n_colors)</code>, where <code>n_colors</code> is the number of\ncolor channels.</li>\n</ul>\n<h3>Note on storage of Numpy arrays in MessagePack</h3>\n<p>When using the <code>BlinkyFile</code> class, the signals are automatically transformed into <code>numpy.ndarray</code>.\nThe arrays are stored in MessagePack format as the following dictionary:</p>\n<pre><code>{\n  \"__nd__\": True,  # indicates this is a numpy ndarray\n  \"shape\": obj.shape,  # shape of the array\n  \"dtype\": obj.dtype.str,  # numeric type of the data\n  \"data\": obj.tobytes(),  # the data as a byte array\n}\n</code></pre>\n<p>Note that this information is only needed if dealing with the content of the file directly.l\nWhen using <code>blinkytools</code>, the conversion is transparent.</p>\n\n          </div>"}, "last_serial": 6651260, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e83bccae59d35f8fc31580132b74c9e7", "sha256": "1683f615af340cdb266ae675e2cb63228a4bb992ac1fd00aa64a1c3675f7cc36"}, "downloads": -1, "filename": "blinkytools-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e83bccae59d35f8fc31580132b74c9e7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16224, "upload_time": "2020-02-04T02:54:05", "upload_time_iso_8601": "2020-02-04T02:54:05.298047Z", "url": "https://files.pythonhosted.org/packages/32/d5/52ef0e9cc827011a66353b295308222a37faae4686ffa4e9d856e80b5114/blinkytools-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "bf47754c6c66fb68af4edeb32893c8f7", "sha256": "2a3463abf0ad6a426d7a790648a6fb18f8ee4ae4688bbf2be627ab158c762db6"}, "downloads": -1, "filename": "blinkytools-0.0.2.tar.gz", "has_sig": false, "md5_digest": "bf47754c6c66fb68af4edeb32893c8f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18600, "upload_time": "2020-02-04T04:31:32", "upload_time_iso_8601": "2020-02-04T04:31:32.836538Z", "url": "https://files.pythonhosted.org/packages/76/8d/c3f7e83421491d0867fee0025daa48ad0c7ff77401c42c8d2e6cb9a0a32f/blinkytools-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "0ebf10d22beea2d80296920de43e3a2f", "sha256": "73ec147df498a6f618d4ecd5b77ed61e247b2213d2b4ea8dccdb9864e78b5cac"}, "downloads": -1, "filename": "blinkytools-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0ebf10d22beea2d80296920de43e3a2f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18609, "upload_time": "2020-02-06T02:20:09", "upload_time_iso_8601": "2020-02-06T02:20:09.192463Z", "url": "https://files.pythonhosted.org/packages/be/ab/51dfd123e79d1a9b6833699d40f011a7c9749eaf5b3189bcaae7f097f559/blinkytools-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "61ba2bad8ae432f9df8c3364638e9638", "sha256": "5180b50fc47457b98fef704db7d4755e810d03817e3577dde77fa45d86e398e1"}, "downloads": -1, "filename": "blinkytools-0.0.4.tar.gz", "has_sig": false, "md5_digest": "61ba2bad8ae432f9df8c3364638e9638", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18606, "upload_time": "2020-02-06T02:25:45", "upload_time_iso_8601": "2020-02-06T02:25:45.648694Z", "url": "https://files.pythonhosted.org/packages/c4/bc/29e2ae2bb2a522a453dbb107d7434a3760e5993f2d3abdc3e482e115bd08/blinkytools-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "ff1482b388ecf75a4a410a306288acd2", "sha256": "627b7b23ce96536544dedd9b28e7b3f7b3776b98989632676947e8db7e1b71fa"}, "downloads": -1, "filename": "blinkytools-0.0.5.tar.gz", "has_sig": false, "md5_digest": "ff1482b388ecf75a4a410a306288acd2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18654, "upload_time": "2020-02-18T06:20:49", "upload_time_iso_8601": "2020-02-18T06:20:49.596304Z", "url": "https://files.pythonhosted.org/packages/38/59/7ffa891b4799a9842694b49467fc114aae6e31571479a9cc318561d04df1/blinkytools-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ff1482b388ecf75a4a410a306288acd2", "sha256": "627b7b23ce96536544dedd9b28e7b3f7b3776b98989632676947e8db7e1b71fa"}, "downloads": -1, "filename": "blinkytools-0.0.5.tar.gz", "has_sig": false, "md5_digest": "ff1482b388ecf75a4a410a306288acd2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18654, "upload_time": "2020-02-18T06:20:49", "upload_time_iso_8601": "2020-02-18T06:20:49.596304Z", "url": "https://files.pythonhosted.org/packages/38/59/7ffa891b4799a9842694b49467fc114aae6e31571479a9cc318561d04df1/blinkytools-0.0.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:05 2020"}