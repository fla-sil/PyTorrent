{"info": {"author": "Shane Hathaway", "author_email": "shane@hathawaymix.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: Repoze Public License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: System :: Monitoring"], "description": "Overview\n========\n\nThe ``slowlog`` library helps you find out why some requests to your\nweb application take a long time.  It periodically dumps stack traces\nof long running requests to a log file.  It works as a Pyramid tween\nor as a WSGI component. It is inspired by ``Products.LongRequestLogger``,\nwhich provides similar functionality for Zope 2.\n\nThis library can also log frame statistics to Graphite using the\n``perfmetrics`` library, making it possible to create real-time graphs\nthat reveal expensive code paths.\n\nThis library uses ``sys._current_frames()`` to gather stack traces, so\nit supports CPython versions 2.6+ and 3.2+, but other Python\nimplementations might not work.\n\n|TravisBadge|_\n\n.. |TravisBadge| image:: https://secure.travis-ci.org/hathawsh/slowlog.png?branch=master\n.. _TravisBadge: http://travis-ci.org/hathawsh/slowlog\n\nInstallation\n============\n\nInstall using setuptools, e.g. (within a virtualenv)::\n\n    $ bin/easy_install slowlog\n\nPyramid Configuration\n---------------------\n\nOnce the ``slowlog`` library is installed, use the ``config.include``\nmechanism to add ``slowlog`` to your project.  In your Pyramid\nproject's ``__init__.py``::\n\n    config = Configurator(...)\n    config.include('slowlog')\n\nAlternately, you can add the following line to your application's\n``.ini`` file::\n\n    pyramid.includes = slowlog\n\nNext, Pyramid needs some settings before the ``slowlog`` library has\nany effect.  Two tweens are available, ``slowlog`` and ``framestats``.\n\nThe slowlog tween\n~~~~~~~~~~~~~~~~~\n\nThe ``slowlog`` tween periodically logs stack traces of long running\nrequests.  To activate it, set ``slowlog = true`` in your Pyramid settings.\nThe ``slowlog`` tween supports the following settings.\n\nslowlog\n    Set to ``true`` to activate the ``slowlog`` tween.  Default: false.\n\nslowlog_timeout\n    Only log stack traces of requests that last at least\n    this number of seconds (floating point).  Default: 2.0.\n\nslowlog_interval\n    Once a request lasts longer than ``slowlog_timeout``, the\n    ``slowlog`` tween continues to log stack traces periodically with\n    the given interval in seconds (floating point). Default: 1.0.\n\nslowlog_file\n    Log all stack traces to the given file.  The file will be rotated\n    automatically when it grows to 10 megabytes.  If this setting is empty or\n    missing, stack traces will be logged using Python's standard\n    ``logging`` module with the logger name ``slowlog``.  Default: none.\n\nslowlog_frames\n    Limit the number of frames in stack traces.  If set to 0, no stack\n    traces will be logged.  Default: 100.\n\nslowlog_hide_post_vars\n    A whitespace-delimited list of POST variables that should be\n    redacted (hidden) in logs.  Useful for avoiding accidental storage\n    of cleartext passwords.  Default:  ``password``.\n\nThe framestats tween\n~~~~~~~~~~~~~~~~~~~~\n\nThe ``framestats`` tween periodically increments Statsd counters for\nall frames on the stack of long-running requests.\nTo activate it, set ``framestats = true`` in your Pyramid settings.\nThe ``framestats`` tween supports the following settings.\n\nframestats\n    Set to ``true`` to activate the ``framestats`` tween.  Default: false.\n\nstatsd_uri\n    Required.  A common URI is ``statsd://localhost:8125``.  See the\n    ``perfmetrics`` library for supported parameters.\n\nframestats_timeout\n    Only update Statsd for requests that last at least\n    this number of seconds (floating point).  Default: 2.0.\n\nframestats_interval\n    Once a request lasts longer than ``framestats_timeout``, the\n    ``framestats`` tween continues to update Statsd periodically with\n    the given interval in seconds (floating point). Default: 1.0.\n\nframestats_frames\n    Limit the number of frames to follow in stack traces.\n    If set to 1, Statsd will receive information about only the current\n    frame.  Default: 100.\n\n\n\nCHANGES\n=======\n\n0.9 (2012-09-22)\n----------------\n\n- Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hathawsh/slowlog", "keywords": null, "license": "BSD-derived (http://www.repoze.org/LICENSE.txt)", "maintainer": null, "maintainer_email": null, "name": "slowlog", "package_url": "https://pypi.org/project/slowlog/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/slowlog/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/hathawsh/slowlog"}, "release_url": "https://pypi.org/project/slowlog/0.9/", "requires_dist": null, "requires_python": null, "summary": "Log and graph slow Pyramid and WSGI apps", "version": "0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>The <tt>slowlog</tt> library helps you find out why some requests to your\nweb application take a long time.  It periodically dumps stack traces\nof long running requests to a log file.  It works as a Pyramid tween\nor as a WSGI component. It is inspired by <tt>Products.LongRequestLogger</tt>,\nwhich provides similar functionality for Zope 2.</p>\n<p>This library can also log frame statistics to Graphite using the\n<tt>perfmetrics</tt> library, making it possible to create real-time graphs\nthat reveal expensive code paths.</p>\n<p>This library uses <tt>sys._current_frames()</tt> to gather stack traces, so\nit supports CPython versions 2.6+ and 3.2+, but other Python\nimplementations might not work.</p>\n<p><a href=\"http://travis-ci.org/hathawsh/slowlog\" rel=\"nofollow\"><img alt=\"TravisBadge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ee1a23a5826c8b4578f2251e7a65c70d6406f8a2/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f68617468617773682f736c6f776c6f672e706e673f6272616e63683d6d6173746572\"></a></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using setuptools, e.g. (within a virtualenv):</p>\n<pre>$ bin/easy_install slowlog\n</pre>\n<div id=\"pyramid-configuration\">\n<h3>Pyramid Configuration</h3>\n<p>Once the <tt>slowlog</tt> library is installed, use the <tt>config.include</tt>\nmechanism to add <tt>slowlog</tt> to your project.  In your Pyramid\nproject\u2019s <tt>__init__.py</tt>:</p>\n<pre>config = Configurator(...)\nconfig.include('slowlog')\n</pre>\n<p>Alternately, you can add the following line to your application\u2019s\n<tt>.ini</tt> file:</p>\n<pre>pyramid.includes = slowlog\n</pre>\n<p>Next, Pyramid needs some settings before the <tt>slowlog</tt> library has\nany effect.  Two tweens are available, <tt>slowlog</tt> and <tt>framestats</tt>.</p>\n<div id=\"the-slowlog-tween\">\n<h4>The slowlog tween</h4>\n<p>The <tt>slowlog</tt> tween periodically logs stack traces of long running\nrequests.  To activate it, set <tt>slowlog = true</tt> in your Pyramid settings.\nThe <tt>slowlog</tt> tween supports the following settings.</p>\n<dl>\n<dt>slowlog</dt>\n<dd>Set to <tt>true</tt> to activate the <tt>slowlog</tt> tween.  Default: false.</dd>\n<dt>slowlog_timeout</dt>\n<dd>Only log stack traces of requests that last at least\nthis number of seconds (floating point).  Default: 2.0.</dd>\n<dt>slowlog_interval</dt>\n<dd>Once a request lasts longer than <tt>slowlog_timeout</tt>, the\n<tt>slowlog</tt> tween continues to log stack traces periodically with\nthe given interval in seconds (floating point). Default: 1.0.</dd>\n<dt>slowlog_file</dt>\n<dd>Log all stack traces to the given file.  The file will be rotated\nautomatically when it grows to 10 megabytes.  If this setting is empty or\nmissing, stack traces will be logged using Python\u2019s standard\n<tt>logging</tt> module with the logger name <tt>slowlog</tt>.  Default: none.</dd>\n<dt>slowlog_frames</dt>\n<dd>Limit the number of frames in stack traces.  If set to 0, no stack\ntraces will be logged.  Default: 100.</dd>\n<dt>slowlog_hide_post_vars</dt>\n<dd>A whitespace-delimited list of POST variables that should be\nredacted (hidden) in logs.  Useful for avoiding accidental storage\nof cleartext passwords.  Default:  <tt>password</tt>.</dd>\n</dl>\n</div>\n<div id=\"the-framestats-tween\">\n<h4>The framestats tween</h4>\n<p>The <tt>framestats</tt> tween periodically increments Statsd counters for\nall frames on the stack of long-running requests.\nTo activate it, set <tt>framestats = true</tt> in your Pyramid settings.\nThe <tt>framestats</tt> tween supports the following settings.</p>\n<dl>\n<dt>framestats</dt>\n<dd>Set to <tt>true</tt> to activate the <tt>framestats</tt> tween.  Default: false.</dd>\n<dt>statsd_uri</dt>\n<dd>Required.  A common URI is <tt><span class=\"pre\">statsd://localhost:8125</span></tt>.  See the\n<tt>perfmetrics</tt> library for supported parameters.</dd>\n<dt>framestats_timeout</dt>\n<dd>Only update Statsd for requests that last at least\nthis number of seconds (floating point).  Default: 2.0.</dd>\n<dt>framestats_interval</dt>\n<dd>Once a request lasts longer than <tt>framestats_timeout</tt>, the\n<tt>framestats</tt> tween continues to update Statsd periodically with\nthe given interval in seconds (floating point). Default: 1.0.</dd>\n<dt>framestats_frames</dt>\n<dd>Limit the number of frames to follow in stack traces.\nIf set to 1, Statsd will receive information about only the current\nframe.  Default: 100.</dd>\n</dl>\n</div>\n</div>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.9 (2012-09-22)</span></h2>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 799709, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "36f85f5279fc8fb9f436139ee581c928", "sha256": "4faae46b28ab5a133c0b9ad49e1dae5435d8e977e7fbab7195bc99556f71325a"}, "downloads": -1, "filename": "slowlog-0.9.tar.gz", "has_sig": false, "md5_digest": "36f85f5279fc8fb9f436139ee581c928", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14563, "upload_time": "2012-09-22T18:00:23", "upload_time_iso_8601": "2012-09-22T18:00:23.203045Z", "url": "https://files.pythonhosted.org/packages/66/da/fd7339236cf78322f97d4e94750bd9100655211f5bb86523e09cf639fdbc/slowlog-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "36f85f5279fc8fb9f436139ee581c928", "sha256": "4faae46b28ab5a133c0b9ad49e1dae5435d8e977e7fbab7195bc99556f71325a"}, "downloads": -1, "filename": "slowlog-0.9.tar.gz", "has_sig": false, "md5_digest": "36f85f5279fc8fb9f436139ee581c928", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14563, "upload_time": "2012-09-22T18:00:23", "upload_time_iso_8601": "2012-09-22T18:00:23.203045Z", "url": "https://files.pythonhosted.org/packages/66/da/fd7339236cf78322f97d4e94750bd9100655211f5bb86523e09cf639fdbc/slowlog-0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:14 2020"}