{"info": {"author": "Victor Vasiliev", "author_email": "victor@a-i.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "\n# A Toolkit to work with components in Microsoft Bot Framework\n\n### Installation (We recommend using a virtualenv):\n```\npip install coco-microsoft-bot-framework \n```\n\n### Setup:\n#### Setting Conversation State \nin `app.py`, include the lines below.\n\n```python\nfrom coco_microsoft_bot_framework import CoCoActivityHandler\nfrom botbuilder.core import (\n    BotFrameworkAdapterSettings,\n    TurnContext,\n    BotFrameworkAdapter,\n    UserState,\n    MemoryStorage,\n    ConversationState,\n)\n\nMEMORY = MemoryStorage()\nCONVERSATION_STATE = ConversationState(MEMORY)\n# Create the Bot\nBOT = MyBot(CONVERSATION_STATE)\n```\n\n\n#### Setting Activity Handler\nin `bot.py`\n\nImport CoCo custom Activity Handler, then use it to create your bot.\nAt the `on_message_activity` method add the three lines as below, in order to\nmanage CoCo context during the conversation.\n```python\nfrom coco_microsoft_bot_framework import CoCoActivityHandler\n\nclass MyBot(CoCoActivityHandler):\n\n    async def on_message_activity(self, turn_context: TurnContext):\n        if self.is_component_active():\n            await self.call_active_component(turn_context)\n            return\n```\n\n\n#### Activate CoCo Component\nActivate CoCo register component, which ID is: \"register_vp3\".\n```python\nclass MyBot(CoCoActivityHandler):\n\n    async def on_message_activity(self, turn_context: TurnContext):\n        if self.is_component_active():\n            await self.call_active_component(turn_context)\n            return\n\n        if intent == \"register\":\n            await self.activate_component(turn_context, \"register_vp3\")\n        else:\n            await turn_context.send_activity(\"I don't understand.\")\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/conversationalcomponents/coco-microsoft-bot-framework", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "coco-microsoft-bot-framework", "package_url": "https://pypi.org/project/coco-microsoft-bot-framework/", "platform": "", "project_url": "https://pypi.org/project/coco-microsoft-bot-framework/", "project_urls": {"Homepage": "https://github.com/conversationalcomponents/coco-microsoft-bot-framework"}, "release_url": "https://pypi.org/project/coco-microsoft-bot-framework/0.0.1/", "requires_dist": ["coco-sdk", "botbuilder-core"], "requires_python": ">=3.6", "summary": "CoCo(Conversational Components) SDK for using components with Microsoft Bot Framework.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>A Toolkit to work with components in Microsoft Bot Framework</h1>\n<h3>Installation (We recommend using a virtualenv):</h3>\n<pre><code>pip install coco-microsoft-bot-framework \n</code></pre>\n<h3>Setup:</h3>\n<h4>Setting Conversation State</h4>\n<p>in <code>app.py</code>, include the lines below.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">coco_microsoft_bot_framework</span> <span class=\"kn\">import</span> <span class=\"n\">CoCoActivityHandler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">botbuilder.core</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">BotFrameworkAdapterSettings</span><span class=\"p\">,</span>\n    <span class=\"n\">TurnContext</span><span class=\"p\">,</span>\n    <span class=\"n\">BotFrameworkAdapter</span><span class=\"p\">,</span>\n    <span class=\"n\">UserState</span><span class=\"p\">,</span>\n    <span class=\"n\">MemoryStorage</span><span class=\"p\">,</span>\n    <span class=\"n\">ConversationState</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">MEMORY</span> <span class=\"o\">=</span> <span class=\"n\">MemoryStorage</span><span class=\"p\">()</span>\n<span class=\"n\">CONVERSATION_STATE</span> <span class=\"o\">=</span> <span class=\"n\">ConversationState</span><span class=\"p\">(</span><span class=\"n\">MEMORY</span><span class=\"p\">)</span>\n<span class=\"c1\"># Create the Bot</span>\n<span class=\"n\">BOT</span> <span class=\"o\">=</span> <span class=\"n\">MyBot</span><span class=\"p\">(</span><span class=\"n\">CONVERSATION_STATE</span><span class=\"p\">)</span>\n</pre>\n<h4>Setting Activity Handler</h4>\n<p>in <code>bot.py</code></p>\n<p>Import CoCo custom Activity Handler, then use it to create your bot.\nAt the <code>on_message_activity</code> method add the three lines as below, in order to\nmanage CoCo context during the conversation.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">coco_microsoft_bot_framework</span> <span class=\"kn\">import</span> <span class=\"n\">CoCoActivityHandler</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyBot</span><span class=\"p\">(</span><span class=\"n\">CoCoActivityHandler</span><span class=\"p\">):</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_message_activity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">turn_context</span><span class=\"p\">:</span> <span class=\"n\">TurnContext</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_component_active</span><span class=\"p\">():</span>\n            <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">call_active_component</span><span class=\"p\">(</span><span class=\"n\">turn_context</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n</pre>\n<h4>Activate CoCo Component</h4>\n<p>Activate CoCo register component, which ID is: \"register_vp3\".</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MyBot</span><span class=\"p\">(</span><span class=\"n\">CoCoActivityHandler</span><span class=\"p\">):</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">on_message_activity</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">turn_context</span><span class=\"p\">:</span> <span class=\"n\">TurnContext</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_component_active</span><span class=\"p\">():</span>\n            <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">call_active_component</span><span class=\"p\">(</span><span class=\"n\">turn_context</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">intent</span> <span class=\"o\">==</span> <span class=\"s2\">\"register\"</span><span class=\"p\">:</span>\n            <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">activate_component</span><span class=\"p\">(</span><span class=\"n\">turn_context</span><span class=\"p\">,</span> <span class=\"s2\">\"register_vp3\"</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">await</span> <span class=\"n\">turn_context</span><span class=\"o\">.</span><span class=\"n\">send_activity</span><span class=\"p\">(</span><span class=\"s2\">\"I don't understand.\"</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6538880, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a96d1476b99510f557b4f9b090b5c1f8", "sha256": "a1767bcd4c31cfb50b08b3062d02db776b17460f4234dc46fa67a7cefc519d45"}, "downloads": -1, "filename": "coco_microsoft_bot_framework-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a96d1476b99510f557b4f9b090b5c1f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3896, "upload_time": "2020-01-29T16:25:38", "upload_time_iso_8601": "2020-01-29T16:25:38.266605Z", "url": "https://files.pythonhosted.org/packages/8c/10/c10a1344f907da7e76d9433b14f70a0498e6c9f1d1ed29f5879ca26ff118/coco_microsoft_bot_framework-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73d5c2934187eb05a8c5ad5349c8d62a", "sha256": "ac42acda674ad83ae9c3fc4734e7a5ce6e88148ddb41cb2cccf146c15a28852e"}, "downloads": -1, "filename": "coco-microsoft-bot-framework-0.0.1.tar.gz", "has_sig": false, "md5_digest": "73d5c2934187eb05a8c5ad5349c8d62a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3169, "upload_time": "2020-01-29T16:25:40", "upload_time_iso_8601": "2020-01-29T16:25:40.921287Z", "url": "https://files.pythonhosted.org/packages/2d/84/af484798209a8fc9cc31a4be93e050957d8d2bafa6f2cbfe8a417be65d71/coco-microsoft-bot-framework-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a96d1476b99510f557b4f9b090b5c1f8", "sha256": "a1767bcd4c31cfb50b08b3062d02db776b17460f4234dc46fa67a7cefc519d45"}, "downloads": -1, "filename": "coco_microsoft_bot_framework-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a96d1476b99510f557b4f9b090b5c1f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3896, "upload_time": "2020-01-29T16:25:38", "upload_time_iso_8601": "2020-01-29T16:25:38.266605Z", "url": "https://files.pythonhosted.org/packages/8c/10/c10a1344f907da7e76d9433b14f70a0498e6c9f1d1ed29f5879ca26ff118/coco_microsoft_bot_framework-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73d5c2934187eb05a8c5ad5349c8d62a", "sha256": "ac42acda674ad83ae9c3fc4734e7a5ce6e88148ddb41cb2cccf146c15a28852e"}, "downloads": -1, "filename": "coco-microsoft-bot-framework-0.0.1.tar.gz", "has_sig": false, "md5_digest": "73d5c2934187eb05a8c5ad5349c8d62a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3169, "upload_time": "2020-01-29T16:25:40", "upload_time_iso_8601": "2020-01-29T16:25:40.921287Z", "url": "https://files.pythonhosted.org/packages/2d/84/af484798209a8fc9cc31a4be93e050957d8d2bafa6f2cbfe8a417be65d71/coco-microsoft-bot-framework-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:20 2020"}