{"info": {"author": "Coopdevs", "author_email": "gerard.funosas@somconnexio.coop", "bugtrack_url": null, "classifiers": [], "description": "# M\u00e1s M\u00f3vil Python API client\n\nThis Python API client provides access to M\u00e1s M\u00f3vil's B2B REST API.\n\n## Installation\n\n### Requirements\n\n* Python 3.8+\n\n## Usage\n\n### Login\n\nTo authenticate, you need to specify credentials which need to be set as environment variables with the following names:\n\n```bash\n'MM_BASEURL': 'https://<host>/cableOperadores/services/apexrest/api'\n'MM_USER': 'user'\n'MM_PASSWORD': 'pwd'\n```\n`MM_BASEURL` must point to the M\u00e1sM\u00f3vili's API environment, either testing or production. Pymasmovil will only append API routes to it like `/v0/accounts` to perform requests. In the case of testing, check with them as this surely changes per customer.\n\n`MM_USER` and `MM_PASSWORD` must be replaced with your actual user credentials. \n\n### Session creation\n\nThe login is done when we create a session using the `Session.create` method:\n\n```python\nfrom pymasmovil.models.session import Session\n\nsession = Session.create()\n\nprint('Session created with id : {}'.format(session.session_id))\n\n```\n\nThis returns the API key needed to authenticate all subsequent requests. That is why the `Session` instance has to be passed in to other all other objects methods.\n\n### Account\n\n```python\nfrom pymasmovil.models.account import Account\n\naccount_id = '0017E000017pEo3QAE'\naccount = Account.get(session, account_id)\n\n```\nTo create a new account we need to use `Account.create` passing the account data as keyword arguments. The `Account` attributes are listed bellow. Note they are all strings.\n\n```\ntown, surname, stair, roadType, roadNumber, roadName, region, province, postalCode, phone, name, id, flat, email, door, donorCountry, documentType, documentNumber, corporateName, buildingPortal\n```\nNo attribute is mandatory for the client leaving parameter validation to the API.\n\n```python\nfrom pymasmovil.models.account import Account\n\naccount = Account.create(session, town='Barcelona', surname='Garcia', phone='616010101')\n```\n\n### OrderItem\n\nOrder items can be accessed the same way as accounts:\n\n```python\nfrom pymasmovil.models.order_items.py import OrderItem\n\norder_item_id = '8028E34500215wgQAA'\norder_item = OrderItem.get(session, order_item_id)\n```\n\nCurrently, order items can be created following the account creation example, but the structure of their attributes is a bit more complex. \n\nSince `GET /order-item/:id` response and the `POST /accounts/:id/order-items` request don't match except for a few attributes, order item creation is then designed to opimistically build an `OrderItem` instance based on the attributes inferred from the POST body. M\u00e1sM\u00f3vil's API doesn't return the whole resource as one would expect with a REST API. That is why `OrderItem`'s `create` input data structure won't directly match an `OrderItem` attributes.\n\nThe minimum structure is presented as the variable `sample-order-item-post-request`: \n\n\n```python\nfrom pymasmovil.models.order_items.py import OrderItem\n\norder_item_data = {\n    'lineInfo': [\n        {\n            'name': 'Antonio',\n            'surname': 'Garcia',\n            'phoneNumber': '616010101',\n            'documentType': 'NIF',\n            'portabilityDate': '2020-02-06',\n            'iccid_donante': '8934046318031035245',\n            'iccid': '8934046318031035250',\n        }\n    ]\n}\n\norder_item = OrderItem.create(session, order_item_data)\n\n```\n\n## Development\n\n### Python version\n\nWe use [Pyenv](https://github.com/pyenv/pyenv) to fix the Python version and the virtualenv to develop the package.\n\nYou need to:\n\n* Install and configure [`pyenv`](https://github.com/pyenv/pyenv)\n* Install and configure [`pyenv-virtualenv`](https://github.com/pyenv/pyenv-virtualenv)\n* Install the required Python version:\n\n```\n$ pyenv install 3.8.2\n```\n\n* Create the virtualenv:\n\n```\n$ pyenv virtualenv 3.8.2 pymasmovil\n```\n\n### Python packages requirements\n\n Install the Python packages in the virtual environment:\n\n ```\n $ pyenv exec pip install -r requirements.txt\n ```\n\n## License\n\nTBD\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/coopdevs/pymasmovil", "keywords": "", "license": "", "maintainer": "Daniel Palomar, Pau P\u00e9rez, Gerard Funosas", "maintainer_email": "", "name": "pymasmovil", "package_url": "https://pypi.org/project/pymasmovil/", "platform": "", "project_url": "https://pypi.org/project/pymasmovil/", "project_urls": {"Homepage": "https://gitlab.com/coopdevs/pymasmovil"}, "release_url": "https://pypi.org/project/pymasmovil/0.0.2/", "requires_dist": ["requests"], "requires_python": "", "summary": "Python client for the M\u00e1s M\u00f3vil's B2B API", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>M\u00e1s M\u00f3vil Python API client</h1>\n<p>This Python API client provides access to M\u00e1s M\u00f3vil's B2B REST API.</p>\n<h2>Installation</h2>\n<h3>Requirements</h3>\n<ul>\n<li>Python 3.8+</li>\n</ul>\n<h2>Usage</h2>\n<h3>Login</h3>\n<p>To authenticate, you need to specify credentials which need to be set as environment variables with the following names:</p>\n<pre><span class=\"s1\">'MM_BASEURL'</span>: <span class=\"s1\">'https://&lt;host&gt;/cableOperadores/services/apexrest/api'</span>\n<span class=\"s1\">'MM_USER'</span>: <span class=\"s1\">'user'</span>\n<span class=\"s1\">'MM_PASSWORD'</span>: <span class=\"s1\">'pwd'</span>\n</pre>\n<p><code>MM_BASEURL</code> must point to the M\u00e1sM\u00f3vili's API environment, either testing or production. Pymasmovil will only append API routes to it like <code>/v0/accounts</code> to perform requests. In the case of testing, check with them as this surely changes per customer.</p>\n<p><code>MM_USER</code> and <code>MM_PASSWORD</code> must be replaced with your actual user credentials.</p>\n<h3>Session creation</h3>\n<p>The login is done when we create a session using the <code>Session.create</code> method:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymasmovil.models.session</span> <span class=\"kn\">import</span> <span class=\"n\">Session</span>\n\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">Session</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Session created with id : </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">session_id</span><span class=\"p\">))</span>\n</pre>\n<p>This returns the API key needed to authenticate all subsequent requests. That is why the <code>Session</code> instance has to be passed in to other all other objects methods.</p>\n<h3>Account</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymasmovil.models.account</span> <span class=\"kn\">import</span> <span class=\"n\">Account</span>\n\n<span class=\"n\">account_id</span> <span class=\"o\">=</span> <span class=\"s1\">'0017E000017pEo3QAE'</span>\n<span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"n\">account_id</span><span class=\"p\">)</span>\n</pre>\n<p>To create a new account we need to use <code>Account.create</code> passing the account data as keyword arguments. The <code>Account</code> attributes are listed bellow. Note they are all strings.</p>\n<pre><code>town, surname, stair, roadType, roadNumber, roadName, region, province, postalCode, phone, name, id, flat, email, door, donorCountry, documentType, documentNumber, corporateName, buildingPortal\n</code></pre>\n<p>No attribute is mandatory for the client leaving parameter validation to the API.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymasmovil.models.account</span> <span class=\"kn\">import</span> <span class=\"n\">Account</span>\n\n<span class=\"n\">account</span> <span class=\"o\">=</span> <span class=\"n\">Account</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"n\">town</span><span class=\"o\">=</span><span class=\"s1\">'Barcelona'</span><span class=\"p\">,</span> <span class=\"n\">surname</span><span class=\"o\">=</span><span class=\"s1\">'Garcia'</span><span class=\"p\">,</span> <span class=\"n\">phone</span><span class=\"o\">=</span><span class=\"s1\">'616010101'</span><span class=\"p\">)</span>\n</pre>\n<h3>OrderItem</h3>\n<p>Order items can be accessed the same way as accounts:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymasmovil.models.order_items.py</span> <span class=\"kn\">import</span> <span class=\"n\">OrderItem</span>\n\n<span class=\"n\">order_item_id</span> <span class=\"o\">=</span> <span class=\"s1\">'8028E34500215wgQAA'</span>\n<span class=\"n\">order_item</span> <span class=\"o\">=</span> <span class=\"n\">OrderItem</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"n\">order_item_id</span><span class=\"p\">)</span>\n</pre>\n<p>Currently, order items can be created following the account creation example, but the structure of their attributes is a bit more complex.</p>\n<p>Since <code>GET /order-item/:id</code> response and the <code>POST /accounts/:id/order-items</code> request don't match except for a few attributes, order item creation is then designed to opimistically build an <code>OrderItem</code> instance based on the attributes inferred from the POST body. M\u00e1sM\u00f3vil's API doesn't return the whole resource as one would expect with a REST API. That is why <code>OrderItem</code>'s <code>create</code> input data structure won't directly match an <code>OrderItem</code> attributes.</p>\n<p>The minimum structure is presented as the variable <code>sample-order-item-post-request</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymasmovil.models.order_items.py</span> <span class=\"kn\">import</span> <span class=\"n\">OrderItem</span>\n\n<span class=\"n\">order_item_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'lineInfo'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Antonio'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'surname'</span><span class=\"p\">:</span> <span class=\"s1\">'Garcia'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'phoneNumber'</span><span class=\"p\">:</span> <span class=\"s1\">'616010101'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'documentType'</span><span class=\"p\">:</span> <span class=\"s1\">'NIF'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'portabilityDate'</span><span class=\"p\">:</span> <span class=\"s1\">'2020-02-06'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'iccid_donante'</span><span class=\"p\">:</span> <span class=\"s1\">'8934046318031035245'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'iccid'</span><span class=\"p\">:</span> <span class=\"s1\">'8934046318031035250'</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">order_item</span> <span class=\"o\">=</span> <span class=\"n\">OrderItem</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"n\">order_item_data</span><span class=\"p\">)</span>\n</pre>\n<h2>Development</h2>\n<h3>Python version</h3>\n<p>We use <a href=\"https://github.com/pyenv/pyenv\" rel=\"nofollow\">Pyenv</a> to fix the Python version and the virtualenv to develop the package.</p>\n<p>You need to:</p>\n<ul>\n<li>Install and configure <a href=\"https://github.com/pyenv/pyenv\" rel=\"nofollow\"><code>pyenv</code></a></li>\n<li>Install and configure <a href=\"https://github.com/pyenv/pyenv-virtualenv\" rel=\"nofollow\"><code>pyenv-virtualenv</code></a></li>\n<li>Install the required Python version:</li>\n</ul>\n<pre><code>$ pyenv install 3.8.2\n</code></pre>\n<ul>\n<li>Create the virtualenv:</li>\n</ul>\n<pre><code>$ pyenv virtualenv 3.8.2 pymasmovil\n</code></pre>\n<h3>Python packages requirements</h3>\n<p>Install the Python packages in the virtual environment:</p>\n<pre><code>$ pyenv exec pip install -r requirements.txt\n</code></pre>\n<h2>License</h2>\n<p>TBD</p>\n\n          </div>"}, "last_serial": 6985176, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "8a75b2f46c580c57ce02b16c82f0638c", "sha256": "47e6fbe9b31ea2b009202723f84fb903c36cf4964a556df041f955848c806f06"}, "downloads": -1, "filename": "pymasmovil-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8a75b2f46c580c57ce02b16c82f0638c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7622, "upload_time": "2020-04-01T10:59:37", "upload_time_iso_8601": "2020-04-01T10:59:37.646842Z", "url": "https://files.pythonhosted.org/packages/c5/71/ac0e1510f3af220ec64421d061650583ca9f7b2b2b28d9982ca33e722942/pymasmovil-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de146023a53a1cd9ba59bb048cbc87c5", "sha256": "9d2aca98900afdf8a0c54ed0902a37752b2ec5aacd4324aa0048972470c04107"}, "downloads": -1, "filename": "pymasmovil-0.0.1.tar.gz", "has_sig": false, "md5_digest": "de146023a53a1cd9ba59bb048cbc87c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7430, "upload_time": "2020-04-01T10:59:39", "upload_time_iso_8601": "2020-04-01T10:59:39.729057Z", "url": "https://files.pythonhosted.org/packages/80/8b/23d13bd74d7fbbaf9ddb7cf1ab3a99d87b4b7cbc092c8f37debd470e4b2d/pymasmovil-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "a87ec11cded4e3bbfdd0cc04004b7423", "sha256": "1744835b5b0ce9eb8b3d69135314205a8a37d5416ae2aecf14995de16c0cd3fa"}, "downloads": -1, "filename": "pymasmovil-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a87ec11cded4e3bbfdd0cc04004b7423", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8380, "upload_time": "2020-04-09T11:27:01", "upload_time_iso_8601": "2020-04-09T11:27:01.252866Z", "url": "https://files.pythonhosted.org/packages/c3/9e/9ea53b55024bd0b7bd0f431af2c4723bb18ebed4ad32ab76ed2a4d35bceb/pymasmovil-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac82d55d954bfa26ab78a9b43cba2ac8", "sha256": "2d307d95eb27a254081c794b776ecfe2c120784459f4045ccc222e97762fdea2"}, "downloads": -1, "filename": "pymasmovil-0.0.2.tar.gz", "has_sig": false, "md5_digest": "ac82d55d954bfa26ab78a9b43cba2ac8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7978, "upload_time": "2020-04-09T11:27:02", "upload_time_iso_8601": "2020-04-09T11:27:02.979031Z", "url": "https://files.pythonhosted.org/packages/0f/34/29951a19c39f5868f61c67c76cbeca9cc561c6f0e5673095006d0623ab3a/pymasmovil-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a87ec11cded4e3bbfdd0cc04004b7423", "sha256": "1744835b5b0ce9eb8b3d69135314205a8a37d5416ae2aecf14995de16c0cd3fa"}, "downloads": -1, "filename": "pymasmovil-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a87ec11cded4e3bbfdd0cc04004b7423", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8380, "upload_time": "2020-04-09T11:27:01", "upload_time_iso_8601": "2020-04-09T11:27:01.252866Z", "url": "https://files.pythonhosted.org/packages/c3/9e/9ea53b55024bd0b7bd0f431af2c4723bb18ebed4ad32ab76ed2a4d35bceb/pymasmovil-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac82d55d954bfa26ab78a9b43cba2ac8", "sha256": "2d307d95eb27a254081c794b776ecfe2c120784459f4045ccc222e97762fdea2"}, "downloads": -1, "filename": "pymasmovil-0.0.2.tar.gz", "has_sig": false, "md5_digest": "ac82d55d954bfa26ab78a9b43cba2ac8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7978, "upload_time": "2020-04-09T11:27:02", "upload_time_iso_8601": "2020-04-09T11:27:02.979031Z", "url": "https://files.pythonhosted.org/packages/0f/34/29951a19c39f5868f61c67c76cbeca9cc561c6f0e5673095006d0623ab3a/pymasmovil-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:30 2020"}