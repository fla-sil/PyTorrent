{"info": {"author": "Jonas Steur", "author_email": "jonas.steur@unleashed.be", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3 :: Only"], "description": "[![Coverage Status](https://coveralls.io/repos/github/vikingco/wingmonkey/badge.svg?branch=master)](https://coveralls.io/github/vikingco/wingmonkey?branch=master)\n[![CI Status](https://travis-ci.org/vikingco/wingmonkey.svg?branch=master)](https://travis-ci.org/vikingco/wingmonkey)\n\n# wingmonkey\nmailchimp api v3 client\n\nmailchimp v3 api reference documentation: http://developer.mailchimp.com/documentation/mailchimp/reference/overview/\n\n\n### Settings\n\nTo be able to make calls to mailchimp without having to initialize a custom MailChimpSession yourself make sure that at least following environment variable is set (or added to a .env file):\n\n```python\nDEFAULT_MAILCHIMP_API_KEY=<YOUR MAILCHIMP API KEY> \n\n\n```\n\nFor more advanced usage you can pass a custom MailChimpSession to the serializers and functions:\n\n```\nfrom wingmonkey.mailchimp_session import MailChimpSession\nfrom wingmonkey.lists import ListSerializer\n\nsession = MailChimpSession(api_endpoint=<YOUR MAILCHIMP BASE URL>, api_key=<YOUR MAILCHIMP API KEY>)\nlist_serializer = ListSerializer(session=session)\n\n```\n\n### Some more usage examples:\n\n#### getting list info\n\n```python\nfrom wingmonkey.lists import ListSerializer\n\nlist_serializer = ListSerializer()\nlist_id = 'A_VALID_LIST_ID'\n\nmy_list = list_serializer.read(list_id=list_id)\n\nname = my_list.name\ntotal_subscribers = my_list.stats['member_count']\nunsubscribe_count = my_list.stats['unsubscribe_count']\n```\n#### creating new member\n\n```python\nfrom wingmonkey.members import Member, MemberSerializer\n\nemail_address = 'monkeysee@monkey.do'\nmerge_fields = {FNAME: 'Ceasar', LNAME: 'Chimp'}\nlanguage = 'en'\nlist_id = 'A_VALID_LIST_ID'\n\nmember_to_add = Member(\n                       email_address=email_address, \n                       merge_fields=merge_fields, \n                       language=language, \n                       list_id=list_id\n                       )\n\nmember_serializer = MemberSerializer()\n\nnewly_added_member = member_serializer.create(list_id=list_id, instance=member_to_add)\n```\n\n#### get all members of a list\n\n```python\n\nfrom wingmonkey.async_operations import get_all_members_async\nfrom datetime import datetime, timedelta\n\nlist_id = 'A_VALID_LIST_ID'\n```\n\n* all members\n```python\nall_list_members = get_all_members_async(list_id=list_id)\n```\n\n* all members updated since specific date (take care to use the correct string format for datetime)\n```python\ndate_since = datetime.strftime(datetime.now() - timedelta(days=1), '%Y-%m-%dT%H:%M:%S')\nextra_params = {'since_last_changed': date_since }\nall_updated_members_since_yesterday = get_all_members_async(list_id=list_id, extra_params=extra_params)\n```\n\n#### batch update of a large list of members \n* This will return a list of corresponding batch operation resources (1 for every 500 members)\nhttp://developer.mailchimp.com/documentation/mailchimp/reference/batches/#create-post_batches\nhttp://developer.mailchimp.com/documentation/mailchimp/reference/lists/#create-post_lists_list_id\n\n```python\nfrom wingmonkey.async_operations import batch_update_members_async\nlist_id = 'A_VALID_LIST_ID'\nmember_list = [A_LIST_OF_MEMBER_INSTANCES]\n\nbatch_operation_resource_list = batch_update_members_async(list_id=list_id, member_list=member_list)\n```\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vikingco/wingmonkey", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "wingmonkey", "package_url": "https://pypi.org/project/wingmonkey/", "platform": "", "project_url": "https://pypi.org/project/wingmonkey/", "project_urls": {"Homepage": "https://github.com/vikingco/wingmonkey"}, "release_url": "https://pypi.org/project/wingmonkey/0.1.21/", "requires_dist": ["requests (==2.20.0)", "aiohttp (==2.2.5)", "async-timeout (==1.2.1)", "chardet (==3.0.4)", "multidict (==3.1.3)", "yarl (==0.12.0)", "django-environ (==0.4.3)", "marshmallow (==v3.0.0b2)"], "requires_python": "", "summary": "mailchimp api v3 client", "version": "0.1.21", "yanked": false, "html_description": "<div class=\"project-description\">\n            [![Coverage Status](https://coveralls.io/repos/github/vikingco/wingmonkey/badge.svg?branch=master)](https://coveralls.io/github/vikingco/wingmonkey?branch=master)<br>[![CI Status](https://travis-ci.org/vikingco/wingmonkey.svg?branch=master)](https://travis-ci.org/vikingco/wingmonkey)<br><br># wingmonkey<br>mailchimp api v3 client<br><br>mailchimp v3 api reference documentation: http://developer.mailchimp.com/documentation/mailchimp/reference/overview/<br><br><br>### Settings<br><br>To be able to make calls to mailchimp without having to initialize a custom MailChimpSession yourself make sure that at least following environment variable is set (or added to a .env file):<br><br>```python<br>DEFAULT_MAILCHIMP_API_KEY=&lt;YOUR MAILCHIMP API KEY&gt; <br><br><br>```<br><br>For more advanced usage you can pass a custom MailChimpSession to the serializers and functions:<br><br>```<br>from wingmonkey.mailchimp_session import MailChimpSession<br>from wingmonkey.lists import ListSerializer<br><br>session = MailChimpSession(api_endpoint=&lt;YOUR MAILCHIMP BASE URL&gt;, api_key=&lt;YOUR MAILCHIMP API KEY&gt;)<br>list_serializer = ListSerializer(session=session)<br><br>```<br><br>### Some more usage examples:<br><br>#### getting list info<br><br>```python<br>from wingmonkey.lists import ListSerializer<br><br>list_serializer = ListSerializer()<br>list_id = 'A_VALID_LIST_ID'<br><br>my_list = list_serializer.read(list_id=list_id)<br><br>name = my_list.name<br>total_subscribers = my_list.stats['member_count']<br>unsubscribe_count = my_list.stats['unsubscribe_count']<br>```<br>#### creating new member<br><br>```python<br>from wingmonkey.members import Member, MemberSerializer<br><br>email_address = 'monkeysee@monkey.do'<br>merge_fields = {FNAME: 'Ceasar', LNAME: 'Chimp'}<br>language = 'en'<br>list_id = 'A_VALID_LIST_ID'<br><br>member_to_add = Member(<br>                       email_address=email_address, <br>                       merge_fields=merge_fields, <br>                       language=language, <br>                       list_id=list_id<br>                       )<br><br>member_serializer = MemberSerializer()<br><br>newly_added_member = member_serializer.create(list_id=list_id, instance=member_to_add)<br>```<br><br>#### get all members of a list<br><br>```python<br><br>from wingmonkey.async_operations import get_all_members_async<br>from datetime import datetime, timedelta<br><br>list_id = 'A_VALID_LIST_ID'<br>```<br><br>* all members<br>```python<br>all_list_members = get_all_members_async(list_id=list_id)<br>```<br><br>* all members updated since specific date (take care to use the correct string format for datetime)<br>```python<br>date_since = datetime.strftime(datetime.now() - timedelta(days=1), '%Y-%m-%dT%H:%M:%S')<br>extra_params = {'since_last_changed': date_since }<br>all_updated_members_since_yesterday = get_all_members_async(list_id=list_id, extra_params=extra_params)<br>```<br><br>#### batch update of a large list of members <br>* This will return a list of corresponding batch operation resources (1 for every 500 members)<br>http://developer.mailchimp.com/documentation/mailchimp/reference/batches/#create-post_batches<br>http://developer.mailchimp.com/documentation/mailchimp/reference/lists/#create-post_lists_list_id<br><br>```python<br>from wingmonkey.async_operations import batch_update_members_async<br>list_id = 'A_VALID_LIST_ID'<br>member_list = [A_LIST_OF_MEMBER_INSTANCES]<br><br>batch_operation_resource_list = batch_update_members_async(list_id=list_id, member_list=member_list)<br>```<br><br><br>\n          </div>"}, "last_serial": 5164043, "releases": {"0.1.18": [{"comment_text": "", "digests": {"md5": "9ad110717f0fc9b2e5f106da018ecb95", "sha256": "f768993a71de4a37d58410d1c5762ac54871d3e9a264f9c86aabc61a87dc1d2c"}, "downloads": -1, "filename": "wingmonkey-0.1.18-py3-none-any.whl", "has_sig": false, "md5_digest": "9ad110717f0fc9b2e5f106da018ecb95", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39665, "upload_time": "2019-04-19T08:57:00", "upload_time_iso_8601": "2019-04-19T08:57:00.709950Z", "url": "https://files.pythonhosted.org/packages/04/2a/17b474fc2a5a91df2615e91a39a1b039202dd8dfee4253d2211cf0a66cac/wingmonkey-0.1.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2094af39ccebb3e16b6aa0315331bf6", "sha256": "3e85a0fc96bf415763b70e0e8d0be2f8d494deabbbacadf6f4f667a951294111"}, "downloads": -1, "filename": "wingmonkey-0.1.18.tar.gz", "has_sig": false, "md5_digest": "c2094af39ccebb3e16b6aa0315331bf6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28589, "upload_time": "2019-04-19T08:57:03", "upload_time_iso_8601": "2019-04-19T08:57:03.969214Z", "url": "https://files.pythonhosted.org/packages/6f/ca/d91451dc7a65756baac59b64dcd4b862f3a612bdaac01639b1843ee79e3d/wingmonkey-0.1.18.tar.gz", "yanked": false}], "0.1.21": [{"comment_text": "", "digests": {"md5": "77b60de6991568e722ab12cb368fa6ef", "sha256": "2c6653dc59dba701cb33253772ce66ac407db20763a55a27be6873251679367f"}, "downloads": -1, "filename": "wingmonkey-0.1.21-py3-none-any.whl", "has_sig": false, "md5_digest": "77b60de6991568e722ab12cb368fa6ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39664, "upload_time": "2019-04-19T08:57:02", "upload_time_iso_8601": "2019-04-19T08:57:02.353174Z", "url": "https://files.pythonhosted.org/packages/b7/a4/7e11cb17509172794f148f82484fefd74a7a928a50bee2dadb2553bfbe59/wingmonkey-0.1.21-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6939fc1c3180955d6cc540f0cc7eeba", "sha256": "f5b7c2b00fc42ee13758d1fd9d178491a727564ef5dcb8a5e6da708b990cf85d"}, "downloads": -1, "filename": "wingmonkey-0.1.21.tar.gz", "has_sig": false, "md5_digest": "b6939fc1c3180955d6cc540f0cc7eeba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28598, "upload_time": "2019-04-19T08:57:05", "upload_time_iso_8601": "2019-04-19T08:57:05.586267Z", "url": "https://files.pythonhosted.org/packages/9e/d1/1721f585134342403bd7e45a165ae0a4687983b23648631bdee17f89245f/wingmonkey-0.1.21.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "367ec8b75d9d227a0abe0e41da06ff18", "sha256": "f7b5d5627732442e21e67c067c672b8a1ee88d6329e2fb9bb4e115ed0ea2a82e"}, "downloads": -1, "filename": "wingmonkey-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "367ec8b75d9d227a0abe0e41da06ff18", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 36228, "upload_time": "2017-09-26T11:32:23", "upload_time_iso_8601": "2017-09-26T11:32:23.466755Z", "url": "https://files.pythonhosted.org/packages/40/ee/b1702af56df43eb65e5d6768cbd49b6eaa3b3f1eeea56a109144bdc1e094/wingmonkey-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "992e648858b4bdaac190c36772e9b072", "sha256": "17d95f3f705e9261547ae77fe4c67d43afac5f76675ab518827ac8d38dfae071"}, "downloads": -1, "filename": "wingmonkey-0.1.4.tar.gz", "has_sig": false, "md5_digest": "992e648858b4bdaac190c36772e9b072", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23670, "upload_time": "2017-09-26T11:32:21", "upload_time_iso_8601": "2017-09-26T11:32:21.567118Z", "url": "https://files.pythonhosted.org/packages/82/bb/189913753882dc562e96184288bedab2b75a24a9e25ff7dcc6e1c4c684b2/wingmonkey-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "77b60de6991568e722ab12cb368fa6ef", "sha256": "2c6653dc59dba701cb33253772ce66ac407db20763a55a27be6873251679367f"}, "downloads": -1, "filename": "wingmonkey-0.1.21-py3-none-any.whl", "has_sig": false, "md5_digest": "77b60de6991568e722ab12cb368fa6ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39664, "upload_time": "2019-04-19T08:57:02", "upload_time_iso_8601": "2019-04-19T08:57:02.353174Z", "url": "https://files.pythonhosted.org/packages/b7/a4/7e11cb17509172794f148f82484fefd74a7a928a50bee2dadb2553bfbe59/wingmonkey-0.1.21-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6939fc1c3180955d6cc540f0cc7eeba", "sha256": "f5b7c2b00fc42ee13758d1fd9d178491a727564ef5dcb8a5e6da708b990cf85d"}, "downloads": -1, "filename": "wingmonkey-0.1.21.tar.gz", "has_sig": false, "md5_digest": "b6939fc1c3180955d6cc540f0cc7eeba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28598, "upload_time": "2019-04-19T08:57:05", "upload_time_iso_8601": "2019-04-19T08:57:05.586267Z", "url": "https://files.pythonhosted.org/packages/9e/d1/1721f585134342403bd7e45a165ae0a4687983b23648631bdee17f89245f/wingmonkey-0.1.21.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:56 2020"}