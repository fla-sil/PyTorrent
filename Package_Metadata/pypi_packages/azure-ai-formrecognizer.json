{"info": {"author": "Microsoft Corporation", "author_email": "azpysdkhelp@microsoft.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Azure Form Recognizer client library for Python\n\nAzure Cognitive Services Form Recognizer is a cloud service that uses machine learning to recognize text and table data\nfrom form documents. It includes the following main functionalities:\n\n* Custom models - Recognize field values and table data from forms. These models are trained with your own data, so they're tailored to your forms. You can then take these custom models and recognize forms. You can also manage the custom models you've created and see how close you are to the limit of custom models your account can hold.\n* Content API - Recognize text and table structures, along with their bounding box coordinates, from documents. Corresponds to the REST service's Layout API.\n* Prebuilt receipt model - Recognize data from USA sales receipts using a prebuilt model.\n\n[Source code][python-fr-src] | [Package (PyPI)][python-fr-pypi] | [API reference documentation][python-fr-ref-docs]| [Product documentation][python-fr-product-docs] | [Samples][python-fr-samples]\n\n## Getting started\n\n### Prerequisites\n* Python 2.7, or 3.5 or later is required to use this package.\n* You must have an [Azure subscription][azure_subscription] and a\n[Cognitive Services or Form Recognizer resource][FR_or_CS_resource] to use this package.\n\n### Install the package\nInstall the Azure Form Recognizer client library for Python with [pip][pip]:\n\n```bash\npip install azure-ai-formrecognizer\n```\n\n> Note: This version of the client library supports the v2.0-preview version of the Form Recognizer service\n\n### Create a Form Recognizer resource\nForm Recognizer supports both [multi-service and single-service access][multi_and_single_service].\nCreate a Cognitive Services resource if you plan to access multiple cognitive services under a single endpoint/key. For Form Recognizer access only, create a Form Recognizer resource.\n\nYou can create the resource using\n\n**Option 1:** [Azure Portal][azure_portal_create_FR_resource]\n\n**Option 2:** [Azure CLI][azure_cli_create_FR_resource].\nBelow is an example of how you can create a Form Recognizer resource using the CLI:\n\n```bash\n# Create a new resource group to hold the form recognizer resource -\n# if using an existing resource group, skip this step\naz group create --name my-resource-group --location westus2\n```\n\n```bash\n# Create form recognizer\naz cognitiveservices account create \\\n    --name form-recognizer-resource \\\n    --resource-group my-resource-group \\\n    --kind FormRecognizer \\\n    --sku F0 \\\n    --location westus2 \\\n    --yes\n```\n\n### Authenticate the client\n\n#### Looking up the endpoint\nYou can find the endpoint for your form recognizer resource using the\n[Azure Portal][azure_portal_get_endpoint]\nor [Azure CLI][azure_cli_endpoint_lookup]:\n\n```bash\n# Get the endpoint for the form recognizer resource\naz cognitiveservices account show --name \"resource-name\" --resource-group \"resource-group-name\" --query \"endpoint\"\n```\n\n#### Types of credentials\nThe `credential` parameter may be provided as a [AzureKeyCredential][azure-key-credential] from [azure.core][azure_core].\nSee the full details regarding [authentication][cognitive_authentication] of cognitive services.\n\nTo use an [API key][cognitive_authentication_api_key],\npass the key as a string into an instance of `AzureKeyCredential(\"<api_key>\")`.\nThe API key can be found in the Azure Portal or by running the following Azure CLI command:\n\n```az cognitiveservices account keys list --name \"resource-name\" --resource-group \"resource-group-name\"```\n\nUse the key as the credential parameter to authenticate the client:\n```python\nfrom azure.ai.formrecognizer import FormRecognizerClient\nfrom azure.core.credentials import AzureKeyCredential\n\nendpoint = \"https://<region>.api.cognitive.microsoft.com/\"\ncredential = AzureKeyCredential(\"<api_key>\")\nform_recognizer_client = FormRecognizerClient(endpoint, credential)\n```\n\n## Key concepts\n\n### FormRecognizerClient\n`FormRecognizerClient` provides operations for:\n\n - Recognizing form fields and content using custom models trained to recognize your custom forms. These values are returned in a collection of `RecognizedForm` objects.\n - Recognizing form content, including tables, lines and words, without the need to train a model. Form content is returned in a collection of `FormPage` objects.\n - Recognizing common fields from US receipts, using a pre-trained receipt model on the Form Recognizer service. These fields and meta-data are returned in a collection of `USReceipt` objects.\n\n### FormTrainingClient\n`FormTrainingClient` provides operations for:\n\n- Training custom models to recognize all fields and values found in your custom forms. A `CustomFormModel` is returned indicating the form types the model will recognize, and the fields it will extract for each form type. See the [service's documents][fr-train-without-labels] for a more detailed explanation.\n- Training custom models to recognize specific fields and values you specify by labeling your custom forms. A `CustomFormModel` is returned indicating the fields the model will extract, as well as the estimated accuracy for each field. See the [service's documents][fr-train-with-labels] for a more detailed explanation.\n- Managing models created in your account.\n\nPlease note that models can also be trained using a graphical user interface such as the [Form Recognizer Labeling Tool][fr-labeling-tool].\n### Long-Running Operations\nLong-running operations are operations which consist of an initial request sent to the service to start an operation,\nfollowed by polling the service at intervals to determine whether the operation has completed or failed, and if it has\nsucceeded, to get the result.\n\nMethods that train models or recognize values from forms are modeled as long-running operations. The client exposes\na `begin_<method-name>` method that returns an `LROPoller`. Callers should wait for the operation to complete by\ncalling `result()` on the operation returned from the `begin_<method-name>` method. Sample code snippets are provided\nto illustrate using long-running operations [below](#examples \"Examples\").\n\n\n## Examples\n\nThe following section provides several code snippets covering some of the most common Form Recognizer tasks, including:\n\n* [Recognize Forms Using a Custom Model](#recognize-forms-using-a-custom-model \"Recognize Forms Using a Custom Model\")\n* [Recognize Content](#recognize-content \"Recognize Content\")\n* [Recognize Receipts](#recognize-receipts \"Recognize receipts\")\n* [Train a Model](#train-a-model \"Train a model\")\n* [Manage Your Models](#manage-your-models \"Manage Your Models\")\n\n### Recognize Forms Using a Custom Model\nRecognize name/value pairs and table data from forms. These models are trained with your own data, so they're tailored to your forms. You should only recognize forms of the same form type that the custom model was trained on.\n\n```python\nfrom azure.ai.formrecognizer import FormRecognizerClient\nfrom azure.core.credentials import AzureKeyCredential\n\nendpoint = \"https://<region>.api.cognitive.microsoft.com/\"\ncredential = AzureKeyCredential(\"<api_key>\")\n\nform_recognizer_client = FormRecognizerClient(endpoint, credential)\nmodel_id = \"<your custom model id>\"\n\n# Make sure the form type is one of the types of forms your custom model can recognize\nwith open(\"<path to your form>\", \"rb\") as fd:\n    form = fd.read()\n\npoller = form_recognizer_client.begin_recognize_custom_forms(model_id=model_id, stream=form)\nresult = poller.result()\n\nfor recognized_form in result:\n    print(\"Form type ID: {}\".format(recognized_form.form_type))\n    for label, field in recognized_form.fields.items():\n        print(\"Field '{}' has value '{}' with a confidence score of {}\".format(\n            label, field.value, field.confidence\n        ))\n```\n\n### Recognize Content\nRecognize text and table structures, along with their bounding box coordinates, from documents.\n\n```python\nfrom azure.ai.formrecognizer import FormRecognizerClient\nfrom azure.core.credentials import AzureKeyCredential\n\nendpoint = \"https://<region>.api.cognitive.microsoft.com/\"\ncredential = AzureKeyCredential(\"<api_key>\")\n\nform_recognizer_client = FormRecognizerClient(endpoint, credential)\n\nwith open(\"<path to your form>\", \"rb\") as fd:\n    form = fd.read()\n\npoller = form_recognizer_client.begin_recognize_content(form)\npage = poller.result()\n\ntable = page[0].tables[0] # page 1, table 1\nfor cell in table.cells:\n    print(cell.text)\n    print(cell.bounding_box)\n    print(cell.confidence)\n```\n\n### Recognize Receipts\nRecognize data from USA sales receipts using a prebuilt model.\n\n```python\nfrom azure.ai.formrecognizer import FormRecognizerClient\nfrom azure.core.credentials import AzureKeyCredential\n\nendpoint = \"https://<region>.api.cognitive.microsoft.com/\"\ncredential = AzureKeyCredential(\"<api_key>\")\n\nform_recognizer_client = FormRecognizerClient(endpoint, credential)\n\nwith open(\"<path to your receipt>\", \"rb\") as fd:\n    receipt = fd.read()\n\npoller = form_recognizer_client.begin_recognize_receipts(receipt)\nresult = poller.result()\n\nr = result[0]\nprint(\"Receipt contained the following values with confidences: \")\nprint(\"Receipt Type: {} has confidence: {}\".format(r.receipt_type.type, r.receipt_type.confidence))\nprint(\"Merchant Name: {} has confidence: {}\".format(r.merchant_name.value, r.merchant_name.confidence))\nprint(\"Transaction Date: {} has confidence: {}\".format(r.transaction_date.value, r.transaction_date.confidence))\nprint(\"Receipt items:\")\nfor item in r.receipt_items:\n    print(\"...Item Name: {} has confidence: {}\".format(item.name.value, item.name.confidence))\n    print(\"...Item Quantity: {} has confidence: {}\".format(item.quantity.value, item.quantity.confidence))\n    print(\"...Individual Item Price: {} has confidence: {}\".format(item.price.value, item.price.confidence))\n    print(\"...Total Item Price: {} has confidence: {}\".format(item.total_price.value, item.total_price.confidence))\nprint(\"Subtotal: {} has confidence: {}\".format(r.subtotal.value, r.subtotal.confidence))\nprint(\"Tax: {} has confidence: {}\".format(r.tax.value, r.tax.confidence))\nprint(\"Tip: {} has confidence: {}\".format(r.tip.value, r.tip.confidence))\nprint(\"Total: {} has confidence: {}\".format(r.total.value, r.total.confidence))\n```\n\n### Train a model\nTrain a machine-learned model on your own form type. The resulting model will be able to recognize values from the types of forms it was trained on.\nProvide a container SAS url to your Azure Storage Blob container where you're storing the training documents. See details on setting this up\nin the [service quickstart documentation][quickstart_training].\n\n```python\nfrom azure.ai.formrecognizer import FormTrainingClient\nfrom azure.core.credentials import AzureKeyCredential\n\nendpoint = \"https://<region>.api.cognitive.microsoft.com/\"\ncredential = AzureKeyCredential(\"<api_key>\")\n\nform_training_client = FormTrainingClient(endpoint, credential)\n\ncontainer_sas_url = \"xxx\"  # training documents uploaded to blob storage\npoller = form_training_client.begin_train_model(container_sas_url)\nmodel = poller.result()\n\n# Custom model information\nprint(\"Model ID: {}\".format(model.model_id))\nprint(\"Status: {}\".format(model.status))\nprint(\"Created on: {}\".format(model.created_on))\nprint(\"Last modified: {}\".format(model.last_modified))\n\nprint(\"Recognized fields:\")\n# looping through the submodels, which contains the fields they were trained on\nfor submodel in model.models:\n    print(\"The submodel with form type '{}' has recognized the following fields: {}\".format(\n        submodel.form_type,\n        \", \".join([label for label in submodel.fields])\n    ))\n\n# Training result information\nfor doc in model.training_documents:\n    print(\"Document name: {}\".format(doc.document_name))\n    print(\"Document status: {}\".format(doc.status))\n    print(\"Document page count: {}\".format(doc.page_count))\n    print(\"Document errors: {}\".format(doc.errors))\n```\n\n### Manage Your Models\nManage the custom models attached to your account.\n\n```python\nfrom azure.ai.formrecognizer import FormTrainingClient\nfrom azure.core.credentials import AzureKeyCredential\nfrom azure.core.exceptions import ResourceNotFoundError\n\nendpoint = \"https://<region>.api.cognitive.microsoft.com/\"\ncredential = AzureKeyCredential(\"<api_key>\")\n\nform_training_client = FormTrainingClient(endpoint, credential)\n\naccount_properties = form_training_client.get_account_properties()\nprint(\"Our account has {} custom models, and we can have at most {} custom models\".format(\n    account_properties.custom_model_count, account_properties.custom_model_limit\n))\n\n# Here we get a paged list of all of our custom models\ncustom_models = form_training_client.list_model_infos()\nprint(\"We have models with the following ids: {}\".format(\n    \", \".join([m.model_id for m in custom_models])\n))\n\n# Now we get the custom model from the \"Train a model\" sample\nmodel_id = \"<model id from the Train a Model sample>\"\n\ncustom_model = form_training_client.get_custom_model(model_id=model_id)\nprint(\"Model ID: {}\".format(custom_model.model_id))\nprint(\"Status: {}\".format(custom_model.status))\nprint(\"Created on: {}\".format(custom_model.created_on))\nprint(\"Last modified: {}\".format(custom_model.last_modified))\n\n# Finally, we will delete this model by ID\nform_training_client.delete_model(model_id=custom_model.model_id)\n\ntry:\n    form_training_client.get_custom_model(model_id=custom_model.model_id)\nexcept ResourceNotFoundError:\n    print(\"Successfully deleted model with id {}\".format(custom_model.model_id))\n```\n\n## Optional Configuration\n\nOptional keyword arguments can be passed in at the client and per-operation level.\nThe azure-core [reference documentation][azure_core_ref_docs]\ndescribes available configurations for retries, logging, transport protocols, and more.\n\n## Troubleshooting\n\n### General\nForm Recognizer client library will raise exceptions defined in [Azure Core][azure_core_ref_docs].\n\n### Logging\nThis library uses the standard\n[logging][python_logging] library for logging.\nBasic information about HTTP sessions (URLs, headers, etc.) is logged at INFO\nlevel.\n\nDetailed DEBUG level logging, including request/response bodies and unredacted\nheaders, can be enabled on a client with the `logging_enable` keyword argument:\n```python\nimport sys\nimport logging\nfrom azure.ai.formrecognizer import FormRecognizerClient\nfrom azure.core.credentials import AzureKeyCredential\n\n# Create a logger for the 'azure' SDK\nlogger = logging.getLogger('azure')\nlogger.setLevel(logging.DEBUG)\n\n# Configure a console output\nhandler = logging.StreamHandler(stream=sys.stdout)\nlogger.addHandler(handler)\n\nendpoint = \"https://<my-custom-subdomain>.cognitiveservices.azure.com/\"\ncredential = AzureKeyCredential(\"<api_key>\")\n\n# This client will log detailed information about its HTTP sessions, at DEBUG level\nform_recognizer_client = FormRecognizerClient(endpoint, credential, logging_enable=True)\n```\n\nSimilarly, `logging_enable` can enable detailed logging for a single operation,\neven when it isn't enabled for the client:\n```python\npoller = form_recognizer_client.begin_recognize_receipts(receipt, logging_enable=True)\n```\n\n## Next steps\n\nThe following section provides several code snippets illustrating common patterns used in the Form Recognizer Python API.\n\n### More sample code\n\nThese code samples show common scenario operations with the Azure Form Recognizer client library.\nThe async versions of the samples (the python sample files appended with `_async`) show asynchronous operations\nwith Form Recognizer and require Python 3.5 or later.\n\n* Recognize receipts: [sample_recognize_receipts.py][sample_recognize_receipts] ([async version][sample_recognize_receipts_async])\n* Recognize receipts from a URL: [sample_recognize_receipts_from_url.py][sample_recognize_receipts_from_url] ([async version][sample_recognize_receipts_from_url_async])\n* Recognize content: [sample_recognize_content.py][sample_recognize_content] ([async version][sample_recognize_content_async])\n* Recognize custom forms: [sample_recognize_custom_forms.py][sample_recognize_custom_forms] ([async version][sample_recognize_custom_forms_async])\n* Train a model without labels: [sample_train_model_without_labels.py][sample_train_model_without_labels] ([async version][sample_train_model_without_labels_async])\n* Train a model with labels: [sample_train_model_with_labels.py][sample_train_model_with_labels] ([async version][sample_train_model_with_labels_async])\n* Manage custom models: [sample_manage_custom_models.py][sample_manage_custom_models] ([async_version][sample_manage_custom_models_async])\n\n### Additional documentation\n\nFor more extensive documentation on Azure Cognitive Services Form Recognizer, see the [Form Recognizer documentation][python-fr-product-docs] on docs.microsoft.com.\n\n## Contributing\nThis project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit [cla.microsoft.com][cla].\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct][code_of_conduct]. For more information see the [Code of Conduct FAQ][coc_faq] or contact [opencode@microsoft.com][coc_contact] with any additional questions or comments.\n\n<!-- LINKS -->\n\n[python-fr-src]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/azure/ai/formrecognizer\n[python-fr-pypi]: https://pypi.org/project/azure-ai-formrecognizer/\n[python-fr-product-docs]: https://docs.microsoft.com/en-us/azure/cognitive-services/form-recognizer/overview\n[python-fr-ref-docs]: https://aka.ms/azsdk-python-formrecognizer-ref-docs\n[python-fr-samples]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples\n\n\n[quickstart_training]: https://docs.microsoft.com/azure/cognitive-services/form-recognizer/quickstarts/curl-train-extract#train-a-form-recognizer-model\n[azure_subscription]: https://azure.microsoft.com/free/\n[FR_or_CS_resource]: https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account?tabs=multiservice%2Cwindows\n[pip]: https://pypi.org/project/pip/\n[azure_portal_create_FR_resource]: https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesFormRecognizer\n[azure_cli_create_FR_resource]: https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account-cli?tabs=windows\n[azure-key-credential]: https://aka.ms/azsdk-python-core-azurekeycredential\n[fr-labeling-tool]: https://docs.microsoft.com/en-us/azure/cognitive-services/form-recognizer/quickstarts/label-tool\n[fr-train-without-labels]: https://docs.microsoft.com/en-us/azure/cognitive-services/form-recognizer/overview#train-without-labels\n[fr-train-with-labels]: https://docs.microsoft.com/en-us/azure/cognitive-services/form-recognizer/overview#train-with-labels\n\n[azure_core]: https://github.com/Azure/azure-sdk-for-python/tree/b68673df42ce606b5bd0b6e327beca2aad589b42/sdk/core/azure-core/README.md\n[azure_core_ref_docs]: https://aka.ms/azsdk-python-azure-core\n[python_logging]: https://docs.python.org/3/library/logging.html\n[multi_and_single_service]: https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account?tabs=multiservice%2Cwindows\n[azure_cli_endpoint_lookup]: https://docs.microsoft.com/cli/azure/cognitiveservices/account?view=azure-cli-latest#az-cognitiveservices-account-show\n[azure_portal_get_endpoint]: https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account?tabs=multiservice%2Cwindows#get-the-keys-for-your-resource\n[cognitive_authentication]: https://docs.microsoft.com/azure/cognitive-services/authentication\n[cognitive_authentication_api_key]: https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account?tabs=multiservice%2Cwindows#get-the-keys-for-your-resource\n[install_azure_identity]: https://github.com/Azure/azure-sdk-for-python/tree/b68673df42ce606b5bd0b6e327beca2aad589b42/sdk/identity/azure-identity#install-the-package\n[register_aad_app]: https://docs.microsoft.com/azure/cognitive-services/authentication#assign-a-role-to-a-service-principal\n[grant_role_access]: https://docs.microsoft.com/azure/cognitive-services/authentication#assign-a-role-to-a-service-principal\n[cognitive_custom_subdomain]: https://docs.microsoft.com/azure/cognitive-services/cognitive-services-custom-subdomains\n[custom_subdomain]: https://docs.microsoft.com/azure/cognitive-services/authentication#create-a-resource-with-a-custom-subdomain\n[cognitive_authentication_aad]: https://docs.microsoft.com/azure/cognitive-services/authentication#authenticate-with-azure-active-directory\n[azure_identity_credentials]: https://github.com/Azure/azure-sdk-for-python/tree/b68673df42ce606b5bd0b6e327beca2aad589b42/sdk/identity/azure-identity#credentials\n[default_azure_credential]: https://github.com/Azure/azure-sdk-for-python/tree/b68673df42ce606b5bd0b6e327beca2aad589b42/sdk/identity/azure-identity#defaultazurecredential\n\n[cla]: https://cla.microsoft.com\n[code_of_conduct]: https://opensource.microsoft.com/codeofconduct/\n[coc_faq]: https://opensource.microsoft.com/codeofconduct/faq/\n[coc_contact]: mailto:opencode@microsoft.com\n\n[sample_manage_custom_models]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/sample_manage_custom_models.py\n[sample_manage_custom_models_async]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/async_samples/sample_manage_custom_models_async.py\n[sample_recognize_content]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/sample_recognize_content.py\n[sample_recognize_content_async]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/async_samples/sample_recognize_content_async.py\n[sample_recognize_custom_forms]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/sample_recognize_custom_forms.py\n[sample_recognize_custom_forms_async]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/async_samples/sample_recognize_custom_forms_async.py\n[sample_recognize_receipts_from_url]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/sample_recognize_receipts_from_url.py\n[sample_recognize_receipts_from_url_async]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/async_samples/sample_recognize_receipts_from_url_async.py\n[sample_recognize_receipts]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/sample_recognize_receipts.py\n[sample_recognize_receipts_async]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/async_samples/sample_recognize_receipts_async.py\n[sample_train_model_with_labels]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/sample_train_model_with_labels.py\n[sample_train_model_with_labels_async]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/async_samples/sample_train_model_with_labels_async.py\n[sample_train_model_without_labels]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/sample_train_model_without_labels.py\n[sample_train_model_without_labels_async]: https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/async_samples/sample_train_model_without_labels_async.py\n\n\n# Change Log azure-ai-formrecognizer\n\n## 1.0.0b2 (2020-05-06)\n\n**Fixes and improvements**\n\n- Bug fixed where `confidence` == `0.0` was erroneously getting set to `1.0`\n- `__repr__` has been added to all of the models\n\n\n## 1.0.0b1 (2020-04-23)\n\nVersion (1.0.0b1) is the first preview of our efforts to create a user-friendly and Pythonic client library for Azure Form Recognizer. \nThis library replaces the package found here: https://pypi.org/project/azure-cognitiveservices-formrecognizer/\n\nFor more information about this, and preview releases of other Azure SDK libraries, please visit\nhttps://azure.github.io/azure-sdk/releases/latest/python.html.\n\n**Breaking changes: New API design**\n\n- New namespace/package name:\n  - The namespace/package name for the Form Recognizer client library has changed from \n    `azure.cognitiveservices.formrecognizer` to `azure.ai.formrecognizer`\n- Two client design:\n    - FormRecognizerClient to analyze fields/values on custom forms, receipts, and form content/layout\n    - FormTrainingClient to train custom models (with/without labels), and manage the custom models on your account\n- Different analyze methods based on input type: file stream or URL.\n    - URL input should use the method with suffix `from_url`\n    - Stream methods will automatically detect content-type of the input file\n- Asynchronous APIs added under `azure.ai.formrecognizer.aio` namespace\n- Authentication with API key supported using `AzureKeyCredential(\"<api_key>\")` from `azure.core.credentials`\n- New underlying REST pipeline implementation based on the azure-core library\n- Client and pipeline configuration is now available via keyword arguments at both the client level, and per-operation. \n    See README for a link to optional configuration arguments\n- New error hierarchy:\n    - All service errors will now use the base type: `azure.core.exceptions.HttpResponseError`\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Azure/azure-sdk-for-python", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "azure-ai-formrecognizer", "package_url": "https://pypi.org/project/azure-ai-formrecognizer/", "platform": "", "project_url": "https://pypi.org/project/azure-ai-formrecognizer/", "project_urls": {"Homepage": "https://github.com/Azure/azure-sdk-for-python"}, "release_url": "https://pypi.org/project/azure-ai-formrecognizer/1.0.0b2/", "requires_dist": ["azure-core (<2.0.0,>=1.4.0)", "msrest (>=0.6.12)", "six (>=1.6)", "azure-ai-nspkg ; python_version<'3.0'", "typing ; python_version<'3.5'"], "requires_python": "", "summary": "Microsoft Azure Form Recognizer Client Library for Python", "version": "1.0.0b2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Azure Form Recognizer client library for Python</h1>\n<p>Azure Cognitive Services Form Recognizer is a cloud service that uses machine learning to recognize text and table data\nfrom form documents. It includes the following main functionalities:</p>\n<ul>\n<li>Custom models - Recognize field values and table data from forms. These models are trained with your own data, so they're tailored to your forms. You can then take these custom models and recognize forms. You can also manage the custom models you've created and see how close you are to the limit of custom models your account can hold.</li>\n<li>Content API - Recognize text and table structures, along with their bounding box coordinates, from documents. Corresponds to the REST service's Layout API.</li>\n<li>Prebuilt receipt model - Recognize data from USA sales receipts using a prebuilt model.</li>\n</ul>\n<p><a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/azure/ai/formrecognizer\" rel=\"nofollow\">Source code</a> | <a href=\"https://pypi.org/project/azure-ai-formrecognizer/\" rel=\"nofollow\">Package (PyPI)</a> | <a href=\"https://aka.ms/azsdk-python-formrecognizer-ref-docs\" rel=\"nofollow\">API reference documentation</a>| <a href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/form-recognizer/overview\" rel=\"nofollow\">Product documentation</a> | <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples\" rel=\"nofollow\">Samples</a></p>\n<h2>Getting started</h2>\n<h3>Prerequisites</h3>\n<ul>\n<li>Python 2.7, or 3.5 or later is required to use this package.</li>\n<li>You must have an <a href=\"https://azure.microsoft.com/free/\" rel=\"nofollow\">Azure subscription</a> and a\n<a href=\"https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account?tabs=multiservice%2Cwindows\" rel=\"nofollow\">Cognitive Services or Form Recognizer resource</a> to use this package.</li>\n</ul>\n<h3>Install the package</h3>\n<p>Install the Azure Form Recognizer client library for Python with <a href=\"https://pypi.org/project/pip/\" rel=\"nofollow\">pip</a>:</p>\n<pre>pip install azure-ai-formrecognizer\n</pre>\n<blockquote>\n<p>Note: This version of the client library supports the v2.0-preview version of the Form Recognizer service</p>\n</blockquote>\n<h3>Create a Form Recognizer resource</h3>\n<p>Form Recognizer supports both <a href=\"https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account?tabs=multiservice%2Cwindows\" rel=\"nofollow\">multi-service and single-service access</a>.\nCreate a Cognitive Services resource if you plan to access multiple cognitive services under a single endpoint/key. For Form Recognizer access only, create a Form Recognizer resource.</p>\n<p>You can create the resource using</p>\n<p><strong>Option 1:</strong> <a href=\"https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesFormRecognizer\" rel=\"nofollow\">Azure Portal</a></p>\n<p><strong>Option 2:</strong> <a href=\"https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account-cli?tabs=windows\" rel=\"nofollow\">Azure CLI</a>.\nBelow is an example of how you can create a Form Recognizer resource using the CLI:</p>\n<pre><span class=\"c1\"># Create a new resource group to hold the form recognizer resource -</span>\n<span class=\"c1\"># if using an existing resource group, skip this step</span>\naz group create --name my-resource-group --location westus2\n</pre>\n<pre><span class=\"c1\"># Create form recognizer</span>\naz cognitiveservices account create <span class=\"se\">\\</span>\n    --name form-recognizer-resource <span class=\"se\">\\</span>\n    --resource-group my-resource-group <span class=\"se\">\\</span>\n    --kind FormRecognizer <span class=\"se\">\\</span>\n    --sku F0 <span class=\"se\">\\</span>\n    --location westus2 <span class=\"se\">\\</span>\n    --yes\n</pre>\n<h3>Authenticate the client</h3>\n<h4>Looking up the endpoint</h4>\n<p>You can find the endpoint for your form recognizer resource using the\n<a href=\"https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account?tabs=multiservice%2Cwindows#get-the-keys-for-your-resource\" rel=\"nofollow\">Azure Portal</a>\nor <a href=\"https://docs.microsoft.com/cli/azure/cognitiveservices/account?view=azure-cli-latest#az-cognitiveservices-account-show\" rel=\"nofollow\">Azure CLI</a>:</p>\n<pre><span class=\"c1\"># Get the endpoint for the form recognizer resource</span>\naz cognitiveservices account show --name <span class=\"s2\">\"resource-name\"</span> --resource-group <span class=\"s2\">\"resource-group-name\"</span> --query <span class=\"s2\">\"endpoint\"</span>\n</pre>\n<h4>Types of credentials</h4>\n<p>The <code>credential</code> parameter may be provided as a <a href=\"https://aka.ms/azsdk-python-core-azurekeycredential\" rel=\"nofollow\">AzureKeyCredential</a> from <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/b68673df42ce606b5bd0b6e327beca2aad589b42/sdk/core/azure-core/README.md\" rel=\"nofollow\">azure.core</a>.\nSee the full details regarding <a href=\"https://docs.microsoft.com/azure/cognitive-services/authentication\" rel=\"nofollow\">authentication</a> of cognitive services.</p>\n<p>To use an <a href=\"https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account?tabs=multiservice%2Cwindows#get-the-keys-for-your-resource\" rel=\"nofollow\">API key</a>,\npass the key as a string into an instance of <code>AzureKeyCredential(\"&lt;api_key&gt;\")</code>.\nThe API key can be found in the Azure Portal or by running the following Azure CLI command:</p>\n<p><code>az cognitiveservices account keys list --name \"resource-name\" --resource-group \"resource-group-name\"</code></p>\n<p>Use the key as the credential parameter to authenticate the client:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.ai.formrecognizer</span> <span class=\"kn\">import</span> <span class=\"n\">FormRecognizerClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.core.credentials</span> <span class=\"kn\">import</span> <span class=\"n\">AzureKeyCredential</span>\n\n<span class=\"n\">endpoint</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://&lt;region&gt;.api.cognitive.microsoft.com/\"</span>\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">AzureKeyCredential</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;api_key&gt;\"</span><span class=\"p\">)</span>\n<span class=\"n\">form_recognizer_client</span> <span class=\"o\">=</span> <span class=\"n\">FormRecognizerClient</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"p\">)</span>\n</pre>\n<h2>Key concepts</h2>\n<h3>FormRecognizerClient</h3>\n<p><code>FormRecognizerClient</code> provides operations for:</p>\n<ul>\n<li>Recognizing form fields and content using custom models trained to recognize your custom forms. These values are returned in a collection of <code>RecognizedForm</code> objects.</li>\n<li>Recognizing form content, including tables, lines and words, without the need to train a model. Form content is returned in a collection of <code>FormPage</code> objects.</li>\n<li>Recognizing common fields from US receipts, using a pre-trained receipt model on the Form Recognizer service. These fields and meta-data are returned in a collection of <code>USReceipt</code> objects.</li>\n</ul>\n<h3>FormTrainingClient</h3>\n<p><code>FormTrainingClient</code> provides operations for:</p>\n<ul>\n<li>Training custom models to recognize all fields and values found in your custom forms. A <code>CustomFormModel</code> is returned indicating the form types the model will recognize, and the fields it will extract for each form type. See the <a href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/form-recognizer/overview#train-without-labels\" rel=\"nofollow\">service's documents</a> for a more detailed explanation.</li>\n<li>Training custom models to recognize specific fields and values you specify by labeling your custom forms. A <code>CustomFormModel</code> is returned indicating the fields the model will extract, as well as the estimated accuracy for each field. See the <a href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/form-recognizer/overview#train-with-labels\" rel=\"nofollow\">service's documents</a> for a more detailed explanation.</li>\n<li>Managing models created in your account.</li>\n</ul>\n<p>Please note that models can also be trained using a graphical user interface such as the <a href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/form-recognizer/quickstarts/label-tool\" rel=\"nofollow\">Form Recognizer Labeling Tool</a>.</p>\n<h3>Long-Running Operations</h3>\n<p>Long-running operations are operations which consist of an initial request sent to the service to start an operation,\nfollowed by polling the service at intervals to determine whether the operation has completed or failed, and if it has\nsucceeded, to get the result.</p>\n<p>Methods that train models or recognize values from forms are modeled as long-running operations. The client exposes\na <code>begin_&lt;method-name&gt;</code> method that returns an <code>LROPoller</code>. Callers should wait for the operation to complete by\ncalling <code>result()</code> on the operation returned from the <code>begin_&lt;method-name&gt;</code> method. Sample code snippets are provided\nto illustrate using long-running operations <a href=\"#examples\" rel=\"nofollow\" title=\"Examples\">below</a>.</p>\n<h2>Examples</h2>\n<p>The following section provides several code snippets covering some of the most common Form Recognizer tasks, including:</p>\n<ul>\n<li><a href=\"#recognize-forms-using-a-custom-model\" rel=\"nofollow\" title=\"Recognize Forms Using a Custom Model\">Recognize Forms Using a Custom Model</a></li>\n<li><a href=\"#recognize-content\" rel=\"nofollow\" title=\"Recognize Content\">Recognize Content</a></li>\n<li><a href=\"#recognize-receipts\" rel=\"nofollow\" title=\"Recognize receipts\">Recognize Receipts</a></li>\n<li><a href=\"#train-a-model\" rel=\"nofollow\" title=\"Train a model\">Train a Model</a></li>\n<li><a href=\"#manage-your-models\" rel=\"nofollow\" title=\"Manage Your Models\">Manage Your Models</a></li>\n</ul>\n<h3>Recognize Forms Using a Custom Model</h3>\n<p>Recognize name/value pairs and table data from forms. These models are trained with your own data, so they're tailored to your forms. You should only recognize forms of the same form type that the custom model was trained on.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.ai.formrecognizer</span> <span class=\"kn\">import</span> <span class=\"n\">FormRecognizerClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.core.credentials</span> <span class=\"kn\">import</span> <span class=\"n\">AzureKeyCredential</span>\n\n<span class=\"n\">endpoint</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://&lt;region&gt;.api.cognitive.microsoft.com/\"</span>\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">AzureKeyCredential</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;api_key&gt;\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">form_recognizer_client</span> <span class=\"o\">=</span> <span class=\"n\">FormRecognizerClient</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"p\">)</span>\n<span class=\"n\">model_id</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;your custom model id&gt;\"</span>\n\n<span class=\"c1\"># Make sure the form type is one of the types of forms your custom model can recognize</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;path to your form&gt;\"</span><span class=\"p\">,</span> <span class=\"s2\">\"rb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fd</span><span class=\"p\">:</span>\n    <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">fd</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"n\">poller</span> <span class=\"o\">=</span> <span class=\"n\">form_recognizer_client</span><span class=\"o\">.</span><span class=\"n\">begin_recognize_custom_forms</span><span class=\"p\">(</span><span class=\"n\">model_id</span><span class=\"o\">=</span><span class=\"n\">model_id</span><span class=\"p\">,</span> <span class=\"n\">stream</span><span class=\"o\">=</span><span class=\"n\">form</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">poller</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">()</span>\n\n<span class=\"k\">for</span> <span class=\"n\">recognized_form</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Form type ID: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">recognized_form</span><span class=\"o\">.</span><span class=\"n\">form_type</span><span class=\"p\">))</span>\n    <span class=\"k\">for</span> <span class=\"n\">label</span><span class=\"p\">,</span> <span class=\"n\">field</span> <span class=\"ow\">in</span> <span class=\"n\">recognized_form</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Field '</span><span class=\"si\">{}</span><span class=\"s2\">' has value '</span><span class=\"si\">{}</span><span class=\"s2\">' with a confidence score of </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n            <span class=\"n\">label</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">confidence</span>\n        <span class=\"p\">))</span>\n</pre>\n<h3>Recognize Content</h3>\n<p>Recognize text and table structures, along with their bounding box coordinates, from documents.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.ai.formrecognizer</span> <span class=\"kn\">import</span> <span class=\"n\">FormRecognizerClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.core.credentials</span> <span class=\"kn\">import</span> <span class=\"n\">AzureKeyCredential</span>\n\n<span class=\"n\">endpoint</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://&lt;region&gt;.api.cognitive.microsoft.com/\"</span>\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">AzureKeyCredential</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;api_key&gt;\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">form_recognizer_client</span> <span class=\"o\">=</span> <span class=\"n\">FormRecognizerClient</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;path to your form&gt;\"</span><span class=\"p\">,</span> <span class=\"s2\">\"rb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fd</span><span class=\"p\">:</span>\n    <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">fd</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"n\">poller</span> <span class=\"o\">=</span> <span class=\"n\">form_recognizer_client</span><span class=\"o\">.</span><span class=\"n\">begin_recognize_content</span><span class=\"p\">(</span><span class=\"n\">form</span><span class=\"p\">)</span>\n<span class=\"n\">page</span> <span class=\"o\">=</span> <span class=\"n\">poller</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">()</span>\n\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">page</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">tables</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"c1\"># page 1, table 1</span>\n<span class=\"k\">for</span> <span class=\"n\">cell</span> <span class=\"ow\">in</span> <span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">cells</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"n\">bounding_box</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cell</span><span class=\"o\">.</span><span class=\"n\">confidence</span><span class=\"p\">)</span>\n</pre>\n<h3>Recognize Receipts</h3>\n<p>Recognize data from USA sales receipts using a prebuilt model.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.ai.formrecognizer</span> <span class=\"kn\">import</span> <span class=\"n\">FormRecognizerClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.core.credentials</span> <span class=\"kn\">import</span> <span class=\"n\">AzureKeyCredential</span>\n\n<span class=\"n\">endpoint</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://&lt;region&gt;.api.cognitive.microsoft.com/\"</span>\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">AzureKeyCredential</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;api_key&gt;\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">form_recognizer_client</span> <span class=\"o\">=</span> <span class=\"n\">FormRecognizerClient</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;path to your receipt&gt;\"</span><span class=\"p\">,</span> <span class=\"s2\">\"rb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fd</span><span class=\"p\">:</span>\n    <span class=\"n\">receipt</span> <span class=\"o\">=</span> <span class=\"n\">fd</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"n\">poller</span> <span class=\"o\">=</span> <span class=\"n\">form_recognizer_client</span><span class=\"o\">.</span><span class=\"n\">begin_recognize_receipts</span><span class=\"p\">(</span><span class=\"n\">receipt</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">poller</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">()</span>\n\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Receipt contained the following values with confidences: \"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Receipt Type: </span><span class=\"si\">{}</span><span class=\"s2\"> has confidence: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">receipt_type</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">receipt_type</span><span class=\"o\">.</span><span class=\"n\">confidence</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Merchant Name: </span><span class=\"si\">{}</span><span class=\"s2\"> has confidence: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">merchant_name</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">merchant_name</span><span class=\"o\">.</span><span class=\"n\">confidence</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Transaction Date: </span><span class=\"si\">{}</span><span class=\"s2\"> has confidence: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">transaction_date</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">transaction_date</span><span class=\"o\">.</span><span class=\"n\">confidence</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Receipt items:\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">receipt_items</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"...Item Name: </span><span class=\"si\">{}</span><span class=\"s2\"> has confidence: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">confidence</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"...Item Quantity: </span><span class=\"si\">{}</span><span class=\"s2\"> has confidence: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">quantity</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">quantity</span><span class=\"o\">.</span><span class=\"n\">confidence</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"...Individual Item Price: </span><span class=\"si\">{}</span><span class=\"s2\"> has confidence: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">price</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">price</span><span class=\"o\">.</span><span class=\"n\">confidence</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"...Total Item Price: </span><span class=\"si\">{}</span><span class=\"s2\"> has confidence: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">total_price</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">total_price</span><span class=\"o\">.</span><span class=\"n\">confidence</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Subtotal: </span><span class=\"si\">{}</span><span class=\"s2\"> has confidence: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">subtotal</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">subtotal</span><span class=\"o\">.</span><span class=\"n\">confidence</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Tax: </span><span class=\"si\">{}</span><span class=\"s2\"> has confidence: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">tax</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">tax</span><span class=\"o\">.</span><span class=\"n\">confidence</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Tip: </span><span class=\"si\">{}</span><span class=\"s2\"> has confidence: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">tip</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">tip</span><span class=\"o\">.</span><span class=\"n\">confidence</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Total: </span><span class=\"si\">{}</span><span class=\"s2\"> has confidence: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">total</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">total</span><span class=\"o\">.</span><span class=\"n\">confidence</span><span class=\"p\">))</span>\n</pre>\n<h3>Train a model</h3>\n<p>Train a machine-learned model on your own form type. The resulting model will be able to recognize values from the types of forms it was trained on.\nProvide a container SAS url to your Azure Storage Blob container where you're storing the training documents. See details on setting this up\nin the <a href=\"https://docs.microsoft.com/azure/cognitive-services/form-recognizer/quickstarts/curl-train-extract#train-a-form-recognizer-model\" rel=\"nofollow\">service quickstart documentation</a>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.ai.formrecognizer</span> <span class=\"kn\">import</span> <span class=\"n\">FormTrainingClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.core.credentials</span> <span class=\"kn\">import</span> <span class=\"n\">AzureKeyCredential</span>\n\n<span class=\"n\">endpoint</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://&lt;region&gt;.api.cognitive.microsoft.com/\"</span>\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">AzureKeyCredential</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;api_key&gt;\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">form_training_client</span> <span class=\"o\">=</span> <span class=\"n\">FormTrainingClient</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"p\">)</span>\n\n<span class=\"n\">container_sas_url</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxx\"</span>  <span class=\"c1\"># training documents uploaded to blob storage</span>\n<span class=\"n\">poller</span> <span class=\"o\">=</span> <span class=\"n\">form_training_client</span><span class=\"o\">.</span><span class=\"n\">begin_train_model</span><span class=\"p\">(</span><span class=\"n\">container_sas_url</span><span class=\"p\">)</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">poller</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Custom model information</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Model ID: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">model_id</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Status: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Created on: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">created_on</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Last modified: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">last_modified</span><span class=\"p\">))</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Recognized fields:\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># looping through the submodels, which contains the fields they were trained on</span>\n<span class=\"k\">for</span> <span class=\"n\">submodel</span> <span class=\"ow\">in</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"The submodel with form type '</span><span class=\"si\">{}</span><span class=\"s2\">' has recognized the following fields: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n        <span class=\"n\">submodel</span><span class=\"o\">.</span><span class=\"n\">form_type</span><span class=\"p\">,</span>\n        <span class=\"s2\">\", \"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"n\">label</span> <span class=\"k\">for</span> <span class=\"n\">label</span> <span class=\"ow\">in</span> <span class=\"n\">submodel</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">])</span>\n    <span class=\"p\">))</span>\n\n<span class=\"c1\"># Training result information</span>\n<span class=\"k\">for</span> <span class=\"n\">doc</span> <span class=\"ow\">in</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">training_documents</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Document name: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">document_name</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Document status: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Document page count: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">page_count</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Document errors: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">errors</span><span class=\"p\">))</span>\n</pre>\n<h3>Manage Your Models</h3>\n<p>Manage the custom models attached to your account.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.ai.formrecognizer</span> <span class=\"kn\">import</span> <span class=\"n\">FormTrainingClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.core.credentials</span> <span class=\"kn\">import</span> <span class=\"n\">AzureKeyCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.core.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">ResourceNotFoundError</span>\n\n<span class=\"n\">endpoint</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://&lt;region&gt;.api.cognitive.microsoft.com/\"</span>\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">AzureKeyCredential</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;api_key&gt;\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">form_training_client</span> <span class=\"o\">=</span> <span class=\"n\">FormTrainingClient</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"p\">)</span>\n\n<span class=\"n\">account_properties</span> <span class=\"o\">=</span> <span class=\"n\">form_training_client</span><span class=\"o\">.</span><span class=\"n\">get_account_properties</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Our account has </span><span class=\"si\">{}</span><span class=\"s2\"> custom models, and we can have at most </span><span class=\"si\">{}</span><span class=\"s2\"> custom models\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n    <span class=\"n\">account_properties</span><span class=\"o\">.</span><span class=\"n\">custom_model_count</span><span class=\"p\">,</span> <span class=\"n\">account_properties</span><span class=\"o\">.</span><span class=\"n\">custom_model_limit</span>\n<span class=\"p\">))</span>\n\n<span class=\"c1\"># Here we get a paged list of all of our custom models</span>\n<span class=\"n\">custom_models</span> <span class=\"o\">=</span> <span class=\"n\">form_training_client</span><span class=\"o\">.</span><span class=\"n\">list_model_infos</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"We have models with the following ids: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n    <span class=\"s2\">\", \"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">model_id</span> <span class=\"k\">for</span> <span class=\"n\">m</span> <span class=\"ow\">in</span> <span class=\"n\">custom_models</span><span class=\"p\">])</span>\n<span class=\"p\">))</span>\n\n<span class=\"c1\"># Now we get the custom model from the \"Train a model\" sample</span>\n<span class=\"n\">model_id</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;model id from the Train a Model sample&gt;\"</span>\n\n<span class=\"n\">custom_model</span> <span class=\"o\">=</span> <span class=\"n\">form_training_client</span><span class=\"o\">.</span><span class=\"n\">get_custom_model</span><span class=\"p\">(</span><span class=\"n\">model_id</span><span class=\"o\">=</span><span class=\"n\">model_id</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Model ID: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">custom_model</span><span class=\"o\">.</span><span class=\"n\">model_id</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Status: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">custom_model</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Created on: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">custom_model</span><span class=\"o\">.</span><span class=\"n\">created_on</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Last modified: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">custom_model</span><span class=\"o\">.</span><span class=\"n\">last_modified</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Finally, we will delete this model by ID</span>\n<span class=\"n\">form_training_client</span><span class=\"o\">.</span><span class=\"n\">delete_model</span><span class=\"p\">(</span><span class=\"n\">model_id</span><span class=\"o\">=</span><span class=\"n\">custom_model</span><span class=\"o\">.</span><span class=\"n\">model_id</span><span class=\"p\">)</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">form_training_client</span><span class=\"o\">.</span><span class=\"n\">get_custom_model</span><span class=\"p\">(</span><span class=\"n\">model_id</span><span class=\"o\">=</span><span class=\"n\">custom_model</span><span class=\"o\">.</span><span class=\"n\">model_id</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">ResourceNotFoundError</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Successfully deleted model with id </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">custom_model</span><span class=\"o\">.</span><span class=\"n\">model_id</span><span class=\"p\">))</span>\n</pre>\n<h2>Optional Configuration</h2>\n<p>Optional keyword arguments can be passed in at the client and per-operation level.\nThe azure-core <a href=\"https://aka.ms/azsdk-python-azure-core\" rel=\"nofollow\">reference documentation</a>\ndescribes available configurations for retries, logging, transport protocols, and more.</p>\n<h2>Troubleshooting</h2>\n<h3>General</h3>\n<p>Form Recognizer client library will raise exceptions defined in <a href=\"https://aka.ms/azsdk-python-azure-core\" rel=\"nofollow\">Azure Core</a>.</p>\n<h3>Logging</h3>\n<p>This library uses the standard\n<a href=\"https://docs.python.org/3/library/logging.html\" rel=\"nofollow\">logging</a> library for logging.\nBasic information about HTTP sessions (URLs, headers, etc.) is logged at INFO\nlevel.</p>\n<p>Detailed DEBUG level logging, including request/response bodies and unredacted\nheaders, can be enabled on a client with the <code>logging_enable</code> keyword argument:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.ai.formrecognizer</span> <span class=\"kn\">import</span> <span class=\"n\">FormRecognizerClient</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.core.credentials</span> <span class=\"kn\">import</span> <span class=\"n\">AzureKeyCredential</span>\n\n<span class=\"c1\"># Create a logger for the 'azure' SDK</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'azure'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Configure a console output</span>\n<span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">StreamHandler</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"o\">=</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">addHandler</span><span class=\"p\">(</span><span class=\"n\">handler</span><span class=\"p\">)</span>\n\n<span class=\"n\">endpoint</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://&lt;my-custom-subdomain&gt;.cognitiveservices.azure.com/\"</span>\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">AzureKeyCredential</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;api_key&gt;\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># This client will log detailed information about its HTTP sessions, at DEBUG level</span>\n<span class=\"n\">form_recognizer_client</span> <span class=\"o\">=</span> <span class=\"n\">FormRecognizerClient</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"p\">,</span> <span class=\"n\">logging_enable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Similarly, <code>logging_enable</code> can enable detailed logging for a single operation,\neven when it isn't enabled for the client:</p>\n<pre><span class=\"n\">poller</span> <span class=\"o\">=</span> <span class=\"n\">form_recognizer_client</span><span class=\"o\">.</span><span class=\"n\">begin_recognize_receipts</span><span class=\"p\">(</span><span class=\"n\">receipt</span><span class=\"p\">,</span> <span class=\"n\">logging_enable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h2>Next steps</h2>\n<p>The following section provides several code snippets illustrating common patterns used in the Form Recognizer Python API.</p>\n<h3>More sample code</h3>\n<p>These code samples show common scenario operations with the Azure Form Recognizer client library.\nThe async versions of the samples (the python sample files appended with <code>_async</code>) show asynchronous operations\nwith Form Recognizer and require Python 3.5 or later.</p>\n<ul>\n<li>Recognize receipts: <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/sample_recognize_receipts.py\" rel=\"nofollow\">sample_recognize_receipts.py</a> (<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/async_samples/sample_recognize_receipts_async.py\" rel=\"nofollow\">async version</a>)</li>\n<li>Recognize receipts from a URL: <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/sample_recognize_receipts_from_url.py\" rel=\"nofollow\">sample_recognize_receipts_from_url.py</a> (<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/async_samples/sample_recognize_receipts_from_url_async.py\" rel=\"nofollow\">async version</a>)</li>\n<li>Recognize content: <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/sample_recognize_content.py\" rel=\"nofollow\">sample_recognize_content.py</a> (<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/async_samples/sample_recognize_content_async.py\" rel=\"nofollow\">async version</a>)</li>\n<li>Recognize custom forms: <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/sample_recognize_custom_forms.py\" rel=\"nofollow\">sample_recognize_custom_forms.py</a> (<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/async_samples/sample_recognize_custom_forms_async.py\" rel=\"nofollow\">async version</a>)</li>\n<li>Train a model without labels: <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/sample_train_model_without_labels.py\" rel=\"nofollow\">sample_train_model_without_labels.py</a> (<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/async_samples/sample_train_model_without_labels_async.py\" rel=\"nofollow\">async version</a>)</li>\n<li>Train a model with labels: <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/sample_train_model_with_labels.py\" rel=\"nofollow\">sample_train_model_with_labels.py</a> (<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/async_samples/sample_train_model_with_labels_async.py\" rel=\"nofollow\">async version</a>)</li>\n<li>Manage custom models: <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/sample_manage_custom_models.py\" rel=\"nofollow\">sample_manage_custom_models.py</a> (<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/master/sdk/formrecognizer/azure-ai-formrecognizer/samples/async_samples/sample_manage_custom_models_async.py\" rel=\"nofollow\">async_version</a>)</li>\n</ul>\n<h3>Additional documentation</h3>\n<p>For more extensive documentation on Azure Cognitive Services Form Recognizer, see the <a href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/form-recognizer/overview\" rel=\"nofollow\">Form Recognizer documentation</a> on docs.microsoft.com.</p>\n<h2>Contributing</h2>\n<p>This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit <a href=\"https://cla.microsoft.com\" rel=\"nofollow\">cla.microsoft.com</a>.</p>\n<p>When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.</p>\n<p>This project has adopted the <a href=\"https://opensource.microsoft.com/codeofconduct/\" rel=\"nofollow\">Microsoft Open Source Code of Conduct</a>. For more information see the <a href=\"https://opensource.microsoft.com/codeofconduct/faq/\" rel=\"nofollow\">Code of Conduct FAQ</a> or contact <a href=\"mailto:opencode@microsoft.com\">opencode@microsoft.com</a> with any additional questions or comments.</p>\n\n<h1>Change Log azure-ai-formrecognizer</h1>\n<h2>1.0.0b2 (2020-05-06)</h2>\n<p><strong>Fixes and improvements</strong></p>\n<ul>\n<li>Bug fixed where <code>confidence</code> == <code>0.0</code> was erroneously getting set to <code>1.0</code></li>\n<li><code>__repr__</code> has been added to all of the models</li>\n</ul>\n<h2>1.0.0b1 (2020-04-23)</h2>\n<p>Version (1.0.0b1) is the first preview of our efforts to create a user-friendly and Pythonic client library for Azure Form Recognizer.\nThis library replaces the package found here: <a href=\"https://pypi.org/project/azure-cognitiveservices-formrecognizer/\" rel=\"nofollow\">https://pypi.org/project/azure-cognitiveservices-formrecognizer/</a></p>\n<p>For more information about this, and preview releases of other Azure SDK libraries, please visit\n<a href=\"https://azure.github.io/azure-sdk/releases/latest/python.html\" rel=\"nofollow\">https://azure.github.io/azure-sdk/releases/latest/python.html</a>.</p>\n<p><strong>Breaking changes: New API design</strong></p>\n<ul>\n<li>New namespace/package name:\n<ul>\n<li>The namespace/package name for the Form Recognizer client library has changed from\n<code>azure.cognitiveservices.formrecognizer</code> to <code>azure.ai.formrecognizer</code></li>\n</ul>\n</li>\n<li>Two client design:\n<ul>\n<li>FormRecognizerClient to analyze fields/values on custom forms, receipts, and form content/layout</li>\n<li>FormTrainingClient to train custom models (with/without labels), and manage the custom models on your account</li>\n</ul>\n</li>\n<li>Different analyze methods based on input type: file stream or URL.\n<ul>\n<li>URL input should use the method with suffix <code>from_url</code></li>\n<li>Stream methods will automatically detect content-type of the input file</li>\n</ul>\n</li>\n<li>Asynchronous APIs added under <code>azure.ai.formrecognizer.aio</code> namespace</li>\n<li>Authentication with API key supported using <code>AzureKeyCredential(\"&lt;api_key&gt;\")</code> from <code>azure.core.credentials</code></li>\n<li>New underlying REST pipeline implementation based on the azure-core library</li>\n<li>Client and pipeline configuration is now available via keyword arguments at both the client level, and per-operation.\nSee README for a link to optional configuration arguments</li>\n<li>New error hierarchy:\n<ul>\n<li>All service errors will now use the base type: <code>azure.core.exceptions.HttpResponseError</code></li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 7182309, "releases": {"1.0.0b1": [{"comment_text": "", "digests": {"md5": "fd01662eca790f17609a536406ad8b79", "sha256": "ac92b5079a19db963abd2530f8145667199c7d9c376a45faa69e08785c9b935f"}, "downloads": -1, "filename": "azure_ai_formrecognizer-1.0.0b1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fd01662eca790f17609a536406ad8b79", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 61524, "upload_time": "2020-04-23T18:21:27", "upload_time_iso_8601": "2020-04-23T18:21:27.672584Z", "url": "https://files.pythonhosted.org/packages/3f/fe/6c030c60dd5195d7b9f8be48fbed897edf638995c6d2417b206ecd6b17ba/azure_ai_formrecognizer-1.0.0b1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d09d2ff315d6b1f4cb12b4029e04430", "sha256": "cce1ceecd041b498b9e7a33618482834e2658e467dd405f9bc89b60c042c09dc"}, "downloads": -1, "filename": "azure-ai-formrecognizer-1.0.0b1.zip", "has_sig": false, "md5_digest": "9d09d2ff315d6b1f4cb12b4029e04430", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 141648, "upload_time": "2020-04-23T18:21:30", "upload_time_iso_8601": "2020-04-23T18:21:30.464909Z", "url": "https://files.pythonhosted.org/packages/2f/a2/8851a5a71d14be8f959853dcd84ac23b41f4c639cdd6da0e54a33f1191d3/azure-ai-formrecognizer-1.0.0b1.zip", "yanked": false}], "1.0.0b2": [{"comment_text": "", "digests": {"md5": "29b77b4d14ee37378d696602e825858a", "sha256": "f13257c7ee74e62ba6aa95a03f5fa3ed9266e04bcb6e938ffdd963ef25b600f8"}, "downloads": -1, "filename": "azure_ai_formrecognizer-1.0.0b2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "29b77b4d14ee37378d696602e825858a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 62469, "upload_time": "2020-05-06T18:35:42", "upload_time_iso_8601": "2020-05-06T18:35:42.563120Z", "url": "https://files.pythonhosted.org/packages/ee/da/ec45ed0fdb7c13725f0d4ca60e53a3e0bb61383db225480d7dff399b9547/azure_ai_formrecognizer-1.0.0b2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b302613fbcbab108c91ea4daa7f1798", "sha256": "68e10a17890a5e686069bb1395cb94cb456ede17b50253fcd6f316796bcd859a"}, "downloads": -1, "filename": "azure-ai-formrecognizer-1.0.0b2.zip", "has_sig": false, "md5_digest": "6b302613fbcbab108c91ea4daa7f1798", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 149958, "upload_time": "2020-05-06T18:35:44", "upload_time_iso_8601": "2020-05-06T18:35:44.391688Z", "url": "https://files.pythonhosted.org/packages/de/4a/e5691d2a681637fcfcc89d13368290485f6fb3d85db6c7d21ed6fb9494b1/azure-ai-formrecognizer-1.0.0b2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "29b77b4d14ee37378d696602e825858a", "sha256": "f13257c7ee74e62ba6aa95a03f5fa3ed9266e04bcb6e938ffdd963ef25b600f8"}, "downloads": -1, "filename": "azure_ai_formrecognizer-1.0.0b2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "29b77b4d14ee37378d696602e825858a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 62469, "upload_time": "2020-05-06T18:35:42", "upload_time_iso_8601": "2020-05-06T18:35:42.563120Z", "url": "https://files.pythonhosted.org/packages/ee/da/ec45ed0fdb7c13725f0d4ca60e53a3e0bb61383db225480d7dff399b9547/azure_ai_formrecognizer-1.0.0b2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b302613fbcbab108c91ea4daa7f1798", "sha256": "68e10a17890a5e686069bb1395cb94cb456ede17b50253fcd6f316796bcd859a"}, "downloads": -1, "filename": "azure-ai-formrecognizer-1.0.0b2.zip", "has_sig": false, "md5_digest": "6b302613fbcbab108c91ea4daa7f1798", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 149958, "upload_time": "2020-05-06T18:35:44", "upload_time_iso_8601": "2020-05-06T18:35:44.391688Z", "url": "https://files.pythonhosted.org/packages/de/4a/e5691d2a681637fcfcc89d13368290485f6fb3d85db6c7d21ed6fb9494b1/azure-ai-formrecognizer-1.0.0b2.zip", "yanked": false}], "timestamp": "Thu May  7 18:15:28 2020"}