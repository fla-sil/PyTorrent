{"info": {"author": "Adam Bard", "author_email": "adam@adambard.com", "bugtrack_url": null, "classifiers": [], "description": "==============================================\ngooglegantt - A Google Charts Gantt Chart API\n==============================================\n\nAuthor: Adam Bard, http://adambard.com/\n\nThis api is designed to allow you to easily and quickly create gantt\ncharts using the Google Charts API.  You can save them as images or\njust produce a URL.\n\nIt works swell as long as you want things measured in days.\n\nThe method of producing such a chart is heavily influenced by this post_\nby Dave Goerlich. Thanks, Dave.\n\nQuick Start Example\n---------------------\n\n::\n\n    from googlegantt import GanttChart, GanttCategory\n\n    gc = GanttChart('Test Chart', width=650, height=200, progress=(2011, 02, 27))\n\n    on_time = GanttCategory('On Time', '0c0')\n    late = GanttCategory('Late', 'c00')\n    upcoming = GanttCategory('Upcoming', '00c')\n\n    t1 = gc.add_task('Late Task', (2011, 02, 20), (2011, 02, 25), category=late)\n    t2 = gc.add_task('On Time Task', depends_on=t1, duration=3, category=on_time)\n    t3 = gc.add_task('Future Task', depends_on=t2, duration=7, category=upcoming)\n\n    url = gc.get_url()\n    image = gc.get_image()\n\nProduces:\n\n.. image:: https://chart.googleapis.com/chart?chxt=x,y&chds=0,15&chco=FFFFFF00,CC0000FF,00CC00FF,0000CCFF&chbh=46,4,0&chtt=Test%20Chart&chxl=0:|20/02|21/02|22/02|23/02|24/02|25/02|26/02|27/02|28/02|01/03|02/03|03/03|04/03|05/03|06/03|07/03|1:|Future%20Task|On%20Time%20Task|Late%20Task&chdl=|Late|On%20Time|Upcoming&chd=t:0,5,8|5,0,0|0,3,0|0,0,7&chg=6.66666666667,0&chm=r,4D89F933,0,0,0.466666666667&chs=650x200&cht=bhs\n\nFeatures\n--------------------\n\n* Optional Progress indicator shades the elapsed area of the chart.\n* Flexible chart width and height.\n* Specify task colors using css rules.\n* Flexibly specify dates using datetime.date objects, or tuples.\n* Produce a Google Chart url, or a png image (requires PIL_).\n* Date span is automatically computed from tasks.\n\n\nClasses\n----------------\n\nThere are 3 primary classes involved in the creation of a chart.\n\nGanttChart\n~~~~~~~~~~~\n\n**GanttChart(title,[ **kwargs])**\n\n    Produce a Gantt Chart.\n\n    Keyword Arguments:\n\n    * **width** The width of the chart.\n    * **height** The height of the chart.\n    * **progress** A date representing the current time, to produce a shaded 'elapsed' region.\n\n    Example initialization::\n\n        gc = GanttChart('Test Chart', width=600, height=200, progress=(2011, 02, 27))\n\nMethods:\n\n* **GanttChart.get_url()** Get a Google Charts URL of the chart, for direct access\n* **GanttChart.get_image()** Get a PIL_ Image object, to be manipulated\n* **GanttChart.get_image(save_path)** Save a .png image to *save_path*\n\nGanttCategory\n~~~~~~~~~~~~~~\n\nOptional in common usage. Represents a class of Tasks with a color and a title.\n\n**GanttCategory(title[, color])**\n\n    Produce a category object with a given *color*.  Color is specified using a hex string,\n    and will be converted to an 8-byte rgba hex color string expected by Google Charts from any\n    of the following formats:\n\n    * 3-byte, e.g. 'f00' => 'FF0000FF'\n    * 4-byte, e.g. 'f00c' => 'FF0000CC'\n    * 6-byte, e.g. 'ff0000' => 'FF0000FF'\n    * 8-byte\n\nGanttTask\n~~~~~~~~~~\n\nRepresents a single bar in the chart.  Must have a specified start and end date, although\nthese can be computed in different ways.\n\n**GanttTask(title[, start_date=None, end_date=None[, **kwargs]])**\n\n    Keyword Arguments:\n\n    * **start_date** The start date of the task\n    * **end_date** The end date of the task\n    * **duration** The duration, in days, of the task. May be used instead of *end_date*\n    * **depends_on** A GanttTask that must be completed before this one can begin. May be used instead of *start_date*\n    * **category** A GanttCategory to apply to this task.\n    * **color** A quick way to specify color.  Don't use this when you have categories declared, you will get blank legend entries.\n\n    Either *start_date* or *depends_on* **must** be specified.  Same with *end_date* and *duration*.\n\n    If both *start_date* and *depends_on* are specified, *depends_on* is used.\n\n    If both *end_date* and *duration* are specified, *duration* is used.\n\nMore Information\n-------------------\n\nCheck out the doctests in the gantt.py file for more information.\n\nLicense\n------------\n\nCopyright (c) 2011 Adam Bard (adambard.com)\n\nLicensed under the MIT License: http://www.opensource.org/licenses/mit-license\n\n.. _post: http://www.designinginteractive.com/code/how-to-build-a-gantt-chart-with-the-google-charts-api/\n.. _PIL: http://www.pythonware.com/products/pil/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "googlegantt", "package_url": "https://pypi.org/project/googlegantt/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/googlegantt/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/googlegantt/0.6.1/", "requires_dist": null, "requires_python": null, "summary": "Produce Gantt charts using the Google Charts API", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Author: Adam Bard, <a href=\"http://adambard.com/\" rel=\"nofollow\">http://adambard.com/</a></p>\n<p>This api is designed to allow you to easily and quickly create gantt\ncharts using the Google Charts API.  You can save them as images or\njust produce a URL.</p>\n<p>It works swell as long as you want things measured in days.</p>\n<p>The method of producing such a chart is heavily influenced by this <a href=\"http://www.designinginteractive.com/code/how-to-build-a-gantt-chart-with-the-google-charts-api/\" rel=\"nofollow\">post</a>\nby Dave Goerlich. Thanks, Dave.</p>\n<div id=\"quick-start-example\">\n<h2>Quick Start Example</h2>\n<pre>from googlegantt import GanttChart, GanttCategory\n\ngc = GanttChart('Test Chart', width=650, height=200, progress=(2011, 02, 27))\n\non_time = GanttCategory('On Time', '0c0')\nlate = GanttCategory('Late', 'c00')\nupcoming = GanttCategory('Upcoming', '00c')\n\nt1 = gc.add_task('Late Task', (2011, 02, 20), (2011, 02, 25), category=late)\nt2 = gc.add_task('On Time Task', depends_on=t1, duration=3, category=on_time)\nt3 = gc.add_task('Future Task', depends_on=t2, duration=7, category=upcoming)\n\nurl = gc.get_url()\nimage = gc.get_image()\n</pre>\n<p>Produces:</p>\n<img alt=\"https://chart.googleapis.com/chart?chxt=x,y&amp;chds=0,15&amp;chco=FFFFFF00,CC0000FF,00CC00FF,0000CCFF&amp;chbh=46,4,0&amp;chtt=Test%20Chart&amp;chxl=0:|20/02|21/02|22/02|23/02|24/02|25/02|26/02|27/02|28/02|01/03|02/03|03/03|04/03|05/03|06/03|07/03|1:|Future%20Task|On%20Time%20Task|Late%20Task&amp;chdl=|Late|On%20Time|Upcoming&amp;chd=t:0,5,8|5,0,0|0,3,0|0,0,7&amp;chg=6.66666666667,0&amp;chm=r,4D89F933,0,0,0.466666666667&amp;chs=650x200&amp;cht=bhs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/89dfa7cbaaeb65902096c217e7f53904eea7cc19/68747470733a2f2f63686172742e676f6f676c65617069732e636f6d2f63686172743f636878743d782c7926636864733d302c3135266368636f3d46464646464630302c43433030303046462c30304343303046462c303030304343464626636862683d34362c342c3026636874743d546573742532304368617274266368786c3d303a7c32302f30327c32312f30327c32322f30327c32332f30327c32342f30327c32352f30327c32362f30327c32372f30327c32382f30327c30312f30337c30322f30337c30332f30337c30342f30337c30352f30337c30362f30337c30372f30337c313a7c4675747572652532305461736b7c4f6e25323054696d652532305461736b7c4c6174652532305461736b266368646c3d7c4c6174657c4f6e25323054696d657c5570636f6d696e67266368643d743a302c352c387c352c302c307c302c332c307c302c302c37266368673d362e36363636363636363636372c302663686d3d722c34443839463933332c302c302c302e343636363636363636363637266368733d36353078323030266368743d626873\">\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Optional Progress indicator shades the elapsed area of the chart.</li>\n<li>Flexible chart width and height.</li>\n<li>Specify task colors using css rules.</li>\n<li>Flexibly specify dates using datetime.date objects, or tuples.</li>\n<li>Produce a Google Chart url, or a png image (requires <a href=\"http://www.pythonware.com/products/pil/\" rel=\"nofollow\">PIL</a>).</li>\n<li>Date span is automatically computed from tasks.</li>\n</ul>\n</div>\n<div id=\"classes\">\n<h2>Classes</h2>\n<p>There are 3 primary classes involved in the creation of a chart.</p>\n<div id=\"ganttchart\">\n<h3>GanttChart</h3>\n<p><strong>GanttChart(title,[ **kwargs])</strong></p>\n<blockquote>\n<p>Produce a Gantt Chart.</p>\n<p>Keyword Arguments:</p>\n<ul>\n<li><strong>width</strong> The width of the chart.</li>\n<li><strong>height</strong> The height of the chart.</li>\n<li><strong>progress</strong> A date representing the current time, to produce a shaded \u2018elapsed\u2019 region.</li>\n</ul>\n<p>Example initialization:</p>\n<pre>gc = GanttChart('Test Chart', width=600, height=200, progress=(2011, 02, 27))\n</pre>\n</blockquote>\n<p>Methods:</p>\n<ul>\n<li><strong>GanttChart.get_url()</strong> Get a Google Charts URL of the chart, for direct access</li>\n<li><strong>GanttChart.get_image()</strong> Get a <a href=\"http://www.pythonware.com/products/pil/\" rel=\"nofollow\">PIL</a> Image object, to be manipulated</li>\n<li><strong>GanttChart.get_image(save_path)</strong> Save a .png image to <em>save_path</em></li>\n</ul>\n</div>\n<div id=\"ganttcategory\">\n<h3>GanttCategory</h3>\n<p>Optional in common usage. Represents a class of Tasks with a color and a title.</p>\n<p><strong>GanttCategory(title[, color])</strong></p>\n<blockquote>\n<p>Produce a category object with a given <em>color</em>.  Color is specified using a hex string,\nand will be converted to an 8-byte rgba hex color string expected by Google Charts from any\nof the following formats:</p>\n<ul>\n<li>3-byte, e.g. \u2018f00\u2019 =&gt; \u2018FF0000FF\u2019</li>\n<li>4-byte, e.g. \u2018f00c\u2019 =&gt; \u2018FF0000CC\u2019</li>\n<li>6-byte, e.g. \u2018ff0000\u2019 =&gt; \u2018FF0000FF\u2019</li>\n<li>8-byte</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"gantttask\">\n<h3>GanttTask</h3>\n<p>Represents a single bar in the chart.  Must have a specified start and end date, although\nthese can be computed in different ways.</p>\n<p><strong>GanttTask(title[, start_date=None, end_date=None[, **kwargs]])</strong></p>\n<blockquote>\n<p>Keyword Arguments:</p>\n<ul>\n<li><strong>start_date</strong> The start date of the task</li>\n<li><strong>end_date</strong> The end date of the task</li>\n<li><strong>duration</strong> The duration, in days, of the task. May be used instead of <em>end_date</em></li>\n<li><strong>depends_on</strong> A GanttTask that must be completed before this one can begin. May be used instead of <em>start_date</em></li>\n<li><strong>category</strong> A GanttCategory to apply to this task.</li>\n<li><strong>color</strong> A quick way to specify color.  Don\u2019t use this when you have categories declared, you will get blank legend entries.</li>\n</ul>\n<p>Either <em>start_date</em> or <em>depends_on</em> <strong>must</strong> be specified.  Same with <em>end_date</em> and <em>duration</em>.</p>\n<p>If both <em>start_date</em> and <em>depends_on</em> are specified, <em>depends_on</em> is used.</p>\n<p>If both <em>end_date</em> and <em>duration</em> are specified, <em>duration</em> is used.</p>\n</blockquote>\n</div>\n</div>\n<div id=\"more-information\">\n<h2>More Information</h2>\n<p>Check out the doctests in the gantt.py file for more information.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (c) 2011 Adam Bard (adambard.com)</p>\n<p>Licensed under the MIT License: <a href=\"http://www.opensource.org/licenses/mit-license\" rel=\"nofollow\">http://www.opensource.org/licenses/mit-license</a></p>\n</div>\n\n          </div>"}, "last_serial": 792621, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "290b6ad31d3312507e7bdfc63dd74121", "sha256": "086498b7b73c29665076e1e8f81cae806c4f9c9ab2e52cb2775607a5b38d276d"}, "downloads": -1, "filename": "googlegantt-0.1.zip", "has_sig": false, "md5_digest": "290b6ad31d3312507e7bdfc63dd74121", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12016, "upload_time": "2011-03-01T23:02:14", "upload_time_iso_8601": "2011-03-01T23:02:14.604582Z", "url": "https://files.pythonhosted.org/packages/70/b1/419ba46f32e734bb48264ab034537cb3a7243a0e75dd7170f5b52d75bf11/googlegantt-0.1.zip", "yanked": false}], "0.2": [], "0.3": [{"comment_text": "", "digests": {"md5": "25c7777728a5857e0d33080ae128cb65", "sha256": "1f7a50e90513c579ca48dc4e15a743809a915d487e6cd6618645879e9181d630"}, "downloads": -1, "filename": "googlegantt-0.3.zip", "has_sig": false, "md5_digest": "25c7777728a5857e0d33080ae128cb65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12137, "upload_time": "2011-09-29T21:28:34", "upload_time_iso_8601": "2011-09-29T21:28:34.031471Z", "url": "https://files.pythonhosted.org/packages/56/b0/3992904dcb833e5dcc0ab6a1801bc1053c5d95ef08ec06497d1fe82cc8fc/googlegantt-0.3.zip", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "4d3d3fd884b6d357c3dae6c771773e38", "sha256": "8ba17f381fae2edde0fb49b65704dad38ba8805486c3a15fd3209bd7023db083"}, "downloads": -1, "filename": "googlegantt-0.4.zip", "has_sig": false, "md5_digest": "4d3d3fd884b6d357c3dae6c771773e38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12228, "upload_time": "2012-03-05T20:47:43", "upload_time_iso_8601": "2012-03-05T20:47:43.644917Z", "url": "https://files.pythonhosted.org/packages/45/70/274d857eb668f85c47087e23e520cbdf075643b2e7a9c0f86f3be523007a/googlegantt-0.4.zip", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "c07d750f4532787b0600d35978b4941f", "sha256": "aca6554fa03ea4c0515d8edb0efb32f32c9c01f77264b5aa3f40b3d4c95ad321"}, "downloads": -1, "filename": "googlegantt-0.5.zip", "has_sig": false, "md5_digest": "c07d750f4532787b0600d35978b4941f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12229, "upload_time": "2012-03-05T20:49:04", "upload_time_iso_8601": "2012-03-05T20:49:04.749754Z", "url": "https://files.pythonhosted.org/packages/64/09/27206f5a9bd80d401584682681696d9191d979d68a612589a7d9f0fedcc9/googlegantt-0.5.zip", "yanked": false}], "0.6": [], "0.6.1": [{"comment_text": "", "digests": {"md5": "8927875952d6fd51b7e6621b103bc852", "sha256": "4a2ef9484f339edcee192077b6b20ab064b0c0ab84a8bb77811302a3a7125763"}, "downloads": -1, "filename": "googlegantt-0.6.1.tar.gz", "has_sig": false, "md5_digest": "8927875952d6fd51b7e6621b103bc852", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6866, "upload_time": "2013-02-22T21:36:17", "upload_time_iso_8601": "2013-02-22T21:36:17.926154Z", "url": "https://files.pythonhosted.org/packages/0f/bc/a0587ebee6cc3f5b2dbc383bd860824784f049c8da6e27ec3b8e6234cfcb/googlegantt-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8927875952d6fd51b7e6621b103bc852", "sha256": "4a2ef9484f339edcee192077b6b20ab064b0c0ab84a8bb77811302a3a7125763"}, "downloads": -1, "filename": "googlegantt-0.6.1.tar.gz", "has_sig": false, "md5_digest": "8927875952d6fd51b7e6621b103bc852", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6866, "upload_time": "2013-02-22T21:36:17", "upload_time_iso_8601": "2013-02-22T21:36:17.926154Z", "url": "https://files.pythonhosted.org/packages/0f/bc/a0587ebee6cc3f5b2dbc383bd860824784f049c8da6e27ec3b8e6234cfcb/googlegantt-0.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:37 2020"}