{"info": {"author": "TeskaLabs Ltd", "author_email": "info@teskalabs.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "BSPump: A real-time stream processor for Python 3.5+\n====================================================\n\n.. image:: https://readthedocs.org/projects/bspump/badge/?version=latest\n    :target: https://docs.libertyaces.com/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://travis-ci.com/LibertyAces/BitSwanPump.svg?branch=master\n    :alt: Build status\n    :target: https://travis-ci.com/LibertyAces/BitSwanPump\n\n.. image:: https://codecov.io/gh/LibertyAces/BitSwanPump/branch/master/graph/badge.svg?sanitize=true\n    :alt: Code coverage\n    :target: https://codecov.io/gh/LibertyAces/BitSwanPump\n\n.. image:: https://badges.gitter.im/TeskaLabs/bspump.svg\n    :alt: Join the chat at https://gitter.im/TeskaLabs/bspump\n    :target: https://gitter.im/TeskaLabs/bspump?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\nPrinciples\n----------\n\n* Write once, use many times\n* Everything is a stream\n* Schema-less\n* Kappa architecture\n* Real-Time\n* High performance\n* Simple to use and well documented, so anyone can write their own stream processor\n* Asynchronous via Python 3.5+ ``async``/``await`` and ``asyncio``\n* `Event driven Architecture <https://en.wikipedia.org/wiki/Event-driven_architecture>`_ / `Reactor pattern <https://en.wikipedia.org/wiki/Reactor_pattern>`_\n* Single-threaded core but compatible with threads\n* Compatible with `pypy <http://pypy.org>`_, Just-In-Time compiler capable of boosting Python code performace more then 5x times\n* Good citizen of the Python ecosystem \n* Modularized\n\n\nStream processor example\n------------------------\n\n.. code:: python\n\n    #!/usr/bin/env python3\n    import bspump\n    import bspump.socket\n    import bspump.common\n    import bspump.elasticsearch\n\n    class MyPipeline(bspump.Pipeline):\n        def __init__(self, app):\n            super().__init__(app)\n            self.build(\n                bspump.socket.TCPStreamSource(app, self),\n                bspump.common.JSONParserProcessor(app, self),\n                bspump.elasticsearch.ElasticSearchSink(app, self, \"ESConnection\")\n            )\n\n\n    if __name__ == '__main__':\n        app = bspump.BSPumpApplication()\n        svc = app.get_service(\"bspump.PumpService\")\n        svc.add_connection(bspump.elasticsearch.ElasticSearchConnection(app, \"ESConnection\"))\n        svc.add_pipeline(MyPipeline(app))\n        app.run()\n\n\nVideo tutorial\n^^^^^^^^^^^^^^\n\n.. image:: http://img.youtube.com/vi/QvjiPxO4w6w/0.jpg\n   :target: https://www.youtube.com/watch?v=QvjiPxO4w6w&list=PLb0LvCJCZKt_1QcQwpJXqsm-AY_ty4udo\n\nBuild\n-----\n\nDocker build\n^^^^^^^^^^^^\nDockerfile and instructions are in `separate repository <https://github.com/LibertyAces/docker-bspump/>`_.\n\n\nPyPI release\n^^^^^^^^^^^^\nReleases are happening from a git tag (format: ``vYY.MM``)\n``git tag -a v19.07``\n\nFollowing the `PyPI packaging <https://packaging.python.org/tutorials/packaging-projects/#generating-distribution-archives>`_, generate `distribution package <https://packaging.python.org/glossary/#term-distribution-package>`_ and `upload it <https://packaging.python.org/tutorials/packaging-projects/#uploading-the-distribution-archives>`_ using following command ``python -m twine upload dist/*``\n\n\nBlank application setup\n-----------------------\n\nYou can clone blank application from it's `own repository <https://github.com/LibertyAces/BitSwanTelco-BlankApp>`_.\n\n\nAvailable technologies\n----------------------\n\n* ``bspump.amqp`` AMQP/RabbitMQ connection, source and sink\n* ``bspump.avro`` Apache Avro file source and sink\n* ``bspump.common`` Common processors and parsers\n* ``bspump.elasticsearch`` ElasticSearch connection, source and sink\n* ``bspump.file`` File sources and sinks (plain files, JSON, CSV)\n* ``bspump.filter`` Content, Attribute and TimeDrift filters\n* ``bspump.http.client``  HTTP client source, WebSocket client sink\n* ``bspump.http.web`` HTTP server source and sink, WebSocket server source\n* ``bspump.influxdb`` InfluxDB connection and sink\n* ``bspump.kafka`` Kafka connection, source and sink\n* ``bspump.mail`` SMTP connection and sink\n* ``bspump.mongodb`` MongoDB connection and lookup\n* ``bspump.mysql`` MySQL connection, source and sink\n* ``bspump.parquet`` Apache Parquet file sink\n* ``bspump.postgresql`` PostgreSQL connection and sink\n* ``bspump.slack`` Slack connection and sink\n* ``bspump.socket`` TCP source, UDP source\n* ``bspump.trigger`` Opportunistic, PubSub and Periodic triggers\n* ``bspump.crypto`` Cryptography\n\n  * Hashing: SHA224, SHA256, SHA384, SHA512, SHA1, MD5, BLAKE2b, BLAKE2s\n  * Symmetric Encryption: AES 128, AES 192, AES 256\n\n* ``bspump.analyzer``\n\n  * Time Window analyzer\n  * Session analyzer\n  * Geographical analyzer\n  * Time Drift analyzer\n\n* ``bspump.lookup``\n\n  * GeoIP Lookup\n\n* ``bspump.unittest``\n\n  * Interface for testing Processors / Pipelines\n\n* ``bspump.web`` Pump API endpoints for pipelines, lookups etc.\n\nGoogle Sheet with technological compatiblity matrix:\nhttps://docs.google.com/spreadsheets/d/1L1DvSuHuhKUyZ3FEFxqEKNpSoamPH2Z1ZaFuHyageoI/edit?usp=sharing\n\n\nHigh-level architecture\n-----------------------\n\n\n.. image:: ./doc/_static/bspump-architecture.png\n    :alt: Schema of BSPump high-level achitecture\n\n\nUnit test\n---------\n\n.. code:: python\n\n    from unittest.mock import MagicMock\n    from bspump.unittest import ProcessorTestCase\n\n\n    class MyProcessorTestCase(ProcessorTestCase):\n\n        def test_my_processor(self):\n\n            # setup processor for test\n            self.set_up_processor(my_project.processor.MyProcessor, \"proc-arg\", proc=\"key_arg\")\n\n            # mock methods to suit your needs on pipeline ..\n            self.Pipeline.method = MagicMock()\n\n            # .. or instance of processor\n            self.Pipeline.Processor.method = MagicMock()\n\n            output = self.execute(\n                [(None, {'foo': 'bar'})]  # Context, event\n            )\n\n            # assert output\n            self.assertEqual(\n                [event for context, event in output],\n                [{'FOO': 'BAR'}]\n            )\n\n            # asssert expected calls on `self.Pipeline.method` or `self.Pipeline.Processor.method`\n            self.Pipeline.Processor.method.assert_called_with(**expected)\n\n\n\nRunning of unit tests\n---------------------\n\n``python3 -m unittest test``\n\nYou can replace ``test`` with a location of your unit test module.\n\n\nLicence\n-------\n\nBSPump is an open-source software, available under BSD 3-Clause License.\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LibertyAces/BitSwanPump", "keywords": "asyncio asab", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "bspump", "package_url": "https://pypi.org/project/bspump/", "platform": "any", "project_url": "https://pypi.org/project/bspump/", "project_urls": {"Homepage": "https://github.com/LibertyAces/BitSwanPump", "Source": "https://github.com/LibertyAces/BitSwanPump"}, "release_url": "https://pypi.org/project/bspump/20.3.4/", "requires_dist": ["aiohttp (<4.0,>=3.5.4)", "aiokafka (<1.0,>=0.5.1)", "aiomysql (<0.1,>=0.0.20)", "aiosmtplib (<2.0,>=1.0.5)", "asab (<21.0,>=20.1)", "fastavro (<1.0,>=0.21.24)", "google-api-python-client (<2,>=1.7.10)", "mongoquery (<2.0,>=1.3.5)", "motor (<3.0,>=2.0.0)", "mysql-replication (<1.0,>=0.19)", "numpy (<2.0,>=1.18.1)", "pandas (<1.0,>=0.24.2)", "pika (<2.0,>=1.0.1)", "pymysql (<=0.9.2,>=0.9)", "pytz (<2020.0,>=2019.1)", "requests (<3.0,>=2.21.0)"], "requires_python": "", "summary": "BSPump is a real-time stream processor for Python 3.5+", "version": "20.3.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://docs.libertyaces.com/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bcf0d7c97ca37e7b6aec96d85cb90a72457ed44b/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f627370756d702f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://travis-ci.com/LibertyAces/BitSwanPump\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/04de0d35a2f85de45743faac1c73f0fd364c63c5/68747470733a2f2f7472617669732d63692e636f6d2f4c696265727479416365732f4269745377616e50756d702e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/LibertyAces/BitSwanPump\" rel=\"nofollow\"><img alt=\"Code coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f7b78a167eb62b2e12c9ed21c6fe939ff074e8cd/68747470733a2f2f636f6465636f762e696f2f67682f4c696265727479416365732f4269745377616e50756d702f6272616e63682f6d61737465722f67726170682f62616467652e7376673f73616e6974697a653d74727565\"></a>\n<a href=\"https://gitter.im/TeskaLabs/bspump?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Join the chat at https://gitter.im/TeskaLabs/bspump\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1fadad846ce61ab434d911103ddea4dfedbe2a29/68747470733a2f2f6261646765732e6769747465722e696d2f5465736b614c6162732f627370756d702e737667\"></a>\n<div id=\"principles\">\n<h2>Principles</h2>\n<ul>\n<li>Write once, use many times</li>\n<li>Everything is a stream</li>\n<li>Schema-less</li>\n<li>Kappa architecture</li>\n<li>Real-Time</li>\n<li>High performance</li>\n<li>Simple to use and well documented, so anyone can write their own stream processor</li>\n<li>Asynchronous via Python 3.5+ <tt>async</tt>/<tt>await</tt> and <tt>asyncio</tt></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Event-driven_architecture\" rel=\"nofollow\">Event driven Architecture</a> / <a href=\"https://en.wikipedia.org/wiki/Reactor_pattern\" rel=\"nofollow\">Reactor pattern</a></li>\n<li>Single-threaded core but compatible with threads</li>\n<li>Compatible with <a href=\"http://pypy.org\" rel=\"nofollow\">pypy</a>, Just-In-Time compiler capable of boosting Python code performace more then 5x times</li>\n<li>Good citizen of the Python ecosystem</li>\n<li>Modularized</li>\n</ul>\n</div>\n<div id=\"stream-processor-example\">\n<h2>Stream processor example</h2>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n<span class=\"kn\">import</span> <span class=\"nn\">bspump</span>\n<span class=\"kn\">import</span> <span class=\"nn\">bspump.socket</span>\n<span class=\"kn\">import</span> <span class=\"nn\">bspump.common</span>\n<span class=\"kn\">import</span> <span class=\"nn\">bspump.elasticsearch</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyPipeline</span><span class=\"p\">(</span><span class=\"n\">bspump</span><span class=\"o\">.</span><span class=\"n\">Pipeline</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">(</span>\n            <span class=\"n\">bspump</span><span class=\"o\">.</span><span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">TCPStreamSource</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">),</span>\n            <span class=\"n\">bspump</span><span class=\"o\">.</span><span class=\"n\">common</span><span class=\"o\">.</span><span class=\"n\">JSONParserProcessor</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">),</span>\n            <span class=\"n\">bspump</span><span class=\"o\">.</span><span class=\"n\">elasticsearch</span><span class=\"o\">.</span><span class=\"n\">ElasticSearchSink</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">\"ESConnection\"</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">bspump</span><span class=\"o\">.</span><span class=\"n\">BSPumpApplication</span><span class=\"p\">()</span>\n    <span class=\"n\">svc</span> <span class=\"o\">=</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">get_service</span><span class=\"p\">(</span><span class=\"s2\">\"bspump.PumpService\"</span><span class=\"p\">)</span>\n    <span class=\"n\">svc</span><span class=\"o\">.</span><span class=\"n\">add_connection</span><span class=\"p\">(</span><span class=\"n\">bspump</span><span class=\"o\">.</span><span class=\"n\">elasticsearch</span><span class=\"o\">.</span><span class=\"n\">ElasticSearchConnection</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"s2\">\"ESConnection\"</span><span class=\"p\">))</span>\n    <span class=\"n\">svc</span><span class=\"o\">.</span><span class=\"n\">add_pipeline</span><span class=\"p\">(</span><span class=\"n\">MyPipeline</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">))</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<div id=\"video-tutorial\">\n<h3>Video tutorial</h3>\n<a href=\"https://www.youtube.com/watch?v=QvjiPxO4w6w&amp;list=PLb0LvCJCZKt_1QcQwpJXqsm-AY_ty4udo\" rel=\"nofollow\"><img alt=\"http://img.youtube.com/vi/QvjiPxO4w6w/0.jpg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c413c2182bcac0f6a017472746335ea9cae21f84/687474703a2f2f696d672e796f75747562652e636f6d2f76692f51766a6950784f347736772f302e6a7067\"></a>\n</div>\n</div>\n<div id=\"build\">\n<h2>Build</h2>\n<div id=\"docker-build\">\n<h3>Docker build</h3>\n<p>Dockerfile and instructions are in <a href=\"https://github.com/LibertyAces/docker-bspump/\" rel=\"nofollow\">separate repository</a>.</p>\n</div>\n<div id=\"pypi-release\">\n<h3>PyPI release</h3>\n<p>Releases are happening from a git tag (format: <tt>vYY.MM</tt>)\n<tt>git tag <span class=\"pre\">-a</span> v19.07</tt></p>\n<p>Following the <a href=\"https://packaging.python.org/tutorials/packaging-projects/#generating-distribution-archives\" rel=\"nofollow\">PyPI packaging</a>, generate <a href=\"https://packaging.python.org/glossary/#term-distribution-package\" rel=\"nofollow\">distribution package</a> and <a href=\"https://packaging.python.org/tutorials/packaging-projects/#uploading-the-distribution-archives\" rel=\"nofollow\">upload it</a> using following command <tt>python <span class=\"pre\">-m</span> twine upload dist/*</tt></p>\n</div>\n</div>\n<div id=\"blank-application-setup\">\n<h2>Blank application setup</h2>\n<p>You can clone blank application from it\u2019s <a href=\"https://github.com/LibertyAces/BitSwanTelco-BlankApp\" rel=\"nofollow\">own repository</a>.</p>\n</div>\n<div id=\"available-technologies\">\n<h2>Available technologies</h2>\n<ul>\n<li><tt>bspump.amqp</tt> AMQP/RabbitMQ connection, source and sink</li>\n<li><tt>bspump.avro</tt> Apache Avro file source and sink</li>\n<li><tt>bspump.common</tt> Common processors and parsers</li>\n<li><tt>bspump.elasticsearch</tt> ElasticSearch connection, source and sink</li>\n<li><tt>bspump.file</tt> File sources and sinks (plain files, JSON, CSV)</li>\n<li><tt>bspump.filter</tt> Content, Attribute and TimeDrift filters</li>\n<li><tt>bspump.http.client</tt>  HTTP client source, WebSocket client sink</li>\n<li><tt>bspump.http.web</tt> HTTP server source and sink, WebSocket server source</li>\n<li><tt>bspump.influxdb</tt> InfluxDB connection and sink</li>\n<li><tt>bspump.kafka</tt> Kafka connection, source and sink</li>\n<li><tt>bspump.mail</tt> SMTP connection and sink</li>\n<li><tt>bspump.mongodb</tt> MongoDB connection and lookup</li>\n<li><tt>bspump.mysql</tt> MySQL connection, source and sink</li>\n<li><tt>bspump.parquet</tt> Apache Parquet file sink</li>\n<li><tt>bspump.postgresql</tt> PostgreSQL connection and sink</li>\n<li><tt>bspump.slack</tt> Slack connection and sink</li>\n<li><tt>bspump.socket</tt> TCP source, UDP source</li>\n<li><tt>bspump.trigger</tt> Opportunistic, PubSub and Periodic triggers</li>\n<li><tt>bspump.crypto</tt> Cryptography<ul>\n<li>Hashing: SHA224, SHA256, SHA384, SHA512, SHA1, MD5, BLAKE2b, BLAKE2s</li>\n<li>Symmetric Encryption: AES 128, AES 192, AES 256</li>\n</ul>\n</li>\n<li><tt>bspump.analyzer</tt><ul>\n<li>Time Window analyzer</li>\n<li>Session analyzer</li>\n<li>Geographical analyzer</li>\n<li>Time Drift analyzer</li>\n</ul>\n</li>\n<li><tt>bspump.lookup</tt><ul>\n<li>GeoIP Lookup</li>\n</ul>\n</li>\n<li><tt>bspump.unittest</tt><ul>\n<li>Interface for testing Processors / Pipelines</li>\n</ul>\n</li>\n<li><tt>bspump.web</tt> Pump API endpoints for pipelines, lookups etc.</li>\n</ul>\n<p>Google Sheet with technological compatiblity matrix:\n<a href=\"https://docs.google.com/spreadsheets/d/1L1DvSuHuhKUyZ3FEFxqEKNpSoamPH2Z1ZaFuHyageoI/edit?usp=sharing\" rel=\"nofollow\">https://docs.google.com/spreadsheets/d/1L1DvSuHuhKUyZ3FEFxqEKNpSoamPH2Z1ZaFuHyageoI/edit?usp=sharing</a></p>\n</div>\n<div id=\"high-level-architecture\">\n<h2>High-level architecture</h2>\n<img alt=\"Schema of BSPump high-level achitecture\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fcc0d6e5bb12ccbe18940e591f45718ba5f7c42b/2e2f646f632f5f7374617469632f627370756d702d6172636869746563747572652e706e67\">\n</div>\n<div id=\"unit-test\">\n<h2>Unit test</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">unittest.mock</span> <span class=\"kn\">import</span> <span class=\"n\">MagicMock</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bspump.unittest</span> <span class=\"kn\">import</span> <span class=\"n\">ProcessorTestCase</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyProcessorTestCase</span><span class=\"p\">(</span><span class=\"n\">ProcessorTestCase</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">test_my_processor</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n\n        <span class=\"c1\"># setup processor for test</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_up_processor</span><span class=\"p\">(</span><span class=\"n\">my_project</span><span class=\"o\">.</span><span class=\"n\">processor</span><span class=\"o\">.</span><span class=\"n\">MyProcessor</span><span class=\"p\">,</span> <span class=\"s2\">\"proc-arg\"</span><span class=\"p\">,</span> <span class=\"n\">proc</span><span class=\"o\">=</span><span class=\"s2\">\"key_arg\"</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># mock methods to suit your needs on pipeline ..</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Pipeline</span><span class=\"o\">.</span><span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"n\">MagicMock</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># .. or instance of processor</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Pipeline</span><span class=\"o\">.</span><span class=\"n\">Processor</span><span class=\"o\">.</span><span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"n\">MagicMock</span><span class=\"p\">()</span>\n\n        <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span>\n            <span class=\"p\">[(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'foo'</span><span class=\"p\">:</span> <span class=\"s1\">'bar'</span><span class=\"p\">})]</span>  <span class=\"c1\"># Context, event</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># assert output</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEqual</span><span class=\"p\">(</span>\n            <span class=\"p\">[</span><span class=\"n\">event</span> <span class=\"k\">for</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">event</span> <span class=\"ow\">in</span> <span class=\"n\">output</span><span class=\"p\">],</span>\n            <span class=\"p\">[{</span><span class=\"s1\">'FOO'</span><span class=\"p\">:</span> <span class=\"s1\">'BAR'</span><span class=\"p\">}]</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># asssert expected calls on `self.Pipeline.method` or `self.Pipeline.Processor.method`</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">Pipeline</span><span class=\"o\">.</span><span class=\"n\">Processor</span><span class=\"o\">.</span><span class=\"n\">method</span><span class=\"o\">.</span><span class=\"n\">assert_called_with</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">expected</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"running-of-unit-tests\">\n<h2>Running of unit tests</h2>\n<p><tt>python3 <span class=\"pre\">-m</span> unittest test</tt></p>\n<p>You can replace <tt>test</tt> with a location of your unit test module.</p>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<p>BSPump is an open-source software, available under BSD 3-Clause License.</p>\n</div>\n\n          </div>"}, "last_serial": 6821517, "releases": {"19.10": [{"comment_text": "", "digests": {"md5": "327bd9dbb4f898a6bc470ac5dd59233a", "sha256": "d3e00a31171ec55645b327bd01b3158d9a4cda696bb2c1b3b8643f88f942a64d"}, "downloads": -1, "filename": "bspump-19.10-py3-none-any.whl", "has_sig": false, "md5_digest": "327bd9dbb4f898a6bc470ac5dd59233a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 159682, "upload_time": "2019-10-03T16:00:27", "upload_time_iso_8601": "2019-10-03T16:00:27.726987Z", "url": "https://files.pythonhosted.org/packages/0c/96/f852f7312cfcedd4326df2ea8eb98ef01acf2ad60b5fd72d6a3c962d2c3e/bspump-19.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c30bc8f2656c4d8a9837f6c92fbecfea", "sha256": "ad9ea4c6ce948181646a291025df50bde292e291d849699b0af55c717fbb4ed9"}, "downloads": -1, "filename": "bspump-19.10.tar.gz", "has_sig": false, "md5_digest": "c30bc8f2656c4d8a9837f6c92fbecfea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 99111, "upload_time": "2019-10-03T16:00:30", "upload_time_iso_8601": "2019-10-03T16:00:30.477372Z", "url": "https://files.pythonhosted.org/packages/f6/9a/6fb577969c10a775647da91a7fc47fd54f318f10b646d9a85dae9b102c0f/bspump-19.10.tar.gz", "yanked": false}], "19.10.1": [{"comment_text": "", "digests": {"md5": "347c89c1d08ed6ddb8f6156826988b98", "sha256": "224c4bf9e31b4ded141dfbb8a6db0065831ecf44c61618b43afbf71686437485"}, "downloads": -1, "filename": "bspump-19.10.1-py3-none-any.whl", "has_sig": false, "md5_digest": "347c89c1d08ed6ddb8f6156826988b98", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 173955, "upload_time": "2019-10-23T15:48:30", "upload_time_iso_8601": "2019-10-23T15:48:30.149826Z", "url": "https://files.pythonhosted.org/packages/a6/bb/1297ba3a95e09bc3ac8171d4aaae7b47daef92ad690e0b8579054646a6c2/bspump-19.10.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9f80313c6bb592e7743522600e5e03c", "sha256": "92b4799392c269472c0144e1fa3a7fcd987ec846a88ec94b9f9e433686d61560"}, "downloads": -1, "filename": "bspump-19.10.1.tar.gz", "has_sig": false, "md5_digest": "d9f80313c6bb592e7743522600e5e03c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111471, "upload_time": "2019-10-23T15:48:32", "upload_time_iso_8601": "2019-10-23T15:48:32.767752Z", "url": "https://files.pythonhosted.org/packages/7a/c2/7b5c0ac967b1a5e352c9d9d030f3b52c763d74e65df74fe233ad464f28aa/bspump-19.10.1.tar.gz", "yanked": false}], "19.11": [{"comment_text": "", "digests": {"md5": "468690247717faa8199b1e8fa6734726", "sha256": "64666a3ede544d45ba9e919c6362995a78bb7aceaa971a8b950502c17cdf2980"}, "downloads": -1, "filename": "bspump-19.11-py3-none-any.whl", "has_sig": false, "md5_digest": "468690247717faa8199b1e8fa6734726", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 178589, "upload_time": "2019-11-07T15:56:29", "upload_time_iso_8601": "2019-11-07T15:56:29.073411Z", "url": "https://files.pythonhosted.org/packages/15/d0/44324417cad24e8bb894b15acfba2a893d434d540eccc78da013264dad26/bspump-19.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1368be6aaf183f0803be436a36f2fc06", "sha256": "3190e8dc37ec464b06121eb0f0f74ff3692861c49b50562250c15aeecf6577c8"}, "downloads": -1, "filename": "bspump-19.11.tar.gz", "has_sig": false, "md5_digest": "1368be6aaf183f0803be436a36f2fc06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115259, "upload_time": "2019-11-07T15:56:31", "upload_time_iso_8601": "2019-11-07T15:56:31.393019Z", "url": "https://files.pythonhosted.org/packages/24/a8/5c949cc122c23c215184a0a71c6acb8ab73934b7ef158f0dd30214d1316c/bspump-19.11.tar.gz", "yanked": false}], "19.12": [{"comment_text": "", "digests": {"md5": "136826eeaa87b447d7f18a89e84bfe61", "sha256": "ee77e0f1a1cb40dafd2cde5624e5d4da695caa73eb43d0188777808500b88eae"}, "downloads": -1, "filename": "bspump-19.12-py3-none-any.whl", "has_sig": false, "md5_digest": "136826eeaa87b447d7f18a89e84bfe61", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 183403, "upload_time": "2019-12-19T14:09:31", "upload_time_iso_8601": "2019-12-19T14:09:31.264006Z", "url": "https://files.pythonhosted.org/packages/c2/20/a2e7510fa88e850771817e66318edb81d8c9950f0f9226815fb831a5f015/bspump-19.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e17d53d8280379fe2665c9dd023eaf2", "sha256": "0d7c0bbd0456c9a55e9a2ab809a7840a17af1277312113e012884fe96c91f9be"}, "downloads": -1, "filename": "bspump-19.12.tar.gz", "has_sig": false, "md5_digest": "1e17d53d8280379fe2665c9dd023eaf2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 117750, "upload_time": "2019-12-19T14:09:33", "upload_time_iso_8601": "2019-12-19T14:09:33.831671Z", "url": "https://files.pythonhosted.org/packages/a0/89/854ffa9799d014438671200aa2092dcf02a58f508c671819f6751e5e7222/bspump-19.12.tar.gz", "yanked": false}], "19.7": [{"comment_text": "", "digests": {"md5": "14355f8571090f24c5f0b15da9293e0a", "sha256": "948b71f645273a72f64f55755ab25200f3b6f0a493245cbbedff8e4eca3ff508"}, "downloads": -1, "filename": "bspump-19.7-py3-none-any.whl", "has_sig": false, "md5_digest": "14355f8571090f24c5f0b15da9293e0a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 137976, "upload_time": "2019-07-19T10:08:52", "upload_time_iso_8601": "2019-07-19T10:08:52.206681Z", "url": "https://files.pythonhosted.org/packages/1a/8f/0a167ec0638aed84b7dc1d410f9751a5407de514ca79dc7b7304c5ed414e/bspump-19.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7eda66b65784e59975198e759bcd841", "sha256": "b6ec9a32117e5e357f4410c69d8b6f9d56eec30fb85a53bd7bb41b7c5c6128d6"}, "downloads": -1, "filename": "bspump-19.7.tar.gz", "has_sig": false, "md5_digest": "d7eda66b65784e59975198e759bcd841", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83791, "upload_time": "2019-07-19T10:08:55", "upload_time_iso_8601": "2019-07-19T10:08:55.129995Z", "url": "https://files.pythonhosted.org/packages/54/0f/2a394fbbd105983da7144bb9847ba39dbb2029bd2dec8a788db7fe34645c/bspump-19.7.tar.gz", "yanked": false}], "19.9": [{"comment_text": "", "digests": {"md5": "27f81f88d2704260f2ae352dba5b7902", "sha256": "2e60eacdb691427cfd1ebd64fc543a658371a66c49061fbe6f1efc4e34d566f2"}, "downloads": -1, "filename": "bspump-19.9-py3-none-any.whl", "has_sig": false, "md5_digest": "27f81f88d2704260f2ae352dba5b7902", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 159550, "upload_time": "2019-09-19T10:38:42", "upload_time_iso_8601": "2019-09-19T10:38:42.270942Z", "url": "https://files.pythonhosted.org/packages/96/d2/a17d16f03780e5a99b44c6f8dd37dc23082eaf0060d07eb0d81d5b27bad0/bspump-19.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1bd91375241bdad3db0f72c20ecfe98a", "sha256": "7b57f95551d19acbacc7f9638d464fd12f70f90237029b465613360f3a0c3751"}, "downloads": -1, "filename": "bspump-19.9.tar.gz", "has_sig": false, "md5_digest": "1bd91375241bdad3db0f72c20ecfe98a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98988, "upload_time": "2019-09-19T10:38:44", "upload_time_iso_8601": "2019-09-19T10:38:44.935653Z", "url": "https://files.pythonhosted.org/packages/2e/6b/3303ed2a31fb69c1ebef639bb3a488207e21a5e2eb75e32a2e2299cf149d/bspump-19.9.tar.gz", "yanked": false}], "20.1": [{"comment_text": "", "digests": {"md5": "512688c74a129094a11452bb14429480", "sha256": "545f3f575164fe04b5b3a60090075ccd645e4da4e0d9bf232539e44e09383f11"}, "downloads": -1, "filename": "bspump-20.1-py3-none-any.whl", "has_sig": false, "md5_digest": "512688c74a129094a11452bb14429480", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 187005, "upload_time": "2020-02-11T16:38:10", "upload_time_iso_8601": "2020-02-11T16:38:10.497499Z", "url": "https://files.pythonhosted.org/packages/c2/d9/0734ad309ec77dff65d2dfcdfd2725e9c712a3d604573ae42847467dfb0f/bspump-20.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0fceb5731bc36df75553f589dce05ea", "sha256": "813a277965f8dda0d03db4856cd83b686034d60dfc5788adab74cf7c85787621"}, "downloads": -1, "filename": "bspump-20.1.tar.gz", "has_sig": false, "md5_digest": "e0fceb5731bc36df75553f589dce05ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 120604, "upload_time": "2020-02-11T16:38:13", "upload_time_iso_8601": "2020-02-11T16:38:13.247423Z", "url": "https://files.pythonhosted.org/packages/01/76/225e27c51f216fdeba9c27f0486485c0db9e624f97451360fe25d84d2f05/bspump-20.1.tar.gz", "yanked": false}], "20.3": [{"comment_text": "", "digests": {"md5": "c78bc05437c5a702682dff46e1805a06", "sha256": "98b91d4b01e87e98aa5ade8d8e2c470a6eb51ca81a7537f99a2caf46e1f06c4e"}, "downloads": -1, "filename": "bspump-20.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c78bc05437c5a702682dff46e1805a06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 196644, "upload_time": "2020-03-16T13:56:41", "upload_time_iso_8601": "2020-03-16T13:56:41.471619Z", "url": "https://files.pythonhosted.org/packages/34/f3/3a49fe928fd1195daac57e12afcbda0489a036d51119cee46f7fa3fc3b41/bspump-20.3-py3-none-any.whl", "yanked": false}], "20.3.4": [{"comment_text": "", "digests": {"md5": "53029f27ebd1a84c5f451b07b23821af", "sha256": "65c8f6edd9c11d52e42cdc019686adbb6ae684178807c79b47dc1f78f87a20a2"}, "downloads": -1, "filename": "bspump-20.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "53029f27ebd1a84c5f451b07b23821af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 196675, "upload_time": "2020-03-16T14:02:49", "upload_time_iso_8601": "2020-03-16T14:02:49.886962Z", "url": "https://files.pythonhosted.org/packages/8b/cb/16ca9e404b1263a38cd8882f575cd5222e961b0ac07805b9db487704fd52/bspump-20.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "071ae0f3f8a998d0cc0f11396e8811ba", "sha256": "adf325f9689e76198c48b4546d895da4567d1abc49c1660fef4f3af4a098f0c4"}, "downloads": -1, "filename": "bspump-20.3.4.tar.gz", "has_sig": false, "md5_digest": "071ae0f3f8a998d0cc0f11396e8811ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 124008, "upload_time": "2020-03-16T14:02:52", "upload_time_iso_8601": "2020-03-16T14:02:52.928980Z", "url": "https://files.pythonhosted.org/packages/a7/e6/84f4b7f95951d747c7e0e08fec319c1367e3a2e4d1addf1c55464dfdafdf/bspump-20.3.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "53029f27ebd1a84c5f451b07b23821af", "sha256": "65c8f6edd9c11d52e42cdc019686adbb6ae684178807c79b47dc1f78f87a20a2"}, "downloads": -1, "filename": "bspump-20.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "53029f27ebd1a84c5f451b07b23821af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 196675, "upload_time": "2020-03-16T14:02:49", "upload_time_iso_8601": "2020-03-16T14:02:49.886962Z", "url": "https://files.pythonhosted.org/packages/8b/cb/16ca9e404b1263a38cd8882f575cd5222e961b0ac07805b9db487704fd52/bspump-20.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "071ae0f3f8a998d0cc0f11396e8811ba", "sha256": "adf325f9689e76198c48b4546d895da4567d1abc49c1660fef4f3af4a098f0c4"}, "downloads": -1, "filename": "bspump-20.3.4.tar.gz", "has_sig": false, "md5_digest": "071ae0f3f8a998d0cc0f11396e8811ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 124008, "upload_time": "2020-03-16T14:02:52", "upload_time_iso_8601": "2020-03-16T14:02:52.928980Z", "url": "https://files.pythonhosted.org/packages/a7/e6/84f4b7f95951d747c7e0e08fec319c1367e3a2e4d1addf1c55464dfdafdf/bspump-20.3.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:11 2020"}