{"info": {"author": "Aeneas", "author_email": "kai.he@taraxa.io", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "# pytaraxa\n\nTaraxa RPC client in python.  \n\npytaraxa pypi address: [pytaraxa](https://pypi.org/project/pytaraxa/)  \n\nTaraxa official website: [taraxa.io](https://taraxa.io)  \n## install\n```\ngit clone https://github.com/Taraxa-project/taraxa-py\ncd taraxa-py\npython setup.py install\n```\nor\n```\npip install pytaraxa\n```\n## config  \n\ndefault parameters:  \n``` python\nconfig={\n    \"ip\":\"127.0.0.1\",  \n    \"port\":7777,  \n    \"jsonrpc\":2.0,  \n    \"id\":1\n}\n```\nfor all methods, if no parameter given, default will be used.\n\n1. package level config set and reset.  \nany of below config will influence the whole packge.\n``` python\nimport pytaraxa.jsonrpc as rpc\nimport pytaraxa.eth as eth\nimport pytaraxa.taraxa as taraxa\nimport pytaraxaa.net as net\n\nrpc.set({\n    \"ip\":\"127.0.0.1\",  \n    \"port\":7777,  \n    \"jsonrpc\":2.0,  \n    \"id\":1 \n})\n\neth.set({\n    \"ip\":\"35.224.183.106\",  \n})\ntaraxa.set({\n    \"ip\":\"35.224.183.106\",  \n})\nnet.set({\n    \"ip\":\"35.224.183.106\",  \n})\n\nrpc.reset()\neth.reset()\ntaraxa.reset()\nnet.reset()\n```\n2. function level config set  \nfunction level config set only influence the function it self once.\n``` python\nimport pytaraxa.eth as eth\nr=eth.blockNumber(ip='127.0.0.1' ,port=7777)\nprint(r)\n```\n\n## usage\n\n\n\n\n\n- low level use\n``` python\nimport pytaraxa.jsonrpc as rpc\ndata = '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}'\nr = rpc.send(data)\nprint(r)\n\ndata = {\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}\nr = rpc.send(data)\nprint(r)\n```\ndata can be json string or dict. response is json string.\n- middle level use\n``` python\nfrom pytaraxa.jsonrpc  import *\nr = eth_blockNumber()\nprint(r)\n```\nresponse is json string.\n- high level use\n``` python\nimport pytaraxa.eth as eth\nr = eth.blockNumber()\nprint(r)\n```\nresponse is parsed to python types.\n- ethereum web3 like use  \n\n``` python\nfrom pytaraxa.web3 import Web3\nw3 = Web3(ip=\"35.224.183.106\" ,port=7777)\nr = w3.blockNumber()\nprint(r)\n\nw3.ip = \"35.224.183.106\"\nw3.port = 7778\nr = w3.blockNumber()\nprint(r)\n```\nWeb3 object w3 will hold the ip and port once you set.   \nw3 method will use the ip and port you set until you reset it.\n## sub packages\n- jsonrpc  \n- eth  \n- web3  \n- net  \nTODO\n- admin  \nTODO\n- admmin_net  \nTODO\n- debug  \nTODO\n- test  \nTODO\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://taraxa.io", "keywords": "Taraxa blockchain RPC client", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pytaraxa", "package_url": "https://pypi.org/project/pytaraxa/", "platform": "", "project_url": "https://pypi.org/project/pytaraxa/", "project_urls": {"Homepage": "http://taraxa.io"}, "release_url": "https://pypi.org/project/pytaraxa/0.0.4/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Taraxa blockchain  RPC client.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pytaraxa</h1>\n<p>Taraxa RPC client in python.</p>\n<p>pytaraxa pypi address: <a href=\"https://pypi.org/project/pytaraxa/\" rel=\"nofollow\">pytaraxa</a></p>\n<p>Taraxa official website: <a href=\"https://taraxa.io\" rel=\"nofollow\">taraxa.io</a></p>\n<h2>install</h2>\n<pre><code>git clone https://github.com/Taraxa-project/taraxa-py\ncd taraxa-py\npython setup.py install\n</code></pre>\n<p>or</p>\n<pre><code>pip install pytaraxa\n</code></pre>\n<h2>config</h2>\n<p>default parameters:</p>\n<pre><span class=\"n\">config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s2\">\"ip\"</span><span class=\"p\">:</span><span class=\"s2\">\"127.0.0.1\"</span><span class=\"p\">,</span>  \n    <span class=\"s2\">\"port\"</span><span class=\"p\">:</span><span class=\"mi\">7777</span><span class=\"p\">,</span>  \n    <span class=\"s2\">\"jsonrpc\"</span><span class=\"p\">:</span><span class=\"mf\">2.0</span><span class=\"p\">,</span>  \n    <span class=\"s2\">\"id\"</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n<span class=\"p\">}</span>\n</pre>\n<p>for all methods, if no parameter given, default will be used.</p>\n<ol>\n<li>package level config set and reset.<br>\nany of below config will influence the whole packge.</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytaraxa.jsonrpc</span> <span class=\"k\">as</span> <span class=\"nn\">rpc</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pytaraxa.eth</span> <span class=\"k\">as</span> <span class=\"nn\">eth</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pytaraxa.taraxa</span> <span class=\"k\">as</span> <span class=\"nn\">taraxa</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pytaraxaa.net</span> <span class=\"k\">as</span> <span class=\"nn\">net</span>\n\n<span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"ip\"</span><span class=\"p\">:</span><span class=\"s2\">\"127.0.0.1\"</span><span class=\"p\">,</span>  \n    <span class=\"s2\">\"port\"</span><span class=\"p\">:</span><span class=\"mi\">7777</span><span class=\"p\">,</span>  \n    <span class=\"s2\">\"jsonrpc\"</span><span class=\"p\">:</span><span class=\"mf\">2.0</span><span class=\"p\">,</span>  \n    <span class=\"s2\">\"id\"</span><span class=\"p\">:</span><span class=\"mi\">1</span> \n<span class=\"p\">})</span>\n\n<span class=\"n\">eth</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"ip\"</span><span class=\"p\">:</span><span class=\"s2\">\"35.224.183.106\"</span><span class=\"p\">,</span>  \n<span class=\"p\">})</span>\n<span class=\"n\">taraxa</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"ip\"</span><span class=\"p\">:</span><span class=\"s2\">\"35.224.183.106\"</span><span class=\"p\">,</span>  \n<span class=\"p\">})</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"ip\"</span><span class=\"p\">:</span><span class=\"s2\">\"35.224.183.106\"</span><span class=\"p\">,</span>  \n<span class=\"p\">})</span>\n\n<span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n<span class=\"n\">eth</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n<span class=\"n\">taraxa</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n</pre>\n<ol>\n<li>function level config set<br>\nfunction level config set only influence the function it self once.</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytaraxa.eth</span> <span class=\"k\">as</span> <span class=\"nn\">eth</span>\n<span class=\"n\">r</span><span class=\"o\">=</span><span class=\"n\">eth</span><span class=\"o\">.</span><span class=\"n\">blockNumber</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"s1\">'127.0.0.1'</span> <span class=\"p\">,</span><span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">7777</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n</pre>\n<h2>usage</h2>\n<ul>\n<li>low level use</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytaraxa.jsonrpc</span> <span class=\"k\">as</span> <span class=\"nn\">rpc</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"s1\">'{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}'</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"jsonrpc\"</span><span class=\"p\">:</span><span class=\"s2\">\"2.0\"</span><span class=\"p\">,</span><span class=\"s2\">\"method\"</span><span class=\"p\">:</span><span class=\"s2\">\"eth_blockNumber\"</span><span class=\"p\">,</span><span class=\"s2\">\"params\"</span><span class=\"p\">:[],</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">}</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n</pre>\n<p>data can be json string or dict. response is json string.</p>\n<ul>\n<li>middle level use</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytaraxa.jsonrpc</span>  <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">eth_blockNumber</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n</pre>\n<p>response is json string.</p>\n<ul>\n<li>high level use</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytaraxa.eth</span> <span class=\"k\">as</span> <span class=\"nn\">eth</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">eth</span><span class=\"o\">.</span><span class=\"n\">blockNumber</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n</pre>\n<p>response is parsed to python types.</p>\n<ul>\n<li>ethereum web3 like use</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytaraxa.web3</span> <span class=\"kn\">import</span> <span class=\"n\">Web3</span>\n<span class=\"n\">w3</span> <span class=\"o\">=</span> <span class=\"n\">Web3</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"s2\">\"35.224.183.106\"</span> <span class=\"p\">,</span><span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">7777</span><span class=\"p\">)</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">w3</span><span class=\"o\">.</span><span class=\"n\">blockNumber</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n\n<span class=\"n\">w3</span><span class=\"o\">.</span><span class=\"n\">ip</span> <span class=\"o\">=</span> <span class=\"s2\">\"35.224.183.106\"</span>\n<span class=\"n\">w3</span><span class=\"o\">.</span><span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"mi\">7778</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">w3</span><span class=\"o\">.</span><span class=\"n\">blockNumber</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n</pre>\n<p>Web3 object w3 will hold the ip and port once you set.<br>\nw3 method will use the ip and port you set until you reset it.</p>\n<h2>sub packages</h2>\n<ul>\n<li>jsonrpc</li>\n<li>eth</li>\n<li>web3</li>\n<li>net<br>\nTODO</li>\n<li>admin<br>\nTODO</li>\n<li>admmin_net<br>\nTODO</li>\n<li>debug<br>\nTODO</li>\n<li>test<br>\nTODO</li>\n</ul>\n\n          </div>"}, "last_serial": 6462486, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "bf50f44e3de7562b291e4e84db15fa7b", "sha256": "fd2958052f109f1dd6f48a048e0eca9dd41c1769adb2c5e7a6cf4c9f85f6c758"}, "downloads": -1, "filename": "pytaraxa-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bf50f44e3de7562b291e4e84db15fa7b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.7", "size": 146724, "upload_time": "2019-10-26T11:10:14", "upload_time_iso_8601": "2019-10-26T11:10:14.670724Z", "url": "https://files.pythonhosted.org/packages/90/9a/921b256739f9cc836ae14c69958c3bd11805805311595f29beed0b300c72/pytaraxa-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "778a5c807f182f944baddfb1922e47db", "sha256": "8aafdce3d408a7d38a234f9807ef063f85c82b9b49eebfb7356894003ac8150b"}, "downloads": -1, "filename": "pytaraxa-0.0.3.tar.gz", "has_sig": false, "md5_digest": "778a5c807f182f944baddfb1922e47db", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 10840, "upload_time": "2019-10-26T11:10:17", "upload_time_iso_8601": "2019-10-26T11:10:17.530781Z", "url": "https://files.pythonhosted.org/packages/ad/24/36bcaef21b336aa349089aa99252c9fd78ee45df6dc7539fd6a5a3e84e1c/pytaraxa-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "504ce9e80de6aadb76cc884267945b88", "sha256": "da7cdfb388e7bc28c744c205404f042487f89aa9ec59eb5017195e279156965d"}, "downloads": -1, "filename": "pytaraxa-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "504ce9e80de6aadb76cc884267945b88", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 17654, "upload_time": "2020-01-15T23:57:32", "upload_time_iso_8601": "2020-01-15T23:57:32.379019Z", "url": "https://files.pythonhosted.org/packages/e7/13/db57d5f334bc43e018086c145aa2b4e1010a78ccf02a0b4406b412da856d/pytaraxa-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4c34c396e4304b92210292eabb559ec", "sha256": "ef302fd2aaa08ab1af835b952e7eec2fd30cd4f9002d8f47dd7acbf9a9d323e2"}, "downloads": -1, "filename": "pytaraxa-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a4c34c396e4304b92210292eabb559ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11937, "upload_time": "2020-01-15T23:57:35", "upload_time_iso_8601": "2020-01-15T23:57:35.342935Z", "url": "https://files.pythonhosted.org/packages/ac/f3/cc9180b75390dc928a1b2a51666a374f4482a54557dd413e5576c3cf8138/pytaraxa-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "504ce9e80de6aadb76cc884267945b88", "sha256": "da7cdfb388e7bc28c744c205404f042487f89aa9ec59eb5017195e279156965d"}, "downloads": -1, "filename": "pytaraxa-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "504ce9e80de6aadb76cc884267945b88", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 17654, "upload_time": "2020-01-15T23:57:32", "upload_time_iso_8601": "2020-01-15T23:57:32.379019Z", "url": "https://files.pythonhosted.org/packages/e7/13/db57d5f334bc43e018086c145aa2b4e1010a78ccf02a0b4406b412da856d/pytaraxa-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4c34c396e4304b92210292eabb559ec", "sha256": "ef302fd2aaa08ab1af835b952e7eec2fd30cd4f9002d8f47dd7acbf9a9d323e2"}, "downloads": -1, "filename": "pytaraxa-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a4c34c396e4304b92210292eabb559ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11937, "upload_time": "2020-01-15T23:57:35", "upload_time_iso_8601": "2020-01-15T23:57:35.342935Z", "url": "https://files.pythonhosted.org/packages/ac/f3/cc9180b75390dc928a1b2a51666a374f4482a54557dd413e5576c3cf8138/pytaraxa-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:38 2020"}