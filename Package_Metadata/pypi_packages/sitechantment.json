{"info": {"author": "Michael Messmore", "author_email": "mike@messmore.org", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: PyPy"], "description": "=============================\r\nsitechantment\r\n=============================\r\n\r\n.. image:: https://travis-ci.org/mmessmore/sitechantment.png?branch=master\r\n    :target: https://travis-ci.org/mmessmore/sitechantment\r\n\r\n.. image:: https://pypip.in/d/sitechantment/badge.png\r\n    :target: https://pypi.python.org/pypi/sitechantment\r\n\r\n\r\nCheck a site for spelling errors in a way that can be integrated with your testing\r\n\r\nWhy?\r\n----\r\n\r\nI wanted a way to add spellchecking to a suite of tests for a Flask-based\r\nsite.  I saw some windows tools, using a combination of lynx/curl/wget and\r\ni/a/hunspell.\r\n\r\nBut I just want a way to get a +/- test and a list of misspelled words.\r\n\r\nHow\r\n---\r\n\r\nSo sitechantment is a command line utility to do just that.  You can pass it a url\r\nto crawl, an optional additional list of words, language, etc.  It will crawl the\r\nsite (not wandering off to another host/port) spellcheck every page and give you a\r\nlist of words that are \"misspelled\".\r\n\r\nYou have the ability to run with a --update flag to automatically add all words to\r\na personal word list so they aren't flagged on the next run.\r\n\r\nIt is also available as a class sitechantment.SiteCheck, that can be used inside a\r\ntest suite.  You can even pass it a flask test client instead of using requests\r\nand be able to crawl a site inside of py.test or whatever is being used to unit\r\ntest a flask application.  (Really anything can be used as long as it supports\r\nhandling uri's with a get() method).\r\n\r\n\r\n\r\nDocumentation\r\n-------------\r\n\r\nThe full documentation is at http://sitechantment.rtfd.org.\r\n\r\n\r\n\r\nHistory\r\n-------\r\n\r\n0.1.0 (2015-07-18)\r\n++++++++++++++++++\r\n\r\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mmessmore/sitechantment", "keywords": "sitechantment", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "sitechantment", "package_url": "https://pypi.org/project/sitechantment/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/sitechantment/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mmessmore/sitechantment"}, "release_url": "https://pypi.org/project/sitechantment/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Check a site for spelling errors", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/mmessmore/sitechantment\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/mmessmore/sitechantment.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7291a679221a888befd4ce3eed212355f27e4eab/68747470733a2f2f7472617669732d63692e6f72672f6d6d6573736d6f72652f736974656368616e746d656e742e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/sitechantment\" rel=\"nofollow\"><img alt=\"https://pypip.in/d/sitechantment/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2b7b38201b7fb21190776dfedf8a5ee86721a070/68747470733a2f2f70797069702e696e2f642f736974656368616e746d656e742f62616467652e706e67\"></a>\n<p>Check a site for spelling errors in a way that can be integrated with your testing</p>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>I wanted a way to add spellchecking to a suite of tests for a Flask-based\nsite.  I saw some windows tools, using a combination of lynx/curl/wget and\ni/a/hunspell.</p>\n<p>But I just want a way to get a +/- test and a list of misspelled words.</p>\n</div>\n<div id=\"how\">\n<h2>How</h2>\n<p>So sitechantment is a command line utility to do just that.  You can pass it a url\nto crawl, an optional additional list of words, language, etc.  It will crawl the\nsite (not wandering off to another host/port) spellcheck every page and give you a\nlist of words that are \u201cmisspelled\u201d.</p>\n<p>You have the ability to run with a \u2013update flag to automatically add all words to\na personal word list so they aren\u2019t flagged on the next run.</p>\n<p>It is also available as a class sitechantment.SiteCheck, that can be used inside a\ntest suite.  You can even pass it a flask test client instead of using requests\nand be able to crawl a site inside of py.test or whatever is being used to unit\ntest a flask application.  (Really anything can be used as long as it supports\nhandling uri\u2019s with a get() method).</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The full documentation is at <a href=\"http://sitechantment.rtfd.org\" rel=\"nofollow\">http://sitechantment.rtfd.org</a>.</p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1.0 (2015-07-18)</span></h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1625720, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f0c2f39cfd9195cee57a22354ec256b3", "sha256": "92b5ef1e5a11dd22c4d161dba724b71ea66bc23bc6a43e6bb42849d1f58bcf15"}, "downloads": -1, "filename": "sitechantment-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f0c2f39cfd9195cee57a22354ec256b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6474, "upload_time": "2015-07-09T03:54:33", "upload_time_iso_8601": "2015-07-09T03:54:33.861561Z", "url": "https://files.pythonhosted.org/packages/4a/f0/3f3155c45c6aa52cbec56eed6f9509218d9215df9c3ca3d9dfe14d6408a5/sitechantment-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f0c2f39cfd9195cee57a22354ec256b3", "sha256": "92b5ef1e5a11dd22c4d161dba724b71ea66bc23bc6a43e6bb42849d1f58bcf15"}, "downloads": -1, "filename": "sitechantment-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f0c2f39cfd9195cee57a22354ec256b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6474, "upload_time": "2015-07-09T03:54:33", "upload_time_iso_8601": "2015-07-09T03:54:33.861561Z", "url": "https://files.pythonhosted.org/packages/4a/f0/3f3155c45c6aa52cbec56eed6f9509218d9215df9c3ca3d9dfe14d6408a5/sitechantment-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:20 2020"}