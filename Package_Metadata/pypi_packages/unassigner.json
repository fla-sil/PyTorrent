{"info": {"author": "Kyle Bittinger", "author_email": "kylebittinger@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# Unassigner\n\nEvaluate consistency with named bacterial species for short 16S rRNA\nmarker gene sequences.\n\n## Summary\n\nThe [16S rRNA gene](https://en.wikipedia.org/wiki/16S_ribosomal_RNA)\nis found in all bacteria, and its gene sequence is highly\nconserved. Amplification and sequencing of bacterial 16S rRNA genes is\na common method used to survey bacterial communities in\n[microbiome](https://en.wikipedia.org/wiki/Microbiota)\nresearch. However, high throughput instruments are unable to sequence\nthe entire gene. Therefore, a short region of the gene is selected for\namplification and sequencing.\n\nThe resultant sequences, spanning part of the 16S gene, can be used to\nidentify the types of bacteria present in a specimen. For example, one\nsequence might be assigned to the *Streptococcus* genus based on\nsequence similarity. Many programs are available to carry out such\ntaxonomic assignment.\n\nIt is generally thought that the 16S rRNA gene is not suitable for\nassignment of bacterial species. We agree, but with a catch: the gene\nsequence is suitable for **ruling out** assignment to many bacterial\nspecies. This software is designed to rule out all the species\ndesignations that are inconsistent with a partial 16S rRNA gene\nsequence. For those species that are not definitively ruled out, we\nassign a probability that the sequence is inconsistent with the\nspecies.\n\nBecause the software is geared towards ruling out species rather than\ndeciding on the best assignment, we call it the *unassigner*. It's a\ncheesy joke, but we've decided to roll with it.\n\nThe unassigner library provides a command-line program, `unassign`,\nthat takes a FASTA file of DNA sequences in a 16S gene region, and\ngives the probability that the sequence is inconsistent with nearby\nbacterial species.\n\n## Installation\n\nThe Python library and command-line program can be installed using\n[pip](https://pypi.org/project/pip/).\n\n```bash\npip install unassigner\n```\n\nBesides the python libraries listed in the setup file, this program\nrequires `wget` and `vsearch` to be installed. The `wget` program is\nused to download data on bacterial species, the first time `unassign`\nis run. The program `vsearch` is used to search for the closest\nmatching bacterial species and return pairwise sequence alignments.\n\n## Usage\n\nThe `unassign` program requires one argument, a FASTA-formatted file\nof short 16S sequences:\n\n```bash\nunassign my_sequences.fasta\n```\n\nIf the program has not been run before, it will automatically download\nthe bacterial species data it needs, format its reference files,\ncreate an output directory named `my_sequences_unassigned`, and write\na table of results there, along with some auxiliary output files.\n\nPlease see the output of `unassign --help` for a list of the available\noptions.\n\n## Contributing\n\nWe welcome ideas from our users about how to improve this\nsoftware. Please open an issue if you have a question or would like to\nsuggest a feature.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kylebittinger/unassigner", "keywords": "", "license": "GPLv2+", "maintainer": "", "maintainer_email": "", "name": "unassigner", "package_url": "https://pypi.org/project/unassigner/", "platform": "", "project_url": "https://pypi.org/project/unassigner/", "project_urls": {"Homepage": "https://github.com/kylebittinger/unassigner"}, "release_url": "https://pypi.org/project/unassigner/0.0.3/", "requires_dist": ["biopython", "scipy"], "requires_python": "", "summary": "Bacterial species unassigner", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Unassigner</h1>\n<p>Evaluate consistency with named bacterial species for short 16S rRNA\nmarker gene sequences.</p>\n<h2>Summary</h2>\n<p>The <a href=\"https://en.wikipedia.org/wiki/16S_ribosomal_RNA\" rel=\"nofollow\">16S rRNA gene</a>\nis found in all bacteria, and its gene sequence is highly\nconserved. Amplification and sequencing of bacterial 16S rRNA genes is\na common method used to survey bacterial communities in\n<a href=\"https://en.wikipedia.org/wiki/Microbiota\" rel=\"nofollow\">microbiome</a>\nresearch. However, high throughput instruments are unable to sequence\nthe entire gene. Therefore, a short region of the gene is selected for\namplification and sequencing.</p>\n<p>The resultant sequences, spanning part of the 16S gene, can be used to\nidentify the types of bacteria present in a specimen. For example, one\nsequence might be assigned to the <em>Streptococcus</em> genus based on\nsequence similarity. Many programs are available to carry out such\ntaxonomic assignment.</p>\n<p>It is generally thought that the 16S rRNA gene is not suitable for\nassignment of bacterial species. We agree, but with a catch: the gene\nsequence is suitable for <strong>ruling out</strong> assignment to many bacterial\nspecies. This software is designed to rule out all the species\ndesignations that are inconsistent with a partial 16S rRNA gene\nsequence. For those species that are not definitively ruled out, we\nassign a probability that the sequence is inconsistent with the\nspecies.</p>\n<p>Because the software is geared towards ruling out species rather than\ndeciding on the best assignment, we call it the <em>unassigner</em>. It's a\ncheesy joke, but we've decided to roll with it.</p>\n<p>The unassigner library provides a command-line program, <code>unassign</code>,\nthat takes a FASTA file of DNA sequences in a 16S gene region, and\ngives the probability that the sequence is inconsistent with nearby\nbacterial species.</p>\n<h2>Installation</h2>\n<p>The Python library and command-line program can be installed using\n<a href=\"https://pypi.org/project/pip/\" rel=\"nofollow\">pip</a>.</p>\n<pre>pip install unassigner\n</pre>\n<p>Besides the python libraries listed in the setup file, this program\nrequires <code>wget</code> and <code>vsearch</code> to be installed. The <code>wget</code> program is\nused to download data on bacterial species, the first time <code>unassign</code>\nis run. The program <code>vsearch</code> is used to search for the closest\nmatching bacterial species and return pairwise sequence alignments.</p>\n<h2>Usage</h2>\n<p>The <code>unassign</code> program requires one argument, a FASTA-formatted file\nof short 16S sequences:</p>\n<pre>unassign my_sequences.fasta\n</pre>\n<p>If the program has not been run before, it will automatically download\nthe bacterial species data it needs, format its reference files,\ncreate an output directory named <code>my_sequences_unassigned</code>, and write\na table of results there, along with some auxiliary output files.</p>\n<p>Please see the output of <code>unassign --help</code> for a list of the available\noptions.</p>\n<h2>Contributing</h2>\n<p>We welcome ideas from our users about how to improve this\nsoftware. Please open an issue if you have a question or would like to\nsuggest a feature.</p>\n\n          </div>"}, "last_serial": 5156838, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "c751ba215e7deb9ffe4a99bff78fa617", "sha256": "f2f8c7c73de818aa4631d7c07ec0f7167a2e0fba3ac9ca0e85c58117fba0933c"}, "downloads": -1, "filename": "unassigner-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c751ba215e7deb9ffe4a99bff78fa617", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18690, "upload_time": "2019-04-17T19:48:21", "upload_time_iso_8601": "2019-04-17T19:48:21.222781Z", "url": "https://files.pythonhosted.org/packages/fd/69/03257831b88c0e21ad74d83c3f4af2f2544cfa9b20989a4419746c38f596/unassigner-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "030d943bdef88967bf132b9d934ef206", "sha256": "1988ee8dd40782d9e73b4a2f7c818495938ad8e28de87add48bd94fd5d29aaf1"}, "downloads": -1, "filename": "unassigner-0.0.3.tar.gz", "has_sig": false, "md5_digest": "030d943bdef88967bf132b9d934ef206", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16736, "upload_time": "2019-04-17T19:48:23", "upload_time_iso_8601": "2019-04-17T19:48:23.095794Z", "url": "https://files.pythonhosted.org/packages/85/d8/215ec0e20422f889c867546f6f8439ed6c934464835ad9a1ad56da21d8cb/unassigner-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c751ba215e7deb9ffe4a99bff78fa617", "sha256": "f2f8c7c73de818aa4631d7c07ec0f7167a2e0fba3ac9ca0e85c58117fba0933c"}, "downloads": -1, "filename": "unassigner-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c751ba215e7deb9ffe4a99bff78fa617", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18690, "upload_time": "2019-04-17T19:48:21", "upload_time_iso_8601": "2019-04-17T19:48:21.222781Z", "url": "https://files.pythonhosted.org/packages/fd/69/03257831b88c0e21ad74d83c3f4af2f2544cfa9b20989a4419746c38f596/unassigner-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "030d943bdef88967bf132b9d934ef206", "sha256": "1988ee8dd40782d9e73b4a2f7c818495938ad8e28de87add48bd94fd5d29aaf1"}, "downloads": -1, "filename": "unassigner-0.0.3.tar.gz", "has_sig": false, "md5_digest": "030d943bdef88967bf132b9d934ef206", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16736, "upload_time": "2019-04-17T19:48:23", "upload_time_iso_8601": "2019-04-17T19:48:23.095794Z", "url": "https://files.pythonhosted.org/packages/85/d8/215ec0e20422f889c867546f6f8439ed6c934464835ad9a1ad56da21d8cb/unassigner-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:41:00 2020"}