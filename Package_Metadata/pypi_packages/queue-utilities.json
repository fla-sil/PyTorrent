{"info": {"author": "Jacob Richter", "author_email": "jaycorichter@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# queue-utilities\n\nLet's make using Queues great again! Queue utilities and conveniences for those using sync libraries.\n\n_Currently implements using threads and threading queues as standard, multiprocessing queues can be used by passing in relevant multiprocessing.Queue arguments. Worker threads use threading.Thread not multiprocessing.Process by design, if you require running eg Select in an external process as a message broker I recommend spawning a Process and then using as is documented._\n\nThis utilities package contains the following classes:\n\n1. **Pipe** - Pipe messages from one queue to another.\n2. **Timer** - Threaded timer that emits time on internal or provided queue after given wait time period. Can be cancelled.\n3. **Ticker** - Same as timer but emits time at regular intervals until stopped.\n4. **Multiplex** - Many-to-One (fan-in) queue management helper.\n5. **Multicast** - One-to-Many (fan-out) queue management helper.\n6. **Select** - Like Multiplex but output payload contains message source queue to be used in dynamic message based switching. Inspired by Golangs select statements using channels.\n7. **as_thread** - Decorator to run function in thread.\n8. **with_input_queue** - Decorator to attach input and optional output queues to function which will be run in a thread.\n9. **with_output_queue** - Decorator that sends function results to output queue.\n\n**Note that this package is early stages of development.**\n\n## Installation\n\n```bash\npython3 -m pip install queue-utilities\n```\n\n## Usage\n\n### Pipe\n\n```python\nfrom queue_utilities import Pipe\n\noriginal_q, output_q = _queue.Queue(), _queue.Queue()\n\np = Pipe(original_q, output_q)\n\n# put an item into the original queue\noriginal_q.put(1)\n\n# get the message off the output queue\nrecv = output_q.get()\nprint(recv)  # 1\n\n# don't forget to stop the pipe after you've finished.\np.stop()\n```\n\n### Timer\n\n```python\nfrom queue_utilities import Timer\n\n# emit time after 5 seconds\nfive_seconds = Timer(5)\nfive_seconds.get()\n\n# cancel a timer\nto_cancel = Timer(60)\nprint(to_cancel._is_finished) # False\nto_cancel.stop()\nprint(to_cancel._is_finished) # True\n\n```\n\n### Ticker\n\n```python\nfrom queue_utilities import Ticker\n\n# print the time every 5 seconds 4 times\ntick = Ticker(5)\nfor _ in range(4):\n    print(f\"The time is: {tick.get()}\")\n\n# cancel the ticker thread\ntick.stop()\n\n```\n\n### Multiplex\n\n```python\nfrom queue_utilities import Multiplex\nfrom queue import Queue\n\n# create two queues and pass them into the Multiplex\nqueue_a, queue_b = Queue(), Queue()\nmulti_p = Multiplex(queue_a, queue_b)\n\n# send messages to any of the queues\nqueue_a.put(\"a\")\nqueue_b.put(\"b\")\n\n# read the messages\nfor _ in range(2):\n    message = multi_p()  # or multi_p.get()\n    print(f\"I got a message! {message}\")\n\n# cleanup\nmulti_p.stop()\n\n# if you try to read a message after stop\n# it raises a MultiplexClosed exception\nmulti_p.get()\n\n```\n\n### Multicast\n\n```python\nfrom queue_utilities import Multicast\nfrom queue import Queue\n\nout_a, out_b = Queue(), Queue()\n\nmulticast = Multicast(out_a, out_b)\n\nmulticast.send(\"A message!\")\n\nfor q in (out_a, out_b):\n    print(q.get()) # prints \"A message!\" twice!\n\nmulticast.stop()\n```\n\n### Select\n\n#### Use with context to build a cancellable thread\n\n```python\nfrom queue_utilities import Select\nfrom queue import Queue\nfrom threading import Thread\n\nout_a, cancel_sig = Queue(), Queue()\n\n\ndef selector(*queues):\n    with Select(*queues) as select:\n        for which, message in select:\n            if which is cancel_sig:\n                # stop select on any message on queue b\n                select.stop()\n            else:\n                print(f'Got a message {message}')\n\n\nThread(target=selector, args=(out_a, cancel_sig)).start()\n\nout_a.put(1)\nout_a.put(2)\nout_a.put(3)\ncancel_sig.put('Bye')\n```\n\n#### Timeout a function with Timer\n\n```python\nfrom threading import Thread\nimport time\nfrom queue import Queue\nfrom queue_utilities import Select, Timer\n\n\ndef do_something_slow(q: Queue) -> None:\n    # do something slow\n    time.sleep(3)\n    q.put(\"Done\")\n\n\noutput_q = Queue()\nThread(target=do_something_slow, args=(output_q,)).start()\n\ntimeout = Timer(2)\n\nselect = Select(output_q, timeout._output_q)\n\nfor (which_q, result) in select:\n    if which_q is output_q:\n        print(\"Received result\", result)\n    else:\n        print(\"Function timed out!\")\n    break\n\nselect.stop()\n```\n\n### as_thread\n\n```python\nfrom queue_utilities import as_thread\nimport time\n\n@as_thread\ndef sleeper():\n    time.sleep(5)\n    print('Goodbye!')\n\nsleeper()\nprint('Waiting...')\ntime.sleep(6)\nprint('Done!')\n\n```\n\n### with_input_queue\n\n```python\nfrom queue_utilities import with_input_queue\nfrom queue import Queue\n\nwork_queue = Queue()\nresult_queue = Queue()\n\n@with_input_queue(work_queue, result_queue)\ndef squarer(input: int):\n    return input**2\n\nfor i in range(10):\n    work_queue.put(i)\n    print(f'{i} squared is {result_queue.get()}')\n```\n\n### with_output_queue\n\n```python\nfrom queue_utilities import with_input_queue\nfrom queue import Queue\n\nresult_queue = Queue()\n\n@with_output_queue(result_queue)\ndef squarer(input: int):\n    return input**2\n\nfor i in range(10):\n    squarer(i)\n    print(f'{i} squared is {result_queue.get()}')\n```\n\n## Contributing\n\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jaycosaur/queue-utilities", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "queue-utilities", "package_url": "https://pypi.org/project/queue-utilities/", "platform": "", "project_url": "https://pypi.org/project/queue-utilities/", "project_urls": {"Homepage": "https://github.com/jaycosaur/queue-utilities"}, "release_url": "https://pypi.org/project/queue-utilities/0.0.12/", "requires_dist": null, "requires_python": "", "summary": "A collection of helpful queue utilities. Pipes, timers, tickers, multiplexors, multicasters and queue select.", "version": "0.0.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>queue-utilities</h1>\n<p>Let's make using Queues great again! Queue utilities and conveniences for those using sync libraries.</p>\n<p><em>Currently implements using threads and threading queues as standard, multiprocessing queues can be used by passing in relevant multiprocessing.Queue arguments. Worker threads use threading.Thread not multiprocessing.Process by design, if you require running eg Select in an external process as a message broker I recommend spawning a Process and then using as is documented.</em></p>\n<p>This utilities package contains the following classes:</p>\n<ol>\n<li><strong>Pipe</strong> - Pipe messages from one queue to another.</li>\n<li><strong>Timer</strong> - Threaded timer that emits time on internal or provided queue after given wait time period. Can be cancelled.</li>\n<li><strong>Ticker</strong> - Same as timer but emits time at regular intervals until stopped.</li>\n<li><strong>Multiplex</strong> - Many-to-One (fan-in) queue management helper.</li>\n<li><strong>Multicast</strong> - One-to-Many (fan-out) queue management helper.</li>\n<li><strong>Select</strong> - Like Multiplex but output payload contains message source queue to be used in dynamic message based switching. Inspired by Golangs select statements using channels.</li>\n<li><strong>as_thread</strong> - Decorator to run function in thread.</li>\n<li><strong>with_input_queue</strong> - Decorator to attach input and optional output queues to function which will be run in a thread.</li>\n<li><strong>with_output_queue</strong> - Decorator that sends function results to output queue.</li>\n</ol>\n<p><strong>Note that this package is early stages of development.</strong></p>\n<h2>Installation</h2>\n<pre>python3 -m pip install queue-utilities\n</pre>\n<h2>Usage</h2>\n<h3>Pipe</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">queue_utilities</span> <span class=\"kn\">import</span> <span class=\"n\">Pipe</span>\n\n<span class=\"n\">original_q</span><span class=\"p\">,</span> <span class=\"n\">output_q</span> <span class=\"o\">=</span> <span class=\"n\">_queue</span><span class=\"o\">.</span><span class=\"n\">Queue</span><span class=\"p\">(),</span> <span class=\"n\">_queue</span><span class=\"o\">.</span><span class=\"n\">Queue</span><span class=\"p\">()</span>\n\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">Pipe</span><span class=\"p\">(</span><span class=\"n\">original_q</span><span class=\"p\">,</span> <span class=\"n\">output_q</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># put an item into the original queue</span>\n<span class=\"n\">original_q</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get the message off the output queue</span>\n<span class=\"n\">recv</span> <span class=\"o\">=</span> <span class=\"n\">output_q</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">recv</span><span class=\"p\">)</span>  <span class=\"c1\"># 1</span>\n\n<span class=\"c1\"># don't forget to stop the pipe after you've finished.</span>\n<span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<h3>Timer</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">queue_utilities</span> <span class=\"kn\">import</span> <span class=\"n\">Timer</span>\n\n<span class=\"c1\"># emit time after 5 seconds</span>\n<span class=\"n\">five_seconds</span> <span class=\"o\">=</span> <span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">five_seconds</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># cancel a timer</span>\n<span class=\"n\">to_cancel</span> <span class=\"o\">=</span> <span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">to_cancel</span><span class=\"o\">.</span><span class=\"n\">_is_finished</span><span class=\"p\">)</span> <span class=\"c1\"># False</span>\n<span class=\"n\">to_cancel</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">to_cancel</span><span class=\"o\">.</span><span class=\"n\">_is_finished</span><span class=\"p\">)</span> <span class=\"c1\"># True</span>\n</pre>\n<h3>Ticker</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">queue_utilities</span> <span class=\"kn\">import</span> <span class=\"n\">Ticker</span>\n\n<span class=\"c1\"># print the time every 5 seconds 4 times</span>\n<span class=\"n\">tick</span> <span class=\"o\">=</span> <span class=\"n\">Ticker</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"The time is: </span><span class=\"si\">{</span><span class=\"n\">tick</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># cancel the ticker thread</span>\n<span class=\"n\">tick</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<h3>Multiplex</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">queue_utilities</span> <span class=\"kn\">import</span> <span class=\"n\">Multiplex</span>\n<span class=\"kn\">from</span> <span class=\"nn\">queue</span> <span class=\"kn\">import</span> <span class=\"n\">Queue</span>\n\n<span class=\"c1\"># create two queues and pass them into the Multiplex</span>\n<span class=\"n\">queue_a</span><span class=\"p\">,</span> <span class=\"n\">queue_b</span> <span class=\"o\">=</span> <span class=\"n\">Queue</span><span class=\"p\">(),</span> <span class=\"n\">Queue</span><span class=\"p\">()</span>\n<span class=\"n\">multi_p</span> <span class=\"o\">=</span> <span class=\"n\">Multiplex</span><span class=\"p\">(</span><span class=\"n\">queue_a</span><span class=\"p\">,</span> <span class=\"n\">queue_b</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># send messages to any of the queues</span>\n<span class=\"n\">queue_a</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"s2\">\"a\"</span><span class=\"p\">)</span>\n<span class=\"n\">queue_b</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"s2\">\"b\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># read the messages</span>\n<span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">multi_p</span><span class=\"p\">()</span>  <span class=\"c1\"># or multi_p.get()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"I got a message! </span><span class=\"si\">{</span><span class=\"n\">message</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># cleanup</span>\n<span class=\"n\">multi_p</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># if you try to read a message after stop</span>\n<span class=\"c1\"># it raises a MultiplexClosed exception</span>\n<span class=\"n\">multi_p</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n</pre>\n<h3>Multicast</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">queue_utilities</span> <span class=\"kn\">import</span> <span class=\"n\">Multicast</span>\n<span class=\"kn\">from</span> <span class=\"nn\">queue</span> <span class=\"kn\">import</span> <span class=\"n\">Queue</span>\n\n<span class=\"n\">out_a</span><span class=\"p\">,</span> <span class=\"n\">out_b</span> <span class=\"o\">=</span> <span class=\"n\">Queue</span><span class=\"p\">(),</span> <span class=\"n\">Queue</span><span class=\"p\">()</span>\n\n<span class=\"n\">multicast</span> <span class=\"o\">=</span> <span class=\"n\">Multicast</span><span class=\"p\">(</span><span class=\"n\">out_a</span><span class=\"p\">,</span> <span class=\"n\">out_b</span><span class=\"p\">)</span>\n\n<span class=\"n\">multicast</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s2\">\"A message!\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">q</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"n\">out_a</span><span class=\"p\">,</span> <span class=\"n\">out_b</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())</span> <span class=\"c1\"># prints \"A message!\" twice!</span>\n\n<span class=\"n\">multicast</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<h3>Select</h3>\n<h4>Use with context to build a cancellable thread</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">queue_utilities</span> <span class=\"kn\">import</span> <span class=\"n\">Select</span>\n<span class=\"kn\">from</span> <span class=\"nn\">queue</span> <span class=\"kn\">import</span> <span class=\"n\">Queue</span>\n<span class=\"kn\">from</span> <span class=\"nn\">threading</span> <span class=\"kn\">import</span> <span class=\"n\">Thread</span>\n\n<span class=\"n\">out_a</span><span class=\"p\">,</span> <span class=\"n\">cancel_sig</span> <span class=\"o\">=</span> <span class=\"n\">Queue</span><span class=\"p\">(),</span> <span class=\"n\">Queue</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">selector</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">queues</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">Select</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">queues</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">select</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">which</span><span class=\"p\">,</span> <span class=\"n\">message</span> <span class=\"ow\">in</span> <span class=\"n\">select</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">which</span> <span class=\"ow\">is</span> <span class=\"n\">cancel_sig</span><span class=\"p\">:</span>\n                <span class=\"c1\"># stop select on any message on queue b</span>\n                <span class=\"n\">select</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Got a message </span><span class=\"si\">{</span><span class=\"n\">message</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">Thread</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">selector</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">out_a</span><span class=\"p\">,</span> <span class=\"n\">cancel_sig</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n<span class=\"n\">out_a</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">out_a</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">out_a</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">cancel_sig</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"s1\">'Bye'</span><span class=\"p\">)</span>\n</pre>\n<h4>Timeout a function with Timer</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">threading</span> <span class=\"kn\">import</span> <span class=\"n\">Thread</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">queue</span> <span class=\"kn\">import</span> <span class=\"n\">Queue</span>\n<span class=\"kn\">from</span> <span class=\"nn\">queue_utilities</span> <span class=\"kn\">import</span> <span class=\"n\">Select</span><span class=\"p\">,</span> <span class=\"n\">Timer</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">do_something_slow</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"p\">:</span> <span class=\"n\">Queue</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"c1\"># do something slow</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"s2\">\"Done\"</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">output_q</span> <span class=\"o\">=</span> <span class=\"n\">Queue</span><span class=\"p\">()</span>\n<span class=\"n\">Thread</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">do_something_slow</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">output_q</span><span class=\"p\">,))</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n<span class=\"n\">timeout</span> <span class=\"o\">=</span> <span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">select</span> <span class=\"o\">=</span> <span class=\"n\">Select</span><span class=\"p\">(</span><span class=\"n\">output_q</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">.</span><span class=\"n\">_output_q</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">which_q</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">select</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">which_q</span> <span class=\"ow\">is</span> <span class=\"n\">output_q</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Received result\"</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Function timed out!\"</span><span class=\"p\">)</span>\n    <span class=\"k\">break</span>\n\n<span class=\"n\">select</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<h3>as_thread</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">queue_utilities</span> <span class=\"kn\">import</span> <span class=\"n\">as_thread</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"nd\">@as_thread</span>\n<span class=\"k\">def</span> <span class=\"nf\">sleeper</span><span class=\"p\">():</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Goodbye!'</span><span class=\"p\">)</span>\n\n<span class=\"n\">sleeper</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Waiting...'</span><span class=\"p\">)</span>\n<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Done!'</span><span class=\"p\">)</span>\n</pre>\n<h3>with_input_queue</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">queue_utilities</span> <span class=\"kn\">import</span> <span class=\"n\">with_input_queue</span>\n<span class=\"kn\">from</span> <span class=\"nn\">queue</span> <span class=\"kn\">import</span> <span class=\"n\">Queue</span>\n\n<span class=\"n\">work_queue</span> <span class=\"o\">=</span> <span class=\"n\">Queue</span><span class=\"p\">()</span>\n<span class=\"n\">result_queue</span> <span class=\"o\">=</span> <span class=\"n\">Queue</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@with_input_queue</span><span class=\"p\">(</span><span class=\"n\">work_queue</span><span class=\"p\">,</span> <span class=\"n\">result_queue</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">squarer</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"nb\">input</span><span class=\"o\">**</span><span class=\"mi\">2</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">work_queue</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s1\"> squared is </span><span class=\"si\">{</span><span class=\"n\">result_queue</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n<h3>with_output_queue</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">queue_utilities</span> <span class=\"kn\">import</span> <span class=\"n\">with_input_queue</span>\n<span class=\"kn\">from</span> <span class=\"nn\">queue</span> <span class=\"kn\">import</span> <span class=\"n\">Queue</span>\n\n<span class=\"n\">result_queue</span> <span class=\"o\">=</span> <span class=\"n\">Queue</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@with_output_queue</span><span class=\"p\">(</span><span class=\"n\">result_queue</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">squarer</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"nb\">input</span><span class=\"o\">**</span><span class=\"mi\">2</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">squarer</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s1\"> squared is </span><span class=\"si\">{</span><span class=\"n\">result_queue</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n<h2>Contributing</h2>\n<p>Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.</p>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6901415, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "560f616e41e7ac96279c2c24deff5d74", "sha256": "239ea790f6228e3b2d238eee06d2439df44ff83ed00ed56547ec696c73e2a786"}, "downloads": -1, "filename": "queue_utilities-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "560f616e41e7ac96279c2c24deff5d74", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7254, "upload_time": "2020-02-08T05:15:26", "upload_time_iso_8601": "2020-02-08T05:15:26.724074Z", "url": "https://files.pythonhosted.org/packages/3c/5c/082f969b182bdf71917f86bc2a5e8d1016733feef4c703d9cfd3731dfae4/queue_utilities-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5eda9fb08959c7673ba519c651de7147", "sha256": "2e6a0c79d187534f734d6e3b7e90195bba505b79d4b2dc47bfa847f37cfa2799"}, "downloads": -1, "filename": "queue_utilities-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5eda9fb08959c7673ba519c651de7147", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4421, "upload_time": "2020-02-08T05:15:29", "upload_time_iso_8601": "2020-02-08T05:15:29.390680Z", "url": "https://files.pythonhosted.org/packages/2b/77/70e81991656dd19d7ed4ca8f0bcec9671f0c0b954bfc45e548780b0086e7/queue_utilities-0.0.1.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "1719b33ce76a12348ab2bc6240fc50e1", "sha256": "4a75e93b9f77ea99bb5afe38b04d1b693a25a797a8c77cdb1ef9f9cf7a2a3cf6"}, "downloads": -1, "filename": "queue_utilities-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "1719b33ce76a12348ab2bc6240fc50e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9225, "upload_time": "2020-02-17T07:32:45", "upload_time_iso_8601": "2020-02-17T07:32:45.314261Z", "url": "https://files.pythonhosted.org/packages/54/92/1ba29ea3367353af781845bb6d76823b0017fd7e6ef2f9b7ce9c5c21e45a/queue_utilities-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1ac23b2c0a898aaea94557eb9b76181", "sha256": "6de035bc5bc88a4a04e0be7453546b6119cbe5cb9916415247d427b6193c78ff"}, "downloads": -1, "filename": "queue_utilities-0.0.11.tar.gz", "has_sig": false, "md5_digest": "e1ac23b2c0a898aaea94557eb9b76181", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8550, "upload_time": "2020-02-17T07:32:46", "upload_time_iso_8601": "2020-02-17T07:32:46.753476Z", "url": "https://files.pythonhosted.org/packages/69/7c/e04417bce40031feaf1e4024381e2623c9caa72719e2610e80e8d322bf78/queue_utilities-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "8bbb548ee9ecbe18c0e44b4e481ba6a7", "sha256": "bdea30f8e43296c91edbc7e8339b9e905540d2258adb7278d359f4cd555db259"}, "downloads": -1, "filename": "queue_utilities-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "8bbb548ee9ecbe18c0e44b4e481ba6a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9396, "upload_time": "2020-03-28T11:10:31", "upload_time_iso_8601": "2020-03-28T11:10:31.678784Z", "url": "https://files.pythonhosted.org/packages/ea/ba/64ebc4506171e88fa3e466e23633985d4bd580ff8e9c5c2cea931f0bb266/queue_utilities-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8472e45d317e963cd610485131b9095", "sha256": "31733de615b6f783b26d6c2030a60c460be7957f8387d84807a2fbccc0585fb1"}, "downloads": -1, "filename": "queue_utilities-0.0.12.tar.gz", "has_sig": false, "md5_digest": "f8472e45d317e963cd610485131b9095", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8662, "upload_time": "2020-03-28T11:10:33", "upload_time_iso_8601": "2020-03-28T11:10:33.152928Z", "url": "https://files.pythonhosted.org/packages/73/20/038f72813d2ec6262804271768ba98f7fcf0f3473076be78cd3cac76e540/queue_utilities-0.0.12.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2feb89d9ef41fa98c75349316d1bc0fa", "sha256": "0c31c6b67b4ae94cf2247744016fd776758dec7f7f36d674e36256a1a593128a"}, "downloads": -1, "filename": "queue_utilities-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2feb89d9ef41fa98c75349316d1bc0fa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7253, "upload_time": "2020-02-09T06:25:16", "upload_time_iso_8601": "2020-02-09T06:25:16.805969Z", "url": "https://files.pythonhosted.org/packages/44/4c/d01ff2d1322888dd8c117edc5c05d99b26c911450f836ecbd76ff9d996c9/queue_utilities-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "659e8d112ed5edcca0592105189ed099", "sha256": "6bbd3bec246a455e3c957fda2c75992eafc2aaebb7a48f7d1b5a69cdf66d40eb"}, "downloads": -1, "filename": "queue_utilities-0.0.2.tar.gz", "has_sig": false, "md5_digest": "659e8d112ed5edcca0592105189ed099", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4400, "upload_time": "2020-02-09T06:25:18", "upload_time_iso_8601": "2020-02-09T06:25:18.831028Z", "url": "https://files.pythonhosted.org/packages/77/f1/4bc5c760680f567dae7ce191d3806adf47c62e23e31ce777d2e8448a2110/queue_utilities-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "806412747ebdd321a1dd2c701ae3f326", "sha256": "f6d528870cf5ddcfa9d0e5a2b484ad062ed6fa97dfa1652099831173ec4ae579"}, "downloads": -1, "filename": "queue_utilities-0.0.3.tar.gz", "has_sig": false, "md5_digest": "806412747ebdd321a1dd2c701ae3f326", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4772, "upload_time": "2020-02-16T10:20:26", "upload_time_iso_8601": "2020-02-16T10:20:26.308170Z", "url": "https://files.pythonhosted.org/packages/c1/8f/afa9aae0ba73e2b14b0ad5dfe1e96419d5cb0b1767a4d8b36683784a466d/queue_utilities-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "30103376b6cb7cfec19e2270ed4281d2", "sha256": "37d497fd2fbbc656a976a9e88b4d80d67b719b84db9f0db823ff82695ebc7b79"}, "downloads": -1, "filename": "queue_utilities-0.0.4.tar.gz", "has_sig": false, "md5_digest": "30103376b6cb7cfec19e2270ed4281d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5030, "upload_time": "2020-02-16T10:38:09", "upload_time_iso_8601": "2020-02-16T10:38:09.852994Z", "url": "https://files.pythonhosted.org/packages/e5/2c/8fb1f3580b3031425c2d0d0727ad0d23238f6737679a5931420b3fcf6c27/queue_utilities-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "335d3bd072444066e0f2dd6f43e751e0", "sha256": "5de4d4414f12e8b088deddf124623d231c3d6ea9cd6b9a4e7e1642f3da2c95e7"}, "downloads": -1, "filename": "queue_utilities-0.0.5.tar.gz", "has_sig": false, "md5_digest": "335d3bd072444066e0f2dd6f43e751e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5460, "upload_time": "2020-02-16T11:27:44", "upload_time_iso_8601": "2020-02-16T11:27:44.292318Z", "url": "https://files.pythonhosted.org/packages/c4/95/53f52699ed29b912b2f6458f7286f247935bb5f8299269ac1e9a9360f8de/queue_utilities-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "45b179740748e99990e48e3829995b5b", "sha256": "f89a3e0b82873116111a6977e708629ab515b604688502094be8a13c4ea0dd66"}, "downloads": -1, "filename": "queue_utilities-0.0.6.tar.gz", "has_sig": false, "md5_digest": "45b179740748e99990e48e3829995b5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5460, "upload_time": "2020-02-16T11:30:40", "upload_time_iso_8601": "2020-02-16T11:30:40.017371Z", "url": "https://files.pythonhosted.org/packages/f6/32/d9144ae706a8d2648e416a31056f366fab788aa4e77d057236edd1d9a5fd/queue_utilities-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "145cf2e36fe592babf41e0de89e8f5c5", "sha256": "56fd220ea3ee53b07a4a39f6f9bb6b34abf1c658165f722b8f32e1005a8f4e08"}, "downloads": -1, "filename": "queue_utilities-0.0.7.tar.gz", "has_sig": false, "md5_digest": "145cf2e36fe592babf41e0de89e8f5c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5452, "upload_time": "2020-02-16T11:34:45", "upload_time_iso_8601": "2020-02-16T11:34:45.540659Z", "url": "https://files.pythonhosted.org/packages/87/8d/1253d104471852dbbdf9319c188a65e0c1447a4c3a88c381f2ee0ee93a3d/queue_utilities-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "46a8ea3665bd7c0b86b3f8e42d0e9c15", "sha256": "b1647636a6cb34dd47f733ebe6c0a0499049a1ddcb3e35dda1c0ff4abf2911ca"}, "downloads": -1, "filename": "queue_utilities-0.0.8.tar.gz", "has_sig": false, "md5_digest": "46a8ea3665bd7c0b86b3f8e42d0e9c15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5848, "upload_time": "2020-02-16T11:59:16", "upload_time_iso_8601": "2020-02-16T11:59:16.659493Z", "url": "https://files.pythonhosted.org/packages/23/54/d414acc89eb12ad9274d29d632aa3d50a67fe7fe6b4f2d86963942ba9c58/queue_utilities-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "a27945998d0b3ae03e2b17d26f5a0b12", "sha256": "e07550b4364851cd91375b45f6f6390032014476ae189e11ff28abefa993af83"}, "downloads": -1, "filename": "queue_utilities-0.0.9.tar.gz", "has_sig": false, "md5_digest": "a27945998d0b3ae03e2b17d26f5a0b12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6873, "upload_time": "2020-02-16T12:14:38", "upload_time_iso_8601": "2020-02-16T12:14:38.218794Z", "url": "https://files.pythonhosted.org/packages/ae/44/75dc51e6495222f92fff965baf93a1ee8b6ed2762cb602017d4666b7d09e/queue_utilities-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8bbb548ee9ecbe18c0e44b4e481ba6a7", "sha256": "bdea30f8e43296c91edbc7e8339b9e905540d2258adb7278d359f4cd555db259"}, "downloads": -1, "filename": "queue_utilities-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "8bbb548ee9ecbe18c0e44b4e481ba6a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9396, "upload_time": "2020-03-28T11:10:31", "upload_time_iso_8601": "2020-03-28T11:10:31.678784Z", "url": "https://files.pythonhosted.org/packages/ea/ba/64ebc4506171e88fa3e466e23633985d4bd580ff8e9c5c2cea931f0bb266/queue_utilities-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8472e45d317e963cd610485131b9095", "sha256": "31733de615b6f783b26d6c2030a60c460be7957f8387d84807a2fbccc0585fb1"}, "downloads": -1, "filename": "queue_utilities-0.0.12.tar.gz", "has_sig": false, "md5_digest": "f8472e45d317e963cd610485131b9095", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8662, "upload_time": "2020-03-28T11:10:33", "upload_time_iso_8601": "2020-03-28T11:10:33.152928Z", "url": "https://files.pythonhosted.org/packages/73/20/038f72813d2ec6262804271768ba98f7fcf0f3473076be78cd3cac76e540/queue_utilities-0.0.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:33 2020"}