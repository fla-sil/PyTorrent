{"info": {"author": "Torsten Kurbad", "author_email": "t.kurbad@iwm-kmrc.de", "bugtrack_url": null, "classifiers": [], "description": "Bebop Instance Recipe\n=====================\n\nDerived from Jim Fultons Zope 3 Instance Recipe (zc.recipe.zope3instance).\nDifference:\n- corrected filepaths for binaries, config files, etc.\n- new Parameter:\n\nbebop-mode\n    If set to 'on', enables some bebop specific features, like a\n    customized securitypolicy.zcml.\n\n\nJim's original README follows:\n==============================\n\nThe zc.recipe.zope3instance recipe creates a Zope 3 instance.  A Zope\n3 instance is a collection of scripts and configuration that define a Zope\nserver process.  This recipe is likely to evolve quite a bit as our\nknowledge of how to deploy applications with eggs evolves. For\nexample, we now need to know the location of a Zope 3 installation,\nhowever, in the future, we may be able to express our dependence on\nZope3 soley via eggs.\n\nNote that, currently, this recipe is fairly unix-centric.  Windows\nsupport will be added in the future.\n\nThe zope3 instance recipe takes a number of options:\n\neggs\n    Specify one or more distribution requirements, on separate lines,\n    for software to be included in the Zope instance.\n\nzope3\n    The name of a section defining a Zope3 installation location (as a\n    location option).  This can be either a checkout or a release\n    installtion. (Unfortunately, we have to do some introspection to\n    determine whether a checkout or release installation is\n    provided.)  Hopefully, this option will be unnecessary in the\n    future and we'll use egg depedencies to define the Zope software\n    used. \n\ndatabase\n    The names of one or more sections defining databases to be used.\n    These sections must contain zconfig options giving configurations\n    for individual databases.\n\naddress\n    One or more addresses to listed for HTTP connections on.  Each\n    address of of the form \"host:port\" or just \"port\".\n\nuser\n    A global management user of the form:\n    user:encyption:encrypted-password.  \n\nzcml \n    Specifications for one or more zcml files to be loaded.\n\nzope-options\n    Top-level ZConfig options to be used for the instance,\n    e.g. devmode on, threads 4, ...\n\nIn addition, the find-links, index, python, interpreter, and\nextra-paths options of the zc.recipe.egg recipe are honored.\n\nLet's start with a minimal example. We have a sample buildout.  Let's\nwrite a buildout.cfg file that defines a zope instance:\n\n    >>> cd(sample_buildout)\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = instance\n    ...\n    ... [zope3]\n    ... location = %(zope3_installation)s\n    ...\n    ... [mydata]\n    ... zconfig = \n    ...     <zodb>\n    ...        <filestorage>\n    ...           path /foo/baz/Data.fs\n    ...        </filestorage>\n    ...     </zodb>\n    ...\n    ... [instance]\n    ... database = mydata\n    ... user = jim:SHA1:40bd001563085fc35165329ea1ff5c5ecbdbbeef\n    ...\n    ... \"\"\" \n    ... % dict(zope3_installation=sample_zope3))\n\nThe Zope3 instance recipe needs to be told the location of a Zope 3\ninstallation.   This can be done in two ways:\n\n1. Use a zope3checkout recipe to install Zope 3 from subversion, \n\n2. Use the configure-make-make-install recipe to install a Zope\n   release, or\n\n3. Create a section with an option that provides the location of a\n   Zope 3 installation.\n\n\nWe provided a zope3 section containing the location of an existing\nZope3 installation.\n\nWe also provided a section that provided a zconfig option containing a\nZConfig definition for a database.  We provided it by hand, but one\nwould normally provide it using a part that used a database recipe,\nsuch as zc.recipe.filestorage or zc.recipe.clientstorage recipe.\n\nLet's run the buildout:\n\n    >>> print system(join('bin', 'buildout')),\n\nWe'll get a directory created in the buildout parts directory\ncontaining configuration files and some directories to contain og\nfiles, pid files, and so on.\n\n    >>> ls(join('parts', 'instance'))", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://svn.kmrc.de/projects/devel/iwm.recipe.bebopinstance", "keywords": "zope3 bebop buildout name", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "iwm.recipe.bebopinstance", "package_url": "https://pypi.org/project/iwm.recipe.bebopinstance/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/iwm.recipe.bebopinstance/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://svn.kmrc.de/projects/devel/iwm.recipe.bebopinstance"}, "release_url": "https://pypi.org/project/iwm.recipe.bebopinstance/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "ZC Buildout recipe for defining a Bebop instance", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"bebop-instance-recipe\">\n<h2>Bebop Instance Recipe</h2>\n<p>Derived from Jim Fultons Zope 3 Instance Recipe (zc.recipe.zope3instance).\nDifference:\n- corrected filepaths for binaries, config files, etc.\n- new Parameter:</p>\n<dl>\n<dt>bebop-mode</dt>\n<dd>If set to \u2018on\u2019, enables some bebop specific features, like a\ncustomized securitypolicy.zcml.</dd>\n</dl>\n</div>\n<div id=\"jim-s-original-readme-follows\">\n<h2>Jim\u2019s original README follows:</h2>\n<p>The zc.recipe.zope3instance recipe creates a Zope 3 instance.  A Zope\n3 instance is a collection of scripts and configuration that define a Zope\nserver process.  This recipe is likely to evolve quite a bit as our\nknowledge of how to deploy applications with eggs evolves. For\nexample, we now need to know the location of a Zope 3 installation,\nhowever, in the future, we may be able to express our dependence on\nZope3 soley via eggs.</p>\n<p>Note that, currently, this recipe is fairly unix-centric.  Windows\nsupport will be added in the future.</p>\n<p>The zope3 instance recipe takes a number of options:</p>\n<dl>\n<dt>eggs</dt>\n<dd>Specify one or more distribution requirements, on separate lines,\nfor software to be included in the Zope instance.</dd>\n<dt>zope3</dt>\n<dd>The name of a section defining a Zope3 installation location (as a\nlocation option).  This can be either a checkout or a release\ninstalltion. (Unfortunately, we have to do some introspection to\ndetermine whether a checkout or release installation is\nprovided.)  Hopefully, this option will be unnecessary in the\nfuture and we\u2019ll use egg depedencies to define the Zope software\nused.</dd>\n<dt>database</dt>\n<dd>The names of one or more sections defining databases to be used.\nThese sections must contain zconfig options giving configurations\nfor individual databases.</dd>\n<dt>address</dt>\n<dd>One or more addresses to listed for HTTP connections on.  Each\naddress of of the form \u201chost:port\u201d or just \u201cport\u201d.</dd>\n<dt>user</dt>\n<dd>A global management user of the form:\nuser:encyption:encrypted-password.</dd>\n<dt>zcml</dt>\n<dd>Specifications for one or more zcml files to be loaded.</dd>\n<dt>zope-options</dt>\n<dd>Top-level ZConfig options to be used for the instance,\ne.g. devmode on, threads 4, \u2026</dd>\n</dl>\n<p>In addition, the find-links, index, python, interpreter, and\nextra-paths options of the zc.recipe.egg recipe are honored.</p>\n<p>Let\u2019s start with a minimal example. We have a sample buildout.  Let\u2019s\nwrite a buildout.cfg file that defines a zope instance:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; cd(sample_buildout)\n&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = instance\n...\n... [zope3]\n... location = %(zope3_installation)s\n...\n... [mydata]\n... zconfig =\n...     &lt;zodb&gt;\n...        &lt;filestorage&gt;\n...           path /foo/baz/Data.fs\n...        &lt;/filestorage&gt;\n...     &lt;/zodb&gt;\n...\n... [instance]\n... database = mydata\n... user = jim:SHA1:40bd001563085fc35165329ea1ff5c5ecbdbbeef\n...\n... \"\"\"\n... % dict(zope3_installation=sample_zope3))\n</pre>\n</blockquote>\n<p>The Zope3 instance recipe needs to be told the location of a Zope 3\ninstallation.   This can be done in two ways:</p>\n<ol>\n<li>Use a zope3checkout recipe to install Zope 3 from subversion,</li>\n<li>Use the configure-make-make-install recipe to install a Zope\nrelease, or</li>\n<li>Create a section with an option that provides the location of a\nZope 3 installation.</li>\n</ol>\n<p>We provided a zope3 section containing the location of an existing\nZope3 installation.</p>\n<p>We also provided a section that provided a zconfig option containing a\nZConfig definition for a database.  We provided it by hand, but one\nwould normally provide it using a part that used a database recipe,\nsuch as zc.recipe.filestorage or zc.recipe.clientstorage recipe.</p>\n<p>Let\u2019s run the buildout:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print system(join('bin', 'buildout')),\n</pre>\n</blockquote>\n<p>We\u2019ll get a directory created in the buildout parts directory\ncontaining configuration files and some directories to contain og\nfiles, pid files, and so on.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; ls(join('parts', 'instance'))\n</pre>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 737962, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "a74eca4bcf94dc758323ccf947607699", "sha256": "4b3dc7bf7df563808fe901adbc5223ee51a0f25a75593eb04a72f33b96b85e08"}, "downloads": -1, "filename": "iwm.recipe.bebopinstance-0.0.2-py2.4.egg", "has_sig": false, "md5_digest": "a74eca4bcf94dc758323ccf947607699", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 19980, "upload_time": "2007-07-16T15:32:43", "upload_time_iso_8601": "2007-07-16T15:32:43Z", "url": "https://files.pythonhosted.org/packages/45/f1/d1efa4e3c450f4f2f49e5d9a658c1a306eed685ac2cd6c2e763e6d8ad2ae/iwm.recipe.bebopinstance-0.0.2-py2.4.egg", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a74eca4bcf94dc758323ccf947607699", "sha256": "4b3dc7bf7df563808fe901adbc5223ee51a0f25a75593eb04a72f33b96b85e08"}, "downloads": -1, "filename": "iwm.recipe.bebopinstance-0.0.2-py2.4.egg", "has_sig": false, "md5_digest": "a74eca4bcf94dc758323ccf947607699", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 19980, "upload_time": "2007-07-16T15:32:43", "upload_time_iso_8601": "2007-07-16T15:32:43Z", "url": "https://files.pythonhosted.org/packages/45/f1/d1efa4e3c450f4f2f49e5d9a658c1a306eed685ac2cd6c2e763e6d8ad2ae/iwm.recipe.bebopinstance-0.0.2-py2.4.egg", "yanked": false}], "timestamp": "Fri May  8 00:53:31 2020"}