{"info": {"author": "Dalton Barreto", "author_email": "daltonmatos@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Alchemytools\n------------\n\nThis project brings a set of useful tools to be used in any SQLAchemly project.\n\nThe idea is to save common problems, for example: Opening/Closing sessions, commiting the sesssin only at the end of the transaction, etc.\n\n\nAvailable Tools\n###############\n\nHere are all tools available in alchemytools.\n\nContext Managers\n****************\n\nmanaged\n=======\n\nThis is the basic context manager and it will commit and close your session automatically, at the end of the ``with`` block.\n\n .. code-block:: python\n\n    with managed(MySessionClass) as session:\n        # Do what you need with your session\n    # Here the session is already closed and commited\n            \nIf you raise any exception inside the ``with`` block, the session will be rolled back and the exception re-raised.\n\nTo avoid having all of the function body inside the ``with`` block, ``managed`` functions as a context manager as well.\n\n.. code-block:: python\n    \n    @managed(MySessionClass)\n    def foo(session, *args, **kwargs):\n        # Do what you need with your session\n        pass\n\n    # call as if the session didn't exist:\n    foo(2, a='b')\n\nThe session is opened every time the function is called and closed whenever it returns or raises an exception. Autommit and rollback rules work as normal.\n\nAdditional options\n^^^^^^^^^^^^^^^^^^\n   \n ``auto_flush``: Sets the autoflush option on the SQLAlchemy session, defaults fo ``False``\n\nExecuting tests\n^^^^^^^^^^^^^^^\n\n .. code-block:: shell\n\n    $ python setup.py test \n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/daltonmatos/alchemytools", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "Alchemytools", "package_url": "https://pypi.org/project/Alchemytools/", "platform": "", "project_url": "https://pypi.org/project/Alchemytools/", "project_urls": {"Homepage": "https://github.com/daltonmatos/alchemytools"}, "release_url": "https://pypi.org/project/Alchemytools/0.7.0/", "requires_dist": null, "requires_python": "", "summary": "Alchemytools is a set of helpers to be used in any SQLAlchemy project", "version": "0.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This project brings a set of useful tools to be used in any SQLAchemly project.</p>\n<p>The idea is to save common problems, for example: Opening/Closing sessions, commiting the sesssin only at the end of the transaction, etc.</p>\n<div id=\"available-tools\">\n<h2>Available Tools</h2>\n<p>Here are all tools available in alchemytools.</p>\n<div id=\"context-managers\">\n<h3>Context Managers</h3>\n<h3 id=\"managed\"><span class=\"section-subtitle\">managed</span></h3>\n<p>This is the basic context manager and it will commit and close your session automatically, at the end of the <tt>with</tt> block.</p>\n<blockquote>\n<pre><span class=\"k\">with</span> <span class=\"n\">managed</span><span class=\"p\">(</span><span class=\"n\">MySessionClass</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Do what you need with your session</span>\n<span class=\"c1\"># Here the session is already closed and commited</span>\n</pre>\n</blockquote>\n<p>If you raise any exception inside the <tt>with</tt> block, the session will be rolled back and the exception re-raised.</p>\n<p>To avoid having all of the function body inside the <tt>with</tt> block, <tt>managed</tt> functions as a context manager as well.</p>\n<pre><span class=\"nd\">@managed</span><span class=\"p\">(</span><span class=\"n\">MySessionClass</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Do what you need with your session</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"c1\"># call as if the session didn't exist:</span>\n<span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">'b'</span><span class=\"p\">)</span>\n</pre>\n<p>The session is opened every time the function is called and closed whenever it returns or raises an exception. Autommit and rollback rules work as normal.</p>\n<div id=\"additional-options\">\n<h4>Additional options</h4>\n<blockquote>\n<tt>auto_flush</tt>: Sets the autoflush option on the SQLAlchemy session, defaults fo <tt>False</tt></blockquote>\n</div>\n<div id=\"executing-tests\">\n<h4>Executing tests</h4>\n<blockquote>\n<pre>$ python setup.py <span class=\"nb\">test</span>\n</pre>\n</blockquote>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5651946, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a21dfa2dda1b85e0c43186e248b0286f", "sha256": "e593a771294efff7cd779e61c4ed2865e3371ee8478819db4336409146227c89"}, "downloads": -1, "filename": "Alchemytools-0.1.tar.gz", "has_sig": false, "md5_digest": "a21dfa2dda1b85e0c43186e248b0286f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2122, "upload_time": "2012-09-05T23:56:54", "upload_time_iso_8601": "2012-09-05T23:56:54.030182Z", "url": "https://files.pythonhosted.org/packages/5b/ee/870d97b1b8ded5805d9ca860960f997353063e6745ce5988aedb006e099f/Alchemytools-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "1de3a2815706057f7777b92556dcd80b", "sha256": "df6b148ebcb98eeaa8e1687b217beffd90c2eb095a168faf2e042917db6acd18"}, "downloads": -1, "filename": "Alchemytools-0.2.tar.gz", "has_sig": false, "md5_digest": "1de3a2815706057f7777b92556dcd80b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2400, "upload_time": "2012-09-11T01:23:08", "upload_time_iso_8601": "2012-09-11T01:23:08.618580Z", "url": "https://files.pythonhosted.org/packages/ca/46/0375256eae4cc16db776e1ae9abb403115410d2d7d386104b89ca7e3090e/Alchemytools-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "a10d1c5559de068915bfdd0fe418cdf8", "sha256": "7866848f59a9af820a88f0321808ec3774ec4f27459ca91ce310e578085d9b01"}, "downloads": -1, "filename": "Alchemytools-0.3.tar.gz", "has_sig": false, "md5_digest": "a10d1c5559de068915bfdd0fe418cdf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2410, "upload_time": "2013-01-31T01:42:06", "upload_time_iso_8601": "2013-01-31T01:42:06.010193Z", "url": "https://files.pythonhosted.org/packages/e6/3c/e2e9fd771b1cb30dead1529036d725c5c3fbfe3f55c02f3a7cbaa9ae5825/Alchemytools-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "f7819d7ad5e180d7c289443eaed90c42", "sha256": "89c4e81402777d7b782642e5ff4a90567c7d85d60993e060e14699ebe3b4892f"}, "downloads": -1, "filename": "Alchemytools-0.4.tar.gz", "has_sig": false, "md5_digest": "f7819d7ad5e180d7c289443eaed90c42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2569, "upload_time": "2014-10-21T23:02:26", "upload_time_iso_8601": "2014-10-21T23:02:26.045462Z", "url": "https://files.pythonhosted.org/packages/08/6a/779dcdc392cd43d668015f018531d50a87710e9fb5920b9fe5439ce63891/Alchemytools-0.4.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "b16f64fea7b49cba28674bf42b0364c1", "sha256": "46f8525eb69ee9b8c375bc2b68d5765deb495ec6b1f4c4eb57a134cc6f1147fb"}, "downloads": -1, "filename": "Alchemytools-0.5.tar.gz", "has_sig": false, "md5_digest": "b16f64fea7b49cba28674bf42b0364c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2641, "upload_time": "2016-03-29T17:47:37", "upload_time_iso_8601": "2016-03-29T17:47:37.268376Z", "url": "https://files.pythonhosted.org/packages/9f/61/9a8dea9b1aef5581d7664f6c54a94c5970a7870a289ddc32716f078b6f33/Alchemytools-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "72246c36ee2ddd354a0b4bfaab989922", "sha256": "4814d28112ca70e9aa1e9ade875a032ea499cee07fdf0381ace947821c99c025"}, "downloads": -1, "filename": "Alchemytools-0.5.1.tar.gz", "has_sig": false, "md5_digest": "72246c36ee2ddd354a0b4bfaab989922", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2635, "upload_time": "2016-09-14T16:29:42", "upload_time_iso_8601": "2016-09-14T16:29:42.390599Z", "url": "https://files.pythonhosted.org/packages/19/d5/511a1d9c3c07c9e4c121bb8a0d50e661dd892f1ad5c2dcfb0758361db8d4/Alchemytools-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "292c10bb1dfce801822bd55535169dab", "sha256": "ff6ffa6dd9554e7db328d132182ba9aa33343edc8e71d66ee2cbab64621be4e2"}, "downloads": -1, "filename": "Alchemytools-0.5.2.tar.gz", "has_sig": false, "md5_digest": "292c10bb1dfce801822bd55535169dab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2674, "upload_time": "2016-11-29T23:06:48", "upload_time_iso_8601": "2016-11-29T23:06:48.958735Z", "url": "https://files.pythonhosted.org/packages/f5/35/315531c3a8e34c5689144c477284b699a2bb3628b9d597aa325b34170a75/Alchemytools-0.5.2.tar.gz", "yanked": false}], "0.6.0rc1": [{"comment_text": "", "digests": {"md5": "da16f1b0d68a80d964943d0edde893d2", "sha256": "7ceff2f80a9c7e908784174917a67e2265b5c2e7a67f798342a3b631ebbf64eb"}, "downloads": -1, "filename": "Alchemytools-0.6.0rc1.tar.gz", "has_sig": true, "md5_digest": "da16f1b0d68a80d964943d0edde893d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3688, "upload_time": "2018-12-13T00:33:51", "upload_time_iso_8601": "2018-12-13T00:33:51.740688Z", "url": "https://files.pythonhosted.org/packages/29/0b/b88b73b3d84ef1606b2b52802dcded02626e55dc07f11decfbaab26181a0/Alchemytools-0.6.0rc1.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "be76358a13ca72d568d5f415ce363cf5", "sha256": "3878a60c93904062432c99f9941cf924df66f9f51def25c2100db547d47dcf7c"}, "downloads": -1, "filename": "Alchemytools-0.7.0.tar.gz", "has_sig": false, "md5_digest": "be76358a13ca72d568d5f415ce363cf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3737, "upload_time": "2019-08-08T19:46:52", "upload_time_iso_8601": "2019-08-08T19:46:52.186340Z", "url": "https://files.pythonhosted.org/packages/dd/f5/16f12c3a1e82536f58646f77c5e752a62069f7d0431ff0a65483e7198433/Alchemytools-0.7.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be76358a13ca72d568d5f415ce363cf5", "sha256": "3878a60c93904062432c99f9941cf924df66f9f51def25c2100db547d47dcf7c"}, "downloads": -1, "filename": "Alchemytools-0.7.0.tar.gz", "has_sig": false, "md5_digest": "be76358a13ca72d568d5f415ce363cf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3737, "upload_time": "2019-08-08T19:46:52", "upload_time_iso_8601": "2019-08-08T19:46:52.186340Z", "url": "https://files.pythonhosted.org/packages/dd/f5/16f12c3a1e82536f58646f77c5e752a62069f7d0431ff0a65483e7198433/Alchemytools-0.7.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:02 2020"}