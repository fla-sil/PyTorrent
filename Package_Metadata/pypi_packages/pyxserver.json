{"info": {"author": "Kay Zheng", "author_email": "l04m33@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.4"], "description": "###########\nWhat's Pyx?\n###########\n\nPyx is yet another async web server written in Python, with the ``asyncio``\nmodule.\n\nIt's small and simple. It has no dependency at all except Python itself.\n\nYet Pyx is also carefully crafted to behave nicely in stressful and\ndangerous enviroments.\n\n###############\nHow to install?\n###############\n\nJust use pip or tools alike:\n\n.. code-block:: sh\n\n    pip install pyxserver\n\n################\nWhat can Pyx do?\n################\n\nPyx is a simple static file server by itself:\n\n.. code-block:: sh\n\n    pyx -b localhost -p 8000 -r /some/where\n\nThis will start pyx and bind it to localhost:8000, serving files in the\ndirectory /some/where\n\nAnd you can also use the small framework provided by Pyx to write your\nown dynamic web application:\n\n.. code-block:: python\n\n    import asyncio\n    from pyx import (HttpHeader, HttpConnectionCB)\n\n    @asyncio.coroutine\n    def req_cb(req):\n        resp = req.respond(200)\n        resp.headers.append(HttpHeader('Content-Length', 5))\n        resp.headers.append(HttpHeader('Content-Type', 'text/plain'))\n        yield from resp.send()\n        yield from resp.send_body(b'hello')\n\n    loop = asyncio.get_event_loop()\n\n    conn_cb = HttpConnectionCB(req_cb)\n    starter = asyncio.start_server(conn_cb, '127.0.0.1', 8080, loop=loop)\n    _server = loop.run_until_complete(starter)\n\n    loop.run_forever()\n\nPlease see the implementation of ``pyx.http.StaticRootResource`` for a\nmore sophisticated example.\n\n#######\nLicense\n#######\n\nPyx is licensed under the terms of `the MIT license`_.\n\n.. _the MIT license: http://l04m33.mit-license.org/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/l04m33/pyx", "keywords": "http,web,server", "license": "http://l04m33.mit-license.org/", "maintainer": null, "maintainer_email": null, "name": "pyxserver", "package_url": "https://pypi.org/project/pyxserver/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyxserver/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/l04m33/pyx"}, "release_url": "https://pypi.org/project/pyxserver/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "Yet another async web server", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"what-s-pyx\">\n<h2>What\u2019s Pyx?</h2>\n<p>Pyx is yet another async web server written in Python, with the <tt>asyncio</tt>\nmodule.</p>\n<p>It\u2019s small and simple. It has no dependency at all except Python itself.</p>\n<p>Yet Pyx is also carefully crafted to behave nicely in stressful and\ndangerous enviroments.</p>\n</div>\n<div id=\"how-to-install\">\n<h2>How to install?</h2>\n<p>Just use pip or tools alike:</p>\n<pre>pip install pyxserver\n</pre>\n</div>\n<div id=\"what-can-pyx-do\">\n<h2>What can Pyx do?</h2>\n<p>Pyx is a simple static file server by itself:</p>\n<pre>pyx -b localhost -p <span class=\"m\">8000</span> -r /some/where\n</pre>\n<p>This will start pyx and bind it to localhost:8000, serving files in the\ndirectory /some/where</p>\n<p>And you can also use the small framework provided by Pyx to write your\nown dynamic web application:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyx</span> <span class=\"kn\">import</span> <span class=\"p\">(</span><span class=\"n\">HttpHeader</span><span class=\"p\">,</span> <span class=\"n\">HttpConnectionCB</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@asyncio</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">req_cb</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">):</span>\n    <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">req</span><span class=\"o\">.</span><span class=\"n\">respond</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n    <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">HttpHeader</span><span class=\"p\">(</span><span class=\"s1\">'Content-Length'</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n    <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">HttpHeader</span><span class=\"p\">(</span><span class=\"s1\">'Content-Type'</span><span class=\"p\">,</span> <span class=\"s1\">'text/plain'</span><span class=\"p\">))</span>\n    <span class=\"k\">yield from</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">()</span>\n    <span class=\"k\">yield from</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">send_body</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'hello'</span><span class=\"p\">)</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n\n<span class=\"n\">conn_cb</span> <span class=\"o\">=</span> <span class=\"n\">HttpConnectionCB</span><span class=\"p\">(</span><span class=\"n\">req_cb</span><span class=\"p\">)</span>\n<span class=\"n\">starter</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">start_server</span><span class=\"p\">(</span><span class=\"n\">conn_cb</span><span class=\"p\">,</span> <span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"mi\">8080</span><span class=\"p\">,</span> <span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">)</span>\n<span class=\"n\">_server</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">starter</span><span class=\"p\">)</span>\n\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n</pre>\n<p>Please see the implementation of <tt>pyx.http.StaticRootResource</tt> for a\nmore sophisticated example.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Pyx is licensed under the terms of <a href=\"http://l04m33.mit-license.org/\" rel=\"nofollow\">the MIT license</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 1659584, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8e27d3dfea2b4f203a88cfde15faaec8", "sha256": "699bbc04d8fc9fcff85047c179f6b4ce8b1a4fec65502c6492a22c32205476d6"}, "downloads": -1, "filename": "pyxserver-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8e27d3dfea2b4f203a88cfde15faaec8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12591, "upload_time": "2015-05-07T05:14:41", "upload_time_iso_8601": "2015-05-07T05:14:41.587068Z", "url": "https://files.pythonhosted.org/packages/bc/4c/6931baf3409f6cbf73af3fa8b2b432198ab7f7860d60b1b86349ae42baa5/pyxserver-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "49aa8fb67ea8a88e42456b79a6b0b437", "sha256": "5e1c18edfb01d13bccc3914b51629d6b32cc8718781bce0d773ed5988923c6a4"}, "downloads": -1, "filename": "pyxserver-0.1.1.tar.gz", "has_sig": false, "md5_digest": "49aa8fb67ea8a88e42456b79a6b0b437", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15218, "upload_time": "2015-05-07T05:53:10", "upload_time_iso_8601": "2015-05-07T05:53:10.349747Z", "url": "https://files.pythonhosted.org/packages/68/bc/eba8a7a5767e749e4af945b116038b8a12a41a505a1daf66fefe0d30154e/pyxserver-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a239219ae0ad4db6866a6969bc175562", "sha256": "a3474bed6ff6058a4eae517634c3e4b689aba6834e904bec54ac191b4649fa13"}, "downloads": -1, "filename": "pyxserver-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a239219ae0ad4db6866a6969bc175562", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15484, "upload_time": "2015-05-14T05:16:52", "upload_time_iso_8601": "2015-05-14T05:16:52.520027Z", "url": "https://files.pythonhosted.org/packages/59/3d/1dc13a9353498f72e67f3e1d7895943fb44eb7933b4314c3228e6177bbd3/pyxserver-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e3c055104336ef8fc32763721bc06d94", "sha256": "a879efbcc1e85ac27025cfad77bc6c89b3a529eb30954bc8d99e0a67f09dbbe9"}, "downloads": -1, "filename": "pyxserver-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e3c055104336ef8fc32763721bc06d94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15450, "upload_time": "2015-06-29T00:55:29", "upload_time_iso_8601": "2015-06-29T00:55:29.302346Z", "url": "https://files.pythonhosted.org/packages/b7/3e/3c095e6bb21a31c2b8cea19f15f19e42a0e9f205da180791f80ada07f02c/pyxserver-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "c9d2ad951703bde28975e098948be75c", "sha256": "ce99a1b0ff8bd8b33e103b88c51aaf2585186104d71a219756849af34f308d8d"}, "downloads": -1, "filename": "pyxserver-0.1.4.tar.gz", "has_sig": false, "md5_digest": "c9d2ad951703bde28975e098948be75c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15896, "upload_time": "2015-08-01T02:34:14", "upload_time_iso_8601": "2015-08-01T02:34:14.638296Z", "url": "https://files.pythonhosted.org/packages/28/be/3f742fff12c794128bb12424585fd9f1ecafa823ac1ecc8c1d68f21f794f/pyxserver-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c9d2ad951703bde28975e098948be75c", "sha256": "ce99a1b0ff8bd8b33e103b88c51aaf2585186104d71a219756849af34f308d8d"}, "downloads": -1, "filename": "pyxserver-0.1.4.tar.gz", "has_sig": false, "md5_digest": "c9d2ad951703bde28975e098948be75c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15896, "upload_time": "2015-08-01T02:34:14", "upload_time_iso_8601": "2015-08-01T02:34:14.638296Z", "url": "https://files.pythonhosted.org/packages/28/be/3f742fff12c794128bb12424585fd9f1ecafa823ac1ecc8c1d68f21f794f/pyxserver-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:50 2020"}