{"info": {"author": "Kriszti\u00e1n Fekete", "author_email": "fekete.krisztyan@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: System :: Archiving :: Packaging", "Topic :: System :: Installation/Setup", "Topic :: Utilities"], "description": ".. this is a reST document, intentionally mistyped as .md for viewing on github\n\n.. image::\n  https://raw.githubusercontent.com/krisztianfekete/pyrene/master/docs/pyrene.png\n\n\nA PY-thon RE-pository NE-twork tool\n===================================\n\nPython package `repositories` are nodes in a network.\n\n`Pyrene` is a tool to transfer `packages` between repositories\n\n- with an easy syntax:\n  sources and targets are both defined as `repo:package`\n- with package dependencies, thus the target will be self contained!\n\n`Pyrene` is also an opinionated (read: simple, useful)\nconfiguration tool for `pip`.\n\n\nInstallation\n============\n\nAs an application into a separate `virtualenv` using `virtualenvwrapper`::\n\n    mkvirtualenv app-pyrene\n    pip install pyrene\n\ncreating this link is optional, but let's us use `pyrene` outside its virtualenv::\n\n    ln -s ~/.virtualenvs/app-pyrene/bin/pyrene ~/bin\n\n\nA simple network\n================\n\nThe following simple network is intended to be a working reference setup for Pyrene.\n\nRepositories are `pypi`, `local`, `private` as defined below:\n\n\nrepo `pypi`\n-----------\n\nis a pre-defined repo pointing to the public Python package repository at https://pypi.python.org/simple\n\nIt is used for publishing packages of public interest.\n\nIt is a *volatile repo*: **project owners can DELETE published packages or even entire projects.**\n\nThe obvious package names are mostly already taken.\n\n\nrepo `local`\n------------\n\nis a pre-defined repo pointing to the local directory: `~/.pip/local`\n\nThe user wants this to be the default repository for new package installs::\n\n    $ pyrene use local\n\nThis directory holds all packages needed for development, thus development\ncan continue offline as well.\n\nThe developer has full control over the repository.\n\n\nrepo `private`\n--------------\n\nis accessible through a potentially restricted url\n`https://packages.proprietary.com/simple`\n\nThis repository holds all packages needed for deployments: both publicly\navailable packages from pypi and in-house developed closed source ones.\n\nThe project/company has full control over the repo content.\n\nIt is not pre-defined, so define it::\n\n    $ pyrene\n    ...\n    Pyrene: http_repo private\n    Pyrene[private]: set download_url=https://packages.proprietary.com/simple/\n    Pyrene[private]: set upload_url=https://packages.proprietary.com/pypi\n    Pyrene[private]: set username=<me@company repo>\n    Pyrene[private]: set password=<secret>\n\nHere `pyrene` is used in shell mode, and `Pyrene[...]:` is a prompt for\ncommands.\n\n\nUsage scenarios\n===============\n\nImport a public package for offline use\n---------------------------------------\n\n::\n\n    $ pyrene copy pypi:public-package local:\n\nThis also copies all the dependencies of `public-package` as well.\n\n\nPublish an in-house package\n---------------------------\n\n::\n\n    $ cd in-house-pkg\n    $ python setup.py sdist\n    $ pyrene copy dist/in-house-pkg-1.0.0.tgz local:\n    $ pyrene copy local:in-house-pkg private:\n\n\nDeploy an application\n---------------------\n\n::\n\n    # make pip use the `private` repository by default by [over]writing `~/.pip/pip.conf`\n    $ pyrene use private\n    $ mkvirtualenv app\n    $ pip install application\n    $ start-application\n    ...\n    # restore the dev-env\n    $ deactivate\n    $ rmvirtualenv app\n    $ pyrene use local\n\n\nFeedback\n========\n\nThis is an early release so if you have any problems\n(*including usability*), please tell them about at\n\nhttps://github.com/krisztianfekete/pyrene/issues\n\n\nFeatures\n========\n\n- shell with help, command completion and colors for configuration and interactive\n  operations::\n\n      $ pyrene\n      ...\n      Pyrene: directory_repo local\n      Pyrene[local]: set directory=/path/to/repo\n      Pyrene[local]: copy pypi:someinterestingpkg==0.1 local:\n      Pyrene[local]: work_on private\n      Pyrene[private]: copy local:someinterestingpkg private:\n      Pyrene[private]: help use\n      ...\n\n- copy packages between repos (and directories)::\n\n      $ pyrene copy source-repo:package-with-lots-of-dependencies destination-repo:\n\n- serve local directory repos over http (package sharing with coworkers?)::\n\n      $ pyrene serve dir-repo\n\n- configure pip (by writing a `~/.pip/pip.conf` file) to use a repo without\n  `--index-url` or `--find-links` command line options::\n\n      $ pyrene use repo\n\n\nInternals\n=========\n\nThe network configuration is persisted in the file `~/.pyrene`\n(including passwords in plain text),\nwhich can be thought of as a combined `~/.pypirc` and `~/.pip/pip.conf`.\n\nAll operations are delegated to external tools (not to reinvent the `eggs`):\n\n- downloading packages is delegated to `pip`\n- uploading via http/https is delegated to `twine`\n- serving a directory is delegated to `pypiserver`\n\nTools are heavily influenced to work in a certain way by\n\n- giving them approriate command line options\n- setting an environment variable\n- writing a config file for them\n\nall of them painful manually.\n\nRepositories defined in `~/.pypirc` are imported on first startup, and\nthe `use` command replaces `~/.pip/pip.conf` to make `pip` work without\noptions.\n\n\nChangelog\n=========\n\n0.2.0 (2014-07-02)\n\n- wheels are not downloaded anymore - local wheels can still be uploaded\n- delegate http uploads to `twine` - simplifies code & license\n- status command: show python packaging configuration status\n- use command: makes backup of existing config before writing ~/.pip/pip.conf\n- add known repos on first run:\n   - repositories from `.pypirc` (only sets `upload-url`)\n   - `pypi` as `http://pypi.python.org`\n   - `local` as `~/.pip/local`\n- new command: import_pypirc\n- readline history\n- show version on startup\n\n0.1.3 (2014-05-13)\n\n- fix #1: existing package at remote http repo stops copy\n\n0.1.2 (2014-05-09)\n\n- setup.cfg: fix keywords & classifiers, early release notice\n\n0.1.1 (2014-05-08)\n\n- initial release - for testing", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/krisztianfekete/pyrene", "keywords": "pypi pip repository upload copy serve", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pyrene", "package_url": "https://pypi.org/project/pyrene/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyrene/", "project_urls": {"Homepage": "https://github.com/krisztianfekete/pyrene"}, "release_url": "https://pypi.org/project/pyrene/0.2/", "requires_dist": null, "requires_python": null, "summary": "Copy packages between python package repositories & more", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://raw.githubusercontent.com/krisztianfekete/pyrene/master/docs/pyrene.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c63a27e4e226b37e03229c5e4508823ef3726ce3/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6b7269737a7469616e66656b6574652f707972656e652f6d61737465722f646f63732f707972656e652e706e67\">\n<div id=\"a-py-thon-re-pository-ne-twork-tool\">\n<h2>A PY-thon RE-pository NE-twork tool</h2>\n<p>Python package <cite>repositories</cite> are nodes in a network.</p>\n<p><cite>Pyrene</cite> is a tool to transfer <cite>packages</cite> between repositories</p>\n<ul>\n<li>with an easy syntax:\nsources and targets are both defined as <cite>repo:package</cite></li>\n<li>with package dependencies, thus the target will be self contained!</li>\n</ul>\n<p><cite>Pyrene</cite> is also an opinionated (read: simple, useful)\nconfiguration tool for <cite>pip</cite>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>As an application into a separate <cite>virtualenv</cite> using <cite>virtualenvwrapper</cite>:</p>\n<pre>mkvirtualenv app-pyrene\npip install pyrene\n</pre>\n<p>creating this link is optional, but let\u2019s us use <cite>pyrene</cite> outside its virtualenv:</p>\n<pre>ln -s ~/.virtualenvs/app-pyrene/bin/pyrene ~/bin\n</pre>\n</div>\n<div id=\"a-simple-network\">\n<h2>A simple network</h2>\n<p>The following simple network is intended to be a working reference setup for Pyrene.</p>\n<p>Repositories are <cite>pypi</cite>, <cite>local</cite>, <cite>private</cite> as defined below:</p>\n<div id=\"repo-pypi\">\n<h3>repo <cite>pypi</cite></h3>\n<p>is a pre-defined repo pointing to the public Python package repository at <a href=\"https://pypi.python.org/simple\" rel=\"nofollow\">https://pypi.python.org/simple</a></p>\n<p>It is used for publishing packages of public interest.</p>\n<p>It is a <em>volatile repo</em>: <strong>project owners can DELETE published packages or even entire projects.</strong></p>\n<p>The obvious package names are mostly already taken.</p>\n</div>\n<div id=\"repo-local\">\n<h3>repo <cite>local</cite></h3>\n<p>is a pre-defined repo pointing to the local directory: <cite>~/.pip/local</cite></p>\n<p>The user wants this to be the default repository for new package installs:</p>\n<pre>$ pyrene use local\n</pre>\n<p>This directory holds all packages needed for development, thus development\ncan continue offline as well.</p>\n<p>The developer has full control over the repository.</p>\n</div>\n<div id=\"repo-private\">\n<h3>repo <cite>private</cite></h3>\n<p>is accessible through a potentially restricted url\n<cite>https://packages.proprietary.com/simple</cite></p>\n<p>This repository holds all packages needed for deployments: both publicly\navailable packages from pypi and in-house developed closed source ones.</p>\n<p>The project/company has full control over the repo content.</p>\n<p>It is not pre-defined, so define it:</p>\n<pre>$ pyrene\n...\nPyrene: http_repo private\nPyrene[private]: set download_url=https://packages.proprietary.com/simple/\nPyrene[private]: set upload_url=https://packages.proprietary.com/pypi\nPyrene[private]: set username=&lt;me@company repo&gt;\nPyrene[private]: set password=&lt;secret&gt;\n</pre>\n<p>Here <cite>pyrene</cite> is used in shell mode, and <cite>Pyrene[\u2026]:</cite> is a prompt for\ncommands.</p>\n</div>\n</div>\n<div id=\"usage-scenarios\">\n<h2>Usage scenarios</h2>\n<div id=\"import-a-public-package-for-offline-use\">\n<h3>Import a public package for offline use</h3>\n<pre>$ pyrene copy pypi:public-package local:\n</pre>\n<p>This also copies all the dependencies of <cite>public-package</cite> as well.</p>\n</div>\n<div id=\"publish-an-in-house-package\">\n<h3>Publish an in-house package</h3>\n<pre>$ cd in-house-pkg\n$ python setup.py sdist\n$ pyrene copy dist/in-house-pkg-1.0.0.tgz local:\n$ pyrene copy local:in-house-pkg private:\n</pre>\n</div>\n<div id=\"deploy-an-application\">\n<h3>Deploy an application</h3>\n<pre># make pip use the `private` repository by default by [over]writing `~/.pip/pip.conf`\n$ pyrene use private\n$ mkvirtualenv app\n$ pip install application\n$ start-application\n...\n# restore the dev-env\n$ deactivate\n$ rmvirtualenv app\n$ pyrene use local\n</pre>\n</div>\n</div>\n<div id=\"feedback\">\n<h2>Feedback</h2>\n<p>This is an early release so if you have any problems\n(<em>including usability</em>), please tell them about at</p>\n<p><a href=\"https://github.com/krisztianfekete/pyrene/issues\" rel=\"nofollow\">https://github.com/krisztianfekete/pyrene/issues</a></p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li><p>shell with help, command completion and colors for configuration and interactive\noperations:</p>\n<pre>$ pyrene\n...\nPyrene: directory_repo local\nPyrene[local]: set directory=/path/to/repo\nPyrene[local]: copy pypi:someinterestingpkg==0.1 local:\nPyrene[local]: work_on private\nPyrene[private]: copy local:someinterestingpkg private:\nPyrene[private]: help use\n...\n</pre>\n</li>\n<li><p>copy packages between repos (and directories):</p>\n<pre>$ pyrene copy source-repo:package-with-lots-of-dependencies destination-repo:\n</pre>\n</li>\n<li><p>serve local directory repos over http (package sharing with coworkers?):</p>\n<pre>$ pyrene serve dir-repo\n</pre>\n</li>\n<li><p>configure pip (by writing a <cite>~/.pip/pip.conf</cite> file) to use a repo without\n<cite>\u2013index-url</cite> or <cite>\u2013find-links</cite> command line options:</p>\n<pre>$ pyrene use repo\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"internals\">\n<h2>Internals</h2>\n<p>The network configuration is persisted in the file <cite>~/.pyrene</cite>\n(including passwords in plain text),\nwhich can be thought of as a combined <cite>~/.pypirc</cite> and <cite>~/.pip/pip.conf</cite>.</p>\n<p>All operations are delegated to external tools (not to reinvent the <cite>eggs</cite>):</p>\n<ul>\n<li>downloading packages is delegated to <cite>pip</cite></li>\n<li>uploading via http/https is delegated to <cite>twine</cite></li>\n<li>serving a directory is delegated to <cite>pypiserver</cite></li>\n</ul>\n<p>Tools are heavily influenced to work in a certain way by</p>\n<ul>\n<li>giving them approriate command line options</li>\n<li>setting an environment variable</li>\n<li>writing a config file for them</li>\n</ul>\n<p>all of them painful manually.</p>\n<p>Repositories defined in <cite>~/.pypirc</cite> are imported on first startup, and\nthe <cite>use</cite> command replaces <cite>~/.pip/pip.conf</cite> to make <cite>pip</cite> work without\noptions.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p>0.2.0 (2014-07-02)</p>\n<ul>\n<li>wheels are not downloaded anymore - local wheels can still be uploaded</li>\n<li>delegate http uploads to <cite>twine</cite> - simplifies code &amp; license</li>\n<li>status command: show python packaging configuration status</li>\n<li>use command: makes backup of existing config before writing ~/.pip/pip.conf</li>\n<li><dl>\n<dt>add known repos on first run:</dt>\n<dd><ul>\n<li>repositories from <cite>.pypirc</cite> (only sets <cite>upload-url</cite>)</li>\n<li><cite>pypi</cite> as <cite>http://pypi.python.org</cite></li>\n<li><cite>local</cite> as <cite>~/.pip/local</cite></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>new command: import_pypirc</li>\n<li>readline history</li>\n<li>show version on startup</li>\n</ul>\n<p>0.1.3 (2014-05-13)</p>\n<ul>\n<li>fix #1: existing package at remote http repo stops copy</li>\n</ul>\n<p>0.1.2 (2014-05-09)</p>\n<ul>\n<li>setup.cfg: fix keywords &amp; classifiers, early release notice</li>\n</ul>\n<p>0.1.1 (2014-05-08)</p>\n<ul>\n<li>initial release - for testing</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1144643, "releases": {"0.1.1": [{"comment_text": "Uploaded with Pyrene", "digests": {"md5": "3bdecb38957c36d564ffcb293d43250c", "sha256": "90c9ac5f9c4599eca72f9a74e78db0c4237e098a7c2827bfd9e87b7dbe2233d9"}, "downloads": -1, "filename": "pyrene-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3bdecb38957c36d564ffcb293d43250c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32231, "upload_time": "2014-05-08T23:16:43", "upload_time_iso_8601": "2014-05-08T23:16:43.727238Z", "url": "https://files.pythonhosted.org/packages/d1/b5/07db640961713f2ee67eb735fe6052a5a2d31ee7ea0aad3fc559e01ea955/pyrene-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "Uploaded with Pyrene", "digests": {"md5": "8e45aeb51b64456ffe981daff634ffaa", "sha256": "b77659f6fd06d72fbac6528882acd197d42aedee8a5e42486df27522ff5ef187"}, "downloads": -1, "filename": "pyrene-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8e45aeb51b64456ffe981daff634ffaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32450, "upload_time": "2014-05-09T20:46:17", "upload_time_iso_8601": "2014-05-09T20:46:17.379049Z", "url": "https://files.pythonhosted.org/packages/ea/3f/e47f8b4ec8c09cb97b4aa0273a7d0f576e58639495fc0248f646c1030c19/pyrene-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "Uploaded with Pyrene", "digests": {"md5": "24e2a5e9fc8e6c0e9953e12bdc655a7d", "sha256": "5920d0c011f6ca0e5b650ce031f361e1f9e4d4c89b8650c1827a96f98f64796f"}, "downloads": -1, "filename": "pyrene-0.1.3.tar.gz", "has_sig": false, "md5_digest": "24e2a5e9fc8e6c0e9953e12bdc655a7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32988, "upload_time": "2014-05-13T19:43:53", "upload_time_iso_8601": "2014-05-13T19:43:53.587318Z", "url": "https://files.pythonhosted.org/packages/d7/1a/67e5308eebf532f50ec8e908d578b7e3796419064029f8dbfc71b71c54d8/pyrene-0.1.3.tar.gz", "yanked": false}], "0.2": [{"comment_text": "Uploaded with Pyrene", "digests": {"md5": "1c50d5d75038ddb6ea76300f180a7855", "sha256": "349b0186a6dd367d39d6d1d0ca179a5a120ed4891ce0222b0a372b6319e8e4da"}, "downloads": -1, "filename": "pyrene-0.2.tar.gz", "has_sig": false, "md5_digest": "1c50d5d75038ddb6ea76300f180a7855", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38016, "upload_time": "2014-07-02T13:31:53", "upload_time_iso_8601": "2014-07-02T13:31:53.108684Z", "url": "https://files.pythonhosted.org/packages/cf/dd/418cc1d19cdfdcbbd36bce4c1888d91f6fce90f32a5205a637b50153231e/pyrene-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "Uploaded with Pyrene", "digests": {"md5": "1c50d5d75038ddb6ea76300f180a7855", "sha256": "349b0186a6dd367d39d6d1d0ca179a5a120ed4891ce0222b0a372b6319e8e4da"}, "downloads": -1, "filename": "pyrene-0.2.tar.gz", "has_sig": false, "md5_digest": "1c50d5d75038ddb6ea76300f180a7855", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38016, "upload_time": "2014-07-02T13:31:53", "upload_time_iso_8601": "2014-07-02T13:31:53.108684Z", "url": "https://files.pythonhosted.org/packages/cf/dd/418cc1d19cdfdcbbd36bce4c1888d91f6fce90f32a5205a637b50153231e/pyrene-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:53 2020"}