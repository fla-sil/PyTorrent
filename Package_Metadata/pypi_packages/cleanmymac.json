{"info": {"author": "Cosmin Basca", "author_email": "cosmin.basca@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: MacOS", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Text Processing :: Markup", "Topic :: Utilities"], "description": "cleanmymac\n==========\n\nA simple command line tool to clean old stuff from your mac.\n\ndocumentation\n=============\n\nhttp://cleanmymac.readthedocs.org/en/latest/\n\nusage\n=====\n\n.. code:: bash\n\n    $ cleanmymac -h\n    Usage: cleanmymac [OPTIONS] TARGETS\n\n      the main **run** method, responsible for creating the parser and executing\n      the main logic in **cleanmymac**\n\n      :param bool update: perform update of targets (if applicable) :param\n          dry_run: do not execute the actions, but log the result :param quiet:\n          quiet mode (no output), show a progressbar instead :param strict: if set\n          enforce strict(er) rules when validating targets :param list_targets: list\n          the installed targets :param stop_on_error: abort the execution on first\n          error :param config: the configuration path :param targets_path: extra\n          targets paths :param targets: the targets\n\n        Options:\n          -L, --log-level LVL      Either CRITICAL, ERROR, WARNING, INFO or DEBUG\n          -u, --update             update the target if applicable\n          -d, --dry_run            describe the actions to be performed, do not\n                                   execute them\n          -q, --quiet              run in quiet mode\n          --strict / --no-strict   strict mode: enforce strict(er) rules when\n                                   validating targets\n          -l, --list               list registered cleanup targets\n          -s, --stop_on_error      stop execution when first error is detected\n          -c, --config TEXT        specify the configuration path\n          -t, --targets_path PATH  specify extra yaml defined targets path\n          --version                Show the version and exit.\n          -?, -h, --help           Show this message and exit.\n\n\na typical usage pattern is:\n\n.. code:: bash\n\n    $ cleanmymac\n\nor (in quiet mode)\n\n.. code:: bash\n\n    $ cleanmymac -q\n\n\ninstallation\n============\n\ninstall from pypi:\n\n.. code-block:: bash\n\n    $ pip install cleanmymac\n\nclone the repository locally and issue\n\n.. code:: bash\n\n    $ python setup.py install\n\nconfiguration\n=============\n\nthe *cleanmymac* utility accepts a configuration file by specifying the\n*-c* option. If not specified the file is assumed to be at the following\nlocation **~/.cleanmymac.yaml**\n\nthe global configuration can be used (for now) to pass specific env vars\nto shell commands, for example assume that *anaconda* is not in the main\npath:\n\n.. code:: yaml\n\n    cleanmymac: {\n      targets_path: ['.']\n    }\n    anaconda: {\n      env: {\n        PATH: '~/anaconda/bin',\n      },\n    }\n\nextensibility\n=============\n\none can add more *cleanup targets* either by installing them as python\nclasses registered to the following entry-point: **cleanmymac.target**\nlike this (in setup.py):\n\n.. code:: python\n\n    entry_points={\n        # ....\n        'cleanmymac.target': [\n            'my_target_name = my.python.package.MyTargetClass'\n        ]\n        # ...\n    }\n\nalternatively for shell based commands simply create yaml files with the\nfollowing schema:\n\n.. code:: yaml\n\n    type: 'cmd'\n    spec: {\n      update_commands: [\n        'brew update',\n        'brew outdated | brew upgrade'\n      ],\n      clean_commands: [\n        'brew cleanup'\n      ]\n    }\n\nor for cleaning up directories (removing all but the latest version):\n\n.. code:: yaml\n\n    type: 'dir'\n    spec: {\n        update_message: 'Get the latest MacTex version from https://www.tug.org/mactex/',\n        entries: [\n            {\n                dir: '/usr/local/texlive/',\n                pattern: '\\d+'\n            },\n        ]\n    }\n\n**note**: see the *cleanmymac.builtins* module for more details\n\nand point *cleanmymac* to the folder where the yaml files reside with\nthe *-t* command line option\n\nbuiltin targets\n===============\n\nto see a list of builtin targets run:\n\n.. code:: bash\n\n    $ cleanmymac -l\n\ncurrently the following are supported:\n    * homebrew\n    * java jdk\n    * mactex\n    * anaconda\n    * trash\n\ndisclaimer\n==========\n\nI created this utility in the hope that others may find it useful, as I\nfound it annoying to always remember how and what to clean from my mac.\nThis is work in progress, so use at your own risk!", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cosminbasca/cleanmymac", "keywords": null, "license": "Apache", "maintainer": null, "maintainer_email": null, "name": "cleanmymac", "package_url": "https://pypi.org/project/cleanmymac/", "platform": "MacOS", "project_url": "https://pypi.org/project/cleanmymac/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/cosminbasca/cleanmymac"}, "release_url": "https://pypi.org/project/cleanmymac/0.1.17/", "requires_dist": null, "requires_python": null, "summary": "A simple utility to clean your mac of old stuff", "version": "0.1.17", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"cleanmymac\">\n<h2>cleanmymac</h2>\n<p>A simple command line tool to clean old stuff from your mac.</p>\n</div>\n<div id=\"documentation\">\n<h2>documentation</h2>\n<p><a href=\"http://cleanmymac.readthedocs.org/en/latest/\" rel=\"nofollow\">http://cleanmymac.readthedocs.org/en/latest/</a></p>\n</div>\n<div id=\"usage\">\n<h2>usage</h2>\n<pre>$ cleanmymac -h\nUsage: cleanmymac <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> TARGETS\n\n  the main **run** method, responsible <span class=\"k\">for</span> creating the parser and executing\n  the main logic in **cleanmymac**\n\n  :param bool update: perform update of targets <span class=\"o\">(</span><span class=\"k\">if</span> applicable<span class=\"o\">)</span> :param\n      dry_run: <span class=\"k\">do</span> not execute the actions, but log the result :param quiet:\n      quiet mode <span class=\"o\">(</span>no output<span class=\"o\">)</span>, show a progressbar instead :param strict: <span class=\"k\">if</span> <span class=\"nb\">set</span>\n      enforce strict<span class=\"o\">(</span>er<span class=\"o\">)</span> rules when validating targets :param list_targets: list\n      the installed targets :param stop_on_error: abort the execution on first\n      error :param config: the configuration path :param targets_path: extra\n      targets paths :param targets: the targets\n\n    Options:\n      -L, --log-level LVL      Either CRITICAL, ERROR, WARNING, INFO or DEBUG\n      -u, --update             update the target <span class=\"k\">if</span> applicable\n      -d, --dry_run            describe the actions to be performed, <span class=\"k\">do</span> not\n                               execute them\n      -q, --quiet              run in quiet mode\n      --strict / --no-strict   strict mode: enforce strict<span class=\"o\">(</span>er<span class=\"o\">)</span> rules when\n                               validating targets\n      -l, --list               list registered cleanup targets\n      -s, --stop_on_error      stop execution when first error is detected\n      -c, --config TEXT        specify the configuration path\n      -t, --targets_path PATH  specify extra yaml defined targets path\n      --version                Show the version and exit.\n      -?, -h, --help           Show this message and exit.\n</pre>\n<p>a typical usage pattern is:</p>\n<pre>$ cleanmymac\n</pre>\n<p>or (in quiet mode)</p>\n<pre>$ cleanmymac -q\n</pre>\n</div>\n<div id=\"installation\">\n<h2>installation</h2>\n<p>install from pypi:</p>\n<pre>$ pip install cleanmymac\n</pre>\n<p>clone the repository locally and issue</p>\n<pre>$ python setup.py install\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>configuration</h2>\n<p>the <em>cleanmymac</em> utility accepts a configuration file by specifying the\n<em>-c</em> option. If not specified the file is assumed to be at the following\nlocation <strong>~/.cleanmymac.yaml</strong></p>\n<p>the global configuration can be used (for now) to pass specific env vars\nto shell commands, for example assume that <em>anaconda</em> is not in the main\npath:</p>\n<pre><span class=\"nt\">cleanmymac</span><span class=\"p\">:</span> <span class=\"p-Indicator\">{</span>\n<span class=\"nt\">  targets_path</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"s\">'.'</span><span class=\"p-Indicator\">]</span>\n<span class=\"p-Indicator\">}</span>\n<span class=\"nt\">anaconda</span><span class=\"p\">:</span> <span class=\"p-Indicator\">{</span>\n<span class=\"nt\">  env</span><span class=\"p\">:</span> <span class=\"p-Indicator\">{</span>\n<span class=\"nt\">    PATH</span><span class=\"p\">:</span> <span class=\"s\">'~/anaconda/bin'</span><span class=\"p-Indicator\">,</span>\n  <span class=\"p-Indicator\">},</span>\n<span class=\"p-Indicator\">}</span>\n</pre>\n</div>\n<div id=\"extensibility\">\n<h2>extensibility</h2>\n<p>one can add more <em>cleanup targets</em> either by installing them as python\nclasses registered to the following entry-point: <strong>cleanmymac.target</strong>\nlike this (in setup.py):</p>\n<pre><span class=\"n\">entry_points</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"c1\"># ....</span>\n    <span class=\"s1\">'cleanmymac.target'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s1\">'my_target_name = my.python.package.MyTargetClass'</span>\n    <span class=\"p\">]</span>\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">}</span>\n</pre>\n<p>alternatively for shell based commands simply create yaml files with the\nfollowing schema:</p>\n<pre><span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"s\">'cmd'</span>\n<span class=\"nt\">spec</span><span class=\"p\">:</span> <span class=\"p-Indicator\">{</span>\n<span class=\"nt\">  update_commands</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span>\n    <span class=\"s\">'brew</span><span class=\"nv\"> </span><span class=\"s\">update'</span><span class=\"p-Indicator\">,</span>\n    <span class=\"s\">'brew</span><span class=\"nv\"> </span><span class=\"s\">outdated</span><span class=\"nv\"> </span><span class=\"s\">|</span><span class=\"nv\"> </span><span class=\"s\">brew</span><span class=\"nv\"> </span><span class=\"s\">upgrade'</span>\n  <span class=\"p-Indicator\">],</span>\n<span class=\"nt\">  clean_commands</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span>\n    <span class=\"s\">'brew</span><span class=\"nv\"> </span><span class=\"s\">cleanup'</span>\n  <span class=\"p-Indicator\">]</span>\n<span class=\"p-Indicator\">}</span>\n</pre>\n<p>or for cleaning up directories (removing all but the latest version):</p>\n<pre><span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"s\">'dir'</span>\n<span class=\"nt\">spec</span><span class=\"p\">:</span> <span class=\"p-Indicator\">{</span>\n<span class=\"nt\">    update_message</span><span class=\"p\">:</span> <span class=\"s\">'Get</span><span class=\"nv\"> </span><span class=\"s\">the</span><span class=\"nv\"> </span><span class=\"s\">latest</span><span class=\"nv\"> </span><span class=\"s\">MacTex</span><span class=\"nv\"> </span><span class=\"s\">version</span><span class=\"nv\"> </span><span class=\"s\">from</span><span class=\"nv\"> </span><span class=\"s\">https://www.tug.org/mactex/'</span><span class=\"p-Indicator\">,</span>\n<span class=\"nt\">    entries</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span>\n        <span class=\"p-Indicator\">{</span>\n<span class=\"nt\">            dir</span><span class=\"p\">:</span> <span class=\"s\">'/usr/local/texlive/'</span><span class=\"p-Indicator\">,</span>\n<span class=\"nt\">            pattern</span><span class=\"p\">:</span> <span class=\"s\">'\\d+'</span>\n        <span class=\"p-Indicator\">},</span>\n    <span class=\"p-Indicator\">]</span>\n<span class=\"p-Indicator\">}</span>\n</pre>\n<p><strong>note</strong>: see the <em>cleanmymac.builtins</em> module for more details</p>\n<p>and point <em>cleanmymac</em> to the folder where the yaml files reside with\nthe <em>-t</em> command line option</p>\n</div>\n<div id=\"builtin-targets\">\n<h2>builtin targets</h2>\n<p>to see a list of builtin targets run:</p>\n<pre>$ cleanmymac -l\n</pre>\n<dl>\n<dt>currently the following are supported:</dt>\n<dd><ul>\n<li>homebrew</li>\n<li>java jdk</li>\n<li>mactex</li>\n<li>anaconda</li>\n<li>trash</li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"disclaimer\">\n<h2>disclaimer</h2>\n<p>I created this utility in the hope that others may find it useful, as I\nfound it annoying to always remember how and what to clean from my mac.\nThis is work in progress, so use at your own risk!</p>\n</div>\n\n          </div>"}, "last_serial": 2089608, "releases": {"0.1.10": [{"comment_text": "", "digests": {"md5": "42d1763ec01d29611380764079cb96c2", "sha256": "2063efd6e56ba55f243a402d38cf5352a00fd704b8427a38394a2e8eb826b005"}, "downloads": -1, "filename": "cleanmymac-0.1.10-py2-none-any.whl", "has_sig": false, "md5_digest": "42d1763ec01d29611380764079cb96c2", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 21449, "upload_time": "2016-01-08T21:56:28", "upload_time_iso_8601": "2016-01-08T21:56:28.157458Z", "url": "https://files.pythonhosted.org/packages/11/8c/9b0b6ccea489523c44bdb19b2954a91e42bf7f15642a50cde7697b1a8fdc/cleanmymac-0.1.10-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b6a9e123190dcd0c8d50e176d1a1988", "sha256": "9e8ad177f8f804dd9ae04a3772adb2405ae73f464fd73589659143882f44309c"}, "downloads": -1, "filename": "cleanmymac-0.1.10.tar.gz", "has_sig": false, "md5_digest": "1b6a9e123190dcd0c8d50e176d1a1988", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15764, "upload_time": "2016-01-08T21:56:11", "upload_time_iso_8601": "2016-01-08T21:56:11.620965Z", "url": "https://files.pythonhosted.org/packages/fc/b4/fc28fdb5926aa7eddbeaee67e1428dbf013ec6df0d917fff05e1df7582da/cleanmymac-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "1bbc09983b36e9342d40a5f6d9644fbe", "sha256": "0801dcf8cbefe22b6180b5396d4fbdc538e67db717be121876a77692c2b175f4"}, "downloads": -1, "filename": "cleanmymac-0.1.11-py2-none-any.whl", "has_sig": false, "md5_digest": "1bbc09983b36e9342d40a5f6d9644fbe", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 21195, "upload_time": "2016-01-12T23:43:40", "upload_time_iso_8601": "2016-01-12T23:43:40.978683Z", "url": "https://files.pythonhosted.org/packages/ef/2f/b2d15f51ec65397b6b7874da1b990a65224081ab3ece974e893da0819094/cleanmymac-0.1.11-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8786784f63dd7ad5e171c04b8b00397", "sha256": "0e76ccb73c4bb6de7c504863be1a81c08eebcb3987b5f3bf051f6302c8e0700b"}, "downloads": -1, "filename": "cleanmymac-0.1.11.tar.gz", "has_sig": false, "md5_digest": "c8786784f63dd7ad5e171c04b8b00397", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15677, "upload_time": "2016-01-12T23:43:09", "upload_time_iso_8601": "2016-01-12T23:43:09.052172Z", "url": "https://files.pythonhosted.org/packages/ab/09/54333680269acf95452a4730d5d5072bf1831c10de8bb774418be648d0ed/cleanmymac-0.1.11.tar.gz", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "c3f909865069e59e93cf8997a0227b53", "sha256": "9c2bdb83ee49367a074e5fdfb2cbab49661fd38a4238d039a355131abf281c16"}, "downloads": -1, "filename": "cleanmymac-0.1.12-py2-none-any.whl", "has_sig": false, "md5_digest": "c3f909865069e59e93cf8997a0227b53", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22262, "upload_time": "2016-02-13T19:53:47", "upload_time_iso_8601": "2016-02-13T19:53:47.827556Z", "url": "https://files.pythonhosted.org/packages/f8/e4/383ae1fe6040613d6fdfc8b77dd14009a8162511a77e793da53123649e6c/cleanmymac-0.1.12-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "524f4010f0fa3a5e1c8c6dbac723e60a", "sha256": "f0ad2779aca7c78e4b8100a1f7c12cd56a6461a566b90756cd4a225223024e73"}, "downloads": -1, "filename": "cleanmymac-0.1.12.tar.gz", "has_sig": false, "md5_digest": "524f4010f0fa3a5e1c8c6dbac723e60a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16379, "upload_time": "2016-02-13T19:53:32", "upload_time_iso_8601": "2016-02-13T19:53:32.136085Z", "url": "https://files.pythonhosted.org/packages/06/a0/de7fa433762a7667e78e44272256845799c3a8f03b4fd88c7791a543b916/cleanmymac-0.1.12.tar.gz", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "4972bb37a599eb36a7e697705bc68540", "sha256": "f30a136e28f40d67bc3f260fd36506efe71126c72c2a423063e09773163e9881"}, "downloads": -1, "filename": "cleanmymac-0.1.13-py2-none-any.whl", "has_sig": false, "md5_digest": "4972bb37a599eb36a7e697705bc68540", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22715, "upload_time": "2016-02-13T20:38:05", "upload_time_iso_8601": "2016-02-13T20:38:05.619023Z", "url": "https://files.pythonhosted.org/packages/6c/40/a6b2ed8c938755f96696d930bb942d1e586f718b21639a4148c0ea3d95d7/cleanmymac-0.1.13-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e485ef0d466356592e9f9bd9c92466a", "sha256": "2247676418090e219098bf999a61ab790169a8523474e8d9fd6c22c78e4634b9"}, "downloads": -1, "filename": "cleanmymac-0.1.13.tar.gz", "has_sig": false, "md5_digest": "0e485ef0d466356592e9f9bd9c92466a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16611, "upload_time": "2016-02-13T20:37:56", "upload_time_iso_8601": "2016-02-13T20:37:56.156576Z", "url": "https://files.pythonhosted.org/packages/f9/fc/7c24e29428526e2d643fed52bf69c52fe6d60193281cc94440a9745224d1/cleanmymac-0.1.13.tar.gz", "yanked": false}], "0.1.14": [{"comment_text": "", "digests": {"md5": "9be5df49d433a1751b455b579cc08b53", "sha256": "fe6ed05437f20e46a79d8102e9645f3517cbaf6d106ff89472986148e64e3cb7"}, "downloads": -1, "filename": "cleanmymac-0.1.14-py2-none-any.whl", "has_sig": false, "md5_digest": "9be5df49d433a1751b455b579cc08b53", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22618, "upload_time": "2016-02-13T21:37:40", "upload_time_iso_8601": "2016-02-13T21:37:40.219555Z", "url": "https://files.pythonhosted.org/packages/23/c1/c9bc496b8bc4f6cdba4390ecacedb835baa7fbc833378af9ac84ed6809ce/cleanmymac-0.1.14-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6400d73b10aebc362042868a44bc7d4", "sha256": "7d0db9c5be1dd8fc44566c57d7309eef4512a6f446c593d4daa906c5d37451ff"}, "downloads": -1, "filename": "cleanmymac-0.1.14.tar.gz", "has_sig": false, "md5_digest": "d6400d73b10aebc362042868a44bc7d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16655, "upload_time": "2016-02-13T21:37:22", "upload_time_iso_8601": "2016-02-13T21:37:22.862798Z", "url": "https://files.pythonhosted.org/packages/06/eb/135c43b0e86ba8729cd61bb8ac372344a470ced118fb5cd221bce3223dcb/cleanmymac-0.1.14.tar.gz", "yanked": false}], "0.1.15": [{"comment_text": "", "digests": {"md5": "143f4bfa0fbc712265350ae7618182c0", "sha256": "e81b7911f86e4518ea18d2194c6a644153f3087441f44b126daa06acf51efe13"}, "downloads": -1, "filename": "cleanmymac-0.1.15-py2-none-any.whl", "has_sig": false, "md5_digest": "143f4bfa0fbc712265350ae7618182c0", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 24782, "upload_time": "2016-02-14T22:15:10", "upload_time_iso_8601": "2016-02-14T22:15:10.542293Z", "url": "https://files.pythonhosted.org/packages/7a/82/cdd8cc9d0baff2ef1167e85d3bdfb72513443bb24a2d6ff9325150396e52/cleanmymac-0.1.15-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba7bfe8bd1a42c4b974f0c3042142d57", "sha256": "5dfc75302f853d80902ec92970c8484812eef1f99dfeb83801521f57c89295d3"}, "downloads": -1, "filename": "cleanmymac-0.1.15.tar.gz", "has_sig": false, "md5_digest": "ba7bfe8bd1a42c4b974f0c3042142d57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17558, "upload_time": "2016-02-14T22:14:56", "upload_time_iso_8601": "2016-02-14T22:14:56.755791Z", "url": "https://files.pythonhosted.org/packages/6a/63/0efd9e0ab2643730560be70a48dbc62a962419a70d0ee12e2258324eef1c/cleanmymac-0.1.15.tar.gz", "yanked": false}], "0.1.16": [{"comment_text": "", "digests": {"md5": "21da6cb2565b79166f99d7304b86da59", "sha256": "4ef9164dc9e0b73f92ac5c56cee41606897862769251f60b044b864149b75366"}, "downloads": -1, "filename": "cleanmymac-0.1.16-py2-none-any.whl", "has_sig": false, "md5_digest": "21da6cb2565b79166f99d7304b86da59", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 65633, "upload_time": "2016-03-06T22:39:49", "upload_time_iso_8601": "2016-03-06T22:39:49.113311Z", "url": "https://files.pythonhosted.org/packages/dd/1b/081931b019fde66ec0c713aaba4dd0a7ea9deaa0973cae0659a9fe42373d/cleanmymac-0.1.16-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd221b9ddf5f20a9cab0b659d8c3bdb3", "sha256": "98fa643877d79447b103d04d671fb111f2a4ab1e5630ec666699aa5b1f37346b"}, "downloads": -1, "filename": "cleanmymac-0.1.16.tar.gz", "has_sig": false, "md5_digest": "dd221b9ddf5f20a9cab0b659d8c3bdb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18330, "upload_time": "2016-03-06T22:39:33", "upload_time_iso_8601": "2016-03-06T22:39:33.279022Z", "url": "https://files.pythonhosted.org/packages/93/46/7b8d152fe0867860b912b05c042cfa94c856abddd5f4753b6fdae97e3ee9/cleanmymac-0.1.16.tar.gz", "yanked": false}], "0.1.17": [{"comment_text": "", "digests": {"md5": "5b338568c2248bbb85abd09295174603", "sha256": "213b2168b36380d051c279320f44a28b8530c015687245ebf2f8b8b3676e3f4d"}, "downloads": -1, "filename": "cleanmymac-0.1.17-py2-none-any.whl", "has_sig": false, "md5_digest": "5b338568c2248bbb85abd09295174603", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 75625, "upload_time": "2016-04-28T21:54:45", "upload_time_iso_8601": "2016-04-28T21:54:45.393695Z", "url": "https://files.pythonhosted.org/packages/7e/f3/bc2e26c3afd05be8d4b8e5e248ddb49ccd7d270dcbc2e94e55f9e2922105/cleanmymac-0.1.17-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95932d56762d69ac572d85ae70ca7af4", "sha256": "eebf4225bcfa944aaf3b2244a36d324bba60105d136156d42b1e3487331cf27f"}, "downloads": -1, "filename": "cleanmymac-0.1.17.tar.gz", "has_sig": false, "md5_digest": "95932d56762d69ac572d85ae70ca7af4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18702, "upload_time": "2016-04-28T21:54:06", "upload_time_iso_8601": "2016-04-28T21:54:06.651810Z", "url": "https://files.pythonhosted.org/packages/42/b3/56bc90881e97571e0ef46e0571afda1b280a649941697e756dc9ae4e2df1/cleanmymac-0.1.17.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "fc52aec3e1a4418515dc8b422c31a44b", "sha256": "7b9e3babc0705b7f26a58f885898f114e3a43cd8e423a98e2e410c87743c91dd"}, "downloads": -1, "filename": "cleanmymac-0.1.9-py2-none-any.whl", "has_sig": false, "md5_digest": "fc52aec3e1a4418515dc8b422c31a44b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 21381, "upload_time": "2016-01-03T19:04:20", "upload_time_iso_8601": "2016-01-03T19:04:20.583844Z", "url": "https://files.pythonhosted.org/packages/15/c5/c5eb5967c0f5dbfd4151fa7468caaa2f93444cb694cc23a87d367c76b9db/cleanmymac-0.1.9-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2709aba16e0a51829a3f18b0d155d5c", "sha256": "a9c248bd2d3ee8d4b7cdfa31be746a2a9c9bb3f5f64e9f90e781af2950647473"}, "downloads": -1, "filename": "cleanmymac-0.1.9.tar.gz", "has_sig": false, "md5_digest": "b2709aba16e0a51829a3f18b0d155d5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15706, "upload_time": "2016-01-03T19:03:58", "upload_time_iso_8601": "2016-01-03T19:03:58.946327Z", "url": "https://files.pythonhosted.org/packages/45/18/69e7bcb4254f39b00f45845fcd4079c2f2696a270c866bad7d958b1f6793/cleanmymac-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5b338568c2248bbb85abd09295174603", "sha256": "213b2168b36380d051c279320f44a28b8530c015687245ebf2f8b8b3676e3f4d"}, "downloads": -1, "filename": "cleanmymac-0.1.17-py2-none-any.whl", "has_sig": false, "md5_digest": "5b338568c2248bbb85abd09295174603", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 75625, "upload_time": "2016-04-28T21:54:45", "upload_time_iso_8601": "2016-04-28T21:54:45.393695Z", "url": "https://files.pythonhosted.org/packages/7e/f3/bc2e26c3afd05be8d4b8e5e248ddb49ccd7d270dcbc2e94e55f9e2922105/cleanmymac-0.1.17-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95932d56762d69ac572d85ae70ca7af4", "sha256": "eebf4225bcfa944aaf3b2244a36d324bba60105d136156d42b1e3487331cf27f"}, "downloads": -1, "filename": "cleanmymac-0.1.17.tar.gz", "has_sig": false, "md5_digest": "95932d56762d69ac572d85ae70ca7af4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18702, "upload_time": "2016-04-28T21:54:06", "upload_time_iso_8601": "2016-04-28T21:54:06.651810Z", "url": "https://files.pythonhosted.org/packages/42/b3/56bc90881e97571e0ef46e0571afda1b280a649941697e756dc9ae4e2df1/cleanmymac-0.1.17.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:05 2020"}