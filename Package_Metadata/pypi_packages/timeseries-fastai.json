{"info": {"author": "Thomas Capelle", "author_email": "tcapelle@protonmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# timeseries_fastai\n> This repository aims to implement TimeSeries classification/regression algorithms. It makes extensive use of fastai V2!\n\n\n## Installation\n\nYou will need to install fastai V2 from [here](https://github.com/fastai/fastai2) and then you can do from within the environment where you installed fastai V2:\n\n```bash\npip install timeseries_fastai\n```\n\nand you are good to go.\n\n### TL;DR\n```bash\ngit clone https://github.com/fastai/fastai2\ncd fastai2\nconda env create -f environment.yml\nsource activate fastai2\npip install fastai2 timeseries_fastai\n\n```\n\n## Time Series Classification from Scratch with Deep Neural Networks: A Strong Baseline\nThe original paper repo is [here](https://github.com/cauchyturing/UCR_Time_Series_Classification_Deep_Learning_Baseline) is implemented in Keras/Tf.\n\n- Notebook 01: This is a basic notebook that implements the Deep Learning models proposed in [Time Series Classification from Scratch with Deep Neural Networks: A Strong Baseline](https://arxiv.org/abs/1611.06455). \n\n## InceptionTime: Finding AlexNet for Time SeriesClassification\nThe original paper repo is [here](https://github.com/hfawaz/InceptionTime)\n\n- Notebook 02: Added InceptionTime architecture from [InceptionTime: Finding AlexNet for Time SeriesClassification](https://arxiv.org/pdf/1909.04939.pdf). \n\n## Results\n\nYou can run the benchmark using:\n\n`$python ucr.py --arch='inception' --tasks='all' --filename='inception.csv' --mixup=0.2`\n\n### Default Values:\n- `lr` = 1e-3\n- `opt` = 'ranger'\n- `epochs` = 40\n- `fp16` = True\n\n```python\nimport pandas as pd\nfrom pathlib import Path\n```\n\n```python\nresults_inception = pd.read_csv(Path.cwd().parent/'inception.csv', index_col=0)\nresults_inception.head(10)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>acc</th>\n      <th>acc_max</th>\n      <th>train_loss</th>\n      <th>val_loss</th>\n    </tr>\n    <tr>\n      <th>task</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Adiac</th>\n      <td>0.83</td>\n      <td>0.83</td>\n      <td>1.54</td>\n      <td>1.31</td>\n    </tr>\n    <tr>\n      <th>ArrowHead</th>\n      <td>0.84</td>\n      <td>0.89</td>\n      <td>0.47</td>\n      <td>0.60</td>\n    </tr>\n    <tr>\n      <th>Beef</th>\n      <td>0.57</td>\n      <td>0.60</td>\n      <td>1.22</td>\n      <td>1.27</td>\n    </tr>\n    <tr>\n      <th>BeetleFly</th>\n      <td>0.85</td>\n      <td>1.00</td>\n      <td>0.29</td>\n      <td>0.38</td>\n    </tr>\n    <tr>\n      <th>BirdChicken</th>\n      <td>0.80</td>\n      <td>0.95</td>\n      <td>0.25</td>\n      <td>0.55</td>\n    </tr>\n    <tr>\n      <th>Car</th>\n      <td>0.85</td>\n      <td>0.85</td>\n      <td>0.58</td>\n      <td>0.74</td>\n    </tr>\n    <tr>\n      <th>CBF</th>\n      <td>0.99</td>\n      <td>1.00</td>\n      <td>0.44</td>\n      <td>0.37</td>\n    </tr>\n    <tr>\n      <th>ChlorineConcentration</th>\n      <td>0.77</td>\n      <td>0.77</td>\n      <td>0.61</td>\n      <td>0.70</td>\n    </tr>\n    <tr>\n      <th>CinCECGTorso</th>\n      <td>0.65</td>\n      <td>0.68</td>\n      <td>0.64</td>\n      <td>1.06</td>\n    </tr>\n    <tr>\n      <th>Coffee</th>\n      <td>1.00</td>\n      <td>1.00</td>\n      <td>0.33</td>\n      <td>0.21</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n## Getting Started\n\n```python\nfrom timeseries_fastai.imports import *\nfrom timeseries_fastai.core import *\nfrom timeseries_fastai.data import *\nfrom timeseries_fastai.models import *\n```\n\n```python\nPATH = Path.cwd().parent\n```\n\n```python\ndf_train, df_test = load_df_ucr(PATH, 'Adiac')\n```\n\n    Loading files from: /home/tc256760/Documents/timeseries_fastai/Adiac\n\n\n```python\nx_cols = df_train.columns[0:-2].to_list()\n```\n\n```python\ndls = TSDataLoaders.from_dfs(df_train, df_test, x_cols=x_cols, label_col='target', bs=16)\n```\n\n```python\ndls.show_batch()\n```\n\n\n![png](docs/images/output_17_0.png)\n\n\n```python\ninception = create_inception(1, len(dls.vocab))\n```\n\n```python\nlearn = Learner(dls, inception, metrics=[accuracy])\n```\n\n```python\nlearn.fit_one_cycle(5, 1e-3)\n```\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: left;\">\n      <th>epoch</th>\n      <th>train_loss</th>\n      <th>valid_loss</th>\n      <th>accuracy</th>\n      <th>time</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>3.948751</td>\n      <td>3.637887</td>\n      <td>0.028133</td>\n      <td>00:02</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>3.705492</td>\n      <td>3.507715</td>\n      <td>0.094629</td>\n      <td>00:02</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>3.418483</td>\n      <td>5.099520</td>\n      <td>0.038363</td>\n      <td>00:02</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>3.108469</td>\n      <td>2.665389</td>\n      <td>0.248082</td>\n      <td>00:02</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>2.820438</td>\n      <td>2.508861</td>\n      <td>0.304348</td>\n      <td>00:02</td>\n    </tr>\n  </tbody>\n</table>\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tcapelle/timeseries_fastai", "keywords": "timeseries deeplearning fastai", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "timeseries-fastai", "package_url": "https://pypi.org/project/timeseries-fastai/", "platform": "", "project_url": "https://pypi.org/project/timeseries-fastai/", "project_urls": {"Homepage": "https://github.com/tcapelle/timeseries_fastai"}, "release_url": "https://pypi.org/project/timeseries-fastai/2.0.0/", "requires_dist": ["fastai2"], "requires_python": ">=3.6", "summary": "A timeseries lib on top of fastai2", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>timeseries_fastai</h1>\n<blockquote>\n<p>This repository aims to implement TimeSeries classification/regression algorithms. It makes extensive use of fastai V2!</p>\n</blockquote>\n<h2>Installation</h2>\n<p>You will need to install fastai V2 from <a href=\"https://github.com/fastai/fastai2\" rel=\"nofollow\">here</a> and then you can do from within the environment where you installed fastai V2:</p>\n<pre>pip install timeseries_fastai\n</pre>\n<p>and you are good to go.</p>\n<h3>TL;DR</h3>\n<pre>git clone https://github.com/fastai/fastai2\n<span class=\"nb\">cd</span> fastai2\nconda env create -f environment.yml\n<span class=\"nb\">source</span> activate fastai2\npip install fastai2 timeseries_fastai\n</pre>\n<h2>Time Series Classification from Scratch with Deep Neural Networks: A Strong Baseline</h2>\n<p>The original paper repo is <a href=\"https://github.com/cauchyturing/UCR_Time_Series_Classification_Deep_Learning_Baseline\" rel=\"nofollow\">here</a> is implemented in Keras/Tf.</p>\n<ul>\n<li>Notebook 01: This is a basic notebook that implements the Deep Learning models proposed in <a href=\"https://arxiv.org/abs/1611.06455\" rel=\"nofollow\">Time Series Classification from Scratch with Deep Neural Networks: A Strong Baseline</a>.</li>\n</ul>\n<h2>InceptionTime: Finding AlexNet for Time SeriesClassification</h2>\n<p>The original paper repo is <a href=\"https://github.com/hfawaz/InceptionTime\" rel=\"nofollow\">here</a></p>\n<ul>\n<li>Notebook 02: Added InceptionTime architecture from <a href=\"https://arxiv.org/pdf/1909.04939.pdf\" rel=\"nofollow\">InceptionTime: Finding AlexNet for Time SeriesClassification</a>.</li>\n</ul>\n<h2>Results</h2>\n<p>You can run the benchmark using:</p>\n<p><code>$python ucr.py --arch='inception' --tasks='all' --filename='inception.csv' --mixup=0.2</code></p>\n<h3>Default Values:</h3>\n<ul>\n<li><code>lr</code> = 1e-3</li>\n<li><code>opt</code> = 'ranger'</li>\n<li><code>epochs</code> = 40</li>\n<li><code>fp16</code> = True</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n</pre>\n<pre><span class=\"n\">results_inception</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"n\">Path</span><span class=\"o\">.</span><span class=\"n\">cwd</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">/</span><span class=\"s1\">'inception.csv'</span><span class=\"p\">,</span> <span class=\"n\">index_col</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">results_inception</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<div>\n&lt;style scoped&gt;\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<pre><code>.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}\n</code></pre>\n&lt;/style&gt;\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>acc</th>\n      <th>acc_max</th>\n      <th>train_loss</th>\n      <th>val_loss</th>\n    </tr>\n    <tr>\n      <th>task</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Adiac</th>\n      <td>0.83</td>\n      <td>0.83</td>\n      <td>1.54</td>\n      <td>1.31</td>\n    </tr>\n    <tr>\n      <th>ArrowHead</th>\n      <td>0.84</td>\n      <td>0.89</td>\n      <td>0.47</td>\n      <td>0.60</td>\n    </tr>\n    <tr>\n      <th>Beef</th>\n      <td>0.57</td>\n      <td>0.60</td>\n      <td>1.22</td>\n      <td>1.27</td>\n    </tr>\n    <tr>\n      <th>BeetleFly</th>\n      <td>0.85</td>\n      <td>1.00</td>\n      <td>0.29</td>\n      <td>0.38</td>\n    </tr>\n    <tr>\n      <th>BirdChicken</th>\n      <td>0.80</td>\n      <td>0.95</td>\n      <td>0.25</td>\n      <td>0.55</td>\n    </tr>\n    <tr>\n      <th>Car</th>\n      <td>0.85</td>\n      <td>0.85</td>\n      <td>0.58</td>\n      <td>0.74</td>\n    </tr>\n    <tr>\n      <th>CBF</th>\n      <td>0.99</td>\n      <td>1.00</td>\n      <td>0.44</td>\n      <td>0.37</td>\n    </tr>\n    <tr>\n      <th>ChlorineConcentration</th>\n      <td>0.77</td>\n      <td>0.77</td>\n      <td>0.61</td>\n      <td>0.70</td>\n    </tr>\n    <tr>\n      <th>CinCECGTorso</th>\n      <td>0.65</td>\n      <td>0.68</td>\n      <td>0.64</td>\n      <td>1.06</td>\n    </tr>\n    <tr>\n      <th>Coffee</th>\n      <td>1.00</td>\n      <td>1.00</td>\n      <td>0.33</td>\n      <td>0.21</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<h2>Getting Started</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">timeseries_fastai.imports</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">timeseries_fastai.core</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">timeseries_fastai.data</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">timeseries_fastai.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre>\n<pre><span class=\"n\">PATH</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"o\">.</span><span class=\"n\">cwd</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">parent</span>\n</pre>\n<pre><span class=\"n\">df_train</span><span class=\"p\">,</span> <span class=\"n\">df_test</span> <span class=\"o\">=</span> <span class=\"n\">load_df_ucr</span><span class=\"p\">(</span><span class=\"n\">PATH</span><span class=\"p\">,</span> <span class=\"s1\">'Adiac'</span><span class=\"p\">)</span>\n</pre>\n<pre><code>Loading files from: /home/tc256760/Documents/timeseries_fastai/Adiac\n</code></pre>\n<pre><span class=\"n\">x_cols</span> <span class=\"o\">=</span> <span class=\"n\">df_train</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">to_list</span><span class=\"p\">()</span>\n</pre>\n<pre><span class=\"n\">dls</span> <span class=\"o\">=</span> <span class=\"n\">TSDataLoaders</span><span class=\"o\">.</span><span class=\"n\">from_dfs</span><span class=\"p\">(</span><span class=\"n\">df_train</span><span class=\"p\">,</span> <span class=\"n\">df_test</span><span class=\"p\">,</span> <span class=\"n\">x_cols</span><span class=\"o\">=</span><span class=\"n\">x_cols</span><span class=\"p\">,</span> <span class=\"n\">label_col</span><span class=\"o\">=</span><span class=\"s1\">'target'</span><span class=\"p\">,</span> <span class=\"n\">bs</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"n\">dls</span><span class=\"o\">.</span><span class=\"n\">show_batch</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cc6a447aa79c3f077633d7176e567a7b5a2bec4c/646f63732f696d616765732f6f75747075745f31375f302e706e67\"></p>\n<pre><span class=\"n\">inception</span> <span class=\"o\">=</span> <span class=\"n\">create_inception</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">dls</span><span class=\"o\">.</span><span class=\"n\">vocab</span><span class=\"p\">))</span>\n</pre>\n<pre><span class=\"n\">learn</span> <span class=\"o\">=</span> <span class=\"n\">Learner</span><span class=\"p\">(</span><span class=\"n\">dls</span><span class=\"p\">,</span> <span class=\"n\">inception</span><span class=\"p\">,</span> <span class=\"n\">metrics</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">accuracy</span><span class=\"p\">])</span>\n</pre>\n<pre><span class=\"n\">learn</span><span class=\"o\">.</span><span class=\"n\">fit_one_cycle</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mf\">1e-3</span><span class=\"p\">)</span>\n</pre>\n<table>\n  <thead>\n    <tr>\n      <th>epoch</th>\n      <th>train_loss</th>\n      <th>valid_loss</th>\n      <th>accuracy</th>\n      <th>time</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>3.948751</td>\n      <td>3.637887</td>\n      <td>0.028133</td>\n      <td>00:02</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>3.705492</td>\n      <td>3.507715</td>\n      <td>0.094629</td>\n      <td>00:02</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>3.418483</td>\n      <td>5.099520</td>\n      <td>0.038363</td>\n      <td>00:02</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>3.108469</td>\n      <td>2.665389</td>\n      <td>0.248082</td>\n      <td>00:02</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>2.820438</td>\n      <td>2.508861</td>\n      <td>0.304348</td>\n      <td>00:02</td>\n    </tr>\n  </tbody>\n</table>\n\n          </div>"}, "last_serial": 6804811, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "18708b699e73cb7ab5a96e388919f814", "sha256": "6b5865cfd17b6a2ea3e754a304799c19204191f48b7b02a76745c4ccb1892e2c"}, "downloads": -1, "filename": "timeseries_fastai-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "18708b699e73cb7ab5a96e388919f814", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12793, "upload_time": "2020-03-02T14:45:54", "upload_time_iso_8601": "2020-03-02T14:45:54.512812Z", "url": "https://files.pythonhosted.org/packages/06/dc/8d5fd16845b69f60d6f9b350c9685063bd3f5c3167643631d52e8a291d72/timeseries_fastai-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f7d5b7a6e01ff21e8b04912b384c8ce", "sha256": "1006e1f5a35cbbe4dfc151ab5a20127e87a37c64aa65577e70c44cd2891c4ab9"}, "downloads": -1, "filename": "timeseries_fastai-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8f7d5b7a6e01ff21e8b04912b384c8ce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15423, "upload_time": "2020-03-02T14:45:56", "upload_time_iso_8601": "2020-03-02T14:45:56.976529Z", "url": "https://files.pythonhosted.org/packages/3e/ac/c009597cf4effc732cf6d4f0fff30c58b92fc20cdb017f77771411436767/timeseries_fastai-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "a6b4bae886c156b74efed681bed676a4", "sha256": "ec43d14b4ab859a538ae88b766f32212443930d955892b832f41eddfedf27dd6"}, "downloads": -1, "filename": "timeseries_fastai-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a6b4bae886c156b74efed681bed676a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13012, "upload_time": "2020-03-03T10:05:05", "upload_time_iso_8601": "2020-03-03T10:05:05.825738Z", "url": "https://files.pythonhosted.org/packages/0a/91/e405ed66ffc2e07205e74d02cc8a30f54a270d57d5053a6bbda2245553c8/timeseries_fastai-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8e057ea3871b8a338239d9c7a0a79ab", "sha256": "fcaae51bffdd73f6523053c4b94cd382a325051341f93bb6b1495e946042b11b"}, "downloads": -1, "filename": "timeseries_fastai-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f8e057ea3871b8a338239d9c7a0a79ab", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15673, "upload_time": "2020-03-03T10:05:07", "upload_time_iso_8601": "2020-03-03T10:05:07.075441Z", "url": "https://files.pythonhosted.org/packages/b2/cf/8403e0eae4732503e83e467eb182c4d4d43239ad2ae90fb1042922dee57c/timeseries_fastai-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "e131a300bbb35399cfa17afd3f760565", "sha256": "905e1782a4bbb9e6215689685e070c9dcc936cb4878494b0cf792971c96f580a"}, "downloads": -1, "filename": "timeseries_fastai-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e131a300bbb35399cfa17afd3f760565", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15209, "upload_time": "2020-03-13T10:04:42", "upload_time_iso_8601": "2020-03-13T10:04:42.388650Z", "url": "https://files.pythonhosted.org/packages/56/10/288797839f016dd7e09e0ca120ad8dc4b95ba2a9fad441d0b97c6e415d68/timeseries_fastai-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d610397d9df2f7a5e5a00d028d5d3089", "sha256": "17661e1f3eceef9288baeadcb07739458597396124242fc24f508b90ec91a5f1"}, "downloads": -1, "filename": "timeseries_fastai-0.0.3.tar.gz", "has_sig": false, "md5_digest": "d610397d9df2f7a5e5a00d028d5d3089", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16892, "upload_time": "2020-03-13T10:04:44", "upload_time_iso_8601": "2020-03-13T10:04:44.158886Z", "url": "https://files.pythonhosted.org/packages/9c/37/8c2ea5a81f9beb569f38c3d96bfb1de3a9e894afe8006f217175bfbc635c/timeseries_fastai-0.0.3.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "e13395ae35589a171121434a01458e5c", "sha256": "381ae2b646a05158fb5e838c2c515d31827b92470c779c7d89c9b9a4b0e7a8ca"}, "downloads": -1, "filename": "timeseries_fastai-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e13395ae35589a171121434a01458e5c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15206, "upload_time": "2020-03-13T10:05:42", "upload_time_iso_8601": "2020-03-13T10:05:42.570857Z", "url": "https://files.pythonhosted.org/packages/8b/60/f80696069a7823fcd67061a07ae59ec8b2269674fcebc68aa4435bfe4951/timeseries_fastai-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b9c92562d0cd7e9bf854600f46150f9", "sha256": "52ad3b36b49cd293fc3fe5321ff3cdc6976cbdbf5fb768a11415eac33169099e"}, "downloads": -1, "filename": "timeseries_fastai-2.0.0.tar.gz", "has_sig": false, "md5_digest": "7b9c92562d0cd7e9bf854600f46150f9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16884, "upload_time": "2020-03-13T10:05:44", "upload_time_iso_8601": "2020-03-13T10:05:44.106779Z", "url": "https://files.pythonhosted.org/packages/a2/ef/a35bd393e1b00790106426696182e5286f762497bdcfba671d2b5b1e9318/timeseries_fastai-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e13395ae35589a171121434a01458e5c", "sha256": "381ae2b646a05158fb5e838c2c515d31827b92470c779c7d89c9b9a4b0e7a8ca"}, "downloads": -1, "filename": "timeseries_fastai-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e13395ae35589a171121434a01458e5c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15206, "upload_time": "2020-03-13T10:05:42", "upload_time_iso_8601": "2020-03-13T10:05:42.570857Z", "url": "https://files.pythonhosted.org/packages/8b/60/f80696069a7823fcd67061a07ae59ec8b2269674fcebc68aa4435bfe4951/timeseries_fastai-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b9c92562d0cd7e9bf854600f46150f9", "sha256": "52ad3b36b49cd293fc3fe5321ff3cdc6976cbdbf5fb768a11415eac33169099e"}, "downloads": -1, "filename": "timeseries_fastai-2.0.0.tar.gz", "has_sig": false, "md5_digest": "7b9c92562d0cd7e9bf854600f46150f9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16884, "upload_time": "2020-03-13T10:05:44", "upload_time_iso_8601": "2020-03-13T10:05:44.106779Z", "url": "https://files.pythonhosted.org/packages/a2/ef/a35bd393e1b00790106426696182e5286f762497bdcfba671d2b5b1e9318/timeseries_fastai-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:53:26 2020"}