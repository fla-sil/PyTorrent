{"info": {"author": "Bharath Kumar Ravichandran", "author_email": "bharathkumarravichandran@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.6"], "description": "# Responser\n\n[![PRs Welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg)](http://makeapullrequest.com) [![made-with-python](https://img.shields.io/badge/made%20with-python-blue.svg)](https://www.python.org/) [![License](https://img.shields.io/badge/license-MIT-green.svg)](LICENSE)\n\nResponser is a python package to convert normal strings, objects and other data to REST API response convention and in JSON format.\n\n## Usage\n\n### `Responser`\n-----------------------------------------\n\nResponser is a python package to convert normal strings, objects and other data to REST API response convention and in JSON format.\n\nThis function follows the following JSON structure.\n\n```json\n{\n  \"status_code\": 200,\n  \"data\": {\n    \"name\": \"Bharath Kumar Ravichandran\",\n    \"alma_mater\": \"NIT Trichy\",\n    \"languages_known\": [\n        \"Python\",\n        \"PHP\",\n        \"JS\",\n        \"C++\"\n    ],\n    \"cool_guy\": \"yes\",\n  },\n  \"message\": \"OK\"\n}\n```\n\n#### `JSONResponser`\n* Import the function with `from responser import JSONResponser`\n* Definition `JSONResponser(status_code=400, data=None, message=None, strict_mode=false)`\n* The `status_code` can be HTTP status codes or your own custom status codes.\n* If the `status_code` is a HTTP status code and the `data` is `None`, a default\n[reason phrase](https://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html) is added. (If `strict_mode` is `False` (default) )\n* If the `status_code` is a HTTP status code and the `message` is `None`, a default\n[reason phrase](https://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html) is added. (Even if `strict_mode` is `True` (default) ).\n* If the `status_code` is not a HTTP status code and the `data` is `None`, an empty data is added.\n* If the `status_code` is not a HTTP status code and the `message` is `None`, an empty message is added.\n* If the `strict_mode` is set to `True`, the data given as `data` is encoded.\n* The `status_code` defaults to 400. \n\n**Sample Code**\n```python\nfrom responser import JSONResponser\n\nstatus_code = 200\ndata = {\n    \"name\": \"Bharath Kumar Ravichandran\",\n    \"alma_mater\": \"NIT Trichy\",\n    \"languages_known\": [\n        \"Python\",\n        \"PHP\",\n        \"JS\",\n        \"C++\"\n    ],\n    \"cool_guy\": \"yes\",\n}\nmessage = \"User details returned.\"\n\nresponse = JSONResponser(status_code, data, message)\nprint response\n```\n**Output**\n```json\n{\n  \"status_code\": 200,\n  \"data\": {\n    \"name\": \"Bharath Kumar Ravichandran\",\n    \"alma_mater\": \"NIT Trichy\",\n    \"languages_known\": [\n        \"Python\",\n        \"PHP\",\n        \"JS\",\n        \"C++\"\n    ],\n    \"cool_guy\": \"yes\",\n  },\n  \"message\": \"User details returned.\"\n}\n```\n\n\n#### `JSONResponserDecorator`\n* Import the decorator with `from responser import JSONResponserDecorator`\n* Wrap function with decorator `@JSONResponserDecorator`\n* `JSONResponserDecorator` is built on top of JSONResponser, so it follows the same convention as `JSONResponser`.\n\n**Sample Code**\n```python\nfrom responser import JSONResponserDecorator\n\n@JSONResponserDecorator\ndef sample_function():\n\n    data = {\n        \"name\": \"Bharath Kumar Ravichandran\",\n        \"alma_mater\": \"NIT Trichy\",\n        \"languages_known\": [\n            \"Python\",\n            \"PHP\",\n            \"JS\",\n            \"C++\"\n        ],\n        \"cool_guy\": \"yes\",\n    }\n\n    return data\n```\n**Returned Data**\n```json\n{\n  \"status_code\": 200,\n  \"data\": {\n    \"name\": \"Bharath Kumar Ravichandran\",\n    \"alma_mater\": \"NIT Trichy\",\n    \"languages_known\": [\n        \"Python\",\n        \"PHP\",\n        \"JS\",\n        \"C++\"\n    ],\n    \"cool_guy\": \"yes\",\n  },\n  \"message\": \"OK\"\n}\n```\n\n\n### Inspired from\n[GokulSrinivas/Sangria](https://github.com/GokulSrinivas/Sangria)\n\n### Contributors\n[Bharath Kumar Ravichandran](https://github.com/BharathKumarRavichandran/)\n\n## License\n[MIT](LICENSE)\n\n![Built with love](http://forthebadge.com/images/badges/built-with-love.svg)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/BharathKumarRavichandran/responser/", "keywords": "responser json api decorator", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "responser", "package_url": "https://pypi.org/project/responser/", "platform": "", "project_url": "https://pypi.org/project/responser/", "project_urls": {"Homepage": "https://github.com/BharathKumarRavichandran/responser/"}, "release_url": "https://pypi.org/project/responser/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Responser is a python package to convert normal strings, objects and other data to REST API response convention and in JSON format.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Responser</h1>\n<p><a href=\"http://makeapullrequest.com\" rel=\"nofollow\"><img alt=\"PRs Welcome\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/220aa3f89f789ec18b3b3c9096a2a11ab994fd90/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e2e737667\"></a> <a href=\"https://www.python.org/\" rel=\"nofollow\"><img alt=\"made-with-python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/42d21cc9028b7d4da34ebad77440004bde2ee7d3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d616465253230776974682d707974686f6e2d626c75652e737667\"></a> <a href=\"LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f7db8d43223f55fabe102838639f47819829c1ca/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d677265656e2e737667\"></a></p>\n<p>Responser is a python package to convert normal strings, objects and other data to REST API response convention and in JSON format.</p>\n<h2>Usage</h2>\n<h3><code>Responser</code></h3>\n<hr>\n<p>Responser is a python package to convert normal strings, objects and other data to REST API response convention and in JSON format.</p>\n<p>This function follows the following JSON structure.</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"status_code\"</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Bharath Kumar Ravichandran\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"alma_mater\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NIT Trichy\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"languages_known\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"Python\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"PHP\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"JS\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"C++\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"cool_guy\"</span><span class=\"p\">:</span> <span class=\"s2\">\"yes\"</span><span class=\"p\">,</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"OK\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h4><code>JSONResponser</code></h4>\n<ul>\n<li>Import the function with <code>from responser import JSONResponser</code></li>\n<li>Definition <code>JSONResponser(status_code=400, data=None, message=None, strict_mode=false)</code></li>\n<li>The <code>status_code</code> can be HTTP status codes or your own custom status codes.</li>\n<li>If the <code>status_code</code> is a HTTP status code and the <code>data</code> is <code>None</code>, a default\n<a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html\" rel=\"nofollow\">reason phrase</a> is added. (If <code>strict_mode</code> is <code>False</code> (default) )</li>\n<li>If the <code>status_code</code> is a HTTP status code and the <code>message</code> is <code>None</code>, a default\n<a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html\" rel=\"nofollow\">reason phrase</a> is added. (Even if <code>strict_mode</code> is <code>True</code> (default) ).</li>\n<li>If the <code>status_code</code> is not a HTTP status code and the <code>data</code> is <code>None</code>, an empty data is added.</li>\n<li>If the <code>status_code</code> is not a HTTP status code and the <code>message</code> is <code>None</code>, an empty message is added.</li>\n<li>If the <code>strict_mode</code> is set to <code>True</code>, the data given as <code>data</code> is encoded.</li>\n<li>The <code>status_code</code> defaults to 400.</li>\n</ul>\n<p><strong>Sample Code</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">responser</span> <span class=\"kn\">import</span> <span class=\"n\">JSONResponser</span>\n\n<span class=\"n\">status_code</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Bharath Kumar Ravichandran\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"alma_mater\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NIT Trichy\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"languages_known\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"Python\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"PHP\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"JS\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"C++\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">\"cool_guy\"</span><span class=\"p\">:</span> <span class=\"s2\">\"yes\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"s2\">\"User details returned.\"</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">JSONResponser</span><span class=\"p\">(</span><span class=\"n\">status_code</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">response</span>\n</pre>\n<p><strong>Output</strong></p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"status_code\"</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Bharath Kumar Ravichandran\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"alma_mater\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NIT Trichy\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"languages_known\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"Python\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"PHP\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"JS\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"C++\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"cool_guy\"</span><span class=\"p\">:</span> <span class=\"s2\">\"yes\"</span><span class=\"p\">,</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"User details returned.\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h4><code>JSONResponserDecorator</code></h4>\n<ul>\n<li>Import the decorator with <code>from responser import JSONResponserDecorator</code></li>\n<li>Wrap function with decorator <code>@JSONResponserDecorator</code></li>\n<li><code>JSONResponserDecorator</code> is built on top of JSONResponser, so it follows the same convention as <code>JSONResponser</code>.</li>\n</ul>\n<p><strong>Sample Code</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">responser</span> <span class=\"kn\">import</span> <span class=\"n\">JSONResponserDecorator</span>\n\n<span class=\"nd\">@JSONResponserDecorator</span>\n<span class=\"k\">def</span> <span class=\"nf\">sample_function</span><span class=\"p\">():</span>\n\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Bharath Kumar Ravichandran\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"alma_mater\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NIT Trichy\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"languages_known\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">\"Python\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"PHP\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"JS\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"C++\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"s2\">\"cool_guy\"</span><span class=\"p\">:</span> <span class=\"s2\">\"yes\"</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">data</span>\n</pre>\n<p><strong>Returned Data</strong></p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"status_code\"</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Bharath Kumar Ravichandran\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"alma_mater\"</span><span class=\"p\">:</span> <span class=\"s2\">\"NIT Trichy\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"languages_known\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"Python\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"PHP\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"JS\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"C++\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"cool_guy\"</span><span class=\"p\">:</span> <span class=\"s2\">\"yes\"</span><span class=\"p\">,</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"OK\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Inspired from</h3>\n<p><a href=\"https://github.com/GokulSrinivas/Sangria\" rel=\"nofollow\">GokulSrinivas/Sangria</a></p>\n<h3>Contributors</h3>\n<p><a href=\"https://github.com/BharathKumarRavichandran/\" rel=\"nofollow\">Bharath Kumar Ravichandran</a></p>\n<h2>License</h2>\n<p><a href=\"LICENSE\" rel=\"nofollow\">MIT</a></p>\n<p><img alt=\"Built with love\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/259c77c9bad271befde29452483ec2619ff1b9f5/687474703a2f2f666f7274686562616467652e636f6d2f696d616765732f6261646765732f6275696c742d776974682d6c6f76652e737667\"></p>\n\n          </div>"}, "last_serial": 4814432, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "47562e8122ca678f76bd6272c515aba0", "sha256": "f7af82559dcb9c88bbed2719cfa96eb007cf5cc21236b84ef0122d0b2b4f9874"}, "downloads": -1, "filename": "responser-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "47562e8122ca678f76bd6272c515aba0", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4960, "upload_time": "2019-02-12T22:10:43", "upload_time_iso_8601": "2019-02-12T22:10:43.420399Z", "url": "https://files.pythonhosted.org/packages/1f/b6/bb20e46a65baf257b946724aa0618322044561516d3ecd5af4e887db57b2/responser-0.1-py2-none-any.whl", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "4883b0c32e311f11a9f6ead178fbd55d", "sha256": "b853f28953b94e9dd2f3833acfa0ac82212dae554d5adf6be670925f63a59722"}, "downloads": -1, "filename": "responser-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "4883b0c32e311f11a9f6ead178fbd55d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4913, "upload_time": "2019-02-13T07:19:10", "upload_time_iso_8601": "2019-02-13T07:19:10.568220Z", "url": "https://files.pythonhosted.org/packages/e3/fc/3a191c4ff5d5ff416097c1b882b30c5b50503cb4c06fd40e84765b5688ba/responser-1.0.0-py2-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4883b0c32e311f11a9f6ead178fbd55d", "sha256": "b853f28953b94e9dd2f3833acfa0ac82212dae554d5adf6be670925f63a59722"}, "downloads": -1, "filename": "responser-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "4883b0c32e311f11a9f6ead178fbd55d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4913, "upload_time": "2019-02-13T07:19:10", "upload_time_iso_8601": "2019-02-13T07:19:10.568220Z", "url": "https://files.pythonhosted.org/packages/e3/fc/3a191c4ff5d5ff416097c1b882b30c5b50503cb4c06fd40e84765b5688ba/responser-1.0.0-py2-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:03:46 2020"}