{"info": {"author": "Dan Loewenherz", "author_email": "dan@lionheartsw.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: OS Independent", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: CGI Tools/Libraries", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "|image0| |image1|\n\n|Version| |Python Versions|\n\n``django-pwnedpasswords-validator`` is a Django password validator that\nchecks if a user-provided password exists in a data breach using the\n`Pwned Passwords v2\nAPI <https://haveibeenpwned.com/API/v2#PwnedPasswords>`_. All provided\npassword data is\n`k-anonymized <https://en.wikipedia.org/wiki/K-anonymity>`_ before\nbeing sent to the API, so plaintext passwords never leave your server.\n\nFrom https://haveibeenpwned.com/API/v2#PwnedPasswords:\n\n    Pwned Passwords are more than half a billion passwords which have\n    previously been exposed in data breaches. The service is detailed in\n    the `launch blog\n    post <https://www.troyhunt.com/introducing-306-million-freely-downloadable-pwned-passwords/>`_\n    then `further expanded on with the release of version\n    2 <https://www.troyhunt.com/ive-just-launched-pwned-passwords-version-2>`_.\n    The entire data set is `both downloadable and searchable online via\n    the Pwned Passwords page <https://haveibeenpwned.com/Passwords>`_.\n\nInstallation\n------------\n\ndjango-pwnedpasswords-validator is available for download through\n`PyPi <https://pypi.python.org/pypi/django-pwnedpasswords-validator>`_.\nYou can install it right away using pip.\n\n.. code:: bash\n\n    pip install django-pwnedpasswords-validator\n\nThen, add django-pwnedpasswords-validator to your ``INSTALLED_APPS``:\n\n.. code:: python\n\n    INSTALLED_APPS = (\n        ...\n        'django_pwnedpasswords_validator'\n    )\n\nFinally, add django-pwnedpasswords-validator to\n``AUTH_PASSWORD_VALIDATORS``:\n\n.. code:: python\n\n    AUTH_PASSWORD_VALIDATORS = [\n        ...\n        {\n            'NAME': \"django_pwnedpasswords_validator.validation.PwnedPasswordValidator\"\n        }\n    ]\n\nIf you\u2019d like to customize the error message (the default is *\u201cThis\npassword has previously appeared in a data breach and should not be\nused.\u201d*), you can pass in an alternate in the ``OPTIONS`` parameter for\nthe validator.\n\n.. code:: python\n\n    AUTH_PASSWORD_VALIDATORS = [\n        ...\n        {\n            'NAME': \"django_pwnedpasswords_validator.validation.PwnedPasswordValidator\",\n            'OPTIONS': {\n                'error_text': \"Your password was found in a data breach.\",\n            }\n        }\n    ]\n\nSecurity Note\n^^^^^^^^^^^^^\n\nNo plaintext passwords ever leave your server using\ndjango-pwnedpasswords-validator.\n\nHow does that work? Well, the Pwned Passwords v2 API has a pretty cool\n`k-anonymity <https://en.wikipedia.org/wiki/K-anonymity>`_\nimplementation.\n\nFrom\nhttps://blog.cloudflare.com/validating-leaked-passwords-with-k-anonymity/:\n\n    Formally, a data set can be said to hold the property of\n    k-anonymity, if for every record in a released table, there are k \u2212\n    1 other records identical to it.\n\nThis allows us to only provide the first 5 characters of the SHA-1 hash\nof the password in question. The API then responds with a list of SHA-1\nhash suffixes with that prefix. On average, that list contains 478\nresults.\n\nPeople smarter than I am have used\n`math <https://blog.cloudflare.com/validating-leaked-passwords-with-k-anonymity/>`_\nto prove that 5-character prefixes are sufficient to maintain\nk-anonymity for this database.\n\nIn short: your plaintext passwords are protected if you use this\nlibrary. You won\u2019t leak any enough data to identity which passwords\nyou\u2019re searching for.\n\nThanks\n------\n\nSpecial thanks to `Troy Hunt <https://www.troyhunt.com>`_ for\ncollecting this data and providing this service.\n\nAuthors\n-------\n\n`Dan Loewenherz <https://github.com/dlo>`_\n\nSee also\n--------\n\n`pwnedpasswords <https://github.com/lionheart/pwnedpasswords>`_, a\ncommand-line utility and Python library for the Pwned Passwords v2 API.\n\nLicense\n-------\n\nApache License, Version 2.0. See `LICENSE <https://github.com/lionheart/django-pwnedpasswords-validator/blob/master/LICENSE>`_ for details.\n\n.. |image0| image:: meta/repo-banner-2.png\n.. |image1| image:: meta/repo-banner-bottom.png\n   :target: https://github.com/lionheart/django-pwnedpasswords-validator/blob/master/https://lionheartsw.com/\n.. |Version| image:: https://img.shields.io/pypi/v/django-pwnedpasswords-validator.svg?style=flat\n   :target: https://github.com/lionheart/django-pwnedpasswords-validator/blob/master/https://pypi.python.org/pypi/django-pwnedpasswords-validator\n.. |Python Versions| image:: https://img.shields.io/pypi/pyversions/django-pwnedpasswords-validator.svg?style=flat\n   :target: https://github.com/lionheart/django-pwnedpasswords-validator/blob/master/https://pypi.python.org/pypi/django-pwnedpasswords-validator\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/lionheart/django-pwnedpasswords-validator/tarball/1.0.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lionheart/django-pwnedpasswords-validator", "keywords": "passwords security", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "django-pwnedpasswords-validator", "package_url": "https://pypi.org/project/django-pwnedpasswords-validator/", "platform": "", "project_url": "https://pypi.org/project/django-pwnedpasswords-validator/", "project_urls": {"Download": "https://github.com/lionheart/django-pwnedpasswords-validator/tarball/1.0.1", "Homepage": "https://github.com/lionheart/django-pwnedpasswords-validator"}, "release_url": "https://pypi.org/project/django-pwnedpasswords-validator/1.0.1/", "requires_dist": ["pwnedpasswords"], "requires_python": "", "summary": "A Django app that validates user passwords against the Pwned Passwords v2 API.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"image0\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b53e90221a94b1cbb2cb0476a6201c68906ff8b/6d6574612f7265706f2d62616e6e65722d322e706e67\"> <a href=\"https://github.com/lionheart/django-pwnedpasswords-validator/blob/master/https://lionheartsw.com/\" rel=\"nofollow\"><img alt=\"image1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2d1f03f3f53022f1f117b395ff865bebc74200a0/6d6574612f7265706f2d62616e6e65722d626f74746f6d2e706e67\"></a></p>\n<p><a href=\"https://github.com/lionheart/django-pwnedpasswords-validator/blob/master/https://pypi.python.org/pypi/django-pwnedpasswords-validator\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a861b80d7f0d350c9df0b2ee9ca911dcdce0b6ca/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d70776e656470617373776f7264732d76616c696461746f722e7376673f7374796c653d666c6174\"></a> <a href=\"https://github.com/lionheart/django-pwnedpasswords-validator/blob/master/https://pypi.python.org/pypi/django-pwnedpasswords-validator\" rel=\"nofollow\"><img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4e97e947f9095766be12673d4c6014ea9bdfd260/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f646a616e676f2d70776e656470617373776f7264732d76616c696461746f722e7376673f7374796c653d666c6174\"></a></p>\n<p><tt><span class=\"pre\">django-pwnedpasswords-validator</span></tt> is a Django password validator that\nchecks if a user-provided password exists in a data breach using the\n<a href=\"https://haveibeenpwned.com/API/v2#PwnedPasswords\" rel=\"nofollow\">Pwned Passwords v2\nAPI</a>. All provided\npassword data is\n<a href=\"https://en.wikipedia.org/wiki/K-anonymity\" rel=\"nofollow\">k-anonymized</a> before\nbeing sent to the API, so plaintext passwords never leave your server.</p>\n<p>From <a href=\"https://haveibeenpwned.com/API/v2#PwnedPasswords\" rel=\"nofollow\">https://haveibeenpwned.com/API/v2#PwnedPasswords</a>:</p>\n<blockquote>\nPwned Passwords are more than half a billion passwords which have\npreviously been exposed in data breaches. The service is detailed in\nthe <a href=\"https://www.troyhunt.com/introducing-306-million-freely-downloadable-pwned-passwords/\" rel=\"nofollow\">launch blog\npost</a>\nthen <a href=\"https://www.troyhunt.com/ive-just-launched-pwned-passwords-version-2\" rel=\"nofollow\">further expanded on with the release of version\n2</a>.\nThe entire data set is <a href=\"https://haveibeenpwned.com/Passwords\" rel=\"nofollow\">both downloadable and searchable online via\nthe Pwned Passwords page</a>.</blockquote>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>django-pwnedpasswords-validator is available for download through\n<a href=\"https://pypi.python.org/pypi/django-pwnedpasswords-validator\" rel=\"nofollow\">PyPi</a>.\nYou can install it right away using pip.</p>\n<pre>pip install django-pwnedpasswords-validator\n</pre>\n<p>Then, add django-pwnedpasswords-validator to your <tt>INSTALLED_APPS</tt>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django_pwnedpasswords_validator'</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Finally, add django-pwnedpasswords-validator to\n<tt>AUTH_PASSWORD_VALIDATORS</tt>:</p>\n<pre><span class=\"n\">AUTH_PASSWORD_VALIDATORS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'NAME'</span><span class=\"p\">:</span> <span class=\"s2\">\"django_pwnedpasswords_validator.validation.PwnedPasswordValidator\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>If you\u2019d like to customize the error message (the default is <em>\u201cThis\npassword has previously appeared in a data breach and should not be\nused.\u201d</em>), you can pass in an alternate in the <tt>OPTIONS</tt> parameter for\nthe validator.</p>\n<pre><span class=\"n\">AUTH_PASSWORD_VALIDATORS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'NAME'</span><span class=\"p\">:</span> <span class=\"s2\">\"django_pwnedpasswords_validator.validation.PwnedPasswordValidator\"</span><span class=\"p\">,</span>\n        <span class=\"s1\">'OPTIONS'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'error_text'</span><span class=\"p\">:</span> <span class=\"s2\">\"Your password was found in a data breach.\"</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<div id=\"security-note\">\n<h3>Security Note</h3>\n<p>No plaintext passwords ever leave your server using\ndjango-pwnedpasswords-validator.</p>\n<p>How does that work? Well, the Pwned Passwords v2 API has a pretty cool\n<a href=\"https://en.wikipedia.org/wiki/K-anonymity\" rel=\"nofollow\">k-anonymity</a>\nimplementation.</p>\n<p>From\n<a href=\"https://blog.cloudflare.com/validating-leaked-passwords-with-k-anonymity/\" rel=\"nofollow\">https://blog.cloudflare.com/validating-leaked-passwords-with-k-anonymity/</a>:</p>\n<blockquote>\nFormally, a data set can be said to hold the property of\nk-anonymity, if for every record in a released table, there are k \u2212\n1 other records identical to it.</blockquote>\n<p>This allows us to only provide the first 5 characters of the SHA-1 hash\nof the password in question. The API then responds with a list of SHA-1\nhash suffixes with that prefix. On average, that list contains 478\nresults.</p>\n<p>People smarter than I am have used\n<a href=\"https://blog.cloudflare.com/validating-leaked-passwords-with-k-anonymity/\" rel=\"nofollow\">math</a>\nto prove that 5-character prefixes are sufficient to maintain\nk-anonymity for this database.</p>\n<p>In short: your plaintext passwords are protected if you use this\nlibrary. You won\u2019t leak any enough data to identity which passwords\nyou\u2019re searching for.</p>\n</div>\n</div>\n<div id=\"thanks\">\n<h2>Thanks</h2>\n<p>Special thanks to <a href=\"https://www.troyhunt.com\" rel=\"nofollow\">Troy Hunt</a> for\ncollecting this data and providing this service.</p>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p><a href=\"https://github.com/dlo\" rel=\"nofollow\">Dan Loewenherz</a></p>\n</div>\n<div id=\"see-also\">\n<h2>See also</h2>\n<p><a href=\"https://github.com/lionheart/pwnedpasswords\" rel=\"nofollow\">pwnedpasswords</a>, a\ncommand-line utility and Python library for the Pwned Passwords v2 API.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Apache License, Version 2.0. See <a href=\"https://github.com/lionheart/django-pwnedpasswords-validator/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a> for details.</p>\n</div>\n\n          </div>"}, "last_serial": 4289783, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fc9c1a8c53924d10b17602bd984cc901", "sha256": "472f8da9bef5ed5c1591e57aface182c428d71e88ccf80f77ba0200264023609"}, "downloads": -1, "filename": "django_pwnedpasswords_validator-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fc9c1a8c53924d10b17602bd984cc901", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8154, "upload_time": "2018-02-24T16:00:42", "upload_time_iso_8601": "2018-02-24T16:00:42.879323Z", "url": "https://files.pythonhosted.org/packages/bb/b5/4cbbf1e0553e55825dd8389b5f18996cae17839d0836366e8cf6eaf75536/django_pwnedpasswords_validator-0.1.0-py2.py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "86b78eb525eec8ade7b2958a4e90d3bb", "sha256": "390bb538e71d62bdd2f19559d61a420c60afadde914b7410c17dc637b178b4bf"}, "downloads": -1, "filename": "django_pwnedpasswords_validator-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "86b78eb525eec8ade7b2958a4e90d3bb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8492, "upload_time": "2018-02-24T16:02:48", "upload_time_iso_8601": "2018-02-24T16:02:48.085597Z", "url": "https://files.pythonhosted.org/packages/01/f7/5a6e71b8de62cd22078c385191f5689d5c59988cabca2b254a70acac1d02/django_pwnedpasswords_validator-0.1.1-py2.py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "9c66935422a823ac3c14557f9214eda5", "sha256": "48199ebc2eef06cdf150ff6850cca133dba2dba784a3cd52af9c8537ede11ff9"}, "downloads": -1, "filename": "django_pwnedpasswords_validator-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9c66935422a823ac3c14557f9214eda5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8582, "upload_time": "2018-02-24T16:04:42", "upload_time_iso_8601": "2018-02-24T16:04:42.713913Z", "url": "https://files.pythonhosted.org/packages/e2/69/c8575c39cfda8c94064ee51b9d81abcba8e4006cb95afda20cb750eac8f8/django_pwnedpasswords_validator-0.1.2-py2.py3-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "44bccd2f0090e116f44a9bb69e468737", "sha256": "b664b36516b8c5a78426fc5cd6223b72d2d7fc03120e41e4bc0e6dabd0844039"}, "downloads": -1, "filename": "django_pwnedpasswords_validator-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "44bccd2f0090e116f44a9bb69e468737", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8421, "upload_time": "2018-02-24T16:07:53", "upload_time_iso_8601": "2018-02-24T16:07:53.665103Z", "url": "https://files.pythonhosted.org/packages/ca/49/2b30dc283506d43418e4283f742367534a630796c6639f834f7013e2c153/django_pwnedpasswords_validator-0.1.3-py2.py3-none-any.whl", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "6aa222a2f93b481f93bae4a4c5febb83", "sha256": "10b6d1dfb3513c6779c9e0e21ddbcaa42c133339bbbc5285c105831adc8341b4"}, "downloads": -1, "filename": "django_pwnedpasswords_validator-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6aa222a2f93b481f93bae4a4c5febb83", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8420, "upload_time": "2018-03-07T02:26:33", "upload_time_iso_8601": "2018-03-07T02:26:33.738760Z", "url": "https://files.pythonhosted.org/packages/69/17/01f6d0c668ca3866918800016cef2bc5277e30717772db9ad2eba2590eb5/django_pwnedpasswords_validator-1.0.0-py2.py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "e22f53ae2d1a281447f8dc37eeadfac2", "sha256": "bcfad855f8cbbf49c124596d16539a763e7c8d9524c14889fabce58039c6b25e"}, "downloads": -1, "filename": "django_pwnedpasswords_validator-1.0.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "e22f53ae2d1a281447f8dc37eeadfac2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5562, "upload_time": "2018-09-19T19:18:41", "upload_time_iso_8601": "2018-09-19T19:18:41.069611Z", "url": "https://files.pythonhosted.org/packages/41/f1/daf18e0ea2aa0be3a63d4ec9d334e0936838f338c7e2a6116aa93ad6b4a2/django_pwnedpasswords_validator-1.0.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e22f53ae2d1a281447f8dc37eeadfac2", "sha256": "bcfad855f8cbbf49c124596d16539a763e7c8d9524c14889fabce58039c6b25e"}, "downloads": -1, "filename": "django_pwnedpasswords_validator-1.0.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "e22f53ae2d1a281447f8dc37eeadfac2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5562, "upload_time": "2018-09-19T19:18:41", "upload_time_iso_8601": "2018-09-19T19:18:41.069611Z", "url": "https://files.pythonhosted.org/packages/41/f1/daf18e0ea2aa0be3a63d4ec9d334e0936838f338c7e2a6116aa93ad6b4a2/django_pwnedpasswords_validator-1.0.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:54:35 2020"}