{"info": {"author": "Mikael Mortensen", "author_email": "mikaem@math.uio.no", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "mpiFFT4py\n---------\n\n.. image:: https://travis-ci.org/spectralDNS/mpiFFT4py.svg?branch=master\n    :target: https://travis-ci.org/spectralDNS/mpiFFT4py\n.. image:: https://circleci.com/gh/spectralDNS/mpiFFT4py/tree/master.svg?style=svg\n    :target: https://circleci.com/gh/spectralDNS/mpiFFT4py/tree/master\n.. image:: https://zenodo.org/badge/51817237.svg\n    :target: https://zenodo.org/badge/latestdoi/51817237\n\nDescription\n-----------\nmpiFFT4py performs FFTs in parallel in Python. It is developed to be able to do FFTs in parallel on a three-dimensional computational box (a structured grid), but there are also routines for doing the FFTs on a 2D mesh. It implements both the *slab* and the *pencil* decompositions.\n\nInstallation\n------------\nmpiFFT4py requires *numpy* for basic array oparations, [*pyfftw*](https://github.com/pyfftw/pyFFTW) for efficient FFTs and [*mpi4py*](https://bitbucket.org/mpi4py/mpi4py) for MPI communications. However, if *pyfftw* is not found, then the slower *numpy.fft* is used instead. [*cython*](http://cython.org) is used to optimize a few routines. Install using regular python distutils::\n\n    python setup.py install --prefix=\"Path on the PYTHONPATH\"\n  \nTo install in place do::\n\n    python setup.py build_ext --inplace\n    \nTo install using Anaconda, you may either compile it yourselves using (from the main directory)::\n\n    conda config --add channels conda-forge\n    conda build conf/conda\n    conda install mpiFFT4py --use-local\n    \nor use precompiled binaries in the[*conda-forge*](https://anaconda.org/conda-forge/mpifft4py) or the [*spectralDNS*](https://anaconda.org/spectralDNS/mpifft4py) channel on Anaconda cloud::\n\n    conda install -c conda-forge mpifft4py\n\nor::\n\n    conda config --add channels conda-forge\n    conda install -c spectralDNS mpifft4py\n\nThere are binaries compiled for both OSX and linux, and several versions of Python. Note that the spectralDNS channel contains bleeding-edge versions of the Software, whereas conda-forge is more stable.\n\nAuthors\n-------\nmpiFFT4py is developed by\n\n  * Mikael Mortensen\n\nLicence\n-------\nmpiFFT4py is licensed under the GNU GPL, version 3 or (at your option) any later version. mpiFFT4py is Copyright (2014-2016) by the authors.\n\nContact\n-------\nThe latest version of this software can be obtained from\n\n  https://github.com/spectralDNS/mpiFFT4py\n\nPlease report bugs and other issues through the issue tracker at:\n\n  https://github.com/spectralDNS/mpiFFT4py/issues", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/spectralDNS/mpiFFT4py", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mpiFFT4py", "package_url": "https://pypi.org/project/mpiFFT4py/", "platform": "", "project_url": "https://pypi.org/project/mpiFFT4py/", "project_urls": {"Homepage": "https://github.com/spectralDNS/mpiFFT4py"}, "release_url": "https://pypi.org/project/mpiFFT4py/1.1.2/", "requires_dist": null, "requires_python": "", "summary": "mpiFFT4py -- Parallel 3D FFT in Python using MPI for Python", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"mpifft4py\">\n<h2>mpiFFT4py</h2>\n<a href=\"https://travis-ci.org/spectralDNS/mpiFFT4py\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/spectralDNS/mpiFFT4py.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe0592d292e944677a4cf6f3b4db5194a54808f3/68747470733a2f2f7472617669732d63692e6f72672f737065637472616c444e532f6d70694646543470792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://circleci.com/gh/spectralDNS/mpiFFT4py/tree/master\" rel=\"nofollow\"><img alt=\"https://circleci.com/gh/spectralDNS/mpiFFT4py/tree/master.svg?style=svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca79565686b70bde3fb8df46bc11debb0ff3e742/68747470733a2f2f636972636c6563692e636f6d2f67682f737065637472616c444e532f6d70694646543470792f747265652f6d61737465722e7376673f7374796c653d737667\"></a>\n<a href=\"https://zenodo.org/badge/latestdoi/51817237\" rel=\"nofollow\"><img alt=\"https://zenodo.org/badge/51817237.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9af772bc7eb1a39f4ee3f71261736f8ac5fe435d/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f35313831373233372e737667\"></a>\n</div>\n<div id=\"description\">\n<h2>Description</h2>\n<p>mpiFFT4py performs FFTs in parallel in Python. It is developed to be able to do FFTs in parallel on a three-dimensional computational box (a structured grid), but there are also routines for doing the FFTs on a 2D mesh. It implements both the <em>slab</em> and the <em>pencil</em> decompositions.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>mpiFFT4py requires <em>numpy</em> for basic array oparations, [<em>pyfftw</em>](<a href=\"https://github.com/pyfftw/pyFFTW\" rel=\"nofollow\">https://github.com/pyfftw/pyFFTW</a>) for efficient FFTs and [<em>mpi4py</em>](<a href=\"https://bitbucket.org/mpi4py/mpi4py\" rel=\"nofollow\">https://bitbucket.org/mpi4py/mpi4py</a>) for MPI communications. However, if <em>pyfftw</em> is not found, then the slower <em>numpy.fft</em> is used instead. [<em>cython</em>](<a href=\"http://cython.org\" rel=\"nofollow\">http://cython.org</a>) is used to optimize a few routines. Install using regular python distutils:</p>\n<pre>python setup.py install --prefix=\"Path on the PYTHONPATH\"\n</pre>\n<p>To install in place do:</p>\n<pre>python setup.py build_ext --inplace\n</pre>\n<p>To install using Anaconda, you may either compile it yourselves using (from the main directory):</p>\n<pre>conda config --add channels conda-forge\nconda build conf/conda\nconda install mpiFFT4py --use-local\n</pre>\n<p>or use precompiled binaries in the[<em>conda-forge</em>](<a href=\"https://anaconda.org/conda-forge/mpifft4py\" rel=\"nofollow\">https://anaconda.org/conda-forge/mpifft4py</a>) or the [<em>spectralDNS</em>](<a href=\"https://anaconda.org/spectralDNS/mpifft4py\" rel=\"nofollow\">https://anaconda.org/spectralDNS/mpifft4py</a>) channel on Anaconda cloud:</p>\n<pre>conda install -c conda-forge mpifft4py\n</pre>\n<p>or:</p>\n<pre>conda config --add channels conda-forge\nconda install -c spectralDNS mpifft4py\n</pre>\n<p>There are binaries compiled for both OSX and linux, and several versions of Python. Note that the spectralDNS channel contains bleeding-edge versions of the Software, whereas conda-forge is more stable.</p>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>mpiFFT4py is developed by</p>\n<blockquote>\n<ul>\n<li>Mikael Mortensen</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<p>mpiFFT4py is licensed under the GNU GPL, version 3 or (at your option) any later version. mpiFFT4py is Copyright (2014-2016) by the authors.</p>\n</div>\n<div id=\"contact\">\n<h2>Contact</h2>\n<p>The latest version of this software can be obtained from</p>\n<blockquote>\n<a href=\"https://github.com/spectralDNS/mpiFFT4py\" rel=\"nofollow\">https://github.com/spectralDNS/mpiFFT4py</a></blockquote>\n<p>Please report bugs and other issues through the issue tracker at:</p>\n<blockquote>\n<a href=\"https://github.com/spectralDNS/mpiFFT4py/issues\" rel=\"nofollow\">https://github.com/spectralDNS/mpiFFT4py/issues</a></blockquote>\n</div>\n\n          </div>"}, "last_serial": 4452340, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "a19dc3b09d8794e608f0f7c08b37aa52", "sha256": "fc6593660ba30f8a267db2956a692133d203064e91f41244278981d4eeaa3ef5"}, "downloads": -1, "filename": "mpiFFT4py-1.1.0.tar.gz", "has_sig": false, "md5_digest": "a19dc3b09d8794e608f0f7c08b37aa52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24536, "upload_time": "2018-11-05T08:37:06", "upload_time_iso_8601": "2018-11-05T08:37:06.727029Z", "url": "https://files.pythonhosted.org/packages/94/0a/67b178badc7012b9e5b28640235ed999fadbf326bacd1db2a4d3c7029251/mpiFFT4py-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "c76c7c9258925fdc8e1ca76ea5874a22", "sha256": "e60349dfd5d210e876730e5999c539e790f0c6aa993eee299dbee6899b5d79b4"}, "downloads": -1, "filename": "mpiFFT4py-1.1.1.tar.gz", "has_sig": false, "md5_digest": "c76c7c9258925fdc8e1ca76ea5874a22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24507, "upload_time": "2018-11-05T09:52:07", "upload_time_iso_8601": "2018-11-05T09:52:07.804647Z", "url": "https://files.pythonhosted.org/packages/c6/77/c15d42cb172500727d1139d7a25436b6e6717865f2c646a5bf2f347c31cb/mpiFFT4py-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "182abb66ee65342e61b420fbd6a35437", "sha256": "d7a40ff1d0f2912307ce24e1be0f82103125f0b075e81e10bb23b4670a5fba87"}, "downloads": -1, "filename": "mpiFFT4py-1.1.2.tar.gz", "has_sig": false, "md5_digest": "182abb66ee65342e61b420fbd6a35437", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25218, "upload_time": "2018-11-05T10:12:14", "upload_time_iso_8601": "2018-11-05T10:12:14.934388Z", "url": "https://files.pythonhosted.org/packages/dc/91/966aba0378c7a8abcad8156b5f4e80bee5dfb03b5a0827f1b71927208b94/mpiFFT4py-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "182abb66ee65342e61b420fbd6a35437", "sha256": "d7a40ff1d0f2912307ce24e1be0f82103125f0b075e81e10bb23b4670a5fba87"}, "downloads": -1, "filename": "mpiFFT4py-1.1.2.tar.gz", "has_sig": false, "md5_digest": "182abb66ee65342e61b420fbd6a35437", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25218, "upload_time": "2018-11-05T10:12:14", "upload_time_iso_8601": "2018-11-05T10:12:14.934388Z", "url": "https://files.pythonhosted.org/packages/dc/91/966aba0378c7a8abcad8156b5f4e80bee5dfb03b5a0827f1b71927208b94/mpiFFT4py-1.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:15 2020"}