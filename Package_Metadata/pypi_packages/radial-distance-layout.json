{"info": {"author": "Benjamin F. Maier", "author_email": "bfmaier@physik.hu-berlin.de", "bugtrack_url": null, "classifiers": [], "description": "# Radial Distance Layout\r\n\r\nGenerates a radial layout for trees whose nodes are associated with a distance to the root, similar to how it has been done in [1]. You can choose the basic method or a more sophisticated version which makes a more efficient use of space.\r\n\r\n[1] *The Hidden Geometry of Complex, Network-Driven Contagion Phenomena*, D Brockmann, D Helbing, Science Vol. 342, Issue 6164, pp. 1337-1342 (2013)\r\n\r\n## Install \r\n\r\n    $ sudo python setup.py install\r\n\r\n## Example\r\n\r\n    $ python example.py\r\n\r\nor look here:\r\n\r\n```\r\n#!python\r\nfrom radial_distance_layout import radial_distance_layout\r\nimport matplotlib.pyplot as pl\r\nimport networkx as nx\r\n\r\npaths  = [ [ 'a','b','c'] ]\r\npaths += [ [ 'a','b','d'] ]\r\npaths += [ [ 'a','e','f','g'] ]\r\npaths += [ [ 'a','e','f','h'] ]\r\npaths += [ [ 'a','e','i'] ]\r\npaths += [ [ 'a','j','k'] ]\r\npaths += [ [ 'a','j','l'] ]\r\n\r\ndists = {'a': 0,\r\n         'b':1.1, 'e': 1.2, 'j': 1.4,\r\n         'c':2.1, 'd': 2.2, 'f': 2.1, 'i': 2.34, 'k':3.8, 'l':2.5,\r\n         'g': 3.9, 'h': 3.8}\r\n\r\n#The Tree has to be a DiGraph! The root is always the one with distance 0.\r\nT = nx.DiGraph()\r\n\r\nfor p in paths:\r\n    T.add_path(p)\r\n\r\nkeystr = 'dist'\r\n\r\nnx.set_node_attributes(T,keystr,dists)\r\n\r\nfig,ax = pl.subplots(1,2,figsize=(15,8))\r\n\r\npos = radial_distance_layout(T,keystr,mode='soph')\r\nnx.draw_networkx(T,pos,ax=ax[0])\r\npos = radial_distance_layout(T,keystr,mode='normal')\r\nnx.draw_networkx(T,pos,ax=ax[1])\r\npl.show()\r\n\r\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/benmaier/radial-distance-layout", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "radial-distance-layout", "package_url": "https://pypi.org/project/radial-distance-layout/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/radial-distance-layout/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/benmaier/radial-distance-layout"}, "release_url": "https://pypi.org/project/radial-distance-layout/0.1/", "requires_dist": null, "requires_python": null, "summary": "Generates a radial layout for trees whose nodes are associated with a distance to the root.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Radial Distance Layout\n<br>\n<br>Generates a radial layout for trees whose nodes are associated with a distance to the root, similar to how it has been done in [1]. You can choose the basic method or a more sophisticated version which makes a more efficient use of space.\n<br>\n<br>[1] *The Hidden Geometry of Complex, Network-Driven Contagion Phenomena*, D Brockmann, D Helbing, Science Vol. 342, Issue 6164, pp. 1337-1342 (2013)\n<br>\n<br>## Install \n<br>\n<br>    $ sudo python setup.py install\n<br>\n<br>## Example\n<br>\n<br>    $ python example.py\n<br>\n<br>or look here:\n<br>\n<br>```\n<br>#!python\n<br>from radial_distance_layout import radial_distance_layout\n<br>import matplotlib.pyplot as pl\n<br>import networkx as nx\n<br>\n<br>paths  = [ [ 'a','b','c'] ]\n<br>paths += [ [ 'a','b','d'] ]\n<br>paths += [ [ 'a','e','f','g'] ]\n<br>paths += [ [ 'a','e','f','h'] ]\n<br>paths += [ [ 'a','e','i'] ]\n<br>paths += [ [ 'a','j','k'] ]\n<br>paths += [ [ 'a','j','l'] ]\n<br>\n<br>dists = {'a': 0,\n<br>         'b':1.1, 'e': 1.2, 'j': 1.4,\n<br>         'c':2.1, 'd': 2.2, 'f': 2.1, 'i': 2.34, 'k':3.8, 'l':2.5,\n<br>         'g': 3.9, 'h': 3.8}\n<br>\n<br>#The Tree has to be a DiGraph! The root is always the one with distance 0.\n<br>T = nx.DiGraph()\n<br>\n<br>for p in paths:\n<br>    T.add_path(p)\n<br>\n<br>keystr = 'dist'\n<br>\n<br>nx.set_node_attributes(T,keystr,dists)\n<br>\n<br>fig,ax = pl.subplots(1,2,figsize=(15,8))\n<br>\n<br>pos = radial_distance_layout(T,keystr,mode='soph')\n<br>nx.draw_networkx(T,pos,ax=ax[0])\n<br>pos = radial_distance_layout(T,keystr,mode='normal')\n<br>nx.draw_networkx(T,pos,ax=ax[1])\n<br>pl.show()\n<br>\n<br>```\n          </div>"}, "last_serial": 1921978, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "07fa73eaf6d1bf779f512888c4a2dce6", "sha256": "ceeeedb7becbfb2fd154ca7902ad6478eac308783027690a029b696fe8a5e740"}, "downloads": -1, "filename": "radial-distance-layout-0.1.tar.gz", "has_sig": false, "md5_digest": "07fa73eaf6d1bf779f512888c4a2dce6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3845, "upload_time": "2016-01-14T15:54:09", "upload_time_iso_8601": "2016-01-14T15:54:09.656432Z", "url": "https://files.pythonhosted.org/packages/b3/e4/24d8ab3245b0780749b119ccf9f21f5fbb38bb37ab76a10381be2018e9ad/radial-distance-layout-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "07fa73eaf6d1bf779f512888c4a2dce6", "sha256": "ceeeedb7becbfb2fd154ca7902ad6478eac308783027690a029b696fe8a5e740"}, "downloads": -1, "filename": "radial-distance-layout-0.1.tar.gz", "has_sig": false, "md5_digest": "07fa73eaf6d1bf779f512888c4a2dce6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3845, "upload_time": "2016-01-14T15:54:09", "upload_time_iso_8601": "2016-01-14T15:54:09.656432Z", "url": "https://files.pythonhosted.org/packages/b3/e4/24d8ab3245b0780749b119ccf9f21f5fbb38bb37ab76a10381be2018e9ad/radial-distance-layout-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:02 2020"}