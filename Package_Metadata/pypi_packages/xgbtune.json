{"info": {"author": "Romain Picard", "author_email": "romain.picard@oakbits.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "==========\nXGBTune\n==========\n\n\n.. image:: https://badge.fury.io/py/xgbtune.svg\n    :target: https://badge.fury.io/py/xgbtune\n\n.. image:: https://github.com/mainro/xgbtune/workflows/Python%20package/badge.svg\n    :target: https://github.com/mainro/xgbtune/actions?query=workflow%3A%22Python+package%22\n    :alt: Github WorkFlows\n\n.. image:: https://readthedocs.org/projects/xgbtune/badge/?version=latest\n    :target: https://xgbtune.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n\nXGBTune is a library for automated XGBoost model tuning. Tuning an XGBoost\nmodel is as simple as a single function call.\n\nGet Started\n============\n\n.. code:: python\n\n    from xgbtune import tune_xgb_model\n\n    params, round_count = tune_xgb_model(params, x_train, y_train)\n\n\nInstall\n========\n\nXGBTune is available on PyPi and can be installed with pip:\n\n.. code:: console\n\n    pip install xgbtune\n\n\nTuning steps\n=============\n\nThe tuning is done in the following steps:\n\n* compute best round\n* tune max_depth and min_child_weight\n* tune gamma\n* re-compute best round\n* tune subsample and colsample_bytree\n* fine tune subsample and colsample_bytree\n* tune alpha and lambda\n* tune seed\n\nThis steps can be repeated several times. By default, two passes are done.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MainRo/xgbtune.git", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "xgbtune", "package_url": "https://pypi.org/project/xgbtune/", "platform": "any", "project_url": "https://pypi.org/project/xgbtune/", "project_urls": {"Documentation": "https://xgbtune.readthedocs.io", "Homepage": "https://github.com/MainRo/xgbtune.git"}, "release_url": "https://pypi.org/project/xgbtune/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Automated XGBoost tunning", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/xgbtune\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/xgbtune.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4e4e75199aeba7f0a990bf5672b12f8339ae6108/68747470733a2f2f62616467652e667572792e696f2f70792f78676274756e652e737667\"></a>\n<a href=\"https://github.com/mainro/xgbtune/actions?query=workflow%3A%22Python+package%22\" rel=\"nofollow\"><img alt=\"Github WorkFlows\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ceee897bcd7d8896c2262124654b7ce9cb3a0892/68747470733a2f2f6769746875622e636f6d2f6d61696e726f2f78676274756e652f776f726b666c6f77732f507974686f6e2532307061636b6167652f62616467652e737667\"></a>\n<a href=\"https://xgbtune.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/728d69035cb784c4143f3a83cf39174ab18854d0/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f78676274756e652f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p>XGBTune is a library for automated XGBoost model tuning. Tuning an XGBoost\nmodel is as simple as a single function call.</p>\n<div id=\"get-started\">\n<h2>Get Started</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">xgbtune</span> <span class=\"kn\">import</span> <span class=\"n\">tune_xgb_model</span>\n\n<span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">round_count</span> <span class=\"o\">=</span> <span class=\"n\">tune_xgb_model</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>XGBTune is available on PyPi and can be installed with pip:</p>\n<pre><span class=\"go\">pip install xgbtune</span>\n</pre>\n</div>\n<div id=\"tuning-steps\">\n<h2>Tuning steps</h2>\n<p>The tuning is done in the following steps:</p>\n<ul>\n<li>compute best round</li>\n<li>tune max_depth and min_child_weight</li>\n<li>tune gamma</li>\n<li>re-compute best round</li>\n<li>tune subsample and colsample_bytree</li>\n<li>fine tune subsample and colsample_bytree</li>\n<li>tune alpha and lambda</li>\n<li>tune seed</li>\n</ul>\n<p>This steps can be repeated several times. By default, two passes are done.</p>\n</div>\n\n          </div>"}, "last_serial": 6631759, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "645b4d161d2d0cd3fd234dc1583dcf31", "sha256": "8ce91d3605cf79c0293f9eb4e1120ef508b5dfb983c1e077a9e50ab82e236f76"}, "downloads": -1, "filename": "xgbtune-0.1.1.tar.gz", "has_sig": false, "md5_digest": "645b4d161d2d0cd3fd234dc1583dcf31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3687, "upload_time": "2020-02-08T21:43:57", "upload_time_iso_8601": "2020-02-08T21:43:57.543549Z", "url": "https://files.pythonhosted.org/packages/0d/9a/1c9b86f58a0fb506c334d320e0392e05cf5648a4a28ca4c90950665181fb/xgbtune-0.1.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "2c367cc69fe0f36e0158dd29f8a83b5d", "sha256": "c8fbb7900e30a8f1781d28e69415b45028466af1a8f2eaea6b88337832bdf6d5"}, "downloads": -1, "filename": "xgbtune-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2c367cc69fe0f36e0158dd29f8a83b5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4387, "upload_time": "2020-02-12T23:01:29", "upload_time_iso_8601": "2020-02-12T23:01:29.941064Z", "url": "https://files.pythonhosted.org/packages/a6/82/3052fb9591302c669ebc39c1195fe862731bd7ccf777e372a25825c8a167/xgbtune-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "cbba5965274d26c18758b71fa1baadce", "sha256": "fdbf3e6c28bc0bdb20aff678cc104f5830eca4f4ee130eacaf1c3fb026a78ab9"}, "downloads": -1, "filename": "xgbtune-1.0.1.tar.gz", "has_sig": false, "md5_digest": "cbba5965274d26c18758b71fa1baadce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4949, "upload_time": "2020-02-13T22:42:11", "upload_time_iso_8601": "2020-02-13T22:42:11.890609Z", "url": "https://files.pythonhosted.org/packages/70/61/52d2734f7477227a2f0af65c73be87fdd4b7f7800b1a6b69063ea7968f90/xgbtune-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "34212c591d9fea1c26ba08460e695a59", "sha256": "52fe40be57b5551c559bad48070c2628384552f275db42ccaf75d2e8ebe3a32d"}, "downloads": -1, "filename": "xgbtune-1.1.0.tar.gz", "has_sig": false, "md5_digest": "34212c591d9fea1c26ba08460e695a59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5048, "upload_time": "2020-02-14T14:48:11", "upload_time_iso_8601": "2020-02-14T14:48:11.502777Z", "url": "https://files.pythonhosted.org/packages/f2/03/96a050eaf317a460098ccc3044f47411d501f3230ec980db003b66930892/xgbtune-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "34212c591d9fea1c26ba08460e695a59", "sha256": "52fe40be57b5551c559bad48070c2628384552f275db42ccaf75d2e8ebe3a32d"}, "downloads": -1, "filename": "xgbtune-1.1.0.tar.gz", "has_sig": false, "md5_digest": "34212c591d9fea1c26ba08460e695a59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5048, "upload_time": "2020-02-14T14:48:11", "upload_time_iso_8601": "2020-02-14T14:48:11.502777Z", "url": "https://files.pythonhosted.org/packages/f2/03/96a050eaf317a460098ccc3044f47411d501f3230ec980db003b66930892/xgbtune-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:25:35 2020"}