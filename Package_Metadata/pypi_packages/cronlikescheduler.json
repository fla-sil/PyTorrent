{"info": {"author": "Daniel Bader", "author_email": "mail@dbader.org", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5"], "description": "schedule\n========\n\n\n.. image:: https://api.travis-ci.org/dbader/schedule.svg?branch=master\n        :target: https://travis-ci.org/dbader/schedule\n\n.. image:: https://coveralls.io/repos/dbader/schedule/badge.svg?branch=master\n        :target: https://coveralls.io/r/dbader/schedule\n\n.. image:: https://img.shields.io/pypi/v/schedule.svg\n        :target: https://pypi.python.org/pypi/schedule\n\nPython job scheduling for humans.\n\nAn in-process scheduler for periodic jobs that uses the builder pattern\nfor configuration. Schedule lets you run Python functions (or any other\ncallable) periodically at pre-determined intervals using a simple,\nhuman-friendly syntax.\n\nInspired by `Adam Wiggins' <https://github.com/adamwiggins>`_ article `\"Rethinking Cron\" <https://adam.herokuapp.com/past/2010/4/13/rethinking_cron/>`_ and the `clockwork <https://github.com/Rykian/clockwork>`_ Ruby module.\n\nFeatures\n--------\n- A simple to use API for scheduling jobs.\n- Very lightweight and no external dependencies.\n- Excellent test coverage.\n- Tested on Python 2.7 and 3.5\n\nUsage\n-----\n\n.. code-block:: bash\n\n    $ pip install schedule\n\n.. code-block:: python\n\n    import schedule\n    import time\n\n    def job():\n        print(\"I'm working...\")\n\n    schedule.every(10).minutes.do(job)\n    schedule.every().hour.do(job)\n    schedule.every().day.at(\"10:30\").do(job)\n    schedule.every().monday.do(job)\n    schedule.every().wednesday.at(\"13:15\").do(job)\n\n    while True:\n        schedule.run_pending()\n        time.sleep(1)\n\nDocumentation\n-------------\n\nSchedule's documentation lives at `schedule.readthedocs.io <https://schedule.readthedocs.io/>`_.\n\nPlease also check the FAQ there with common questions.\n\n\nMeta\n----\n\nDaniel Bader - `@dbader_org <https://twitter.com/dbader_org>`_ - mail@dbader.org\n\nDistributed under the MIT license. See ``LICENSE.txt`` for more information.\n\nhttps://github.com/dbader/schedule", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/lordoftheflies/cronlikescheduler/tarball/0.5.2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lordoftheflies/cronlikescheduler", "keywords": "schedule,periodic,jobs,scheduling,clockwork,cron", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "cronlikescheduler", "package_url": "https://pypi.org/project/cronlikescheduler/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cronlikescheduler/", "project_urls": {"Download": "https://github.com/lordoftheflies/cronlikescheduler/tarball/0.5.2", "Homepage": "https://github.com/lordoftheflies/cronlikescheduler"}, "release_url": "https://pypi.org/project/cronlikescheduler/0.5.2/", "requires_dist": null, "requires_python": null, "summary": "Job scheduling for humans.", "version": "0.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/dbader/schedule\" rel=\"nofollow\"><img alt=\"https://api.travis-ci.org/dbader/schedule.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5978fdac494480bac952e2f4509216f38685fc2c/68747470733a2f2f6170692e7472617669732d63692e6f72672f6462616465722f7363686564756c652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/dbader/schedule\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/dbader/schedule/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3de8aee25235694865272e7a70acb18bc531f3d1/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6462616465722f7363686564756c652f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/schedule\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/schedule.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db95d114cadef742eab275e0ae01a0736f06fd9a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7363686564756c652e737667\"></a>\n<p>Python job scheduling for humans.</p>\n<p>An in-process scheduler for periodic jobs that uses the builder pattern\nfor configuration. Schedule lets you run Python functions (or any other\ncallable) periodically at pre-determined intervals using a simple,\nhuman-friendly syntax.</p>\n<p>Inspired by <a href=\"https://github.com/adamwiggins\" rel=\"nofollow\">Adam Wiggins\u2019</a> article <a href=\"https://adam.herokuapp.com/past/2010/4/13/rethinking_cron/\" rel=\"nofollow\">\u201cRethinking Cron\u201d</a> and the <a href=\"https://github.com/Rykian/clockwork\" rel=\"nofollow\">clockwork</a> Ruby module.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>A simple to use API for scheduling jobs.</li>\n<li>Very lightweight and no external dependencies.</li>\n<li>Excellent test coverage.</li>\n<li>Tested on Python 2.7 and 3.5</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>$ pip install schedule\n</pre>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">schedule</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">job</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"I'm working...\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">every</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">minutes</span><span class=\"o\">.</span><span class=\"n\">do</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">)</span>\n<span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">every</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">hour</span><span class=\"o\">.</span><span class=\"n\">do</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">)</span>\n<span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">every</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">day</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">(</span><span class=\"s2\">\"10:30\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">do</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">)</span>\n<span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">every</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">monday</span><span class=\"o\">.</span><span class=\"n\">do</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">)</span>\n<span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">every</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">wednesday</span><span class=\"o\">.</span><span class=\"n\">at</span><span class=\"p\">(</span><span class=\"s2\">\"13:15\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">do</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">run_pending</span><span class=\"p\">()</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Schedule\u2019s documentation lives at <a href=\"https://schedule.readthedocs.io/\" rel=\"nofollow\">schedule.readthedocs.io</a>.</p>\n<p>Please also check the FAQ there with common questions.</p>\n</div>\n<div id=\"meta\">\n<h2>Meta</h2>\n<p>Daniel Bader - <a href=\"https://twitter.com/dbader_org\" rel=\"nofollow\">@dbader_org</a> - <a href=\"mailto:mail%40dbader.org\">mail<span>@</span>dbader<span>.</span>org</a></p>\n<p>Distributed under the MIT license. See <tt>LICENSE.txt</tt> for more information.</p>\n<p><a href=\"https://github.com/dbader/schedule\" rel=\"nofollow\">https://github.com/dbader/schedule</a></p>\n</div>\n\n          </div>"}, "last_serial": 2713970, "releases": {"0.5.2": [{"comment_text": "", "digests": {"md5": "34cadc5286689beba8a1b0166d294c8f", "sha256": "fd22887cd4f942cd852927667d46942e14025b84dc776cbdfbf73fc064c4931e"}, "downloads": -1, "filename": "cronlikescheduler-0.5.2.tar.gz", "has_sig": false, "md5_digest": "34cadc5286689beba8a1b0166d294c8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10825, "upload_time": "2017-03-17T22:52:53", "upload_time_iso_8601": "2017-03-17T22:52:53.936280Z", "url": "https://files.pythonhosted.org/packages/c7/92/2bb280a6c2f381e7e319a74db71b3c6dd6e1fb660bb3dca69c1a483e7e88/cronlikescheduler-0.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "34cadc5286689beba8a1b0166d294c8f", "sha256": "fd22887cd4f942cd852927667d46942e14025b84dc776cbdfbf73fc064c4931e"}, "downloads": -1, "filename": "cronlikescheduler-0.5.2.tar.gz", "has_sig": false, "md5_digest": "34cadc5286689beba8a1b0166d294c8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10825, "upload_time": "2017-03-17T22:52:53", "upload_time_iso_8601": "2017-03-17T22:52:53.936280Z", "url": "https://files.pythonhosted.org/packages/c7/92/2bb280a6c2f381e7e319a74db71b3c6dd6e1fb660bb3dca69c1a483e7e88/cronlikescheduler-0.5.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:14 2020"}