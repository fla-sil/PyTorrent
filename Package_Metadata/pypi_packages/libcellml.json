{"info": {"author": "Team CellML", "author_email": "cellml-tools-developers@lists.cellml.org", "bugtrack_url": null, "classifiers": [], "description": "libCellML\n=========\n\nlibCellML aims to become an easy to use library that will be useful to developers of CellML applications.\n\nThe prime libCellML repository is located at: https://github.com/cellml/libcellml.\n\nThe documentation for the libCellML project is available at: http://libcellml.readthedocs.io/.\n\nScope\n-----\n\nThe purpose of libCellML is to create, manipulate, serialise, deserialise, validate and instantiate\nCellML models. In the first instance, all serialising and deserialising will be to and from standard\nstrings and using the CellML XML format.\n\nThe library is intended to be lightweight and focused purely in dealing with CellML models. In achieving this,\nsome of the convenience methods/objects that we might expect will not be part of libCellML.\nFor example, in our current thoughts, libCellML would not be concerned with the actual mechanics of\nresolving and retrieving external resources - calling applications would be required to resolve and\nretrieve import URLs and provide the serialised documents to libCellML in the form of strings for\ninstantiation as part of the CellML hierarchical model description.\n\nExample code will be provided which demonstrates how such tasks can be achieved using standard tools,\ni.e., libcurl for C/C++ and requests for Python to resolve and retrieve imported models.\n\nContinuous Integration\n----------------------\n\nlibCellML makes use of Buildbot for continuous integration testing, all code is run through the\ntest suite when a pull request is created or added to.  More information on how Buildbot is\nintegrated in to the development process is available from the documentation http://libcellml.readthedocs.io/.\n\nContribute\n----------\n\nlibCellML is an open-source project, thus, welcoming contributions.\nIf you are interested you may (in short):\n\n* Fork libCellML on GitHub (https://github.com/cellml/libcellml) and submit a pull request with your modifications.\n  For more information on contributing code see the documentation http://libcellml.readthedocs.io/\n* Subscribe to the libCellML mailing list https://lists.cellml.org/sympa/info/cellml-tools-developers\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://cellml.org/", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "libcellml", "package_url": "https://pypi.org/project/libcellml/", "platform": "", "project_url": "https://pypi.org/project/libcellml/", "project_urls": {"Homepage": "https://cellml.org/"}, "release_url": "https://pypi.org/project/libcellml/0.0.0.dev1/", "requires_dist": null, "requires_python": "", "summary": "Python bindings for libCellML", "version": "0.0.0.dev1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>libCellML aims to become an easy to use library that will be useful to developers of CellML applications.</p>\n<p>The prime libCellML repository is located at: <a href=\"https://github.com/cellml/libcellml\" rel=\"nofollow\">https://github.com/cellml/libcellml</a>.</p>\n<p>The documentation for the libCellML project is available at: <a href=\"http://libcellml.readthedocs.io/\" rel=\"nofollow\">http://libcellml.readthedocs.io/</a>.</p>\n<div id=\"scope\">\n<h2>Scope</h2>\n<p>The purpose of libCellML is to create, manipulate, serialise, deserialise, validate and instantiate\nCellML models. In the first instance, all serialising and deserialising will be to and from standard\nstrings and using the CellML XML format.</p>\n<p>The library is intended to be lightweight and focused purely in dealing with CellML models. In achieving this,\nsome of the convenience methods/objects that we might expect will not be part of libCellML.\nFor example, in our current thoughts, libCellML would not be concerned with the actual mechanics of\nresolving and retrieving external resources - calling applications would be required to resolve and\nretrieve import URLs and provide the serialised documents to libCellML in the form of strings for\ninstantiation as part of the CellML hierarchical model description.</p>\n<p>Example code will be provided which demonstrates how such tasks can be achieved using standard tools,\ni.e., libcurl for C/C++ and requests for Python to resolve and retrieve imported models.</p>\n</div>\n<div id=\"continuous-integration\">\n<h2>Continuous Integration</h2>\n<p>libCellML makes use of Buildbot for continuous integration testing, all code is run through the\ntest suite when a pull request is created or added to.  More information on how Buildbot is\nintegrated in to the development process is available from the documentation <a href=\"http://libcellml.readthedocs.io/\" rel=\"nofollow\">http://libcellml.readthedocs.io/</a>.</p>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>libCellML is an open-source project, thus, welcoming contributions.\nIf you are interested you may (in short):</p>\n<ul>\n<li>Fork libCellML on GitHub (<a href=\"https://github.com/cellml/libcellml\" rel=\"nofollow\">https://github.com/cellml/libcellml</a>) and submit a pull request with your modifications.\nFor more information on contributing code see the documentation <a href=\"http://libcellml.readthedocs.io/\" rel=\"nofollow\">http://libcellml.readthedocs.io/</a></li>\n<li>Subscribe to the libCellML mailing list <a href=\"https://lists.cellml.org/sympa/info/cellml-tools-developers\" rel=\"nofollow\">https://lists.cellml.org/sympa/info/cellml-tools-developers</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3167560, "releases": {"0.0.0.dev1": []}, "urls": [], "timestamp": "Fri May  8 00:46:40 2020"}