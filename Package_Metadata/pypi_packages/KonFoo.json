{"info": {"author": "Jochen Gerhaeusser", "author_email": "jochen_privat@gmx.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Software Development", "Topic :: Software Development :: Embedded Systems", "Topic :: Software Development :: Testing"], "description": "\n.. |Doc Status| image:: https://readthedocs.org/projects/konfoo/badge/?version=latest\n    :target: http://konfoo.readthedocs.io/en/latest/?badge=latest\n.. |Build Status| image:: https://travis-ci.org/JoeVirtual/KonFoo.svg?branch=master\n    :target: https://travis-ci.org/JoeVirtual/KonFoo\n.. |PyPI| image:: https://img.shields.io/pypi/v/KonFoo.svg\n    :target: https://pypi.org/project/KonFoo\n.. |License| image:: https://img.shields.io/pypi/l/KonFoo.svg\n    :target: https://pypi.org/project/KonFoo\n.. |Python| image:: https://img.shields.io/pypi/pyversions/KonFoo.svg\n    :target: https://pypi.org/project/KonFoo\n.. |Status| image:: https://img.shields.io/pypi/status/KonFoo.svg\n    :target: https://pypi.org/project/KonFoo\n.. |Binder| image:: https://mybinder.org/badge.svg\n    :target: https://mybinder.org/v2/gh/JoeVirtual/KonFoo/master?filepath=notebooks\n\nKonF'00'\n========\n\n|Doc Status| |Build Status| |PyPI| |License| |Python| |Status| |Binder|\n\nKonFoo is a Python Package for creating byte stream mappers in a declarative\nway with as little code as necessary to help fighting the confusion with the\nfoo of the all too well-known memory dumps or hexadecimal views of binary\ndata.\n\nIt comes with sensible defaults out of the box.\n\nIt aims to make the process of reading, de-serializing, viewing, serializing\nand writing binary data from and back to a data provider as easy as possible.\n\nKonFoo in points:\n\n- declarative way to describe the mapping of binary data to Python types\n- declarative classes to read, deserialize, serialize and write binary data\n  from and back to a data source\n- easy adjustable byte stream provider bridge to any kind of data source\n- nesting of classes\n- adaptable classes on the fly while reading/de-serializing binary data\n- easy syntax for accessing nested fields\n- view the mapped binary data as a JSON string\n- list the mapped binary data as a flatten list or dictionary\n- write the mapped binary data to a ``.csv`` file\n- save the mapped binary data to an ``.ini`` file\n- load the mapped binary data from an ``.ini`` file\n- easy creatable nested metadata dictionaries of the members of a byte stream mapper\n- metadata converter to the ``flare.json`` format to visualise the mapper with\n  `d3.js <https://d3js.org>`_.\n\n\nExample\n-------\n\nA short example how to define a byte stream mapper.\n\n>>> from konfoo import *\n\n>>> class Identifier(Structure):\n...     def __init__(self):\n...         super().__init__()\n...         self.version = Byte(align_to=4)\n...         self.id = Unsigned(8, align_to=4)\n...         self.length = Decimal(8, align_to=4)\n...         self.module = Char(align_to=4)\n...         self.index_fields()\n>>> class HeaderV1(Structure)\n...     def __init__(self):\n...         super().__init__()\n...         self.type = Identifier()\n>>> class HeaderV2(HeaderV1)\n...     def __init__(self):\n...         super().__init__()\n...         self.size = Decimal(16)\n>>> header = HeaderV2()\n>>> header.to_list()\n[('Structure.type.version', '0x0'),\n ('Structure.type.id', '0x0'),\n ('Structure.type.length', 0),\n ('Structure.type.module', '\\x00'),\n ('Structure.size', 0)]\n>>> header.type.to_csv()\n[{'id': 'Identifier.version', 'value': '0x0'},\n {'id': 'Identifier.id', 'value': '0x0'},\n {'id': 'Identifier.length', 'value': 0},\n {'id': 'Identifier.module', 'value': '\\x00'}]\n>>> header.to_json()\n'{\"type\": {\"version\": \"0x0\", \"id\": \"0x0\", \"length\": 0, \"module\": \"\\u0000\"},\n  \"size\": 0}'\n>>> header.deserialize(bytes.fromhex('0102094610'))\n>>> header.to_json()\n'{\"type\": {\"version\": \"0x1\", \"id\": \"0x2\", \"length\": 9, \"module\": \"F\"},\n  \"size\": 16}'\n>>> bytes(header).hex()\n'0102094610'\n\n>>> header = Structure(\n...     type=Structure(version=Byte(4),\n...                    id=Unsigned(8, 4),\n...                    length=Decimal(8, 4),\n...                    module=Char(4)),\n...     size=Decimal(16))\n>>> header.to_list()\n[('Structure.type.version', '0x0'),\n ('Structure.type.id', '0x0'),\n ('Structure.type.length', 0),\n ('Structure.type.module', '\\x00'),\n ('Structure.size', 0)]\n>>> header.type.to_csv()\n[{'id': 'Structure.version', 'value': '0x0'},\n {'id': 'Structure.id', 'value': '0x0'},\n {'id': 'Structure.length', 'value': 0},\n {'id': 'Structure.module', 'value': '\\x00'}]\n>>> header.to_json()\n'{\"type\": {\"version\": \"0x0\", \"id\": \"0x0\", \"length\": 0, \"module\": \"\\u0000\"},\n  \"size\": 0}'\n>>> header.deserialize(bytes.fromhex('0102094610'))\n>>> header.to_json()\n'{\"type\": {\"version\": \"0x1\", \"id\": \"0x2\", \"length\": 9, \"module\": \"F\"},\n  \"size\": 16}'\n>>> bytes(header).hex()\n'0102094610'\n\n\nInstalling\n----------\n\n.. code-block:: bash\n\n    > pip install konfoo\n\nLinks\n-----\n\n* `Code <http://github.com/JoeVirtual/KonFoo/>`_\n* `Documentation <http://konfoo.readthedocs.io>`_\n* `Development version\n  <http://github.com/JoeVirtual/KonFoo/zipball/master#egg=konfoo-dev>`_\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "http://github.com/JoeVirtual/KonFoo/zipball/master#egg=konfoo-dev", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/JoeVirtual/KonFoo", "keywords": "binary data deserialize serialize parse decode encode unpack pack", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "KonFoo", "package_url": "https://pypi.org/project/KonFoo/", "platform": "any", "project_url": "https://pypi.org/project/KonFoo/", "project_urls": {"Download": "http://github.com/JoeVirtual/KonFoo/zipball/master#egg=konfoo-dev", "Homepage": "http://github.com/JoeVirtual/KonFoo"}, "release_url": "https://pypi.org/project/KonFoo/1.1/", "requires_dist": null, "requires_python": ">=3.5", "summary": "A declarative byte stream mapping engine.", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"http://konfoo.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Doc Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e467076b105716262538f53abbe560f44d276708/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6b6f6e666f6f2f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://travis-ci.org/JoeVirtual/KonFoo\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1dc52cab473a22be3831c05a427f2980237f8e3c/68747470733a2f2f7472617669732d63692e6f72672f4a6f655669727475616c2f4b6f6e466f6f2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.org/project/KonFoo\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b8489c70b9448042f7d58bb5f2bbc132d2f45759/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f4b6f6e466f6f2e737667\"></a> <a href=\"https://pypi.org/project/KonFoo\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bcfb4555de8f41873c836c1192940886aa0b6a30/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f4b6f6e466f6f2e737667\"></a> <a href=\"https://pypi.org/project/KonFoo\" rel=\"nofollow\"><img alt=\"Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3339dfda1aa1fba35ca8b6438f960a3f1b52652d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f4b6f6e466f6f2e737667\"></a> <a href=\"https://pypi.org/project/KonFoo\" rel=\"nofollow\"><img alt=\"Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68bd36e507e3e5f07692613d825547f15fc222a2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f4b6f6e466f6f2e737667\"></a> <a href=\"https://mybinder.org/v2/gh/JoeVirtual/KonFoo/master?filepath=notebooks\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86eb116bc9e98bea90d9454762d384d9cae5055c/68747470733a2f2f6d7962696e6465722e6f72672f62616467652e737667\"></a></p>\n<p>KonFoo is a Python Package for creating byte stream mappers in a declarative\nway with as little code as necessary to help fighting the confusion with the\nfoo of the all too well-known memory dumps or hexadecimal views of binary\ndata.</p>\n<p>It comes with sensible defaults out of the box.</p>\n<p>It aims to make the process of reading, de-serializing, viewing, serializing\nand writing binary data from and back to a data provider as easy as possible.</p>\n<p>KonFoo in points:</p>\n<ul>\n<li>declarative way to describe the mapping of binary data to Python types</li>\n<li>declarative classes to read, deserialize, serialize and write binary data\nfrom and back to a data source</li>\n<li>easy adjustable byte stream provider bridge to any kind of data source</li>\n<li>nesting of classes</li>\n<li>adaptable classes on the fly while reading/de-serializing binary data</li>\n<li>easy syntax for accessing nested fields</li>\n<li>view the mapped binary data as a JSON string</li>\n<li>list the mapped binary data as a flatten list or dictionary</li>\n<li>write the mapped binary data to a <tt>.csv</tt> file</li>\n<li>save the mapped binary data to an <tt>.ini</tt> file</li>\n<li>load the mapped binary data from an <tt>.ini</tt> file</li>\n<li>easy creatable nested metadata dictionaries of the members of a byte stream mapper</li>\n<li>metadata converter to the <tt>flare.json</tt> format to visualise the mapper with\n<a href=\"https://d3js.org\" rel=\"nofollow\">d3.js</a>.</li>\n</ul>\n<div id=\"example\">\n<h2>Example</h2>\n<p>A short example how to define a byte stream mapper.</p>\n<pre>&gt;&gt;&gt; from konfoo import *\n</pre>\n<pre>&gt;&gt;&gt; class Identifier(Structure):\n...     def __init__(self):\n...         super().__init__()\n...         self.version = Byte(align_to=4)\n...         self.id = Unsigned(8, align_to=4)\n...         self.length = Decimal(8, align_to=4)\n...         self.module = Char(align_to=4)\n...         self.index_fields()\n&gt;&gt;&gt; class HeaderV1(Structure)\n...     def __init__(self):\n...         super().__init__()\n...         self.type = Identifier()\n&gt;&gt;&gt; class HeaderV2(HeaderV1)\n...     def __init__(self):\n...         super().__init__()\n...         self.size = Decimal(16)\n&gt;&gt;&gt; header = HeaderV2()\n&gt;&gt;&gt; header.to_list()\n[('Structure.type.version', '0x0'),\n ('Structure.type.id', '0x0'),\n ('Structure.type.length', 0),\n ('Structure.type.module', '\\x00'),\n ('Structure.size', 0)]\n&gt;&gt;&gt; header.type.to_csv()\n[{'id': 'Identifier.version', 'value': '0x0'},\n {'id': 'Identifier.id', 'value': '0x0'},\n {'id': 'Identifier.length', 'value': 0},\n {'id': 'Identifier.module', 'value': '\\x00'}]\n&gt;&gt;&gt; header.to_json()\n'{\"type\": {\"version\": \"0x0\", \"id\": \"0x0\", \"length\": 0, \"module\": \"\\u0000\"},\n  \"size\": 0}'\n&gt;&gt;&gt; header.deserialize(bytes.fromhex('0102094610'))\n&gt;&gt;&gt; header.to_json()\n'{\"type\": {\"version\": \"0x1\", \"id\": \"0x2\", \"length\": 9, \"module\": \"F\"},\n  \"size\": 16}'\n&gt;&gt;&gt; bytes(header).hex()\n'0102094610'\n</pre>\n<pre>&gt;&gt;&gt; header = Structure(\n...     type=Structure(version=Byte(4),\n...                    id=Unsigned(8, 4),\n...                    length=Decimal(8, 4),\n...                    module=Char(4)),\n...     size=Decimal(16))\n&gt;&gt;&gt; header.to_list()\n[('Structure.type.version', '0x0'),\n ('Structure.type.id', '0x0'),\n ('Structure.type.length', 0),\n ('Structure.type.module', '\\x00'),\n ('Structure.size', 0)]\n&gt;&gt;&gt; header.type.to_csv()\n[{'id': 'Structure.version', 'value': '0x0'},\n {'id': 'Structure.id', 'value': '0x0'},\n {'id': 'Structure.length', 'value': 0},\n {'id': 'Structure.module', 'value': '\\x00'}]\n&gt;&gt;&gt; header.to_json()\n'{\"type\": {\"version\": \"0x0\", \"id\": \"0x0\", \"length\": 0, \"module\": \"\\u0000\"},\n  \"size\": 0}'\n&gt;&gt;&gt; header.deserialize(bytes.fromhex('0102094610'))\n&gt;&gt;&gt; header.to_json()\n'{\"type\": {\"version\": \"0x1\", \"id\": \"0x2\", \"length\": 9, \"module\": \"F\"},\n  \"size\": 16}'\n&gt;&gt;&gt; bytes(header).hex()\n'0102094610'\n</pre>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<pre>&gt; pip install konfoo\n</pre>\n</div>\n<div id=\"links\">\n<h2>Links</h2>\n<ul>\n<li><a href=\"http://github.com/JoeVirtual/KonFoo/\" rel=\"nofollow\">Code</a></li>\n<li><a href=\"http://konfoo.readthedocs.io\" rel=\"nofollow\">Documentation</a></li>\n<li><a href=\"http://github.com/JoeVirtual/KonFoo/zipball/master#egg=konfoo-dev\" rel=\"nofollow\">Development version</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6035939, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "c386abeb85aebec949fa47b711349fe8", "sha256": "2b94666936c82aecd1c86bd9286099faf0bcbdfbd3982e5599e8d4c97de177eb"}, "downloads": -1, "filename": "KonFoo-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c386abeb85aebec949fa47b711349fe8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 51133, "upload_time": "2019-01-02T07:11:38", "upload_time_iso_8601": "2019-01-02T07:11:38.950573Z", "url": "https://files.pythonhosted.org/packages/2e/5e/046f739205bb1402a9665cff9efd63945f3e349435087653e18f02ebfc32/KonFoo-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1ad16d4ead9841abc3aa1db871911e0", "sha256": "2082e5c66801c0348d06b77af8415b2b80fbd97971f5dceab5a00556df499b4e"}, "downloads": -1, "filename": "KonFoo-1.0.tar.gz", "has_sig": false, "md5_digest": "a1ad16d4ead9841abc3aa1db871911e0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 91525, "upload_time": "2019-01-02T07:11:41", "upload_time_iso_8601": "2019-01-02T07:11:41.067852Z", "url": "https://files.pythonhosted.org/packages/f7/7e/6e0189a2f3943a16714e06c5d589441cc4dcf662de3854015d374734458d/KonFoo-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "3bca8775a8cb23112475b10a0278837d", "sha256": "6731aa8dfeed2e5fd5b24668fa6067fb7e0b3c937b5621764db8a0e6f7ce8eb5"}, "downloads": -1, "filename": "KonFoo-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3bca8775a8cb23112475b10a0278837d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 51797, "upload_time": "2019-10-27T06:18:46", "upload_time_iso_8601": "2019-10-27T06:18:46.698521Z", "url": "https://files.pythonhosted.org/packages/e6/07/34e0c9db2a069ce77e98947cb450736f5da513955079a8a807eb6a4086a3/KonFoo-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc8ac460bfdf99078227a0939abef9d9", "sha256": "665fca3d96234fd5b0136f71597b4ad6cf3af6465610669401da3a2e5db467bf"}, "downloads": -1, "filename": "KonFoo-1.1.tar.gz", "has_sig": false, "md5_digest": "fc8ac460bfdf99078227a0939abef9d9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 92574, "upload_time": "2019-10-27T06:18:48", "upload_time_iso_8601": "2019-10-27T06:18:48.700855Z", "url": "https://files.pythonhosted.org/packages/74/ae/b232a83c0a8aba8f0188d7ce34de55189697c1c381e799cc8cc0a77fcc66/KonFoo-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3bca8775a8cb23112475b10a0278837d", "sha256": "6731aa8dfeed2e5fd5b24668fa6067fb7e0b3c937b5621764db8a0e6f7ce8eb5"}, "downloads": -1, "filename": "KonFoo-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3bca8775a8cb23112475b10a0278837d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 51797, "upload_time": "2019-10-27T06:18:46", "upload_time_iso_8601": "2019-10-27T06:18:46.698521Z", "url": "https://files.pythonhosted.org/packages/e6/07/34e0c9db2a069ce77e98947cb450736f5da513955079a8a807eb6a4086a3/KonFoo-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc8ac460bfdf99078227a0939abef9d9", "sha256": "665fca3d96234fd5b0136f71597b4ad6cf3af6465610669401da3a2e5db467bf"}, "downloads": -1, "filename": "KonFoo-1.1.tar.gz", "has_sig": false, "md5_digest": "fc8ac460bfdf99078227a0939abef9d9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 92574, "upload_time": "2019-10-27T06:18:48", "upload_time_iso_8601": "2019-10-27T06:18:48.700855Z", "url": "https://files.pythonhosted.org/packages/74/ae/b232a83c0a8aba8f0188d7ce34de55189697c1c381e799cc8cc0a77fcc66/KonFoo-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:01 2020"}