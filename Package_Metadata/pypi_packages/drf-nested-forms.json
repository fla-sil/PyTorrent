{"info": {"author": "Duke Effiom", "author_email": "effiomduke@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP"], "description": "# DRF NESTED FORMS\n\nA library that parses nested json or form data to python object.\n\n[![Build Status](https://travis-ci.com/emperorDuke/nested_formdata.svg?branch=master)](https://travis-ci.com/emperorDuke/nested_formdata)\n[![GitHub release (latest by date)](https://img.shields.io/github/v/release/emperorDuke/nested_formdata)](https://github.com/emperorDuke/nested_formdata/releases)\n[![PyPI - License](https://img.shields.io/pypi/l/drf_nested_forms)](https://pypi.python.org/pypi/drf-nested-forms)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/drf_nested_forms)](https://pypi.python.org/pypi/drf-nested-forms)\n[![PyPI](https://img.shields.io/pypi/v/drf_nested_forms)](https://pypi.python.org/pypi/drf-nested-forms)\n\n# Overview\n\nSPA's, sometimes send nested form data or json as requests encoded by some javascript libraries like [json-form-data](https://github.com/hyperatom/json-form-data#readme) which can be difficult to handle due to the key naming conventions. This library helps to eliminate that difficulty, by parsing that nested requests into a more predictable python object that can be used by libraries like [drf_writable_nested](https://github.com/beda-software/drf-writable-nested#readme) or used directly in the code.\n\n# Installation\nIt is available via pypi:\n\n```\npip install drf_nested_forms\n```\n\n# Usage\n\nThe utiliy class can be used directly in any part of the code.\n\n```python\n\nfrom drf_nested_forms.utils import NestedForms\n\ndata = {\n    'item[attribute][0][user_type]': 'size',\n    'item[attribute][1][user_type]': '',\n    'item[verbose][]': '',\n    'item[variant][vendor_metric]': '[]',\n    'item[variant][metric_verbose_name]': 'Large',\n    'item[foo][baaz]': 'null',\n}\n\noptions = {\n    'allow_blank': True,\n    'allow_empty': False\n}\n```\n\n## Note\n\n`.is_nested()` should be called before accessing the `.data`\n\n```python\nform = NestedForms(data, **options)\nform.is_nested(raise_exception=True)\n```\n\nThe parsed result will look like below:\n\n```python\nprint(form.data)\n\ndata = {\n    'item': {\n        'attribute': [\n            {'user_type': 'size'},\n            {'user_type': ''}\n        ],\n        'verbose': [''],\n        'variant': {\n            'vendor_metric': None,\n            'metric_verbose_name': 'Large'\n        },\n        'foo': { 'baaz': None }\n    }\n}\n```\n\n# DRF Integration\n\nThe parser is used with a djangorestframework view classes.\n\n## Parser classes supported:\n\n- `NestedMultiPartParser`: is a default DRF multipart parser that suppport parsing nested form data.\n- `NestedJSONParser`: is a default DRF JSONParser that support parsing nested json request.\n\nAdd the parser to your django settings file\n\n```python\n\n#...\n\nREST_FRAMEWORK = {\n    DEFAULT_PARSER_CLASSES = [\n        # nested parser are just default DRF parsers with extended\n        # functionalities to support nested\n\n        'drf_nested_forms.parsers.NestedMultiPartParser,\n        'drf_nested_forms.parsers.NestedJSONPartParser,\n        'rest_framework.parsers.FormParser',\n\n        # so this settings will work in respective of a nested request\n        # or not\n    ]\n}\n\n#...\n\n```\n\nTo change default settings of the parsers, add `OPTIONS` to `NESTED_FORM_PARSER` with the new settings to your django settings file\n\n```python\n#..\n\nNESTED_FORM_PARSER = {\n    'OPTIONS': {\n        'allow_empty': False,\n        'allow_blank': True\n    }\n}\n\n#...\n\n```\n\nThe parsers can also be used directly in a `rest_framework` view class\n\n```python\n\nfrom rest_framework.views import APIView\nfrom rest_framework.parsers import FormParser\nfrom rest_framework.response import Response\n\nfrom drf_nested_forms.parsers import NestedMultiPartParser, NestedJSONParser\n\nclass TestMultiPartParserView(APIView):\n    parser_classes = (NestedMultiPartParser, FormParser)\n\n    def post(self, request):\n        return Response(data=request.data, status=200)\n\n# or\n\nclass TestJSONParserView(APIView):\n    parser_classes = (NestedJSONParser, FormParser)\n\n    def post(self, request):\n        return Response(data=request.data, status=200)\n\n```\n\nFor example, a form or JSON data with nested params like below can be posted to any of the above drf view:\n\n```python\ndata = {\n    '[0][attribute]': 'true',\n    '[0][verbose][0]': 'bazz',\n    '[0][verbose][1]': 'foo',\n    '[0][variant][vendor_metric]': 'null',\n    '[0][variant][metric_verbose_name]': 'Large',\n    '[0][foo][baaz]': 'false',\n    '[1][attribute]': 'size',\n    '[1][verbose]': '[]',\n    '[1][variant][vendor_metric]': '{}',\n    '[1][variant][metric_verbose_name][foo][baaz][]': 'Large',\n    '[1][foo][baaz]': '',\n    '[1][logo]': '235'\n}\n```\n\nafter being parsed, the `request.data` will look like this:\n\n```python\nprint(request.data)\n\ndata = [\n    {\n        'attribute': True,\n        'verbose': ['bazz', 'foo'],\n        'variant': {\n            'vendor_metric': None,\n            'metric_verbose_name': 'Large'\n        },\n        'foo': { 'baaz': False }\n    },\n    {\n        'attribute': 'size',\n        'verbose': None,\n        'variant': {\n            'vendor_metric': None,\n            'metric_verbose_name': { 'foo': { 'baaz': ['Large'] } }\n        },\n        'foo': { 'baaz': '' },\n        'logo': 235\n    }\n]\n```\n\n# Options\n\n| Option      | Default | Description                           |\n| ----------- | ------- | ------------------------------------- |\n| allow_blank | `True`  | shows empty string `''` in the object |\n| allow_empty | `False` | shows empty `list` or `dict` object   |\n\n# Running Tests\n\nTo run the current test suite, execute the following from the root of the project:\n\n```\npython runtests.py\n```\n\n# Author\n\n@Copyright 2020, Duke Effiom\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "http://github.com/emperorDuke/nested_formdata/archive/v0.2.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/emperorDuke/nested_formdata", "keywords": "drf,nested form,html_formsdrf_nested_forms,restframework,nested json", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "drf-nested-forms", "package_url": "https://pypi.org/project/drf-nested-forms/", "platform": "", "project_url": "https://pypi.org/project/drf-nested-forms/", "project_urls": {"Download": "http://github.com/emperorDuke/nested_formdata/archive/v0.2.1.tar.gz", "Homepage": "http://github.com/emperorDuke/nested_formdata"}, "release_url": "https://pypi.org/project/drf-nested-forms/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "A library that parses nested json or form data to python object", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DRF NESTED FORMS</h1>\n<p>A library that parses nested json or form data to python object.</p>\n<p><a href=\"https://travis-ci.com/emperorDuke/nested_formdata\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/28c00dd3b975c5c070ed14d89a1b20d1486367e8/68747470733a2f2f7472617669732d63692e636f6d2f656d7065726f7244756b652f6e65737465645f666f726d646174612e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/emperorDuke/nested_formdata/releases\" rel=\"nofollow\"><img alt=\"GitHub release (latest by date)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b3b56a5c724dcc698c6ef5c4ece8df9dbc66df1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f656d7065726f7244756b652f6e65737465645f666f726d64617461\"></a>\n<a href=\"https://pypi.python.org/pypi/drf-nested-forms\" rel=\"nofollow\"><img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd162d9214d155fbdc51df6c15cfeb02f336d2ea/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6472665f6e65737465645f666f726d73\"></a>\n<a href=\"https://pypi.python.org/pypi/drf-nested-forms\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fedc87a5a84ffddb9bf781b743075f2d14b1292f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6472665f6e65737465645f666f726d73\"></a>\n<a href=\"https://pypi.python.org/pypi/drf-nested-forms\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7d9302aedd31794ababffd9576f5c7b36f3f7a61/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6472665f6e65737465645f666f726d73\"></a></p>\n<h1>Overview</h1>\n<p>SPA's, sometimes send nested form data or json as requests encoded by some javascript libraries like <a href=\"https://github.com/hyperatom/json-form-data#readme\" rel=\"nofollow\">json-form-data</a> which can be difficult to handle due to the key naming conventions. This library helps to eliminate that difficulty, by parsing that nested requests into a more predictable python object that can be used by libraries like <a href=\"https://github.com/beda-software/drf-writable-nested#readme\" rel=\"nofollow\">drf_writable_nested</a> or used directly in the code.</p>\n<h1>Installation</h1>\n<p>It is available via pypi:</p>\n<pre><code>pip install drf_nested_forms\n</code></pre>\n<h1>Usage</h1>\n<p>The utiliy class can be used directly in any part of the code.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">drf_nested_forms.utils</span> <span class=\"kn\">import</span> <span class=\"n\">NestedForms</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'item[attribute][0][user_type]'</span><span class=\"p\">:</span> <span class=\"s1\">'size'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'item[attribute][1][user_type]'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"s1\">'item[verbose][]'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"s1\">'item[variant][vendor_metric]'</span><span class=\"p\">:</span> <span class=\"s1\">'[]'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'item[variant][metric_verbose_name]'</span><span class=\"p\">:</span> <span class=\"s1\">'Large'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'item[foo][baaz]'</span><span class=\"p\">:</span> <span class=\"s1\">'null'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'allow_blank'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s1\">'allow_empty'</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Note</h2>\n<p><code>.is_nested()</code> should be called before accessing the <code>.data</code></p>\n<pre><span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">NestedForms</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">options</span><span class=\"p\">)</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">is_nested</span><span class=\"p\">(</span><span class=\"n\">raise_exception</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>The parsed result will look like below:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'item'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'attribute'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span><span class=\"s1\">'user_type'</span><span class=\"p\">:</span> <span class=\"s1\">'size'</span><span class=\"p\">},</span>\n            <span class=\"p\">{</span><span class=\"s1\">'user_type'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">}</span>\n        <span class=\"p\">],</span>\n        <span class=\"s1\">'verbose'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">''</span><span class=\"p\">],</span>\n        <span class=\"s1\">'variant'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'vendor_metric'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n            <span class=\"s1\">'metric_verbose_name'</span><span class=\"p\">:</span> <span class=\"s1\">'Large'</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'foo'</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"s1\">'baaz'</span><span class=\"p\">:</span> <span class=\"kc\">None</span> <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h1>DRF Integration</h1>\n<p>The parser is used with a djangorestframework view classes.</p>\n<h2>Parser classes supported:</h2>\n<ul>\n<li><code>NestedMultiPartParser</code>: is a default DRF multipart parser that suppport parsing nested form data.</li>\n<li><code>NestedJSONParser</code>: is a default DRF JSONParser that support parsing nested json request.</li>\n</ul>\n<p>Add the parser to your django settings file</p>\n<pre><span class=\"c1\">#...</span>\n\n<span class=\"n\">REST_FRAMEWORK</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"n\">DEFAULT_PARSER_CLASSES</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"c1\"># nested parser are just default DRF parsers with extended</span>\n        <span class=\"c1\"># functionalities to support nested</span>\n\n        <span class=\"s1\">'drf_nested_forms.parsers.NestedMultiPartParser,</span>\n        <span class=\"s1\">'drf_nested_forms.parsers.NestedJSONPartParser,</span>\n        <span class=\"s1\">'rest_framework.parsers.FormParser'</span><span class=\"p\">,</span>\n\n        <span class=\"c1\"># so this settings will work in respective of a nested request</span>\n        <span class=\"c1\"># or not</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">#...</span>\n</pre>\n<p>To change default settings of the parsers, add <code>OPTIONS</code> to <code>NESTED_FORM_PARSER</code> with the new settings to your django settings file</p>\n<pre><span class=\"c1\">#..</span>\n\n<span class=\"n\">NESTED_FORM_PARSER</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'OPTIONS'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'allow_empty'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"s1\">'allow_blank'</span><span class=\"p\">:</span> <span class=\"kc\">True</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">#...</span>\n</pre>\n<p>The parsers can also be used directly in a <code>rest_framework</code> view class</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rest_framework.views</span> <span class=\"kn\">import</span> <span class=\"n\">APIView</span>\n<span class=\"kn\">from</span> <span class=\"nn\">rest_framework.parsers</span> <span class=\"kn\">import</span> <span class=\"n\">FormParser</span>\n<span class=\"kn\">from</span> <span class=\"nn\">rest_framework.response</span> <span class=\"kn\">import</span> <span class=\"n\">Response</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">drf_nested_forms.parsers</span> <span class=\"kn\">import</span> <span class=\"n\">NestedMultiPartParser</span><span class=\"p\">,</span> <span class=\"n\">NestedJSONParser</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TestMultiPartParserView</span><span class=\"p\">(</span><span class=\"n\">APIView</span><span class=\"p\">):</span>\n    <span class=\"n\">parser_classes</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">NestedMultiPartParser</span><span class=\"p\">,</span> <span class=\"n\">FormParser</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">post</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">Response</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TestJSONParserView</span><span class=\"p\">(</span><span class=\"n\">APIView</span><span class=\"p\">):</span>\n    <span class=\"n\">parser_classes</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">NestedJSONParser</span><span class=\"p\">,</span> <span class=\"n\">FormParser</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">post</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">Response</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n</pre>\n<p>For example, a form or JSON data with nested params like below can be posted to any of the above drf view:</p>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'[0][attribute]'</span><span class=\"p\">:</span> <span class=\"s1\">'true'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'[0][verbose][0]'</span><span class=\"p\">:</span> <span class=\"s1\">'bazz'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'[0][verbose][1]'</span><span class=\"p\">:</span> <span class=\"s1\">'foo'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'[0][variant][vendor_metric]'</span><span class=\"p\">:</span> <span class=\"s1\">'null'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'[0][variant][metric_verbose_name]'</span><span class=\"p\">:</span> <span class=\"s1\">'Large'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'[0][foo][baaz]'</span><span class=\"p\">:</span> <span class=\"s1\">'false'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'[1][attribute]'</span><span class=\"p\">:</span> <span class=\"s1\">'size'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'[1][verbose]'</span><span class=\"p\">:</span> <span class=\"s1\">'[]'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'[1][variant][vendor_metric]'</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'[1][variant][metric_verbose_name][foo][baaz][]'</span><span class=\"p\">:</span> <span class=\"s1\">'Large'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'[1][foo][baaz]'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"s1\">'[1][logo]'</span><span class=\"p\">:</span> <span class=\"s1\">'235'</span>\n<span class=\"p\">}</span>\n</pre>\n<p>after being parsed, the <code>request.data</code> will look like this:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'attribute'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"s1\">'verbose'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'bazz'</span><span class=\"p\">,</span> <span class=\"s1\">'foo'</span><span class=\"p\">],</span>\n        <span class=\"s1\">'variant'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'vendor_metric'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n            <span class=\"s1\">'metric_verbose_name'</span><span class=\"p\">:</span> <span class=\"s1\">'Large'</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'foo'</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"s1\">'baaz'</span><span class=\"p\">:</span> <span class=\"kc\">False</span> <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'attribute'</span><span class=\"p\">:</span> <span class=\"s1\">'size'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'verbose'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s1\">'variant'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'vendor_metric'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n            <span class=\"s1\">'metric_verbose_name'</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"s1\">'foo'</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"s1\">'baaz'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'Large'</span><span class=\"p\">]</span> <span class=\"p\">}</span> <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'foo'</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"s1\">'baaz'</span><span class=\"p\">:</span> <span class=\"s1\">''</span> <span class=\"p\">},</span>\n        <span class=\"s1\">'logo'</span><span class=\"p\">:</span> <span class=\"mi\">235</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<h1>Options</h1>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>allow_blank</td>\n<td><code>True</code></td>\n<td>shows empty string <code>''</code> in the object</td>\n</tr>\n<tr>\n<td>allow_empty</td>\n<td><code>False</code></td>\n<td>shows empty <code>list</code> or <code>dict</code> object</td>\n</tr></tbody></table>\n<h1>Running Tests</h1>\n<p>To run the current test suite, execute the following from the root of the project:</p>\n<pre><code>python runtests.py\n</code></pre>\n<h1>Author</h1>\n<p>@Copyright 2020, Duke Effiom</p>\n\n          </div>"}, "last_serial": 7006078, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "4dc874225207b7cf92daf8323e31b945", "sha256": "678fbff9c2de4b39c624f8f1720db3c1030668cb713cf76013a062ecb7e42a9b"}, "downloads": -1, "filename": "drf_nested_forms-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4dc874225207b7cf92daf8323e31b945", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10032, "upload_time": "2020-03-31T18:23:10", "upload_time_iso_8601": "2020-03-31T18:23:10.681684Z", "url": "https://files.pythonhosted.org/packages/9e/ef/ad893e59ea6ad7c11225306294522f567ff9545102e2dfdce716d6a73091/drf_nested_forms-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29a5f062ccad091495ab731b84da90b1", "sha256": "8ed35d7ec747c8ae9d29b8f29bc6e570197458360a1719ee27041ca6b8f6e598"}, "downloads": -1, "filename": "drf_nested_forms-0.2.0.tar.gz", "has_sig": false, "md5_digest": "29a5f062ccad091495ab731b84da90b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8494, "upload_time": "2020-03-31T18:24:04", "upload_time_iso_8601": "2020-03-31T18:24:04.795447Z", "url": "https://files.pythonhosted.org/packages/06/7f/277a0bd8c3ec1b9840f9e0ae8f11dbc795c3946473411217c98d81f6ae15/drf_nested_forms-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "c32c4f9cbfa77ec4ab99da9ba99b03dd", "sha256": "6159c0368f8d8921d29ca8cd175afa80747e183ce14344b138e6c908979f829d"}, "downloads": -1, "filename": "drf_nested_forms-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c32c4f9cbfa77ec4ab99da9ba99b03dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9882, "upload_time": "2020-04-12T20:21:24", "upload_time_iso_8601": "2020-04-12T20:21:24.175496Z", "url": "https://files.pythonhosted.org/packages/02/ed/ac55f1251da6536568c417bdbead5391c1b4a964e93159289485b5a86c23/drf_nested_forms-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "938b2775e4b1eb97572c8fc6031e1e1b", "sha256": "48b2cd0e3e745374071467a7f33c709f7f31f064d0d2b490a979df79f7cd8ce0"}, "downloads": -1, "filename": "drf_nested_forms-0.2.1.tar.gz", "has_sig": false, "md5_digest": "938b2775e4b1eb97572c8fc6031e1e1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8376, "upload_time": "2020-04-12T20:21:26", "upload_time_iso_8601": "2020-04-12T20:21:26.389366Z", "url": "https://files.pythonhosted.org/packages/16/68/65d538b44acc38cb1548f91c1c72f7aa091337d1db2704338fe278ca6c0b/drf_nested_forms-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c32c4f9cbfa77ec4ab99da9ba99b03dd", "sha256": "6159c0368f8d8921d29ca8cd175afa80747e183ce14344b138e6c908979f829d"}, "downloads": -1, "filename": "drf_nested_forms-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c32c4f9cbfa77ec4ab99da9ba99b03dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9882, "upload_time": "2020-04-12T20:21:24", "upload_time_iso_8601": "2020-04-12T20:21:24.175496Z", "url": "https://files.pythonhosted.org/packages/02/ed/ac55f1251da6536568c417bdbead5391c1b4a964e93159289485b5a86c23/drf_nested_forms-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "938b2775e4b1eb97572c8fc6031e1e1b", "sha256": "48b2cd0e3e745374071467a7f33c709f7f31f064d0d2b490a979df79f7cd8ce0"}, "downloads": -1, "filename": "drf_nested_forms-0.2.1.tar.gz", "has_sig": false, "md5_digest": "938b2775e4b1eb97572c8fc6031e1e1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8376, "upload_time": "2020-04-12T20:21:26", "upload_time_iso_8601": "2020-04-12T20:21:26.389366Z", "url": "https://files.pythonhosted.org/packages/16/68/65d538b44acc38cb1548f91c1c72f7aa091337d1db2704338fe278ca6c0b/drf_nested_forms-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:43 2020"}