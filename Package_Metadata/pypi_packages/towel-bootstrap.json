{"info": {"author": "Matthias Kestenholz", "author_email": "mk@feinheit.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Application Frameworks"], "description": "=========================================================================\n``towel_bootstrap`` -- making it easy to use Towel with Twitter Bootstrap\n=========================================================================\n\n.. note::\n\n    You have to add ``towel_bootstrap`` to ``INSTALLED_APPS``, preferably\n    before ``django.contrib.admin`` because otherwise the bootstrapified\n    login, logout and password templates will not be picked up.\n\n\nIncluded goodies\n================\n\nBase templates\n--------------\n\n* ``towel_bootstrap/base.html``:\n\n  Base template for everything. CSS is at the top, Javascript at the bottom.\n  Defines two Javascript arrays you might want to be aware of:\n\n  * ``onReady``: A list of functions which will be run on\n    ``$(document).ready()``. Receive the jQuery instance as first and only\n    argument.\n\n  * ``onForm``: A list of functions which initialize forms. Might be called\n    several times on the same set of elements. Receive two arguments, a\n    jQuery object wrapping either ``document`` or some subset of the DOM\n    and the jQuery instance.\n\n* ``towel_bootstrap/full.html``:\n\n  Template for full-width pages.\n\n* ``towel_bootstrap/modal.html``:\n\n  Template for AJAX-loaded modals.\n\n* ``towel_bootstrap/plain.html``:\n\n  Template covering a smaller width, most useful for login/logout pages and\n  such. Empties the main navigation.\n\nAll base templates except for ``towel_bootstrap/base.html`` extend\n``base.html``. This means that if you provide your own ``base.html`` which only\noverrides the bare minimum of regions, you can use all other templates right\naway.\n\nThe following blocks are available by default:\n\n* ``title``: Browser title\n* ``css``: CSS declaration.\n* ``body``: Everything inside ``<body/>`` except for ``templates`` and ``js``.\n* ``navigation``: The content of the navbar.\n* ``main``: The main container, that is, everything except for the navigation\n  and the footer.\n* ``search``: A search form embedded in the sidebar.\n* ``sidebar``: The sidebar itself.\n* ``messages``: A messages container above the page header and the content.\n* ``page-header``: The page header, most useful when there is a\n  ``<div class=\"page-header\"/>`` inside.\n* ``content``: Content.\n* ``footer``: The footer.\n* ``templates``: May be used for Javascript templates, meaning mainly for\n  ``<script type=\"text/template\"/>`` tags.\n* ``js``: All Javascript files and code.\n\n\nModelView templates\n-------------------\n\n``towel_bootstrap`` comes with a selection of templates most useful with\nModelView. Have a look at the files in\n``towel_bootstrap/templates/modelview/``.\n\n\nTowel templates\n---------------\n\n``towel_bootstrap`` overrides the styles of form items, form errors and\nwarnings, of ordering links in the list pages and of the pagination.\n\n\nTemplates for ``django.contrib.auth``\n-------------------------------------\n\nLog in, log out, password change and reset templates are included as well.\n\n\nTemplate tags\n-------------\n\nContains a template tag most useful for marking the current navigation entry.\nUse as follows::\n\n    {% load mark_current %}\n    {% mark_current request.path %}\n        <li><a href=\"...\"></a></li>\n        <li><a href=\"...\"></a></li>\n        <li><a href=\"...\"></a></li>\n    {% endmark_current %}\n\nEach navigation entry should occupy one line; adds a ``class=\"active\"`` where\nthe current URL begins with the ``href`` attribute value.\n\n\nJavascript helpers\n------------------\n\n* ``onReady`` and ``onForm`` have already been described above.\n* ``$.fn.flash``: Changes a set of elements to be partially translucent before\n  fading them in to complete opacity again.\n* ``$.fn.autogrow``: When applied to a textarea, causes the textarea to\n  automatically expand in height when new content is added so that no scrollbar\n  appears. Is applied by default to all elements matching\n  ``textarea.autogrow``.\n* ``initForms([elem])``: Runs all handlers in ``onForm``. Defaults to handling\n  everything inside ``document`` if no object is passed.\n* ``modalLoad(url)``: Loads a bootstrap modal from a remote URL. This is\n  automatically activated for all elements matching\n  ``a[data-toggle=ajaxmodal]``.\n* All AJAX requests are patched to work with Django's CSRF protection.\n\n\nThird-party libraries\n---------------------\n\n* `jQuery <http://jquery.com>`_.\n* `Harvest chosen <http://harvesthq.github.com/chosen/>`_.\n* `Bootstrap datepicker <https://github.com/eternicode/bootstrap-datepicker/>`_.\n\n* Bootstrap itself is NOT included. The templates expect to find all of\n  bootstrap at ``{{ STATIC_URL }}bootstrap/``.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/matthiask/towel-bootstrap/", "keywords": null, "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "towel-bootstrap", "package_url": "https://pypi.org/project/towel-bootstrap/", "platform": "OS Independent", "project_url": "https://pypi.org/project/towel-bootstrap/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/matthiask/towel-bootstrap/"}, "release_url": "https://pypi.org/project/towel-bootstrap/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Keeping you DRY since 2010", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<p>Note</p>\n<p>You have to add <tt>towel_bootstrap</tt> to <tt>INSTALLED_APPS</tt>, preferably\nbefore <tt>django.contrib.admin</tt> because otherwise the bootstrapified\nlogin, logout and password templates will not be picked up.</p>\n</div>\n<div id=\"included-goodies\">\n<h2>Included goodies</h2>\n<div id=\"base-templates\">\n<h3>Base templates</h3>\n<ul>\n<li><p><tt>towel_bootstrap/base.html</tt>:</p>\n<p>Base template for everything. CSS is at the top, Javascript at the bottom.\nDefines two Javascript arrays you might want to be aware of:</p>\n<ul>\n<li><tt>onReady</tt>: A list of functions which will be run on\n<tt><span class=\"pre\">$(document).ready()</span></tt>. Receive the jQuery instance as first and only\nargument.</li>\n<li><tt>onForm</tt>: A list of functions which initialize forms. Might be called\nseveral times on the same set of elements. Receive two arguments, a\njQuery object wrapping either <tt>document</tt> or some subset of the DOM\nand the jQuery instance.</li>\n</ul>\n</li>\n<li><p><tt>towel_bootstrap/full.html</tt>:</p>\n<p>Template for full-width pages.</p>\n</li>\n<li><p><tt>towel_bootstrap/modal.html</tt>:</p>\n<p>Template for AJAX-loaded modals.</p>\n</li>\n<li><p><tt>towel_bootstrap/plain.html</tt>:</p>\n<p>Template covering a smaller width, most useful for login/logout pages and\nsuch. Empties the main navigation.</p>\n</li>\n</ul>\n<p>All base templates except for <tt>towel_bootstrap/base.html</tt> extend\n<tt>base.html</tt>. This means that if you provide your own <tt>base.html</tt> which only\noverrides the bare minimum of regions, you can use all other templates right\naway.</p>\n<p>The following blocks are available by default:</p>\n<ul>\n<li><tt>title</tt>: Browser title</li>\n<li><tt>css</tt>: CSS declaration.</li>\n<li><tt>body</tt>: Everything inside <tt>&lt;body/&gt;</tt> except for <tt>templates</tt> and <tt>js</tt>.</li>\n<li><tt>navigation</tt>: The content of the navbar.</li>\n<li><tt>main</tt>: The main container, that is, everything except for the navigation\nand the footer.</li>\n<li><tt>search</tt>: A search form embedded in the sidebar.</li>\n<li><tt>sidebar</tt>: The sidebar itself.</li>\n<li><tt>messages</tt>: A messages container above the page header and the content.</li>\n<li><tt><span class=\"pre\">page-header</span></tt>: The page header, most useful when there is a\n<tt>&lt;div <span class=\"pre\">class=\"page-header\"/&gt;</span></tt> inside.</li>\n<li><tt>content</tt>: Content.</li>\n<li><tt>footer</tt>: The footer.</li>\n<li><tt>templates</tt>: May be used for Javascript templates, meaning mainly for\n<tt>&lt;script <span class=\"pre\">type=\"text/template\"/&gt;</span></tt> tags.</li>\n<li><tt>js</tt>: All Javascript files and code.</li>\n</ul>\n</div>\n<div id=\"modelview-templates\">\n<h3>ModelView templates</h3>\n<p><tt>towel_bootstrap</tt> comes with a selection of templates most useful with\nModelView. Have a look at the files in\n<tt>towel_bootstrap/templates/modelview/</tt>.</p>\n</div>\n<div id=\"towel-templates\">\n<h3>Towel templates</h3>\n<p><tt>towel_bootstrap</tt> overrides the styles of form items, form errors and\nwarnings, of ordering links in the list pages and of the pagination.</p>\n</div>\n<div id=\"templates-for-django-contrib-auth\">\n<h3>Templates for <tt>django.contrib.auth</tt></h3>\n<p>Log in, log out, password change and reset templates are included as well.</p>\n</div>\n<div id=\"template-tags\">\n<h3>Template tags</h3>\n<p>Contains a template tag most useful for marking the current navigation entry.\nUse as follows:</p>\n<pre>{% load mark_current %}\n{% mark_current request.path %}\n    &lt;li&gt;&lt;a href=\"...\"&gt;&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"...\"&gt;&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=\"...\"&gt;&lt;/a&gt;&lt;/li&gt;\n{% endmark_current %}\n</pre>\n<p>Each navigation entry should occupy one line; adds a <tt><span class=\"pre\">class=\"active\"</span></tt> where\nthe current URL begins with the <tt>href</tt> attribute value.</p>\n</div>\n<div id=\"javascript-helpers\">\n<h3>Javascript helpers</h3>\n<ul>\n<li><tt>onReady</tt> and <tt>onForm</tt> have already been described above.</li>\n<li><tt>$.fn.flash</tt>: Changes a set of elements to be partially translucent before\nfading them in to complete opacity again.</li>\n<li><tt>$.fn.autogrow</tt>: When applied to a textarea, causes the textarea to\nautomatically expand in height when new content is added so that no scrollbar\nappears. Is applied by default to all elements matching\n<tt>textarea.autogrow</tt>.</li>\n<li><tt><span class=\"pre\">initForms([elem])</span></tt>: Runs all handlers in <tt>onForm</tt>. Defaults to handling\neverything inside <tt>document</tt> if no object is passed.</li>\n<li><tt>modalLoad(url)</tt>: Loads a bootstrap modal from a remote URL. This is\nautomatically activated for all elements matching\n<tt><span class=\"pre\">a[data-toggle=ajaxmodal]</span></tt>.</li>\n<li>All AJAX requests are patched to work with Django\u2019s CSRF protection.</li>\n</ul>\n</div>\n<div id=\"third-party-libraries\">\n<h3>Third-party libraries</h3>\n<ul>\n<li><a href=\"http://jquery.com\" rel=\"nofollow\">jQuery</a>.</li>\n<li><a href=\"http://harvesthq.github.com/chosen/\" rel=\"nofollow\">Harvest chosen</a>.</li>\n<li><a href=\"https://github.com/eternicode/bootstrap-datepicker/\" rel=\"nofollow\">Bootstrap datepicker</a>.</li>\n<li>Bootstrap itself is NOT included. The templates expect to find all of\nbootstrap at <tt>{{ STATIC_URL }}bootstrap/</tt>.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2202886, "releases": {"0.0.1": []}, "urls": [], "timestamp": "Fri May  8 03:49:24 2020"}