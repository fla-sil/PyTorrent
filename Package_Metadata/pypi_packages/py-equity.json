{"info": {"author": "Meheret Tesfaye", "author_email": "meherett@zoho.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# PY-EQUITY\n\n[![Build Status](https://travis-ci.org/meherett/py-equity.svg?branch=master)](https://travis-ci.org/meherett/py-equity)\n![PyPI License](https://img.shields.io/pypi/l/py-equity.svg?color=black)\n![PyPI Version](https://img.shields.io/pypi/v/py-equity.svg?color=blue)\n[![Coverage Status](https://coveralls.io/repos/github/meherett/py-equity/badge.svg?branch=master)](https://coveralls.io/github/meherett/py-equity?branch=master)\n\n*Python wrapper around the BUTXO Equity compiler for Bytom protocol.*\n\n## Installation\n```shell script\n$ pip install py-equity\n```\n\n## Development\nWe welcome pull requests. To get started, just fork this repo, clone it locally, and run:\n```\n$ pip install -e . -r requirements.txt\n```\n\n## Quick Usage\n```python\nfrom equity import Equity\n\nLOCK_WITH_PUBLIC_KEY_SOURCE = \"\"\"\n    contract LockWithPublicKey(publicKey: PublicKey) locks valueAmount of valueAsset {\n      clause spend(sig: Signature) {\n        verify checkTxSig(publicKey, sig)\n        unlock valueAmount of valueAsset\n      }\n    }\n\"\"\"\n\nLOCK_WITH_PUBLIC_KEY_PATH = \"./LockWithPublicKey.equity\"\n\n# LOCK_WITH_PUBLIC_KEY_ARGS = [\n#     \"e9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e78\"\n# ]\n\nequity = Equity(\"http://localhost:9888\")\n\nCOMPILED = equity.compile_source(LOCK_WITH_PUBLIC_KEY_SOURCE,\n                                 \"e9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e78\")\n\nprint(COMPILED[\"name\"])\nprint(COMPILED[\"program\"])\nprint(COMPILED[\"opcodes\"])\n\nprint(COMPILED)\n\n# Save compiled contract\nequity.save()\n```\n\n`OUTPUT`\n\n```json\n'LockWithPublicKey'\n'20e9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e787403ae7cac00c0'\n'0xe9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e78 DEPTH 0xae7cac FALSE CHECKPREDICATE'\n\n{'name': 'LockWithPublicKey', 'source': '\\n    contract LockWithPublicKey(publicKey: PublicKey) locks valueAmount of valueAsset {\\n      clause spend(sig: Signature) {\\n        verify checkTxSig(publicKey, sig)\\n        unlock valueAmount of valueAsset\\n      }\\n    }\\n', 'program': '20e9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e787403ae7cac00c0', 'params': [{'name': 'publicKey', 'type': 'PublicKey'}], 'value': 'valueAmount of valueAsset', 'clause_info': [{'name': 'spend', 'params': [{'name': 'sig', 'type': 'Signature'}], 'values': [{'name': '', 'asset': 'valueAsset', 'amount': 'valueAmount'}]}], 'opcodes': '0xe9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e78 DEPTH 0xae7cac FALSE CHECKPREDICATE', 'error': ''}\n```\n\n## CLI\n\nCommand line interface, run the following command:\n\n```shell script\n$ eqt --version\n```\n\nExample `eqt`:\n```shell script\n$ eqt --file LockWithPublicKey.equity --args \"e9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e78\"\n```\n\nGet help:\n```shell script\n$ eqt --help\n```\n\nFrom there, you can run eqt more commands, `-s\\--save` to save your contract, `-u\\--url` to change Bytom API url. by default (http://localhost:9888).\n\n## Testing\n\nYou can run the tests with:\n\n```\n$ pytest tests\n```\n\nOr use `tox` to run the complete suite against the full set of build targets, or pytest to run specific \ntests against a specific version of Python.\n\n## API\n\n### Class Equity()\n\n**Parameters**\n\n`Optional`:\n- `String` - *url*, Bytom API url, by default (http://localhost:9888).\n- `String` - *api_key*, Bytom API key.\n- `Integer` - *timeout*, request timeout, by default (1).\n\n---\n\n**`compile_source()`**: It is to compiling Bytom smart contract(Equity source).\n\n**Parameters**\n\n`Object`:\n- `String` - *equity_source*, Equity source code.\n\n`Optional`:\n- `Boolean/String/Integer/Array` - **argv*.\n    - `Boolean` - *boolean*, boolean parameter.\n    - `String` - *string*, string parameter.\n    - `Integer` - *integer*, integer parameter.\n\n**Returns**\n\n`Object`:\n- `String` - *name*, contract name.\n- `String` - *source*, contract source code.\n- `String` - *program*, contract program.\n- `Array` - *params*, contract params.\n- `String` - *value*, contract value.\n- `Array` - *clause_info*, contract clause_info.\n- `Array` - *values*, contract values.\n- `String` - *opcodes*, contract opcodes.\n- `String` - *error*, contract error.\n\n**Example**\n\n```python\nLOCK_WITH_PUBLIC_KEY_SOURCE = \"\"\"\n    contract LockWithPublicKey(publicKey: PublicKey) locks valueAmount of valueAsset {\n      clause spend(sig: Signature) {\n        verify checkTxSig(publicKey, sig)\n        unlock valueAmount of valueAsset\n      }\n    }\n\"\"\"\nequity = Equity(\"http://localhost:9888\", timeout=5)\nCOMPILED = equity.compile_source(LOCK_WITH_PUBLIC_KEY_SOURCE,\n                                 \"e9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e78\")\n\nprint(COMPILED)\n```\n<details>\n<summary>Output</summary>\n\n```json5\n{'name': 'LockWithPublicKey', 'source': '\\n    contract LockWithPublicKey(publicKey: PublicKey) locks valueAmount of valueAsset {\\n      clause spend(sig: Signature) {\\n        verify checkTxSig(publicKey, sig)\\n        unlock valueAmount of valueAsset\\n      }\\n    }\\n', 'program': '20e9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e787403ae7cac00c0', 'params': [{'name': 'publicKey', 'type': 'PublicKey'}], 'value': 'valueAmount of valueAsset', 'clause_info': [{'name': 'spend', 'params': [{'name': 'sig', 'type': 'Signature'}], 'values': [{'name': '', 'asset': 'valueAsset', 'amount': 'valueAmount'}]}], 'opcodes': '0xe9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e78 DEPTH 0xae7cac FALSE CHECKPREDICATE', 'error': ''}\n```\n</details>\n\n----\n\n**`compile_file()`**: It is to compiling Bytom smart contract form Equity file.\n\n**Parameters**\n\n`Object`:\n- `String` - *equity_source*, Equity source code file(.equity or .eqt).\n\n`Optional`:\n- `Boolean/String/Integer/Array` - **argv*.\n    - `Boolean` - *boolean*, boolean parameter.\n    - `String` - *string*, string parameter.\n    - `Integer` - *integer*, integer parameter.\n\n**Returns**\n\n`Object`:\n- `String` - *name*, contract name.\n- `String` - *source*, contract source code.\n- `String` - *program*, contract program.\n- `Array` - *params*, contract params.\n- `String` - *value*, contract value.\n- `Array` - *clause_info*, contract clause_info.\n- `Array` - *values*, contract values.\n- `String` - *opcodes*, contract opcodes.\n- `String` - *error*, contract error.\n\n**Example**\n\n```python\nLOCK_WITH_PUBLIC_KEY_PATH = \"./LockWithPublicKey.equity\"\nequity = Equity(\"http://localhost:9888\", timeout=5)\nCOMPILED = equity.compile_file(LOCK_WITH_PUBLIC_KEY_PATH,\n                               \"e9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e78\")\n\nprint(COMPILED)\n```\n<details>\n<summary>Output</summary>\n\n```json5\n{'name': 'LockWithPublicKey', 'source': '\\n    contract LockWithPublicKey(publicKey: PublicKey) locks valueAmount of valueAsset {\\n      clause spend(sig: Signature) {\\n        verify checkTxSig(publicKey, sig)\\n        unlock valueAmount of valueAsset\\n      }\\n    }\\n', 'program': '20e9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e787403ae7cac00c0', 'params': [{'name': 'publicKey', 'type': 'PublicKey'}], 'value': 'valueAmount of valueAsset', 'clause_info': [{'name': 'spend', 'params': [{'name': 'sig', 'type': 'Signature'}], 'values': [{'name': '', 'asset': 'valueAsset', 'amount': 'valueAmount'}]}], 'opcodes': '0xe9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e78 DEPTH 0xae7cac FALSE CHECKPREDICATE', 'error': ''}\n```\n</details>\n\n----\n\n**`save()`**: Save compiled equity source.\n\n**Parameters**\n\n`Optional`:\n- `String` - *file_path*, It is for full path with name.\n- `String` - *dir_path*, It is for only dir path.\n\n**Returns**\n\n`Object`:\n- `String` - *name*, contract name.\n\n## AUTHOR\n [MEHERET TESFAYE](https://github.com/meherett)\n\n## LICENSE\n [AGPLv3+](LICENSE)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/meherett/py-equity", "keywords": "eqt", "license": "AGPLv3+", "maintainer": "", "maintainer_email": "", "name": "py-equity", "package_url": "https://pypi.org/project/py-equity/", "platform": "", "project_url": "https://pypi.org/project/py-equity/", "project_urls": {"Homepage": "https://github.com/meherett/py-equity"}, "release_url": "https://pypi.org/project/py-equity/0.1.0/", "requires_dist": ["requests (<3,>=2.22.0)"], "requires_python": ">=2.7,<4", "summary": "Python wrapper around the BUTXO Equity compiler for Bytom protocol.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PY-EQUITY</h1>\n<p><a href=\"https://travis-ci.org/meherett/py-equity\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43391addc4aada6b9361fd68ba2ba556fc1124db/68747470733a2f2f7472617669732d63692e6f72672f6d656865726574742f70792d6571756974792e7376673f6272616e63683d6d6173746572\"></a>\n<img alt=\"PyPI License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71333510425fd1874dcd177f68ab53bc4fc37409/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f70792d6571756974792e7376673f636f6c6f723d626c61636b\">\n<img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58849215d5c7bedcfc67aae03f7a9d3c6d4064d4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70792d6571756974792e7376673f636f6c6f723d626c7565\">\n<a href=\"https://coveralls.io/github/meherett/py-equity?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9b0926cabb851bcfaaa884ee7d76ea3233eb804/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d656865726574742f70792d6571756974792f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p><em>Python wrapper around the BUTXO Equity compiler for Bytom protocol.</em></p>\n<h2>Installation</h2>\n<pre>$ pip install py-equity\n</pre>\n<h2>Development</h2>\n<p>We welcome pull requests. To get started, just fork this repo, clone it locally, and run:</p>\n<pre><code>$ pip install -e . -r requirements.txt\n</code></pre>\n<h2>Quick Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">equity</span> <span class=\"kn\">import</span> <span class=\"n\">Equity</span>\n\n<span class=\"n\">LOCK_WITH_PUBLIC_KEY_SOURCE</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">    contract LockWithPublicKey(publicKey: PublicKey) locks valueAmount of valueAsset {</span>\n<span class=\"s2\">      clause spend(sig: Signature) {</span>\n<span class=\"s2\">        verify checkTxSig(publicKey, sig)</span>\n<span class=\"s2\">        unlock valueAmount of valueAsset</span>\n<span class=\"s2\">      }</span>\n<span class=\"s2\">    }</span>\n<span class=\"s2\">\"\"\"</span>\n\n<span class=\"n\">LOCK_WITH_PUBLIC_KEY_PATH</span> <span class=\"o\">=</span> <span class=\"s2\">\"./LockWithPublicKey.equity\"</span>\n\n<span class=\"c1\"># LOCK_WITH_PUBLIC_KEY_ARGS = [</span>\n<span class=\"c1\">#     \"e9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e78\"</span>\n<span class=\"c1\"># ]</span>\n\n<span class=\"n\">equity</span> <span class=\"o\">=</span> <span class=\"n\">Equity</span><span class=\"p\">(</span><span class=\"s2\">\"http://localhost:9888\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">COMPILED</span> <span class=\"o\">=</span> <span class=\"n\">equity</span><span class=\"o\">.</span><span class=\"n\">compile_source</span><span class=\"p\">(</span><span class=\"n\">LOCK_WITH_PUBLIC_KEY_SOURCE</span><span class=\"p\">,</span>\n                                 <span class=\"s2\">\"e9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e78\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">COMPILED</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">COMPILED</span><span class=\"p\">[</span><span class=\"s2\">\"program\"</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">COMPILED</span><span class=\"p\">[</span><span class=\"s2\">\"opcodes\"</span><span class=\"p\">])</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">COMPILED</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Save compiled contract</span>\n<span class=\"n\">equity</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n<p><code>OUTPUT</code></p>\n<pre><span class=\"err\">'LockWithPublicKey'</span>\n<span class=\"err\">'</span><span class=\"mf\">20e9108</span><span class=\"err\">d</span><span class=\"mi\">3</span><span class=\"err\">ca</span><span class=\"mi\">8049800727</span><span class=\"err\">f</span><span class=\"mi\">6</span><span class=\"err\">a</span><span class=\"mi\">3505</span><span class=\"err\">b</span><span class=\"mi\">3</span><span class=\"err\">a</span><span class=\"mi\">2710</span><span class=\"err\">dc</span><span class=\"mi\">579405</span><span class=\"err\">dde</span><span class=\"mi\">03</span><span class=\"err\">c</span><span class=\"mi\">250</span><span class=\"err\">f</span><span class=\"mi\">16</span><span class=\"err\">d</span><span class=\"mi\">9</span><span class=\"err\">a</span><span class=\"mf\">7e1</span><span class=\"err\">e</span><span class=\"mf\">6e787403</span><span class=\"err\">ae</span><span class=\"mi\">7</span><span class=\"err\">cac</span><span class=\"mi\">00</span><span class=\"err\">c</span><span class=\"mi\">0</span><span class=\"err\">'</span>\n<span class=\"err\">'</span><span class=\"mi\">0</span><span class=\"err\">xe</span><span class=\"mi\">9108</span><span class=\"err\">d</span><span class=\"mi\">3</span><span class=\"err\">ca</span><span class=\"mi\">8049800727</span><span class=\"err\">f</span><span class=\"mi\">6</span><span class=\"err\">a</span><span class=\"mi\">3505</span><span class=\"err\">b</span><span class=\"mi\">3</span><span class=\"err\">a</span><span class=\"mi\">2710</span><span class=\"err\">dc</span><span class=\"mi\">579405</span><span class=\"err\">dde</span><span class=\"mi\">03</span><span class=\"err\">c</span><span class=\"mi\">250</span><span class=\"err\">f</span><span class=\"mi\">16</span><span class=\"err\">d</span><span class=\"mi\">9</span><span class=\"err\">a</span><span class=\"mf\">7e1</span><span class=\"err\">e</span><span class=\"mf\">6e78</span> <span class=\"err\">DEPTH</span> <span class=\"mi\">0</span><span class=\"err\">xae</span><span class=\"mi\">7</span><span class=\"err\">cac</span> <span class=\"err\">FALSE</span> <span class=\"err\">CHECKPREDICATE'</span>\n\n<span class=\"p\">{</span><span class=\"err\">'name':</span> <span class=\"err\">'LockWithPublicKey',</span> <span class=\"err\">'source':</span> <span class=\"err\">'\\n</span>    <span class=\"err\">contract</span> <span class=\"err\">LockWithPublicKey(publicKey:</span> <span class=\"err\">PublicKey)</span> <span class=\"err\">locks</span> <span class=\"err\">valueAmount</span> <span class=\"err\">of</span> <span class=\"err\">valueAsset</span> <span class=\"err\">{\\n</span>      <span class=\"err\">clause</span> <span class=\"err\">spend(sig:</span> <span class=\"err\">Signature)</span> <span class=\"err\">{\\n</span>        <span class=\"err\">verify</span> <span class=\"err\">checkTxSig(publicKey,</span> <span class=\"err\">sig)\\n</span>        <span class=\"err\">unlock</span> <span class=\"err\">valueAmount</span> <span class=\"err\">of</span> <span class=\"err\">valueAsset\\n</span>      <span class=\"p\">}</span><span class=\"err\">\\n</span>    <span class=\"err\">}\\n',</span> <span class=\"err\">'program':</span> <span class=\"err\">'</span><span class=\"mf\">20e9108</span><span class=\"err\">d</span><span class=\"mi\">3</span><span class=\"err\">ca</span><span class=\"mi\">8049800727</span><span class=\"err\">f</span><span class=\"mi\">6</span><span class=\"err\">a</span><span class=\"mi\">3505</span><span class=\"err\">b</span><span class=\"mi\">3</span><span class=\"err\">a</span><span class=\"mi\">2710</span><span class=\"err\">dc</span><span class=\"mi\">579405</span><span class=\"err\">dde</span><span class=\"mi\">03</span><span class=\"err\">c</span><span class=\"mi\">250</span><span class=\"err\">f</span><span class=\"mi\">16</span><span class=\"err\">d</span><span class=\"mi\">9</span><span class=\"err\">a</span><span class=\"mf\">7e1</span><span class=\"err\">e</span><span class=\"mf\">6e787403</span><span class=\"err\">ae</span><span class=\"mi\">7</span><span class=\"err\">cac</span><span class=\"mi\">00</span><span class=\"err\">c</span><span class=\"mi\">0</span><span class=\"err\">',</span> <span class=\"err\">'params':</span> <span class=\"p\">[{</span><span class=\"err\">'name':</span> <span class=\"err\">'publicKey',</span> <span class=\"err\">'type':</span> <span class=\"err\">'PublicKey'</span><span class=\"p\">}]</span><span class=\"err\">,</span> <span class=\"err\">'value':</span> <span class=\"err\">'valueAmount</span> <span class=\"err\">of</span> <span class=\"err\">valueAsset',</span> <span class=\"err\">'clause_info':</span> <span class=\"p\">[{</span><span class=\"err\">'name':</span> <span class=\"err\">'spend',</span> <span class=\"err\">'params':</span> <span class=\"err\">[{'name':</span> <span class=\"err\">'sig',</span> <span class=\"err\">'type':</span> <span class=\"err\">'Signature'</span><span class=\"p\">}]</span><span class=\"err\">,</span> <span class=\"err\">'values':</span> <span class=\"p\">[{</span><span class=\"err\">'name':</span> <span class=\"err\">'',</span> <span class=\"err\">'asset':</span> <span class=\"err\">'valueAsset',</span> <span class=\"err\">'amount':</span> <span class=\"err\">'valueAmount'</span><span class=\"p\">}]</span><span class=\"err\">}],</span> <span class=\"err\">'opcodes':</span> <span class=\"err\">'</span><span class=\"mi\">0</span><span class=\"err\">xe</span><span class=\"mi\">9108</span><span class=\"err\">d</span><span class=\"mi\">3</span><span class=\"err\">ca</span><span class=\"mi\">8049800727</span><span class=\"err\">f</span><span class=\"mi\">6</span><span class=\"err\">a</span><span class=\"mi\">3505</span><span class=\"err\">b</span><span class=\"mi\">3</span><span class=\"err\">a</span><span class=\"mi\">2710</span><span class=\"err\">dc</span><span class=\"mi\">579405</span><span class=\"err\">dde</span><span class=\"mi\">03</span><span class=\"err\">c</span><span class=\"mi\">250</span><span class=\"err\">f</span><span class=\"mi\">16</span><span class=\"err\">d</span><span class=\"mi\">9</span><span class=\"err\">a</span><span class=\"mf\">7e1</span><span class=\"err\">e</span><span class=\"mf\">6e78</span> <span class=\"err\">DEPTH</span> <span class=\"mi\">0</span><span class=\"err\">xae</span><span class=\"mi\">7</span><span class=\"err\">cac</span> <span class=\"err\">FALSE</span> <span class=\"err\">CHECKPREDICATE',</span> <span class=\"err\">'error':</span> <span class=\"err\">''}</span>\n</pre>\n<h2>CLI</h2>\n<p>Command line interface, run the following command:</p>\n<pre>$ eqt --version\n</pre>\n<p>Example <code>eqt</code>:</p>\n<pre>$ eqt --file LockWithPublicKey.equity --args <span class=\"s2\">\"e9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e78\"</span>\n</pre>\n<p>Get help:</p>\n<pre>$ eqt --help\n</pre>\n<p>From there, you can run eqt more commands, <code>-s\\--save</code> to save your contract, <code>-u\\--url</code> to change Bytom API url. by default (<a href=\"http://localhost:9888\" rel=\"nofollow\">http://localhost:9888</a>).</p>\n<h2>Testing</h2>\n<p>You can run the tests with:</p>\n<pre><code>$ pytest tests\n</code></pre>\n<p>Or use <code>tox</code> to run the complete suite against the full set of build targets, or pytest to run specific\ntests against a specific version of Python.</p>\n<h2>API</h2>\n<h3>Class Equity()</h3>\n<p><strong>Parameters</strong></p>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>url</em>, Bytom API url, by default (<a href=\"http://localhost:9888\" rel=\"nofollow\">http://localhost:9888</a>).</li>\n<li><code>String</code> - <em>api_key</em>, Bytom API key.</li>\n<li><code>Integer</code> - <em>timeout</em>, request timeout, by default (1).</li>\n</ul>\n<hr>\n<p><strong><code>compile_source()</code></strong>: It is to compiling Bytom smart contract(Equity source).</p>\n<p><strong>Parameters</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>equity_source</em>, Equity source code.</li>\n</ul>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>Boolean/String/Integer/Array</code> - *<em>argv</em>.\n<ul>\n<li><code>Boolean</code> - <em>boolean</em>, boolean parameter.</li>\n<li><code>String</code> - <em>string</em>, string parameter.</li>\n<li><code>Integer</code> - <em>integer</em>, integer parameter.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>name</em>, contract name.</li>\n<li><code>String</code> - <em>source</em>, contract source code.</li>\n<li><code>String</code> - <em>program</em>, contract program.</li>\n<li><code>Array</code> - <em>params</em>, contract params.</li>\n<li><code>String</code> - <em>value</em>, contract value.</li>\n<li><code>Array</code> - <em>clause_info</em>, contract clause_info.</li>\n<li><code>Array</code> - <em>values</em>, contract values.</li>\n<li><code>String</code> - <em>opcodes</em>, contract opcodes.</li>\n<li><code>String</code> - <em>error</em>, contract error.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">LOCK_WITH_PUBLIC_KEY_SOURCE</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">    contract LockWithPublicKey(publicKey: PublicKey) locks valueAmount of valueAsset {</span>\n<span class=\"s2\">      clause spend(sig: Signature) {</span>\n<span class=\"s2\">        verify checkTxSig(publicKey, sig)</span>\n<span class=\"s2\">        unlock valueAmount of valueAsset</span>\n<span class=\"s2\">      }</span>\n<span class=\"s2\">    }</span>\n<span class=\"s2\">\"\"\"</span>\n<span class=\"n\">equity</span> <span class=\"o\">=</span> <span class=\"n\">Equity</span><span class=\"p\">(</span><span class=\"s2\">\"http://localhost:9888\"</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">COMPILED</span> <span class=\"o\">=</span> <span class=\"n\">equity</span><span class=\"o\">.</span><span class=\"n\">compile_source</span><span class=\"p\">(</span><span class=\"n\">LOCK_WITH_PUBLIC_KEY_SOURCE</span><span class=\"p\">,</span>\n                                 <span class=\"s2\">\"e9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e78\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">COMPILED</span><span class=\"p\">)</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>{'name': 'LockWithPublicKey', 'source': '\\n    contract LockWithPublicKey(publicKey: PublicKey) locks valueAmount of valueAsset {\\n      clause spend(sig: Signature) {\\n        verify checkTxSig(publicKey, sig)\\n        unlock valueAmount of valueAsset\\n      }\\n    }\\n', 'program': '20e9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e787403ae7cac00c0', 'params': [{'name': 'publicKey', 'type': 'PublicKey'}], 'value': 'valueAmount of valueAsset', 'clause_info': [{'name': 'spend', 'params': [{'name': 'sig', 'type': 'Signature'}], 'values': [{'name': '', 'asset': 'valueAsset', 'amount': 'valueAmount'}]}], 'opcodes': '0xe9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e78 DEPTH 0xae7cac FALSE CHECKPREDICATE', 'error': ''}\n</pre>\n</details>\n<hr>\n<p><strong><code>compile_file()</code></strong>: It is to compiling Bytom smart contract form Equity file.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>equity_source</em>, Equity source code file(.equity or .eqt).</li>\n</ul>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>Boolean/String/Integer/Array</code> - *<em>argv</em>.\n<ul>\n<li><code>Boolean</code> - <em>boolean</em>, boolean parameter.</li>\n<li><code>String</code> - <em>string</em>, string parameter.</li>\n<li><code>Integer</code> - <em>integer</em>, integer parameter.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>name</em>, contract name.</li>\n<li><code>String</code> - <em>source</em>, contract source code.</li>\n<li><code>String</code> - <em>program</em>, contract program.</li>\n<li><code>Array</code> - <em>params</em>, contract params.</li>\n<li><code>String</code> - <em>value</em>, contract value.</li>\n<li><code>Array</code> - <em>clause_info</em>, contract clause_info.</li>\n<li><code>Array</code> - <em>values</em>, contract values.</li>\n<li><code>String</code> - <em>opcodes</em>, contract opcodes.</li>\n<li><code>String</code> - <em>error</em>, contract error.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"n\">LOCK_WITH_PUBLIC_KEY_PATH</span> <span class=\"o\">=</span> <span class=\"s2\">\"./LockWithPublicKey.equity\"</span>\n<span class=\"n\">equity</span> <span class=\"o\">=</span> <span class=\"n\">Equity</span><span class=\"p\">(</span><span class=\"s2\">\"http://localhost:9888\"</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">COMPILED</span> <span class=\"o\">=</span> <span class=\"n\">equity</span><span class=\"o\">.</span><span class=\"n\">compile_file</span><span class=\"p\">(</span><span class=\"n\">LOCK_WITH_PUBLIC_KEY_PATH</span><span class=\"p\">,</span>\n                               <span class=\"s2\">\"e9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e78\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">COMPILED</span><span class=\"p\">)</span>\n</pre>\n<details>\n<summary>Output</summary>\n<pre>{'name': 'LockWithPublicKey', 'source': '\\n    contract LockWithPublicKey(publicKey: PublicKey) locks valueAmount of valueAsset {\\n      clause spend(sig: Signature) {\\n        verify checkTxSig(publicKey, sig)\\n        unlock valueAmount of valueAsset\\n      }\\n    }\\n', 'program': '20e9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e787403ae7cac00c0', 'params': [{'name': 'publicKey', 'type': 'PublicKey'}], 'value': 'valueAmount of valueAsset', 'clause_info': [{'name': 'spend', 'params': [{'name': 'sig', 'type': 'Signature'}], 'values': [{'name': '', 'asset': 'valueAsset', 'amount': 'valueAmount'}]}], 'opcodes': '0xe9108d3ca8049800727f6a3505b3a2710dc579405dde03c250f16d9a7e1e6e78 DEPTH 0xae7cac FALSE CHECKPREDICATE', 'error': ''}\n</pre>\n</details>\n<hr>\n<p><strong><code>save()</code></strong>: Save compiled equity source.</p>\n<p><strong>Parameters</strong></p>\n<p><code>Optional</code>:</p>\n<ul>\n<li><code>String</code> - <em>file_path</em>, It is for full path with name.</li>\n<li><code>String</code> - <em>dir_path</em>, It is for only dir path.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><code>Object</code>:</p>\n<ul>\n<li><code>String</code> - <em>name</em>, contract name.</li>\n</ul>\n<h2>AUTHOR</h2>\n<p><a href=\"https://github.com/meherett\" rel=\"nofollow\">MEHERET TESFAYE</a></p>\n<h2>LICENSE</h2>\n<p><a href=\"LICENSE\" rel=\"nofollow\">AGPLv3+</a></p>\n\n          </div>"}, "last_serial": 5774413, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "46445e8e771de378dda81469051f6782", "sha256": "0271a63c08ff1e521fe00dbd5b934bb26fc53d8502b473bf93843acab228e4e4"}, "downloads": -1, "filename": "py_equity-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "46445e8e771de378dda81469051f6782", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7,<4", "size": 20999, "upload_time": "2019-09-03T07:37:34", "upload_time_iso_8601": "2019-09-03T07:37:34.697766Z", "url": "https://files.pythonhosted.org/packages/99/29/b89584131b4f02269fbf656ab651d809a9244060957d331170bc3d710c4c/py_equity-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87f7440272905221571a297dec1ccd2e", "sha256": "3840e03805851b6da91ce09d9ea39223aadae16ec6455c9f1a3021574c51e094"}, "downloads": -1, "filename": "py-equity-0.1.0.tar.gz", "has_sig": false, "md5_digest": "87f7440272905221571a297dec1ccd2e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,<4", "size": 19826, "upload_time": "2019-09-03T07:37:37", "upload_time_iso_8601": "2019-09-03T07:37:37.787576Z", "url": "https://files.pythonhosted.org/packages/de/bc/382956f48701d6a06530435c2dd6b0efa995a6188062b9c98f0d464a3073/py-equity-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "46445e8e771de378dda81469051f6782", "sha256": "0271a63c08ff1e521fe00dbd5b934bb26fc53d8502b473bf93843acab228e4e4"}, "downloads": -1, "filename": "py_equity-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "46445e8e771de378dda81469051f6782", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7,<4", "size": 20999, "upload_time": "2019-09-03T07:37:34", "upload_time_iso_8601": "2019-09-03T07:37:34.697766Z", "url": "https://files.pythonhosted.org/packages/99/29/b89584131b4f02269fbf656ab651d809a9244060957d331170bc3d710c4c/py_equity-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87f7440272905221571a297dec1ccd2e", "sha256": "3840e03805851b6da91ce09d9ea39223aadae16ec6455c9f1a3021574c51e094"}, "downloads": -1, "filename": "py-equity-0.1.0.tar.gz", "has_sig": false, "md5_digest": "87f7440272905221571a297dec1ccd2e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,<4", "size": 19826, "upload_time": "2019-09-03T07:37:37", "upload_time_iso_8601": "2019-09-03T07:37:37.787576Z", "url": "https://files.pythonhosted.org/packages/de/bc/382956f48701d6a06530435c2dd6b0efa995a6188062b9c98f0d464a3073/py-equity-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:19 2020"}