{"info": {"author": "101Loop", "author_email": "pypidev@civilmachines.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP"], "description": "# PayTM | Django REST Framework\n\n**A package for PayTM integration in Django REST Framework**<br>\n\n`PayTM | Django REST Framework` is a Django packaged app that provides necessary `views` based in Django REST Framework.\nIt enables easy integration of PayTM Payment Gateway with Web/Mobile Application with a RESTful API based server.\n\nContributors: **WE'RE LOOKING FOR SOMEONE WHO CAN CONTRIBUTE IN DOCS**\n- **[Civil Machines Technologies Private Limited](https://github.com/civilmahines)**: For providing me platform and\nfunds for research work. This project is hosted currently with `CMT` only. \n- **[Himanshu Shankar](https://github.com/iamhssingh)**: Himanshu Shankar has initiated this project and worked on this\nproject to collect useful functions and classes that are being used in various projects.\n\n#### Installation\n\n- Download and Install via `pip`\n```\npip install drf_paytm\n```\nor<br>\nDownload and Install via `easy_install`\n```\neasy_install drf_paytm\n```\n- Add, if wanted, `drfaddons` in `INSTALLED_APPS` (This is although not required!)\n```\nINSTALLED_APPS = [\n    ...\n    'drf_paytm',\n    ...\n]\n```\n- Also add other dependencies in `INSTALLED_APPS`<br>\n```\nINSTALLED_APPS = [\n    ...\n    'drfaddons',\n    ...\n]\n```\n- Include urls of `drf_paytm` in `urls.py`\n```\nurlpatterns = [\n    ...\n    path('api/paytm/', include('drf_paytm.urls')),\n    ...\n]\n\n# or\n\nurlpatterns = [\n    ...\n    url(r'^api/paytm/', include('drf_paytm.urls')),\n    ...\n]\n```\n- Run migrate command:\n```\npython manage.py migrate\n```\n\n### Frontend API Integration Guideline\n1. Prepare `json` data to post on `request/` view: `{\"oid\": \"ORDER_ID\", \"amount\": \"200\", \"callback_url\": \"FRONT_END APP URL\"}`\n2. `callback_url`: FrontEnd URL to open when payment is successful. Must not have any queryset as `?oid=ORDER_ID` is \nappended.\n3. Post to `request/` and parse response to prepare a HTML form as per code shown below.\n4. Don't add `<input>` for empty and `null` fields from json response of `request/` API.\n5. Set `CALLBACK_URL` in HTML from `paytm_callback_url` of JSON.\n6. Once the payment is done, user is redirected to `response/` view which will verify payment.\n7. If payment is verified by Django Backend, user is redirected to `http://callback_url?oid=ORDER_ID`.\n8. Access `order/ORDER_ID/` API to get `is_completed` status. If it's `false`, check `last_payment_status`.\n\n**Note: In case of critical failure, server's JSON response is shown.**\n\nSample HTML Code to be generated by FrontEnd App(from PayTM)\n```\n<html>\n    <head>\n        <title>Merchant Check Out Page</title>\n    </head>\n    <body>\n        <center><h1>Please do not refresh this page...</h1></center>\n        <form method=\"post\" action=\"https://securegw-stage.paytm.in/theia/processTransaction\" name=\"f1\">\n            <table border=\"1\">\n                <tbody>\n                    <input type=\"hidden\" name=\"MID\" value=\"rxazcv89315285244163\">\n                    <input type=\"hidden\" name=\"WEBSITE\" value=\"WEBSTAGING\">\n                    <input type=\"hidden\" name=\"ORDER_ID\" value=\"order1\">\n                    <input type=\"hidden\" name=\"CUST_ID\" value=\"cust123\">\n                    <input type=\"hidden\" name=\"MOBILE_NO\" value=\"7777777777\">\n                    <input type=\"hidden\" name=\"EMAIL\" value=\"username@emailprovider.com\">\n                    <input type=\"hidden\" name=\"INDUSTRY_TYPE_ID\" value=\"Retail\">\n                    <input type=\"hidden\" name=\"CHANNEL_ID\" value=\"WEB\">\n                    <input type=\"hidden\" name=\"TXN_AMOUNT\" value=\"100.12\">\n                    <input type=\"hidden\" name=\"CALLBACK_URL\" value=\"https://Merchant_Response_URL>\">\n                    <input type=\"hidden\" name=\"CHECKSUMHASH\" value=\"ZWdMJOr1yGiFh1nns2U8sDC9VzgUDHVnQpG\n                    pVnHyrrPb6bthwro1Z8AREUKdUR/K46x3XvFs6Xv7EnoSOLZT29qbZJKXXvyEuEWQIJGkw=\">\n                </tbody>\n            </table>\n        <script type=\"text/javascript\">\n            document.f1.submit();\n        </script>\n        </form>\n    </body>\n</html>\n```\n\n### MODELS\nThe application has three models:\n\n- `PayTMConfiguration`: You need to define your PayTM configurations in this model. Only one object can have\n`is_active` set to `True` which will be used with PayTM API.\n- `TransactionRequest`: This will contain all the PayTM Transaction Request that one will create with PayTM.\n- `TransactionResponse`: This will contain all the responses received from PayTM API against transaction.\n\n### VIEWS\nThe application has following views:\n\n- `ListAddTransactionRequestView`: All payment request should be made on this view. Requires a logged in user.\nIt'll provide user with required data, including `checksum hash` that will be used with PayTM API.\n- `AddTransactionResponseView`: Response from PayTM is posted on this view. URL for this view should go as \n`CALLBACK_URL`. This view then redirects user to FrontEnd app with `OID` as queryset parameter.\n- `PayNowTransaction`: This view is for testing w/o a frontend client. It will open PayTM payment page.\n\n### URLS\n- `request/`: All payment request to be made via this URL.\n- `response/`: All response from PayTM is posted on this URL.\n- `order/OID/`: Retrieve specific payment request data.\n- `now/`: For immediate testing of API, open this url.\n\n### Quickstart Guide\n\n- Complete `Installation Steps` (mentioned above)\n- Create a configuration via `Django Admin` in `PayTM Configuration`.\n- Provide `base_url` of your Backend Server.\n- Set `is_active` to `True`\n- Note: Use sandbox mode credential at first\n- Test API by accessing `/api/paytm/now/` endpoint\n- Use `PayTM Testing Credential`:\n```\nMobile: 7777777777\nOTP: 489871\nPassword: Paytm12345\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/101Loop/drf_paytm", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "drf-paytm", "package_url": "https://pypi.org/project/drf-paytm/", "platform": "", "project_url": "https://pypi.org/project/drf-paytm/", "project_urls": {"Homepage": "https://github.com/101Loop/drf_paytm"}, "release_url": "https://pypi.org/project/drf-paytm/0.0.3/", "requires_dist": ["Django (>=1.11)", "djangorestframework (>=3.9.0)", "drfaddons (>=0.1.0)", "requests (>=2.21.0)", "pycrypto (>=2.6.1)"], "requires_python": ">=3.4", "summary": "PayTM Integration based on Django REST Framework", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PayTM | Django REST Framework</h1>\n<p><strong>A package for PayTM integration in Django REST Framework</strong><br></p>\n<p><code>PayTM | Django REST Framework</code> is a Django packaged app that provides necessary <code>views</code> based in Django REST Framework.\nIt enables easy integration of PayTM Payment Gateway with Web/Mobile Application with a RESTful API based server.</p>\n<p>Contributors: <strong>WE'RE LOOKING FOR SOMEONE WHO CAN CONTRIBUTE IN DOCS</strong></p>\n<ul>\n<li><strong><a href=\"https://github.com/civilmahines\" rel=\"nofollow\">Civil Machines Technologies Private Limited</a></strong>: For providing me platform and\nfunds for research work. This project is hosted currently with <code>CMT</code> only.</li>\n<li><strong><a href=\"https://github.com/iamhssingh\" rel=\"nofollow\">Himanshu Shankar</a></strong>: Himanshu Shankar has initiated this project and worked on this\nproject to collect useful functions and classes that are being used in various projects.</li>\n</ul>\n<h4>Installation</h4>\n<ul>\n<li>Download and Install via <code>pip</code></li>\n</ul>\n<pre><code>pip install drf_paytm\n</code></pre>\n<p>or<br>\nDownload and Install via <code>easy_install</code></p>\n<pre><code>easy_install drf_paytm\n</code></pre>\n<ul>\n<li>Add, if wanted, <code>drfaddons</code> in <code>INSTALLED_APPS</code> (This is although not required!)</li>\n</ul>\n<pre><code>INSTALLED_APPS = [\n    ...\n    'drf_paytm',\n    ...\n]\n</code></pre>\n<ul>\n<li>Also add other dependencies in <code>INSTALLED_APPS</code><br></li>\n</ul>\n<pre><code>INSTALLED_APPS = [\n    ...\n    'drfaddons',\n    ...\n]\n</code></pre>\n<ul>\n<li>Include urls of <code>drf_paytm</code> in <code>urls.py</code></li>\n</ul>\n<pre><code>urlpatterns = [\n    ...\n    path('api/paytm/', include('drf_paytm.urls')),\n    ...\n]\n\n# or\n\nurlpatterns = [\n    ...\n    url(r'^api/paytm/', include('drf_paytm.urls')),\n    ...\n]\n</code></pre>\n<ul>\n<li>Run migrate command:</li>\n</ul>\n<pre><code>python manage.py migrate\n</code></pre>\n<h3>Frontend API Integration Guideline</h3>\n<ol>\n<li>Prepare <code>json</code> data to post on <code>request/</code> view: <code>{\"oid\": \"ORDER_ID\", \"amount\": \"200\", \"callback_url\": \"FRONT_END APP URL\"}</code></li>\n<li><code>callback_url</code>: FrontEnd URL to open when payment is successful. Must not have any queryset as <code>?oid=ORDER_ID</code> is\nappended.</li>\n<li>Post to <code>request/</code> and parse response to prepare a HTML form as per code shown below.</li>\n<li>Don't add <code>&lt;input&gt;</code> for empty and <code>null</code> fields from json response of <code>request/</code> API.</li>\n<li>Set <code>CALLBACK_URL</code> in HTML from <code>paytm_callback_url</code> of JSON.</li>\n<li>Once the payment is done, user is redirected to <code>response/</code> view which will verify payment.</li>\n<li>If payment is verified by Django Backend, user is redirected to <code>http://callback_url?oid=ORDER_ID</code>.</li>\n<li>Access <code>order/ORDER_ID/</code> API to get <code>is_completed</code> status. If it's <code>false</code>, check <code>last_payment_status</code>.</li>\n</ol>\n<p><strong>Note: In case of critical failure, server's JSON response is shown.</strong></p>\n<p>Sample HTML Code to be generated by FrontEnd App(from PayTM)</p>\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Merchant Check Out Page&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;center&gt;&lt;h1&gt;Please do not refresh this page...&lt;/h1&gt;&lt;/center&gt;\n        &lt;form method=\"post\" action=\"https://securegw-stage.paytm.in/theia/processTransaction\" name=\"f1\"&gt;\n            &lt;table border=\"1\"&gt;\n                &lt;tbody&gt;\n                    &lt;input type=\"hidden\" name=\"MID\" value=\"rxazcv89315285244163\"&gt;\n                    &lt;input type=\"hidden\" name=\"WEBSITE\" value=\"WEBSTAGING\"&gt;\n                    &lt;input type=\"hidden\" name=\"ORDER_ID\" value=\"order1\"&gt;\n                    &lt;input type=\"hidden\" name=\"CUST_ID\" value=\"cust123\"&gt;\n                    &lt;input type=\"hidden\" name=\"MOBILE_NO\" value=\"7777777777\"&gt;\n                    &lt;input type=\"hidden\" name=\"EMAIL\" value=\"username@emailprovider.com\"&gt;\n                    &lt;input type=\"hidden\" name=\"INDUSTRY_TYPE_ID\" value=\"Retail\"&gt;\n                    &lt;input type=\"hidden\" name=\"CHANNEL_ID\" value=\"WEB\"&gt;\n                    &lt;input type=\"hidden\" name=\"TXN_AMOUNT\" value=\"100.12\"&gt;\n                    &lt;input type=\"hidden\" name=\"CALLBACK_URL\" value=\"https://Merchant_Response_URL&gt;\"&gt;\n                    &lt;input type=\"hidden\" name=\"CHECKSUMHASH\" value=\"ZWdMJOr1yGiFh1nns2U8sDC9VzgUDHVnQpG\n                    pVnHyrrPb6bthwro1Z8AREUKdUR/K46x3XvFs6Xv7EnoSOLZT29qbZJKXXvyEuEWQIJGkw=\"&gt;\n                &lt;/tbody&gt;\n            &lt;/table&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            document.f1.submit();\n        &lt;/script&gt;\n        &lt;/form&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<h3>MODELS</h3>\n<p>The application has three models:</p>\n<ul>\n<li><code>PayTMConfiguration</code>: You need to define your PayTM configurations in this model. Only one object can have\n<code>is_active</code> set to <code>True</code> which will be used with PayTM API.</li>\n<li><code>TransactionRequest</code>: This will contain all the PayTM Transaction Request that one will create with PayTM.</li>\n<li><code>TransactionResponse</code>: This will contain all the responses received from PayTM API against transaction.</li>\n</ul>\n<h3>VIEWS</h3>\n<p>The application has following views:</p>\n<ul>\n<li><code>ListAddTransactionRequestView</code>: All payment request should be made on this view. Requires a logged in user.\nIt'll provide user with required data, including <code>checksum hash</code> that will be used with PayTM API.</li>\n<li><code>AddTransactionResponseView</code>: Response from PayTM is posted on this view. URL for this view should go as\n<code>CALLBACK_URL</code>. This view then redirects user to FrontEnd app with <code>OID</code> as queryset parameter.</li>\n<li><code>PayNowTransaction</code>: This view is for testing w/o a frontend client. It will open PayTM payment page.</li>\n</ul>\n<h3>URLS</h3>\n<ul>\n<li><code>request/</code>: All payment request to be made via this URL.</li>\n<li><code>response/</code>: All response from PayTM is posted on this URL.</li>\n<li><code>order/OID/</code>: Retrieve specific payment request data.</li>\n<li><code>now/</code>: For immediate testing of API, open this url.</li>\n</ul>\n<h3>Quickstart Guide</h3>\n<ul>\n<li>Complete <code>Installation Steps</code> (mentioned above)</li>\n<li>Create a configuration via <code>Django Admin</code> in <code>PayTM Configuration</code>.</li>\n<li>Provide <code>base_url</code> of your Backend Server.</li>\n<li>Set <code>is_active</code> to <code>True</code></li>\n<li>Note: Use sandbox mode credential at first</li>\n<li>Test API by accessing <code>/api/paytm/now/</code> endpoint</li>\n<li>Use <code>PayTM Testing Credential</code>:</li>\n</ul>\n<pre><code>Mobile: 7777777777\nOTP: 489871\nPassword: Paytm12345\n</code></pre>\n\n          </div>"}, "last_serial": 5396360, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "330218d78c79763397461218e5324166", "sha256": "456724b7ab51996ef0c3688adfc96b2b0c2ea60f7e2cbd28d0f2a6733e7af67b"}, "downloads": -1, "filename": "drf_paytm-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "330218d78c79763397461218e5324166", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 27659, "upload_time": "2018-12-06T10:48:56", "upload_time_iso_8601": "2018-12-06T10:48:56.126163Z", "url": "https://files.pythonhosted.org/packages/a9/76/08d0b51210d15046199dfcdd4af2dc18422613e0adb4adb143f1eaed8e71/drf_paytm-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e62b312bf96c3820d485d36a44ddef44", "sha256": "0ce2c80d80be16b8dd6ef1921e153ff4143e6b0e4d9e5fceb738a28fd1cfc7b2"}, "downloads": -1, "filename": "drf_paytm-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e62b312bf96c3820d485d36a44ddef44", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 13266, "upload_time": "2018-12-06T10:48:58", "upload_time_iso_8601": "2018-12-06T10:48:58.384531Z", "url": "https://files.pythonhosted.org/packages/4c/90/00021b7ae6766e65c283a049533560f416abeb224ed80e97f50a110b6780/drf_paytm-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "1b26e429ff83db3d928d42db9f119471", "sha256": "387e4eaa077d4a930539265bc05b6f458488d319e89b945bbea87916ee2fa1d7"}, "downloads": -1, "filename": "drf_paytm-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1b26e429ff83db3d928d42db9f119471", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 29418, "upload_time": "2018-12-12T15:33:47", "upload_time_iso_8601": "2018-12-12T15:33:47.462280Z", "url": "https://files.pythonhosted.org/packages/83/f5/ab8904ad7918d56aba9f4fc75289759c8e7a1eb5314be4e0d2be4f8d91b3/drf_paytm-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f984e6d0b93a867e84c23d981faf385f", "sha256": "323dce635df8b10a3a4a133b53ac55967516f8d987c5c99e8d3362f66e4a8fde"}, "downloads": -1, "filename": "drf_paytm-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f984e6d0b93a867e84c23d981faf385f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 14207, "upload_time": "2018-12-12T15:33:48", "upload_time_iso_8601": "2018-12-12T15:33:48.797301Z", "url": "https://files.pythonhosted.org/packages/ed/48/eb81b17968bea0d8928bfb5aa03d5dcff8eaf392db378dc4bdfa7eb41714/drf_paytm-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "3792031512b7bc151639afe2309fee16", "sha256": "f3ec9c831312ecd48847f43080608054b271e7407bbac1950020e6af7b5f233b"}, "downloads": -1, "filename": "drf_paytm-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3792031512b7bc151639afe2309fee16", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 31534, "upload_time": "2019-06-13T15:18:31", "upload_time_iso_8601": "2019-06-13T15:18:31.522445Z", "url": "https://files.pythonhosted.org/packages/8a/d0/f34f182ccfd75629391bfa4a80dd597b94b3e2d7a7e92a8d5db94a2d71dd/drf_paytm-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b801824da77516cfa3b0ef8ab709fc36", "sha256": "91826dea19a4a70e453f916e38604fe961f3896004153d92a95f112e77c8beb2"}, "downloads": -1, "filename": "drf_paytm-0.0.3.tar.gz", "has_sig": false, "md5_digest": "b801824da77516cfa3b0ef8ab709fc36", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 16914, "upload_time": "2019-06-13T15:18:33", "upload_time_iso_8601": "2019-06-13T15:18:33.188644Z", "url": "https://files.pythonhosted.org/packages/ed/ba/c30c773dbda4b7a83b7d19b8b4175a3bea0c21fed32b7b21e3f828a4cdd6/drf_paytm-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3792031512b7bc151639afe2309fee16", "sha256": "f3ec9c831312ecd48847f43080608054b271e7407bbac1950020e6af7b5f233b"}, "downloads": -1, "filename": "drf_paytm-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3792031512b7bc151639afe2309fee16", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 31534, "upload_time": "2019-06-13T15:18:31", "upload_time_iso_8601": "2019-06-13T15:18:31.522445Z", "url": "https://files.pythonhosted.org/packages/8a/d0/f34f182ccfd75629391bfa4a80dd597b94b3e2d7a7e92a8d5db94a2d71dd/drf_paytm-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b801824da77516cfa3b0ef8ab709fc36", "sha256": "91826dea19a4a70e453f916e38604fe961f3896004153d92a95f112e77c8beb2"}, "downloads": -1, "filename": "drf_paytm-0.0.3.tar.gz", "has_sig": false, "md5_digest": "b801824da77516cfa3b0ef8ab709fc36", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 16914, "upload_time": "2019-06-13T15:18:33", "upload_time_iso_8601": "2019-06-13T15:18:33.188644Z", "url": "https://files.pythonhosted.org/packages/ed/ba/c30c773dbda4b7a83b7d19b8b4175a3bea0c21fed32b7b21e3f828a4cdd6/drf_paytm-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:42 2020"}