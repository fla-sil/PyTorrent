{"info": {"author": "RoadrunnerWMC", "author_email": "roadrunnerwmc@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "ndspy\n=====\n\n[![Discord](https://img.shields.io/discord/534221996230180884.svg?logo=discord&logoColor=white&colorB=7289da)](https://discord.gg/RQhxAxw)\n[![Documentation](https://img.shields.io/badge/documentation-Read%20the%20Docs-brightgreen.svg?logo=read%20the%20docs&logoColor=white)](http://ndspy.readthedocs.io/)\n[![PyPI](https://img.shields.io/pypi/v/ndspy.svg?logo=python&logoColor=white)](https://pypi.org/project/ndspy/)\n[![License: GNU GPL 3.0](https://img.shields.io/github/license/RoadrunnerWMC/ndspy.svg?logo=gnu&logoColor=white)](https://www.gnu.org/licenses/gpl-3.0)\n\n**ndspy** (\"en-dee-ESS-pie\") is a Python library and suite of command-line\ntools that can help you read, modify and create many types of files used in\nNintendo DS games.\n\nndspy follows a few key design principles:\n\n-   **Accuracy**: ndspy should be able to open and resave any supported file\n    with byte-for-byte accuracy if it's in its canonical format.\n-   **Flexibility**: ndspy should be able to read any valid file in a format it\n    supports. In cases where there's a high chance it will be unable to fully\n    interpret some especially complex part of a file, it should still be useful\n    for editing the other parts.\n-   **Semantic**: ndspy's APIs should closely match the semantics of file\n    structures while hiding their binary-level details.\n\nndspy provides both a Python API and a set of simple command-line tools that\nmake use of it. The command-line tools let you convert files to and from binary\nformats without having to write any Python code yourself. The API is suitable\nfor use in applications written in Python, and in scripts to do more complex\ntasks than the command-line tools are capable of.\n\nAs ndspy is written in pure Python, it is cross-platform and should run on all\nplatforms Python supports. Note that Python doesn't support the Nintendo DS\nitself; ndspy is intended to be used on your PC.\n\nInterested? Read on to see some examples, or check the [API\nReference](https://ndspy.readthedocs.io/en/latest/api/index.html) to see the\ndocumentation for a specific module. When you're ready to install, head over to\nthe [Installation](#installation) section!\n\n\n\nA few examples of ndspy in action\n---------------------------------\n\nCreate a *BMG* file containing message strings:\n\n```python\n>>> import ndspy.bmg\n>>> message1 = ndspy.bmg.Message(b'', ['Open your eyes...'])\n>>> message2 = ndspy.bmg.Message(b'', ['Wake up, Link...'])\n>>> bmg = ndspy.bmg.BMG.fromMessages([message1, message2])\n>>> bmg.save()\nb'MESGbmg1\\xa0\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00INF1 \\x00\\x00\\x00\\x02\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00&\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00DAT1`\\x00\\x00\\x00\\x00\\x00O\\x00p\\x00e\\x00n\\x00 \\x00y\\x00o\\x00u\\x00r\\x00 \\x00e\\x00y\\x00e\\x00s\\x00.\\x00.\\x00.\\x00\\x00\\x00W\\x00a\\x00k\\x00e\\x00 \\x00u\\x00p\\x00,\\x00 \\x00L\\x00i\\x00n\\x00k\\x00.\\x00.\\x00.\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n>>>\n```\n\nChange all notes in a *SSEQ* sequenced music file to middle C, similar to [this\nsong](https://youtu.be/cSAp9sBzPbc):\n\n```python\n>>> import ndspy.soundSequence\n>>> song = ndspy.soundSequence.SSEQ.fromFile('never-gonna-give-you-up.sseq')\n>>> song.parse()\n>>> for event in song.events:\n...     if isinstance(event, ndspy.soundSequence.NoteSequenceEvent):\n...         event.pitch = 60\n...\n>>> song.saveToFile('never-gonna-give-you-up-but-all-the-notes-are-c.sseq')\n>>>\n```\n\nCompress and decompress data using the *LZ10* compression format:\n\n```python\n>>> import ndspy.lz10\n>>> compressed = ndspy.lz10.compress(b'This is some data to compress')\n>>> compressed\nb'\\x10\\x1d\\x00\\x00\\x04This \\x00\\x02so\\x00me data \\x00to compr\\x00ess\\x00\\x00\\x00\\x00\\x00'\n>>> ndspy.lz10.decompress(compressed)\nb'This is some data to compress'\n>>>\n```\n\nSearch for all files starting with a particular byte sequence in a ROM:\n\n```python\n>>> import ndspy.rom\n>>> rom = ndspy.rom.NintendoDSRom.fromFile('nsmb.nds')\n>>> for i, file in enumerate(rom.files):\n...     if file.startswith(b'BMD0'):\n...         print(rom.filenames[i] + ' is a NSBMD model')\n...\ndemo/end_kp.nsbmd is a NSBMD model\ndemo/staffroll.nsbmd is a NSBMD model\ndemo/staffroll_back.nsbmd is a NSBMD model\nenemy/A_jiku.nsbmd is a NSBMD model\nenemy/all_goal_flag.nsbmd is a NSBMD model\n...\nmap/world7.nsbmd is a NSBMD model\nmap/world8.nsbmd is a NSBMD model\n>>>\n```\n\n\nMisconceptions\n--------------\n\nStill a little confused about what exactly ndspy is or what it's capable of?\nThis section will try to answer some questions you may have.\n\n-   ndspy is a *library*, not a *program.* To use ndspy, you have to write your\n    own Python code; ndspy is essentially a tool your code can use. This may\n    sound daunting -- especially if you're not very familiar with Python -- but\n    the\n    [tutorials](https://ndspy.readthedocs.io/en/latest/tutorials/index.html)\n    walk you through this process step-by-step for some common tasks. In the\n    future, I plan to add some command-line and maybe even GUI tools powered by\n    ndspy, but until then, this is how you use it.\n-   ndspy runs on your PC, not on the Nintendo DS itself. You use it to create\n    and modify game files, which can then be run on the console. DS games have\n    to be written in a compiled language such as C or C++ to have any hope of\n    being efficient; Python will never be a serious option there,\n    unfortunately.\n-   ndspy doesn't support every type of file used in every DS game. In fact,\n    for any given game, it's likely that the majority of the game's files\n    *won't* be supported by ndspy. There's a huge amount of variety in video\n    game file formats, and it would be impossible to support them all. ndspy\n    focuses on file formats used in many games, especially first-party ones.\n    Support for formats that are specific to a particular game would best\n    belong in a separate Python library instead.\n\n    That said, certain parts of ndspy (such as its support for ROM files and\n    raw texture data) have to do with the console's hardware rather than its\n    software, and thus should be relevant to most or all games.\n\n\n<a name=\"installation\"></a>\nInstallation\n------------\n\nndspy requires Python 3.6 or newer to run. Python 2 is not supported at all.\n\nThe easiest way to get the latest stable release of ndspy is through PyPI using\npip.\n\npip is a command-line application, so you'll need to use the Windows command\nprompt or bash to do this. The exact command you need to enter depends on your\noperating system and the settings you chose when you installed Python. One of\nthe following possibilities will probably work for you, though:\n\n    pip install ndspy\n\n    python3 -m pip install ndspy\n\n    py -3 -m pip install ndspy\n\nIf you want the very latest version of ndspy including features and bugfixes\nnot yet in any official release, you can also download the code from the\n[GitHub repository](https://github.com/RoadrunnerWMC/ndspy) and install it\nmanually. Note that [crcmod](https://pypi.org/project/crcmod/) is a required\ndependency.\n\n\nDocumentation\n-------------\n\n[ndspy's documentation is hosted on Read the\nDocs](https://ndspy.readthedocs.io/en/latest/index.html), and the documentation\nsource code can be found in the ``docs/`` folder in this repository. In\naddition to the [API\nreference](https://ndspy.readthedocs.io/en/latest/api/index.html), there are\nalso\n[examples](https://ndspy.readthedocs.io/en/latest/index.html#a-few-examples-of-ndspy-in-action)\nand [tutorials](https://ndspy.readthedocs.io/en/latest/tutorials/index.html) to\nhelp you out!\n\n\nSupport\n-------\n\nI spent a long time writing the documentation for ndspy, so first please\ndouble-check that your question isn't already answered in the [API\nreference](https://ndspy.readthedocs.io/en/latest/api/index.html) or\n[Tutorials](https://ndspy.readthedocs.io/en/latest/tutorials/index.html)\nsections in the documentation.\n\nIf that doesn't help, you can ask me (RoadrunnerWMC) your questions via [the\nndspy Discord server](https://discord.gg/RQhxAxw). I'll try to get back to\nyou as quickly as I can!\n\nIf you think you've found a bug in ndspy, please [file an issue on\nGitHub](https://github.com/RoadrunnerWMC/ndspy/issues/new). Thanks!\n\n\nVersioning\n----------\n\nndspy follows [semantic versioning](https://semver.org/) to the best of my\nability. If a tool claims to work with ndspy 1.0.2, it should also work with\nndspy 1.2.0, but not necessarily 2.0.0. (Please note that not all of those\nversion numbers actually exist!)\n\nUndocumented modules are considered exempt from semantic versioning, and are\nsubject to drastic changes at any time. This is also mentioned in the\n[Undocumented\nAPIs](https://ndspy.readthedocs.io/en/latest/api/index.html#undocumented-apis)\nsection of the documentation.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RoadrunnerWMC/ndspy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ndspy", "package_url": "https://pypi.org/project/ndspy/", "platform": "", "project_url": "https://pypi.org/project/ndspy/", "project_urls": {"Homepage": "https://github.com/RoadrunnerWMC/ndspy"}, "release_url": "https://pypi.org/project/ndspy/3.0.0/", "requires_dist": ["crcmod"], "requires_python": ">=3.6", "summary": "Python library that can help you read, modify and create many types of files used in Nintendo DS games.", "version": "3.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ndspy</h1>\n<p><a href=\"https://discord.gg/RQhxAxw\" rel=\"nofollow\"><img alt=\"Discord\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71a49ac76aef979adca8a4605b5ff24b8d232b4d/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3533343232313939363233303138303838342e7376673f6c6f676f3d646973636f7264266c6f676f436f6c6f723d776869746526636f6c6f72423d373238396461\"></a>\n<a href=\"http://ndspy.readthedocs.io/\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dc8971c924fa752859e1fc662597c427e8e37db6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63756d656e746174696f6e2d52656164253230746865253230446f63732d627269676874677265656e2e7376673f6c6f676f3d72656164253230746865253230646f6373266c6f676f436f6c6f723d7768697465\"></a>\n<a href=\"https://pypi.org/project/ndspy/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2114a8566ffe349c99fb4cd043eafd6a0718f76f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6e647370792e7376673f6c6f676f3d707974686f6e266c6f676f436f6c6f723d7768697465\"></a>\n<a href=\"https://www.gnu.org/licenses/gpl-3.0\" rel=\"nofollow\"><img alt=\"License: GNU GPL 3.0\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6b9d294df5f6a3c112f39625e54a59c23acf0595/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f526f616472756e6e6572574d432f6e647370792e7376673f6c6f676f3d676e75266c6f676f436f6c6f723d7768697465\"></a></p>\n<p><strong>ndspy</strong> (\"en-dee-ESS-pie\") is a Python library and suite of command-line\ntools that can help you read, modify and create many types of files used in\nNintendo DS games.</p>\n<p>ndspy follows a few key design principles:</p>\n<ul>\n<li><strong>Accuracy</strong>: ndspy should be able to open and resave any supported file\nwith byte-for-byte accuracy if it's in its canonical format.</li>\n<li><strong>Flexibility</strong>: ndspy should be able to read any valid file in a format it\nsupports. In cases where there's a high chance it will be unable to fully\ninterpret some especially complex part of a file, it should still be useful\nfor editing the other parts.</li>\n<li><strong>Semantic</strong>: ndspy's APIs should closely match the semantics of file\nstructures while hiding their binary-level details.</li>\n</ul>\n<p>ndspy provides both a Python API and a set of simple command-line tools that\nmake use of it. The command-line tools let you convert files to and from binary\nformats without having to write any Python code yourself. The API is suitable\nfor use in applications written in Python, and in scripts to do more complex\ntasks than the command-line tools are capable of.</p>\n<p>As ndspy is written in pure Python, it is cross-platform and should run on all\nplatforms Python supports. Note that Python doesn't support the Nintendo DS\nitself; ndspy is intended to be used on your PC.</p>\n<p>Interested? Read on to see some examples, or check the <a href=\"https://ndspy.readthedocs.io/en/latest/api/index.html\" rel=\"nofollow\">API\nReference</a> to see the\ndocumentation for a specific module. When you're ready to install, head over to\nthe <a href=\"#installation\" rel=\"nofollow\">Installation</a> section!</p>\n<h2>A few examples of ndspy in action</h2>\n<p>Create a <em>BMG</em> file containing message strings:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">ndspy.bmg</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">message1</span> <span class=\"o\">=</span> <span class=\"n\">ndspy</span><span class=\"o\">.</span><span class=\"n\">bmg</span><span class=\"o\">.</span><span class=\"n\">Message</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'Open your eyes...'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">message2</span> <span class=\"o\">=</span> <span class=\"n\">ndspy</span><span class=\"o\">.</span><span class=\"n\">bmg</span><span class=\"o\">.</span><span class=\"n\">Message</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'Wake up, Link...'</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bmg</span> <span class=\"o\">=</span> <span class=\"n\">ndspy</span><span class=\"o\">.</span><span class=\"n\">bmg</span><span class=\"o\">.</span><span class=\"n\">BMG</span><span class=\"o\">.</span><span class=\"n\">fromMessages</span><span class=\"p\">([</span><span class=\"n\">message1</span><span class=\"p\">,</span> <span class=\"n\">message2</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bmg</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n<span class=\"sa\">b</span><span class=\"s1\">'MESGbmg1</span><span class=\"se\">\\xa0\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00</span><span class=\"s1\">INF1 </span><span class=\"se\">\\x00\\x00\\x00\\x02\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00</span><span class=\"s1\">&amp;</span><span class=\"se\">\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00</span><span class=\"s1\">DAT1`</span><span class=\"se\">\\x00\\x00\\x00\\x00\\x00</span><span class=\"s1\">O</span><span class=\"se\">\\x00</span><span class=\"s1\">p</span><span class=\"se\">\\x00</span><span class=\"s1\">e</span><span class=\"se\">\\x00</span><span class=\"s1\">n</span><span class=\"se\">\\x00</span><span class=\"s1\"> </span><span class=\"se\">\\x00</span><span class=\"s1\">y</span><span class=\"se\">\\x00</span><span class=\"s1\">o</span><span class=\"se\">\\x00</span><span class=\"s1\">u</span><span class=\"se\">\\x00</span><span class=\"s1\">r</span><span class=\"se\">\\x00</span><span class=\"s1\"> </span><span class=\"se\">\\x00</span><span class=\"s1\">e</span><span class=\"se\">\\x00</span><span class=\"s1\">y</span><span class=\"se\">\\x00</span><span class=\"s1\">e</span><span class=\"se\">\\x00</span><span class=\"s1\">s</span><span class=\"se\">\\x00</span><span class=\"s1\">.</span><span class=\"se\">\\x00</span><span class=\"s1\">.</span><span class=\"se\">\\x00</span><span class=\"s1\">.</span><span class=\"se\">\\x00\\x00\\x00</span><span class=\"s1\">W</span><span class=\"se\">\\x00</span><span class=\"s1\">a</span><span class=\"se\">\\x00</span><span class=\"s1\">k</span><span class=\"se\">\\x00</span><span class=\"s1\">e</span><span class=\"se\">\\x00</span><span class=\"s1\"> </span><span class=\"se\">\\x00</span><span class=\"s1\">u</span><span class=\"se\">\\x00</span><span class=\"s1\">p</span><span class=\"se\">\\x00</span><span class=\"s1\">,</span><span class=\"se\">\\x00</span><span class=\"s1\"> </span><span class=\"se\">\\x00</span><span class=\"s1\">L</span><span class=\"se\">\\x00</span><span class=\"s1\">i</span><span class=\"se\">\\x00</span><span class=\"s1\">n</span><span class=\"se\">\\x00</span><span class=\"s1\">k</span><span class=\"se\">\\x00</span><span class=\"s1\">.</span><span class=\"se\">\\x00</span><span class=\"s1\">.</span><span class=\"se\">\\x00</span><span class=\"s1\">.</span><span class=\"se\">\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00</span><span class=\"s1\">'</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n<p>Change all notes in a <em>SSEQ</em> sequenced music file to middle C, similar to <a href=\"https://youtu.be/cSAp9sBzPbc\" rel=\"nofollow\">this\nsong</a>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">ndspy.soundSequence</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">song</span> <span class=\"o\">=</span> <span class=\"n\">ndspy</span><span class=\"o\">.</span><span class=\"n\">soundSequence</span><span class=\"o\">.</span><span class=\"n\">SSEQ</span><span class=\"o\">.</span><span class=\"n\">fromFile</span><span class=\"p\">(</span><span class=\"s1\">'never-gonna-give-you-up.sseq'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">song</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">event</span> <span class=\"ow\">in</span> <span class=\"n\">song</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">ndspy</span><span class=\"o\">.</span><span class=\"n\">soundSequence</span><span class=\"o\">.</span><span class=\"n\">NoteSequenceEvent</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">pitch</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">song</span><span class=\"o\">.</span><span class=\"n\">saveToFile</span><span class=\"p\">(</span><span class=\"s1\">'never-gonna-give-you-up-but-all-the-notes-are-c.sseq'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n<p>Compress and decompress data using the <em>LZ10</em> compression format:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">ndspy.lz10</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">compressed</span> <span class=\"o\">=</span> <span class=\"n\">ndspy</span><span class=\"o\">.</span><span class=\"n\">lz10</span><span class=\"o\">.</span><span class=\"n\">compress</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'This is some data to compress'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">compressed</span>\n<span class=\"sa\">b</span><span class=\"s1\">'</span><span class=\"se\">\\x10\\x1d\\x00\\x00\\x04</span><span class=\"s1\">This </span><span class=\"se\">\\x00\\x02</span><span class=\"s1\">so</span><span class=\"se\">\\x00</span><span class=\"s1\">me data </span><span class=\"se\">\\x00</span><span class=\"s1\">to compr</span><span class=\"se\">\\x00</span><span class=\"s1\">ess</span><span class=\"se\">\\x00\\x00\\x00\\x00\\x00</span><span class=\"s1\">'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ndspy</span><span class=\"o\">.</span><span class=\"n\">lz10</span><span class=\"o\">.</span><span class=\"n\">decompress</span><span class=\"p\">(</span><span class=\"n\">compressed</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s1\">'This is some data to compress'</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n<p>Search for all files starting with a particular byte sequence in a ROM:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">ndspy.rom</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rom</span> <span class=\"o\">=</span> <span class=\"n\">ndspy</span><span class=\"o\">.</span><span class=\"n\">rom</span><span class=\"o\">.</span><span class=\"n\">NintendoDSRom</span><span class=\"o\">.</span><span class=\"n\">fromFile</span><span class=\"p\">(</span><span class=\"s1\">'nsmb.nds'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">file</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">rom</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">if</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'BMD0'</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">rom</span><span class=\"o\">.</span><span class=\"n\">filenames</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s1\">' is a NSBMD model'</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"n\">demo</span><span class=\"o\">/</span><span class=\"n\">end_kp</span><span class=\"o\">.</span><span class=\"n\">nsbmd</span> <span class=\"ow\">is</span> <span class=\"n\">a</span> <span class=\"n\">NSBMD</span> <span class=\"n\">model</span>\n<span class=\"n\">demo</span><span class=\"o\">/</span><span class=\"n\">staffroll</span><span class=\"o\">.</span><span class=\"n\">nsbmd</span> <span class=\"ow\">is</span> <span class=\"n\">a</span> <span class=\"n\">NSBMD</span> <span class=\"n\">model</span>\n<span class=\"n\">demo</span><span class=\"o\">/</span><span class=\"n\">staffroll_back</span><span class=\"o\">.</span><span class=\"n\">nsbmd</span> <span class=\"ow\">is</span> <span class=\"n\">a</span> <span class=\"n\">NSBMD</span> <span class=\"n\">model</span>\n<span class=\"n\">enemy</span><span class=\"o\">/</span><span class=\"n\">A_jiku</span><span class=\"o\">.</span><span class=\"n\">nsbmd</span> <span class=\"ow\">is</span> <span class=\"n\">a</span> <span class=\"n\">NSBMD</span> <span class=\"n\">model</span>\n<span class=\"n\">enemy</span><span class=\"o\">/</span><span class=\"n\">all_goal_flag</span><span class=\"o\">.</span><span class=\"n\">nsbmd</span> <span class=\"ow\">is</span> <span class=\"n\">a</span> <span class=\"n\">NSBMD</span> <span class=\"n\">model</span>\n<span class=\"o\">...</span>\n<span class=\"nb\">map</span><span class=\"o\">/</span><span class=\"n\">world7</span><span class=\"o\">.</span><span class=\"n\">nsbmd</span> <span class=\"ow\">is</span> <span class=\"n\">a</span> <span class=\"n\">NSBMD</span> <span class=\"n\">model</span>\n<span class=\"nb\">map</span><span class=\"o\">/</span><span class=\"n\">world8</span><span class=\"o\">.</span><span class=\"n\">nsbmd</span> <span class=\"ow\">is</span> <span class=\"n\">a</span> <span class=\"n\">NSBMD</span> <span class=\"n\">model</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n<h2>Misconceptions</h2>\n<p>Still a little confused about what exactly ndspy is or what it's capable of?\nThis section will try to answer some questions you may have.</p>\n<ul>\n<li>\n<p>ndspy is a <em>library</em>, not a <em>program.</em> To use ndspy, you have to write your\nown Python code; ndspy is essentially a tool your code can use. This may\nsound daunting -- especially if you're not very familiar with Python -- but\nthe\n<a href=\"https://ndspy.readthedocs.io/en/latest/tutorials/index.html\" rel=\"nofollow\">tutorials</a>\nwalk you through this process step-by-step for some common tasks. In the\nfuture, I plan to add some command-line and maybe even GUI tools powered by\nndspy, but until then, this is how you use it.</p>\n</li>\n<li>\n<p>ndspy runs on your PC, not on the Nintendo DS itself. You use it to create\nand modify game files, which can then be run on the console. DS games have\nto be written in a compiled language such as C or C++ to have any hope of\nbeing efficient; Python will never be a serious option there,\nunfortunately.</p>\n</li>\n<li>\n<p>ndspy doesn't support every type of file used in every DS game. In fact,\nfor any given game, it's likely that the majority of the game's files\n<em>won't</em> be supported by ndspy. There's a huge amount of variety in video\ngame file formats, and it would be impossible to support them all. ndspy\nfocuses on file formats used in many games, especially first-party ones.\nSupport for formats that are specific to a particular game would best\nbelong in a separate Python library instead.</p>\n<p>That said, certain parts of ndspy (such as its support for ROM files and\nraw texture data) have to do with the console's hardware rather than its\nsoftware, and thus should be relevant to most or all games.</p>\n</li>\n</ul>\n<h2><a></a>\nInstallation</h2>\n<p>ndspy requires Python 3.6 or newer to run. Python 2 is not supported at all.</p>\n<p>The easiest way to get the latest stable release of ndspy is through PyPI using\npip.</p>\n<p>pip is a command-line application, so you'll need to use the Windows command\nprompt or bash to do this. The exact command you need to enter depends on your\noperating system and the settings you chose when you installed Python. One of\nthe following possibilities will probably work for you, though:</p>\n<pre><code>pip install ndspy\n\npython3 -m pip install ndspy\n\npy -3 -m pip install ndspy\n</code></pre>\n<p>If you want the very latest version of ndspy including features and bugfixes\nnot yet in any official release, you can also download the code from the\n<a href=\"https://github.com/RoadrunnerWMC/ndspy\" rel=\"nofollow\">GitHub repository</a> and install it\nmanually. Note that <a href=\"https://pypi.org/project/crcmod/\" rel=\"nofollow\">crcmod</a> is a required\ndependency.</p>\n<h2>Documentation</h2>\n<p><a href=\"https://ndspy.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">ndspy's documentation is hosted on Read the\nDocs</a>, and the documentation\nsource code can be found in the <code>docs/</code> folder in this repository. In\naddition to the <a href=\"https://ndspy.readthedocs.io/en/latest/api/index.html\" rel=\"nofollow\">API\nreference</a>, there are\nalso\n<a href=\"https://ndspy.readthedocs.io/en/latest/index.html#a-few-examples-of-ndspy-in-action\" rel=\"nofollow\">examples</a>\nand <a href=\"https://ndspy.readthedocs.io/en/latest/tutorials/index.html\" rel=\"nofollow\">tutorials</a> to\nhelp you out!</p>\n<h2>Support</h2>\n<p>I spent a long time writing the documentation for ndspy, so first please\ndouble-check that your question isn't already answered in the <a href=\"https://ndspy.readthedocs.io/en/latest/api/index.html\" rel=\"nofollow\">API\nreference</a> or\n<a href=\"https://ndspy.readthedocs.io/en/latest/tutorials/index.html\" rel=\"nofollow\">Tutorials</a>\nsections in the documentation.</p>\n<p>If that doesn't help, you can ask me (RoadrunnerWMC) your questions via <a href=\"https://discord.gg/RQhxAxw\" rel=\"nofollow\">the\nndspy Discord server</a>. I'll try to get back to\nyou as quickly as I can!</p>\n<p>If you think you've found a bug in ndspy, please <a href=\"https://github.com/RoadrunnerWMC/ndspy/issues/new\" rel=\"nofollow\">file an issue on\nGitHub</a>. Thanks!</p>\n<h2>Versioning</h2>\n<p>ndspy follows <a href=\"https://semver.org/\" rel=\"nofollow\">semantic versioning</a> to the best of my\nability. If a tool claims to work with ndspy 1.0.2, it should also work with\nndspy 1.2.0, but not necessarily 2.0.0. (Please note that not all of those\nversion numbers actually exist!)</p>\n<p>Undocumented modules are considered exempt from semantic versioning, and are\nsubject to drastic changes at any time. This is also mentioned in the\n<a href=\"https://ndspy.readthedocs.io/en/latest/api/index.html#undocumented-apis\" rel=\"nofollow\">Undocumented\nAPIs</a>\nsection of the documentation.</p>\n\n          </div>"}, "last_serial": 4803818, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "46b2d54d71d44d44c319502807945016", "sha256": "c33e480d6014a70da1a02f0c76a2edc3b0687f42ceb7f2ddcc8424e2057a1e15"}, "downloads": -1, "filename": "ndspy-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "46b2d54d71d44d44c319502807945016", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 101805, "upload_time": "2019-01-18T09:55:35", "upload_time_iso_8601": "2019-01-18T09:55:35.893429Z", "url": "https://files.pythonhosted.org/packages/b5/da/27fe103cde860151afc4c285ef12e9c38573246bfd7ab5fc12f1bcf7faf0/ndspy-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41148e0679698b7a215e592c6547d406", "sha256": "c4c1420a264ab289d83fd83ebb54d2038731c202b0de26eb3b7700fb7fb0ecf6"}, "downloads": -1, "filename": "ndspy-1.0.1.tar.gz", "has_sig": false, "md5_digest": "41148e0679698b7a215e592c6547d406", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 72827, "upload_time": "2019-01-18T09:55:37", "upload_time_iso_8601": "2019-01-18T09:55:37.572550Z", "url": "https://files.pythonhosted.org/packages/49/2d/bab2a2419f8c80d6bd1782732bb6bfeab9cb3bd45f4221357b63e3e91676/ndspy-1.0.1.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "3d11e179ebfd2042f47b47a6ae96de64", "sha256": "3a7c5290d81c62d7b64854f89663a29e35562b322a16ba84a962a171fbbf4972"}, "downloads": -1, "filename": "ndspy-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3d11e179ebfd2042f47b47a6ae96de64", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 101831, "upload_time": "2019-01-23T06:37:36", "upload_time_iso_8601": "2019-01-23T06:37:36.863074Z", "url": "https://files.pythonhosted.org/packages/41/49/eadc99949719112531289d35185f9f48b942b85672fa455e03f8f5e8a306/ndspy-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a6a360c6f276abb53b924dd698058b8", "sha256": "5a2b78a147274e19d6b8ec6fbf67f250510e416fa278aba712c74627885bbaca"}, "downloads": -1, "filename": "ndspy-2.0.0.tar.gz", "has_sig": false, "md5_digest": "9a6a360c6f276abb53b924dd698058b8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 72893, "upload_time": "2019-01-23T06:37:38", "upload_time_iso_8601": "2019-01-23T06:37:38.414781Z", "url": "https://files.pythonhosted.org/packages/1f/e7/1adcc452db91bff03a10393414ad2dc23e25e47798bb181e5568a01c402c/ndspy-2.0.0.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "482addfc654669ef98d6d88a94c2ba16", "sha256": "800c9e6154fdee2712657c0be9cea5f2c7c1f513f26e3344ac3b16d9d1fca478"}, "downloads": -1, "filename": "ndspy-3.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "482addfc654669ef98d6d88a94c2ba16", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 111185, "upload_time": "2019-02-11T01:38:05", "upload_time_iso_8601": "2019-02-11T01:38:05.898511Z", "url": "https://files.pythonhosted.org/packages/12/e0/7e24c6259591bc1ebedaa9f992ccc593456004d8edfec4f0ba02ea9de81e/ndspy-3.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f271f647f490d9ca2f79511eab4613e8", "sha256": "0a88ea53ceed1cd66390829db9bcdf3a705dfaf070a7c9e51242abab5f4011e8"}, "downloads": -1, "filename": "ndspy-3.0.0.tar.gz", "has_sig": false, "md5_digest": "f271f647f490d9ca2f79511eab4613e8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 81468, "upload_time": "2019-02-11T01:38:07", "upload_time_iso_8601": "2019-02-11T01:38:07.797340Z", "url": "https://files.pythonhosted.org/packages/0d/ed/b25557867dadfcc7c6a4d63fe789e8efe7eb30a7fba9740cc29fc2d6edd7/ndspy-3.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "482addfc654669ef98d6d88a94c2ba16", "sha256": "800c9e6154fdee2712657c0be9cea5f2c7c1f513f26e3344ac3b16d9d1fca478"}, "downloads": -1, "filename": "ndspy-3.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "482addfc654669ef98d6d88a94c2ba16", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 111185, "upload_time": "2019-02-11T01:38:05", "upload_time_iso_8601": "2019-02-11T01:38:05.898511Z", "url": "https://files.pythonhosted.org/packages/12/e0/7e24c6259591bc1ebedaa9f992ccc593456004d8edfec4f0ba02ea9de81e/ndspy-3.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f271f647f490d9ca2f79511eab4613e8", "sha256": "0a88ea53ceed1cd66390829db9bcdf3a705dfaf070a7c9e51242abab5f4011e8"}, "downloads": -1, "filename": "ndspy-3.0.0.tar.gz", "has_sig": false, "md5_digest": "f271f647f490d9ca2f79511eab4613e8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 81468, "upload_time": "2019-02-11T01:38:07", "upload_time_iso_8601": "2019-02-11T01:38:07.797340Z", "url": "https://files.pythonhosted.org/packages/0d/ed/b25557867dadfcc7c6a4d63fe789e8efe7eb30a7fba9740cc29fc2d6edd7/ndspy-3.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:40 2020"}