{"info": {"author": "Fabien Benureau, Olivier Mangin, Jonathan Grizou", "author_email": "fabien.benureau@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "# Pubs\n\nPubs brings your bibliography to the command line.\n\nPubs organizes your bibliographic documents together with the bibliographic data associated to them and provides command line access to basic and advanced manipulation of your library.\n\nPubs is built with the following principles in mind:\n\n - all papers are referenced using unique citation keys,\n - bibliographic data (i.e. pure bibtex information) is kept separated from metadata (including links to pdf or tags),\n - everything is stored in plain text so it can be manually edited or version controlled.\n\n**Notice:** pubs is still in early development; you should regularly make backups of your pubs repository.\n\n\n## Installation\n\nYou can install the latest stable version of `pubs` through Pypi, with:\n  ```\n  pip install pubs\n  ```\n\nAlternatively, you can:\n\n  - install the latest development version with pip:\n    ```\n    pip install --upgrade git+https://github.com/pubs/pubs\n    ```\n\n  - clone the repository and install it manually:\n    ```\n    git clone https://github.com/pubs/pubs\n    cd pubs\n    python setup.py install [--user]\n    ```\n\nArch Linux users can also use the [pubs-git](https://aur.archlinux.org/packages/pubs-git/) AUR package.\n\n\n## Getting started\n\nCreate your library (by default, goes to `~/.pubs/`).\n  ```\n  pubs init\n  ```\n\nImport existing data from bibtex (pubs will try to automatically copy documents defined as 'file' in bibtex):\n  ```\n  pubs import path/to/collection.bib\n  ```\n\nor for a .bib file containing a single reference:\n  ```\n  pubs add reference.bib -d article.pdf\n  ```\n\npubs can also automatically retrieve the bibtex from a doi:\n  ```\n  pubs add -D 10.1007/s00422-012-0514-6 -d article.pdf\n  ```\n\nor an ISBN (dashes are ignored):\n  ```\n  pubs add -I 978-0822324669 -d article.pdf\n  ```\n\nor an arXiv id (automatically downloading arXiv article is in the works):\n  ```\n  pubs add -X math/9501234 -d article.pdf\n  ```\n\n\n## References always up-to-date\n\nIf you use latex, you can automatize references, by running `pubs export > references.bib` each time you update your library, which also fits well as a `makefile` rule.\n\nThis ensures that your reference file is always up-to-date; you can cite a paper in your manuscript a soon as you add it in pubs. This means that if you have, for instance, a doi on a webpage, you only need to do:\n  ```\n  pubs add -D 10.1007/s00422-012-0514-6\n  ```\n\nand then add `\\cite{Loeb_2012}` in your manuscript. After exporting the bibliography, the citation will correctly appear in your compiled pdf.\n\n\n## Document management\n\nYou can attach a document to a reference:\n  ```\n  pubs doc add Loeb2012_downloaded.pdf Loeb_2012\n  ```\n\nAnd open your documents automatically from the command line:\n  ```\n  pubs doc open Loeb_2012\n  pubs doc open --with lp Loeb_2012  # Opens the document with `lp` to actually print it.\n  ```\n\n## Versioning\n\nPubs comes with a git plugin that automatically commits your changes. You only need to activate it in your configuration:\n  ```ini\n  [plugins]\n  active = git,\n  ```\n\nYou can then also conveniently interact with the git repository by using `pubs git <regular git commands>`.\n\n## Customization\n\nPubs is designed to interact well with your command line tool chain.\nYou can add custom commands to pubs by defining aliases in your configuration file (make sure that the alias plugin is activated in your configuration by using `pubs conf`).\n  ```ini\n  [[alias]]\n  evince = open --with evince\n  count = !pubs list -k \"$@\" | wc -l\n  ```\n\nThe first command defines a new subcommand: `pubs open --with evince` will be executed when `pubs evince` is typed.\nThe second starts with a bang: `!`, and is treated as a shell command. If other arguments are provided they are passed to the shell command as in a script. In the example above the `count` alias can take arguments that are be passed to the `pubs list -k` command, hence enabling filters like `pubs count year:2012`.\n\n\n## Autocompletion\n\nFor autocompletion to work, you need the [argcomplete](https://argcomplete.readthedocs.io) Python package, and Bash 4.2 or newer. For activating *bash* or *tsch* completion, consult the [argcomplete documentation](https://argcomplete.readthedocs.io/en/latest/#global-completion).\n\nFor *zsh* completion, the global activation is not supported but bash completion compatibility can be used for pubs. For that, add the following to your `.zshrc`:\n  ```shell\n  # Enable and load bashcompinit\n  autoload -Uz compinit bashcompinit\n  compinit\n  bashcompinit\n  # Argcomplete explicit registration for pubs\n  eval \"$(register-python-argcomplete pubs)\"\n  ```\n\n## Need more help ?\n\nYou can access the self-documented configuration by using `pubs conf`, and all the commands' help is available with the `--help` option. Did not find an answer to your question? Drop us an issue. We may not answer right away (science comes first!) but we'll eventually look into it.\n\n\n## Authors\n\n### Creators\n\n- [Fabien Benureau](http://fabien.benureau.com)\n- [Olivier Mangin](http://olivier.mangin.com)\n\n\n### Contributors\n\n- [Jonathan Grizou](https://github.com/jgrizou)\n- [Arnold Sykosch](https://github.com/73)\n- [Tyler Earnest](https://github.com/tmearnest)\n- [Dennis Wilson](https://github.com/d9w)\n- [Bill Flynn](https://github.com/wflynny)\n- [Kyle Sunden](https://github.com/ksunden)\n- [Shane Stone](https://github.com/shanewstone)\n- [Amlesh Sivanantham](http://github.com/zamlz)\n- [DV Klopfenstein](http://github.com/dvklopfenstein)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pubs/pubs", "keywords": "", "license": "", "maintainer": "Olivier Mangin", "maintainer_email": "", "name": "pubs", "package_url": "https://pypi.org/project/pubs/", "platform": "", "project_url": "https://pypi.org/project/pubs/", "project_urls": {"Homepage": "https://github.com/pubs/pubs"}, "release_url": "https://pypi.org/project/pubs/0.8.3/", "requires_dist": ["pyyaml", "bibtexparser (>=1.0)", "python-dateutil", "six", "requests", "configobj", "beautifulsoup4", "feedparser", "argcomplete ; extra == 'autocompletion'"], "requires_python": "", "summary": "command-line scientific bibliography manager", "version": "0.8.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pubs</h1>\n<p>Pubs brings your bibliography to the command line.</p>\n<p>Pubs organizes your bibliographic documents together with the bibliographic data associated to them and provides command line access to basic and advanced manipulation of your library.</p>\n<p>Pubs is built with the following principles in mind:</p>\n<ul>\n<li>all papers are referenced using unique citation keys,</li>\n<li>bibliographic data (i.e. pure bibtex information) is kept separated from metadata (including links to pdf or tags),</li>\n<li>everything is stored in plain text so it can be manually edited or version controlled.</li>\n</ul>\n<p><strong>Notice:</strong> pubs is still in early development; you should regularly make backups of your pubs repository.</p>\n<h2>Installation</h2>\n<p>You can install the latest stable version of <code>pubs</code> through Pypi, with:</p>\n<pre><code>pip install pubs\n</code></pre>\n<p>Alternatively, you can:</p>\n<ul>\n<li>\n<p>install the latest development version with pip:</p>\n<pre><code>pip install --upgrade git+https://github.com/pubs/pubs\n</code></pre>\n</li>\n<li>\n<p>clone the repository and install it manually:</p>\n<pre><code>git clone https://github.com/pubs/pubs\ncd pubs\npython setup.py install [--user]\n</code></pre>\n</li>\n</ul>\n<p>Arch Linux users can also use the <a href=\"https://aur.archlinux.org/packages/pubs-git/\" rel=\"nofollow\">pubs-git</a> AUR package.</p>\n<h2>Getting started</h2>\n<p>Create your library (by default, goes to <code>~/.pubs/</code>).</p>\n<pre><code>pubs init\n</code></pre>\n<p>Import existing data from bibtex (pubs will try to automatically copy documents defined as 'file' in bibtex):</p>\n<pre><code>pubs import path/to/collection.bib\n</code></pre>\n<p>or for a .bib file containing a single reference:</p>\n<pre><code>pubs add reference.bib -d article.pdf\n</code></pre>\n<p>pubs can also automatically retrieve the bibtex from a doi:</p>\n<pre><code>pubs add -D 10.1007/s00422-012-0514-6 -d article.pdf\n</code></pre>\n<p>or an ISBN (dashes are ignored):</p>\n<pre><code>pubs add -I 978-0822324669 -d article.pdf\n</code></pre>\n<p>or an arXiv id (automatically downloading arXiv article is in the works):</p>\n<pre><code>pubs add -X math/9501234 -d article.pdf\n</code></pre>\n<h2>References always up-to-date</h2>\n<p>If you use latex, you can automatize references, by running <code>pubs export &gt; references.bib</code> each time you update your library, which also fits well as a <code>makefile</code> rule.</p>\n<p>This ensures that your reference file is always up-to-date; you can cite a paper in your manuscript a soon as you add it in pubs. This means that if you have, for instance, a doi on a webpage, you only need to do:</p>\n<pre><code>pubs add -D 10.1007/s00422-012-0514-6\n</code></pre>\n<p>and then add <code>\\cite{Loeb_2012}</code> in your manuscript. After exporting the bibliography, the citation will correctly appear in your compiled pdf.</p>\n<h2>Document management</h2>\n<p>You can attach a document to a reference:</p>\n<pre><code>pubs doc add Loeb2012_downloaded.pdf Loeb_2012\n</code></pre>\n<p>And open your documents automatically from the command line:</p>\n<pre><code>pubs doc open Loeb_2012\npubs doc open --with lp Loeb_2012  # Opens the document with `lp` to actually print it.\n</code></pre>\n<h2>Versioning</h2>\n<p>Pubs comes with a git plugin that automatically commits your changes. You only need to activate it in your configuration:</p>\n<pre><span class=\"k\">[plugins]</span>\n<span class=\"na\">active</span> <span class=\"o\">=</span> <span class=\"s\">git,</span>\n</pre>\n<p>You can then also conveniently interact with the git repository by using <code>pubs git &lt;regular git commands&gt;</code>.</p>\n<h2>Customization</h2>\n<p>Pubs is designed to interact well with your command line tool chain.\nYou can add custom commands to pubs by defining aliases in your configuration file (make sure that the alias plugin is activated in your configuration by using <code>pubs conf</code>).</p>\n<pre><span class=\"k\">[[alias]]</span>\n<span class=\"na\">evince</span> <span class=\"o\">=</span> <span class=\"s\">open --with evince</span>\n<span class=\"na\">count</span> <span class=\"o\">=</span> <span class=\"s\">!pubs list -k \"$@\" | wc -l</span>\n</pre>\n<p>The first command defines a new subcommand: <code>pubs open --with evince</code> will be executed when <code>pubs evince</code> is typed.\nThe second starts with a bang: <code>!</code>, and is treated as a shell command. If other arguments are provided they are passed to the shell command as in a script. In the example above the <code>count</code> alias can take arguments that are be passed to the <code>pubs list -k</code> command, hence enabling filters like <code>pubs count year:2012</code>.</p>\n<h2>Autocompletion</h2>\n<p>For autocompletion to work, you need the <a href=\"https://argcomplete.readthedocs.io\" rel=\"nofollow\">argcomplete</a> Python package, and Bash 4.2 or newer. For activating <em>bash</em> or <em>tsch</em> completion, consult the <a href=\"https://argcomplete.readthedocs.io/en/latest/#global-completion\" rel=\"nofollow\">argcomplete documentation</a>.</p>\n<p>For <em>zsh</em> completion, the global activation is not supported but bash completion compatibility can be used for pubs. For that, add the following to your <code>.zshrc</code>:</p>\n<pre><span class=\"c1\"># Enable and load bashcompinit</span>\nautoload -Uz compinit bashcompinit\ncompinit\nbashcompinit\n<span class=\"c1\"># Argcomplete explicit registration for pubs</span>\n<span class=\"nb\">eval</span> <span class=\"s2\">\"</span><span class=\"k\">$(</span>register-python-argcomplete pubs<span class=\"k\">)</span><span class=\"s2\">\"</span>\n</pre>\n<h2>Need more help ?</h2>\n<p>You can access the self-documented configuration by using <code>pubs conf</code>, and all the commands' help is available with the <code>--help</code> option. Did not find an answer to your question? Drop us an issue. We may not answer right away (science comes first!) but we'll eventually look into it.</p>\n<h2>Authors</h2>\n<h3>Creators</h3>\n<ul>\n<li><a href=\"http://fabien.benureau.com\" rel=\"nofollow\">Fabien Benureau</a></li>\n<li><a href=\"http://olivier.mangin.com\" rel=\"nofollow\">Olivier Mangin</a></li>\n</ul>\n<h3>Contributors</h3>\n<ul>\n<li><a href=\"https://github.com/jgrizou\" rel=\"nofollow\">Jonathan Grizou</a></li>\n<li><a href=\"https://github.com/73\" rel=\"nofollow\">Arnold Sykosch</a></li>\n<li><a href=\"https://github.com/tmearnest\" rel=\"nofollow\">Tyler Earnest</a></li>\n<li><a href=\"https://github.com/d9w\" rel=\"nofollow\">Dennis Wilson</a></li>\n<li><a href=\"https://github.com/wflynny\" rel=\"nofollow\">Bill Flynn</a></li>\n<li><a href=\"https://github.com/ksunden\" rel=\"nofollow\">Kyle Sunden</a></li>\n<li><a href=\"https://github.com/shanewstone\" rel=\"nofollow\">Shane Stone</a></li>\n<li><a href=\"http://github.com/zamlz\" rel=\"nofollow\">Amlesh Sivanantham</a></li>\n<li><a href=\"http://github.com/dvklopfenstein\" rel=\"nofollow\">DV Klopfenstein</a></li>\n</ul>\n\n          </div>"}, "last_serial": 5666945, "releases": {"0.5.0": [], "0.7.0": [{"comment_text": "", "digests": {"md5": "6176def4c22d8818d74a549163d2e8df", "sha256": "629e9015b39e331bf1b6a0b9ea387b83cba2b81884afa99178b771a07a30984d"}, "downloads": -1, "filename": "pubs-0.7.0.tar.gz", "has_sig": false, "md5_digest": "6176def4c22d8818d74a549163d2e8df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32366, "upload_time": "2017-08-06T23:01:57", "upload_time_iso_8601": "2017-08-06T23:01:57.588104Z", "url": "https://files.pythonhosted.org/packages/f0/5f/f9cf4990222f69ee8bc35af8597c21b66c8ee7fce7c2778613a32e73ba91/pubs-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "09f14601b67d8a40617ee512cc2f7fe9", "sha256": "27994257e349d5e883b5c9193afa3d1539e2488d08e4b9f289d8b9e7762e2a76"}, "downloads": -1, "filename": "pubs-0.8.0.tar.gz", "has_sig": false, "md5_digest": "09f14601b67d8a40617ee512cc2f7fe9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39361, "upload_time": "2018-08-20T14:21:25", "upload_time_iso_8601": "2018-08-20T14:21:25.636985Z", "url": "https://files.pythonhosted.org/packages/ef/1e/85921f2154b8ce8f03b02ad3ed029c6793b225340b1555e80c6dc241d8e1/pubs-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "ceb054b4cbd4a90634d70540768ecf55", "sha256": "9a13de1756e0c9d0adfed6b251af8437a607bc3722de9efbe4c80b05395a00eb"}, "downloads": -1, "filename": "pubs-0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ceb054b4cbd4a90634d70540768ecf55", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 56625, "upload_time": "2018-08-28T02:03:52", "upload_time_iso_8601": "2018-08-28T02:03:52.642583Z", "url": "https://files.pythonhosted.org/packages/db/a3/ac574ee0b96174cbd83c985381537795f558dade9d4f1256375ff4530fce/pubs-0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd08a3dfa0415b7171dfdf0878a41c8f", "sha256": "fda808ae6ba75a3a5cbb26913f9f3a2d672b1339e846add334756bd4cc365139"}, "downloads": -1, "filename": "pubs-0.8.1.tar.gz", "has_sig": false, "md5_digest": "bd08a3dfa0415b7171dfdf0878a41c8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43253, "upload_time": "2018-08-28T02:03:39", "upload_time_iso_8601": "2018-08-28T02:03:39.454252Z", "url": "https://files.pythonhosted.org/packages/5a/c2/bb6122c1a8293d83efbe9213a29976f3b21621f6062ffa13f648b91c48f2/pubs-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "eb8dfcfaf1ffd72aff1ebf1bd3f453d1", "sha256": "caac5228a4cc5f9dcda9dd82de85f5f0117b44055be00b7eb15771c8a0e82de7"}, "downloads": -1, "filename": "pubs-0.8.2.tar.gz", "has_sig": false, "md5_digest": "eb8dfcfaf1ffd72aff1ebf1bd3f453d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44611, "upload_time": "2019-01-06T20:31:13", "upload_time_iso_8601": "2019-01-06T20:31:13.148473Z", "url": "https://files.pythonhosted.org/packages/bc/44/9bd26ca6b71f67d17bc9ce8b035642d62b2ddc94091e4683cabcc84950db/pubs-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "aea48ce2f2e3d6f8a7a214f96de276d3", "sha256": "2ff03572719d3804d39d18787142b799e22ad4b52bd64723eb8b1d5b535f73df"}, "downloads": -1, "filename": "pubs-0.8.3-py3-none-any.whl", "has_sig": false, "md5_digest": "aea48ce2f2e3d6f8a7a214f96de276d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 61676, "upload_time": "2019-08-12T14:58:39", "upload_time_iso_8601": "2019-08-12T14:58:39.015902Z", "url": "https://files.pythonhosted.org/packages/a1/b4/9ac37dcdbfa3eb625a082dff57bdee263c8a96c9f789368d528ca2b369d6/pubs-0.8.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6abe2e4e95e7f1093fa6109789cad8e0", "sha256": "979dbf0d2d40b7acc5cf9415003002e6cedec457c776f54aca30832b9c020f5c"}, "downloads": -1, "filename": "pubs-0.8.3.tar.gz", "has_sig": false, "md5_digest": "6abe2e4e95e7f1093fa6109789cad8e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47340, "upload_time": "2019-08-12T14:58:43", "upload_time_iso_8601": "2019-08-12T14:58:43.197548Z", "url": "https://files.pythonhosted.org/packages/52/16/896377c6e06dd71ecc47c78404e724dddf7dd12dc4697f541a4fd08bbad6/pubs-0.8.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aea48ce2f2e3d6f8a7a214f96de276d3", "sha256": "2ff03572719d3804d39d18787142b799e22ad4b52bd64723eb8b1d5b535f73df"}, "downloads": -1, "filename": "pubs-0.8.3-py3-none-any.whl", "has_sig": false, "md5_digest": "aea48ce2f2e3d6f8a7a214f96de276d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 61676, "upload_time": "2019-08-12T14:58:39", "upload_time_iso_8601": "2019-08-12T14:58:39.015902Z", "url": "https://files.pythonhosted.org/packages/a1/b4/9ac37dcdbfa3eb625a082dff57bdee263c8a96c9f789368d528ca2b369d6/pubs-0.8.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6abe2e4e95e7f1093fa6109789cad8e0", "sha256": "979dbf0d2d40b7acc5cf9415003002e6cedec457c776f54aca30832b9c020f5c"}, "downloads": -1, "filename": "pubs-0.8.3.tar.gz", "has_sig": false, "md5_digest": "6abe2e4e95e7f1093fa6109789cad8e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47340, "upload_time": "2019-08-12T14:58:43", "upload_time_iso_8601": "2019-08-12T14:58:43.197548Z", "url": "https://files.pythonhosted.org/packages/52/16/896377c6e06dd71ecc47c78404e724dddf7dd12dc4697f541a4fd08bbad6/pubs-0.8.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:47 2020"}