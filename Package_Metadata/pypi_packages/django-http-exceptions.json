{"info": {"author": "isik-kaplan", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "[![Build Status](https://travis-ci.org/isik-kaplan/django_http_exceptions.svg?branch=master)](https://travis-ci.org/isik-kaplan/django_http_exceptions)\n[![codecov](https://codecov.io/gh/isik-kaplan/django_http_exceptions/branch/master/graph/badge.svg)](https://codecov.io/gh/isik-kaplan/django_http_exceptions) \n[![Python 3.5+](https://img.shields.io/badge/python-3.5+-brightgreen.svg)](#)\n[![Django 2.0+](https://img.shields.io/badge/django-2.0+-brightgreen.svg)](#)\n[![PyPI - License](https://img.shields.io/pypi/l/django_http_exceptions.svg)](https://pypi.org/project/django-http-exceptions/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/django_http_exceptions.svg)](https://pypi.org/project/django-http-exceptions/)\n\n\n## What is *django_http_exceptions*?\n\nIt is raisable exceptions for your django views.\n\n\n\n## What is it good for?\n\nIt makes this \n\n````py\ndef some_function():\n    raise SomeError\n\ndef view(request):\n   try:\n       response = some_function()\n   except SomeError:\n       response = HttpResponse(status=403)\n   return response\n````\ninto this\n````py\nfrom django_http_exceptions import HTTPExceptions\ndef some_function():\n    raise HTTPExcetions.FORBIDDEN # HTTPExceptions.from_status(403)\n\ndef view(request):\n    return some_function() \n    \n````\n\nmeaning that is saves you from boilerplate code. \n\nIt also allows you to hook default views to **all possible http response codes**, meaning that you can use more than the 5-6 django provided error handlers.\n\n\n\n## How to use it?\n\nJust two middlewares, lower the better, and you are done.\n\n````python\nMIDDLEWARE = [\n    ...,\n    'django_http_exceptions.middleware.ExceptionHandlerMiddleware',\n    'django_http_exceptions.middleware.ThreadLocalRequestMiddleware',\n    ...\n]\n````\n\nAnd that is it, you are ready to raise your http exceptions.\n\n\n\n## What else? \n\n\n#### `HTTPExceptions`\nBase class that provides all the exceptions to be raised.\n\n\n#### `HTTPExceptions.from_status(status)`  \nIn case you don't want to write  \n`HTTPExceptions.REQUEST_HEADER_FIELDS_TOO_LARGE`  \nYou can just write  \n`HTTPExceptions.from_status(431)`\n\n\n#### `HTTPExceptions.BASE_EXCEPTON`  \nThe base exception for all http exception\n\n#### `HTTPExceptions.register_base_exception(exception)`\nGiven that `exception` is a class that inherits from `HTTPException` you can customize the exceptions.\nKeep in mind that `HTTPException` is an `Exception` subclass itself.\n\n\n#### `HTTPExceptions.BASE_EXCEPTION.with_response(response)`  \nThis is the method for raising exceptions with a response. You can put any response in this method while raising your\nerror.\n \nLet's say you have a view named `index`, then this example would return what `index` function would return, but with\nstatus code `410`  \n`HTTPExceptions.GONE.with_response(index(request))`\n\n\n#### `HTTPExceptions.BASE_EXCEPTION.with_content(content)`  \nThis method allow to raise an **HTTPException** with a custom message (can be either `str` or `bytes`).\n\nFor instance, `HTTPExceptions.NOT_FOUND.with_content(\"The user named 'username' could not be found\")`\nwould return something equivalent to `HttpResponse(\"The user named 'username' could not be found\", status=404)`.\n\n\n#### `HTTPExceptions.BASE_EXCEPTION.register_default_view(view)`  \n`view` is a function that takes only one argument, `request` when you register a default view to an error class with\n`HTTPExceptions.NOT_FOUND.register_defaul_view(view)`  when `HTTPExceptions.GONE` is raised it returns the view function, \nbut again, with `404` status code. If the error has been raised with `.with_response`, that is used instead.   \n\n\n#### `get_current_request`\n\nThis function gets you the current request anywhere in your django application, making it easier for your dynamic error \nresponses to be created, like in the `HTTPExceptions.GONE.with_response(index(request))` example.\n \n \n#### `ExceptionHandlerMiddleware` \n\nJust there for to exception handling to work.\n \n \n#### `ThreadLocalRequestMiddleware` \n \nJust there for to `get_current_request` to work.\n\n\n#### `errorify(error)`\n\nDecorator that turns a view (both class and function) into an http error\n\n````python\n@errorify(HTTPExceptions.PAYMENT_REQUIRED)\nclass Subscribe(TemplateView):\n    template = SUBSCRIBE_TEMPLATE\n````\n\n \n## Avaliable Exceptions\n```py\nHTTPExceptions.CONTINUE                              # HTTPExceptions.from_status(100)\nHTTPExceptions.SWITCHING_PROTOCOLS                   # HTTPExceptions.from_status(101)\nHTTPExceptions.PROCESSING                            # HTTPExceptions.from_status(102)\nHTTPExceptions.OK                                    # HTTPExceptions.from_status(200)\nHTTPExceptions.CREATED                               # HTTPExceptions.from_status(201)\nHTTPExceptions.ACCEPTED                              # HTTPExceptions.from_status(202)\nHTTPExceptions.NON_AUTHORITATIVE_INFORMATION         # HTTPExceptions.from_status(203)\nHTTPExceptions.NO_CONTENT                            # HTTPExceptions.from_status(204)\nHTTPExceptions.RESET_CONTENT                         # HTTPExceptions.from_status(205)\nHTTPExceptions.PARTIAL_CONTENT                       # HTTPExceptions.from_status(206)\nHTTPExceptions.MULTI_STATUS                          # HTTPExceptions.from_status(207)\nHTTPExceptions.ALREADY_REPORTED                      # HTTPExceptions.from_status(208)\nHTTPExceptions.IM_USED                               # HTTPExceptions.from_status(226)\nHTTPExceptions.MULTIPLE_CHOICES                      # HTTPExceptions.from_status(300)\nHTTPExceptions.MOVED_PERMANENTLY                     # HTTPExceptions.from_status(301)\nHTTPExceptions.FOUND                                 # HTTPExceptions.from_status(302)\nHTTPExceptions.SEE_OTHER                             # HTTPExceptions.from_status(303)\nHTTPExceptions.NOT_MODIFIED                          # HTTPExceptions.from_status(304)\nHTTPExceptions.USE_PROXY                             # HTTPExceptions.from_status(305)\nHTTPExceptions.TEMPORARY_REDIRECT                    # HTTPExceptions.from_status(307)\nHTTPExceptions.PERMANENT_REDIRECT                    # HTTPExceptions.from_status(308)\nHTTPExceptions.BAD_REQUEST                           # HTTPExceptions.from_status(400)\nHTTPExceptions.UNAUTHORIZED                          # HTTPExceptions.from_status(401)\nHTTPExceptions.PAYMENT_REQUIRED                      # HTTPExceptions.from_status(402)\nHTTPExceptions.FORBIDDEN                             # HTTPExceptions.from_status(403)\nHTTPExceptions.NOT_FOUND                             # HTTPExceptions.from_status(404)\nHTTPExceptions.METHOD_NOT_ALLOWED                    # HTTPExceptions.from_status(405)\nHTTPExceptions.NOT_ACCEPTABLE                        # HTTPExceptions.from_status(406)\nHTTPExceptions.PROXY_AUTHENTICATION_REQUIRED         # HTTPExceptions.from_status(407)\nHTTPExceptions.REQUEST_TIMEOUT                       # HTTPExceptions.from_status(408)\nHTTPExceptions.CONFLICT                              # HTTPExceptions.from_status(409)\nHTTPExceptions.GONE                                  # HTTPExceptions.from_status(410)\nHTTPExceptions.LENGTH_REQUIRED                       # HTTPExceptions.from_status(411)\nHTTPExceptions.PRECONDITION_FAILED                   # HTTPExceptions.from_status(412)\nHTTPExceptions.REQUEST_ENTITY_TOO_LARGE              # HTTPExceptions.from_status(413)\nHTTPExceptions.REQUEST_URI_TOO_LONG                  # HTTPExceptions.from_status(414)\nHTTPExceptions.UNSUPPORTED_MEDIA_TYPE                # HTTPExceptions.from_status(415)\nHTTPExceptions.REQUESTED_RANGE_NOT_SATISFIABLE       # HTTPExceptions.from_status(416)\nHTTPExceptions.EXPECTATION_FAILED                    # HTTPExceptions.from_status(417)\nHTTPExceptions.UNPROCESSABLE_ENTITY                  # HTTPExceptions.from_status(422)\nHTTPExceptions.LOCKED                                # HTTPExceptions.from_status(423)\nHTTPExceptions.FAILED_DEPENDENCY                     # HTTPExceptions.from_status(424)\nHTTPExceptions.UPGRADE_REQUIRED                      # HTTPExceptions.from_status(426)\nHTTPExceptions.PRECONDITION_REQUIRED                 # HTTPExceptions.from_status(428)\nHTTPExceptions.TOO_MANY_REQUESTS                     # HTTPExceptions.from_status(429)\nHTTPExceptions.REQUEST_HEADER_FIELDS_TOO_LARGE       # HTTPExceptions.from_status(431)\nHTTPExceptions.INTERNAL_SERVER_ERROR                 # HTTPExceptions.from_status(500)\nHTTPExceptions.NOT_IMPLEMENTED                       # HTTPExceptions.from_status(501)\nHTTPExceptions.BAD_GATEWAY                           # HTTPExceptions.from_status(502)\nHTTPExceptions.SERVICE_UNAVAILABLE                   # HTTPExceptions.from_status(503)\nHTTPExceptions.GATEWAY_TIMEOUT                       # HTTPExceptions.from_status(504)\nHTTPExceptions.HTTP_VERSION_NOT_SUPPORTED            # HTTPExceptions.from_status(505)\nHTTPExceptions.VARIANT_ALSO_NEGOTIATES               # HTTPExceptions.from_status(506)\nHTTPExceptions.INSUFFICIENT_STORAGE                  # HTTPExceptions.from_status(507)\nHTTPExceptions.LOOP_DETECTED                         # HTTPExceptions.from_status(508)\nHTTPExceptions.NOT_EXTENDED                          # HTTPExceptions.from_status(510)\nHTTPExceptions.NETWORK_AUTHENTICATION_REQUIRED       # HTTPExceptions.from_status(511)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/isik-kaplan/django_http_exceptions", "keywords": "", "license": "APGL-3.0", "maintainer": "", "maintainer_email": "", "name": "django-http-exceptions", "package_url": "https://pypi.org/project/django-http-exceptions/", "platform": "", "project_url": "https://pypi.org/project/django-http-exceptions/", "project_urls": {"Homepage": "https://github.com/isik-kaplan/django_http_exceptions"}, "release_url": "https://pypi.org/project/django-http-exceptions/1.3.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "django raisable http exceptions", "version": "1.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/isik-kaplan/django_http_exceptions\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1394695066cf852eb6a914c5869be963052bb793/68747470733a2f2f7472617669732d63692e6f72672f6973696b2d6b61706c616e2f646a616e676f5f687474705f657863657074696f6e732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/isik-kaplan/django_http_exceptions\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6ffc1d6a215505f0331615b193014c53ca302bd/68747470733a2f2f636f6465636f762e696f2f67682f6973696b2d6b61706c616e2f646a616e676f5f687474705f657863657074696f6e732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"#\" rel=\"nofollow\"><img alt=\"Python 3.5+\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e694343bbecd597c260d7098bf5aa57cd76b885/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e352b2d627269676874677265656e2e737667\"></a>\n<a href=\"#\" rel=\"nofollow\"><img alt=\"Django 2.0+\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1cf50c0d46f88b4de006e15685401721b7667fe1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646a616e676f2d322e302b2d627269676874677265656e2e737667\"></a>\n<a href=\"https://pypi.org/project/django-http-exceptions/\" rel=\"nofollow\"><img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e7e818df7b767c72289c74c929d29afb4704debd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f646a616e676f5f687474705f657863657074696f6e732e737667\"></a>\n<a href=\"https://pypi.org/project/django-http-exceptions/\" rel=\"nofollow\"><img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a732be4769be2bcefcf13363f92d9151c0b602d6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f646a616e676f5f687474705f657863657074696f6e732e737667\"></a></p>\n<h2>What is <em>django_http_exceptions</em>?</h2>\n<p>It is raisable exceptions for your django views.</p>\n<h2>What is it good for?</h2>\n<p>It makes this</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">some_function</span><span class=\"p\">():</span>\n    <span class=\"k\">raise</span> <span class=\"n\">SomeError</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n   <span class=\"k\">try</span><span class=\"p\">:</span>\n       <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">some_function</span><span class=\"p\">()</span>\n   <span class=\"k\">except</span> <span class=\"n\">SomeError</span><span class=\"p\">:</span>\n       <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">HttpResponse</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">403</span><span class=\"p\">)</span>\n   <span class=\"k\">return</span> <span class=\"n\">response</span>\n</pre>\n<p>into this</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_http_exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">HTTPExceptions</span>\n<span class=\"k\">def</span> <span class=\"nf\">some_function</span><span class=\"p\">():</span>\n    <span class=\"k\">raise</span> <span class=\"n\">HTTPExcetions</span><span class=\"o\">.</span><span class=\"n\">FORBIDDEN</span> <span class=\"c1\"># HTTPExceptions.from_status(403)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">some_function</span><span class=\"p\">()</span> \n    \n</pre>\n<p>meaning that is saves you from boilerplate code.</p>\n<p>It also allows you to hook default views to <strong>all possible http response codes</strong>, meaning that you can use more than the 5-6 django provided error handlers.</p>\n<h2>How to use it?</h2>\n<p>Just two middlewares, lower the better, and you are done.</p>\n<pre><span class=\"n\">MIDDLEWARE</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django_http_exceptions.middleware.ExceptionHandlerMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django_http_exceptions.middleware.ThreadLocalRequestMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>And that is it, you are ready to raise your http exceptions.</p>\n<h2>What else?</h2>\n<h4><code>HTTPExceptions</code></h4>\n<p>Base class that provides all the exceptions to be raised.</p>\n<h4><code>HTTPExceptions.from_status(status)</code></h4>\n<p>In case you don't want to write<br>\n<code>HTTPExceptions.REQUEST_HEADER_FIELDS_TOO_LARGE</code><br>\nYou can just write<br>\n<code>HTTPExceptions.from_status(431)</code></p>\n<h4><code>HTTPExceptions.BASE_EXCEPTON</code></h4>\n<p>The base exception for all http exception</p>\n<h4><code>HTTPExceptions.register_base_exception(exception)</code></h4>\n<p>Given that <code>exception</code> is a class that inherits from <code>HTTPException</code> you can customize the exceptions.\nKeep in mind that <code>HTTPException</code> is an <code>Exception</code> subclass itself.</p>\n<h4><code>HTTPExceptions.BASE_EXCEPTION.with_response(response)</code></h4>\n<p>This is the method for raising exceptions with a response. You can put any response in this method while raising your\nerror.</p>\n<p>Let's say you have a view named <code>index</code>, then this example would return what <code>index</code> function would return, but with\nstatus code <code>410</code><br>\n<code>HTTPExceptions.GONE.with_response(index(request))</code></p>\n<h4><code>HTTPExceptions.BASE_EXCEPTION.with_content(content)</code></h4>\n<p>This method allow to raise an <strong>HTTPException</strong> with a custom message (can be either <code>str</code> or <code>bytes</code>).</p>\n<p>For instance, <code>HTTPExceptions.NOT_FOUND.with_content(\"The user named 'username' could not be found\")</code>\nwould return something equivalent to <code>HttpResponse(\"The user named 'username' could not be found\", status=404)</code>.</p>\n<h4><code>HTTPExceptions.BASE_EXCEPTION.register_default_view(view)</code></h4>\n<p><code>view</code> is a function that takes only one argument, <code>request</code> when you register a default view to an error class with\n<code>HTTPExceptions.NOT_FOUND.register_defaul_view(view)</code>  when <code>HTTPExceptions.GONE</code> is raised it returns the view function,\nbut again, with <code>404</code> status code. If the error has been raised with <code>.with_response</code>, that is used instead.</p>\n<h4><code>get_current_request</code></h4>\n<p>This function gets you the current request anywhere in your django application, making it easier for your dynamic error\nresponses to be created, like in the <code>HTTPExceptions.GONE.with_response(index(request))</code> example.</p>\n<h4><code>ExceptionHandlerMiddleware</code></h4>\n<p>Just there for to exception handling to work.</p>\n<h4><code>ThreadLocalRequestMiddleware</code></h4>\n<p>Just there for to <code>get_current_request</code> to work.</p>\n<h4><code>errorify(error)</code></h4>\n<p>Decorator that turns a view (both class and function) into an http error</p>\n<pre><span class=\"nd\">@errorify</span><span class=\"p\">(</span><span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">PAYMENT_REQUIRED</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Subscribe</span><span class=\"p\">(</span><span class=\"n\">TemplateView</span><span class=\"p\">):</span>\n    <span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"n\">SUBSCRIBE_TEMPLATE</span>\n</pre>\n<h2>Avaliable Exceptions</h2>\n<pre><span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">CONTINUE</span>                              <span class=\"c1\"># HTTPExceptions.from_status(100)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">SWITCHING_PROTOCOLS</span>                   <span class=\"c1\"># HTTPExceptions.from_status(101)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">PROCESSING</span>                            <span class=\"c1\"># HTTPExceptions.from_status(102)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">OK</span>                                    <span class=\"c1\"># HTTPExceptions.from_status(200)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">CREATED</span>                               <span class=\"c1\"># HTTPExceptions.from_status(201)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">ACCEPTED</span>                              <span class=\"c1\"># HTTPExceptions.from_status(202)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">NON_AUTHORITATIVE_INFORMATION</span>         <span class=\"c1\"># HTTPExceptions.from_status(203)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">NO_CONTENT</span>                            <span class=\"c1\"># HTTPExceptions.from_status(204)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">RESET_CONTENT</span>                         <span class=\"c1\"># HTTPExceptions.from_status(205)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">PARTIAL_CONTENT</span>                       <span class=\"c1\"># HTTPExceptions.from_status(206)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">MULTI_STATUS</span>                          <span class=\"c1\"># HTTPExceptions.from_status(207)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">ALREADY_REPORTED</span>                      <span class=\"c1\"># HTTPExceptions.from_status(208)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">IM_USED</span>                               <span class=\"c1\"># HTTPExceptions.from_status(226)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">MULTIPLE_CHOICES</span>                      <span class=\"c1\"># HTTPExceptions.from_status(300)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">MOVED_PERMANENTLY</span>                     <span class=\"c1\"># HTTPExceptions.from_status(301)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">FOUND</span>                                 <span class=\"c1\"># HTTPExceptions.from_status(302)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">SEE_OTHER</span>                             <span class=\"c1\"># HTTPExceptions.from_status(303)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">NOT_MODIFIED</span>                          <span class=\"c1\"># HTTPExceptions.from_status(304)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">USE_PROXY</span>                             <span class=\"c1\"># HTTPExceptions.from_status(305)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">TEMPORARY_REDIRECT</span>                    <span class=\"c1\"># HTTPExceptions.from_status(307)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">PERMANENT_REDIRECT</span>                    <span class=\"c1\"># HTTPExceptions.from_status(308)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">BAD_REQUEST</span>                           <span class=\"c1\"># HTTPExceptions.from_status(400)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">UNAUTHORIZED</span>                          <span class=\"c1\"># HTTPExceptions.from_status(401)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">PAYMENT_REQUIRED</span>                      <span class=\"c1\"># HTTPExceptions.from_status(402)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">FORBIDDEN</span>                             <span class=\"c1\"># HTTPExceptions.from_status(403)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">NOT_FOUND</span>                             <span class=\"c1\"># HTTPExceptions.from_status(404)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">METHOD_NOT_ALLOWED</span>                    <span class=\"c1\"># HTTPExceptions.from_status(405)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">NOT_ACCEPTABLE</span>                        <span class=\"c1\"># HTTPExceptions.from_status(406)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">PROXY_AUTHENTICATION_REQUIRED</span>         <span class=\"c1\"># HTTPExceptions.from_status(407)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">REQUEST_TIMEOUT</span>                       <span class=\"c1\"># HTTPExceptions.from_status(408)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">CONFLICT</span>                              <span class=\"c1\"># HTTPExceptions.from_status(409)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">GONE</span>                                  <span class=\"c1\"># HTTPExceptions.from_status(410)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">LENGTH_REQUIRED</span>                       <span class=\"c1\"># HTTPExceptions.from_status(411)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">PRECONDITION_FAILED</span>                   <span class=\"c1\"># HTTPExceptions.from_status(412)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">REQUEST_ENTITY_TOO_LARGE</span>              <span class=\"c1\"># HTTPExceptions.from_status(413)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">REQUEST_URI_TOO_LONG</span>                  <span class=\"c1\"># HTTPExceptions.from_status(414)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">UNSUPPORTED_MEDIA_TYPE</span>                <span class=\"c1\"># HTTPExceptions.from_status(415)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">REQUESTED_RANGE_NOT_SATISFIABLE</span>       <span class=\"c1\"># HTTPExceptions.from_status(416)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">EXPECTATION_FAILED</span>                    <span class=\"c1\"># HTTPExceptions.from_status(417)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">UNPROCESSABLE_ENTITY</span>                  <span class=\"c1\"># HTTPExceptions.from_status(422)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">LOCKED</span>                                <span class=\"c1\"># HTTPExceptions.from_status(423)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">FAILED_DEPENDENCY</span>                     <span class=\"c1\"># HTTPExceptions.from_status(424)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">UPGRADE_REQUIRED</span>                      <span class=\"c1\"># HTTPExceptions.from_status(426)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">PRECONDITION_REQUIRED</span>                 <span class=\"c1\"># HTTPExceptions.from_status(428)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">TOO_MANY_REQUESTS</span>                     <span class=\"c1\"># HTTPExceptions.from_status(429)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">REQUEST_HEADER_FIELDS_TOO_LARGE</span>       <span class=\"c1\"># HTTPExceptions.from_status(431)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">INTERNAL_SERVER_ERROR</span>                 <span class=\"c1\"># HTTPExceptions.from_status(500)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">NOT_IMPLEMENTED</span>                       <span class=\"c1\"># HTTPExceptions.from_status(501)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">BAD_GATEWAY</span>                           <span class=\"c1\"># HTTPExceptions.from_status(502)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">SERVICE_UNAVAILABLE</span>                   <span class=\"c1\"># HTTPExceptions.from_status(503)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">GATEWAY_TIMEOUT</span>                       <span class=\"c1\"># HTTPExceptions.from_status(504)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">HTTP_VERSION_NOT_SUPPORTED</span>            <span class=\"c1\"># HTTPExceptions.from_status(505)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">VARIANT_ALSO_NEGOTIATES</span>               <span class=\"c1\"># HTTPExceptions.from_status(506)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">INSUFFICIENT_STORAGE</span>                  <span class=\"c1\"># HTTPExceptions.from_status(507)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">LOOP_DETECTED</span>                         <span class=\"c1\"># HTTPExceptions.from_status(508)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">NOT_EXTENDED</span>                          <span class=\"c1\"># HTTPExceptions.from_status(510)</span>\n<span class=\"n\">HTTPExceptions</span><span class=\"o\">.</span><span class=\"n\">NETWORK_AUTHENTICATION_REQUIRED</span>       <span class=\"c1\"># HTTPExceptions.from_status(511)</span>\n</pre>\n\n          </div>"}, "last_serial": 6801346, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "11649bb765daca79e523ed73878bb2b7", "sha256": "e6a0d7564069fe52c6ec7aa25f63478ad2171e1b5051baca724a8e0600a5ece9"}, "downloads": -1, "filename": "django_http_exceptions-1.0.0.tar.gz", "has_sig": false, "md5_digest": "11649bb765daca79e523ed73878bb2b7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4350, "upload_time": "2019-05-03T12:46:15", "upload_time_iso_8601": "2019-05-03T12:46:15.426901Z", "url": "https://files.pythonhosted.org/packages/30/9e/3cc8197d532dfc9881925b4538b6dad4560540ee2da98caa7a2ffe33c41d/django_http_exceptions-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "f0a078a64ab421b3c2e4d3d502068f68", "sha256": "25053e80c8288470082c02390798ee868bea8d91d7e80529e4a1709bf6b6760e"}, "downloads": -1, "filename": "django_http_exceptions-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f0a078a64ab421b3c2e4d3d502068f68", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4995, "upload_time": "2019-05-03T13:15:43", "upload_time_iso_8601": "2019-05-03T13:15:43.618046Z", "url": "https://files.pythonhosted.org/packages/05/b4/2a7f1d9aa86588af573e4b1d8979c9229de6d4e4fa312d4fbbaae7484a87/django_http_exceptions-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "6f36d19dfaf9c74b5bbf91a2f4e73684", "sha256": "becbc992dbd84ec05f3ed35dd92bba037d81c5c3eadc6a235d2e3794472c7966"}, "downloads": -1, "filename": "django_http_exceptions-1.0.2.tar.gz", "has_sig": false, "md5_digest": "6f36d19dfaf9c74b5bbf91a2f4e73684", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5433, "upload_time": "2019-05-30T21:32:41", "upload_time_iso_8601": "2019-05-30T21:32:41.933188Z", "url": "https://files.pythonhosted.org/packages/5d/82/74e11e8647adfd4f73c17d56ab45d5c83774d105bc1d7b638b4cfb73ca16/django_http_exceptions-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "ea0bcc8c0c19ea118e2c2dabb35f821a", "sha256": "8dea6cba48e1306c444fbf2647cb920717499af747d6d1ac80c08844566c0d46"}, "downloads": -1, "filename": "django_http_exceptions-1.0.3.tar.gz", "has_sig": false, "md5_digest": "ea0bcc8c0c19ea118e2c2dabb35f821a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5429, "upload_time": "2019-07-11T13:19:26", "upload_time_iso_8601": "2019-07-11T13:19:26.679427Z", "url": "https://files.pythonhosted.org/packages/ec/1d/74c5a7ce156fa0c5e78480ed9ae14ebac18fd9c93cd9496b04691b484cd3/django_http_exceptions-1.0.3.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "cc6727d6907214c82fe509bca3fe71ae", "sha256": "4d468ac28a6b92db83d5467e520bc4ae4ae9bee773e185f6774fadc25760d9d2"}, "downloads": -1, "filename": "django_http_exceptions-1.1.0.tar.gz", "has_sig": false, "md5_digest": "cc6727d6907214c82fe509bca3fe71ae", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5874, "upload_time": "2019-07-24T04:20:33", "upload_time_iso_8601": "2019-07-24T04:20:33.814511Z", "url": "https://files.pythonhosted.org/packages/28/fd/5a6729516e0c5c9c180a166d88cb0569b940e497aa52e2ece21437054fb2/django_http_exceptions-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "5ee1e1db20318848bf6c9a4d15274c8e", "sha256": "65b9eda96eaf8e127aa3cf4502cf02a7f09f63f42e3b90397cfec1c61cc75f81"}, "downloads": -1, "filename": "django_http_exceptions-1.2.0.tar.gz", "has_sig": false, "md5_digest": "5ee1e1db20318848bf6c9a4d15274c8e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6256, "upload_time": "2019-09-04T01:24:06", "upload_time_iso_8601": "2019-09-04T01:24:06.330610Z", "url": "https://files.pythonhosted.org/packages/1d/53/2d1c9ed482b4c5fa35cd5adcd165b21936cc1eb5157a1ff341979dfba1e4/django_http_exceptions-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "ecf20da4e87974a2f8f3089f9c2a3916", "sha256": "0e02f071bf289cd8899d9b017ee7f511e004fdf87cafe4d046deb11d45a35ee7"}, "downloads": -1, "filename": "django_http_exceptions-1.3.0.tar.gz", "has_sig": false, "md5_digest": "ecf20da4e87974a2f8f3089f9c2a3916", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6304, "upload_time": "2020-03-12T19:18:20", "upload_time_iso_8601": "2020-03-12T19:18:20.722786Z", "url": "https://files.pythonhosted.org/packages/a8/b9/feafe3da864c776b3f50e13d0c4551bdf0d6d1649b48c6b2fc59fb0c70a4/django_http_exceptions-1.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ecf20da4e87974a2f8f3089f9c2a3916", "sha256": "0e02f071bf289cd8899d9b017ee7f511e004fdf87cafe4d046deb11d45a35ee7"}, "downloads": -1, "filename": "django_http_exceptions-1.3.0.tar.gz", "has_sig": false, "md5_digest": "ecf20da4e87974a2f8f3089f9c2a3916", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6304, "upload_time": "2020-03-12T19:18:20", "upload_time_iso_8601": "2020-03-12T19:18:20.722786Z", "url": "https://files.pythonhosted.org/packages/a8/b9/feafe3da864c776b3f50e13d0c4551bdf0d6d1649b48c6b2fc59fb0c70a4/django_http_exceptions-1.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:41 2020"}