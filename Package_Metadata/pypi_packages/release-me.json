{"info": {"author": "Tadej Borov\u0161ak", "author_email": "tadeboro@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "releaseme - small CLI client for Github release API\n===================================================\n\nCreating releases from browser can be a bit tedious if you already wrote the\nrelease notes and prepared packages in your beloved terminal. But fear not my\nfriend, this simple wrapper makes it possible to do the finishing touches\nwithout having to switch to the browser.\n\n\nQuickstart\n----------\n\nInstalling this package is as simple as running::\n\n    $ pip install release-me\n\nThis being out of the way, we must now obtain the personal access token that\nthis client will use to interact with Github's API. How to get one is neatly\ndescribed on `Github's personal access token page`_.\n\n.. _Github's personal access token page:\n    https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/\n\nNow that we created the token, we must inform our tool about it. We do this by\nsetting ``RELEASEME_TOKEN`` environment variable that contains the token::\n\n    $ export RELEASEME_TOKEN=our-token-from-github\n\nNow we are ready to create some releases (and then delete them once we\ndiscover that our code sucks and create them again once we fix most of the\nbugs). But before we can proceed, we must write down release notes::\n\n    $ cd /home/tadej/personal/release-me\n    $ cat <<EOF > release.notes\n    > This is the initial release of release-me package.\n    >\n    > I would like to say thank you to my kids for being a good sports and\n    > getting to bed early, which gives me time to write dummy release notes.\n    > EOF\n\nThat should do it. Now, we would also like to host our python package on\nrelease page, just because we can. So we will build a tarball that will be\nadded to release. You can leave out this step if adding assets to release is\nnot something you would like to do. So, building a package::\n\n    $ python setup.py sdist\n    running sdist\n    [pbr] Writing ChangeLog\n    [pbr] Generating ChangeLog\n    [pbr] ChangeLog complete (0.0s)\n    ...\n    Creating tar archive\n    removing 'release-me-0.3.0' (and everything under it)\n\nNow we can finally promote ``0.3.0`` tag in ``tadeboro/release-me`` repository\nto full release named *The best release ever*::\n\n    $ releaseme create -r tadeboro/release-me -t 0.3.0 -n release.notes \\\n    >   -l \"The best release ever\" -a dist/release-me-0.3.0.tar.gz\n    [INFO] - Creating release for tag tadeboro/release-me 0.3.0\n    [INFO] - Uploading asset dist/release-me-0.3.0.tar.gz for 5837083\n\nAnd this is it. We are done.\n\nWe can have a look at the fruits of our labor by running ``get`` command. Yep,\nwe have a get command to::\n\n    $ releaseme get -r tadeboro/release-me -t 0.3.0\n    [INFO] - Getting release for tag 0.3.0\n    {\n      \"created_at\": \"2016-07-17T16:58:03Z\",\n    ...\n      \"url\": \"https://api.github.com/repos/tadeboro/release-me/releases/5837083\",\n      \"zipball_url\": \"https://api.github.com/repos/tadeboro/release-me/zipball/0.3.0\"\n    }\n\nAnd when we realize that releasing our code after drinking n beers was not the\nbrightest idea we had this week, we can remove the release by running::\n\n    $ releaseme delete -r tadeboro/release-me -t 0.3.0\n    [INFO] - Getting release for tag 0.3.0\n    [INFO] - Deleting release for tag 0.3.0\n\n\nMore documentation\n------------------\n\nThere is no more documentation. If you feel you need more information, feel\nfree to read the sources.\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tadeboro/release-me", "keywords": "", "license": "Apache-2", "maintainer": "", "maintainer_email": "", "name": "release-me", "package_url": "https://pypi.org/project/release-me/", "platform": "", "project_url": "https://pypi.org/project/release-me/", "project_urls": {"Homepage": "https://github.com/tadeboro/release-me"}, "release_url": "https://pypi.org/project/release-me/0.3.1/", "requires_dist": ["requests (>=2.10,<3)"], "requires_python": "", "summary": "Simple Github CLI release helper", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Creating releases from browser can be a bit tedious if you already wrote the\nrelease notes and prepared packages in your beloved terminal. But fear not my\nfriend, this simple wrapper makes it possible to do the finishing touches\nwithout having to switch to the browser.</p>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Installing this package is as simple as running:</p>\n<pre>$ pip install release-me\n</pre>\n<p>This being out of the way, we must now obtain the personal access token that\nthis client will use to interact with Github\u2019s API. How to get one is neatly\ndescribed on <a href=\"https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/\" rel=\"nofollow\">Github\u2019s personal access token page</a>.</p>\n<p>Now that we created the token, we must inform our tool about it. We do this by\nsetting <tt>RELEASEME_TOKEN</tt> environment variable that contains the token:</p>\n<pre>$ export RELEASEME_TOKEN=our-token-from-github\n</pre>\n<p>Now we are ready to create some releases (and then delete them once we\ndiscover that our code sucks and create them again once we fix most of the\nbugs). But before we can proceed, we must write down release notes:</p>\n<pre>$ cd /home/tadej/personal/release-me\n$ cat &lt;&lt;EOF &gt; release.notes\n&gt; This is the initial release of release-me package.\n&gt;\n&gt; I would like to say thank you to my kids for being a good sports and\n&gt; getting to bed early, which gives me time to write dummy release notes.\n&gt; EOF\n</pre>\n<p>That should do it. Now, we would also like to host our python package on\nrelease page, just because we can. So we will build a tarball that will be\nadded to release. You can leave out this step if adding assets to release is\nnot something you would like to do. So, building a package:</p>\n<pre>$ python setup.py sdist\nrunning sdist\n[pbr] Writing ChangeLog\n[pbr] Generating ChangeLog\n[pbr] ChangeLog complete (0.0s)\n...\nCreating tar archive\nremoving 'release-me-0.3.0' (and everything under it)\n</pre>\n<p>Now we can finally promote <tt>0.3.0</tt> tag in <tt><span class=\"pre\">tadeboro/release-me</span></tt> repository\nto full release named <em>The best release ever</em>:</p>\n<pre>$ releaseme create -r tadeboro/release-me -t 0.3.0 -n release.notes \\\n&gt;   -l \"The best release ever\" -a dist/release-me-0.3.0.tar.gz\n[INFO] - Creating release for tag tadeboro/release-me 0.3.0\n[INFO] - Uploading asset dist/release-me-0.3.0.tar.gz for 5837083\n</pre>\n<p>And this is it. We are done.</p>\n<p>We can have a look at the fruits of our labor by running <tt>get</tt> command. Yep,\nwe have a get command to:</p>\n<pre>$ releaseme get -r tadeboro/release-me -t 0.3.0\n[INFO] - Getting release for tag 0.3.0\n{\n  \"created_at\": \"2016-07-17T16:58:03Z\",\n...\n  \"url\": \"https://api.github.com/repos/tadeboro/release-me/releases/5837083\",\n  \"zipball_url\": \"https://api.github.com/repos/tadeboro/release-me/zipball/0.3.0\"\n}\n</pre>\n<p>And when we realize that releasing our code after drinking n beers was not the\nbrightest idea we had this week, we can remove the release by running:</p>\n<pre>$ releaseme delete -r tadeboro/release-me -t 0.3.0\n[INFO] - Getting release for tag 0.3.0\n[INFO] - Deleting release for tag 0.3.0\n</pre>\n</div>\n<div id=\"more-documentation\">\n<h2>More documentation</h2>\n<p>There is no more documentation. If you feel you need more information, feel\nfree to read the sources.</p>\n</div>\n\n          </div>"}, "last_serial": 3228106, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "3cffb5f0acbcdc34d347ee35517407dd", "sha256": "f24e5b60064bc2b2958a690497d013ed70f77075576cd9b5c9ab92e34b5cd157"}, "downloads": -1, "filename": "release_me-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3cffb5f0acbcdc34d347ee35517407dd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9555, "upload_time": "2017-03-22T21:32:14", "upload_time_iso_8601": "2017-03-22T21:32:14.785538Z", "url": "https://files.pythonhosted.org/packages/8a/09/e82ccf49ce58603a11f9ce701f0655be8736d8dc3b280d71a44dcc8fc247/release_me-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a1b6ec8648402bc17f6cdc114298ce5", "sha256": "91db6c793fd9ea3116559c1e66e5edfbd473dd927255a001ef3b3c21856c8238"}, "downloads": -1, "filename": "release-me-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2a1b6ec8648402bc17f6cdc114298ce5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9377, "upload_time": "2017-03-23T19:20:21", "upload_time_iso_8601": "2017-03-23T19:20:21.430559Z", "url": "https://files.pythonhosted.org/packages/9e/e1/30d4a0e2f026c208999baa687f92952ddc70a3ebf3c3bcf48745b08c2ddd/release-me-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "fd10c3f22716b33f8e15fa10b95d1127", "sha256": "5961332ade9b96f3517776bf2d23a1a41236ea0838bf533bcdcd25d16ecca7d6"}, "downloads": -1, "filename": "release_me-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fd10c3f22716b33f8e15fa10b95d1127", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9637, "upload_time": "2017-10-05T14:51:01", "upload_time_iso_8601": "2017-10-05T14:51:01.716226Z", "url": "https://files.pythonhosted.org/packages/27/a9/e2cd402c96e9df3afaa6e71ed1b9f6af2d7b369c935822d8b89eae8c433a/release_me-0.3.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fd10c3f22716b33f8e15fa10b95d1127", "sha256": "5961332ade9b96f3517776bf2d23a1a41236ea0838bf533bcdcd25d16ecca7d6"}, "downloads": -1, "filename": "release_me-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fd10c3f22716b33f8e15fa10b95d1127", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9637, "upload_time": "2017-10-05T14:51:01", "upload_time_iso_8601": "2017-10-05T14:51:01.716226Z", "url": "https://files.pythonhosted.org/packages/27/a9/e2cd402c96e9df3afaa6e71ed1b9f6af2d7b369c935822d8b89eae8c433a/release_me-0.3.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:05:02 2020"}