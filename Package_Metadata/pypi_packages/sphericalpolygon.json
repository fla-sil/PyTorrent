{"info": {"author": "Chunxiao Li", "author_email": "lcx366@126.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7"], "description": "\n\n# Welcome to the SphericalPolygon package\n\nThe SphericalPolygon package is an archive of scientific routines for handling spherical polygons. Currently, operations on spherical polygons include:\nCurrently, operations on spherical polygons include:\n\n1. calculate the area or mass(if the area density is given) \n2. calculate the perimeter\n3. identify the location of the centroid \n4. compute the geometrical or physical moment of inertia tensor\n5. determine whether one or more points are inside the spherical polygon\n\n## How to Install\n\nSphericalPolygon can be installed with `pip install sphericalpolygon`.\n\n## How to use\n\n### Create a spherical polygon\n\nSpherical polygons can be created based on a self-defined 2d array in form of `[[lat_0,lon_0],..,[lat_n,lon_n]]` with unit of degrees or a boundary file, such as [Plate boundaries for NNR-MORVEL56 model](http://geoscience.wisc.edu/~chuck/MORVEL/PltBoundaries.html). The spherical polygon has a latitude range of [-90,90] and a longitude range of [-180,180] or [0,360].\n\n```python\n>>> import numpy as np\n>>> from sphericalpolygon import create_polygon\n>>> boundary = np.loadtxt('NnrMRVL_PltBndsLatLon/an',skiprows=1) # boundary for Antarctica Plate\n>>> polygon = create_polygon(boundary)\n>>> print(polygon.orientation)\nCounterclockwise\n```\n\nIt shows that the orientation of the spherical polygon are counterclockwise. For more details on attributes and methods of the polygon object, please refer to  `polygon?`.\n\n### Calculate the area\n\nCalculate the area(or the solid angle) of a spherical polygon over a unit sphere.\n\n```python\n>>> print(polygon.area())\n1.4326235943514618\n```\n\nCalculate the area of a spherical polygon over a sphere with a radius of 6378.137km.\n\n```python\n>>> print(polygon.area(6378.137), ' km2')\n58280032.6500551  km2\n```\n\nCalculate the mass of a spherical polygon with an area density of 81Gt/km2 over a sphere with a radius of 6378.137km.\n\n```python\n>>> print(polygon.area(6378.137,81), ' Gt')\n4720682644.654464  Gt\n```\n\n### Calculate the perimeter\n\nCalculate the perimeter of a spherical polygon over a unit sphere.\n\n```python\n>>> print(polygon.perimeter())\n6.322665894174974\n```\n\nCalculate the perimeter of a spherical polygon over a sphere with a radius of 6378.137km.\n\n```python\n>>> print(polygon.perimeter(6378.137), ' km')\n40326.82927827548  km\n```\n\n### Identify the location of the centroid\n\nIdentify the centroid of a spherical polygon over a unit sphere.\n\n```python\n>>> print(polygon.centroid())\n[-83.61081032380656, 57.80052886741483, 0.13827778179537997]\n```\n\nIdentify the centroid of a spherical polygon over a sphere with a radius of 6378.137km.\n\n```python\n>>> print(polygon.centroid(6378.137),' deg deg km')\n[-83.61081032380656, 57.80052886741483, 881.9546363470394]  deg deg km\n```\n\nIt shows that the latitude of the centroid is close to the South Pole, and the centroid is located about 882km underground.\n\n### Compute the moment of inertia tensor\n\nCompute the geometrical moment of inertia tensor of a spherical polygon over a unit sphere. The tensor is symmetrical and has six independent components. The first three components are located diagonally, corresponding to $Q_{11}$, $Q_{22}$, and $Q_{33}$; the last three components correspond to $Q_{12}$, $Q_{13}$, and $Q_{23}$.\n\n```python\n>>> print(polygon.inertia())\n[ 1.32669154  1.17471081  0.36384484 -0.05095381  0.05246122  0.08126929]\n```\n\nCompute the physical moment of inertia tensor of a spherical polygon with an area density of 81Gt/km2 over a sphere with a radius of 6378.137km. \n\n```python\n>>> print(polygon.inertia(6378.127,81)/1e12, ' Gt\u00b7Gm2')\n[177839.25501653 157466.66651681  48772.37278617  -6830.21381414\n   7032.2786668   10893.9188177 ]  Gt\u00b7Gm2\n```\n\n### Points are inside the polygon\uff1f\n\n Determine if a single point or multiple points are inside a given spherical polygon.\n\n#### single point\n\n```python\n>>> print(polygon.contains_points([75,152]))\nFalse\n```\n\n#### multiple points\n\n```python\n>>> print(polygon.contains_points([[-85,130],[35,70]]))\n[True, False]\n```\n\n### Change log\n\n- **1.2.0 \u2014 Mar 20,  2020**\n  - Added a `perimeter()`  method that calculates the perimeter of a spherical polygon.\n  - Added a `centroid()`  method that determaines the centroid location for a spherical polygon.\n\n## Reference\n\nChunxiao, Li. \"Inertia Tensor for MORVEL Tectonic Plates.\" *ASTRONOMICAL RESEARCH AND TECHNOLOGY* 13.1 (2016).\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lcx366/SphericalPolygon", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sphericalpolygon", "package_url": "https://pypi.org/project/sphericalpolygon/", "platform": "", "project_url": "https://pypi.org/project/sphericalpolygon/", "project_urls": {"Homepage": "https://github.com/lcx366/SphericalPolygon"}, "release_url": "https://pypi.org/project/sphericalpolygon/1.2.0/", "requires_dist": ["scipy", "numpy", "astropy"], "requires_python": "", "summary": "A package to handle the spherical polygon", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Welcome to the SphericalPolygon package</h1>\n<p>The SphericalPolygon package is an archive of scientific routines for handling spherical polygons. Currently, operations on spherical polygons include:\nCurrently, operations on spherical polygons include:</p>\n<ol>\n<li>calculate the area or mass(if the area density is given)</li>\n<li>calculate the perimeter</li>\n<li>identify the location of the centroid</li>\n<li>compute the geometrical or physical moment of inertia tensor</li>\n<li>determine whether one or more points are inside the spherical polygon</li>\n</ol>\n<h2>How to Install</h2>\n<p>SphericalPolygon can be installed with <code>pip install sphericalpolygon</code>.</p>\n<h2>How to use</h2>\n<h3>Create a spherical polygon</h3>\n<p>Spherical polygons can be created based on a self-defined 2d array in form of <code>[[lat_0,lon_0],..,[lat_n,lon_n]]</code> with unit of degrees or a boundary file, such as <a href=\"http://geoscience.wisc.edu/%7Echuck/MORVEL/PltBoundaries.html\" rel=\"nofollow\">Plate boundaries for NNR-MORVEL56 model</a>. The spherical polygon has a latitude range of [-90,90] and a longitude range of [-180,180] or [0,360].</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">sphericalpolygon</span> <span class=\"kn\">import</span> <span class=\"n\">create_polygon</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">boundary</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"s1\">'NnrMRVL_PltBndsLatLon/an'</span><span class=\"p\">,</span><span class=\"n\">skiprows</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"c1\"># boundary for Antarctica Plate</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">polygon</span> <span class=\"o\">=</span> <span class=\"n\">create_polygon</span><span class=\"p\">(</span><span class=\"n\">boundary</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">orientation</span><span class=\"p\">)</span>\n<span class=\"n\">Counterclockwise</span>\n</pre>\n<p>It shows that the orientation of the spherical polygon are counterclockwise. For more details on attributes and methods of the polygon object, please refer to  <code>polygon?</code>.</p>\n<h3>Calculate the area</h3>\n<p>Calculate the area(or the solid angle) of a spherical polygon over a unit sphere.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">area</span><span class=\"p\">())</span>\n<span class=\"mf\">1.4326235943514618</span>\n</pre>\n<p>Calculate the area of a spherical polygon over a sphere with a radius of 6378.137km.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">area</span><span class=\"p\">(</span><span class=\"mf\">6378.137</span><span class=\"p\">),</span> <span class=\"s1\">' km2'</span><span class=\"p\">)</span>\n<span class=\"mf\">58280032.6500551</span>  <span class=\"n\">km2</span>\n</pre>\n<p>Calculate the mass of a spherical polygon with an area density of 81Gt/km2 over a sphere with a radius of 6378.137km.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">area</span><span class=\"p\">(</span><span class=\"mf\">6378.137</span><span class=\"p\">,</span><span class=\"mi\">81</span><span class=\"p\">),</span> <span class=\"s1\">' Gt'</span><span class=\"p\">)</span>\n<span class=\"mf\">4720682644.654464</span>  <span class=\"n\">Gt</span>\n</pre>\n<h3>Calculate the perimeter</h3>\n<p>Calculate the perimeter of a spherical polygon over a unit sphere.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">perimeter</span><span class=\"p\">())</span>\n<span class=\"mf\">6.322665894174974</span>\n</pre>\n<p>Calculate the perimeter of a spherical polygon over a sphere with a radius of 6378.137km.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">perimeter</span><span class=\"p\">(</span><span class=\"mf\">6378.137</span><span class=\"p\">),</span> <span class=\"s1\">' km'</span><span class=\"p\">)</span>\n<span class=\"mf\">40326.82927827548</span>  <span class=\"n\">km</span>\n</pre>\n<h3>Identify the location of the centroid</h3>\n<p>Identify the centroid of a spherical polygon over a unit sphere.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">centroid</span><span class=\"p\">())</span>\n<span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">83.61081032380656</span><span class=\"p\">,</span> <span class=\"mf\">57.80052886741483</span><span class=\"p\">,</span> <span class=\"mf\">0.13827778179537997</span><span class=\"p\">]</span>\n</pre>\n<p>Identify the centroid of a spherical polygon over a sphere with a radius of 6378.137km.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">centroid</span><span class=\"p\">(</span><span class=\"mf\">6378.137</span><span class=\"p\">),</span><span class=\"s1\">' deg deg km'</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">83.61081032380656</span><span class=\"p\">,</span> <span class=\"mf\">57.80052886741483</span><span class=\"p\">,</span> <span class=\"mf\">881.9546363470394</span><span class=\"p\">]</span>  <span class=\"n\">deg</span> <span class=\"n\">deg</span> <span class=\"n\">km</span>\n</pre>\n<p>It shows that the latitude of the centroid is close to the South Pole, and the centroid is located about 882km underground.</p>\n<h3>Compute the moment of inertia tensor</h3>\n<p>Compute the geometrical moment of inertia tensor of a spherical polygon over a unit sphere. The tensor is symmetrical and has six independent components. The first three components are located diagonally, corresponding to $Q_{11}$, $Q_{22}$, and $Q_{33}$; the last three components correspond to $Q_{12}$, $Q_{13}$, and $Q_{23}$.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">inertia</span><span class=\"p\">())</span>\n<span class=\"p\">[</span> <span class=\"mf\">1.32669154</span>  <span class=\"mf\">1.17471081</span>  <span class=\"mf\">0.36384484</span> <span class=\"o\">-</span><span class=\"mf\">0.05095381</span>  <span class=\"mf\">0.05246122</span>  <span class=\"mf\">0.08126929</span><span class=\"p\">]</span>\n</pre>\n<p>Compute the physical moment of inertia tensor of a spherical polygon with an area density of 81Gt/km2 over a sphere with a radius of 6378.137km.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">inertia</span><span class=\"p\">(</span><span class=\"mf\">6378.127</span><span class=\"p\">,</span><span class=\"mi\">81</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">1e12</span><span class=\"p\">,</span> <span class=\"s1\">' Gt\u00b7Gm2'</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"mf\">177839.25501653</span> <span class=\"mf\">157466.66651681</span>  <span class=\"mf\">48772.37278617</span>  <span class=\"o\">-</span><span class=\"mf\">6830.21381414</span>\n   <span class=\"mf\">7032.2786668</span>   <span class=\"mf\">10893.9188177</span> <span class=\"p\">]</span>  <span class=\"n\">Gt\u00b7Gm2</span>\n</pre>\n<h3>Points are inside the polygon\uff1f</h3>\n<p>Determine if a single point or multiple points are inside a given spherical polygon.</p>\n<h4>single point</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">contains_points</span><span class=\"p\">([</span><span class=\"mi\">75</span><span class=\"p\">,</span><span class=\"mi\">152</span><span class=\"p\">]))</span>\n<span class=\"kc\">False</span>\n</pre>\n<h4>multiple points</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">polygon</span><span class=\"o\">.</span><span class=\"n\">contains_points</span><span class=\"p\">([[</span><span class=\"o\">-</span><span class=\"mi\">85</span><span class=\"p\">,</span><span class=\"mi\">130</span><span class=\"p\">],[</span><span class=\"mi\">35</span><span class=\"p\">,</span><span class=\"mi\">70</span><span class=\"p\">]]))</span>\n<span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">]</span>\n</pre>\n<h3>Change log</h3>\n<ul>\n<li><strong>1.2.0 \u2014 Mar 20,  2020</strong>\n<ul>\n<li>Added a <code>perimeter()</code>  method that calculates the perimeter of a spherical polygon.</li>\n<li>Added a <code>centroid()</code>  method that determaines the centroid location for a spherical polygon.</li>\n</ul>\n</li>\n</ul>\n<h2>Reference</h2>\n<p>Chunxiao, Li. \"Inertia Tensor for MORVEL Tectonic Plates.\" <em>ASTRONOMICAL RESEARCH AND TECHNOLOGY</em> 13.1 (2016).</p>\n\n          </div>"}, "last_serial": 6848544, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "07b827c2c603b32f8e1dde2b458a4701", "sha256": "e2c7b933da39bb76b5a3e17e5cfc468c7299975268cbbab4605edc6b295660ae"}, "downloads": -1, "filename": "sphericalpolygon-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "07b827c2c603b32f8e1dde2b458a4701", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10376, "upload_time": "2020-01-10T14:32:25", "upload_time_iso_8601": "2020-01-10T14:32:25.289002Z", "url": "https://files.pythonhosted.org/packages/b1/fa/f64a94087cba583f65e4d0eea7657f23333f395773c04a9f3b530aedefde/sphericalpolygon-1.0.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "b3ddecaee642e66629120b2e8c7dd6f4", "sha256": "1b2ef3512a7c17a2b411f8cc979b8f2d4b6ff76224b0fb91b4725d0e5272c6f0"}, "downloads": -1, "filename": "sphericalpolygon-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b3ddecaee642e66629120b2e8c7dd6f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10526, "upload_time": "2020-01-12T14:14:00", "upload_time_iso_8601": "2020-01-12T14:14:00.095809Z", "url": "https://files.pythonhosted.org/packages/ab/d9/67036053ee65e956e65c4794390e3abf4c2bb2bbeebd95ff61b60e3c187b/sphericalpolygon-1.0.1-py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "57448089cd332189ab7a1b91f45930bf", "sha256": "6d65fdb3acb2b2844d3bc65df23cb241d70672aa7bd62a2933dd8296665a8049"}, "downloads": -1, "filename": "sphericalpolygon-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "57448089cd332189ab7a1b91f45930bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11437, "upload_time": "2020-03-19T08:17:32", "upload_time_iso_8601": "2020-03-19T08:17:32.413902Z", "url": "https://files.pythonhosted.org/packages/a4/a7/a8dbd9d992a440909c873162ffb4f875e7d26b5ef6351434ee8ff9f477b2/sphericalpolygon-1.1.0-py3-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "76727ad8852315e77837d0afb87655c8", "sha256": "b038e3b43750ec56e1c58c11b4976538e506af0cab94871eaf42d9cf902b5790"}, "downloads": -1, "filename": "sphericalpolygon-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "76727ad8852315e77837d0afb87655c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13021, "upload_time": "2020-03-20T09:08:27", "upload_time_iso_8601": "2020-03-20T09:08:27.280407Z", "url": "https://files.pythonhosted.org/packages/97/21/81290462f942f42c02433ccba137b50f5e114a2e61a628053304b6fb7553/sphericalpolygon-1.2.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "76727ad8852315e77837d0afb87655c8", "sha256": "b038e3b43750ec56e1c58c11b4976538e506af0cab94871eaf42d9cf902b5790"}, "downloads": -1, "filename": "sphericalpolygon-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "76727ad8852315e77837d0afb87655c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13021, "upload_time": "2020-03-20T09:08:27", "upload_time_iso_8601": "2020-03-20T09:08:27.280407Z", "url": "https://files.pythonhosted.org/packages/97/21/81290462f942f42c02433ccba137b50f5e114a2e61a628053304b6fb7553/sphericalpolygon-1.2.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:05:26 2020"}