{"info": {"author": "Aeneas", "author_email": "kai.he@taraxa.io", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "# taraxa-py\n\nTaraxa RPC client in python.  \n\ntaraxa-py pypi address: [taraxa-py](https://pypi.org/project/taraxa-py/)  \n\nTaraxa official website: [taraxa.io](https://taraxa.io)  \n## install\n```\ngit clone https://github.com/Taraxa-project/taraxa-py\ncd taraxa-py\npython setup.py install\n```\nor\n```\npip install taraxa-py\n```\n## config  \n\ndefault parameters:  \n``` python\nconfig={\n    \"ip\":\"127.0.0.1\",  \n    \"port\":7777,  \n    \"jsonrpc\":2.0,  \n    \"id\":1\n}\n```\nfor all methods, if no parameter given, default will be used.\n\n1. package level config set and reset.  \nany of below config will influence the whole packge.\n``` python\nimport taraxa.jsonrpc as rpc\nimport taraxa.eth as eth\nimport taraxa.taraxa as taraxa\nimport taraxa.net as net\n\nrpc.set({\n    \"ip\":\"127.0.0.1\",  \n    \"port\":7777,  \n    \"jsonrpc\":2.0,  \n    \"id\":1 \n})\n\neth.set({\n    \"ip\":\"35.224.183.106\",  \n})\ntaraxa.set({\n    \"ip\":\"35.224.183.106\",  \n})\nnet.set({\n    \"ip\":\"35.224.183.106\",  \n})\n\nrpc.reset()\neth.reset()\ntaraxa.reset()\nnet.reset()\n```\n2. function level config set  \nfunction level config set only influence the function it self once.\n``` python\nimport taraxa.eth as eth\nr=eth.blockNumber(ip='127.0.0.1' ,port=7777)\nprint(r)\n```\n\n## usage\n\n\n\n\n\n- low level use\n``` python\nimport taraxa.jsonrpc as rpc\ndata = '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}'\nr = rpc.send(data)\nprint(r)\n\ndata = {\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}\nr = rpc.send(data)\nprint(r)\n```\ndata can be json string or dict. response is json string.\n- middle level use\n``` python\nfrom taraxa.jsonrpc  import *\nr = eth_blockNumber()\nprint(r)\n```\nresponse is json string.\n- high level use\n``` python\nimport taraxa.eth as eth\nr = eth.blockNumber()\nprint(r)\n```\nresponse is parsed to python types.\n- ethereum web3 like use  \n\n``` python\nfrom taraxa.web3 import Web3\nw3 = Web3(ip=\"35.224.183.106\" ,port=7777)\nr = w3.blockNumber()\nprint(r)\n\nw3.ip = \"35.224.183.106\"\nw3.port = 7778\nr = w3.blockNumber()\nprint(r)\n```\nWeb3 object w3 will hold the ip and port once you set.   \nw3 method will use the ip and port you set until you reset it.\n## sub packages\n- jsonrpc  \n- eth  \n- web3  \n- net  \nTODO\n- admin  \nTODO\n- admmin_net  \nTODO\n- debug  \nTODO\n- test  \nTODO\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://taraxa.io", "keywords": "Taraxa blockchain RPC client", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "taraxa-py", "package_url": "https://pypi.org/project/taraxa-py/", "platform": "", "project_url": "https://pypi.org/project/taraxa-py/", "project_urls": {"Homepage": "http://taraxa.io"}, "release_url": "https://pypi.org/project/taraxa-py/0.0.5/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Taraxa blockchain  RPC client.", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>taraxa-py</h1>\n<p>Taraxa RPC client in python.</p>\n<p>taraxa-py pypi address: <a href=\"https://pypi.org/project/taraxa-py/\" rel=\"nofollow\">taraxa-py</a></p>\n<p>Taraxa official website: <a href=\"https://taraxa.io\" rel=\"nofollow\">taraxa.io</a></p>\n<h2>install</h2>\n<pre><code>git clone https://github.com/Taraxa-project/taraxa-py\ncd taraxa-py\npython setup.py install\n</code></pre>\n<p>or</p>\n<pre><code>pip install taraxa-py\n</code></pre>\n<h2>config</h2>\n<p>default parameters:</p>\n<pre><span class=\"n\">config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s2\">\"ip\"</span><span class=\"p\">:</span><span class=\"s2\">\"127.0.0.1\"</span><span class=\"p\">,</span>  \n    <span class=\"s2\">\"port\"</span><span class=\"p\">:</span><span class=\"mi\">7777</span><span class=\"p\">,</span>  \n    <span class=\"s2\">\"jsonrpc\"</span><span class=\"p\">:</span><span class=\"mf\">2.0</span><span class=\"p\">,</span>  \n    <span class=\"s2\">\"id\"</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n<span class=\"p\">}</span>\n</pre>\n<p>for all methods, if no parameter given, default will be used.</p>\n<ol>\n<li>package level config set and reset.<br>\nany of below config will influence the whole packge.</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">taraxa.jsonrpc</span> <span class=\"k\">as</span> <span class=\"nn\">rpc</span>\n<span class=\"kn\">import</span> <span class=\"nn\">taraxa.eth</span> <span class=\"k\">as</span> <span class=\"nn\">eth</span>\n<span class=\"kn\">import</span> <span class=\"nn\">taraxa.taraxa</span> <span class=\"k\">as</span> <span class=\"nn\">taraxa</span>\n<span class=\"kn\">import</span> <span class=\"nn\">taraxa.net</span> <span class=\"k\">as</span> <span class=\"nn\">net</span>\n\n<span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"ip\"</span><span class=\"p\">:</span><span class=\"s2\">\"127.0.0.1\"</span><span class=\"p\">,</span>  \n    <span class=\"s2\">\"port\"</span><span class=\"p\">:</span><span class=\"mi\">7777</span><span class=\"p\">,</span>  \n    <span class=\"s2\">\"jsonrpc\"</span><span class=\"p\">:</span><span class=\"mf\">2.0</span><span class=\"p\">,</span>  \n    <span class=\"s2\">\"id\"</span><span class=\"p\">:</span><span class=\"mi\">1</span> \n<span class=\"p\">})</span>\n\n<span class=\"n\">eth</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"ip\"</span><span class=\"p\">:</span><span class=\"s2\">\"35.224.183.106\"</span><span class=\"p\">,</span>  \n<span class=\"p\">})</span>\n<span class=\"n\">taraxa</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"ip\"</span><span class=\"p\">:</span><span class=\"s2\">\"35.224.183.106\"</span><span class=\"p\">,</span>  \n<span class=\"p\">})</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"ip\"</span><span class=\"p\">:</span><span class=\"s2\">\"35.224.183.106\"</span><span class=\"p\">,</span>  \n<span class=\"p\">})</span>\n\n<span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n<span class=\"n\">eth</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n<span class=\"n\">taraxa</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n<span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n</pre>\n<ol>\n<li>function level config set<br>\nfunction level config set only influence the function it self once.</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">taraxa.eth</span> <span class=\"k\">as</span> <span class=\"nn\">eth</span>\n<span class=\"n\">r</span><span class=\"o\">=</span><span class=\"n\">eth</span><span class=\"o\">.</span><span class=\"n\">blockNumber</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"s1\">'127.0.0.1'</span> <span class=\"p\">,</span><span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">7777</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n</pre>\n<h2>usage</h2>\n<ul>\n<li>low level use</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">taraxa.jsonrpc</span> <span class=\"k\">as</span> <span class=\"nn\">rpc</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"s1\">'{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}'</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"jsonrpc\"</span><span class=\"p\">:</span><span class=\"s2\">\"2.0\"</span><span class=\"p\">,</span><span class=\"s2\">\"method\"</span><span class=\"p\">:</span><span class=\"s2\">\"eth_blockNumber\"</span><span class=\"p\">,</span><span class=\"s2\">\"params\"</span><span class=\"p\">:[],</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">}</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n</pre>\n<p>data can be json string or dict. response is json string.</p>\n<ul>\n<li>middle level use</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">taraxa.jsonrpc</span>  <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">eth_blockNumber</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n</pre>\n<p>response is json string.</p>\n<ul>\n<li>high level use</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">taraxa.eth</span> <span class=\"k\">as</span> <span class=\"nn\">eth</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">eth</span><span class=\"o\">.</span><span class=\"n\">blockNumber</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n</pre>\n<p>response is parsed to python types.</p>\n<ul>\n<li>ethereum web3 like use</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">taraxa.web3</span> <span class=\"kn\">import</span> <span class=\"n\">Web3</span>\n<span class=\"n\">w3</span> <span class=\"o\">=</span> <span class=\"n\">Web3</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"s2\">\"35.224.183.106\"</span> <span class=\"p\">,</span><span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">7777</span><span class=\"p\">)</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">w3</span><span class=\"o\">.</span><span class=\"n\">blockNumber</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n\n<span class=\"n\">w3</span><span class=\"o\">.</span><span class=\"n\">ip</span> <span class=\"o\">=</span> <span class=\"s2\">\"35.224.183.106\"</span>\n<span class=\"n\">w3</span><span class=\"o\">.</span><span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"mi\">7778</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">w3</span><span class=\"o\">.</span><span class=\"n\">blockNumber</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n</pre>\n<p>Web3 object w3 will hold the ip and port once you set.<br>\nw3 method will use the ip and port you set until you reset it.</p>\n<h2>sub packages</h2>\n<ul>\n<li>jsonrpc</li>\n<li>eth</li>\n<li>web3</li>\n<li>net<br>\nTODO</li>\n<li>admin<br>\nTODO</li>\n<li>admmin_net<br>\nTODO</li>\n<li>debug<br>\nTODO</li>\n<li>test<br>\nTODO</li>\n</ul>\n\n          </div>"}, "last_serial": 6693261, "releases": {"0.0.5": [{"comment_text": "", "digests": {"md5": "afed8a73e5caec98ca9e83a5068131e1", "sha256": "587635ccb23f6ae243c31db381ff148888e8666f5ac6ece39b57bfa0c55bfc08"}, "downloads": -1, "filename": "taraxa_py-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "afed8a73e5caec98ca9e83a5068131e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 16319, "upload_time": "2020-02-24T23:07:38", "upload_time_iso_8601": "2020-02-24T23:07:38.890418Z", "url": "https://files.pythonhosted.org/packages/cf/12/0c911ff9fe10768b2163db1f42c140e98e10a8fa0e50922fb8f26de9daaa/taraxa_py-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcd89391a7da26681e8b39951acbf6e8", "sha256": "be91588abb785c9e208d66b8adac770198298422aae10401893ccc142b3dc19b"}, "downloads": -1, "filename": "taraxa-py-0.0.5.tar.gz", "has_sig": false, "md5_digest": "fcd89391a7da26681e8b39951acbf6e8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11315, "upload_time": "2020-02-24T23:07:41", "upload_time_iso_8601": "2020-02-24T23:07:41.198891Z", "url": "https://files.pythonhosted.org/packages/d7/32/7bde8e2e587e8ffa3cd0713a3674b2f276ed83a7c28d8aeaf0ae28418663/taraxa-py-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "afed8a73e5caec98ca9e83a5068131e1", "sha256": "587635ccb23f6ae243c31db381ff148888e8666f5ac6ece39b57bfa0c55bfc08"}, "downloads": -1, "filename": "taraxa_py-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "afed8a73e5caec98ca9e83a5068131e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 16319, "upload_time": "2020-02-24T23:07:38", "upload_time_iso_8601": "2020-02-24T23:07:38.890418Z", "url": "https://files.pythonhosted.org/packages/cf/12/0c911ff9fe10768b2163db1f42c140e98e10a8fa0e50922fb8f26de9daaa/taraxa_py-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcd89391a7da26681e8b39951acbf6e8", "sha256": "be91588abb785c9e208d66b8adac770198298422aae10401893ccc142b3dc19b"}, "downloads": -1, "filename": "taraxa-py-0.0.5.tar.gz", "has_sig": false, "md5_digest": "fcd89391a7da26681e8b39951acbf6e8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11315, "upload_time": "2020-02-24T23:07:41", "upload_time_iso_8601": "2020-02-24T23:07:41.198891Z", "url": "https://files.pythonhosted.org/packages/d7/32/7bde8e2e587e8ffa3cd0713a3674b2f276ed83a7c28d8aeaf0ae28418663/taraxa-py-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:57 2020"}