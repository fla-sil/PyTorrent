{"info": {"author": "Gaudenz Steinlin", "author_email": "gaudenz@durcheinandertal.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: System :: Hardware :: Hardware Drivers"], "description": "SportIdent Reader\r\n=================\r\n\r\nSireader is a python module to communicate with a SportIdent main station to\r\nread out SportIdent cards. SportIdent is an electronic punching system mainly\r\nused for orienteering events.\r\n\r\nSireader supports two major operation modes. It can be used for complete card\r\nreadout or in control station mode to send punches from a control. The first mode\r\nis typically used for card readout after the finish line to read the card data\r\ninto an event software. The second mode is used to get live result from an\r\nintermediate control.\r\n\r\nWebsite: http://bosco.durcheinandertal.ch/\r\n\r\nGIT Repository: https://github.com/gaudenz/sireader/\r\n\r\nUsage\r\n-----\r\n\r\nThere are 3 classes in the sireader module. **SIReader** is the base class\r\ncontaining common functions. It's imported to have easy access to it's\r\nconstants. **SIReaderReadout** implements classical card readout.\r\n**SIReaderControl** implements a station configured as control which\r\ncontinuously sends punches.\r\n\r\nFirst import the relevant classes::\r\n\r\n  from sireader import SIReader, SIReaderReadout, SIReaderControl\r\n\r\nSIReader only supports the so called \"Extended Protocol\" mode. If your\r\nbase station is not in this mode you have to change the protocol mode\r\nfirst::\r\n\r\n  # change to extended protocol mode\r\n  si.set_extended_protocol()\r\n\r\nTo use a SportIdent base station for card readout::\r\n\r\n  from time import sleep\r\n\r\n  # connect to base station, the station is automatically detected,\r\n  # if this does not work, give the path to the port as an argument\r\n  # see the pyserial documentation for further information.\r\n  si = SIReaderReadout()\r\n\r\n  # wait for a card to be inserted into the reader\r\n  while not si.poll_sicard():\r\n      sleep(1)\r\n\r\n  # some properties are now set\r\n  card_number = si.sicard\r\n  card_type = si.cardtype\r\n\r\n  # read out card data\r\n  card_data = si.read_sicard()\r\n\r\n  # beep\r\n  si.ack_sicard()\r\n\r\nTo use a base station as a control sending punches::\r\n\r\n  # configure station\r\n  si.set_operating_mode(SIReader.M_CONTROL)\r\n  si.set_station_code(99)\r\n  si.set_autosend()\r\n\r\n  # connect to station\r\n  si = SIReaderControl()\r\n\r\n  # poll for new punches\r\n  punches = si.poll_punch()\r\n\r\n  # reset station configuration\r\n  si.set_operating_mode(SIReader.M_READOUT)\r\n  si.set_autosend(False)\r\n\r\nFinally set the station back to basic protocol::\r\n\r\n  # change back to basic protocl\r\n  si.set_extended_protocol(False)\r\n\r\n\r\n\r\nAPI Documentation\r\n-----------------\r\n\r\nComplete documentation is contained in the module source code and can\r\nbe read online at:\r\n\r\nhttp://bosco.durcheinandertal.ch/epydoc-sireader/\r\n\r\nThis documentation is autogenerated from the source code and\r\nrepresents the version in the GIT repository.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bosco.durcheinandertal.ch/", "keywords": "sportident orienteering bosco", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "sireader", "package_url": "https://pypi.org/project/sireader/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/sireader/", "project_urls": {"Homepage": "http://bosco.durcheinandertal.ch/"}, "release_url": "https://pypi.org/project/sireader/1.1.1/", "requires_dist": null, "requires_python": null, "summary": "Python module to communicate with SportIdent main stations", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Sireader is a python module to communicate with a SportIdent main station to\nread out SportIdent cards. SportIdent is an electronic punching system mainly\nused for orienteering events.</p>\n<p>Sireader supports two major operation modes. It can be used for complete card\nreadout or in control station mode to send punches from a control. The first mode\nis typically used for card readout after the finish line to read the card data\ninto an event software. The second mode is used to get live result from an\nintermediate control.</p>\n<p>Website: <a href=\"http://bosco.durcheinandertal.ch/\" rel=\"nofollow\">http://bosco.durcheinandertal.ch/</a></p>\n<p>GIT Repository: <a href=\"https://github.com/gaudenz/sireader/\" rel=\"nofollow\">https://github.com/gaudenz/sireader/</a></p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>There are 3 classes in the sireader module. <strong>SIReader</strong> is the base class\ncontaining common functions. It\u2019s imported to have easy access to it\u2019s\nconstants. <strong>SIReaderReadout</strong> implements classical card readout.\n<strong>SIReaderControl</strong> implements a station configured as control which\ncontinuously sends punches.</p>\n<p>First import the relevant classes:</p>\n<pre>from sireader import SIReader, SIReaderReadout, SIReaderControl\n</pre>\n<p>SIReader only supports the so called \u201cExtended Protocol\u201d mode. If your\nbase station is not in this mode you have to change the protocol mode\nfirst:</p>\n<pre># change to extended protocol mode\nsi.set_extended_protocol()\n</pre>\n<p>To use a SportIdent base station for card readout:</p>\n<pre>from time import sleep\n\n# connect to base station, the station is automatically detected,\n# if this does not work, give the path to the port as an argument\n# see the pyserial documentation for further information.\nsi = SIReaderReadout()\n\n# wait for a card to be inserted into the reader\nwhile not si.poll_sicard():\n    sleep(1)\n\n# some properties are now set\ncard_number = si.sicard\ncard_type = si.cardtype\n\n# read out card data\ncard_data = si.read_sicard()\n\n# beep\nsi.ack_sicard()\n</pre>\n<p>To use a base station as a control sending punches:</p>\n<pre># configure station\nsi.set_operating_mode(SIReader.M_CONTROL)\nsi.set_station_code(99)\nsi.set_autosend()\n\n# connect to station\nsi = SIReaderControl()\n\n# poll for new punches\npunches = si.poll_punch()\n\n# reset station configuration\nsi.set_operating_mode(SIReader.M_READOUT)\nsi.set_autosend(False)\n</pre>\n<p>Finally set the station back to basic protocol:</p>\n<pre># change back to basic protocl\nsi.set_extended_protocol(False)\n</pre>\n</div>\n<div id=\"api-documentation\">\n<h2>API Documentation</h2>\n<p>Complete documentation is contained in the module source code and can\nbe read online at:</p>\n<p><a href=\"http://bosco.durcheinandertal.ch/epydoc-sireader/\" rel=\"nofollow\">http://bosco.durcheinandertal.ch/epydoc-sireader/</a></p>\n<p>This documentation is autogenerated from the source code and\nrepresents the version in the GIT repository.</p>\n</div>\n\n          </div>"}, "last_serial": 2865470, "releases": {"(latest release)": [{"comment_text": "", "digests": {"md5": "f6a1b8746d311a0972d4f6ece11530d0", "sha256": "e5a5a331a9a79f20fab358f70129c1c37cafffad4e15335470753d3838a64613"}, "downloads": -1, "filename": "sireader-1.0.0.tar.bz2", "has_sig": true, "md5_digest": "f6a1b8746d311a0972d4f6ece11530d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23526, "upload_time": "2014-09-01T20:54:46", "upload_time_iso_8601": "2014-09-01T20:54:46.323544Z", "url": "https://files.pythonhosted.org/packages/2c/4a/f6b3cbd8ef6beabe5802074a06a2eb7e0869b05d6faa212b4cf107d6cd06/sireader-1.0.0.tar.bz2", "yanked": false}], "1.0.0.dev": [], "1.0.1": [{"comment_text": "", "digests": {"md5": "88d25155f087dafc448b1fefcf9e0ae8", "sha256": "c4c7984d8437e71c4b26e82f38804fdb3274b19a436af59c4213961eb6f56b8c"}, "downloads": -1, "filename": "sireader-1.0.1.tar.bz2", "has_sig": true, "md5_digest": "88d25155f087dafc448b1fefcf9e0ae8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23802, "upload_time": "2014-09-30T21:36:20", "upload_time_iso_8601": "2014-09-30T21:36:20.120488Z", "url": "https://files.pythonhosted.org/packages/e1/fc/586bafc9dddeda994e4de2683a96830e9b5448f62ed231efa97fd1b9e0ac/sireader-1.0.1.tar.bz2", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "31fa2e4479d10a44084ea49254cab73f", "sha256": "2e66293c3bf556377fe80b685004196eb291539f11798ea0553ce248bba4cc14"}, "downloads": -1, "filename": "sireader-1.0.2.tar.bz2", "has_sig": true, "md5_digest": "31fa2e4479d10a44084ea49254cab73f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24079, "upload_time": "2014-11-05T10:47:34", "upload_time_iso_8601": "2014-11-05T10:47:34.397499Z", "url": "https://files.pythonhosted.org/packages/8f/b7/9aa435387490baa056e789f2d56a59db14f25538066c229752966bd20d76/sireader-1.0.2.tar.bz2", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "3972b3641a4ba34e0f05fe024137a06d", "sha256": "07ada8f754680ce54e6e261487135ee413708216cea9bc2526984d7a4e53e27a"}, "downloads": -1, "filename": "sireader-1.1.1.tar.bz2", "has_sig": true, "md5_digest": "3972b3641a4ba34e0f05fe024137a06d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24664, "upload_time": "2015-11-22T21:12:14", "upload_time_iso_8601": "2015-11-22T21:12:14.613333Z", "url": "https://files.pythonhosted.org/packages/61/3a/d473aa40e3a40d52224e1773ae11a3fd6bdb4ec739e36fc93bc2ae3cd7ff/sireader-1.1.1.tar.bz2", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3972b3641a4ba34e0f05fe024137a06d", "sha256": "07ada8f754680ce54e6e261487135ee413708216cea9bc2526984d7a4e53e27a"}, "downloads": -1, "filename": "sireader-1.1.1.tar.bz2", "has_sig": true, "md5_digest": "3972b3641a4ba34e0f05fe024137a06d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24664, "upload_time": "2015-11-22T21:12:14", "upload_time_iso_8601": "2015-11-22T21:12:14.613333Z", "url": "https://files.pythonhosted.org/packages/61/3a/d473aa40e3a40d52224e1773ae11a3fd6bdb4ec739e36fc93bc2ae3cd7ff/sireader-1.1.1.tar.bz2", "yanked": false}], "timestamp": "Fri May  8 03:09:24 2020"}