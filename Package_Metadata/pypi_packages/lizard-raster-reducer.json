{"info": {"author": "Wietze Suijker", "author_email": "wietze.suijker@nelen-schuurmans.nl", "bugtrack_url": null, "classifiers": ["Framework :: Django", "Programming Language :: Python"], "description": "lizard-raster-reducer\n==========================================\n\nIntroduction\n------------\n\nLizard raster reducer is a tool to auto-generate regional reports from Lizard data.\nIt \"reduces\" raster data to aggregate statistics for multiple regions.\nLizard API endpoints are used to retrieve data. The main ones are search, rasters, regions and raster-aggregates.\nTo prevent API overload, the tool creates and fills a 'lizard_cache' folder by default.\n\nMultiple rasters can be specified. The first raster will act as the scope raster.\nThe scope raster determines the spatial extent and temporal behaviour of the result. Rasters can be temporal or static. Rasters can contain continuous values or discrete classes. Regions of one region type are used for the result. Regions within the spatial extent of the scope raster are used in the result. A configuration file is used to customize the output.\n\nThe results are aggregate numbers of data per region.\nWhen the data type is interval or ratio, the average of the region is returned.\nWhen data are classes, the area fraction per class are returned.\nThe output format can be specified to be CSV, JSON or HTML.\n\n\nInstallation\n------------\n\nWe can be installed with::\n\n  $ pip install lizard-raster-reducer\n\nUsage (iPython notebook example)\n--------------------------------\n\n`This example notebook (link) <https://github.com/nens/lizard-raster-reducer/blob/master/notebook_examples/example_use_lizard_raster_reducer.ipynb>`_ exemplifies how the Lizard raster reducer can be used.\n\nUsage (command line example)\n----------------------------\n\nCreate .yml configuration files from templates::\n\n  $ run-lizard-raster-reducer\n\n1. Specify reducer options in reducer_options.yml.\n\n2. Specify Lizard credentials in credentials.yml\n\n3. Review optional arguments to pass: run-lizard-raster-reducer -h\n\n4. Run the code: run-lizard-raster-reducer\n\n5. Find result(s) in local sub-folder /reducer_results\n\n\nDevelopment installation of this project itself\n-----------------------------------------------\n\nWe're installed with `pipenv <https://docs.pipenv.org/>`_, a handy wrapper\naround pip and virtualenv. Install that first with ``pip install\npipenv``. Then run::\n\n  $ PIPENV_VENV_IN_PROJECT=1 pipenv --three\n  $ pipenv install --dev\n\nThere will be a script you can run like this::\n\n  $ pipenv run run-lizard-raster-reducer\n\nIt runs the `main()` function in `lizard-raster-reducer/scripts.py`,\nadjust that if necessary. The script is configured in `setup.py` (see\n`entry_points`).\n\nIn order to get nicely formatted python files without having to spend manual\nwork on it, run the following command periodically::\n\n  $ pipenv run black lizard_raster_reducer\n\nRun the tests regularly. This also checks with pyflakes, black and it reports\ncoverage. Pure luxury::\n\n  $ pipenv run pytest\n\nThe tests are also run automatically `on travis-ci\n<https://travis-ci.com/nens/lizard-raster-reducer>`_, you'll see it\nin the pull requests. There's also `coverage reporting\n<https://coveralls.io/github/nens/lizard-raster-reducer>`_ on\ncoveralls.io (once it has been set up).\n\nIf you need a new dependency (like `requests`), add it in `setup.py` in\n`install_requires`. Afterwards, run install again to actually install your\ndependency::\n\n  $ pipenv install --dev\n\n\nChangelog of lizard-raster-reducer\n===================================================\n\n\n0.6 (2019-04-30)\n----------------\n\n- Options for hectares (besides fraction) and temporal range (besides last timesteps)\n\n\n0.5 (2019-04-11)\n----------------\n\n- Improved readme\n\n\n0.4 (2019-04-08)\n----------------\n\n- Notebook example to demonstrate usage\n\n\n0.3 (2019-04-08)\n----------------\n\n- Functionality to set regional alarms.\n\n\n0.2 (2019-03-27)\n----------------\n\n- First deploy to pypi.org.\n\n\n0.1 (2019-03-27)\n----------------\n\n- Initial project structure created with cookiecutter and\n  https://github.com/nens/cookiecutter-python-template\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nens/lizard-raster-reducer", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "lizard-raster-reducer", "package_url": "https://pypi.org/project/lizard-raster-reducer/", "platform": "", "project_url": "https://pypi.org/project/lizard-raster-reducer/", "project_urls": {"Homepage": "https://github.com/nens/lizard-raster-reducer"}, "release_url": "https://pypi.org/project/lizard-raster-reducer/0.6/", "requires_dist": ["pandas", "requests", "datetime", "pyyaml", "pytest ; extra == 'test'", "mock ; extra == 'test'", "pytest-cov ; extra == 'test'", "pytest-flakes ; extra == 'test'", "pytest-black ; extra == 'test'", "pyyaml ; extra == 'test'"], "requires_python": "", "summary": "Lizard raster reducer is a tool to auto-generate regional reports from Lizard data.", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"lizard-raster-reducer\">\n<h2>lizard-raster-reducer</h2>\n<div id=\"introduction\">\n<h3>Introduction</h3>\n<p>Lizard raster reducer is a tool to auto-generate regional reports from Lizard data.\nIt \u201creduces\u201d raster data to aggregate statistics for multiple regions.\nLizard API endpoints are used to retrieve data. The main ones are search, rasters, regions and raster-aggregates.\nTo prevent API overload, the tool creates and fills a \u2018lizard_cache\u2019 folder by default.</p>\n<p>Multiple rasters can be specified. The first raster will act as the scope raster.\nThe scope raster determines the spatial extent and temporal behaviour of the result. Rasters can be temporal or static. Rasters can contain continuous values or discrete classes. Regions of one region type are used for the result. Regions within the spatial extent of the scope raster are used in the result. A configuration file is used to customize the output.</p>\n<p>The results are aggregate numbers of data per region.\nWhen the data type is interval or ratio, the average of the region is returned.\nWhen data are classes, the area fraction per class are returned.\nThe output format can be specified to be CSV, JSON or HTML.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>We can be installed with:</p>\n<pre>$ pip install lizard-raster-reducer\n</pre>\n</div>\n<div id=\"usage-ipython-notebook-example\">\n<h3>Usage (iPython notebook example)</h3>\n<p><a href=\"https://github.com/nens/lizard-raster-reducer/blob/master/notebook_examples/example_use_lizard_raster_reducer.ipynb\" rel=\"nofollow\">This example notebook (link)</a> exemplifies how the Lizard raster reducer can be used.</p>\n</div>\n<div id=\"usage-command-line-example\">\n<h3>Usage (command line example)</h3>\n<p>Create .yml configuration files from templates:</p>\n<pre>$ run-lizard-raster-reducer\n</pre>\n<ol>\n<li>Specify reducer options in reducer_options.yml.</li>\n<li>Specify Lizard credentials in credentials.yml</li>\n<li>Review optional arguments to pass: run-lizard-raster-reducer -h</li>\n<li>Run the code: run-lizard-raster-reducer</li>\n<li>Find result(s) in local sub-folder /reducer_results</li>\n</ol>\n</div>\n<div id=\"development-installation-of-this-project-itself\">\n<h3>Development installation of this project itself</h3>\n<p>We\u2019re installed with <a href=\"https://docs.pipenv.org/\" rel=\"nofollow\">pipenv</a>, a handy wrapper\naround pip and virtualenv. Install that first with <tt>pip install\npipenv</tt>. Then run:</p>\n<pre>$ PIPENV_VENV_IN_PROJECT=1 pipenv --three\n$ pipenv install --dev\n</pre>\n<p>There will be a script you can run like this:</p>\n<pre>$ pipenv run run-lizard-raster-reducer\n</pre>\n<p>It runs the <cite>main()</cite> function in <cite>lizard-raster-reducer/scripts.py</cite>,\nadjust that if necessary. The script is configured in <cite>setup.py</cite> (see\n<cite>entry_points</cite>).</p>\n<p>In order to get nicely formatted python files without having to spend manual\nwork on it, run the following command periodically:</p>\n<pre>$ pipenv run black lizard_raster_reducer\n</pre>\n<p>Run the tests regularly. This also checks with pyflakes, black and it reports\ncoverage. Pure luxury:</p>\n<pre>$ pipenv run pytest\n</pre>\n<p>The tests are also run automatically <a href=\"https://travis-ci.com/nens/lizard-raster-reducer\" rel=\"nofollow\">on travis-ci</a>, you\u2019ll see it\nin the pull requests. There\u2019s also <a href=\"https://coveralls.io/github/nens/lizard-raster-reducer\" rel=\"nofollow\">coverage reporting</a> on\ncoveralls.io (once it has been set up).</p>\n<p>If you need a new dependency (like <cite>requests</cite>), add it in <cite>setup.py</cite> in\n<cite>install_requires</cite>. Afterwards, run install again to actually install your\ndependency:</p>\n<pre>$ pipenv install --dev\n</pre>\n</div>\n</div>\n<div id=\"changelog-of-lizard-raster-reducer\">\n<h2>Changelog of lizard-raster-reducer</h2>\n<div id=\"id1\">\n<h3>0.6 (2019-04-30)</h3>\n<ul>\n<li>Options for hectares (besides fraction) and temporal range (besides last timesteps)</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.5 (2019-04-11)</h3>\n<ul>\n<li>Improved readme</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.4 (2019-04-08)</h3>\n<ul>\n<li>Notebook example to demonstrate usage</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.3 (2019-04-08)</h3>\n<ul>\n<li>Functionality to set regional alarms.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.2 (2019-03-27)</h3>\n<ul>\n<li>First deploy to pypi.org.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.1 (2019-03-27)</h3>\n<ul>\n<li>Initial project structure created with cookiecutter and\n<a href=\"https://github.com/nens/cookiecutter-python-template\" rel=\"nofollow\">https://github.com/nens/cookiecutter-python-template</a></li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5211643, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "83ed927946a8bc78aad5b3f2fa413c5c", "sha256": "ac7dfe880072f3f745246a508bcb8629394b2efec1e9102bec025b176595274e"}, "downloads": -1, "filename": "lizard_raster_reducer-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "83ed927946a8bc78aad5b3f2fa413c5c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19530, "upload_time": "2019-03-27T13:45:57", "upload_time_iso_8601": "2019-03-27T13:45:57.942396Z", "url": "https://files.pythonhosted.org/packages/4e/95/d6961b8040ee0096bb0b0640260fafb57d46cb03a14f41e1d9fcfa97f5e8/lizard_raster_reducer-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ac6abc140acf9b8dfbea6450d6d2422", "sha256": "5086ba59ca2393c8f6d266bb458ab75e03d9972316dfe6575a5bd31a6b7b9a58"}, "downloads": -1, "filename": "lizard-raster-reducer-0.2.tar.gz", "has_sig": false, "md5_digest": "9ac6abc140acf9b8dfbea6450d6d2422", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13763, "upload_time": "2019-03-27T13:46:00", "upload_time_iso_8601": "2019-03-27T13:46:00.019943Z", "url": "https://files.pythonhosted.org/packages/d0/99/9390730aa01a09210883a986de1f089338af14cd192a17ad3ae919f723fc/lizard-raster-reducer-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "4827ccbad31abf8cdb736224c1bcb952", "sha256": "920f614a4044945ea26d890a064112bea22f38c5d314538c8771d60b6697d6bf"}, "downloads": -1, "filename": "lizard_raster_reducer-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4827ccbad31abf8cdb736224c1bcb952", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21178, "upload_time": "2019-04-08T08:57:11", "upload_time_iso_8601": "2019-04-08T08:57:11.904016Z", "url": "https://files.pythonhosted.org/packages/50/c6/58a1d133734f4c64696cfdb4e9ccf34a71547e775614803952075bf4991d/lizard_raster_reducer-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b09d25f091791013d2ff5fa4d8e47926", "sha256": "07802a0745bdfec07bf147e60a8a4d406d039e968638780ae619519739142231"}, "downloads": -1, "filename": "lizard-raster-reducer-0.3.tar.gz", "has_sig": false, "md5_digest": "b09d25f091791013d2ff5fa4d8e47926", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15252, "upload_time": "2019-04-08T08:57:13", "upload_time_iso_8601": "2019-04-08T08:57:13.547386Z", "url": "https://files.pythonhosted.org/packages/85/71/8f6add5f5ce5db57965eb0b45809976c8e9fa1a5112153135f433fc86809/lizard-raster-reducer-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "fa7f834bf3dacaa7ccb60b51289eb584", "sha256": "9486a5f7da3d379ff7e373c79fba9ddf459ef3fb4ff716faeee792607f2d6174"}, "downloads": -1, "filename": "lizard_raster_reducer-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "fa7f834bf3dacaa7ccb60b51289eb584", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21293, "upload_time": "2019-04-08T13:35:44", "upload_time_iso_8601": "2019-04-08T13:35:44.464333Z", "url": "https://files.pythonhosted.org/packages/82/6f/9668c9d7c6369fb2ccc0863e94c9a494ab0699fee1a8ec5eb1a9a8a53cdc/lizard_raster_reducer-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d477b4569ba1f0482d97bb0dbbd24b6", "sha256": "0c7b9eb04ba07979e0cd20407a74c57616673ab3a62f63ed9ad94f76fa763f43"}, "downloads": -1, "filename": "lizard-raster-reducer-0.4.tar.gz", "has_sig": false, "md5_digest": "6d477b4569ba1f0482d97bb0dbbd24b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15410, "upload_time": "2019-04-08T13:35:45", "upload_time_iso_8601": "2019-04-08T13:35:45.820503Z", "url": "https://files.pythonhosted.org/packages/00/cc/8a4b3c3c27bf563276e2c2f48e95f843efca7a5227785ffefc00556ec636/lizard-raster-reducer-0.4.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "82591849a52f78d3e05b5720c1de4dcc", "sha256": "2803c3e3b5503f756899d1add4e4205c442fe1c8300c07fe93a0b9d4332803a2"}, "downloads": -1, "filename": "lizard_raster_reducer-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "82591849a52f78d3e05b5720c1de4dcc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21612, "upload_time": "2019-05-01T06:44:14", "upload_time_iso_8601": "2019-05-01T06:44:14.371095Z", "url": "https://files.pythonhosted.org/packages/1b/60/ec35b7d39c9a1d454e16c00ef91bb2d9a215a6a7b1766685d48b0ae9f79d/lizard_raster_reducer-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "035c6e12ad65a93fdfefe9cbfc53f98a", "sha256": "a9dc6e33af6a2191b6fb939995db8719b3fdd86b64d624d3f8a84b013f450911"}, "downloads": -1, "filename": "lizard-raster-reducer-0.6.tar.gz", "has_sig": false, "md5_digest": "035c6e12ad65a93fdfefe9cbfc53f98a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15796, "upload_time": "2019-05-01T06:44:16", "upload_time_iso_8601": "2019-05-01T06:44:16.142867Z", "url": "https://files.pythonhosted.org/packages/50/97/9bfe8f8514c345487f295b2085703c1b7aee43866145e2e45860e66500ef/lizard-raster-reducer-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "82591849a52f78d3e05b5720c1de4dcc", "sha256": "2803c3e3b5503f756899d1add4e4205c442fe1c8300c07fe93a0b9d4332803a2"}, "downloads": -1, "filename": "lizard_raster_reducer-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "82591849a52f78d3e05b5720c1de4dcc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21612, "upload_time": "2019-05-01T06:44:14", "upload_time_iso_8601": "2019-05-01T06:44:14.371095Z", "url": "https://files.pythonhosted.org/packages/1b/60/ec35b7d39c9a1d454e16c00ef91bb2d9a215a6a7b1766685d48b0ae9f79d/lizard_raster_reducer-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "035c6e12ad65a93fdfefe9cbfc53f98a", "sha256": "a9dc6e33af6a2191b6fb939995db8719b3fdd86b64d624d3f8a84b013f450911"}, "downloads": -1, "filename": "lizard-raster-reducer-0.6.tar.gz", "has_sig": false, "md5_digest": "035c6e12ad65a93fdfefe9cbfc53f98a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15796, "upload_time": "2019-05-01T06:44:16", "upload_time_iso_8601": "2019-05-01T06:44:16.142867Z", "url": "https://files.pythonhosted.org/packages/50/97/9bfe8f8514c345487f295b2085703c1b7aee43866145e2e45860e66500ef/lizard-raster-reducer-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:00 2020"}