{"info": {"author": "Brandon Bocklund", "author_email": "brandonbocklund@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Chemistry", "Topic :: Scientific/Engineering :: Physics"], "description": "======\nscheil\n======\n\nA Scheil-Gulliver simulation tool using `pycalphad`_.\n\n.. _pycalphad: http://pycalphad.org\n\n.. code-block:: python\n\n   import matplotlib.pyplot as plt\n   from pycalphad import Database, variables as v\n   from scheil import simulate_scheil_solidification\n\n   # setup the simulation parameters\n   dbf = Database('alzn_mey.tdb')\n   comps = ['AL', 'ZN', 'VA']\n   phases = sorted(dbf.phases.keys())\n\n   liquid_phase_name = 'LIQUID'\n   initial_composition = {v.X('ZN'): 0.3}\n   start_temperature = 850\n\n   # perform the simulation\n   sol_res = simulate_scheil_solidification(dbf, comps, phases, initial_composition, start_temperature, step_temperature=1.0)\n\n   # plot the result\n   for phase_name, amounts in sol_res.cum_phase_amounts.items():\n       plt.plot(sol_res.temperatures, amounts, label=phase_name)\n   plt.plot(sol_res.temperatures, sol_res.fraction_liquid, label='LIQUID')\n   plt.ylabel('Phase Fraction')\n   plt.xlabel('Temperature (K)')\n   plt.title('Al-30Zn Scheil simulation, phase fractions')\n   plt.legend(loc='best')\n   plt.show()\n\n.. image:: docs/_static/Al-30Zn_Scheil_simulation.png\n    :align: center\n    :alt: Phase fraction evolution during a Scheil simulation of Al-30Zn\n\nInstallation\n============\n\nscheil is still in early development and is not yet released on PyPI or conda-forge.\nTo use scheil, please install the development version.\n\n\nDevelopment versions\n--------------------\n\nTo make improvements to scheil, it is suggested to use\nAnaconda to download all of the required dependencies. This\nmethod installs scheil with Anaconda, removes specifically the\nscheil package, and replaces it with the package from GitHub.\n\n.. code-block:: bash\n\n    conda install -c pycalphad -c conda-forge pycalphad>=0.8\n    git clone https://github.com/pycalphad/scheil.git\n    cd scheil\n    pip install --no-deps -e .\n\nUpgrading scheil later requires you to run ``git pull`` in this directory.\n\n\nTheory\n======\n\nUses classic Scheil-Gulliver theory (see G.H. Gulliver, *J. Inst. Met.* 9 (1913) 120\u2013157 and Scheil, *Zeitschrift F\u00fcr Met.* 34 (1942) 70\u201372.) with assumptions of\n\n1. Perfect mixing in the liquid\n2. Local equilibrium between solid and liquid\n3. No diffusion in the solid\n\n\nGetting Help\n============\n\nFor help on installing and using scheil, please join the `pycalphad/pycalphad Gitter room <https://gitter.im/pycalphad/pycalphad>`_.\n\nBugs and software issues should be reported on `GitHub <https://github.com/pycalphad/scheil/issues>`_.\n\nLicense\n=======\n\nscheil is MIT licensed. See LICENSE.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pycalphad.org/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "scheil", "package_url": "https://pypi.org/project/scheil/", "platform": "", "project_url": "https://pypi.org/project/scheil/", "project_urls": {"Homepage": "https://pycalphad.org/"}, "release_url": "https://pypi.org/project/scheil/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Scheil-Gulliver simulations using pycalphad.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Scheil-Gulliver simulation tool using <a href=\"http://pycalphad.org\" rel=\"nofollow\">pycalphad</a>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pycalphad</span> <span class=\"kn\">import</span> <span class=\"n\">Database</span><span class=\"p\">,</span> <span class=\"n\">variables</span> <span class=\"k\">as</span> <span class=\"n\">v</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scheil</span> <span class=\"kn\">import</span> <span class=\"n\">simulate_scheil_solidification</span>\n\n<span class=\"c1\"># setup the simulation parameters</span>\n<span class=\"n\">dbf</span> <span class=\"o\">=</span> <span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"s1\">'alzn_mey.tdb'</span><span class=\"p\">)</span>\n<span class=\"n\">comps</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'AL'</span><span class=\"p\">,</span> <span class=\"s1\">'ZN'</span><span class=\"p\">,</span> <span class=\"s1\">'VA'</span><span class=\"p\">]</span>\n<span class=\"n\">phases</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">dbf</span><span class=\"o\">.</span><span class=\"n\">phases</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n\n<span class=\"n\">liquid_phase_name</span> <span class=\"o\">=</span> <span class=\"s1\">'LIQUID'</span>\n<span class=\"n\">initial_composition</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"p\">(</span><span class=\"s1\">'ZN'</span><span class=\"p\">):</span> <span class=\"mf\">0.3</span><span class=\"p\">}</span>\n<span class=\"n\">start_temperature</span> <span class=\"o\">=</span> <span class=\"mi\">850</span>\n\n<span class=\"c1\"># perform the simulation</span>\n<span class=\"n\">sol_res</span> <span class=\"o\">=</span> <span class=\"n\">simulate_scheil_solidification</span><span class=\"p\">(</span><span class=\"n\">dbf</span><span class=\"p\">,</span> <span class=\"n\">comps</span><span class=\"p\">,</span> <span class=\"n\">phases</span><span class=\"p\">,</span> <span class=\"n\">initial_composition</span><span class=\"p\">,</span> <span class=\"n\">start_temperature</span><span class=\"p\">,</span> <span class=\"n\">step_temperature</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># plot the result</span>\n<span class=\"k\">for</span> <span class=\"n\">phase_name</span><span class=\"p\">,</span> <span class=\"n\">amounts</span> <span class=\"ow\">in</span> <span class=\"n\">sol_res</span><span class=\"o\">.</span><span class=\"n\">cum_phase_amounts</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">sol_res</span><span class=\"o\">.</span><span class=\"n\">temperatures</span><span class=\"p\">,</span> <span class=\"n\">amounts</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"n\">phase_name</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">sol_res</span><span class=\"o\">.</span><span class=\"n\">temperatures</span><span class=\"p\">,</span> <span class=\"n\">sol_res</span><span class=\"o\">.</span><span class=\"n\">fraction_liquid</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s1\">'LIQUID'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylabel</span><span class=\"p\">(</span><span class=\"s1\">'Phase Fraction'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xlabel</span><span class=\"p\">(</span><span class=\"s1\">'Temperature (K)'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">'Al-30Zn Scheil simulation, phase fractions'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">(</span><span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"s1\">'best'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<img alt=\"Phase fraction evolution during a Scheil simulation of Al-30Zn\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae1595b828ba1af3443c70a9400b66c3fd8eec1c/646f63732f5f7374617469632f416c2d33305a6e5f53636865696c5f73696d756c6174696f6e2e706e67\">\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>scheil is still in early development and is not yet released on PyPI or conda-forge.\nTo use scheil, please install the development version.</p>\n<div id=\"development-versions\">\n<h3>Development versions</h3>\n<p>To make improvements to scheil, it is suggested to use\nAnaconda to download all of the required dependencies. This\nmethod installs scheil with Anaconda, removes specifically the\nscheil package, and replaces it with the package from GitHub.</p>\n<pre>conda install -c pycalphad -c conda-forge pycalphad&gt;<span class=\"o\">=</span><span class=\"m\">0</span>.8\ngit clone https://github.com/pycalphad/scheil.git\n<span class=\"nb\">cd</span> scheil\npip install --no-deps -e .\n</pre>\n<p>Upgrading scheil later requires you to run <tt>git pull</tt> in this directory.</p>\n</div>\n</div>\n<div id=\"theory\">\n<h2>Theory</h2>\n<p>Uses classic Scheil-Gulliver theory (see G.H. Gulliver, <em>J. Inst. Met.</em> 9 (1913) 120\u2013157 and Scheil, <em>Zeitschrift F\u00fcr Met.</em> 34 (1942) 70\u201372.) with assumptions of</p>\n<ol>\n<li>Perfect mixing in the liquid</li>\n<li>Local equilibrium between solid and liquid</li>\n<li>No diffusion in the solid</li>\n</ol>\n</div>\n<div id=\"getting-help\">\n<h2>Getting Help</h2>\n<p>For help on installing and using scheil, please join the <a href=\"https://gitter.im/pycalphad/pycalphad\" rel=\"nofollow\">pycalphad/pycalphad Gitter room</a>.</p>\n<p>Bugs and software issues should be reported on <a href=\"https://github.com/pycalphad/scheil/issues\" rel=\"nofollow\">GitHub</a>.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>scheil is MIT licensed. See LICENSE.</p>\n</div>\n\n          </div>"}, "last_serial": 6511262, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "808eaaf618bd7437a31e7f307182bd52", "sha256": "432e66a32966e036eb7e680bf7c8379431b4ee63aef12160749bed51ad8646fb"}, "downloads": -1, "filename": "scheil-0.1.tar.gz", "has_sig": false, "md5_digest": "808eaaf618bd7437a31e7f307182bd52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10832, "upload_time": "2020-01-23T23:50:27", "upload_time_iso_8601": "2020-01-23T23:50:27.188881Z", "url": "https://files.pythonhosted.org/packages/07/67/79bb4b611bc01df4b4c85f8d4d646bb66a27692814255ce81789b1e4dcce/scheil-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e1418d5115f7c9be025013a25331a6ea", "sha256": "de43e05fb9fdfb084fa3c7709000cc81c88292eaee24a0ac020c52c032c0c809"}, "downloads": -1, "filename": "scheil-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e1418d5115f7c9be025013a25331a6ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27154, "upload_time": "2020-01-24T00:31:09", "upload_time_iso_8601": "2020-01-24T00:31:09.845557Z", "url": "https://files.pythonhosted.org/packages/5f/eb/5dd82954972b93bcbdbf8f3d4ec1c6bb4dff87463986fb055575631144ed/scheil-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e1418d5115f7c9be025013a25331a6ea", "sha256": "de43e05fb9fdfb084fa3c7709000cc81c88292eaee24a0ac020c52c032c0c809"}, "downloads": -1, "filename": "scheil-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e1418d5115f7c9be025013a25331a6ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27154, "upload_time": "2020-01-24T00:31:09", "upload_time_iso_8601": "2020-01-24T00:31:09.845557Z", "url": "https://files.pythonhosted.org/packages/5f/eb/5dd82954972b93bcbdbf8f3d4ec1c6bb4dff87463986fb055575631144ed/scheil-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:52 2020"}