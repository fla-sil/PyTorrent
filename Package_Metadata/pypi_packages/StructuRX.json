{"info": {"author": "Andrew MacKinlay", "author_email": "andrew.mackinlay@nicta.com.au", "bugtrack_url": null, "classifiers": [], "description": "StructuRX interprets medication prescriptions into a structured format using\ndependency parses [1] or third-party drug NER pipeline [2].\n\nThe dependency-parse version uses a hand-crafted set of rules as described in\n[1] based on the output of the `ClearParser dependency parser\n<https://code.google.com/p/clearparser>`_, while the alternative method\ndescribed in [2] uses the output of the drug NER pipeline from the `cTAKES\nclinical NER system <http://sourceforge.net/projects/ohnlp/files/cTAKES/>`_.\n\nCreated by Andrew MacKinlay from the `Biomedical Informatics team \n<http://nicta.com.au/business/health/biomedical_informatics>`_ at `NICTA \n<http://nicta.com.au>`_, and licensed under the Apache License 2.0.\n\nRecommended installation method:\n\n::\n\n  $ pip install StructuRX\n\nBut of course you can instead do an old-fashioned:\n\n::\n\n $ python setup.py install\n\nfrom a `VCS checkout <https://bitbucket.org/nicta_biomed/structurx/src>`_ or \n`tarball/zip download <https://bitbucket.org/nicta_biomed/structurx/downloads>`_.\nIn the latter case you will need to ensure that `ClearWrap \n<https://bitbucket.org/nicta_biomed/clearwrap>`_ is \ninstalled, and in either case you will need a copy of the \n`NICTA fork <https://bitbucket.org/nicta_biomed/clearparser_flex>`_\nof `ClearParser <https://code.google.com/p/clearparser>`_ available to do the\ndependency parsing. We highly recommend installing into a virtualenv.\nIf you wish to test against cTAKES, that will naturally need to be installed as \nwell. \n\nAfter installing, run the provided script ``structurx-run.py`` and follow\nthe instructions for configuration.\n\n* [1] A. MacKinlay and K. Verspoor. 2012. `Extracting structured information\n  from free-text medication prescriptions using dependencies\n  <http://www.nicta.com.au/pub?id=6102>`_. DTMBIO 2012. \n* [2] A. MacKinlay and K.\n  Verspoor. 2013. A Comparison of Strategies for Extracting Structured\n  Information from Free-Text Medication Prescriptions. LOUHI 2013.", "description_content_type": null, "docs_url": null, "download_url": "https://bitbucket.org/nicta_biomed/structurx/downloads", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://opennicta.com/home/structurx", "keywords": null, "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "StructuRX", "package_url": "https://pypi.org/project/StructuRX/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/StructuRX/", "project_urls": {"Download": "https://bitbucket.org/nicta_biomed/structurx/downloads", "Homepage": "http://opennicta.com/home/structurx"}, "release_url": "https://pypi.org/project/StructuRX/0.2/", "requires_dist": null, "requires_python": null, "summary": "Interpret medication prescriptions into a structured format using dependency parses or third-party drug NER pipeline", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>StructuRX interprets medication prescriptions into a structured format using\ndependency parses [1] or third-party drug NER pipeline [2].</p>\n<p>The dependency-parse version uses a hand-crafted set of rules as described in\n[1] based on the output of the <a href=\"https://code.google.com/p/clearparser\" rel=\"nofollow\">ClearParser dependency parser</a>, while the alternative method\ndescribed in [2] uses the output of the drug NER pipeline from the <a href=\"http://sourceforge.net/projects/ohnlp/files/cTAKES/\" rel=\"nofollow\">cTAKES\nclinical NER system</a>.</p>\n<p>Created by Andrew MacKinlay from the <a href=\"http://nicta.com.au/business/health/biomedical_informatics\" rel=\"nofollow\">Biomedical Informatics team</a> at <a href=\"http://nicta.com.au\" rel=\"nofollow\">NICTA</a>, and licensed under the Apache License 2.0.</p>\n<p>Recommended installation method:</p>\n<pre>$ pip install StructuRX\n</pre>\n<p>But of course you can instead do an old-fashioned:</p>\n<pre>$ python setup.py install\n</pre>\n<p>from a <a href=\"https://bitbucket.org/nicta_biomed/structurx/src\" rel=\"nofollow\">VCS checkout</a> or\n<a href=\"https://bitbucket.org/nicta_biomed/structurx/downloads\" rel=\"nofollow\">tarball/zip download</a>.\nIn the latter case you will need to ensure that <a href=\"https://bitbucket.org/nicta_biomed/clearwrap\" rel=\"nofollow\">ClearWrap</a> is\ninstalled, and in either case you will need a copy of the\n<a href=\"https://bitbucket.org/nicta_biomed/clearparser_flex\" rel=\"nofollow\">NICTA fork</a>\nof <a href=\"https://code.google.com/p/clearparser\" rel=\"nofollow\">ClearParser</a> available to do the\ndependency parsing. We highly recommend installing into a virtualenv.\nIf you wish to test against cTAKES, that will naturally need to be installed as\nwell.</p>\n<p>After installing, run the provided script <tt><span class=\"pre\">structurx-run.py</span></tt> and follow\nthe instructions for configuration.</p>\n<ul>\n<li>[1] A. MacKinlay and K. Verspoor. 2012. <a href=\"http://www.nicta.com.au/pub?id=6102\" rel=\"nofollow\">Extracting structured information\nfrom free-text medication prescriptions using dependencies</a>. DTMBIO 2012.</li>\n<li>[2] A. MacKinlay and K.\nVerspoor. 2013. A Comparison of Strategies for Extracting Structured\nInformation from Free-Text Medication Prescriptions. LOUHI 2013.</li>\n</ul>\n\n          </div>"}, "last_serial": 785738, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "1376ff68ed62c51f5e5a73111a93b068", "sha256": "9cf2a549c0cd9b0ffea67a11f5abb7c095ac303b40182dd919b8ffed23e1e66b"}, "downloads": -1, "filename": "StructuRX-0.2.tar.gz", "has_sig": false, "md5_digest": "1376ff68ed62c51f5e5a73111a93b068", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16973, "upload_time": "2013-02-06T04:56:07", "upload_time_iso_8601": "2013-02-06T04:56:07.455761Z", "url": "https://files.pythonhosted.org/packages/f9/64/c8660034b65414063b4ebbe32153f4bc2c75b95863130ba1810fae260fc1/StructuRX-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1376ff68ed62c51f5e5a73111a93b068", "sha256": "9cf2a549c0cd9b0ffea67a11f5abb7c095ac303b40182dd919b8ffed23e1e66b"}, "downloads": -1, "filename": "StructuRX-0.2.tar.gz", "has_sig": false, "md5_digest": "1376ff68ed62c51f5e5a73111a93b068", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16973, "upload_time": "2013-02-06T04:56:07", "upload_time_iso_8601": "2013-02-06T04:56:07.455761Z", "url": "https://files.pythonhosted.org/packages/f9/64/c8660034b65414063b4ebbe32153f4bc2c75b95863130ba1810fae260fc1/StructuRX-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:02 2020"}