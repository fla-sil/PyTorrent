{"info": {"author": "Jefferson Heard", "author_email": "jheard@teamworks.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Metamorphosis: Somewhat opinionated event streaming\n\n- Author: Jefferson Heard, jheard at teamworks dot com\n- Copyright: 2019 Teamworks Inc.\n- License: MIT License\n\nMetamorphosis is an event-streaming based microframework that builds on top of Flask, Graphene, Kafka, and Redis. It allows you to define microservices, which consist of a number of mutations (commands), queries, and event consumers. \n\nIt chooses simplicity of implementation over abstraction, configurability, and flexibility, making the assumptions that you will be using Kafka or Confluent for your streams, Graphene for your GraphQL, and Redis for your result broker and steward of application state. If you think these technologies suck, this is probably not your microframework. If you think this might be your microframework anyway either because it's late and you're tired of looking or because you think it might have potential, please feel free to provide pull requests implementing abstraction layers around Kafka, Redis, or Flask. I'm really happy to take contributions to this work. \n\nAlso, this framework is based on the famous story about a man who turns into a bug. Plainly I identify deeply with the protagonist, as this is roughly the story of my life. Thus you should assume there are bugs in this code, and you should hunt them down and fix them OR choose to completely ignore them like everyone in Kafka's story. The choice is yours entirely, I can't have *all* the opinions.\n\n### How does it work? \n\nBefore you start, you should define your service in terms of what *commands* and *queries* it accepts, and what events it publishes and subscribes to. At the very least, it publishes an event for every command that it supports, but there may be other events as well. It should also (generally) subscribe at least once to every event generated by a command.  Once you have that structure laid out, see the example and work from that. Or try to fly blind using these instructions that I clearly wrote at 10:39pm in a Holiday Inn while putting off sleep. You can tell which method I think will do you more good. Anyway...\n\n1. Instantiate a `Microservice` object and give it a service name. This service name also serves as your default topic name on Kafka.\n2. Define an `EventMutation` or `AsyncEventMutation` for each command your microservice handles. Event mutations are synchronous and will poll, waiting on the event to show up in Redis with either an Exception or a result.\n3. Define the `mutate_event` class-method on each mutation, which should authorize and validate the request, then return an instance of the mutation class or some suitable event.\n4. Define and register `mutation_consumer`s, which are functions that accept an event and do something with it, such as create an object in a database, create a structured log record, delete spam from your grandmother, etc. Any exception raised by the consumer will be propagated to the caller in the case of a synchronous mutation. Asynchronous mutations will require you to handle exception events in their own way (possibly simply by logging them).\n5. Define some queries.\n5. Create a flask app.\n6. Init the microservice object with it via `init_app`.\n7. Start the GraphQL server using `flask run` or `gunicorn` or however you like to run such things\n8. Use `gregor.py` (haha, apropos English-nerd thing, I.R. Smart) to output the default config YAML to a file and modify it and copy it as much as you want to configure your service consumers.\n9. Use `gregor.py` to start up a microservice consumers as a \"node\" using the config you just created to control how often the processes kill themselves (very Kafkaesque) and how many processes should be up at a given time.\n\n### I thought you had opinions?\n\nYou mean *other* than choosing Kafka, Flask, Graphene, and Redis for you? Why yes, yes I did. Or at least I have a way I envision someone using this thing. \n\n##### Create one GraphQL schema for your entire service-web\n\nTechnically this means that your app.py or some such will import ALL of your Microservice objects, `init_app()` them at once, and then create a Query class that inherits from all the service.Query classes and Mutations class that inherits from all the service.Mutations classes for all services in your application. \n\n##### Allow the GraphQL server to be started in \"manager\" mode or regular mode\n\nIn manager mode, you would inherit from ONE more Query and Mutations class before you create your schema. This would add the metamorphosis.service_web set of mutations to your microservices. They allow you to dynamically adjust the number of consumer processes on each node, on a consumer by consumer basis and see a map of the nodes, microservices, consumers, and processes that are keeping your little ant-farm going (if you use this to make an ant farm, please send me a video of the working farm and a signed letter of indemnity if you happen to commit ant-genocide due to a bug in the framework).\n\nThe important thing about manager-mode, though, is that it's just another set of GraphQL mutations that produce events on a special \"service web topic\" on kafka which all consumers on all microservice nodes listen to. This means that you don't want it on the public web.  All of these accept an `authCode` parameter, which is a single code that you can store in an ansible vault, a physical vault, your own eidetic memory, or on a post-it note affixed to your SRE chief's massively over-the-top gaming chair. \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://teamworksapp.gitlab.com/jheard/metamorphosis", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "metamorphosis", "package_url": "https://pypi.org/project/metamorphosis/", "platform": "", "project_url": "https://pypi.org/project/metamorphosis/", "project_urls": {"Homepage": "https://teamworksapp.gitlab.com/jheard/metamorphosis"}, "release_url": "https://pypi.org/project/metamorphosis/0.4.5/", "requires_dist": ["psutil", "click", "redis", "graphene (>=2.1.0)", "graphql-core (>=2.1.0)", "kafka-python (>=1.4.7)", "msgpack (==0.6.2)", "Werkzeug (>=0.14.0)", "Flask (>=1.0.3)"], "requires_python": ">=3.6", "summary": "An opinionated event streaming microframework", "version": "0.4.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Metamorphosis: Somewhat opinionated event streaming</h1>\n<ul>\n<li>Author: Jefferson Heard, jheard at teamworks dot com</li>\n<li>Copyright: 2019 Teamworks Inc.</li>\n<li>License: MIT License</li>\n</ul>\n<p>Metamorphosis is an event-streaming based microframework that builds on top of Flask, Graphene, Kafka, and Redis. It allows you to define microservices, which consist of a number of mutations (commands), queries, and event consumers.</p>\n<p>It chooses simplicity of implementation over abstraction, configurability, and flexibility, making the assumptions that you will be using Kafka or Confluent for your streams, Graphene for your GraphQL, and Redis for your result broker and steward of application state. If you think these technologies suck, this is probably not your microframework. If you think this might be your microframework anyway either because it's late and you're tired of looking or because you think it might have potential, please feel free to provide pull requests implementing abstraction layers around Kafka, Redis, or Flask. I'm really happy to take contributions to this work.</p>\n<p>Also, this framework is based on the famous story about a man who turns into a bug. Plainly I identify deeply with the protagonist, as this is roughly the story of my life. Thus you should assume there are bugs in this code, and you should hunt them down and fix them OR choose to completely ignore them like everyone in Kafka's story. The choice is yours entirely, I can't have <em>all</em> the opinions.</p>\n<h3>How does it work?</h3>\n<p>Before you start, you should define your service in terms of what <em>commands</em> and <em>queries</em> it accepts, and what events it publishes and subscribes to. At the very least, it publishes an event for every command that it supports, but there may be other events as well. It should also (generally) subscribe at least once to every event generated by a command.  Once you have that structure laid out, see the example and work from that. Or try to fly blind using these instructions that I clearly wrote at 10:39pm in a Holiday Inn while putting off sleep. You can tell which method I think will do you more good. Anyway...</p>\n<ol>\n<li>Instantiate a <code>Microservice</code> object and give it a service name. This service name also serves as your default topic name on Kafka.</li>\n<li>Define an <code>EventMutation</code> or <code>AsyncEventMutation</code> for each command your microservice handles. Event mutations are synchronous and will poll, waiting on the event to show up in Redis with either an Exception or a result.</li>\n<li>Define the <code>mutate_event</code> class-method on each mutation, which should authorize and validate the request, then return an instance of the mutation class or some suitable event.</li>\n<li>Define and register <code>mutation_consumer</code>s, which are functions that accept an event and do something with it, such as create an object in a database, create a structured log record, delete spam from your grandmother, etc. Any exception raised by the consumer will be propagated to the caller in the case of a synchronous mutation. Asynchronous mutations will require you to handle exception events in their own way (possibly simply by logging them).</li>\n<li>Define some queries.</li>\n<li>Create a flask app.</li>\n<li>Init the microservice object with it via <code>init_app</code>.</li>\n<li>Start the GraphQL server using <code>flask run</code> or <code>gunicorn</code> or however you like to run such things</li>\n<li>Use <code>gregor.py</code> (haha, apropos English-nerd thing, I.R. Smart) to output the default config YAML to a file and modify it and copy it as much as you want to configure your service consumers.</li>\n<li>Use <code>gregor.py</code> to start up a microservice consumers as a \"node\" using the config you just created to control how often the processes kill themselves (very Kafkaesque) and how many processes should be up at a given time.</li>\n</ol>\n<h3>I thought you had opinions?</h3>\n<p>You mean <em>other</em> than choosing Kafka, Flask, Graphene, and Redis for you? Why yes, yes I did. Or at least I have a way I envision someone using this thing.</p>\n<h5>Create one GraphQL schema for your entire service-web</h5>\n<p>Technically this means that your app.py or some such will import ALL of your Microservice objects, <code>init_app()</code> them at once, and then create a Query class that inherits from all the service.Query classes and Mutations class that inherits from all the service.Mutations classes for all services in your application.</p>\n<h5>Allow the GraphQL server to be started in \"manager\" mode or regular mode</h5>\n<p>In manager mode, you would inherit from ONE more Query and Mutations class before you create your schema. This would add the metamorphosis.service_web set of mutations to your microservices. They allow you to dynamically adjust the number of consumer processes on each node, on a consumer by consumer basis and see a map of the nodes, microservices, consumers, and processes that are keeping your little ant-farm going (if you use this to make an ant farm, please send me a video of the working farm and a signed letter of indemnity if you happen to commit ant-genocide due to a bug in the framework).</p>\n<p>The important thing about manager-mode, though, is that it's just another set of GraphQL mutations that produce events on a special \"service web topic\" on kafka which all consumers on all microservice nodes listen to. This means that you don't want it on the public web.  All of these accept an <code>authCode</code> parameter, which is a single code that you can store in an ansible vault, a physical vault, your own eidetic memory, or on a post-it note affixed to your SRE chief's massively over-the-top gaming chair.</p>\n\n          </div>"}, "last_serial": 6468567, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "64f8c42b0942cca7f728bdc750e9c76e", "sha256": "b17671bbdec3b3d07fb516ade44ef28f90654ea83b5405c7caae2e13e883aaad"}, "downloads": -1, "filename": "metamorphosis-0.1.0-py3.6.egg", "has_sig": false, "md5_digest": "64f8c42b0942cca7f728bdc750e9c76e", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.7", "size": 48284, "upload_time": "2019-10-27T15:14:10", "upload_time_iso_8601": "2019-10-27T15:14:10.112588Z", "url": "https://files.pythonhosted.org/packages/0c/e7/13b7783442989fd9612d02f076ec8ac225ee13b6dbbed3c693133c32ed5e/metamorphosis-0.1.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "298474cbff5dbb0c025c1b32abb01535", "sha256": "58c00b27c264a53658ab68057f6f423db3d946b5b73d30801381a6fcfc21bc2a"}, "downloads": -1, "filename": "metamorphosis-0.1.0-py3.7.egg", "has_sig": false, "md5_digest": "298474cbff5dbb0c025c1b32abb01535", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.7", "size": 48412, "upload_time": "2019-10-27T15:14:11", "upload_time_iso_8601": "2019-10-27T15:14:11.632728Z", "url": "https://files.pythonhosted.org/packages/54/36/05ffaf3e4b49f47149e7b4eeed0e9c4b1511808d976556db49dc2ffb7f47/metamorphosis-0.1.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bcfd25bea30c876b5daafa348c3ffa2", "sha256": "0a6cd9730c13cc13645b5b73e3e9da8fb80d15e37f68b3f402062e85b7d2461a"}, "downloads": -1, "filename": "metamorphosis-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8bcfd25bea30c876b5daafa348c3ffa2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 23416, "upload_time": "2019-10-27T15:14:08", "upload_time_iso_8601": "2019-10-27T15:14:08.031648Z", "url": "https://files.pythonhosted.org/packages/62/cc/fa9ccf348c6f9e56b9fa2df4e09003be518042413a3a1ccacbbd1f902895/metamorphosis-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6441a660f01e7504375f65ead504dbd5", "sha256": "504987bbda8191115d0b5a2948ca0cc8a872c2bdd2d5abdf1675fa225dfe256e"}, "downloads": -1, "filename": "metamorphosis-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6441a660f01e7504375f65ead504dbd5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 20850, "upload_time": "2019-10-27T15:14:13", "upload_time_iso_8601": "2019-10-27T15:14:13.218173Z", "url": "https://files.pythonhosted.org/packages/ce/84/eed5d7bcbd72c109de9bac0432ca83f67dae3ddd3fe3dd9336ed4e51fd1d/metamorphosis-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "af17a70086e49132c36691d7d51a0a59", "sha256": "79d283e2d6bb346a98eaa78d094b6ddf0cf835d8ee4c36709cb06e8437c45c37"}, "downloads": -1, "filename": "metamorphosis-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "af17a70086e49132c36691d7d51a0a59", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 23412, "upload_time": "2019-10-27T15:22:16", "upload_time_iso_8601": "2019-10-27T15:22:16.512754Z", "url": "https://files.pythonhosted.org/packages/3b/7a/8b545790e304d51f8532619f66d336d52e4b37ee54effe969442c9d24be1/metamorphosis-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bab99cb6b9dc726b7b1115e910d3cd1f", "sha256": "89c568df936b411f7ad2f13ecccf195fbad0f22a0f77f0c9d5f5f67a2ea4af13"}, "downloads": -1, "filename": "metamorphosis-0.1.1.tar.gz", "has_sig": false, "md5_digest": "bab99cb6b9dc726b7b1115e910d3cd1f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20862, "upload_time": "2019-10-27T15:22:19", "upload_time_iso_8601": "2019-10-27T15:22:19.927683Z", "url": "https://files.pythonhosted.org/packages/19/1c/b14ce7702bd894ccd375852a09a8183741228f4c4d53350f73a80ab6e86d/metamorphosis-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d83c1fb74d498adef4fb5bf02b9b4bd0", "sha256": "ec064fcee8b99b370482d945681e4eb7e39365d5abd3d4a25cc30921190a4154"}, "downloads": -1, "filename": "metamorphosis-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d83c1fb74d498adef4fb5bf02b9b4bd0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 23415, "upload_time": "2019-11-25T21:09:34", "upload_time_iso_8601": "2019-11-25T21:09:34.115583Z", "url": "https://files.pythonhosted.org/packages/c2/1d/dd165678c4381efd47faf9a65a16b00e2327f74a54f11ec4cc9a8fb6a56a/metamorphosis-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d0f7ef780a2d23599b60846b915660e", "sha256": "efdf0f24a2ab450330a129bec97fd8a82f95143736d470b6e7a70f50e0dfc609"}, "downloads": -1, "filename": "metamorphosis-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7d0f7ef780a2d23599b60846b915660e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20860, "upload_time": "2019-11-25T21:09:37", "upload_time_iso_8601": "2019-11-25T21:09:37.888960Z", "url": "https://files.pythonhosted.org/packages/e4/8e/b19e8419b371d3c6ebc085f8f72f445711a94f7172647f67fe9e629fc4be/metamorphosis-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a10ce0a703110faa8c320ccfeb835d00", "sha256": "e6e32b52d075d41142c5c60d0811a8143f59830895a13be5626835f39905c216"}, "downloads": -1, "filename": "metamorphosis-0.2.0-py3.7.egg", "has_sig": false, "md5_digest": "a10ce0a703110faa8c320ccfeb835d00", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 48112, "upload_time": "2019-12-19T17:16:30", "upload_time_iso_8601": "2019-12-19T17:16:30.176892Z", "url": "https://files.pythonhosted.org/packages/5d/0a/3d3eec27a0cf92a5dfa74c6467ad3078088ef996bb9ad2c12b0286597b9b/metamorphosis-0.2.0-py3.7.egg", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "a4465b7517a1611868ccc521e40ed286", "sha256": "1fcd4c12fdf43680c18c3c427ba50da81497f74176ddf6d861e69c0768320db4"}, "downloads": -1, "filename": "metamorphosis-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a4465b7517a1611868ccc521e40ed286", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 29396, "upload_time": "2019-12-19T17:16:22", "upload_time_iso_8601": "2019-12-19T17:16:22.912807Z", "url": "https://files.pythonhosted.org/packages/d2/77/29cefc648a5b6aa7ae5148c52247f3f1f6b8e5d031ed7aae227ded786c10/metamorphosis-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad0563ab163e686a5854cb7ddf368cff", "sha256": "9ec4ca57864200df397758370174e1e464558a1b3146bcc9ea26deba8b007a3a"}, "downloads": -1, "filename": "metamorphosis-0.3.0.tar.gz", "has_sig": false, "md5_digest": "ad0563ab163e686a5854cb7ddf368cff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25065, "upload_time": "2019-12-19T17:16:31", "upload_time_iso_8601": "2019-12-19T17:16:31.693979Z", "url": "https://files.pythonhosted.org/packages/04/f3/1c0a85bcb6f06dcef6458133254532a4d748594cc5ca97c11f87bca86946/metamorphosis-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "9c33a9eac9724650581223ad2f72e94b", "sha256": "36e87d7c0c2204ba59c82b18755f58053cbf4eac7ff918922c9df89ec44f3cbf"}, "downloads": -1, "filename": "metamorphosis-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9c33a9eac9724650581223ad2f72e94b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38220, "upload_time": "2019-12-20T17:20:33", "upload_time_iso_8601": "2019-12-20T17:20:33.339971Z", "url": "https://files.pythonhosted.org/packages/cb/49/251446d89c1f093379e36f4de0419c2dbf35835ad5524653756040694e95/metamorphosis-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9cf91b9d791d788d48c84afbf906f724", "sha256": "84993de6a46bde318f6f642a638e8ccc30776109d76a36df49ddcdef3848aceb"}, "downloads": -1, "filename": "metamorphosis-0.4.0.tar.gz", "has_sig": false, "md5_digest": "9cf91b9d791d788d48c84afbf906f724", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31284, "upload_time": "2019-12-20T17:20:39", "upload_time_iso_8601": "2019-12-20T17:20:39.287615Z", "url": "https://files.pythonhosted.org/packages/54/8f/b2e1b56c02fa5961d60aae254de89d24798b060185602a2f033c02655300/metamorphosis-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "86745ab728e6db4132e53fd8d673f3f8", "sha256": "37a7e765f23ef98599eec4a2ab6eb87f22da071fc06e1d540ed6ee4e15646c49"}, "downloads": -1, "filename": "metamorphosis-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "86745ab728e6db4132e53fd8d673f3f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38232, "upload_time": "2019-12-20T17:28:19", "upload_time_iso_8601": "2019-12-20T17:28:19.674159Z", "url": "https://files.pythonhosted.org/packages/cb/9f/df17a16117ae5fa44e540c6bc392d08585ec73e56283adfd174e8fe43a98/metamorphosis-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45d3ed038da03f6fe4ad474fb7fe159d", "sha256": "3daf5da75f0308d6873c97b1e2004b46a3b853389e962dba40805e4b43ed0457"}, "downloads": -1, "filename": "metamorphosis-0.4.1.tar.gz", "has_sig": false, "md5_digest": "45d3ed038da03f6fe4ad474fb7fe159d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31296, "upload_time": "2019-12-20T17:28:25", "upload_time_iso_8601": "2019-12-20T17:28:25.661712Z", "url": "https://files.pythonhosted.org/packages/73/e2/3ae797834fe60abc26c8b748e66f3b626e246cffc02735187653284d7224/metamorphosis-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "50a80bbfb48ede16208b3c98f63ba58b", "sha256": "acd2322e08a17f69602849ec504e26fc9e38893c9af93e1af37ec86d48088762"}, "downloads": -1, "filename": "metamorphosis-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "50a80bbfb48ede16208b3c98f63ba58b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38348, "upload_time": "2019-12-28T01:04:49", "upload_time_iso_8601": "2019-12-28T01:04:49.463232Z", "url": "https://files.pythonhosted.org/packages/b9/b4/a09fb9c7fb24e026b80c5613986a5a7fb4cc30c7fd7f2f7e5e8f650d8622/metamorphosis-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84f1b991682064c24b7c82b3068e4e80", "sha256": "73afa04b186b1826ff9928bcb973da2a768b882d86a67ad15892723258657c42"}, "downloads": -1, "filename": "metamorphosis-0.4.2.tar.gz", "has_sig": false, "md5_digest": "84f1b991682064c24b7c82b3068e4e80", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31371, "upload_time": "2019-12-28T01:04:56", "upload_time_iso_8601": "2019-12-28T01:04:56.395570Z", "url": "https://files.pythonhosted.org/packages/c7/b4/3b9884991acb88de9ed905da0bff3287fafe6ff40b13b3955574bacdce03/metamorphosis-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "b100f473a33bff7e652a9f9eeb0588eb", "sha256": "84a602677a82af9bfd8b0bd063e3308fe8458b6253b890bc20b47cdafa9d3660"}, "downloads": -1, "filename": "metamorphosis-0.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b100f473a33bff7e652a9f9eeb0588eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38361, "upload_time": "2019-12-28T20:12:07", "upload_time_iso_8601": "2019-12-28T20:12:07.932166Z", "url": "https://files.pythonhosted.org/packages/31/f5/21b775917c77edf8ecdc752a6928491b1f2f6777ce6a9fd201cd5ff70e1b/metamorphosis-0.4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4e421b159920878eb663f5bb92e0cda", "sha256": "32fdf193652bc7e4e76dc4b9808db00b1c58562b02fc2afe0129e5690a65c910"}, "downloads": -1, "filename": "metamorphosis-0.4.3.tar.gz", "has_sig": false, "md5_digest": "b4e421b159920878eb663f5bb92e0cda", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31406, "upload_time": "2019-12-28T20:12:16", "upload_time_iso_8601": "2019-12-28T20:12:16.797357Z", "url": "https://files.pythonhosted.org/packages/d0/eb/9d0bf72428e4f7b6eb80817125ccb7ee774b732b0987ef52fbf10a62a3b6/metamorphosis-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "1b99f624a7e1170c9d08ae1fd52db4b3", "sha256": "e01d5d9eda39136f999b279df15ae5b51b24f87a8de8646b7395b49bff8f5fdc"}, "downloads": -1, "filename": "metamorphosis-0.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "1b99f624a7e1170c9d08ae1fd52db4b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38353, "upload_time": "2020-01-15T14:49:04", "upload_time_iso_8601": "2020-01-15T14:49:04.180007Z", "url": "https://files.pythonhosted.org/packages/2c/89/248dcdfa1691ded9e94f2fd5ba2cc5ba2ed293c36b503bfd89a1b4ebe211/metamorphosis-0.4.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63d0cb48717586b25dc25d36be74ca7a", "sha256": "8f0d9baf1ad8a2944f763e996a70b50b313f7eb491a1973090418a63e41af68c"}, "downloads": -1, "filename": "metamorphosis-0.4.4.tar.gz", "has_sig": false, "md5_digest": "63d0cb48717586b25dc25d36be74ca7a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31411, "upload_time": "2020-01-15T14:49:12", "upload_time_iso_8601": "2020-01-15T14:49:12.658211Z", "url": "https://files.pythonhosted.org/packages/69/ed/fce92bf47680e98a60ca660e14ae315dbe9c98583cb4ad164c1dbbba8c94/metamorphosis-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "917ce4307e9eb9ae9972c9282fc63c2f", "sha256": "2d00ab93dae17f6e35687b6729af07a326416f754c167ff6033bc46fcfaca2ea"}, "downloads": -1, "filename": "metamorphosis-0.4.5-py3-none-any.whl", "has_sig": false, "md5_digest": "917ce4307e9eb9ae9972c9282fc63c2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38428, "upload_time": "2020-01-16T20:46:12", "upload_time_iso_8601": "2020-01-16T20:46:12.562318Z", "url": "https://files.pythonhosted.org/packages/5c/72/55105be44d3f181a6ffb4d1a98f7b159ccbfc8c2442d6d247d12719440c1/metamorphosis-0.4.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36c0aab309f133ded6eab1e42dac8bdf", "sha256": "deb3e162f8f102850c41a4019bb05d1517cca93d8e9e0e3a591e74b32cc6f005"}, "downloads": -1, "filename": "metamorphosis-0.4.5.tar.gz", "has_sig": false, "md5_digest": "36c0aab309f133ded6eab1e42dac8bdf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31479, "upload_time": "2020-01-16T20:46:14", "upload_time_iso_8601": "2020-01-16T20:46:14.247731Z", "url": "https://files.pythonhosted.org/packages/87/f3/18aa34f038a09b6a8f1980815aad3a8587f8797a6a8fd9b083d60cef4f7b/metamorphosis-0.4.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "917ce4307e9eb9ae9972c9282fc63c2f", "sha256": "2d00ab93dae17f6e35687b6729af07a326416f754c167ff6033bc46fcfaca2ea"}, "downloads": -1, "filename": "metamorphosis-0.4.5-py3-none-any.whl", "has_sig": false, "md5_digest": "917ce4307e9eb9ae9972c9282fc63c2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38428, "upload_time": "2020-01-16T20:46:12", "upload_time_iso_8601": "2020-01-16T20:46:12.562318Z", "url": "https://files.pythonhosted.org/packages/5c/72/55105be44d3f181a6ffb4d1a98f7b159ccbfc8c2442d6d247d12719440c1/metamorphosis-0.4.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36c0aab309f133ded6eab1e42dac8bdf", "sha256": "deb3e162f8f102850c41a4019bb05d1517cca93d8e9e0e3a591e74b32cc6f005"}, "downloads": -1, "filename": "metamorphosis-0.4.5.tar.gz", "has_sig": false, "md5_digest": "36c0aab309f133ded6eab1e42dac8bdf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31479, "upload_time": "2020-01-16T20:46:14", "upload_time_iso_8601": "2020-01-16T20:46:14.247731Z", "url": "https://files.pythonhosted.org/packages/87/f3/18aa34f038a09b6a8f1980815aad3a8587f8797a6a8fd9b083d60cef4f7b/metamorphosis-0.4.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:53 2020"}