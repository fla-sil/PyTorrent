{"info": {"author": "Felipe Amaral", "author_email": "costinha.fca@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# File manipulation\n\n## Explanation:\n\n<p>The idea is to transform a function that transform one text into another text and call it transforming the desired files with that function.</p>\n<p>This is not a package made thinking about being used in a project, rather it's a package made to make a programmer's life easier.</p>\n\n## INSTRUCTIONS:\n<p>Decorator that transforms an <b>[str] = function( [str]:text, *args, **kwargs )</b> into an function that apllies itself into a folder.</p>\n<p>The default values for the new function can be set at the decorator.</p>\n<div class='params'>\n<label><b>at</b> - regex to search target files</label>\n<label><b>path</b> - folder with files to change (start folder on recursive mode)</label>\n<label><b>recursive</b> - makes the function call itself on all folders inside the start folder</label>\n<label><b>ignore</b> - ignore changes on file if function returns any error and continues to the next file</label>\n<label><b>test</b> - creates a new file with the changes for test (NOT recommended with: recursive = True)</label>\n<label><b>prefix/posfix</b> - strings added before and after test files</label>\n<label><b>log</b> - shows on console steps</label>\n</div>\n\n<p>Default values on decorator are set to avoid writting over important files with broken functions.</p>\n\n### !! ATENTION !!\n<p>MAKE SURE TO ALWAYS TEST YOUR FUNCTIONS BEFORE APPLYING ANY TRUE CHANGES.</p>\n\n### Simple functions:\n\n<p>Imagine you want to comment all prints in your project:</p>\n\n~~~\nfrom manip import manip\n\n@manip()\ndef comment_print(text):\n    return text.replace('print(', '# print(')\n~~~\n\n<p>Now we can call the function on a folder like:</p>\n\n~~~\ncomment_print(path='./target')\ncomment_print(path='./target', test=False) # to save changes on original files\n~~~\n\n<p>If you wanna just call a single line function on the command line you can import manipulate:</p>\n\n~~~\nfrom manip import manipulate\n\nmanipulate(lambda text: text.replace('print(', '# print('), path='./target', test=False)\n~~~\n\n<p>up to change whole files with json data, maybe:</p>\n\n~~~\nfrom manip import manip\nimport json\n\n@manip(at='.json$')\ndef join_props(text, prop1='key', prop2='value', new_prop='new'):\n    obj = json.loads(text)\n    obj[new_prop] = (prop1, prop2)\n\n    del(obj[prop1])\n    del(obj[prop2])\n\n    return json.dumps(obj)\n~~~\n\n### More info:\n\n[GitHub](https://github.com/Flipecs/file_manip)\n\n<style>\np {\n    font-size: 19px;\n}\n\n.params {\n    display: flex;\n    flex-direction: column;\n    margin-left: 3%;\n    font-size: 17px;\n\n    margin-bottom: 15px;\n}\n</style>\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Flipecs/file_manip.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "manip", "package_url": "https://pypi.org/project/manip/", "platform": "", "project_url": "https://pypi.org/project/manip/", "project_urls": {"Homepage": "https://github.com/Flipecs/file_manip.git"}, "release_url": "https://pypi.org/project/manip/0.2/", "requires_dist": null, "requires_python": "", "summary": "A manipulation package to change whole folders.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>File manipulation</h1>\n<h2>Explanation:</h2>\n<p>The idea is to transform a function that transform one text into another text and call it transforming the desired files with that function.</p>\n<p>This is not a package made thinking about being used in a project, rather it's a package made to make a programmer's life easier.</p>\n<h2>INSTRUCTIONS:</h2>\n<p>Decorator that transforms an <b>[str] = function( [str]:text, *args, **kwargs )</b> into an function that apllies itself into a folder.</p>\n<p>The default values for the new function can be set at the decorator.</p>\n<div>\n&lt;label&gt;<b>at</b> - regex to search target files&lt;/label&gt;\n&lt;label&gt;<b>path</b> - folder with files to change (start folder on recursive mode)&lt;/label&gt;\n&lt;label&gt;<b>recursive</b> - makes the function call itself on all folders inside the start folder&lt;/label&gt;\n&lt;label&gt;<b>ignore</b> - ignore changes on file if function returns any error and continues to the next file&lt;/label&gt;\n&lt;label&gt;<b>test</b> - creates a new file with the changes for test (NOT recommended with: recursive = True)&lt;/label&gt;\n&lt;label&gt;<b>prefix/posfix</b> - strings added before and after test files&lt;/label&gt;\n&lt;label&gt;<b>log</b> - shows on console steps&lt;/label&gt;\n</div>\n<p>Default values on decorator are set to avoid writting over important files with broken functions.</p>\n<h3>!! ATENTION !!</h3>\n<p>MAKE SURE TO ALWAYS TEST YOUR FUNCTIONS BEFORE APPLYING ANY TRUE CHANGES.</p>\n<h3>Simple functions:</h3>\n<p>Imagine you want to comment all prints in your project:</p>\n<pre><code>from manip import manip\n\n@manip()\ndef comment_print(text):\n    return text.replace('print(', '# print(')\n</code></pre>\n<p>Now we can call the function on a folder like:</p>\n<pre><code>comment_print(path='./target')\ncomment_print(path='./target', test=False) # to save changes on original files\n</code></pre>\n<p>If you wanna just call a single line function on the command line you can import manipulate:</p>\n<pre><code>from manip import manipulate\n\nmanipulate(lambda text: text.replace('print(', '# print('), path='./target', test=False)\n</code></pre>\n<p>up to change whole files with json data, maybe:</p>\n<pre><code>from manip import manip\nimport json\n\n@manip(at='.json$')\ndef join_props(text, prop1='key', prop2='value', new_prop='new'):\n    obj = json.loads(text)\n    obj[new_prop] = (prop1, prop2)\n\n    del(obj[prop1])\n    del(obj[prop2])\n\n    return json.dumps(obj)\n</code></pre>\n<h3>More info:</h3>\n<p><a href=\"https://github.com/Flipecs/file_manip\" rel=\"nofollow\">GitHub</a></p>\n&lt;style&gt;\np {\n    font-size: 19px;\n}\n\n.params {\n    display: flex;\n    flex-direction: column;\n    margin-left: 3%;\n    font-size: 17px;\n\n    margin-bottom: 15px;\n}\n&lt;/style&gt;\n\n          </div>"}, "last_serial": 5561860, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ebb487357c6570f06687a2898ae8f4a8", "sha256": "7f9c17e4e2a243848ed656f8721453e5941e265f9260b66c0c090a355338a6c4"}, "downloads": -1, "filename": "manip-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ebb487357c6570f06687a2898ae8f4a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4276, "upload_time": "2019-07-20T05:55:17", "upload_time_iso_8601": "2019-07-20T05:55:17.333764Z", "url": "https://files.pythonhosted.org/packages/83/73/e3d304913c0155f8eae5fc2e788a1ec294457911c0a31edca8022a229123/manip-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4dfb8d3a2a19c9f3164541ac322d849", "sha256": "02cbd7eb5e2792b591cae5e8d6711e5a1f94398acf7c9593c340e60fd252265b"}, "downloads": -1, "filename": "manip-0.1.tar.gz", "has_sig": false, "md5_digest": "f4dfb8d3a2a19c9f3164541ac322d849", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3043, "upload_time": "2019-07-20T05:55:19", "upload_time_iso_8601": "2019-07-20T05:55:19.519545Z", "url": "https://files.pythonhosted.org/packages/5a/05/5de5a4dc112e13fef5093ef11a53de044e8fbfae9ce6b86427067fbe7fa1/manip-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "f6e7a207225c47bd2c93e2b8fabbb693", "sha256": "d8386cf1e6fd303c867280ce712c892ea431fe18eb85ff03f8edd94d8100f533"}, "downloads": -1, "filename": "manip-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f6e7a207225c47bd2c93e2b8fabbb693", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4299, "upload_time": "2019-07-20T23:33:53", "upload_time_iso_8601": "2019-07-20T23:33:53.159084Z", "url": "https://files.pythonhosted.org/packages/a2/35/0855ee4a37dfa62ffa7cb2831e84adc737e1c7163cc9eef931d0b083a1c2/manip-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9bf9336e0906598556907540be0b662", "sha256": "7928e1964d95ab40ec4410555d254857bccdde583a1d3249060bffdfefcdde02"}, "downloads": -1, "filename": "manip-0.2.tar.gz", "has_sig": false, "md5_digest": "f9bf9336e0906598556907540be0b662", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3100, "upload_time": "2019-07-20T23:33:55", "upload_time_iso_8601": "2019-07-20T23:33:55.124517Z", "url": "https://files.pythonhosted.org/packages/52/6d/41c9f3ce1dd6e02c915c158023aece6b12a333392d81948af3afd1a09ba3/manip-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f6e7a207225c47bd2c93e2b8fabbb693", "sha256": "d8386cf1e6fd303c867280ce712c892ea431fe18eb85ff03f8edd94d8100f533"}, "downloads": -1, "filename": "manip-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f6e7a207225c47bd2c93e2b8fabbb693", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4299, "upload_time": "2019-07-20T23:33:53", "upload_time_iso_8601": "2019-07-20T23:33:53.159084Z", "url": "https://files.pythonhosted.org/packages/a2/35/0855ee4a37dfa62ffa7cb2831e84adc737e1c7163cc9eef931d0b083a1c2/manip-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9bf9336e0906598556907540be0b662", "sha256": "7928e1964d95ab40ec4410555d254857bccdde583a1d3249060bffdfefcdde02"}, "downloads": -1, "filename": "manip-0.2.tar.gz", "has_sig": false, "md5_digest": "f9bf9336e0906598556907540be0b662", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3100, "upload_time": "2019-07-20T23:33:55", "upload_time_iso_8601": "2019-07-20T23:33:55.124517Z", "url": "https://files.pythonhosted.org/packages/52/6d/41c9f3ce1dd6e02c915c158023aece6b12a333392d81948af3afd1a09ba3/manip-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:31 2020"}