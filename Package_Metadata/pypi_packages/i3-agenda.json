{"info": {"author": "Tomer Rosenfeld", "author_email": "mail@tomerrosenfeld.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "[![AUR version](https://img.shields.io/aur/version/i3-agenda?style=flat-square&logo=arch-linux)](https://aur.archlinux.org/packages/i3-agenda/)\n[![PyPI](https://img.shields.io/pypi/v/i3-agenda?style=flat-square&logo=python)](https://pypi.org/project/i3-agenda/)\n\n\n# What is this?\nIt's a script that communicates with Google's calendar API, it will go through your calendars and print the next calendar event details.\\\nYou can take this output and show it on your i3-bar or polybar\n\n![example](https://raw.githubusercontent.com/rosenpin/i3-agenda/master/art/screenshot.png)\n\n## How does it work\nIt will read your next 10 events from each of your calendars, then go through them all and figure out which one is closest.\\\nIt will print the time and title of the closest event.\n\n# Setup\n\n## Google API\nhttps://developers.google.com/calendar/quickstart/python\n\n1. You need to create a Google API project and download your OAuth 2.0 credentials json file.\\\nYou first need to create a project [here](https://console.developers.google.com/apis/credentials), then add Google Calendar support, then download the credentials.json file.\\\n**Alternatively, you can just use [this link](https://developers.google.com/calendar/quickstart/python) and click \"Enable the Google Calendar API\". This will create a project, add Google Calendar support, and let you download the file in 1 click**.\\\nIf you're having trouble, you can use this tutorial for more information [https://developers.google.com/calendar/auth](https://developers.google.com/calendar/auth).\\\nAnother great guide can be found here if you're still having trouble: [https://github.com/jay0lee/GAM/wiki/CreatingClientSecretsFile](https://github.com/jay0lee/GAM/wiki/CreatingClientSecretsFile).\n2. Download the credentials file to somewhere on your computer.\n3. Proceed to installation phase.\n\n## Installation\nAfter downloading the credentials file, install the package.\n\n### Pip\n1. `sudo pip install i3-agenda`\n2. Try running `i3-agenda -c $CREDENTIALS_FILE_PATH` with \"$CREDENTIALS_FILE_PATH\" replaced with the path to the credentials.json file you downloaded in the previous step.\n3. Add configuration to your bar (examples in the Examples section below).\n\n### Arch Linux (AUR)\n1. `yay -S i3-agenda-git`\n2. Try running `i3-agenda -c $CREDENTIALS_FILE_PATH` with \"$CREDENTIALS_FILE_PATH\" replaced with the path to the credentials.json file you downloaded in the previous step.\n3. Add configuration to your bar (examples in the Examples section below).\n\n### Manual\n#### Dependencies\nYou need to install some python libraries first.\\\nMake sure python3 is your default python.\\\nRun `sudo pip3 install python-bidi google-api-python-client google-auth-httplib2 google-auth-oauthlib`\n\n1. Clone the repo to a local directory `cd ~/ && git clone https://github.com/rosenpin/i3-agenda && cd i3-agenda`\n3. Run the script `python3 i3_agenda/__init__.py -c $CREDENTIALS_FILE_PATH` with \"$CREDENTIALS_FILE_PATH\" replaced with the path to the credentials.json file you downloaded in the previous step. If configured correctly, it will prompt you to log in in your browser, accept everything. It should print your next event.\n4. Optional: you can run `sudo python setup.py install` to add the script to your path so you can run `i3-agenda` anywhere.\n5. Add configuration to your bar (examples in the Examples section below).\n\n# Usage\n```\n  -h, --help            show this help message and exit\n  --credentials CREDENTIALS, -c CREDENTIALS\n                        path to your credentials.json file\n  --cachettl CACHETTL, -ttl CACHETTL\n                        time for cache to be kept in minutes\n  --update, -u          when using this flag it will not load previous results from cache, it will however save new results to cache. You can use this flag to refresh all the cache forcefully\n  --ids IDS [IDS ...], -i IDS [IDS ...]\n                        list of calendar ids to fetch, space separated. If none is specified all calendars will be fetched\n  --maxres MAXRES, -r MAXRES\n                        max number of events to query Google's API for each of your calendars. Increase this number if you have lot of events in your google calendar\n  --today, -d           print only today events\n  --no-event-text TEXT  text to display when there are no events\n```\n\n### Filter displayed calendars\nTo display events only from certain calendars use the `--ids` parameter and pass a list of calendar id, space separated.\\\nTo obtain the calendar id you can check the settings page of the calendar on Google (usually is the owner email, if it's not shared).\\\nLeaving the list empty will fetch all calendars (default behavior).\n\n## Notes\n### Known issues\nIt might not work properly if you have more than 10 all day events, this can be fixed by increasing the maxResults variable.\n\n### Caching\nIt uses a caching mechanism so you won't have to contact Google servers every minute, to set the cache TTL use the -ttl flag.\\\nExample: `i3-agenda --ttl 60` to set the TTL to 60 (meaning it will contact Google again every hour).\\\nThis means that if you create a new event, it might take an hour for the script to recognize it.\n\n## Examples\nExample polybar configuration:\n``` ini\nmodules-center = agenda\n....\n[module/agenda]\ntype = custom/script\n; Show the next event and forget cache automatically every 60 minutes\nexec = i3-agenda -c ~/.google_credentials.json -ttl 60\n; left click to launch Google Calendar\nclick-left = chromium https://calendar.google.com/calendar/r/day\n; right click force update the cache, if for example you just added a new event\nclick-right = notify-send \"syncing...\" && i3-agenda -c ~/.google_credentials.json --update && notify-send -t 2000 \"sync finished\"\ninterval = 60\n```\n\nExample i3block configuration:\n```\n[i3-agenda]\ncommand=i3-agenda -c ~/.google_credentials.json -ttl 60\ninterval=60\n```\n\n\nExample output of the script:\\\n```10:55 Grocery shopping```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/rosenpin/i3-agenda/archive/1.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rosenpin/i3-agenda", "keywords": "", "license": "Unlicense", "maintainer": "", "maintainer_email": "", "name": "i3-agenda", "package_url": "https://pypi.org/project/i3-agenda/", "platform": "", "project_url": "https://pypi.org/project/i3-agenda/", "project_urls": {"Download": "https://github.com/rosenpin/i3-agenda/archive/1.2.tar.gz", "Homepage": "https://github.com/rosenpin/i3-agenda"}, "release_url": "https://pypi.org/project/i3-agenda/1.2/", "requires_dist": null, "requires_python": ">=3.3", "summary": "Show your next google calendar event in polybar or i3-bar", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://aur.archlinux.org/packages/i3-agenda/\" rel=\"nofollow\"><img alt=\"AUR version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/47f234d0af4282e7d314be4d251e95428ee8b0af/68747470733a2f2f696d672e736869656c64732e696f2f6175722f76657273696f6e2f69332d6167656e64613f7374796c653d666c61742d737175617265266c6f676f3d617263682d6c696e7578\"></a>\n<a href=\"https://pypi.org/project/i3-agenda/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b60f61e1a8a90802f3f3ed2c186a0a0c20aee0a8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f69332d6167656e64613f7374796c653d666c61742d737175617265266c6f676f3d707974686f6e\"></a></p>\n<h1>What is this?</h1>\n<p>It's a script that communicates with Google's calendar API, it will go through your calendars and print the next calendar event details.<br>\nYou can take this output and show it on your i3-bar or polybar</p>\n<p><img alt=\"example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b5446d5345f299e487094b5685c2a21c557580ed/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f726f73656e70696e2f69332d6167656e64612f6d61737465722f6172742f73637265656e73686f742e706e67\"></p>\n<h2>How does it work</h2>\n<p>It will read your next 10 events from each of your calendars, then go through them all and figure out which one is closest.<br>\nIt will print the time and title of the closest event.</p>\n<h1>Setup</h1>\n<h2>Google API</h2>\n<p><a href=\"https://developers.google.com/calendar/quickstart/python\" rel=\"nofollow\">https://developers.google.com/calendar/quickstart/python</a></p>\n<ol>\n<li>You need to create a Google API project and download your OAuth 2.0 credentials json file.<br>\nYou first need to create a project <a href=\"https://console.developers.google.com/apis/credentials\" rel=\"nofollow\">here</a>, then add Google Calendar support, then download the credentials.json file.<br>\n<strong>Alternatively, you can just use <a href=\"https://developers.google.com/calendar/quickstart/python\" rel=\"nofollow\">this link</a> and click \"Enable the Google Calendar API\". This will create a project, add Google Calendar support, and let you download the file in 1 click</strong>.<br>\nIf you're having trouble, you can use this tutorial for more information <a href=\"https://developers.google.com/calendar/auth\" rel=\"nofollow\">https://developers.google.com/calendar/auth</a>.<br>\nAnother great guide can be found here if you're still having trouble: <a href=\"https://github.com/jay0lee/GAM/wiki/CreatingClientSecretsFile\" rel=\"nofollow\">https://github.com/jay0lee/GAM/wiki/CreatingClientSecretsFile</a>.</li>\n<li>Download the credentials file to somewhere on your computer.</li>\n<li>Proceed to installation phase.</li>\n</ol>\n<h2>Installation</h2>\n<p>After downloading the credentials file, install the package.</p>\n<h3>Pip</h3>\n<ol>\n<li><code>sudo pip install i3-agenda</code></li>\n<li>Try running <code>i3-agenda -c $CREDENTIALS_FILE_PATH</code> with \"$CREDENTIALS_FILE_PATH\" replaced with the path to the credentials.json file you downloaded in the previous step.</li>\n<li>Add configuration to your bar (examples in the Examples section below).</li>\n</ol>\n<h3>Arch Linux (AUR)</h3>\n<ol>\n<li><code>yay -S i3-agenda-git</code></li>\n<li>Try running <code>i3-agenda -c $CREDENTIALS_FILE_PATH</code> with \"$CREDENTIALS_FILE_PATH\" replaced with the path to the credentials.json file you downloaded in the previous step.</li>\n<li>Add configuration to your bar (examples in the Examples section below).</li>\n</ol>\n<h3>Manual</h3>\n<h4>Dependencies</h4>\n<p>You need to install some python libraries first.<br>\nMake sure python3 is your default python.<br>\nRun <code>sudo pip3 install python-bidi google-api-python-client google-auth-httplib2 google-auth-oauthlib</code></p>\n<ol>\n<li>Clone the repo to a local directory <code>cd ~/ &amp;&amp; git clone https://github.com/rosenpin/i3-agenda &amp;&amp; cd i3-agenda</code></li>\n<li>Run the script <code>python3 i3_agenda/__init__.py -c $CREDENTIALS_FILE_PATH</code> with \"$CREDENTIALS_FILE_PATH\" replaced with the path to the credentials.json file you downloaded in the previous step. If configured correctly, it will prompt you to log in in your browser, accept everything. It should print your next event.</li>\n<li>Optional: you can run <code>sudo python setup.py install</code> to add the script to your path so you can run <code>i3-agenda</code> anywhere.</li>\n<li>Add configuration to your bar (examples in the Examples section below).</li>\n</ol>\n<h1>Usage</h1>\n<pre><code>  -h, --help            show this help message and exit\n  --credentials CREDENTIALS, -c CREDENTIALS\n                        path to your credentials.json file\n  --cachettl CACHETTL, -ttl CACHETTL\n                        time for cache to be kept in minutes\n  --update, -u          when using this flag it will not load previous results from cache, it will however save new results to cache. You can use this flag to refresh all the cache forcefully\n  --ids IDS [IDS ...], -i IDS [IDS ...]\n                        list of calendar ids to fetch, space separated. If none is specified all calendars will be fetched\n  --maxres MAXRES, -r MAXRES\n                        max number of events to query Google's API for each of your calendars. Increase this number if you have lot of events in your google calendar\n  --today, -d           print only today events\n  --no-event-text TEXT  text to display when there are no events\n</code></pre>\n<h3>Filter displayed calendars</h3>\n<p>To display events only from certain calendars use the <code>--ids</code> parameter and pass a list of calendar id, space separated.<br>\nTo obtain the calendar id you can check the settings page of the calendar on Google (usually is the owner email, if it's not shared).<br>\nLeaving the list empty will fetch all calendars (default behavior).</p>\n<h2>Notes</h2>\n<h3>Known issues</h3>\n<p>It might not work properly if you have more than 10 all day events, this can be fixed by increasing the maxResults variable.</p>\n<h3>Caching</h3>\n<p>It uses a caching mechanism so you won't have to contact Google servers every minute, to set the cache TTL use the -ttl flag.<br>\nExample: <code>i3-agenda --ttl 60</code> to set the TTL to 60 (meaning it will contact Google again every hour).<br>\nThis means that if you create a new event, it might take an hour for the script to recognize it.</p>\n<h2>Examples</h2>\n<p>Example polybar configuration:</p>\n<pre><span class=\"na\">modules-center</span> <span class=\"o\">=</span> <span class=\"s\">agenda</span>\n<span class=\"na\">....</span>\n<span class=\"k\">[module/agenda]</span>\n<span class=\"na\">type</span> <span class=\"o\">=</span> <span class=\"s\">custom/script</span>\n<span class=\"c1\">; Show the next event and forget cache automatically every 60 minutes</span>\n<span class=\"na\">exec</span> <span class=\"o\">=</span> <span class=\"s\">i3-agenda -c ~/.google_credentials.json -ttl 60</span>\n<span class=\"c1\">; left click to launch Google Calendar</span>\n<span class=\"na\">click-left</span> <span class=\"o\">=</span> <span class=\"s\">chromium https://calendar.google.com/calendar/r/day</span>\n<span class=\"c1\">; right click force update the cache, if for example you just added a new event</span>\n<span class=\"na\">click-right</span> <span class=\"o\">=</span> <span class=\"s\">notify-send \"syncing...\" &amp;&amp; i3-agenda -c ~/.google_credentials.json --update &amp;&amp; notify-send -t 2000 \"sync finished\"</span>\n<span class=\"na\">interval</span> <span class=\"o\">=</span> <span class=\"s\">60</span>\n</pre>\n<p>Example i3block configuration:</p>\n<pre><code>[i3-agenda]\ncommand=i3-agenda -c ~/.google_credentials.json -ttl 60\ninterval=60\n</code></pre>\n<p>Example output of the script:<br>\n<code>10:55 Grocery shopping</code></p>\n\n          </div>"}, "last_serial": 7092033, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "d8146d3ae620402e32203cf41449c26c", "sha256": "d69447f9c3159e4be36f089d8a0bae817554ed45d6d80703628d8e767b341ea7"}, "downloads": -1, "filename": "i3_agenda-1.0-py3.8.egg", "has_sig": false, "md5_digest": "d8146d3ae620402e32203cf41449c26c", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": ">=3.3", "size": 10003, "upload_time": "2020-04-19T14:14:46", "upload_time_iso_8601": "2020-04-19T14:14:46.095566Z", "url": "https://files.pythonhosted.org/packages/3c/62/29065162262d77ea7b3cedcea0a0a869cdb107a9d954fe87ef8791ced90e/i3_agenda-1.0-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4b477367a0488e618cb20a195718da1", "sha256": "4ee8118130bf97125a3e4436d5937d76242efb42e6049f80a4e1c582eed54368"}, "downloads": -1, "filename": "i3-agenda-1.0.tar.gz", "has_sig": false, "md5_digest": "b4b477367a0488e618cb20a195718da1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 5540, "upload_time": "2020-04-13T18:41:22", "upload_time_iso_8601": "2020-04-13T18:41:22.235118Z", "url": "https://files.pythonhosted.org/packages/89/7c/7487e85f5f61d979142834dc6e50af337204ee0c686350b8da18fff07794/i3-agenda-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "94608e27cdab15dee66ec3a8aa9bcf12", "sha256": "bee6e3e48e2e3886bb546ec5292477aaa3e9388c93d71977aa387ee4eb9f6965"}, "downloads": -1, "filename": "i3_agenda-1.1-py3.8.egg", "has_sig": false, "md5_digest": "94608e27cdab15dee66ec3a8aa9bcf12", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": ">=3.3", "size": 10351, "upload_time": "2020-04-24T11:50:07", "upload_time_iso_8601": "2020-04-24T11:50:07.806116Z", "url": "https://files.pythonhosted.org/packages/bb/25/128e5ffe7f5f77bb43bc19c30e5283269671eecbca8068d8d8f32f90cd35/i3_agenda-1.1-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "62f327f6afde6586cca364f850bcfd89", "sha256": "fbe593a7c8aa34df7d7bbb7994bae82c22af60d617e23be7dedc8276d7138edb"}, "downloads": -1, "filename": "i3-agenda-1.1.tar.gz", "has_sig": false, "md5_digest": "62f327f6afde6586cca364f850bcfd89", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 6260, "upload_time": "2020-04-19T14:14:47", "upload_time_iso_8601": "2020-04-19T14:14:47.526770Z", "url": "https://files.pythonhosted.org/packages/dd/4a/433acd3d22e65baa39373db95716bb1ed3d45444d44ebbffcdeb610c1792/i3-agenda-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "0cb9a3efa57756d3020a45128e018ae7", "sha256": "8156d5bfd757d345e435f595633441c54ad41c634eb52b76d237750aa1a44706"}, "downloads": -1, "filename": "i3_agenda-1.2-py3.8.egg", "has_sig": false, "md5_digest": "0cb9a3efa57756d3020a45128e018ae7", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": ">=3.3", "size": 10788, "upload_time": "2020-04-24T11:50:10", "upload_time_iso_8601": "2020-04-24T11:50:10.995544Z", "url": "https://files.pythonhosted.org/packages/9b/39/6e6d486c590976c4780420dee3e68763499c363d95312c352046a6b4dd2c/i3_agenda-1.2-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7469fbb8ad652d0fec3cb653dc54ea2", "sha256": "a587a893280d8bd074c77331203015958bb137e1f85c8a3f37631f4d16f95347"}, "downloads": -1, "filename": "i3-agenda-1.2.tar.gz", "has_sig": false, "md5_digest": "a7469fbb8ad652d0fec3cb653dc54ea2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 6720, "upload_time": "2020-04-24T11:50:12", "upload_time_iso_8601": "2020-04-24T11:50:12.538398Z", "url": "https://files.pythonhosted.org/packages/3c/c7/d05522be2248dcf4358975b6284e5470f42022487eee15b21883400617f6/i3-agenda-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0cb9a3efa57756d3020a45128e018ae7", "sha256": "8156d5bfd757d345e435f595633441c54ad41c634eb52b76d237750aa1a44706"}, "downloads": -1, "filename": "i3_agenda-1.2-py3.8.egg", "has_sig": false, "md5_digest": "0cb9a3efa57756d3020a45128e018ae7", "packagetype": "bdist_egg", "python_version": "3.8", "requires_python": ">=3.3", "size": 10788, "upload_time": "2020-04-24T11:50:10", "upload_time_iso_8601": "2020-04-24T11:50:10.995544Z", "url": "https://files.pythonhosted.org/packages/9b/39/6e6d486c590976c4780420dee3e68763499c363d95312c352046a6b4dd2c/i3_agenda-1.2-py3.8.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7469fbb8ad652d0fec3cb653dc54ea2", "sha256": "a587a893280d8bd074c77331203015958bb137e1f85c8a3f37631f4d16f95347"}, "downloads": -1, "filename": "i3-agenda-1.2.tar.gz", "has_sig": false, "md5_digest": "a7469fbb8ad652d0fec3cb653dc54ea2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 6720, "upload_time": "2020-04-24T11:50:12", "upload_time_iso_8601": "2020-04-24T11:50:12.538398Z", "url": "https://files.pythonhosted.org/packages/3c/c7/d05522be2248dcf4358975b6284e5470f42022487eee15b21883400617f6/i3-agenda-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:21 2020"}