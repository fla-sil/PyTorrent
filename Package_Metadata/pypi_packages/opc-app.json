{"info": {"author": "Kevin Glasson", "author_email": "kevinglasson+icp_opc_add@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7"], "description": "# **opc_app**\n\nThis is a simple API that exposes a few routes to request information from the KEP\n\nThis app will make the following routes available at:\n\n```\nhttp://<ip_address>:5000\n```\n\nDepending on the router configuration you will be able to access this gateway from outside the local network as well, i.e. if it is NAT'd out.\n\n# Routes\n\n## **GET** / OR /api\n\n#### Test if the API is alive\n\n```json\n{\n  \"message\": \"opc http endpoint is alive\"\n}\n```\n\n## **GET** /api/sensor/\\<name>\n\n#### Fetch the list of available servers to connect to\n\n```json\n{\n  \"quality\": \"Good\",\n  \"time\": \"02/01/19 07:08:28\",\n  \"value\": 10614\n}\n```\n\n## **GET** /api/servers\n\n#### Fetch the list of available servers to connect to\n\n```json\n{\n  \"servers\": [\"Kepware.KEPServerEX.V6\"]\n}\n```\n\n## **GET** /api/nodes/\\<node>\n\n#### Fetch the list of nodes\n\n```json\n{\n  \"nodes\": [\n    \"_AdvancedTags\",\n    \"_ConnectionSharing\",\n    \"_CustomAlarms\",\n    \"_DataLogger\",\n    \"_EFMExporter\",\n    \"_IDF_for_Splunk\",\n    \"_IoT_Gateway\",\n    \"_LocalHistorian\",\n    \"_Redundancy\",\n    \"_Scheduler\",\n    \"_SecurityPolicies\",\n    \"_SNMP Agent\",\n    \"_System\",\n    \"Channel1\",\n    \"Data Type Examples\",\n    \"Simulation Examples\",\n    \"XMPro\"\n  ]\n}\n```\n\n# Pre-requisites\n\n_Make sure everything installed is 32-bit (even on a 64-bit os)_\n\n## Git BASH\n\nInstall [git BASH](https://github.com/git-for-windows/git/releases/download/v2.20.1.windows.1/Git-2.20.1-32-bit.exe). We will use this terminal emulator to run our program that will communicate with the PLC server.\n\nThere is no need to change any of the default settings during the installation process **except** the below caveats.\n\nWhen installing git BASH the installer will ask you how you would like to use it from the command line. Select the option the same as the image below.\n\n![git-bash-command-prompt](docs/images/git-bash-command-prompt.jpg)\n\nThe installer will also ask you which terminal emulator you would like to use, we will use Winows' default console.\n\n![git-bash-console-window](docs/images/git-bash-console-window.jpg)\n\n## Python 2.7\n\nInstall [Python 2.7 32-bit](https://www.python.org/ftp/python/2.7.15/python-2.7.15.msi) (if it is not already).\n\nEnsure that python gets added to Path. Make sure the small symbol next to `Add python..exe to Path` does _not_ have a cross through.\n\n![python-install-path](docs/images/python-install-path.jpg)\n\nCheck the installation is working by opening git BASH and executing the following.\n\n```bash\npython\n```\n\nExpected output.\n\n![python-command-check](docs/images/python-command-check.jpg)\n\n## Pywin32\n\nInstall the 32-bit version of [pywin32](https://github.com/mhammond/pywin32/releases/download/b224/pywin32-224.win32-py2.7.exe) for python 2.7.\n\n## OpenOPC\n\nInstall the [OpenOPC](https://sourceforge.net/projects/openopc/files/openopc/1.3.1/OpenOPC-1.3.1.win32-py2.7.exe/download) library.\n\nDuring the installation you'll be asked to choose the components you want to install. _Uncheck_ the OPC Gateway service.\n\n![open-opc-gateway-uncheck](docs/images/openopc-gateway-uncheck.jpg)\n\n## Quick Start\n\nAfter all pre-requisites the following steps should get the API up and running\n\n### Install the app\n\nOpen git BASH and run the following command to install the app.\n\n```\npip install opc-app\n```\n\n### Run it!\n\n```bash\nxmpro-demo-app\n```\n\nOn the first time you run this program you may be prompted by Windows about allowing python to communicate through the firewall. We want to allow incoming connections so we need to make sure both boxes are checked like in the image below.\n\n![windows-firewall](docs/images/windows-firewall.jpg)\n\n### Test it!\n\nOpen the browser and browse to any of the routes. Try browsing to `http://localhost:5000/api` and you should see the following.\n\nIf you are using edge you will need to make sure you type the `http://` in front of the web adress or it will _probably_ not work.\n\n![check-edge](docs/images/check-edge.jpg)\n\n### Close it!\n\nYou will need to close git BASH by clicking the red cross. Ctrl-c does not appear to be working at this point.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://gitlab.icentralau.com.au/xmpro/opchttpgateway.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "opc-app", "package_url": "https://pypi.org/project/opc-app/", "platform": "", "project_url": "https://pypi.org/project/opc-app/", "project_urls": {"Homepage": "http://gitlab.icentralau.com.au/xmpro/opchttpgateway.git"}, "release_url": "https://pypi.org/project/opc-app/1.0.0.0/", "requires_dist": null, "requires_python": ">=2.7.*, <=3.0", "summary": "API that communicates with KEP server for XMPro demo machine", "version": "1.0.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><strong>opc_app</strong></h1>\n<p>This is a simple API that exposes a few routes to request information from the KEP</p>\n<p>This app will make the following routes available at:</p>\n<pre><code>http://&lt;ip_address&gt;:5000\n</code></pre>\n<p>Depending on the router configuration you will be able to access this gateway from outside the local network as well, i.e. if it is NAT'd out.</p>\n<h1>Routes</h1>\n<h2><strong>GET</strong> / OR /api</h2>\n<h4>Test if the API is alive</h4>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"opc http endpoint is alive\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h2><strong>GET</strong> /api/sensor/&lt;name&gt;</h2>\n<h4>Fetch the list of available servers to connect to</h4>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"quality\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Good\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"time\"</span><span class=\"p\">:</span> <span class=\"s2\">\"02/01/19 07:08:28\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"mi\">10614</span>\n<span class=\"p\">}</span>\n</pre>\n<h2><strong>GET</strong> /api/servers</h2>\n<h4>Fetch the list of available servers to connect to</h4>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"servers\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"Kepware.KEPServerEX.V6\"</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<h2><strong>GET</strong> /api/nodes/&lt;node&gt;</h2>\n<h4>Fetch the list of nodes</h4>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"nodes\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"_AdvancedTags\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"_ConnectionSharing\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"_CustomAlarms\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"_DataLogger\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"_EFMExporter\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"_IDF_for_Splunk\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"_IoT_Gateway\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"_LocalHistorian\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"_Redundancy\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"_Scheduler\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"_SecurityPolicies\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"_SNMP Agent\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"_System\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"Channel1\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"Data Type Examples\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"Simulation Examples\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"XMPro\"</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<h1>Pre-requisites</h1>\n<p><em>Make sure everything installed is 32-bit (even on a 64-bit os)</em></p>\n<h2>Git BASH</h2>\n<p>Install <a href=\"https://github.com/git-for-windows/git/releases/download/v2.20.1.windows.1/Git-2.20.1-32-bit.exe\" rel=\"nofollow\">git BASH</a>. We will use this terminal emulator to run our program that will communicate with the PLC server.</p>\n<p>There is no need to change any of the default settings during the installation process <strong>except</strong> the below caveats.</p>\n<p>When installing git BASH the installer will ask you how you would like to use it from the command line. Select the option the same as the image below.</p>\n<p><img alt=\"git-bash-command-prompt\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be3647c14660a1f3669546466dfe2832b55262f6/646f63732f696d616765732f6769742d626173682d636f6d6d616e642d70726f6d70742e6a7067\"></p>\n<p>The installer will also ask you which terminal emulator you would like to use, we will use Winows' default console.</p>\n<p><img alt=\"git-bash-console-window\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b08eecd9ba26b6db900b19ebba2e270d058877c/646f63732f696d616765732f6769742d626173682d636f6e736f6c652d77696e646f772e6a7067\"></p>\n<h2>Python 2.7</h2>\n<p>Install <a href=\"https://www.python.org/ftp/python/2.7.15/python-2.7.15.msi\" rel=\"nofollow\">Python 2.7 32-bit</a> (if it is not already).</p>\n<p>Ensure that python gets added to Path. Make sure the small symbol next to <code>Add python..exe to Path</code> does <em>not</em> have a cross through.</p>\n<p><img alt=\"python-install-path\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ddd6c083c189e97984726f03df863e2aa107a010/646f63732f696d616765732f707974686f6e2d696e7374616c6c2d706174682e6a7067\"></p>\n<p>Check the installation is working by opening git BASH and executing the following.</p>\n<pre>python\n</pre>\n<p>Expected output.</p>\n<p><img alt=\"python-command-check\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db93050bbb82f5fbc355fcfec995e749dffc9a89/646f63732f696d616765732f707974686f6e2d636f6d6d616e642d636865636b2e6a7067\"></p>\n<h2>Pywin32</h2>\n<p>Install the 32-bit version of <a href=\"https://github.com/mhammond/pywin32/releases/download/b224/pywin32-224.win32-py2.7.exe\" rel=\"nofollow\">pywin32</a> for python 2.7.</p>\n<h2>OpenOPC</h2>\n<p>Install the <a href=\"https://sourceforge.net/projects/openopc/files/openopc/1.3.1/OpenOPC-1.3.1.win32-py2.7.exe/download\" rel=\"nofollow\">OpenOPC</a> library.</p>\n<p>During the installation you'll be asked to choose the components you want to install. <em>Uncheck</em> the OPC Gateway service.</p>\n<p><img alt=\"open-opc-gateway-uncheck\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/02417d9656ac9e1c05d31981b8ec50af78910994/646f63732f696d616765732f6f70656e6f70632d676174657761792d756e636865636b2e6a7067\"></p>\n<h2>Quick Start</h2>\n<p>After all pre-requisites the following steps should get the API up and running</p>\n<h3>Install the app</h3>\n<p>Open git BASH and run the following command to install the app.</p>\n<pre><code>pip install opc-app\n</code></pre>\n<h3>Run it!</h3>\n<pre>xmpro-demo-app\n</pre>\n<p>On the first time you run this program you may be prompted by Windows about allowing python to communicate through the firewall. We want to allow incoming connections so we need to make sure both boxes are checked like in the image below.</p>\n<p><img alt=\"windows-firewall\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/73eac60508e5d9b4c5816046359d89c8a74d222a/646f63732f696d616765732f77696e646f77732d6669726577616c6c2e6a7067\"></p>\n<h3>Test it!</h3>\n<p>Open the browser and browse to any of the routes. Try browsing to <code>http://localhost:5000/api</code> and you should see the following.</p>\n<p>If you are using edge you will need to make sure you type the <code>http://</code> in front of the web adress or it will <em>probably</em> not work.</p>\n<p><img alt=\"check-edge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/800c202ef16b0b3ea1806b44ef8c4d5c0ade023d/646f63732f696d616765732f636865636b2d656467652e6a7067\"></p>\n<h3>Close it!</h3>\n<p>You will need to close git BASH by clicking the red cross. Ctrl-c does not appear to be working at this point.</p>\n\n          </div>"}, "last_serial": 4768567, "releases": {"0.1.0.0": [{"comment_text": "", "digests": {"md5": "1187f5a4ba7b65d91fa6a774990d3a65", "sha256": "f24f7b2555c1f1ab416b624701fd9f98bbf19656f47c5d6efa564c872c6820e3"}, "downloads": -1, "filename": "opc_app-0.1.0.0-py2.7.egg", "has_sig": false, "md5_digest": "1187f5a4ba7b65d91fa6a774990d3a65", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": "==2.7", "size": 29971, "upload_time": "2019-02-01T13:58:17", "upload_time_iso_8601": "2019-02-01T13:58:17.649241Z", "url": "https://files.pythonhosted.org/packages/03/8a/0fee2b3c958c7c80dbe5d171c423a91fdb22eb8df31258ba321d676efa3a/opc_app-0.1.0.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc7e0c481959652613a7188455b213ae", "sha256": "d703b396226d182778219c6917625fe3bfbacfb976345c1055febd4844f4bfa6"}, "downloads": -1, "filename": "opc_app-0.1.0.0.tar.gz", "has_sig": false, "md5_digest": "dc7e0c481959652613a7188455b213ae", "packagetype": "sdist", "python_version": "source", "requires_python": "==2.7", "size": 14210, "upload_time": "2019-02-01T02:41:28", "upload_time_iso_8601": "2019-02-01T02:41:28.512447Z", "url": "https://files.pythonhosted.org/packages/e7/a8/acb6fb8cd4c2b760c5433bb7f8caa8f33fba5ff01df60d30f9d4610633ab/opc_app-0.1.0.0.tar.gz", "yanked": false}], "0.1.0.1": [{"comment_text": "", "digests": {"md5": "d8e88ffb9db05df1fe5115567a471b26", "sha256": "6233a5d317e90f35fe0b405e5409903d3012741f74cbb518288b795fee01708d"}, "downloads": -1, "filename": "opc_app-0.1.0.1.tar.gz", "has_sig": false, "md5_digest": "d8e88ffb9db05df1fe5115567a471b26", "packagetype": "sdist", "python_version": "source", "requires_python": "==2.7", "size": 14203, "upload_time": "2019-02-01T02:41:31", "upload_time_iso_8601": "2019-02-01T02:41:31.040541Z", "url": "https://files.pythonhosted.org/packages/03/a6/f3fd266366b0ae07c4d81b695110ba594e5d958266baf761dd6879deb07f/opc_app-0.1.0.1.tar.gz", "yanked": false}], "0.2.0.0": [{"comment_text": "", "digests": {"md5": "522f4ddc0ea47e320517545e49d52c8c", "sha256": "899a1374ccf4ba67c67350689d4346c0c87314b503323be890a5551112b3ff9b"}, "downloads": -1, "filename": "opc_app-0.2.0.0.tar.gz", "has_sig": false, "md5_digest": "522f4ddc0ea47e320517545e49d52c8c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.*, <=3.0", "size": 15461, "upload_time": "2019-02-01T12:46:40", "upload_time_iso_8601": "2019-02-01T12:46:40.873851Z", "url": "https://files.pythonhosted.org/packages/af/db/3ced536ab1c5486e58cbe1bc1351f67f9b736cdccd627c470436cf3e82ba/opc_app-0.2.0.0.tar.gz", "yanked": false}], "0.2.0.1": [{"comment_text": "", "digests": {"md5": "188f54ca5a503c04f4fe5737cf41b852", "sha256": "f766bba7826b488ff8718f5b56c62f5ca82539df6a78ca19b6cdac0db6287668"}, "downloads": -1, "filename": "opc_app-0.2.0.1.tar.gz", "has_sig": false, "md5_digest": "188f54ca5a503c04f4fe5737cf41b852", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.*, <=3.0", "size": 15797, "upload_time": "2019-02-01T13:58:59", "upload_time_iso_8601": "2019-02-01T13:58:59.442163Z", "url": "https://files.pythonhosted.org/packages/bf/24/c05807ff08814a5e035e247bc78dc50e75a48f7bdb48f35974321825c641/opc_app-0.2.0.1.tar.gz", "yanked": false}], "1.0.0.0": [{"comment_text": "", "digests": {"md5": "bd5afcd3329ca5d85ea3ea22db36abad", "sha256": "ae593dfd0540f8cb79b6f82a92c5b72143b1a038eddfd758105e46592aed756a"}, "downloads": -1, "filename": "opc_app-1.0.0.0.tar.gz", "has_sig": false, "md5_digest": "bd5afcd3329ca5d85ea3ea22db36abad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.*, <=3.0", "size": 16664, "upload_time": "2019-02-01T14:31:31", "upload_time_iso_8601": "2019-02-01T14:31:31.403430Z", "url": "https://files.pythonhosted.org/packages/01/46/1f76de7bc4315b87e2107479b45e61a94f7e3feef3722e89aca39bddac80/opc_app-1.0.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bd5afcd3329ca5d85ea3ea22db36abad", "sha256": "ae593dfd0540f8cb79b6f82a92c5b72143b1a038eddfd758105e46592aed756a"}, "downloads": -1, "filename": "opc_app-1.0.0.0.tar.gz", "has_sig": false, "md5_digest": "bd5afcd3329ca5d85ea3ea22db36abad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.*, <=3.0", "size": 16664, "upload_time": "2019-02-01T14:31:31", "upload_time_iso_8601": "2019-02-01T14:31:31.403430Z", "url": "https://files.pythonhosted.org/packages/01/46/1f76de7bc4315b87e2107479b45e61a94f7e3feef3722e89aca39bddac80/opc_app-1.0.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:33 2020"}