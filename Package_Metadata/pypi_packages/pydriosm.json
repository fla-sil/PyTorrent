{"info": {"author": "Qian Fu", "author_email": "qian.fu@outlook.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3"], "description": "# pydriosm\n\n**Author**: Qian Fu [![Twitter URL](https://img.shields.io/twitter/url/https/twitter.com/Qian_Fu?label=Follow&style=social)](https://twitter.com/Qian_Fu)\n\n[![PyPI](https://img.shields.io/pypi/v/pydriosm?label=PyPI&color=important)](https://pypi.org/project/pydriosm/)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pydriosm?label=Python)](https://www.python.org/downloads/windows/)\n[![PyPI - License](https://img.shields.io/pypi/l/pydriosm?color=green&label=License)](https://github.com/mikeqfu/pydriosm/blob/master/LICENSE)\n![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/mikeqfu/pydriosm?color=yellowgreen&label=Code%20size)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/pydriosm?color=yellow&label=Downloads)](https://pypistats.org/packages/pydriosm)\n\nThis package provides helpful utilities for researchers to easily download and read/parse the OpenStreetMap data extracts (in *.pbf* and *.shp.zip*) which are available at the free download servers: [Geofabrik](https://download.geofabrik.de/) and [BBBike](https://www.bbbike.org/). In addition, it also provides a convenient way to import/dump the parsed data to, and retrieve it from, a [PostgreSQL](https://www.postgresql.org/) sever. \n\n\n\n## Installation\n\n*Windows OS* users may use the `pip install` in Command Prompt:\n\n```\npip3 install pydriosm\n```\n\n###### NOTE: Installation of **pydriosm** (and ensuring its full functionality) requires a few dependencies.\n\n- **For *Windows users***: \n\n  The `pip3` method may fail to install some dependencies, such as [Fiona](https://pypi.org/project/Fiona/), [GDAL](https://pypi.org/project/GDAL/), [Shapely](https://pypi.org/project/Shapely/) and [python-Levenshtein](https://pypi.org/project/python-Levenshtein/). If errors occur, you should try to `pip3 install` their *.whl* files instead, which can be downloaded from the [Unofficial Windows Binaries for Python Extension Packages](https://www.lfd.uci.edu/~gohlke/pythonlibs/). After you have installed them successfully, try again the above `pip3` command. \n\n- **For *Linux users***: \n\n  If you want to try out any earlier version (<=1.0.17) on *Linux*, check [this link](https://github.com/mikeqfu/pydriosm/issues/1#issuecomment-540684439) for installation instructions. (However, you are always recommended to use the latest version.) \n\n\n\n\n## Quick start <a name=\"quick-start\"></a>\n\nFirstly, import the package: \n\n```python\nimport pydriosm as dri\n```\n\nThe current version of the package works only with subregion data files available on the free server. To get a full list of subregion names that are available, you can run the following line:\n\n```python\nsubregion_list = dri.fetch_subregion_info_catalogue(\"GeoFabrik-subregion-name-list\")\nprint(subregion_list)\n```\n\nFor a quick start, some examples are provided below, which demonstrate a few core functions of this  package. \n\n\n\n### 1. Download data <a name=\"download-data\"></a>\n\nTo download the OSM data for a region (or rather, a subregion) of which the data extract is available, you  need to specify the name of the region (e.g. \"Greater London\"):\n\n```python\nsubregion_name = 'London'\n# or, subregion_name = 'london'; case-insensitive and fuzzy (but not toooo... fuzzy)\n```\n\nDownload *.pbf* data of \"Greater London\":\n\n```python\ndri.download_subregion_osm_file(subregion_name, osm_file_format=\".osm.pbf\",\n                                download_dir=None, update=False,\n                                download_confirmation_required=True, deep_retry=False,\n                                verbose=True)\n```\n\nNote that `download_dir` is `None` by default, in which case a default file path will be created and the downloaded file will be saved there. \n\nCheck the default file path and name:\n\n```python\ndefault_fn, default_fp = dri.get_default_path_to_osm_file(subregion_name, \n                                                          osm_file_format=\".osm.pbf\", \n                                                          mkdir=False, update=False)\nprint(\"Default filename: {}\".format(default_fn))\nprint(\"Default file path: {}\".format(default_fp))\n```\n\nHowever, you may also set `download_dir` to be any other valid directory, especially when downloading data of multiple subregions. For example, \n\n```python\n# Specify the our own data directory\ncustomised_data_dir = \"test_data\"\n# So \"test_data\" folder will be created in our current working directory\n\n# Alternatively, we could specify a full path \n# import os\n# customised_data_dir = os.path.join(os.getcwd(), \"test_data\")\n\n# Download .pbf data of both 'London' and 'Kent' to the `customised_data_dir`\ndri.download_subregion_osm_file('London', 'Kent', osm_file_format=\".osm.pbf\",\n                                download_dir=customised_data_dir, update=False,\n                                download_confirmation_required=True, deep_retry=False, \n                                verbose=True)\n```\n\nThe *.pbf* data file will then be saved to the `download_dir` as specified.\n\n\n\n### 2. Read/parse data <a name=\"read-parse-data\"></a>\n\nThe package can read/parse the OSM data extracts in both *.pbf* and *.shp.zip* (and *.shp*). \n\n\n\n#### 2.1  *.osm.pbf* data <a name=\"pbf-data\"></a>\n\nParsing the *.pbf* data relies mainly on [GDAL/OGR](https://pypi.org/project/GDAL/), using `read_osm_pbf()` function.\n\n```python\ngreater_london = dri.read_osm_pbf(subregion_name, data_dir=None, parsed=True,\n                                  file_size_limit=50, fmt_other_tags=True,\n                                  fmt_single_geom=True, fmt_multi_geom=True,\n                                  update=False, download_confirmation_required=True,\n                                  pickle_it=False, rm_osm_pbf=False, verbose=True)\n```\n\n**Note that** `dri.read_osm_pbf()` **may take a few minutes or even longer if the data file is too large.** If the file size is greater than the given `file_size_limit` (default: 50 MB), the data will be parsed in a chunk-wise manner. \n\nThe returned, `greater_london`, is in a `dict` type; its keys are: \"points\", \"lines\", \"multilinestrings\", \"multipolygons\" and \"other_relations\", which are also the names of the five different layers. \n\n```python\n# Examples:\ngreater_london['points']  # points\ngreater_london['lines']  # lines\n```\n\nIf only the name of a subregion is given, i.e. `greater_london = dri.read_osm_pbf(subregion_name)`, the function will go to look for the data file from the default file path (i.e. `default_fp`). Otherwise, the function requires specification of a data directory. For example, to read/parse the data in `customised_data_dir`, i.e. \"test_data\" folder, you need to set `data_dir=customised_data_dir` as follows:\n\n```python\ngreater_london_test = dri.read_osm_pbf(subregion_name, data_dir=customised_data_dir, \n                                       verbose=True)\n```\n\nIn the above, `greater_london` and `greater_london_test` should be the same. \n\nTo make life easier, you can simply skip the download step and use `read_osm_pbf()` directly. That is, if the targeted data is not available, `read_osm_pbf()` will download the data file first. By default, a confirmation of downloading the data will be prompted, given that `download_confirmation_required=True`. \n\nIf `pickle_it=True`, the parsed data will be saved as a `pickle` file to the `data_dir`.\n\nIf `update=False`, when you run `read_osm_pbf(subregion_name)` again, the function will load the `pickle` file directly; if `update=True`, the function will try to download the latest version of the data file and parse it again. \n\n\n\n#### 2.2  *.shp.zip* / ***.shp*** data <a name=\"shp-zip-data\"></a>\n\nYou can read the *.shp.zip* and *.shp* file of the above `subregion_name` (i.e. 'London') by using `read_shp_zip()`, which relies mainly on [GeoPandas](http://geopandas.org/):\n\n```python\n# We must specify a layer, e.g. 'railways'\nlayer_name = 'railways'\n\n# Read the .shp.zip file\ngreater_london_shp = dri.read_shp_zip(subregion_name, layer=layer_name,\n                                      feature=None, data_dir=None, update=False,\n                                      download_confirmation_required=True,\n                                      pickle_it=False, rm_extracts=False,\n                                      rm_shp_zip=False, verbose=True)\n```\n\nThe parameter `feature` is related to 'fclass' in `greater_london_shp`. You may just specify a feature to get a subset of `greater_london_shp`. For example:\n\n```python\ngreater_london_shp_rail = dri.read_shp_zip(subregion_name, layer=layer_name, \n                                           feature='rail')\n# rail = greater_london_shp[greater_london_shp.fclass == 'rail']\n# greater_london_shp_rail.equals(rail)\n# >>> True\n```\n\nSimilarly, there is no need to download the *.shp.zip* file; `read_shp_zip()` will do it if the file is not available. Setting `rm_extracts=True` and `rm_shp_zip=True` can remove both the downloaded *.shp.zip* file and all extracted files from it. \n\nNote that `greater_london_shp` and `greater_london` are different. \n\nTo get data about more than one subregion, you can also merge *.shp* files of specific layers from those subregions. For example, to merge the \"railways\" layer of two subregions: \"Greater London\" and \"Kent\":\n\n```python\nsubregion_names = ['London', 'Kent']\n# layer_name = 'railways'\ndri.merge_multi_shp(subregion_names, layer=layer_name, update_shp_zip=False,\n                    download_confirmation_required=True, data_dir=None, \n                    prefix=\"gis_osm\", rm_zip_extracts=False, rm_shp_parts=False, \n                    merged_shp_dir=None, verbose=True)\n```\n\nYou could also set `data_dir=customised_data_dir` to save the downloaded *.shp.zip* files and make the merged *.shp* file available into `customised_data_dir`. Otherwise, when `data_dir=None`, all files will be found via the default path. Check also:\n\n```python\ndefault_fn_, default_fp_ = dri.get_default_path_to_osm_file(subregion_names[0], \n                                                            osm_file_format=\".shp.zip\")\nprint(default_fp_)\n```\n\n\n\n### 3. Import and retrieve data with a PostgreSQL server <a name=\"import-retrieve-data\"></a>\n\nThe package provides a class, named \"OSM\", which communicates with [PostgreSQL](https://www.postgresql.org/) server. \n\nTo establish a connection with the server, you need to specify your username (default: `'postgres'`), password (default: `None`), host name (or address; default: `'localhost'`) and name of the database (default: `'postgres'`) you intend to connect. For example:\n\n```python\nosmdb = dri.OSM(username='postgres', password=None, host='localhost', port=5432, \n                database_name='test_osmdb')\n# Or simply, osmdb = dri.OSM(database_name='test_osmdb')\n```\n\nIf `password=None`, you will then be asked to type in your password.\n\nNow you are connected to the database, 'test_osmdb'.\n\n\n\n#### 3.1  Import the data to the database <a name=\"import-the-data-to-the-database\"></a>\n\nTo import `greater_london` (i.e. the parsed *.pbf* data of \"London\") to the database, 'test_osmdb':\n\n```python\nosmdb.dump_osm_pbf_data(greater_london, table_name=subregion_name, parsed=True,\n                        if_exists='replace', chunk_size=None,\n                        subregion_name_as_table_name=True, verbose=True)\n```\n\nEach element (i.e. layer) of `greater_london` will be stored in a different schema. Each schema is named as the name of each layer.\n\n\n\n#### 3.2  Retrieve data from the database <a name=\"retrieve-data-from-the-database\"></a>\n\nTo retrieve the dumped data:\n\n```python\ngreater_london_retrieval = osmdb.read_osm_pbf_data(table_name=subregion_name, \n                                                   parsed=True, \n                                                   subregion_name_as_table_name=True,\n                                                   chunk_size=None, sorted_by_id=True)\n```\n\nNote that `greater_london_retrieval` may not be exactly the same as `greater_london`. This is because the \"keys\" of the elements in `greater_london` are in the following order: `'points'`, `'lines'`, `'multilinestrings'`, `'multipolygons'` and `'other_relations'`. \n\nHowever, when dumping `greater_london` to the database, the five different schemas are sorted alphabetically as follows: `'lines'`, `'multilinestrings'`, `'multipolygons'`, `'other_relations'`, and `'points'`, and so retrieving data from the server will be in the latter order. Despite that, the data contained in both `greater_london` and `greater_london_retrieval` is consistent. Check:\n\n```python\ngreater_london['points'].equals(greater_london_retrieval['points'])\n# >>> True\n```\n\nIf you need to query data of a specific layer (or several layers), or in a specific order of layers (schemas): \n\n```python\nlondon_points_lines = osmdb.read_osm_pbf_data(subregion_name, 'points', 'lines')\n```\n\nAnother example:\n\n```python\nlondon_lines_mul = osmdb.read_osm_pbf_data('london', 'lines', 'multilinestrings')\n```\n\n\n\n#### 3.3  Import data of all subregions of a given (sub)region to the database <a name=\"import-data-of-all-subregions\"></a>\n\nFind all subregions (without sub-subregions) of a (sub)region. For example, to find [all subregions](https://download.geofabrik.de/central-america.html) of \"Central America\":\n\n```python\nsubregions = dri.retrieve_names_of_subregions_of('Central America')\n```\n\nTo import the *.pbf* data of `subregions`:\n\n```python\n# Note that this example may take quite a long time!!\ndri.psql_osm_pbf_data_extracts(*subregions, \n                               username='postgres', password=None, \n                               host='localhost', port=5432,\n                               database_name='test_osmdb',\n                               data_dir=customised_data_dir,\n                               update_osm_pbf=False, if_table_exists='replace',\n                               file_size_limit=50, parsed=True,\n                               fmt_other_tags=True, fmt_single_geom=True,\n                               fmt_multi_geom=True,\n                               pickle_raw_file=False, rm_raw_file=False, \n                               confirmation_required=True, verbose=True)\n```\n\nSetting `rm_raw_file=False` and `data_dir=None` will keep all the raw *.pbf* data files in the default data folder. \n\nIf you would like to import [all subregion]((https://download.geofabrik.de/europe/great-britain.html)) data of \"Great Britain\", try two ways of finding its all subregions:\n\n```python\ngb_subregions_shallow = dri.retrieve_names_of_subregions_of('Great Britain', deep=False)\nprint(gb_subregions_shallow)\ngb_subregions_deep = dri.retrieve_names_of_subregions_of('Great Britain', deep=True)\nprint(gb_subregions_deep)\n```\n\nWhen `deep=False`, the result `gb_subregions_shallow` will only include \"England\", \"Scotland\", and \"Wales\". Note the difference when `deep=True`, that the list `gb_subregions_deep` will include \"Scotland\", \"Wales\", and [all subregions](https://download.geofabrik.de/europe/great-britain/england.html) of \"England\". \n\n\n\n**Bonus** - Pretend you never did the above:\n\n```python\n# Drop the database 'osm_pbf_data_extracts'\nosmdb.drop()\n\n# Remove all folders created above\nimport os\nfrom pyhelpers.dir import rm_dir\n\nrm_dir(dri.cd_dat_geofabrik())\nrm_dir(dri.regulate_input_data_dir(customised_data_dir))\n```\n\n\n\n---\n\n[![Website](https://img.shields.io/website/https/download.geofabrik.de?label=Data%20source&up_color=9cf&up_message=http%3A%2F%2Fdownload.geofabrik.de)](https://download.geofabrik.de/)\n[![Website](https://img.shields.io/website/https/download.bbbike.org/osm?label=Data%20source&up_color=9cf&up_message=http%3A%2F%2Fdownload.bbbike.org%2Fosm)](https://download.bbbike.org/osm/)\n\nData/Map data &copy; [Geofabrik GmbH](http://www.geofabrik.de/) and [OpenStreetMap Contributors](http://www.openstreetmap.org/) <a name=\"footnote\"></a>\n\nAll data from the [OpenStreetMap](https://www.openstreetmap.org) is licensed under the [OpenStreetMap License](https://www.openstreetmap.org/copyright). \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mikeqfu/pydriosm", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pydriosm", "package_url": "https://pypi.org/project/pydriosm/", "platform": "", "project_url": "https://pypi.org/project/pydriosm/", "project_urls": {"Homepage": "https://github.com/mikeqfu/pydriosm"}, "release_url": "https://pypi.org/project/pydriosm/1.0.20/", "requires_dist": ["attrs (>=19.3.0)", "beautifulsoup4 (>=4.8.2)", "bleach (>=3.1.0)", "certifi (>=2019.11.28)", "chardet (>=3.0.4)", "Click (>=7.0)", "click-plugins (>=1.1.1)", "cligj (>=0.5.0)", "docutils (>=0.15.2)", "et-xmlfile (>=1.0.1)", "Fiona (>=1.8.13)", "flatten-json (>=0.1.7)", "fuzzywuzzy (>=0.17.0)", "GDAL (>=3.0.3)", "geopandas (>=0.6.2)", "html5lib (>=1.0.1)", "humanfriendly (>=4.18)", "idna (>=2.8)", "jdcal (>=1.4.1)", "keyring (>=21.0.0)", "lxml (>=4.4.2)", "more-itertools (>=8.0.2)", "munch (>=2.5.0)", "numpy (>=1.18.1)", "openpyxl (>=3.0.3)", "pandas (>=0.25.3)", "pkginfo (>=1.5.0.1)", "psycopg2 (>=2.8.4)", "Pygments (>=2.5.2)", "pyhelpers (>=1.0.22)", "pyproj (>=2.4.2.post1)", "pyreadline (>=2.1)", "pyshp (>=2.1.0)", "python-dateutil (>=2.8.1)", "python-Levenshtein (>=0.12.0)", "python-rapidjson (>=0.9.1)", "pytz (>=2019.3)", "pywin32-ctypes (>=0.2.0)", "readme-renderer (>=24.0)", "requests (>=2.22.0)", "requests-toolbelt (>=0.9.1)", "Shapely (>=1.6.4.post2)", "six (>=1.13.0)", "soupsieve (>=1.9.5)", "SQLAlchemy (>=1.3.13)", "SQLAlchemy-Utils (>=0.36.1)", "tqdm (>=4.42.0)", "urllib3 (>=1.25.7)", "webencodings (>=0.5.1)", "xlrd (>=1.2.0)", "XlsxWriter (>=1.2.7)", "xlwt (>=1.3.0)"], "requires_python": "", "summary": "Download, read/parse and import/export OpenStreetMap data extracts", "version": "1.0.20", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pydriosm</h1>\n<p><strong>Author</strong>: Qian Fu <a href=\"https://twitter.com/Qian_Fu\" rel=\"nofollow\"><img alt=\"Twitter URL\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5ac5cac7756c784b211f460845584906af327d5a/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f5169616e5f46753f6c6162656c3d466f6c6c6f77267374796c653d736f6369616c\"></a></p>\n<p><a href=\"https://pypi.org/project/pydriosm/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e58e87afadc6f37f80411c3e60c653d58071b70/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796472696f736d3f6c6162656c3d5079504926636f6c6f723d696d706f7274616e74\"></a>\n<a href=\"https://www.python.org/downloads/windows/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ce9b2a7b5975d202fe20d93420072428c933f316/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70796472696f736d3f6c6162656c3d507974686f6e\"></a>\n<a href=\"https://github.com/mikeqfu/pydriosm/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d47972c2f6d09620ce48673a1e83db668594058/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f70796472696f736d3f636f6c6f723d677265656e266c6162656c3d4c6963656e7365\"></a>\n<img alt=\"GitHub code size in bytes\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca090fe2653be5f56eb8b31d43d7302fd6c1cc68/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f636f64652d73697a652f6d696b657166752f70796472696f736d3f636f6c6f723d79656c6c6f77677265656e266c6162656c3d436f646525323073697a65\">\n<a href=\"https://pypistats.org/packages/pydriosm\" rel=\"nofollow\"><img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/225f6d7a323df1dc5c54c4f6376951cfb3fae26b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f70796472696f736d3f636f6c6f723d79656c6c6f77266c6162656c3d446f776e6c6f616473\"></a></p>\n<p>This package provides helpful utilities for researchers to easily download and read/parse the OpenStreetMap data extracts (in <em>.pbf</em> and <em>.shp.zip</em>) which are available at the free download servers: <a href=\"https://download.geofabrik.de/\" rel=\"nofollow\">Geofabrik</a> and <a href=\"https://www.bbbike.org/\" rel=\"nofollow\">BBBike</a>. In addition, it also provides a convenient way to import/dump the parsed data to, and retrieve it from, a <a href=\"https://www.postgresql.org/\" rel=\"nofollow\">PostgreSQL</a> sever.</p>\n<h2>Installation</h2>\n<p><em>Windows OS</em> users may use the <code>pip install</code> in Command Prompt:</p>\n<pre><code>pip3 install pydriosm\n</code></pre>\n<h6>NOTE: Installation of <strong>pydriosm</strong> (and ensuring its full functionality) requires a few dependencies.</h6>\n<ul>\n<li>\n<p><strong>For <em>Windows users</em></strong>:</p>\n<p>The <code>pip3</code> method may fail to install some dependencies, such as <a href=\"https://pypi.org/project/Fiona/\" rel=\"nofollow\">Fiona</a>, <a href=\"https://pypi.org/project/GDAL/\" rel=\"nofollow\">GDAL</a>, <a href=\"https://pypi.org/project/Shapely/\" rel=\"nofollow\">Shapely</a> and <a href=\"https://pypi.org/project/python-Levenshtein/\" rel=\"nofollow\">python-Levenshtein</a>. If errors occur, you should try to <code>pip3 install</code> their <em>.whl</em> files instead, which can be downloaded from the <a href=\"https://www.lfd.uci.edu/%7Egohlke/pythonlibs/\" rel=\"nofollow\">Unofficial Windows Binaries for Python Extension Packages</a>. After you have installed them successfully, try again the above <code>pip3</code> command.</p>\n</li>\n<li>\n<p><strong>For <em>Linux users</em></strong>:</p>\n<p>If you want to try out any earlier version (&lt;=1.0.17) on <em>Linux</em>, check <a href=\"https://github.com/mikeqfu/pydriosm/issues/1#issuecomment-540684439\" rel=\"nofollow\">this link</a> for installation instructions. (However, you are always recommended to use the latest version.)</p>\n</li>\n</ul>\n<h2>Quick start <a></a></h2>\n<p>Firstly, import the package:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pydriosm</span> <span class=\"k\">as</span> <span class=\"nn\">dri</span>\n</pre>\n<p>The current version of the package works only with subregion data files available on the free server. To get a full list of subregion names that are available, you can run the following line:</p>\n<pre><span class=\"n\">subregion_list</span> <span class=\"o\">=</span> <span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">fetch_subregion_info_catalogue</span><span class=\"p\">(</span><span class=\"s2\">\"GeoFabrik-subregion-name-list\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">subregion_list</span><span class=\"p\">)</span>\n</pre>\n<p>For a quick start, some examples are provided below, which demonstrate a few core functions of this  package.</p>\n<h3>1. Download data <a></a></h3>\n<p>To download the OSM data for a region (or rather, a subregion) of which the data extract is available, you  need to specify the name of the region (e.g. \"Greater London\"):</p>\n<pre><span class=\"n\">subregion_name</span> <span class=\"o\">=</span> <span class=\"s1\">'London'</span>\n<span class=\"c1\"># or, subregion_name = 'london'; case-insensitive and fuzzy (but not toooo... fuzzy)</span>\n</pre>\n<p>Download <em>.pbf</em> data of \"Greater London\":</p>\n<pre><span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">download_subregion_osm_file</span><span class=\"p\">(</span><span class=\"n\">subregion_name</span><span class=\"p\">,</span> <span class=\"n\">osm_file_format</span><span class=\"o\">=</span><span class=\"s2\">\".osm.pbf\"</span><span class=\"p\">,</span>\n                                <span class=\"n\">download_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">update</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                                <span class=\"n\">download_confirmation_required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">deep_retry</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                                <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Note that <code>download_dir</code> is <code>None</code> by default, in which case a default file path will be created and the downloaded file will be saved there.</p>\n<p>Check the default file path and name:</p>\n<pre><span class=\"n\">default_fn</span><span class=\"p\">,</span> <span class=\"n\">default_fp</span> <span class=\"o\">=</span> <span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">get_default_path_to_osm_file</span><span class=\"p\">(</span><span class=\"n\">subregion_name</span><span class=\"p\">,</span> \n                                                          <span class=\"n\">osm_file_format</span><span class=\"o\">=</span><span class=\"s2\">\".osm.pbf\"</span><span class=\"p\">,</span> \n                                                          <span class=\"n\">mkdir</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">update</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Default filename: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">default_fn</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Default file path: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">default_fp</span><span class=\"p\">))</span>\n</pre>\n<p>However, you may also set <code>download_dir</code> to be any other valid directory, especially when downloading data of multiple subregions. For example,</p>\n<pre><span class=\"c1\"># Specify the our own data directory</span>\n<span class=\"n\">customised_data_dir</span> <span class=\"o\">=</span> <span class=\"s2\">\"test_data\"</span>\n<span class=\"c1\"># So \"test_data\" folder will be created in our current working directory</span>\n\n<span class=\"c1\"># Alternatively, we could specify a full path </span>\n<span class=\"c1\"># import os</span>\n<span class=\"c1\"># customised_data_dir = os.path.join(os.getcwd(), \"test_data\")</span>\n\n<span class=\"c1\"># Download .pbf data of both 'London' and 'Kent' to the `customised_data_dir`</span>\n<span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">download_subregion_osm_file</span><span class=\"p\">(</span><span class=\"s1\">'London'</span><span class=\"p\">,</span> <span class=\"s1\">'Kent'</span><span class=\"p\">,</span> <span class=\"n\">osm_file_format</span><span class=\"o\">=</span><span class=\"s2\">\".osm.pbf\"</span><span class=\"p\">,</span>\n                                <span class=\"n\">download_dir</span><span class=\"o\">=</span><span class=\"n\">customised_data_dir</span><span class=\"p\">,</span> <span class=\"n\">update</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                                <span class=\"n\">download_confirmation_required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">deep_retry</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> \n                                <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>The <em>.pbf</em> data file will then be saved to the <code>download_dir</code> as specified.</p>\n<h3>2. Read/parse data <a></a></h3>\n<p>The package can read/parse the OSM data extracts in both <em>.pbf</em> and <em>.shp.zip</em> (and <em>.shp</em>).</p>\n<h4>2.1  <em>.osm.pbf</em> data <a></a></h4>\n<p>Parsing the <em>.pbf</em> data relies mainly on <a href=\"https://pypi.org/project/GDAL/\" rel=\"nofollow\">GDAL/OGR</a>, using <code>read_osm_pbf()</code> function.</p>\n<pre><span class=\"n\">greater_london</span> <span class=\"o\">=</span> <span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">read_osm_pbf</span><span class=\"p\">(</span><span class=\"n\">subregion_name</span><span class=\"p\">,</span> <span class=\"n\">data_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">parsed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                  <span class=\"n\">file_size_limit</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">fmt_other_tags</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                  <span class=\"n\">fmt_single_geom</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">fmt_multi_geom</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                  <span class=\"n\">update</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">download_confirmation_required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                  <span class=\"n\">pickle_it</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">rm_osm_pbf</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Note that</strong> <code>dri.read_osm_pbf()</code> <strong>may take a few minutes or even longer if the data file is too large.</strong> If the file size is greater than the given <code>file_size_limit</code> (default: 50 MB), the data will be parsed in a chunk-wise manner.</p>\n<p>The returned, <code>greater_london</code>, is in a <code>dict</code> type; its keys are: \"points\", \"lines\", \"multilinestrings\", \"multipolygons\" and \"other_relations\", which are also the names of the five different layers.</p>\n<pre><span class=\"c1\"># Examples:</span>\n<span class=\"n\">greater_london</span><span class=\"p\">[</span><span class=\"s1\">'points'</span><span class=\"p\">]</span>  <span class=\"c1\"># points</span>\n<span class=\"n\">greater_london</span><span class=\"p\">[</span><span class=\"s1\">'lines'</span><span class=\"p\">]</span>  <span class=\"c1\"># lines</span>\n</pre>\n<p>If only the name of a subregion is given, i.e. <code>greater_london = dri.read_osm_pbf(subregion_name)</code>, the function will go to look for the data file from the default file path (i.e. <code>default_fp</code>). Otherwise, the function requires specification of a data directory. For example, to read/parse the data in <code>customised_data_dir</code>, i.e. \"test_data\" folder, you need to set <code>data_dir=customised_data_dir</code> as follows:</p>\n<pre><span class=\"n\">greater_london_test</span> <span class=\"o\">=</span> <span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">read_osm_pbf</span><span class=\"p\">(</span><span class=\"n\">subregion_name</span><span class=\"p\">,</span> <span class=\"n\">data_dir</span><span class=\"o\">=</span><span class=\"n\">customised_data_dir</span><span class=\"p\">,</span> \n                                       <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>In the above, <code>greater_london</code> and <code>greater_london_test</code> should be the same.</p>\n<p>To make life easier, you can simply skip the download step and use <code>read_osm_pbf()</code> directly. That is, if the targeted data is not available, <code>read_osm_pbf()</code> will download the data file first. By default, a confirmation of downloading the data will be prompted, given that <code>download_confirmation_required=True</code>.</p>\n<p>If <code>pickle_it=True</code>, the parsed data will be saved as a <code>pickle</code> file to the <code>data_dir</code>.</p>\n<p>If <code>update=False</code>, when you run <code>read_osm_pbf(subregion_name)</code> again, the function will load the <code>pickle</code> file directly; if <code>update=True</code>, the function will try to download the latest version of the data file and parse it again.</p>\n<h4>2.2  <em>.shp.zip</em> / <em><strong>.shp</strong></em> data <a></a></h4>\n<p>You can read the <em>.shp.zip</em> and <em>.shp</em> file of the above <code>subregion_name</code> (i.e. 'London') by using <code>read_shp_zip()</code>, which relies mainly on <a href=\"http://geopandas.org/\" rel=\"nofollow\">GeoPandas</a>:</p>\n<pre><span class=\"c1\"># We must specify a layer, e.g. 'railways'</span>\n<span class=\"n\">layer_name</span> <span class=\"o\">=</span> <span class=\"s1\">'railways'</span>\n\n<span class=\"c1\"># Read the .shp.zip file</span>\n<span class=\"n\">greater_london_shp</span> <span class=\"o\">=</span> <span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">read_shp_zip</span><span class=\"p\">(</span><span class=\"n\">subregion_name</span><span class=\"p\">,</span> <span class=\"n\">layer</span><span class=\"o\">=</span><span class=\"n\">layer_name</span><span class=\"p\">,</span>\n                                      <span class=\"n\">feature</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">data_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">update</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                                      <span class=\"n\">download_confirmation_required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                      <span class=\"n\">pickle_it</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">rm_extracts</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                                      <span class=\"n\">rm_shp_zip</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>The parameter <code>feature</code> is related to 'fclass' in <code>greater_london_shp</code>. You may just specify a feature to get a subset of <code>greater_london_shp</code>. For example:</p>\n<pre><span class=\"n\">greater_london_shp_rail</span> <span class=\"o\">=</span> <span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">read_shp_zip</span><span class=\"p\">(</span><span class=\"n\">subregion_name</span><span class=\"p\">,</span> <span class=\"n\">layer</span><span class=\"o\">=</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> \n                                           <span class=\"n\">feature</span><span class=\"o\">=</span><span class=\"s1\">'rail'</span><span class=\"p\">)</span>\n<span class=\"c1\"># rail = greater_london_shp[greater_london_shp.fclass == 'rail']</span>\n<span class=\"c1\"># greater_london_shp_rail.equals(rail)</span>\n<span class=\"c1\"># &gt;&gt;&gt; True</span>\n</pre>\n<p>Similarly, there is no need to download the <em>.shp.zip</em> file; <code>read_shp_zip()</code> will do it if the file is not available. Setting <code>rm_extracts=True</code> and <code>rm_shp_zip=True</code> can remove both the downloaded <em>.shp.zip</em> file and all extracted files from it.</p>\n<p>Note that <code>greater_london_shp</code> and <code>greater_london</code> are different.</p>\n<p>To get data about more than one subregion, you can also merge <em>.shp</em> files of specific layers from those subregions. For example, to merge the \"railways\" layer of two subregions: \"Greater London\" and \"Kent\":</p>\n<pre><span class=\"n\">subregion_names</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'London'</span><span class=\"p\">,</span> <span class=\"s1\">'Kent'</span><span class=\"p\">]</span>\n<span class=\"c1\"># layer_name = 'railways'</span>\n<span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">merge_multi_shp</span><span class=\"p\">(</span><span class=\"n\">subregion_names</span><span class=\"p\">,</span> <span class=\"n\">layer</span><span class=\"o\">=</span><span class=\"n\">layer_name</span><span class=\"p\">,</span> <span class=\"n\">update_shp_zip</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"n\">download_confirmation_required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">data_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> \n                    <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">\"gis_osm\"</span><span class=\"p\">,</span> <span class=\"n\">rm_zip_extracts</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">rm_shp_parts</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> \n                    <span class=\"n\">merged_shp_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>You could also set <code>data_dir=customised_data_dir</code> to save the downloaded <em>.shp.zip</em> files and make the merged <em>.shp</em> file available into <code>customised_data_dir</code>. Otherwise, when <code>data_dir=None</code>, all files will be found via the default path. Check also:</p>\n<pre><span class=\"n\">default_fn_</span><span class=\"p\">,</span> <span class=\"n\">default_fp_</span> <span class=\"o\">=</span> <span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">get_default_path_to_osm_file</span><span class=\"p\">(</span><span class=\"n\">subregion_names</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> \n                                                            <span class=\"n\">osm_file_format</span><span class=\"o\">=</span><span class=\"s2\">\".shp.zip\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">default_fp_</span><span class=\"p\">)</span>\n</pre>\n<h3>3. Import and retrieve data with a PostgreSQL server <a></a></h3>\n<p>The package provides a class, named \"OSM\", which communicates with <a href=\"https://www.postgresql.org/\" rel=\"nofollow\">PostgreSQL</a> server.</p>\n<p>To establish a connection with the server, you need to specify your username (default: <code>'postgres'</code>), password (default: <code>None</code>), host name (or address; default: <code>'localhost'</code>) and name of the database (default: <code>'postgres'</code>) you intend to connect. For example:</p>\n<pre><span class=\"n\">osmdb</span> <span class=\"o\">=</span> <span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">OSM</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'postgres'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5432</span><span class=\"p\">,</span> \n                <span class=\"n\">database_name</span><span class=\"o\">=</span><span class=\"s1\">'test_osmdb'</span><span class=\"p\">)</span>\n<span class=\"c1\"># Or simply, osmdb = dri.OSM(database_name='test_osmdb')</span>\n</pre>\n<p>If <code>password=None</code>, you will then be asked to type in your password.</p>\n<p>Now you are connected to the database, 'test_osmdb'.</p>\n<h4>3.1  Import the data to the database <a></a></h4>\n<p>To import <code>greater_london</code> (i.e. the parsed <em>.pbf</em> data of \"London\") to the database, 'test_osmdb':</p>\n<pre><span class=\"n\">osmdb</span><span class=\"o\">.</span><span class=\"n\">dump_osm_pbf_data</span><span class=\"p\">(</span><span class=\"n\">greater_london</span><span class=\"p\">,</span> <span class=\"n\">table_name</span><span class=\"o\">=</span><span class=\"n\">subregion_name</span><span class=\"p\">,</span> <span class=\"n\">parsed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                        <span class=\"n\">if_exists</span><span class=\"o\">=</span><span class=\"s1\">'replace'</span><span class=\"p\">,</span> <span class=\"n\">chunk_size</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                        <span class=\"n\">subregion_name_as_table_name</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Each element (i.e. layer) of <code>greater_london</code> will be stored in a different schema. Each schema is named as the name of each layer.</p>\n<h4>3.2  Retrieve data from the database <a></a></h4>\n<p>To retrieve the dumped data:</p>\n<pre><span class=\"n\">greater_london_retrieval</span> <span class=\"o\">=</span> <span class=\"n\">osmdb</span><span class=\"o\">.</span><span class=\"n\">read_osm_pbf_data</span><span class=\"p\">(</span><span class=\"n\">table_name</span><span class=\"o\">=</span><span class=\"n\">subregion_name</span><span class=\"p\">,</span> \n                                                   <span class=\"n\">parsed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> \n                                                   <span class=\"n\">subregion_name_as_table_name</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                                   <span class=\"n\">chunk_size</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">sorted_by_id</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Note that <code>greater_london_retrieval</code> may not be exactly the same as <code>greater_london</code>. This is because the \"keys\" of the elements in <code>greater_london</code> are in the following order: <code>'points'</code>, <code>'lines'</code>, <code>'multilinestrings'</code>, <code>'multipolygons'</code> and <code>'other_relations'</code>.</p>\n<p>However, when dumping <code>greater_london</code> to the database, the five different schemas are sorted alphabetically as follows: <code>'lines'</code>, <code>'multilinestrings'</code>, <code>'multipolygons'</code>, <code>'other_relations'</code>, and <code>'points'</code>, and so retrieving data from the server will be in the latter order. Despite that, the data contained in both <code>greater_london</code> and <code>greater_london_retrieval</code> is consistent. Check:</p>\n<pre><span class=\"n\">greater_london</span><span class=\"p\">[</span><span class=\"s1\">'points'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">equals</span><span class=\"p\">(</span><span class=\"n\">greater_london_retrieval</span><span class=\"p\">[</span><span class=\"s1\">'points'</span><span class=\"p\">])</span>\n<span class=\"c1\"># &gt;&gt;&gt; True</span>\n</pre>\n<p>If you need to query data of a specific layer (or several layers), or in a specific order of layers (schemas):</p>\n<pre><span class=\"n\">london_points_lines</span> <span class=\"o\">=</span> <span class=\"n\">osmdb</span><span class=\"o\">.</span><span class=\"n\">read_osm_pbf_data</span><span class=\"p\">(</span><span class=\"n\">subregion_name</span><span class=\"p\">,</span> <span class=\"s1\">'points'</span><span class=\"p\">,</span> <span class=\"s1\">'lines'</span><span class=\"p\">)</span>\n</pre>\n<p>Another example:</p>\n<pre><span class=\"n\">london_lines_mul</span> <span class=\"o\">=</span> <span class=\"n\">osmdb</span><span class=\"o\">.</span><span class=\"n\">read_osm_pbf_data</span><span class=\"p\">(</span><span class=\"s1\">'london'</span><span class=\"p\">,</span> <span class=\"s1\">'lines'</span><span class=\"p\">,</span> <span class=\"s1\">'multilinestrings'</span><span class=\"p\">)</span>\n</pre>\n<h4>3.3  Import data of all subregions of a given (sub)region to the database <a></a></h4>\n<p>Find all subregions (without sub-subregions) of a (sub)region. For example, to find <a href=\"https://download.geofabrik.de/central-america.html\" rel=\"nofollow\">all subregions</a> of \"Central America\":</p>\n<pre><span class=\"n\">subregions</span> <span class=\"o\">=</span> <span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">retrieve_names_of_subregions_of</span><span class=\"p\">(</span><span class=\"s1\">'Central America'</span><span class=\"p\">)</span>\n</pre>\n<p>To import the <em>.pbf</em> data of <code>subregions</code>:</p>\n<pre><span class=\"c1\"># Note that this example may take quite a long time!!</span>\n<span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">psql_osm_pbf_data_extracts</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">subregions</span><span class=\"p\">,</span> \n                               <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'postgres'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> \n                               <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5432</span><span class=\"p\">,</span>\n                               <span class=\"n\">database_name</span><span class=\"o\">=</span><span class=\"s1\">'test_osmdb'</span><span class=\"p\">,</span>\n                               <span class=\"n\">data_dir</span><span class=\"o\">=</span><span class=\"n\">customised_data_dir</span><span class=\"p\">,</span>\n                               <span class=\"n\">update_osm_pbf</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">if_table_exists</span><span class=\"o\">=</span><span class=\"s1\">'replace'</span><span class=\"p\">,</span>\n                               <span class=\"n\">file_size_limit</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"n\">parsed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                               <span class=\"n\">fmt_other_tags</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">fmt_single_geom</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                               <span class=\"n\">fmt_multi_geom</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                               <span class=\"n\">pickle_raw_file</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">rm_raw_file</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> \n                               <span class=\"n\">confirmation_required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Setting <code>rm_raw_file=False</code> and <code>data_dir=None</code> will keep all the raw <em>.pbf</em> data files in the default data folder.</p>\n<p>If you would like to import <a href=\"(https://download.geofabrik.de/europe/great-britain.html)\" rel=\"nofollow\">all subregion</a> data of \"Great Britain\", try two ways of finding its all subregions:</p>\n<pre><span class=\"n\">gb_subregions_shallow</span> <span class=\"o\">=</span> <span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">retrieve_names_of_subregions_of</span><span class=\"p\">(</span><span class=\"s1\">'Great Britain'</span><span class=\"p\">,</span> <span class=\"n\">deep</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">gb_subregions_shallow</span><span class=\"p\">)</span>\n<span class=\"n\">gb_subregions_deep</span> <span class=\"o\">=</span> <span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">retrieve_names_of_subregions_of</span><span class=\"p\">(</span><span class=\"s1\">'Great Britain'</span><span class=\"p\">,</span> <span class=\"n\">deep</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">gb_subregions_deep</span><span class=\"p\">)</span>\n</pre>\n<p>When <code>deep=False</code>, the result <code>gb_subregions_shallow</code> will only include \"England\", \"Scotland\", and \"Wales\". Note the difference when <code>deep=True</code>, that the list <code>gb_subregions_deep</code> will include \"Scotland\", \"Wales\", and <a href=\"https://download.geofabrik.de/europe/great-britain/england.html\" rel=\"nofollow\">all subregions</a> of \"England\".</p>\n<p><strong>Bonus</strong> - Pretend you never did the above:</p>\n<pre><span class=\"c1\"># Drop the database 'osm_pbf_data_extracts'</span>\n<span class=\"n\">osmdb</span><span class=\"o\">.</span><span class=\"n\">drop</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Remove all folders created above</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyhelpers.dir</span> <span class=\"kn\">import</span> <span class=\"n\">rm_dir</span>\n\n<span class=\"n\">rm_dir</span><span class=\"p\">(</span><span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">cd_dat_geofabrik</span><span class=\"p\">())</span>\n<span class=\"n\">rm_dir</span><span class=\"p\">(</span><span class=\"n\">dri</span><span class=\"o\">.</span><span class=\"n\">regulate_input_data_dir</span><span class=\"p\">(</span><span class=\"n\">customised_data_dir</span><span class=\"p\">))</span>\n</pre>\n<hr>\n<p><a href=\"https://download.geofabrik.de/\" rel=\"nofollow\"><img alt=\"Website\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8950c43ad8d43ec360ae7d5e6039058fb0f03513/68747470733a2f2f696d672e736869656c64732e696f2f776562736974652f68747470732f646f776e6c6f61642e67656f66616272696b2e64653f6c6162656c3d44617461253230736f757263652675705f636f6c6f723d3963662675705f6d6573736167653d68747470253341253246253246646f776e6c6f61642e67656f66616272696b2e6465\"></a>\n<a href=\"https://download.bbbike.org/osm/\" rel=\"nofollow\"><img alt=\"Website\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8133a914c8c92cd0dda2a0b527de5f3363382bc2/68747470733a2f2f696d672e736869656c64732e696f2f776562736974652f68747470732f646f776e6c6f61642e626262696b652e6f72672f6f736d3f6c6162656c3d44617461253230736f757263652675705f636f6c6f723d3963662675705f6d6573736167653d68747470253341253246253246646f776e6c6f61642e626262696b652e6f72672532466f736d\"></a></p>\n<p>Data/Map data \u00a9 <a href=\"http://www.geofabrik.de/\" rel=\"nofollow\">Geofabrik GmbH</a> and <a href=\"http://www.openstreetmap.org/\" rel=\"nofollow\">OpenStreetMap Contributors</a> <a></a></p>\n<p>All data from the <a href=\"https://www.openstreetmap.org\" rel=\"nofollow\">OpenStreetMap</a> is licensed under the <a href=\"https://www.openstreetmap.org/copyright\" rel=\"nofollow\">OpenStreetMap License</a>.</p>\n\n          </div>"}, "last_serial": 6528372, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0f3b0e8123436d10655f5e6969ecb984", "sha256": "f583bcf1c00da6603ef4e1543ca8bb8f3c666b1ebabda4c391c8241554682b38"}, "downloads": -1, "filename": "pydriosm-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0f3b0e8123436d10655f5e6969ecb984", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 250895, "upload_time": "2019-03-03T23:33:49", "upload_time_iso_8601": "2019-03-03T23:33:49.198213Z", "url": "https://files.pythonhosted.org/packages/4b/f6/79df9eca6e41c5230ba1be879a5af25af5b0a5d923252953b8ff2331a534/pydriosm-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c7d9bed50df00fd39451089788fced2", "sha256": "a66559f81ebe97574c4c77c5f3562ef74582a4b0965e4ab38b6eaf4157780c41"}, "downloads": -1, "filename": "pydriosm-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7c7d9bed50df00fd39451089788fced2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20649, "upload_time": "2019-03-03T23:33:51", "upload_time_iso_8601": "2019-03-03T23:33:51.444807Z", "url": "https://files.pythonhosted.org/packages/2f/2d/1dfdfbf80ba2e952a67c974e81a4383be78de60044dccb3bc234779c35b1/pydriosm-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "aaa3ed92cb85f9ee9853830d30e0c740", "sha256": "69ca4fb1c3138a8c6c07d478222be98e2e193f5e9cb92ca75d38b2e61abba672"}, "downloads": -1, "filename": "pydriosm-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "aaa3ed92cb85f9ee9853830d30e0c740", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 250906, "upload_time": "2019-03-07T15:21:00", "upload_time_iso_8601": "2019-03-07T15:21:00.133084Z", "url": "https://files.pythonhosted.org/packages/01/bc/9db79a4595fcac38bf3bbd94208ec989a423113268947df77b22fb57a38c/pydriosm-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "529b2e75defa88457e2a0973ab78afb4", "sha256": "5ce1b71e4b642e4cbcd50e8320a74a9e8b609592fb2aa39525f7d315617c7a0e"}, "downloads": -1, "filename": "pydriosm-1.0.1.tar.gz", "has_sig": false, "md5_digest": "529b2e75defa88457e2a0973ab78afb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20676, "upload_time": "2019-03-07T15:21:02", "upload_time_iso_8601": "2019-03-07T15:21:02.717586Z", "url": "https://files.pythonhosted.org/packages/aa/4e/2c98b4ab6714aac64bbc0b1097b1303e2c7cd9acd4565793e4a73206036c/pydriosm-1.0.1.tar.gz", "yanked": false}], "1.0.10": [{"comment_text": "", "digests": {"md5": "f43e9f64fe2b98d667e4a116375e844e", "sha256": "0ce631b82e8f386f8a50d1869f9065c524a9ea3bdfc7fc0a56ab7af8e56ea625"}, "downloads": -1, "filename": "pydriosm-1.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "f43e9f64fe2b98d667e4a116375e844e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 286653, "upload_time": "2019-03-18T22:13:06", "upload_time_iso_8601": "2019-03-18T22:13:06.035378Z", "url": "https://files.pythonhosted.org/packages/6e/57/2df36a7d8c02425f54f9547d3fdbca1b8bb66da5255a533d9a2f37f6d798/pydriosm-1.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c850b45c9978e0348f436df9568589c", "sha256": "b65ba234a7bddab7a6798e4615fed083cc394814a938e2152eb53c1b6f91d14a"}, "downloads": -1, "filename": "pydriosm-1.0.10.tar.gz", "has_sig": false, "md5_digest": "7c850b45c9978e0348f436df9568589c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28882, "upload_time": "2019-03-18T22:13:07", "upload_time_iso_8601": "2019-03-18T22:13:07.613295Z", "url": "https://files.pythonhosted.org/packages/2e/32/918da383db4a90abaa5979339d808e7d2037007c2c7805e4ec8aa25d2ea7/pydriosm-1.0.10.tar.gz", "yanked": false}], "1.0.11": [{"comment_text": "", "digests": {"md5": "3559cfa132bc8a4266eaab5db05d96b5", "sha256": "a514c99f27c821fce8dd2f043582e8805dcab4c06591ac708cd686a03cce8a36"}, "downloads": -1, "filename": "pydriosm-1.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "3559cfa132bc8a4266eaab5db05d96b5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 286801, "upload_time": "2019-04-04T12:14:13", "upload_time_iso_8601": "2019-04-04T12:14:13.183464Z", "url": "https://files.pythonhosted.org/packages/d5/b5/d2cd6c0f67bdf5befe7f1ce3c9a36198ad608d994331d67b3a4ddd60231b/pydriosm-1.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9219c41ec4a9ba7aecf8b531f0fc8da7", "sha256": "9e571822e573b24489b128dbb4527eb71f5f9e45824937f267dcb0b9b5ef1b96"}, "downloads": -1, "filename": "pydriosm-1.0.11.tar.gz", "has_sig": false, "md5_digest": "9219c41ec4a9ba7aecf8b531f0fc8da7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29192, "upload_time": "2019-04-04T12:14:14", "upload_time_iso_8601": "2019-04-04T12:14:14.854629Z", "url": "https://files.pythonhosted.org/packages/da/09/6d391658ec4e5e1371bf36cc0bde1461469dc92f9260ae30792413ee4c19/pydriosm-1.0.11.tar.gz", "yanked": false}], "1.0.12": [{"comment_text": "", "digests": {"md5": "bde1b7172f2d64fe2b6665b3c9680235", "sha256": "8dab88e61bbe9a852294329438222d791766c3402aa9899c525cfd9276f4ed48"}, "downloads": -1, "filename": "pydriosm-1.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "bde1b7172f2d64fe2b6665b3c9680235", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 298108, "upload_time": "2019-07-11T16:46:16", "upload_time_iso_8601": "2019-07-11T16:46:16.118526Z", "url": "https://files.pythonhosted.org/packages/a6/06/1873027e726cb45ec1c1b453b474053e99b37d272dd0bc3ae090eef45cc0/pydriosm-1.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "690c90e581f4eb0f42c201c3ac62ca8b", "sha256": "436907c5df9e339bd1708eddd7de18b2f0fef029e9d5d1b273604ad704c6496e"}, "downloads": -1, "filename": "pydriosm-1.0.12.tar.gz", "has_sig": false, "md5_digest": "690c90e581f4eb0f42c201c3ac62ca8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28065, "upload_time": "2019-07-11T16:46:18", "upload_time_iso_8601": "2019-07-11T16:46:18.426904Z", "url": "https://files.pythonhosted.org/packages/1e/80/c3d0211d9da8411eda8b0e997baafdcaccb9c3c40ada5a206c473e18d074/pydriosm-1.0.12.tar.gz", "yanked": false}], "1.0.13": [{"comment_text": "", "digests": {"md5": "dbdfe1ffa4bbdbb0ea204bebb6e2e37b", "sha256": "c7f1e64a2217fd54a7881196c62a91712e6ac85bef2d38988fab4c677f08d880"}, "downloads": -1, "filename": "pydriosm-1.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "dbdfe1ffa4bbdbb0ea204bebb6e2e37b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 298159, "upload_time": "2019-07-15T00:38:21", "upload_time_iso_8601": "2019-07-15T00:38:21.395230Z", "url": "https://files.pythonhosted.org/packages/0a/cd/bbf6bc026da989f5ff76dd25a9dfac6569d78b5b69f2512d5cc361b062bb/pydriosm-1.0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be91f24001fd9d0c1c1681f1b74c725f", "sha256": "a0b64b356d78b978438fc9ef8e49b3908a5bdc012b2ab64f4acccc55d9c853b8"}, "downloads": -1, "filename": "pydriosm-1.0.13.tar.gz", "has_sig": false, "md5_digest": "be91f24001fd9d0c1c1681f1b74c725f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28116, "upload_time": "2019-07-15T00:38:23", "upload_time_iso_8601": "2019-07-15T00:38:23.191377Z", "url": "https://files.pythonhosted.org/packages/48/f5/7dac7a1665658eeb6ca45ee3a24b51f3ffb137e7b7317d48d50fd748f0df/pydriosm-1.0.13.tar.gz", "yanked": false}], "1.0.14": [{"comment_text": "", "digests": {"md5": "da7bb2a9c8b9a9fdd082a21fe731e721", "sha256": "aaf220c9c717339f6e9777c3375b602e24545395147b0b817225b213cf29a1a8"}, "downloads": -1, "filename": "pydriosm-1.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "da7bb2a9c8b9a9fdd082a21fe731e721", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 298510, "upload_time": "2019-07-16T20:50:16", "upload_time_iso_8601": "2019-07-16T20:50:16.693434Z", "url": "https://files.pythonhosted.org/packages/ab/ec/615a8873bb38153b64abe2ea93e962ab53a15b12134b2b82a04881fb21f0/pydriosm-1.0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70fb1b95b2f7b76389fda2d113aa9551", "sha256": "da9fa6cf79eed762870985aa714856d87f07c5cafcdf3bde7e33886117c454a4"}, "downloads": -1, "filename": "pydriosm-1.0.14.tar.gz", "has_sig": false, "md5_digest": "70fb1b95b2f7b76389fda2d113aa9551", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28560, "upload_time": "2019-07-16T20:50:18", "upload_time_iso_8601": "2019-07-16T20:50:18.631377Z", "url": "https://files.pythonhosted.org/packages/14/84/af16706c7787df8ce44a8ec1f3bcf0c709c93c17585a7781cca8cd723a76/pydriosm-1.0.14.tar.gz", "yanked": false}], "1.0.15": [{"comment_text": "", "digests": {"md5": "fddc8d86199d7dc45c883629394144de", "sha256": "79f8ed44b3b99b852c7fbad67433e9b91463e62efc6225a20dc4f59c1ca4ae2e"}, "downloads": -1, "filename": "pydriosm-1.0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "fddc8d86199d7dc45c883629394144de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 298861, "upload_time": "2019-08-29T20:50:41", "upload_time_iso_8601": "2019-08-29T20:50:41.656486Z", "url": "https://files.pythonhosted.org/packages/bd/85/e0a491e1fc303c3e49c9e8a6683a145e547ba70b269253b3c52965c90c52/pydriosm-1.0.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44d6e1072f56e8f2ee8dfd0ed1622c18", "sha256": "45722f42bcb40f3f4731b68a4f93709e96557fb0f989da7e6256bfbf97a53aca"}, "downloads": -1, "filename": "pydriosm-1.0.15.tar.gz", "has_sig": false, "md5_digest": "44d6e1072f56e8f2ee8dfd0ed1622c18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29327, "upload_time": "2019-08-29T20:50:43", "upload_time_iso_8601": "2019-08-29T20:50:43.364088Z", "url": "https://files.pythonhosted.org/packages/f2/1d/8df5aafe466f4bc2d2bffd5b1698d1ec09848cdf5f6f19611d2f3a8a7e05/pydriosm-1.0.15.tar.gz", "yanked": false}], "1.0.16": [{"comment_text": "", "digests": {"md5": "e7d948b7fb3c172241439311f737fe59", "sha256": "31d17368bb2d781de8184eab2a1cc6138305bff797ea887ca7575bbb0fe54001"}, "downloads": -1, "filename": "pydriosm-1.0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "e7d948b7fb3c172241439311f737fe59", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 328990, "upload_time": "2019-10-06T21:55:43", "upload_time_iso_8601": "2019-10-06T21:55:43.839863Z", "url": "https://files.pythonhosted.org/packages/88/d5/6d7f8c5e349571f8df7010276ed7a0a2d68eff7c76d51ccc2efdfc105c42/pydriosm-1.0.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "02c656cf81747c99b3001c5c125ef1ff", "sha256": "0ddd0697066eb1d64a9291cc03cced13995b3f46dc6572d64c14849b1496a00c"}, "downloads": -1, "filename": "pydriosm-1.0.16.tar.gz", "has_sig": false, "md5_digest": "02c656cf81747c99b3001c5c125ef1ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30898, "upload_time": "2019-10-06T21:55:45", "upload_time_iso_8601": "2019-10-06T21:55:45.828355Z", "url": "https://files.pythonhosted.org/packages/fd/cd/89a50db3c701de6b08ae3b609908eb9c7352feb05847d21c6206c6ac93c4/pydriosm-1.0.16.tar.gz", "yanked": false}], "1.0.17": [{"comment_text": "", "digests": {"md5": "5020eca8f63b4ed2a8a1a6c65cf8d857", "sha256": "794c00fc1032a5ff3077edf7b88659fdc33b98e6d6f802845be93cc4bc30f46a"}, "downloads": -1, "filename": "pydriosm-1.0.17-py3-none-any.whl", "has_sig": false, "md5_digest": "5020eca8f63b4ed2a8a1a6c65cf8d857", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 329372, "upload_time": "2019-11-29T17:22:52", "upload_time_iso_8601": "2019-11-29T17:22:52.495907Z", "url": "https://files.pythonhosted.org/packages/79/28/e0adfe5c202381a34da5b5689a32e55f0a5bb66f5ae89d8d600a61619270/pydriosm-1.0.17-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dd5fc75fbea6066cf73edabb53bdddf", "sha256": "bcf19e6c5b83e6747980eb25101535b0ee87b6aa0d4bc232988e394a1e0167a1"}, "downloads": -1, "filename": "pydriosm-1.0.17.tar.gz", "has_sig": false, "md5_digest": "6dd5fc75fbea6066cf73edabb53bdddf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33433, "upload_time": "2019-11-29T17:22:54", "upload_time_iso_8601": "2019-11-29T17:22:54.610431Z", "url": "https://files.pythonhosted.org/packages/c9/d1/61b3ed5c1ca0945b3ccb5b45202db66d49a1d7693f322b5c334557267db8/pydriosm-1.0.17.tar.gz", "yanked": false}], "1.0.18": [{"comment_text": "", "digests": {"md5": "bad67f5d3c60fb6ff3bce1985ecfb6b3", "sha256": "c7ddb66420013917c92dd73ba2ee5a5d2a68fd2c2e769260c2b353d60bb5570f"}, "downloads": -1, "filename": "pydriosm-1.0.18-py3-none-any.whl", "has_sig": false, "md5_digest": "bad67f5d3c60fb6ff3bce1985ecfb6b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 194618, "upload_time": "2020-01-08T23:53:54", "upload_time_iso_8601": "2020-01-08T23:53:54.419602Z", "url": "https://files.pythonhosted.org/packages/ad/da/f320d0891d5ac47ef96653b53c9e78137bb384053eb56050b2205a72ab22/pydriosm-1.0.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5731be55b8cb13493c70cab7a88c2fee", "sha256": "f6d01652a02c8b0ddcb28e17462bfb3d7161e5dd4934d494662d31cc91c0aa00"}, "downloads": -1, "filename": "pydriosm-1.0.18.tar.gz", "has_sig": false, "md5_digest": "5731be55b8cb13493c70cab7a88c2fee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35314, "upload_time": "2020-01-08T23:53:56", "upload_time_iso_8601": "2020-01-08T23:53:56.370789Z", "url": "https://files.pythonhosted.org/packages/62/83/8308de43b811ed9294b1f4057f6dfdafc609ab85d658064c444e9794efd7/pydriosm-1.0.18.tar.gz", "yanked": false}], "1.0.19": [{"comment_text": "", "digests": {"md5": "a49c0b6b556779e5799f4ee88b8bb30e", "sha256": "0d2aee98fc38aed857a8a1c2e01ac5c7290872ff3a290eb6e70429915764f82d"}, "downloads": -1, "filename": "pydriosm-1.0.19-py3-none-any.whl", "has_sig": false, "md5_digest": "a49c0b6b556779e5799f4ee88b8bb30e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 195316, "upload_time": "2020-01-27T19:57:46", "upload_time_iso_8601": "2020-01-27T19:57:46.480778Z", "url": "https://files.pythonhosted.org/packages/39/9a/bebb26b14fa735049825d86eae48f52014109fc81a753d95970e2ce51f98/pydriosm-1.0.19-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35fd958ba155037462468de722722b3c", "sha256": "78397cd6be1d229c30cf2af9a1c78c38e5b40b56e252020f40542fcf704c1b16"}, "downloads": -1, "filename": "pydriosm-1.0.19.tar.gz", "has_sig": false, "md5_digest": "35fd958ba155037462468de722722b3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36341, "upload_time": "2020-01-27T19:57:48", "upload_time_iso_8601": "2020-01-27T19:57:48.833597Z", "url": "https://files.pythonhosted.org/packages/61/3c/7eed3ee03391ba42659eaa9e525a5672ac4acd09371767ab326a80686b62/pydriosm-1.0.19.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "f66b017f5412dfdc56cf7f952d32a536", "sha256": "e78b216d9d96d00cb5212943a961cdd9949cc6a7ff1626fd3f796e32642ff7dc"}, "downloads": -1, "filename": "pydriosm-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f66b017f5412dfdc56cf7f952d32a536", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 252036, "upload_time": "2019-03-07T20:03:49", "upload_time_iso_8601": "2019-03-07T20:03:49.413577Z", "url": "https://files.pythonhosted.org/packages/1d/28/8d0e98a9d78bdd1e391dc9043e45eaf20ae5f795d16b4239abc2d3fbf220/pydriosm-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6947112c03dcbbddbd9a2c123ea04045", "sha256": "b8a570a7a5f8edbabb73e2d7dbc5babc508a3a9f104dfe8923159ebc5fb08e1e"}, "downloads": -1, "filename": "pydriosm-1.0.2.tar.gz", "has_sig": false, "md5_digest": "6947112c03dcbbddbd9a2c123ea04045", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23032, "upload_time": "2019-03-07T20:03:52", "upload_time_iso_8601": "2019-03-07T20:03:52.638730Z", "url": "https://files.pythonhosted.org/packages/42/52/9fe0cfb7dc1e75844b4b9b3e415164483be41787c979336f0cb17852868b/pydriosm-1.0.2.tar.gz", "yanked": false}], "1.0.20": [{"comment_text": "", "digests": {"md5": "f00dc5bc7a7ae0d0b59ed57e381c897d", "sha256": "6a356fd4bbee0049941e0aa440e77b61324816bd86bb0dd98853ea40b4f06b03"}, "downloads": -1, "filename": "pydriosm-1.0.20-py3-none-any.whl", "has_sig": false, "md5_digest": "f00dc5bc7a7ae0d0b59ed57e381c897d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 195112, "upload_time": "2020-01-27T20:13:58", "upload_time_iso_8601": "2020-01-27T20:13:58.411524Z", "url": "https://files.pythonhosted.org/packages/6c/3d/a0f2db50340ca24d62d476000c44a0b67f3ce4f172bfab4c10daf5d1c0ce/pydriosm-1.0.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac1f889b06f4e806791e1163b7e6e8cf", "sha256": "521c4b1fd25b71db6691b0d53e29948aaef3e68000a364caab148f6e582ddbc4"}, "downloads": -1, "filename": "pydriosm-1.0.20.tar.gz", "has_sig": false, "md5_digest": "ac1f889b06f4e806791e1163b7e6e8cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35888, "upload_time": "2020-01-27T20:14:00", "upload_time_iso_8601": "2020-01-27T20:14:00.288164Z", "url": "https://files.pythonhosted.org/packages/7b/77/5d697c547e685b1e1fb8fd8925319cf2276e5f1124a97acc202375c93631/pydriosm-1.0.20.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "2f45be13c401a94a9ed68aa3678baddf", "sha256": "7d7c7cf342e29e6b0bba0752d4aa3d83ecda011988e1af153c728fc40ab2a4fd"}, "downloads": -1, "filename": "pydriosm-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2f45be13c401a94a9ed68aa3678baddf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 252336, "upload_time": "2019-03-08T23:24:04", "upload_time_iso_8601": "2019-03-08T23:24:04.602146Z", "url": "https://files.pythonhosted.org/packages/bc/ba/00ed2874ec7c3e9e4141fa48f009b6d7453c9378785c3be1cdb19e5e88de/pydriosm-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b83a2f6d9c165d01a684c07af94ce18c", "sha256": "0c4bb3c4ba150ed0c4b862f90edacbcfb962cc1933e4bd7ee23992906a38138c"}, "downloads": -1, "filename": "pydriosm-1.0.3.tar.gz", "has_sig": false, "md5_digest": "b83a2f6d9c165d01a684c07af94ce18c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23409, "upload_time": "2019-03-08T23:24:08", "upload_time_iso_8601": "2019-03-08T23:24:08.713950Z", "url": "https://files.pythonhosted.org/packages/ed/3f/1f458278c262e1ce4907b26defe6db94796750136e2c77c6dd414973da65/pydriosm-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "2a641ffd3172883e3fabde10f09e2ceb", "sha256": "49071169203195c9b746c401ff7cef49c7101d389a4f17de380591107869c809"}, "downloads": -1, "filename": "pydriosm-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2a641ffd3172883e3fabde10f09e2ceb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 254009, "upload_time": "2019-03-11T15:06:26", "upload_time_iso_8601": "2019-03-11T15:06:26.411876Z", "url": "https://files.pythonhosted.org/packages/6a/a7/b066f85cbf3a9e4296601e0c74b44851c007baeea93d42e704e846da8afe/pydriosm-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "001d374e2f4ee58d870ac69180367f90", "sha256": "152f6cf9d414d64ebf8c7ae994765a47331eda206272547069ab016bc6f29624"}, "downloads": -1, "filename": "pydriosm-1.0.4.tar.gz", "has_sig": false, "md5_digest": "001d374e2f4ee58d870ac69180367f90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25174, "upload_time": "2019-03-11T15:06:30", "upload_time_iso_8601": "2019-03-11T15:06:30.708565Z", "url": "https://files.pythonhosted.org/packages/eb/be/d0226033d767d5a424acdec39a5ecfaf114bc7308a244737430094eeadf0/pydriosm-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "4f47d907ad0f061e89c21f0c4ff6b444", "sha256": "c29bf1226ef83c6d9ce776e42579a417ac4d48909b89f84bf11b35185bcaf36f"}, "downloads": -1, "filename": "pydriosm-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "4f47d907ad0f061e89c21f0c4ff6b444", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 254096, "upload_time": "2019-03-11T22:04:26", "upload_time_iso_8601": "2019-03-11T22:04:26.195370Z", "url": "https://files.pythonhosted.org/packages/89/9a/81a60b68c240a491e5c6317759d4029530159b45e65ec679cf2c6bfda21a/pydriosm-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba577df0ad5195b66920a98ccb909eac", "sha256": "842ad3814ef0ee2ce04bdf98cba6d79cc123462255dc4a1c02cbebd5d51f9995"}, "downloads": -1, "filename": "pydriosm-1.0.5.tar.gz", "has_sig": false, "md5_digest": "ba577df0ad5195b66920a98ccb909eac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25265, "upload_time": "2019-03-11T22:04:32", "upload_time_iso_8601": "2019-03-11T22:04:32.364616Z", "url": "https://files.pythonhosted.org/packages/eb/7c/64c233532aaa83f58907550f664afbee06a98ccc508dbf08807035c0b85b/pydriosm-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "490be16e8e8b675224a55a4118e2163b", "sha256": "1ae17f4d193db847aa633675acfdb6e3dfb3fc932bf447c4e91fa4e93ade92c8"}, "downloads": -1, "filename": "pydriosm-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "490be16e8e8b675224a55a4118e2163b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 254224, "upload_time": "2019-03-12T13:12:57", "upload_time_iso_8601": "2019-03-12T13:12:57.827479Z", "url": "https://files.pythonhosted.org/packages/33/71/3d83f871699036335ee0ca1cd079da95170ae9d625678a5357f988a5180f/pydriosm-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f90f9c480c6441ad78a36b0c9299b6b3", "sha256": "65627745325247d42e0ace77c46a4abae757eb4560067e49f14516cace39b495"}, "downloads": -1, "filename": "pydriosm-1.0.6.tar.gz", "has_sig": false, "md5_digest": "f90f9c480c6441ad78a36b0c9299b6b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25514, "upload_time": "2019-03-12T13:13:04", "upload_time_iso_8601": "2019-03-12T13:13:04.239148Z", "url": "https://files.pythonhosted.org/packages/17/c1/337890e19f752aefdc10e62cf53b9738a2b211dad506b4b6917a0059ac24/pydriosm-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "7694483dc6ea24adca4158ecc6e12b62", "sha256": "66a51b45ec8b12363c40330d9febd6c0faf9c2ad88f19e83b96a2dd9abddd2b9"}, "downloads": -1, "filename": "pydriosm-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "7694483dc6ea24adca4158ecc6e12b62", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 254246, "upload_time": "2019-03-12T17:11:13", "upload_time_iso_8601": "2019-03-12T17:11:13.484647Z", "url": "https://files.pythonhosted.org/packages/1b/bb/8022eb906c7e647f3109bf20d865b0a4c8f07b4f3e6b142d9292b5beb4c8/pydriosm-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8537f66eb59bb218368fbf72b6c0fac1", "sha256": "948edaeb08ddd4acd8103c57d7af28734c07bf3679e3aef140a470887c0db7e5"}, "downloads": -1, "filename": "pydriosm-1.0.7.tar.gz", "has_sig": false, "md5_digest": "8537f66eb59bb218368fbf72b6c0fac1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25539, "upload_time": "2019-03-12T17:11:20", "upload_time_iso_8601": "2019-03-12T17:11:20.204278Z", "url": "https://files.pythonhosted.org/packages/a2/01/d0196611a9ad1595ef1dad56e34e2f69665884dc26c4352669ffd600b386/pydriosm-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "cd9b5c189d64ababcd7796091f81c5ff", "sha256": "4a7254c2c01fa074a5ff3abcb6a74063ef6d6692e55d3b788b9256bb573012e2"}, "downloads": -1, "filename": "pydriosm-1.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "cd9b5c189d64ababcd7796091f81c5ff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 286292, "upload_time": "2019-03-18T15:38:55", "upload_time_iso_8601": "2019-03-18T15:38:55.193583Z", "url": "https://files.pythonhosted.org/packages/30/be/d1e667301d15ad97b8586fd027976f5443c5276dc2c576e8e616354c43c4/pydriosm-1.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5aeb1994f94c0e13c0068dc925071cb1", "sha256": "da4a941558f2b9d8907d767e59a48e36d1505c56c2c035fb88ff1f8fee933810"}, "downloads": -1, "filename": "pydriosm-1.0.8.tar.gz", "has_sig": false, "md5_digest": "5aeb1994f94c0e13c0068dc925071cb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28177, "upload_time": "2019-03-18T15:38:57", "upload_time_iso_8601": "2019-03-18T15:38:57.037243Z", "url": "https://files.pythonhosted.org/packages/7a/74/d0ca114d09444efd1c74903e91a9b4a6f2a20395a8ec770a81b08bc2edd4/pydriosm-1.0.8.tar.gz", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "e302cae146c411ee168c539d596a80fb", "sha256": "4926b62c6f4cbeeb846992b189d3714fce7009a8b9ec8d770e7c10f3c1c489a8"}, "downloads": -1, "filename": "pydriosm-1.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "e302cae146c411ee168c539d596a80fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 286557, "upload_time": "2019-03-18T20:14:22", "upload_time_iso_8601": "2019-03-18T20:14:22.832557Z", "url": "https://files.pythonhosted.org/packages/98/b5/81bf1fa6d1c5cb2616566256e8552a4eac3e12ef91e2485be3fc3603c2ac/pydriosm-1.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35a47d038ea1ab6986f41d7c98aa3d14", "sha256": "1f93f9ef25fcb2d959cd47c779ece523f405e087da10739a1380ab58a502dad7"}, "downloads": -1, "filename": "pydriosm-1.0.9.tar.gz", "has_sig": false, "md5_digest": "35a47d038ea1ab6986f41d7c98aa3d14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28809, "upload_time": "2019-03-18T20:14:24", "upload_time_iso_8601": "2019-03-18T20:14:24.681333Z", "url": "https://files.pythonhosted.org/packages/be/8e/36d1a7e253af8f73727d7865907d49091aaf17101841bccfef3a101c880c/pydriosm-1.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f00dc5bc7a7ae0d0b59ed57e381c897d", "sha256": "6a356fd4bbee0049941e0aa440e77b61324816bd86bb0dd98853ea40b4f06b03"}, "downloads": -1, "filename": "pydriosm-1.0.20-py3-none-any.whl", "has_sig": false, "md5_digest": "f00dc5bc7a7ae0d0b59ed57e381c897d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 195112, "upload_time": "2020-01-27T20:13:58", "upload_time_iso_8601": "2020-01-27T20:13:58.411524Z", "url": "https://files.pythonhosted.org/packages/6c/3d/a0f2db50340ca24d62d476000c44a0b67f3ce4f172bfab4c10daf5d1c0ce/pydriosm-1.0.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac1f889b06f4e806791e1163b7e6e8cf", "sha256": "521c4b1fd25b71db6691b0d53e29948aaef3e68000a364caab148f6e582ddbc4"}, "downloads": -1, "filename": "pydriosm-1.0.20.tar.gz", "has_sig": false, "md5_digest": "ac1f889b06f4e806791e1163b7e6e8cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35888, "upload_time": "2020-01-27T20:14:00", "upload_time_iso_8601": "2020-01-27T20:14:00.288164Z", "url": "https://files.pythonhosted.org/packages/7b/77/5d697c547e685b1e1fb8fd8925319cf2276e5f1124a97acc202375c93631/pydriosm-1.0.20.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:46 2020"}