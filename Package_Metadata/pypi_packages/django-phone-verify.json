{"info": {"author": "Sanyam Khurana", "author_email": "sanyam@sanyamkhurana.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.1", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "django-phone-verify\n===================\n\n.. image:: https://travis-ci.org/CuriousLearner/django-phone-verify.svg?branch=master\n    :target: https://travis-ci.org/CuriousLearner/django-phone-verify\n\n.. image:: https://coveralls.io/repos/github/CuriousLearner/django-phone-verify/badge.svg?branch=master\n    :target: https://coveralls.io/github/CuriousLearner/django-phone-verify?branch=master\n\n.. image:: https://pypip.in/license/django-phone-verify/badge.svg\n    :target: https://pypi.python.org/pypi/django-phone-verify/\n    :alt: License\n\n.. image:: https://img.shields.io/badge/Made%20with-Python-1f425f.svg\n   :target: https://www.python.org/\n\n.. image:: https://img.shields.io/badge/Maintained%3F-yes-green.svg\n   :target: https://GitHub.com/CuriousLearner/django-phone-verify/graphs/commit-activity\n\n.. image:: https://badge.fury.io/py/django-phone-verify.svg\n   :target: https://pypi.python.org/pypi/django-phone-verify/\n\n.. image:: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n   :target: http://makeapullrequest.com\n\n\nA Django app to support phone number verification using the security code sent via SMS.\n\nSalient Features\n----------------\n\n- Lets you verify phone numbers via SMS.\n- Extensibility to provide tokens with varying length.\n- Comes with Twilio already integrated.\n- Set expiration time on tokens.\n- Provides an interface for writing custom SMS sending backend for easy extensibility.\n- Does not mess-up with existing ``AUTH_USER_MODEL`` at all.\n- Can be used for a number of potential use-cases, and not just auth.\n- Provides ready endpoints for sending SMS and verification (See `api_endpoints.rst`_).\n\n.. _api_endpoints.rst: https://github.com/CuriousLearner/django-phone-verify/blob/master/phone_verify/docs/api_endpoints.rst\n\nInstallation\n------------\n\n.. code-block:: shell\n\n    pip install django-phone-verify\n\nConfiguration\n-------------\n\n- Add app to `INSTALLED_APPS`\n\n.. code-block:: python\n\n    # In settings.py:\n\n    # Add app to `INSTALLED_APPS`\n    INSTALLED_APPS = [\n        ...\n        \"phone_verify\",\n    ]\n\n- Add settings for Phone Verify as you desire:\n\n.. code-block:: python\n\n    # In settings.py\n    # Add settings for phone_verify to work\n    PHONE_VERIFICATION = {\n        \"BACKEND\": \"phone_verify.backends.twilio.TwilioBackend\",\n        \"OPTIONS\": {\n            \"SID\": \"fake\",\n            \"SECRET\": \"fake\",\n            \"FROM\": \"+14755292729\",\n            \"SANDBOX_TOKEN\": \"123456\",\n        },\n        \"TOKEN_LENGTH\": 6,\n        \"MESSAGE\": \"Welcome to {app}! Please use security code {security_code} to proceed.\",\n        \"APP_NAME\": \"Phone Verify\",\n        \"SECURITY_CODE_EXPIRATION_TIME\": 3600,  # In seconds only\n        \"VERIFY_SECURITY_CODE_ONLY_ONCE\": False,  # If False, then a security code can be used multiple times for verification\n    }\n\nUsage\n-----\n\n- To explore more about how to use, integrate and leverage existing functionality of ``Django Phone Verify``, have a look at `usage.rst`_\n\n.. _usage.rst: https://github.com/CuriousLearner/django-phone-verify/blob/master/docs/usage.rst\n\n**Note**: ``Django Phone Verfiy`` also provides ``Nexmo`` as a backend service other than ``Twilio``. To switch to ``Nexmo``, replace ``BACKEND`` within your ``PHONE_VERIFICATION`` setting with ``phone_verify.backends.nexmo.NexmoBackend`` and define ``KEY`` within ``OPTIONS`` of ``PHONE_VERIFICATION`` setting, with your nexmo API key, in place of already available ``SID``.\n\nCompatibility\n-------------\n- Django 2.1+\n- Django REST Framework 3.9+\n\nContributing\n------------\n\nNo code is bug-free and I'm sure this app will have bugs. If you find any bugs, please create an issue on GitHub.\n\nLicence\n-------\n\nGPLv3\n\nRelease Notes\n-------------\n\n[2.0.0]\n^^^^^^^\n\n**NOTE**: Previous version of this library provided the ``security_code`` in the JWT ``session_token``. You would have to re-verify ``phone_numbers`` in *this* version to ensure they are authentically verified.\n\nAdded\n\"\"\"\"\"\n\n- Tests added to provide 100% coverage on the package.\n- Add ``nexmo.errors.ClientError`` as exception class in ``phone_verify.backends.nexmo.NexmoBackend`` & ``phone_verify.backends.nexmo.NexmoSandboxBackend``.\n\nChanged\n\"\"\"\"\"\"\"\n\n- Method signature changed for ``phone_verify.backends.BaseBackend.generate_session_token``. It now accepts only ``phone_number`` instead of combination of ``phone_number`` and ``security_code``.\n- Remove the ``security_code`` from JWT ``session_token`` to avoid leaking information.\n- Add nonce in ``session_token`` to generate unique tokens for each ``phone_number``.\n- Fixes call to ``phone_verify.backends.nexmo.NexmoBackend.send_sms`` method.\n\n[1.1.0]\n^^^^^^^\n\nAdded\n\"\"\"\"\"\n\n- Support ``Nexmo`` as a backend service alongwith ``Twilio``.\n- Add docs for writing custom backend.\n\nChanged\n\"\"\"\"\"\"\"\n\n- Update ``backends.base.BaseBackend.validate_security_code`` to use ``save()`` instead of ``update()`` to allow Django to emit its ``post_save()`` signal.\n\n[1.0.0]\n^^^^^^^\n\nAdded\n\"\"\"\"\"\n\n- Add coverage report through ``coveralls``.\n- Support for One-Time Passwords (OTP) using ``VERIFY_SECURITY_CODE_ONLY_ONCE`` as ``True`` in the settings.\n- Script to support makemigrations for development.\n- ``BaseBackend`` status now have ``SECURITY_CODE_VERIFIED`` and ``SESSION_TOKEN_INVALID`` status to support new states.\n\nChanged\n\"\"\"\"\"\"\"\n\n- Rename ``TWILIO_SANDBOX_TOKEN`` to ``SANDBOX_TOKEN``.\n- Fix signature for ``send_bulk_sms`` method in ``TwilioBackend`` and ``TwilioSandboxBackend``.\n- Response for ``/api/phone/register`` contains key ``session_token`` instead of ``session_code``.\n- Request payload for ``/api/phone/verify`` now expects ``session_token`` key instead of ``session_code``.\n- Response for ``/api/phone/verify`` now sends additional response of ``Security code is already verified`` in case ``VERIFY_SECURITY_CODE_ONLY_ONCE`` is set to ``True``.\n- Rename ``otp`` to ``security_code`` in code and docs to be more consistent.\n- Rename ``BaseBackend`` status from ``VALID``, ``INVALID``, ``EXPIRED`` to ``SECURITY_CODE_VALID``, ``SECURITY_CODE_INVALID``, and ``SECURITY_CODE_EXPIRED`` respectively.\n- Rename ``session_code`` to ``session_token`` to be consistent in code and naming across the app.\n- Rename service ``send_otp_and_generate_session_code`` to ``send_security_code_and_generate_session_token``.\n- Rename method ``BaseBackend.generate_token`` to ``BaseBackend.generate_security_code``.\n- Rename method ``create_otp_and_session_token`` to ``create_security_code_and_session_token``.\n- Rename method ``BaseBackend.validate_token`` to ``BaseBackend.validate_security_code`` with an additional parameter of ``session_token``.\n\n[0.2.0]\n^^^^^^^\n\nAdded\n\"\"\"\"\"\n\n- ``pre-commit-config`` to maintain code quality using black and other useful tools.\n- Docs for integration and usage in `usage.rst`_.\n- Tox for testing on `py{37}-django{20,21,22}`.\n- Travis CI for testing builds.\n\nChanged\n\"\"\"\"\"\"\"\n\n- Convert ``*.md`` docs to reST Markup.\n- Fix issue with installing required package dependencies via ``install_requires``.\n\n[0.1.1]\n^^^^^^^\n\nAdded\n\"\"\"\"\"\n\n- README and documentation of API endpoints.\n- ``setup.cfg`` to manage coverage.\n- ``phone_verify`` app including backends, requirements, tests.\n- Intial app setup.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CuriousLearner/django-phone-verify", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "django-phone-verify", "package_url": "https://pypi.org/project/django-phone-verify/", "platform": "", "project_url": "https://pypi.org/project/django-phone-verify/", "project_urls": {"Homepage": "https://github.com/CuriousLearner/django-phone-verify"}, "release_url": "https://pypi.org/project/django-phone-verify/2.0.0/", "requires_dist": null, "requires_python": "", "summary": "A Django app to support phone number verification using security code sent via SMS.", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/CuriousLearner/django-phone-verify\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/CuriousLearner/django-phone-verify.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c16eef0608b1762b410cd8b4270d44d08a9fab9/68747470733a2f2f7472617669732d63692e6f72672f437572696f75734c6561726e65722f646a616e676f2d70686f6e652d7665726966792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/CuriousLearner/django-phone-verify?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/CuriousLearner/django-phone-verify/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c00dbc096c8d4460c6c800c206b4720c61076f40/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f437572696f75734c6561726e65722f646a616e676f2d70686f6e652d7665726966792f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/django-phone-verify/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d51681d70af47633ed2d11b60d11d2b96d685b6f/68747470733a2f2f70797069702e696e2f6c6963656e73652f646a616e676f2d70686f6e652d7665726966792f62616467652e737667\"></a>\n<a href=\"https://www.python.org/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Made%20with-Python-1f425f.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68a99107ffdf24c5fb2cc4bca38b7b662e501b97/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d616465253230776974682d507974686f6e2d3166343235662e737667\"></a>\n<a href=\"https://GitHub.com/CuriousLearner/django-phone-verify/graphs/commit-activity\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Maintained%3F-yes-green.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90bf1b2a4d99698c4dffbc494b9734690a777fec/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d61696e7461696e65642533462d7965732d677265656e2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-phone-verify/\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/django-phone-verify.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e684463d3fb7bb0fd45cf1d0c9579cebb86c212d/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d70686f6e652d7665726966792e737667\"></a>\n<a href=\"http://makeapullrequest.com\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8897c5f5e8a5eacb8ddf983bb640b73cc10464c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265\"></a>\n<p>A Django app to support phone number verification using the security code sent via SMS.</p>\n<div id=\"salient-features\">\n<h2>Salient Features</h2>\n<ul>\n<li>Lets you verify phone numbers via SMS.</li>\n<li>Extensibility to provide tokens with varying length.</li>\n<li>Comes with Twilio already integrated.</li>\n<li>Set expiration time on tokens.</li>\n<li>Provides an interface for writing custom SMS sending backend for easy extensibility.</li>\n<li>Does not mess-up with existing <tt>AUTH_USER_MODEL</tt> at all.</li>\n<li>Can be used for a number of potential use-cases, and not just auth.</li>\n<li>Provides ready endpoints for sending SMS and verification (See <a href=\"https://github.com/CuriousLearner/django-phone-verify/blob/master/phone_verify/docs/api_endpoints.rst\" rel=\"nofollow\">api_endpoints.rst</a>).</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install django-phone-verify\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<ul>\n<li>Add app to <cite>INSTALLED_APPS</cite></li>\n</ul>\n<pre><span class=\"c1\"># In settings.py:</span>\n\n<span class=\"c1\"># Add app to `INSTALLED_APPS`</span>\n<span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s2\">\"phone_verify\"</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<ul>\n<li>Add settings for Phone Verify as you desire:</li>\n</ul>\n<pre><span class=\"c1\"># In settings.py</span>\n<span class=\"c1\"># Add settings for phone_verify to work</span>\n<span class=\"n\">PHONE_VERIFICATION</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"BACKEND\"</span><span class=\"p\">:</span> <span class=\"s2\">\"phone_verify.backends.twilio.TwilioBackend\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"OPTIONS\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"SID\"</span><span class=\"p\">:</span> <span class=\"s2\">\"fake\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"SECRET\"</span><span class=\"p\">:</span> <span class=\"s2\">\"fake\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"FROM\"</span><span class=\"p\">:</span> <span class=\"s2\">\"+14755292729\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"SANDBOX_TOKEN\"</span><span class=\"p\">:</span> <span class=\"s2\">\"123456\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"TOKEN_LENGTH\"</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"MESSAGE\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Welcome to </span><span class=\"si\">{app}</span><span class=\"s2\">! Please use security code </span><span class=\"si\">{security_code}</span><span class=\"s2\"> to proceed.\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"APP_NAME\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Phone Verify\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"SECURITY_CODE_EXPIRATION_TIME\"</span><span class=\"p\">:</span> <span class=\"mi\">3600</span><span class=\"p\">,</span>  <span class=\"c1\"># In seconds only</span>\n    <span class=\"s2\">\"VERIFY_SECURITY_CODE_ONLY_ONCE\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>  <span class=\"c1\"># If False, then a security code can be used multiple times for verification</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ul>\n<li>To explore more about how to use, integrate and leverage existing functionality of <tt>Django Phone Verify</tt>, have a look at <a href=\"https://github.com/CuriousLearner/django-phone-verify/blob/master/docs/usage.rst\" rel=\"nofollow\">usage.rst</a></li>\n</ul>\n<p><strong>Note</strong>: <tt>Django Phone Verfiy</tt> also provides <tt>Nexmo</tt> as a backend service other than <tt>Twilio</tt>. To switch to <tt>Nexmo</tt>, replace <tt>BACKEND</tt> within your <tt>PHONE_VERIFICATION</tt> setting with <tt>phone_verify.backends.nexmo.NexmoBackend</tt> and define <tt>KEY</tt> within <tt>OPTIONS</tt> of <tt>PHONE_VERIFICATION</tt> setting, with your nexmo API key, in place of already available <tt>SID</tt>.</p>\n</div>\n<div id=\"compatibility\">\n<h2>Compatibility</h2>\n<ul>\n<li>Django 2.1+</li>\n<li>Django REST Framework 3.9+</li>\n</ul>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>No code is bug-free and I\u2019m sure this app will have bugs. If you find any bugs, please create an issue on GitHub.</p>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<p>GPLv3</p>\n</div>\n<div id=\"release-notes\">\n<h2>Release Notes</h2>\n<div id=\"id1\">\n<h3>[2.0.0]</h3>\n<p><strong>NOTE</strong>: Previous version of this library provided the <tt>security_code</tt> in the JWT <tt>session_token</tt>. You would have to re-verify <tt>phone_numbers</tt> in <em>this</em> version to ensure they are authentically verified.</p>\n<div id=\"added\">\n<h4>Added</h4>\n<ul>\n<li>Tests added to provide 100% coverage on the package.</li>\n<li>Add <tt>nexmo.errors.ClientError</tt> as exception class in <tt>phone_verify.backends.nexmo.NexmoBackend</tt> &amp; <tt>phone_verify.backends.nexmo.NexmoSandboxBackend</tt>.</li>\n</ul>\n</div>\n<div id=\"changed\">\n<h4>Changed</h4>\n<ul>\n<li>Method signature changed for <tt>phone_verify.backends.BaseBackend.generate_session_token</tt>. It now accepts only <tt>phone_number</tt> instead of combination of <tt>phone_number</tt> and <tt>security_code</tt>.</li>\n<li>Remove the <tt>security_code</tt> from JWT <tt>session_token</tt> to avoid leaking information.</li>\n<li>Add nonce in <tt>session_token</tt> to generate unique tokens for each <tt>phone_number</tt>.</li>\n<li>Fixes call to <tt>phone_verify.backends.nexmo.NexmoBackend.send_sms</tt> method.</li>\n</ul>\n</div>\n</div>\n<div id=\"id2\">\n<h3>[1.1.0]</h3>\n<div id=\"id3\">\n<h4>Added</h4>\n<ul>\n<li>Support <tt>Nexmo</tt> as a backend service alongwith <tt>Twilio</tt>.</li>\n<li>Add docs for writing custom backend.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h4>Changed</h4>\n<ul>\n<li>Update <tt>backends.base.BaseBackend.validate_security_code</tt> to use <tt>save()</tt> instead of <tt>update()</tt> to allow Django to emit its <tt>post_save()</tt> signal.</li>\n</ul>\n</div>\n</div>\n<div id=\"id5\">\n<h3>[1.0.0]</h3>\n<div id=\"id6\">\n<h4>Added</h4>\n<ul>\n<li>Add coverage report through <tt>coveralls</tt>.</li>\n<li>Support for One-Time Passwords (OTP) using <tt>VERIFY_SECURITY_CODE_ONLY_ONCE</tt> as <tt>True</tt> in the settings.</li>\n<li>Script to support makemigrations for development.</li>\n<li><tt>BaseBackend</tt> status now have <tt>SECURITY_CODE_VERIFIED</tt> and <tt>SESSION_TOKEN_INVALID</tt> status to support new states.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h4>Changed</h4>\n<ul>\n<li>Rename <tt>TWILIO_SANDBOX_TOKEN</tt> to <tt>SANDBOX_TOKEN</tt>.</li>\n<li>Fix signature for <tt>send_bulk_sms</tt> method in <tt>TwilioBackend</tt> and <tt>TwilioSandboxBackend</tt>.</li>\n<li>Response for <tt>/api/phone/register</tt> contains key <tt>session_token</tt> instead of <tt>session_code</tt>.</li>\n<li>Request payload for <tt>/api/phone/verify</tt> now expects <tt>session_token</tt> key instead of <tt>session_code</tt>.</li>\n<li>Response for <tt>/api/phone/verify</tt> now sends additional response of <tt>Security code is already verified</tt> in case <tt>VERIFY_SECURITY_CODE_ONLY_ONCE</tt> is set to <tt>True</tt>.</li>\n<li>Rename <tt>otp</tt> to <tt>security_code</tt> in code and docs to be more consistent.</li>\n<li>Rename <tt>BaseBackend</tt> status from <tt>VALID</tt>, <tt>INVALID</tt>, <tt>EXPIRED</tt> to <tt>SECURITY_CODE_VALID</tt>, <tt>SECURITY_CODE_INVALID</tt>, and <tt>SECURITY_CODE_EXPIRED</tt> respectively.</li>\n<li>Rename <tt>session_code</tt> to <tt>session_token</tt> to be consistent in code and naming across the app.</li>\n<li>Rename service <tt>send_otp_and_generate_session_code</tt> to <tt>send_security_code_and_generate_session_token</tt>.</li>\n<li>Rename method <tt>BaseBackend.generate_token</tt> to <tt>BaseBackend.generate_security_code</tt>.</li>\n<li>Rename method <tt>create_otp_and_session_token</tt> to <tt>create_security_code_and_session_token</tt>.</li>\n<li>Rename method <tt>BaseBackend.validate_token</tt> to <tt>BaseBackend.validate_security_code</tt> with an additional parameter of <tt>session_token</tt>.</li>\n</ul>\n</div>\n</div>\n<div id=\"id8\">\n<h3>[0.2.0]</h3>\n<div id=\"id9\">\n<h4>Added</h4>\n<ul>\n<li><tt><span class=\"pre\">pre-commit-config</span></tt> to maintain code quality using black and other useful tools.</li>\n<li>Docs for integration and usage in <a href=\"https://github.com/CuriousLearner/django-phone-verify/blob/master/docs/usage.rst\" rel=\"nofollow\">usage.rst</a>.</li>\n<li>Tox for testing on <cite>py{37}-django{20,21,22}</cite>.</li>\n<li>Travis CI for testing builds.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h4>Changed</h4>\n<ul>\n<li>Convert <tt>*.md</tt> docs to reST Markup.</li>\n<li>Fix issue with installing required package dependencies via <tt>install_requires</tt>.</li>\n</ul>\n</div>\n</div>\n<div id=\"id11\">\n<h3>[0.1.1]</h3>\n<h3 id=\"id12\"><span class=\"section-subtitle\">Added</span></h3>\n<ul>\n<li>README and documentation of API endpoints.</li>\n<li><tt>setup.cfg</tt> to manage coverage.</li>\n<li><tt>phone_verify</tt> app including backends, requirements, tests.</li>\n<li>Intial app setup.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7145656, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f78c494fd1029cdb1c0affd603a9038a", "sha256": "3a44c6272ae3e9657d335df3b955b8e6147ead8775d78e1a96f79fc4e07f473a"}, "downloads": -1, "filename": "django-phone-verify-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f78c494fd1029cdb1c0affd603a9038a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20454, "upload_time": "2019-02-18T07:53:17", "upload_time_iso_8601": "2019-02-18T07:53:17.353229Z", "url": "https://files.pythonhosted.org/packages/72/62/acf8e9e9334f31317184bd3ef2eb13b1db5bd56dd57f7298e97875b53c92/django-phone-verify-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "927d78cfc81b45dd5ff5dbea313a3352", "sha256": "61d5bffebc724d9fc5dccc04853ff6ae0cb749dbc54f2c1c5eb80577306fa5fd"}, "downloads": -1, "filename": "django-phone-verify-0.1.1.tar.gz", "has_sig": false, "md5_digest": "927d78cfc81b45dd5ff5dbea313a3352", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20606, "upload_time": "2019-06-18T10:34:01", "upload_time_iso_8601": "2019-06-18T10:34:01.508815Z", "url": "https://files.pythonhosted.org/packages/01/1f/8468d93949688ad9b7331c67bae47cdae0bf44e1c9dcffaa2733cd167b6c/django-phone-verify-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "7924c85eebd46b554b42d9b5d7e6b258", "sha256": "6c44ddbd39eff839be2f7b2787d77564db0ba6e839bf9d7f1759d98a43ada04e"}, "downloads": -1, "filename": "django-phone-verify-0.2.0.tar.gz", "has_sig": false, "md5_digest": "7924c85eebd46b554b42d9b5d7e6b258", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22175, "upload_time": "2019-08-12T09:45:14", "upload_time_iso_8601": "2019-08-12T09:45:14.536285Z", "url": "https://files.pythonhosted.org/packages/9e/dc/ba5b2d54eb68e753a259f33e01f72baea1b82e4bf766f9951e163388608c/django-phone-verify-0.2.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "531a1feb67d7b16304254a6e2f6ac4af", "sha256": "8ee3d38d345662c0f6ddd080389ef50fb44918a7f1ea03b503fa44fdad33bc1c"}, "downloads": -1, "filename": "django-phone-verify-1.0.0.tar.gz", "has_sig": false, "md5_digest": "531a1feb67d7b16304254a6e2f6ac4af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24882, "upload_time": "2019-09-06T12:06:02", "upload_time_iso_8601": "2019-09-06T12:06:02.771024Z", "url": "https://files.pythonhosted.org/packages/81/07/ee09a15dde564023a6c5102ea60678dbf867db897780c804b18a3711282e/django-phone-verify-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "c267e67fce99880acc1df35e7268d8e8", "sha256": "1a66541cccc48628d2d96085cadedff12e79c756fec2898541fa7efd4170d29f"}, "downloads": -1, "filename": "django-phone-verify-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c267e67fce99880acc1df35e7268d8e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27769, "upload_time": "2020-04-09T18:27:57", "upload_time_iso_8601": "2020-04-09T18:27:57.544522Z", "url": "https://files.pythonhosted.org/packages/11/45/d81afbd72b11e3763391a6d1136ca191c16af6b9fa61f2103f6746ffaf21/django-phone-verify-1.1.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "92016b92e7477134254c41a94d9852c1", "sha256": "c924a27bbfa96abd01997896e0838fc3a2a997d964ce42231b54e8df20521004"}, "downloads": -1, "filename": "django-phone-verify-2.0.0.tar.gz", "has_sig": false, "md5_digest": "92016b92e7477134254c41a94d9852c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28898, "upload_time": "2020-05-01T15:08:05", "upload_time_iso_8601": "2020-05-01T15:08:05.167769Z", "url": "https://files.pythonhosted.org/packages/da/99/ca8af8fbe47545b873e1d867ca7af8a046804db9ffa1a94fbbbd32bc0d1e/django-phone-verify-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "92016b92e7477134254c41a94d9852c1", "sha256": "c924a27bbfa96abd01997896e0838fc3a2a997d964ce42231b54e8df20521004"}, "downloads": -1, "filename": "django-phone-verify-2.0.0.tar.gz", "has_sig": false, "md5_digest": "92016b92e7477134254c41a94d9852c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28898, "upload_time": "2020-05-01T15:08:05", "upload_time_iso_8601": "2020-05-01T15:08:05.167769Z", "url": "https://files.pythonhosted.org/packages/da/99/ca8af8fbe47545b873e1d867ca7af8a046804db9ffa1a94fbbbd32bc0d1e/django-phone-verify-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:03 2020"}