{"info": {"author": "Chris Sewell", "author_email": "chrisj_sewell@hotmail.com", "bugtrack_url": null, "classifiers": [], "description": "PyGauss Computational Chemistry Analysis\r\n=============================================\r\n\r\n**Documentation**: https://pygauss.readthedocs.org\r\n\r\n**Conda Distro**: https://binstar.org/cjs14/pygauss\r\n\r\n**Project**: https://github.com/chrisjsewell/PyGauss\r\n\r\n.. image:: https://readthedocs.org/projects/pygauss/badge/?version=stable\r\n   :target: https://pygauss.readthedocs.org\r\n.. image:: https://img.shields.io/github/release/chrisjsewell/PyGauss.svg\r\n   :target: https://github.com/chrisjsewell/PyGauss\r\n\r\nPyGauss is intended as an interactive tool for supporting the \r\nlifecycle of a computational molecular chemistry investigation.\r\nFrom visual and analytical exploration, \r\nthrough to documentation and publication.\r\n\r\nIntitally PyGauss has been designed for the purpose of examining one or more\r\n`Gaussian <http://www.gaussian.com/>`__ quantum chemical\r\ncomputations, both **geometrically** and **electronically**. It is built on top of the\r\n`cclib <http://cclib.github.io/>`__/`chemview <http://chemview.readthedocs.org/en/latest/>`__/`chemlab <http://chemlab.readthedocs.org/en/latest/index.html>`__\r\nsuite of packages and python scientific stack though, and so should be extensible \r\nto other types of computational chemical analysis. \r\nPyGauss is primarily designed to be used interactively in the \r\n`IPython Notebook <http://ipython.org/notebook.html>`__. \r\n\r\nAs shown in the examples, a molecular optimisation can be assesed\r\nindividually (much like in\r\n`gaussview <http://www.gaussian.com/g_prod/gv5b.htm>`__), but also as\r\npart of a group. The advantages of this package are then:\r\n\r\n-  Faster, more efficient analysis\r\n-  Extensible analysis\r\n-  Reproducible analysis\r\n\r\nQuick Start\r\n----------------\r\n\r\nOSX and Linux\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nThe recommended was to use pygauss is to download the\r\n`Anaconda <http://continuum.io/downloads>`__ Scientific Python\r\nDistribution (64-bit). Once downloaded a new environment can be created\r\nin terminal and pygauss installed:\r\n\r\n::\r\n\r\n    conda create -n pg_env -c https://conda.binstar.org/cjs14 pygauss\r\n\r\n\r\nWindows\r\n~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nThere is currently no pygauss conda distributable for Windows or for\r\nchemlab, which has C-extensions that need to be built using a compiler. \r\nPlease see the documentation for guidance.\r\n\r\n\r\n\r\nExample Assessment\r\n--------------------\r\n\r\nAfter installing PyGauss you should be able to open this IPython\r\nNotebook from;\r\nhttps://github.com/chrisjsewell/PyGauss/blob/master/Example\\_Assessment.ipynb,\r\nand run the following...\r\n\r\n.. code:: python\r\n\r\n    from IPython.display import display, Image\r\n    %matplotlib inline\r\n    import pygauss as pg\r\n    print 'pygauss version: {}'.format(pg.__version__)\r\n\r\n\r\n.. parsed-literal::\r\n\r\n    pygauss version: 0.6.0\r\n    \r\n\r\nThe test folder has a number of example Gaussian outputs to play around\r\nwith.\r\n\r\n.. code:: python\r\n\r\n    folder = pg.get_test_folder()\r\n    len(folder.list_files())\r\n\r\n\r\n\r\n\r\n.. parsed-literal::\r\n\r\n    33\r\n\r\n\r\n\r\n**Note:** the *folder* object will act identical whether using a local\r\npath or one on a server over ssh (using\r\n`paramiko <http://www.paramiko.org/>`__):\r\n\r\n::\r\n\r\n    folder = pg.Folder('/path/to/folder', \r\n                    ssh_server='login.server.com',\r\n                    ssh_username='username')\r\n\r\nSingle Molecule Analysis\r\n~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nA *molecule* can be created containg data about the inital geometry,\r\noptimisation process and analysis of the final configuration.\r\n\r\n.. code:: python\r\n\r\n    mol = pg.molecule.Molecule(folder_obj=folder,\r\n                    init_fname='CJS1_emim-cl_B_init.com', \r\n                    opt_fname=['CJS1_emim-cl_B_6-311+g-d-p-_gd3bj_opt-modredundant_difrz.log',\r\n                               'CJS1_emim-cl_B_6-311+g-d-p-_gd3bj_opt-modredundant_difrz_err.log',\r\n                               'CJS1_emim-cl_B_6-311+g-d-p-_gd3bj_opt-modredundant_unfrz.log'],\r\n                    freq_fname='CJS1_emim-cl_B_6-311+g-d-p-_gd3bj_freq_unfrz.log',\r\n                    nbo_fname='CJS1_emim-cl_B_6-311+g-d-p-_gd3bj_pop-nbo-full-_unfrz.log', \r\n                    atom_groups={'emim':range(20), 'cl':[20]},\r\n                    alignto=[3,2,1])\r\n\r\nGeometric Analysis\r\n^^^^^^^^^^^^^^^^^^\r\n\r\nMolecules can be viewed statically or interactively.\r\n\r\n.. code:: python\r\n\r\n    #mol.show_initial(active=True)\r\n    vdw = mol.show_initial(represent='vdw', rotations=[[0,0,90], [-90, 90, 0]])\r\n    ball_stick = mol.show_optimisation(represent='ball_stick', rotations=[[0,0,90], [-90, 90, 0]])\r\n    display(vdw, ball_stick)\r\n\r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_9_0.png\r\n\r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_9_1.png\r\n\r\n\r\n.. code:: python\r\n\r\n    print 'Cl optimised polar coords from aromatic ring : ({0}, {1},{2})'.format(\r\n        *[round(i, 2) for i in mol.calc_polar_coords_from_plane(20,3,2,1)])\r\n    ax = mol.plot_opt_trajectory(20, [3,2,1])\r\n    ax.set_title('Cl optimisation path')\r\n    ax.get_figure().set_size_inches(4, 3)\r\n\r\n\r\n.. parsed-literal::\r\n\r\n    Cl optimised polar coords from aromatic ring : (0.11, -116.42,-170.06)\r\n    \r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_10_1.png\r\n\r\n\r\nEnergetics and Frequency Analysis\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\n.. code:: python\r\n\r\n    print('Optimised? {0}, Conformer? {1}, Energy = {2} a.u.'.format(\r\n        mol.is_optimised(), mol.is_conformer(), \r\n        round(mol.get_opt_energy(units='hartree'),3)))\r\n    ax = mol.plot_opt_energy(units='hartree')\r\n    ax.get_figure().set_size_inches(3, 2)\r\n    ax = mol.plot_freq_analysis()\r\n    ax.get_figure().set_size_inches(4, 2)\r\n\r\n\r\n.. parsed-literal::\r\n\r\n    Optimised? True, Conformer? True, Energy = -805.105 a.u.\r\n    \r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_12_1.png\r\n\r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_12_2.png\r\n\r\n\r\nPotential Energy Scan analysis of geometric conformers...\r\n\r\n.. code:: python\r\n\r\n    mol2 = pg.molecule.Molecule(folder_obj=folder, alignto=[3,2,1],\r\n                pes_fname=['CJS_emim_6311_plus_d3_scan.log', \r\n                           'CJS_emim_6311_plus_d3_scan_bck.log'])   \r\n    ax = mol2.plot_pes_scans([1,4,9,10], rotation=[0,0,90], img_pos='local_maxs', zoom=0.5)\r\n    ax.set_title('Ethyl chain rotational conformer analysis')\r\n    ax.get_figure().set_size_inches(7, 3)\r\n\r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_14_0.png\r\n\r\n\r\nPartial Charge Analysis\r\n^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nusing Natural Bond Orbital (NBO) analysis\r\n\r\n.. code:: python\r\n\r\n    print '+ve charge centre polar coords from aromatic ring: ({0} {1},{2})'.format(\r\n        *[round(i, 2) for i in mol.calc_nbo_charge_center(3, 2, 1)])\r\n    display(mol.show_nbo_charges(represent='ball_stick', axis_length=0.4, \r\n                                  rotations=[[0,0,90], [-90, 90, 0]]))\r\n\r\n\r\n.. parsed-literal::\r\n\r\n    +ve charge centre polar coords from aromatic ring: (0.02 -51.77,-33.15)\r\n    \r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_16_1.png\r\n\r\n\r\nDensity of States Analysis\r\n^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\n.. code:: python\r\n\r\n    print 'Number of Orbitals: {}'.format(mol.get_orbital_count())\r\n    homo, lumo = mol.get_orbital_homo_lumo()\r\n    homoe, lumoe = mol.get_orbital_energies([homo, lumo])\r\n    print 'HOMO at {} eV'.format(homoe)\r\n    print 'LUMO at {} eV'.format(lumoe)\r\n\r\n\r\n.. parsed-literal::\r\n\r\n    Number of Orbitals: 272\r\n    HOMO at -4.91492036773 eV\r\n    LUMO at -1.85989816817 eV\r\n    \r\n\r\n.. code:: python\r\n\r\n    ax = mol.plot_dos(per_energy=1, lbound=-20, ubound=10, legend_size=12)\r\n\r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_19_0.png\r\n\r\n\r\nBonding Analysis\r\n^^^^^^^^^^^^^^^^\r\n\r\nUsing Second Order Perturbation Theory.\r\n\r\n.. code:: python\r\n\r\n    print 'H inter-bond energy = {} kJmol-1'.format(\r\n            mol.calc_hbond_energy(eunits='kJmol-1', atom_groups=['emim', 'cl']))\r\n    print 'Other inter-bond energy = {} kJmol-1'.format(\r\n        mol.calc_sopt_energy(eunits='kJmol-1', no_hbonds=True, atom_groups=['emim', 'cl']))\r\n    display(mol.show_sopt_bonds(min_energy=1, eunits='kJmol-1',\r\n                                atom_groups=['emim', 'cl'],\r\n                                no_hbonds=True,\r\n                                rotations=[[0, 0, 90]]))\r\n    display(mol.show_hbond_analysis(cutoff_energy=5.,alpha=0.6, \r\n                                    atom_groups=['emim', 'cl'],\r\n                                    rotations=[[0, 0, 90], [90, 0, 0]]))\r\n\r\n\r\n.. parsed-literal::\r\n\r\n    H inter-bond energy = 111.7128 kJmol-1\r\n    Other inter-bond energy = 11.00392 kJmol-1\r\n    \r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_21_1.png\r\n\r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_21_2.png\r\n\r\n\r\nMultiple Computations Analysis\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nMultiple computations, for instance of different starting conformations,\r\ncan be grouped into an *Analysis* class and anlaysed collectively.\r\n\r\n.. code:: python\r\n\r\n    analysis = pg.Analysis(folder_obj=folder)\r\n    errors = analysis.add_runs(headers=['Cation', 'Anion', 'Initial'], \r\n                                   values=[['emim'], ['cl'],\r\n                                           ['B', 'BE', 'BM', 'F', 'FE']],\r\n                init_pattern='*{0}-{1}_{2}_init.com',\r\n                opt_pattern='*{0}-{1}_{2}_6-311+g-d-p-_gd3bj_opt*unfrz.log',\r\n                freq_pattern='*{0}-{1}_{2}_6-311+g-d-p-_gd3bj_freq*.log',\r\n                nbo_pattern='*{0}-{1}_{2}_6-311+g-d-p-_gd3bj_pop-nbo-full-*.log',\r\n                alignto=[3,2,1], atom_groups={'emim':range(1,20), 'cl':[20]}, \r\n                ipython_print=True)\r\n\r\n\r\n.. parsed-literal::\r\n\r\n    Reading data 5 of 5\r\n    \r\n\r\nMolecular Comparison\r\n^^^^^^^^^^^^^^^^^^^^\r\n\r\n.. code:: python\r\n\r\n    fig, caption = analysis.plot_mol_images(mtype='optimised', max_cols=3,\r\n                            info_columns=['Cation', 'Anion', 'Initial'],\r\n                            rotations=[[0,0,90]])\r\n    print caption\r\n\r\n\r\n.. parsed-literal::\r\n\r\n    (A) emim, cl, B, (B) emim, cl, BE, (C) emim, cl, BM, (D) emim, cl, F, (E) emim, cl, FE\r\n\r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_26_1.png\r\n\r\n\r\nData Comparison\r\n^^^^^^^^^^^^^^^\r\n\r\n.. code:: python\r\n\r\n    fig, caption = analysis.plot_mol_graphs(gtype='dos', max_cols=3, \r\n                                            lbound=-20, ubound=10, legend_size=0,\r\n                                            band_gap_value=False,\r\n                                       info_columns=['Cation', 'Anion', 'Initial'])\r\n    print caption\r\n\r\n\r\n.. parsed-literal::\r\n\r\n    (A) emim, cl, B, (B) emim, cl, BE, (C) emim, cl, BM, (D) emim, cl, F, (E) emim, cl, FE\r\n\r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_28_1.png\r\n\r\n\r\nThe methods mentioned for indivdiual molecules can be applied to all or\r\na subset of these computations.\r\n\r\n.. code:: python\r\n\r\n    analysis.add_mol_property_subset('Opt', 'is_optimised', rows=[2,3])\r\n    analysis.add_mol_property('Energy (au)', 'get_opt_energy', units='hartree')\r\n    analysis.add_mol_property('Cation chain, $\\\\psi$', 'calc_dihedral_angle', [1, 4, 9, 10])\r\n    analysis.add_mol_property('Cation Charge', 'calc_nbo_charge', 'emim')\r\n    analysis.add_mol_property('Anion Charge', 'calc_nbo_charge', 'cl')\r\n    analysis.add_mol_property(['Anion-Cation, $r$', 'Anion-Cation, $\\\\theta$', 'Anion-Cation, $\\\\phi$'], \r\n                                   'calc_polar_coords_from_plane', 3, 2, 1, 20)\r\n    analysis.add_mol_property('Anion-Cation h-bond', 'calc_hbond_energy', \r\n                              eunits='kJmol-1', atom_groups=['emim', 'cl'])\r\n    analysis.get_table(row_index=['Anion', 'Cation', 'Initial'], \r\n                       column_index=['Cation', 'Anion', 'Anion-Cation'])\r\n\r\n\r\n\r\nThere is also an option (requiring\r\n`pdflatex <http://www.tug.org/applications/pdftex/>`__ and\r\n`ghostscript <http://www.ghostscript.com/download/gsdnld.html>`__\\ +\\ `imagemagik <http://www.imagemagick.org/script/binary-releases.php>`__)\r\nto output the tables as a latex formatted image.\r\n\r\n.. code:: python\r\n\r\n    analysis.get_table(row_index=['Anion', 'Cation', 'Initial'],\r\n                       column_index=['Cation', 'Anion', 'Anion-Cation'],\r\n                       as_image=True, font_size=12)\r\n\r\n\r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_32_0.png\r\n\r\n\r\n\r\nMulti-Variate Analysis\r\n^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nRadViz is a way of visualizing multi-variate data.\r\n\r\n.. code:: python\r\n\r\n    ax = analysis.plot_radviz_comparison('Anion', columns=range(4, 10))\r\n\r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_35_0.png\r\n\r\n\r\nThe KMeans algorithm clusters data by trying to separate samples into n\r\ngroups of equal variance.\r\n\r\n.. code:: python\r\n\r\n    pg.utils.imgplot_kmean_groups(\r\n        analysis, 'Anion', 'cl', 4, range(4, 10), \r\n        output=['Initial'], mtype='optimised', \r\n        rotations=[[0, 0, 90], [-90, 90, 0]],\r\n        axis_length=0.3)\r\n\r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_37_0.png\r\n\r\n\r\n.. parsed-literal::\r\n\r\n    (A) BM\r\n    \r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_37_2.png\r\n\r\n\r\n.. parsed-literal::\r\n\r\n    (A) FE\r\n    \r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_37_4.png\r\n\r\n\r\n.. parsed-literal::\r\n\r\n    (A) B, (B) BE\r\n    \r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_37_6.png\r\n\r\n\r\n.. parsed-literal::\r\n\r\n    (A) F\r\n    \r\n\r\nDocumentation (MS Word)\r\n~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nAfter analysing the computations, it would be reasonable to want to\r\ndocument some of our findings. This can be achieved by outputting\r\nindividual figure or table images via the folder object.\r\n\r\n.. code:: python\r\n\r\n    file_path = folder.save_ipyimg(vdw, 'image_of_molecule')\r\n    Image(file_path)\r\n\r\n\r\n\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_40_0.png\r\n\r\n\r\n\r\nBut you may also want to produce a more full record of your analysis,\r\nand this is where `python-docx <https://python-docx.readthedocs.org>`__\r\nsteps in. Building on this package the pygauss MSDocument class can\r\nproduce a full document of your analysis.\r\n\r\n.. code:: python\r\n\r\n    import matplotlib.pyplot as plt\r\n    d = pg.MSDocument()\r\n    d.add_heading('A Pygauss Example Assessment', level=0)\r\n\r\n    d.add_docstring(\"\"\"\r\n    # Introduction\r\n\r\n    We have looked at the following aspects\r\n    of [EMIM]^{+}[Cl]^{-} (C_{6}H_{11}ClN_{2});\r\n\r\n    - Geometric conformers\r\n    - Electronic structure\r\n\r\n    # Geometric Conformers\r\n    \"\"\")\r\n\r\n    fig, caption = analysis.plot_mol_images(max_cols=2, \r\n                    rotations=[[90,0,0], [0,0,90]], \r\n                    info_columns=['Anion', 'Cation', 'Initial'])\r\n    d.add_mpl(fig, dpi=96, height=9, caption=caption)\r\n    plt.close()\r\n    d.add_paragraph()\r\n    df = analysis.get_table(\r\n            columns=['Anion Charge', 'Cation Charge'],\r\n            row_index=['Anion', 'Cation', 'Initial'])\r\n    d.add_dataframe(df, incl_indx=True, style='Medium Shading 1 Accent 1',\r\n                    caption='Analysis of Conformer Charge')\r\n\r\n    d.add_docstring(\"\"\"\r\n    # Molecular Orbital Analysis\r\n    ## Density of States\r\n\r\n    It is **important** to *emphasise* that the\r\n    computations have only been run in the gas phase.\r\n    \"\"\")\r\n    fig, caption = analysis.plot_mol_graphs(gtype='dos', max_cols=3, \r\n                                        lbound=-20, ubound=10, legend_size=0,\r\n                                        band_gap_value=False,\r\n                                   info_columns=['Cation', 'Anion', 'Initial'])\r\n    d.add_mpl(fig, dpi=96, height=9, caption=caption)\r\n    plt.close()\r\n\r\n    d.save('exmpl_assess.docx')\r\n\r\nWhich gives us the following:\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/example_docx1.png\r\n\r\n.. image:: https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/example_docx2.png\r\n\r\nMORE TO COME!!", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chrisjsewell/PyGauss/wiki", "keywords": "chemistry gaussian dft", "license": "GPL3", "maintainer": "", "maintainer_email": "", "name": "pygauss", "package_url": "https://pypi.org/project/pygauss/", "platform": "Any.", "project_url": "https://pypi.org/project/pygauss/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/chrisjsewell/PyGauss/wiki"}, "release_url": "https://pypi.org/project/pygauss/0.6.0/", "requires_dist": null, "requires_python": null, "summary": "Python API for analysis and documentation of molecular chemical computations", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Documentation</strong>: <a href=\"https://pygauss.readthedocs.org\" rel=\"nofollow\">https://pygauss.readthedocs.org</a></p>\n<p><strong>Conda Distro</strong>: <a href=\"https://binstar.org/cjs14/pygauss\" rel=\"nofollow\">https://binstar.org/cjs14/pygauss</a></p>\n<p><strong>Project</strong>: <a href=\"https://github.com/chrisjsewell/PyGauss\" rel=\"nofollow\">https://github.com/chrisjsewell/PyGauss</a></p>\n<a href=\"https://pygauss.readthedocs.org\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/pygauss/badge/?version=stable\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/de559a558d0880b07a023cbc1f468168826bafc7/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707967617573732f62616467652f3f76657273696f6e3d737461626c65\"></a>\n<a href=\"https://github.com/chrisjsewell/PyGauss\" rel=\"nofollow\"><img alt=\"https://img.shields.io/github/release/chrisjsewell/PyGauss.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e413768afad7f9fd1472b041c9bd38e4b7f41153/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f63687269736a736577656c6c2f507947617573732e737667\"></a>\n<p>PyGauss is intended as an interactive tool for supporting the\nlifecycle of a computational molecular chemistry investigation.\nFrom visual and analytical exploration,\nthrough to documentation and publication.</p>\n<p>Intitally PyGauss has been designed for the purpose of examining one or more\n<a href=\"http://www.gaussian.com/\" rel=\"nofollow\">Gaussian</a> quantum chemical\ncomputations, both <strong>geometrically</strong> and <strong>electronically</strong>. It is built on top of the\n<a href=\"http://cclib.github.io/\" rel=\"nofollow\">cclib</a>/<a href=\"http://chemview.readthedocs.org/en/latest/\" rel=\"nofollow\">chemview</a>/<a href=\"http://chemlab.readthedocs.org/en/latest/index.html\" rel=\"nofollow\">chemlab</a>\nsuite of packages and python scientific stack though, and so should be extensible\nto other types of computational chemical analysis.\nPyGauss is primarily designed to be used interactively in the\n<a href=\"http://ipython.org/notebook.html\" rel=\"nofollow\">IPython Notebook</a>.</p>\n<p>As shown in the examples, a molecular optimisation can be assesed\nindividually (much like in\n<a href=\"http://www.gaussian.com/g_prod/gv5b.htm\" rel=\"nofollow\">gaussview</a>), but also as\npart of a group. The advantages of this package are then:</p>\n<ul>\n<li>Faster, more efficient analysis</li>\n<li>Extensible analysis</li>\n<li>Reproducible analysis</li>\n</ul>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<div id=\"osx-and-linux\">\n<h3>OSX and Linux</h3>\n<p>The recommended was to use pygauss is to download the\n<a href=\"http://continuum.io/downloads\" rel=\"nofollow\">Anaconda</a> Scientific Python\nDistribution (64-bit). Once downloaded a new environment can be created\nin terminal and pygauss installed:</p>\n<pre>conda create -n pg_env -c https://conda.binstar.org/cjs14 pygauss\n</pre>\n</div>\n<div id=\"windows\">\n<h3>Windows</h3>\n<p>There is currently no pygauss conda distributable for Windows or for\nchemlab, which has C-extensions that need to be built using a compiler.\nPlease see the documentation for guidance.</p>\n</div>\n</div>\n<div id=\"example-assessment\">\n<h2>Example Assessment</h2>\n<p>After installing PyGauss you should be able to open this IPython\nNotebook from;\n<a href=\"https://github.com/chrisjsewell/PyGauss/blob/master/Example_Assessment.ipynb\" rel=\"nofollow\">https://github.com/chrisjsewell/PyGauss/blob/master/Example_Assessment.ipynb</a>,\nand run the following\u2026</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">IPython.display</span> <span class=\"kn\">import</span> <span class=\"n\">display</span><span class=\"p\">,</span> <span class=\"n\">Image</span>\n<span class=\"o\">%</span><span class=\"n\">matplotlib</span> <span class=\"n\">inline</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pygauss</span> <span class=\"k\">as</span> <span class=\"nn\">pg</span>\n<span class=\"nb\">print</span> <span class=\"s1\">'pygauss version: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">pg</span><span class=\"o\">.</span><span class=\"n\">__version__</span><span class=\"p\">)</span>\n</pre>\n<pre>pygauss version: 0.6.0\n</pre>\n<p>The test folder has a number of example Gaussian outputs to play around\nwith.</p>\n<pre><span class=\"n\">folder</span> <span class=\"o\">=</span> <span class=\"n\">pg</span><span class=\"o\">.</span><span class=\"n\">get_test_folder</span><span class=\"p\">()</span>\n<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">list_files</span><span class=\"p\">())</span>\n</pre>\n<pre>33\n</pre>\n<p><strong>Note:</strong> the <em>folder</em> object will act identical whether using a local\npath or one on a server over ssh (using\n<a href=\"http://www.paramiko.org/\" rel=\"nofollow\">paramiko</a>):</p>\n<pre>folder = pg.Folder('/path/to/folder',\n                ssh_server='login.server.com',\n                ssh_username='username')\n</pre>\n<div id=\"single-molecule-analysis\">\n<h3>Single Molecule Analysis</h3>\n<p>A <em>molecule</em> can be created containg data about the inital geometry,\noptimisation process and analysis of the final configuration.</p>\n<pre><span class=\"n\">mol</span> <span class=\"o\">=</span> <span class=\"n\">pg</span><span class=\"o\">.</span><span class=\"n\">molecule</span><span class=\"o\">.</span><span class=\"n\">Molecule</span><span class=\"p\">(</span><span class=\"n\">folder_obj</span><span class=\"o\">=</span><span class=\"n\">folder</span><span class=\"p\">,</span>\n                <span class=\"n\">init_fname</span><span class=\"o\">=</span><span class=\"s1\">'CJS1_emim-cl_B_init.com'</span><span class=\"p\">,</span>\n                <span class=\"n\">opt_fname</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'CJS1_emim-cl_B_6-311+g-d-p-_gd3bj_opt-modredundant_difrz.log'</span><span class=\"p\">,</span>\n                           <span class=\"s1\">'CJS1_emim-cl_B_6-311+g-d-p-_gd3bj_opt-modredundant_difrz_err.log'</span><span class=\"p\">,</span>\n                           <span class=\"s1\">'CJS1_emim-cl_B_6-311+g-d-p-_gd3bj_opt-modredundant_unfrz.log'</span><span class=\"p\">],</span>\n                <span class=\"n\">freq_fname</span><span class=\"o\">=</span><span class=\"s1\">'CJS1_emim-cl_B_6-311+g-d-p-_gd3bj_freq_unfrz.log'</span><span class=\"p\">,</span>\n                <span class=\"n\">nbo_fname</span><span class=\"o\">=</span><span class=\"s1\">'CJS1_emim-cl_B_6-311+g-d-p-_gd3bj_pop-nbo-full-_unfrz.log'</span><span class=\"p\">,</span>\n                <span class=\"n\">atom_groups</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'emim'</span><span class=\"p\">:</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">),</span> <span class=\"s1\">'cl'</span><span class=\"p\">:[</span><span class=\"mi\">20</span><span class=\"p\">]},</span>\n                <span class=\"n\">alignto</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n</pre>\n<div id=\"geometric-analysis\">\n<h4>Geometric Analysis</h4>\n<p>Molecules can be viewed statically or interactively.</p>\n<pre><span class=\"c1\">#mol.show_initial(active=True)</span>\n<span class=\"n\">vdw</span> <span class=\"o\">=</span> <span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">show_initial</span><span class=\"p\">(</span><span class=\"n\">represent</span><span class=\"o\">=</span><span class=\"s1\">'vdw'</span><span class=\"p\">,</span> <span class=\"n\">rotations</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">90</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"n\">ball_stick</span> <span class=\"o\">=</span> <span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">show_optimisation</span><span class=\"p\">(</span><span class=\"n\">represent</span><span class=\"o\">=</span><span class=\"s1\">'ball_stick'</span><span class=\"p\">,</span> <span class=\"n\">rotations</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">90</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">vdw</span><span class=\"p\">,</span> <span class=\"n\">ball_stick</span><span class=\"p\">)</span>\n</pre>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_9_0.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/69b547e8bc0f30276b93aec32b1ea0a1d74a89f5/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f395f302e706e67\">\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_9_1.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e623a16028470b628f8b0f405b0978203769c48e/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f395f312e706e67\">\n<pre><span class=\"nb\">print</span> <span class=\"s1\">'Cl optimised polar coords from aromatic ring : (</span><span class=\"si\">{0}</span><span class=\"s1\">, </span><span class=\"si\">{1}</span><span class=\"s1\">,</span><span class=\"si\">{2}</span><span class=\"s1\">)'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n    <span class=\"o\">*</span><span class=\"p\">[</span><span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">calc_polar_coords_from_plane</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)])</span>\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">plot_opt_trajectory</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">'Cl optimisation path'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">get_figure</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_size_inches</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<pre>Cl optimised polar coords from aromatic ring : (0.11, -116.42,-170.06)\n</pre>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_10_1.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e0959b4bce7be4c1be7ce0aa720e1ee0dffe2688/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f31305f312e706e67\">\n</div>\n<div id=\"energetics-and-frequency-analysis\">\n<h4>Energetics and Frequency Analysis</h4>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Optimised? </span><span class=\"si\">{0}</span><span class=\"s1\">, Conformer? </span><span class=\"si\">{1}</span><span class=\"s1\">, Energy = </span><span class=\"si\">{2}</span><span class=\"s1\"> a.u.'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n    <span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">is_optimised</span><span class=\"p\">(),</span> <span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">is_conformer</span><span class=\"p\">(),</span>\n    <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">get_opt_energy</span><span class=\"p\">(</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"s1\">'hartree'</span><span class=\"p\">),</span><span class=\"mi\">3</span><span class=\"p\">)))</span>\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">plot_opt_energy</span><span class=\"p\">(</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"s1\">'hartree'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">get_figure</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_size_inches</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">plot_freq_analysis</span><span class=\"p\">()</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">get_figure</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_size_inches</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre>\n<pre>Optimised? True, Conformer? True, Energy = -805.105 a.u.\n</pre>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_12_1.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/73943d04e919a2ddcf144640e3a4af69bc2c9433/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f31325f312e706e67\">\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_12_2.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ee3b9b5a33fddc9a3cd635763bb8dbed58776302/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f31325f322e706e67\">\n<p>Potential Energy Scan analysis of geometric conformers\u2026</p>\n<pre><span class=\"n\">mol2</span> <span class=\"o\">=</span> <span class=\"n\">pg</span><span class=\"o\">.</span><span class=\"n\">molecule</span><span class=\"o\">.</span><span class=\"n\">Molecule</span><span class=\"p\">(</span><span class=\"n\">folder_obj</span><span class=\"o\">=</span><span class=\"n\">folder</span><span class=\"p\">,</span> <span class=\"n\">alignto</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n            <span class=\"n\">pes_fname</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'CJS_emim_6311_plus_d3_scan.log'</span><span class=\"p\">,</span>\n                       <span class=\"s1\">'CJS_emim_6311_plus_d3_scan_bck.log'</span><span class=\"p\">])</span>\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">mol2</span><span class=\"o\">.</span><span class=\"n\">plot_pes_scans</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"n\">rotation</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">90</span><span class=\"p\">],</span> <span class=\"n\">img_pos</span><span class=\"o\">=</span><span class=\"s1\">'local_maxs'</span><span class=\"p\">,</span> <span class=\"n\">zoom</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s1\">'Ethyl chain rotational conformer analysis'</span><span class=\"p\">)</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">get_figure</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">set_size_inches</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_14_0.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d2b4138dda25d15e89b7777635afd952b1d67547/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f31345f302e706e67\">\n</div>\n<div id=\"partial-charge-analysis\">\n<h4>Partial Charge Analysis</h4>\n<p>using Natural Bond Orbital (NBO) analysis</p>\n<pre><span class=\"nb\">print</span> <span class=\"s1\">'+ve charge centre polar coords from aromatic ring: (</span><span class=\"si\">{0}</span><span class=\"s1\"> </span><span class=\"si\">{1}</span><span class=\"s1\">,</span><span class=\"si\">{2}</span><span class=\"s1\">)'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n    <span class=\"o\">*</span><span class=\"p\">[</span><span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">calc_nbo_charge_center</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)])</span>\n<span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">show_nbo_charges</span><span class=\"p\">(</span><span class=\"n\">represent</span><span class=\"o\">=</span><span class=\"s1\">'ball_stick'</span><span class=\"p\">,</span> <span class=\"n\">axis_length</span><span class=\"o\">=</span><span class=\"mf\">0.4</span><span class=\"p\">,</span>\n                              <span class=\"n\">rotations</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">90</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]]))</span>\n</pre>\n<pre>+ve charge centre polar coords from aromatic ring: (0.02 -51.77,-33.15)\n</pre>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_16_1.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/585c36c57c95e954a3cf145594dd740e7dac5047/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f31365f312e706e67\">\n</div>\n<div id=\"density-of-states-analysis\">\n<h4>Density of States Analysis</h4>\n<pre><span class=\"nb\">print</span> <span class=\"s1\">'Number of Orbitals: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">get_orbital_count</span><span class=\"p\">())</span>\n<span class=\"n\">homo</span><span class=\"p\">,</span> <span class=\"n\">lumo</span> <span class=\"o\">=</span> <span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">get_orbital_homo_lumo</span><span class=\"p\">()</span>\n<span class=\"n\">homoe</span><span class=\"p\">,</span> <span class=\"n\">lumoe</span> <span class=\"o\">=</span> <span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">get_orbital_energies</span><span class=\"p\">([</span><span class=\"n\">homo</span><span class=\"p\">,</span> <span class=\"n\">lumo</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span> <span class=\"s1\">'HOMO at </span><span class=\"si\">{}</span><span class=\"s1\"> eV'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">homoe</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"s1\">'LUMO at </span><span class=\"si\">{}</span><span class=\"s1\"> eV'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">lumoe</span><span class=\"p\">)</span>\n</pre>\n<pre>Number of Orbitals: 272\nHOMO at -4.91492036773 eV\nLUMO at -1.85989816817 eV\n</pre>\n<pre><span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">plot_dos</span><span class=\"p\">(</span><span class=\"n\">per_energy</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">lbound</span><span class=\"o\">=-</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">ubound</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">legend_size</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n</pre>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_19_0.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bfce382e47f3d362547c1b63355e70fbad54a7a2/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f31395f302e706e67\">\n</div>\n<div id=\"bonding-analysis\">\n<h4>Bonding Analysis</h4>\n<p>Using Second Order Perturbation Theory.</p>\n<pre><span class=\"nb\">print</span> <span class=\"s1\">'H inter-bond energy = </span><span class=\"si\">{}</span><span class=\"s1\"> kJmol-1'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n        <span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">calc_hbond_energy</span><span class=\"p\">(</span><span class=\"n\">eunits</span><span class=\"o\">=</span><span class=\"s1\">'kJmol-1'</span><span class=\"p\">,</span> <span class=\"n\">atom_groups</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'emim'</span><span class=\"p\">,</span> <span class=\"s1\">'cl'</span><span class=\"p\">]))</span>\n<span class=\"nb\">print</span> <span class=\"s1\">'Other inter-bond energy = </span><span class=\"si\">{}</span><span class=\"s1\"> kJmol-1'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n    <span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">calc_sopt_energy</span><span class=\"p\">(</span><span class=\"n\">eunits</span><span class=\"o\">=</span><span class=\"s1\">'kJmol-1'</span><span class=\"p\">,</span> <span class=\"n\">no_hbonds</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">atom_groups</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'emim'</span><span class=\"p\">,</span> <span class=\"s1\">'cl'</span><span class=\"p\">]))</span>\n<span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">show_sopt_bonds</span><span class=\"p\">(</span><span class=\"n\">min_energy</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">eunits</span><span class=\"o\">=</span><span class=\"s1\">'kJmol-1'</span><span class=\"p\">,</span>\n                            <span class=\"n\">atom_groups</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'emim'</span><span class=\"p\">,</span> <span class=\"s1\">'cl'</span><span class=\"p\">],</span>\n                            <span class=\"n\">no_hbonds</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                            <span class=\"n\">rotations</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">]]))</span>\n<span class=\"n\">display</span><span class=\"p\">(</span><span class=\"n\">mol</span><span class=\"o\">.</span><span class=\"n\">show_hbond_analysis</span><span class=\"p\">(</span><span class=\"n\">cutoff_energy</span><span class=\"o\">=</span><span class=\"mf\">5.</span><span class=\"p\">,</span><span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.6</span><span class=\"p\">,</span>\n                                <span class=\"n\">atom_groups</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'emim'</span><span class=\"p\">,</span> <span class=\"s1\">'cl'</span><span class=\"p\">],</span>\n                                <span class=\"n\">rotations</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]]))</span>\n</pre>\n<pre>H inter-bond energy = 111.7128 kJmol-1\nOther inter-bond energy = 11.00392 kJmol-1\n</pre>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_21_1.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b274146efc8963593b4c409dda77f6e5dcc12ae4/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f32315f312e706e67\">\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_21_2.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a4ac08d3a6213f52494b7792b7cd0240c83d586b/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f32315f322e706e67\">\n</div>\n</div>\n<div id=\"multiple-computations-analysis\">\n<h3>Multiple Computations Analysis</h3>\n<p>Multiple computations, for instance of different starting conformations,\ncan be grouped into an <em>Analysis</em> class and anlaysed collectively.</p>\n<pre><span class=\"n\">analysis</span> <span class=\"o\">=</span> <span class=\"n\">pg</span><span class=\"o\">.</span><span class=\"n\">Analysis</span><span class=\"p\">(</span><span class=\"n\">folder_obj</span><span class=\"o\">=</span><span class=\"n\">folder</span><span class=\"p\">)</span>\n<span class=\"n\">errors</span> <span class=\"o\">=</span> <span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">add_runs</span><span class=\"p\">(</span><span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Cation'</span><span class=\"p\">,</span> <span class=\"s1\">'Anion'</span><span class=\"p\">,</span> <span class=\"s1\">'Initial'</span><span class=\"p\">],</span>\n                               <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"s1\">'emim'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'cl'</span><span class=\"p\">],</span>\n                                       <span class=\"p\">[</span><span class=\"s1\">'B'</span><span class=\"p\">,</span> <span class=\"s1\">'BE'</span><span class=\"p\">,</span> <span class=\"s1\">'BM'</span><span class=\"p\">,</span> <span class=\"s1\">'F'</span><span class=\"p\">,</span> <span class=\"s1\">'FE'</span><span class=\"p\">]],</span>\n            <span class=\"n\">init_pattern</span><span class=\"o\">=</span><span class=\"s1\">'*</span><span class=\"si\">{0}</span><span class=\"s1\">-</span><span class=\"si\">{1}</span><span class=\"s1\">_</span><span class=\"si\">{2}</span><span class=\"s1\">_init.com'</span><span class=\"p\">,</span>\n            <span class=\"n\">opt_pattern</span><span class=\"o\">=</span><span class=\"s1\">'*</span><span class=\"si\">{0}</span><span class=\"s1\">-</span><span class=\"si\">{1}</span><span class=\"s1\">_</span><span class=\"si\">{2}</span><span class=\"s1\">_6-311+g-d-p-_gd3bj_opt*unfrz.log'</span><span class=\"p\">,</span>\n            <span class=\"n\">freq_pattern</span><span class=\"o\">=</span><span class=\"s1\">'*</span><span class=\"si\">{0}</span><span class=\"s1\">-</span><span class=\"si\">{1}</span><span class=\"s1\">_</span><span class=\"si\">{2}</span><span class=\"s1\">_6-311+g-d-p-_gd3bj_freq*.log'</span><span class=\"p\">,</span>\n            <span class=\"n\">nbo_pattern</span><span class=\"o\">=</span><span class=\"s1\">'*</span><span class=\"si\">{0}</span><span class=\"s1\">-</span><span class=\"si\">{1}</span><span class=\"s1\">_</span><span class=\"si\">{2}</span><span class=\"s1\">_6-311+g-d-p-_gd3bj_pop-nbo-full-*.log'</span><span class=\"p\">,</span>\n            <span class=\"n\">alignto</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">atom_groups</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'emim'</span><span class=\"p\">:</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">20</span><span class=\"p\">),</span> <span class=\"s1\">'cl'</span><span class=\"p\">:[</span><span class=\"mi\">20</span><span class=\"p\">]},</span>\n            <span class=\"n\">ipython_print</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<pre>Reading data 5 of 5\n</pre>\n<div id=\"molecular-comparison\">\n<h4>Molecular Comparison</h4>\n<pre><span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">caption</span> <span class=\"o\">=</span> <span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">plot_mol_images</span><span class=\"p\">(</span><span class=\"n\">mtype</span><span class=\"o\">=</span><span class=\"s1\">'optimised'</span><span class=\"p\">,</span> <span class=\"n\">max_cols</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n                        <span class=\"n\">info_columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Cation'</span><span class=\"p\">,</span> <span class=\"s1\">'Anion'</span><span class=\"p\">,</span> <span class=\"s1\">'Initial'</span><span class=\"p\">],</span>\n                        <span class=\"n\">rotations</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">90</span><span class=\"p\">]])</span>\n<span class=\"nb\">print</span> <span class=\"n\">caption</span>\n</pre>\n<pre>(A) emim, cl, B, (B) emim, cl, BE, (C) emim, cl, BM, (D) emim, cl, F, (E) emim, cl, FE\n</pre>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_26_1.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/14f66fec80736882496b289bed8edad832ed649d/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f32365f312e706e67\">\n</div>\n<div id=\"data-comparison\">\n<h4>Data Comparison</h4>\n<pre><span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">caption</span> <span class=\"o\">=</span> <span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">plot_mol_graphs</span><span class=\"p\">(</span><span class=\"n\">gtype</span><span class=\"o\">=</span><span class=\"s1\">'dos'</span><span class=\"p\">,</span> <span class=\"n\">max_cols</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n                                        <span class=\"n\">lbound</span><span class=\"o\">=-</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">ubound</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">legend_size</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                                        <span class=\"n\">band_gap_value</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                                   <span class=\"n\">info_columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Cation'</span><span class=\"p\">,</span> <span class=\"s1\">'Anion'</span><span class=\"p\">,</span> <span class=\"s1\">'Initial'</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span> <span class=\"n\">caption</span>\n</pre>\n<pre>(A) emim, cl, B, (B) emim, cl, BE, (C) emim, cl, BM, (D) emim, cl, F, (E) emim, cl, FE\n</pre>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_28_1.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81b5f342a8b4a448f23451f54a29689dd1b41b5e/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f32385f312e706e67\">\n<p>The methods mentioned for indivdiual molecules can be applied to all or\na subset of these computations.</p>\n<pre><span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">add_mol_property_subset</span><span class=\"p\">(</span><span class=\"s1\">'Opt'</span><span class=\"p\">,</span> <span class=\"s1\">'is_optimised'</span><span class=\"p\">,</span> <span class=\"n\">rows</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">add_mol_property</span><span class=\"p\">(</span><span class=\"s1\">'Energy (au)'</span><span class=\"p\">,</span> <span class=\"s1\">'get_opt_energy'</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"s1\">'hartree'</span><span class=\"p\">)</span>\n<span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">add_mol_property</span><span class=\"p\">(</span><span class=\"s1\">'Cation chain, $</span><span class=\"se\">\\\\</span><span class=\"s1\">psi$'</span><span class=\"p\">,</span> <span class=\"s1\">'calc_dihedral_angle'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">])</span>\n<span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">add_mol_property</span><span class=\"p\">(</span><span class=\"s1\">'Cation Charge'</span><span class=\"p\">,</span> <span class=\"s1\">'calc_nbo_charge'</span><span class=\"p\">,</span> <span class=\"s1\">'emim'</span><span class=\"p\">)</span>\n<span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">add_mol_property</span><span class=\"p\">(</span><span class=\"s1\">'Anion Charge'</span><span class=\"p\">,</span> <span class=\"s1\">'calc_nbo_charge'</span><span class=\"p\">,</span> <span class=\"s1\">'cl'</span><span class=\"p\">)</span>\n<span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">add_mol_property</span><span class=\"p\">([</span><span class=\"s1\">'Anion-Cation, $r$'</span><span class=\"p\">,</span> <span class=\"s1\">'Anion-Cation, $</span><span class=\"se\">\\\\</span><span class=\"s1\">theta$'</span><span class=\"p\">,</span> <span class=\"s1\">'Anion-Cation, $</span><span class=\"se\">\\\\</span><span class=\"s1\">phi$'</span><span class=\"p\">],</span>\n                               <span class=\"s1\">'calc_polar_coords_from_plane'</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">add_mol_property</span><span class=\"p\">(</span><span class=\"s1\">'Anion-Cation h-bond'</span><span class=\"p\">,</span> <span class=\"s1\">'calc_hbond_energy'</span><span class=\"p\">,</span>\n                          <span class=\"n\">eunits</span><span class=\"o\">=</span><span class=\"s1\">'kJmol-1'</span><span class=\"p\">,</span> <span class=\"n\">atom_groups</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'emim'</span><span class=\"p\">,</span> <span class=\"s1\">'cl'</span><span class=\"p\">])</span>\n<span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">get_table</span><span class=\"p\">(</span><span class=\"n\">row_index</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Anion'</span><span class=\"p\">,</span> <span class=\"s1\">'Cation'</span><span class=\"p\">,</span> <span class=\"s1\">'Initial'</span><span class=\"p\">],</span>\n                   <span class=\"n\">column_index</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Cation'</span><span class=\"p\">,</span> <span class=\"s1\">'Anion'</span><span class=\"p\">,</span> <span class=\"s1\">'Anion-Cation'</span><span class=\"p\">])</span>\n</pre>\n<p>There is also an option (requiring\n<a href=\"http://www.tug.org/applications/pdftex/\" rel=\"nofollow\">pdflatex</a> and\n<a href=\"http://www.ghostscript.com/download/gsdnld.html\" rel=\"nofollow\">ghostscript</a>+<a href=\"http://www.imagemagick.org/script/binary-releases.php\" rel=\"nofollow\">imagemagik</a>)\nto output the tables as a latex formatted image.</p>\n<pre><span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">get_table</span><span class=\"p\">(</span><span class=\"n\">row_index</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Anion'</span><span class=\"p\">,</span> <span class=\"s1\">'Cation'</span><span class=\"p\">,</span> <span class=\"s1\">'Initial'</span><span class=\"p\">],</span>\n                   <span class=\"n\">column_index</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Cation'</span><span class=\"p\">,</span> <span class=\"s1\">'Anion'</span><span class=\"p\">,</span> <span class=\"s1\">'Anion-Cation'</span><span class=\"p\">],</span>\n                   <span class=\"n\">as_image</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">font_size</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n</pre>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_32_0.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40492f9798c30c308a91184f08d7900ddf353d23/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f33325f302e706e67\">\n</div>\n<div id=\"multi-variate-analysis\">\n<h4>Multi-Variate Analysis</h4>\n<p>RadViz is a way of visualizing multi-variate data.</p>\n<pre><span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">plot_radviz_comparison</span><span class=\"p\">(</span><span class=\"s1\">'Anion'</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n</pre>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_35_0.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/13cfa33b3da49ea6fe5cb1bb08fc13f5aa7ecb6e/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f33355f302e706e67\">\n<p>The KMeans algorithm clusters data by trying to separate samples into n\ngroups of equal variance.</p>\n<pre><span class=\"n\">pg</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">imgplot_kmean_groups</span><span class=\"p\">(</span>\n    <span class=\"n\">analysis</span><span class=\"p\">,</span> <span class=\"s1\">'Anion'</span><span class=\"p\">,</span> <span class=\"s1\">'cl'</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span>\n    <span class=\"n\">output</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Initial'</span><span class=\"p\">],</span> <span class=\"n\">mtype</span><span class=\"o\">=</span><span class=\"s1\">'optimised'</span><span class=\"p\">,</span>\n    <span class=\"n\">rotations</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]],</span>\n    <span class=\"n\">axis_length</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">)</span>\n</pre>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_37_0.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/46afc5c5b64e6c9394031077f5d02441ce94c419/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f33375f302e706e67\">\n<pre>(A) BM\n</pre>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_37_2.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b43f4d246e340fd5ccaadb51160deebb56ebb030/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f33375f322e706e67\">\n<pre>(A) FE\n</pre>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_37_4.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/baf5f0c8e1ab8f8034d834128ea83157dfdb00af/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f33375f342e706e67\">\n<pre>(A) B, (B) BE\n</pre>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_37_6.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64ddc01df2fab4b4b7e7e1870ec80b300b3f53c8/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f33375f362e706e67\">\n<pre>(A) F\n</pre>\n</div>\n</div>\n<div id=\"documentation-ms-word\">\n<h3>Documentation (MS Word)</h3>\n<p>After analysing the computations, it would be reasonable to want to\ndocument some of our findings. This can be achieved by outputting\nindividual figure or table images via the folder object.</p>\n<pre><span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">folder</span><span class=\"o\">.</span><span class=\"n\">save_ipyimg</span><span class=\"p\">(</span><span class=\"n\">vdw</span><span class=\"p\">,</span> <span class=\"s1\">'image_of_molecule'</span><span class=\"p\">)</span>\n<span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">)</span>\n</pre>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/output_40_0.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/45ef491adea304236e3ee1a61d9771ccf9f9c0c6/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6f75747075745f34305f302e706e67\">\n<p>But you may also want to produce a more full record of your analysis,\nand this is where <a href=\"https://python-docx.readthedocs.org\" rel=\"nofollow\">python-docx</a>\nsteps in. Building on this package the pygauss MSDocument class can\nproduce a full document of your analysis.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">pg</span><span class=\"o\">.</span><span class=\"n\">MSDocument</span><span class=\"p\">()</span>\n<span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">add_heading</span><span class=\"p\">(</span><span class=\"s1\">'A Pygauss Example Assessment'</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">add_docstring</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"\n# Introduction\n\nWe have looked at the following aspects\nof [EMIM]^{+}[Cl]^{-} (C_</span><span class=\"si\">{6}</span><span class=\"s2\">H_</span><span class=\"si\">{11}</span><span class=\"s2\">ClN_</span><span class=\"si\">{2}</span><span class=\"s2\">);\n\n- Geometric conformers\n- Electronic structure\n\n# Geometric Conformers\n\"\"\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">caption</span> <span class=\"o\">=</span> <span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">plot_mol_images</span><span class=\"p\">(</span><span class=\"n\">max_cols</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n                <span class=\"n\">rotations</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">90</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">90</span><span class=\"p\">]],</span>\n                <span class=\"n\">info_columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Anion'</span><span class=\"p\">,</span> <span class=\"s1\">'Cation'</span><span class=\"p\">,</span> <span class=\"s1\">'Initial'</span><span class=\"p\">])</span>\n<span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">add_mpl</span><span class=\"p\">(</span><span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">dpi</span><span class=\"o\">=</span><span class=\"mi\">96</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">caption</span><span class=\"o\">=</span><span class=\"n\">caption</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n<span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">add_paragraph</span><span class=\"p\">()</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">get_table</span><span class=\"p\">(</span>\n        <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Anion Charge'</span><span class=\"p\">,</span> <span class=\"s1\">'Cation Charge'</span><span class=\"p\">],</span>\n        <span class=\"n\">row_index</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Anion'</span><span class=\"p\">,</span> <span class=\"s1\">'Cation'</span><span class=\"p\">,</span> <span class=\"s1\">'Initial'</span><span class=\"p\">])</span>\n<span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">add_dataframe</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"n\">incl_indx</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">style</span><span class=\"o\">=</span><span class=\"s1\">'Medium Shading 1 Accent 1'</span><span class=\"p\">,</span>\n                <span class=\"n\">caption</span><span class=\"o\">=</span><span class=\"s1\">'Analysis of Conformer Charge'</span><span class=\"p\">)</span>\n\n<span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">add_docstring</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"\n# Molecular Orbital Analysis\n## Density of States\n\nIt is **important** to *emphasise* that the\ncomputations have only been run in the gas phase.\n\"\"\"</span><span class=\"p\">)</span>\n<span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">caption</span> <span class=\"o\">=</span> <span class=\"n\">analysis</span><span class=\"o\">.</span><span class=\"n\">plot_mol_graphs</span><span class=\"p\">(</span><span class=\"n\">gtype</span><span class=\"o\">=</span><span class=\"s1\">'dos'</span><span class=\"p\">,</span> <span class=\"n\">max_cols</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span>\n                                    <span class=\"n\">lbound</span><span class=\"o\">=-</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">ubound</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">legend_size</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                                    <span class=\"n\">band_gap_value</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                               <span class=\"n\">info_columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Cation'</span><span class=\"p\">,</span> <span class=\"s1\">'Anion'</span><span class=\"p\">,</span> <span class=\"s1\">'Initial'</span><span class=\"p\">])</span>\n<span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">add_mpl</span><span class=\"p\">(</span><span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">dpi</span><span class=\"o\">=</span><span class=\"mi\">96</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">caption</span><span class=\"o\">=</span><span class=\"n\">caption</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'exmpl_assess.docx'</span><span class=\"p\">)</span>\n</pre>\n<p>Which gives us the following:</p>\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/example_docx1.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a1225a469bd79a77b56d4c585fbcdf7a8723f1a/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6578616d706c655f646f6378312e706e67\">\n<img alt=\"https://github.com/chrisjsewell/PyGauss/raw/master/docs/source/images/example_docx2.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/da2326827fce1f213cfef5f13e5ddfa1aa88e172/68747470733a2f2f6769746875622e636f6d2f63687269736a736577656c6c2f507947617573732f7261772f6d61737465722f646f63732f736f757263652f696d616765732f6578616d706c655f646f6378322e706e67\">\n<p>MORE TO COME!!</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1705481, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c2e933f8977d9d1c3dc8baceb3dcd207", "sha256": "ce5a326636db68d53e2bcd2a793040ec11f58465e2fadf0db6699a6436f4d616"}, "downloads": -1, "filename": "pygauss-0.1.0.zip", "has_sig": false, "md5_digest": "c2e933f8977d9d1c3dc8baceb3dcd207", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5021214, "upload_time": "2015-05-07T16:11:42", "upload_time_iso_8601": "2015-05-07T16:11:42.170969Z", "url": "https://files.pythonhosted.org/packages/1f/5f/12615f4351b7bd2b21ff30659fdedf02170eab9437dfc0d0ec51e3d7d078/pygauss-0.1.0.zip", "yanked": false}], "0.1.1": [], "0.1.10": [{"comment_text": "", "digests": {"md5": "4a976638f4ac00d49ff14b5324dc39a8", "sha256": "529a99cd209e057d52773baebd3a6435d926bd42bc9613cefba3d44b6b942f41"}, "downloads": -1, "filename": "pygauss-0.1.10.zip", "has_sig": false, "md5_digest": "4a976638f4ac00d49ff14b5324dc39a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5023524, "upload_time": "2015-05-08T04:07:11", "upload_time_iso_8601": "2015-05-08T04:07:11.123220Z", "url": "https://files.pythonhosted.org/packages/8c/0f/b2819cb0558240e7916ab7b89e36238d0be3fca0af95f9607470cec6cb63/pygauss-0.1.10.zip", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "9685df2f0f031efb9749da933d764323", "sha256": "707198f73a807d2786eaface2ef978a75f2e1c1f20f736011fe0d419a910e446"}, "downloads": -1, "filename": "pygauss-0.1.11.zip", "has_sig": false, "md5_digest": "9685df2f0f031efb9749da933d764323", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5023523, "upload_time": "2015-05-09T23:21:46", "upload_time_iso_8601": "2015-05-09T23:21:46.815343Z", "url": "https://files.pythonhosted.org/packages/f9/e7/987d2039a3cf0b9a3bc477441f4dc3e41ee67a6ee25ea9052880394d5f42/pygauss-0.1.11.zip", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "51b6fdd81f6e560042b5677b5f34e2cd", "sha256": "4493d724aeec291d94d2a76d58a53009f2c5e9af0f2577e6669310771df048e7"}, "downloads": -1, "filename": "pygauss-0.1.12.zip", "has_sig": false, "md5_digest": "51b6fdd81f6e560042b5677b5f34e2cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5023521, "upload_time": "2015-05-09T23:25:25", "upload_time_iso_8601": "2015-05-09T23:25:25.332280Z", "url": "https://files.pythonhosted.org/packages/39/75/b334a7e2b6de3ab213d2b6203563c33d74bf29a5b7dfa1502992e322def1/pygauss-0.1.12.zip", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "0f9ffad3b743ea180977503a58e52ad9", "sha256": "6a2958d347c8c90f6a294343b66dae9776b22d0c101108ec49256d2a52616ce5"}, "downloads": -1, "filename": "pygauss-0.1.13.zip", "has_sig": false, "md5_digest": "0f9ffad3b743ea180977503a58e52ad9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5023521, "upload_time": "2015-05-09T23:33:39", "upload_time_iso_8601": "2015-05-09T23:33:39.264510Z", "url": "https://files.pythonhosted.org/packages/da/89/2069bf76bb69a1c713f1defd608cf7dde3681f0b20128432dc45cd652f30/pygauss-0.1.13.zip", "yanked": false}], "0.1.14": [{"comment_text": "", "digests": {"md5": "518a2d77d6b7c23a3cec61004f26ef80", "sha256": "ff00ba492afb0f1c707f7717c103770d2b3b1ba847a2719a1d2ae063037aa950"}, "downloads": -1, "filename": "pygauss-0.1.14.zip", "has_sig": false, "md5_digest": "518a2d77d6b7c23a3cec61004f26ef80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5023546, "upload_time": "2015-05-10T00:28:14", "upload_time_iso_8601": "2015-05-10T00:28:14.571938Z", "url": "https://files.pythonhosted.org/packages/6e/c1/d3eb558e633058e583c1d9c0f2d0a5a99157cc2ab0d7287640af779ac83b/pygauss-0.1.14.zip", "yanked": false}], "0.1.15": [{"comment_text": "", "digests": {"md5": "d072d565cc723bfe7f14005162524823", "sha256": "3514ef452ff778a8f78f7677bffec6d9379739425c65990d639a1d66d9b2ce48"}, "downloads": -1, "filename": "pygauss-0.1.15.zip", "has_sig": false, "md5_digest": "d072d565cc723bfe7f14005162524823", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5023536, "upload_time": "2015-05-10T01:13:54", "upload_time_iso_8601": "2015-05-10T01:13:54.691792Z", "url": "https://files.pythonhosted.org/packages/d0/4e/1166b794d75eaa920a820ecfecdf32d89a51c50a72fec9b699f915b4609d/pygauss-0.1.15.zip", "yanked": false}], "0.1.16": [{"comment_text": "", "digests": {"md5": "9a58c16efd338a1347a00d94dd835ad1", "sha256": "5f25d5e09bdf40c8eb515ef320a8f844fa8000be8a61019dd476f267c20c1aa7"}, "downloads": -1, "filename": "pygauss-0.1.16.zip", "has_sig": false, "md5_digest": "9a58c16efd338a1347a00d94dd835ad1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5024691, "upload_time": "2015-05-10T06:21:47", "upload_time_iso_8601": "2015-05-10T06:21:47.648577Z", "url": "https://files.pythonhosted.org/packages/7d/9f/626d959f4f2bbcf3bbeb8d8e6327e00c21aebaf89951fe7741fd08aa3546/pygauss-0.1.16.zip", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "e262cac74796258e35d74acab383025b", "sha256": "448437e9f519000ef5f7cc0a1d80c364252c72b0205720c0d8f29658017fe2ce"}, "downloads": -1, "filename": "pygauss-0.1.2.zip", "has_sig": false, "md5_digest": "e262cac74796258e35d74acab383025b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5021235, "upload_time": "2015-05-07T16:17:09", "upload_time_iso_8601": "2015-05-07T16:17:09.585302Z", "url": "https://files.pythonhosted.org/packages/c7/b2/3958040051ca7a1dafc767ec5ac04aec09ada0c36b6bd4c211b1074ebc8e/pygauss-0.1.2.zip", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "0b027e91db175592edaf41001844f9bf", "sha256": "58a1af16e6ba2bbb67fb309d5c439ce07c660d1e055e08c99de85f963b15c04f"}, "downloads": -1, "filename": "pygauss-0.1.3.zip", "has_sig": false, "md5_digest": "0b027e91db175592edaf41001844f9bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5021328, "upload_time": "2015-05-07T16:57:27", "upload_time_iso_8601": "2015-05-07T16:57:27.115864Z", "url": "https://files.pythonhosted.org/packages/0c/c9/a3629e5c5f7648e228d3637744100ae09986b6f895b3f8e105688fc46d0b/pygauss-0.1.3.zip", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "334f53dd29934436593042c036a157f5", "sha256": "52289144f8adc771601df3e6707061f8ee57323f4df3db03ad80bed0c3dffa7a"}, "downloads": -1, "filename": "pygauss-0.1.4.zip", "has_sig": false, "md5_digest": "334f53dd29934436593042c036a157f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5021331, "upload_time": "2015-05-07T17:03:14", "upload_time_iso_8601": "2015-05-07T17:03:14.766246Z", "url": "https://files.pythonhosted.org/packages/a8/af/8d69bc40d56681349854a59624b6b185c7ff445fd18ead92ea7350db2a2a/pygauss-0.1.4.zip", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "17f8b34bda8fa2462ae41b27a36822fa", "sha256": "718b4aedfa5929409628aed332987f75f3c3623ddfba085500affb0126cdd336"}, "downloads": -1, "filename": "pygauss-0.1.5.zip", "has_sig": false, "md5_digest": "17f8b34bda8fa2462ae41b27a36822fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5021337, "upload_time": "2015-05-07T17:19:21", "upload_time_iso_8601": "2015-05-07T17:19:21.532643Z", "url": "https://files.pythonhosted.org/packages/ea/de/0f6fd8523161c20b6fcbd57632a685e30eae785bf81f1b67555b2f8c7d65/pygauss-0.1.5.zip", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "c13bc88652354b957602c839bf30dc78", "sha256": "2ec93f4090cd41c65f27df3577e47d7094b48364af022a425365d19353ff2716"}, "downloads": -1, "filename": "pygauss-0.1.6.zip", "has_sig": false, "md5_digest": "c13bc88652354b957602c839bf30dc78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5023637, "upload_time": "2015-05-08T03:31:33", "upload_time_iso_8601": "2015-05-08T03:31:33.365062Z", "url": "https://files.pythonhosted.org/packages/31/6b/2815fc1bc7202a1468c73d0152c0ca256c52fd844dca4e769fe73f42f86a/pygauss-0.1.6.zip", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "253bd33cd9ad59ee97cf208e90fec52e", "sha256": "110eef8947166ea6335469a11a3604fe8ee43a67151f105df04006811be09edd"}, "downloads": -1, "filename": "pygauss-0.1.7.zip", "has_sig": false, "md5_digest": "253bd33cd9ad59ee97cf208e90fec52e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5284779, "upload_time": "2015-05-08T03:47:40", "upload_time_iso_8601": "2015-05-08T03:47:40.926049Z", "url": "https://files.pythonhosted.org/packages/97/f7/114b1d0e925f9a782a31492d0f40f07ea3f77ae26a396301907dbb73f7b9/pygauss-0.1.7.zip", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "c65a06187466bc09f10253b8d75424f1", "sha256": "85d5e2f24d6612acc70b3977eb8257b51173a125e361fbce5e11c07f20f09a86"}, "downloads": -1, "filename": "pygauss-0.1.8.zip", "has_sig": false, "md5_digest": "c65a06187466bc09f10253b8d75424f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5023388, "upload_time": "2015-05-08T03:54:51", "upload_time_iso_8601": "2015-05-08T03:54:51.873734Z", "url": "https://files.pythonhosted.org/packages/4d/9e/2b1e350755026f8a5ab15dd6a50616d0d210b1545464b89605581cb46a98/pygauss-0.1.8.zip", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "937de8eddda29f7382234c632f393d88", "sha256": "4434f6423502eeb839113a8fa66a213f5e39a11505475bb9b50ff647c80eaadf"}, "downloads": -1, "filename": "pygauss-0.1.9.zip", "has_sig": false, "md5_digest": "937de8eddda29f7382234c632f393d88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5023405, "upload_time": "2015-05-08T03:59:10", "upload_time_iso_8601": "2015-05-08T03:59:10.473866Z", "url": "https://files.pythonhosted.org/packages/06/d0/e930cdb3aac6adc9f429f0d2f90fe3dff63aa5014af6d997b65b1f50267e/pygauss-0.1.9.zip", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4bd41d7b0a08054cbe4d0843b36822a6", "sha256": "bcea94ecfe5d626f18315c891f080d25ceee52fe54f6535f7a6c733aea3cad8e"}, "downloads": -1, "filename": "pygauss-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4bd41d7b0a08054cbe4d0843b36822a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4753060, "upload_time": "2015-05-10T21:43:27", "upload_time_iso_8601": "2015-05-10T21:43:27.487841Z", "url": "https://files.pythonhosted.org/packages/ab/27/6d79f82f4f442a44fbebd6d8f68bcfdbbfed0f94695631a78354cd37a29a/pygauss-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "7e4459d74ddf575f3cac7d3115b01773", "sha256": "ea51d9e3524f2b45ad1c73848349493781341771e8b7e73f2d5e1ed315efd078"}, "downloads": -1, "filename": "pygauss-0.2.1.zip", "has_sig": false, "md5_digest": "7e4459d74ddf575f3cac7d3115b01773", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5026497, "upload_time": "2015-05-11T07:10:16", "upload_time_iso_8601": "2015-05-11T07:10:16.076819Z", "url": "https://files.pythonhosted.org/packages/9e/e1/8f617e1b9605832696b5aedc1ef1826a4fcf666ed6c47fc92a2f2596e7d6/pygauss-0.2.1.zip", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "80da7b93f051e030ed21ea6196b42e0e", "sha256": "895b101d729ac7c4cd6a1c30ac9156e0ade29b074b13c418521c7b4e883143f5"}, "downloads": -1, "filename": "pygauss-0.2.2.tar.gz", "has_sig": false, "md5_digest": "80da7b93f051e030ed21ea6196b42e0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4755018, "upload_time": "2015-05-11T17:28:29", "upload_time_iso_8601": "2015-05-11T17:28:29.515061Z", "url": "https://files.pythonhosted.org/packages/1a/66/335392a56c65052841ce1ee2f0084aba5c4e1166cfa2d2912787b1f04ece/pygauss-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "99ef34082308277aed196f7abe1722f8", "sha256": "adce197ab2071f34cfa7025693408a1e3a18dd86c8b4a51639e3fea09a1e5793"}, "downloads": -1, "filename": "pygauss-0.3.0.tar.gz", "has_sig": false, "md5_digest": "99ef34082308277aed196f7abe1722f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4758275, "upload_time": "2015-05-14T16:28:11", "upload_time_iso_8601": "2015-05-14T16:28:11.354747Z", "url": "https://files.pythonhosted.org/packages/c1/ff/8ac9d27a5d4fc90dee3a72bead7dbc07ac3202eae759fe5bc87abd546af6/pygauss-0.3.0.tar.gz", "yanked": false}], "0.4.0": [], "0.4.1": [{"comment_text": "", "digests": {"md5": "b8e0ddcba02185d29ecac4720940a7f0", "sha256": "76680c09092e7323a9fe376088ad4c0039cf98a9b42af3e2f6b04adbeafcc17d"}, "downloads": -1, "filename": "pygauss-0.4.1.tar.gz", "has_sig": false, "md5_digest": "b8e0ddcba02185d29ecac4720940a7f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4857573, "upload_time": "2015-06-09T15:35:15", "upload_time_iso_8601": "2015-06-09T15:35:15.317808Z", "url": "https://files.pythonhosted.org/packages/21/1c/6469c01aa5e47c74f5f3fb912da546027bc4da200ef6482c5e96e8847d33/pygauss-0.4.1.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "f6b3d84dac578f3c4f85180fc37b00f6", "sha256": "f83037fa5956778d7cc1202e1a7b27dd2a25923732dded6efe2edd74272248d3"}, "downloads": -1, "filename": "pygauss-0.4.3.zip", "has_sig": false, "md5_digest": "f6b3d84dac578f3c4f85180fc37b00f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5140331, "upload_time": "2015-06-15T00:57:29", "upload_time_iso_8601": "2015-06-15T00:57:29.211861Z", "url": "https://files.pythonhosted.org/packages/e3/ec/7277967c37fdfbc92c7807067d9bcd3fc122cd9b4f8d4d0cf3f4e249fedc/pygauss-0.4.3.zip", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "5b92f2a79798bab10433b4031d427d8e", "sha256": "dad7da158b5f49489bd1886e8cc983410b1b8a6431d5b93ae26759e8dddbc1e9"}, "downloads": -1, "filename": "pygauss-0.4.4.zip", "has_sig": false, "md5_digest": "5b92f2a79798bab10433b4031d427d8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5145761, "upload_time": "2015-06-17T08:57:37", "upload_time_iso_8601": "2015-06-17T08:57:37.100754Z", "url": "https://files.pythonhosted.org/packages/b9/ff/626c6e1344133296af103c1200a68faa166dedc77e3ea5c0a9641015b282/pygauss-0.4.4.zip", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "1657162e789143efdb4096eac469dddc", "sha256": "d197a97462f1e3c6d8e6db787efcc819ae4ac3bfbe40f692019e23eae0cd448d"}, "downloads": -1, "filename": "pygauss-0.5.0.tar.gz", "has_sig": false, "md5_digest": "1657162e789143efdb4096eac469dddc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4866490, "upload_time": "2015-06-22T14:11:11", "upload_time_iso_8601": "2015-06-22T14:11:11.603359Z", "url": "https://files.pythonhosted.org/packages/04/e5/13a64d88b20bc58792934af386875d73d29670ee87a468e76c7859dada1a/pygauss-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "fe94816c05c6c56ede62fe89dbf93407", "sha256": "204542756be59c18e49eebacf45713a73446358b209d3436695ee4f253e3ecb9"}, "downloads": -1, "filename": "pygauss-0.5.1.tar.gz", "has_sig": false, "md5_digest": "fe94816c05c6c56ede62fe89dbf93407", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4869731, "upload_time": "2015-06-25T14:23:11", "upload_time_iso_8601": "2015-06-25T14:23:11.517140Z", "url": "https://files.pythonhosted.org/packages/c6/61/bbe7fe8b4e110cbc46494ba4f78939d320c86e9b0649cd9cce05d946a58d/pygauss-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "3eb9949ee28d88251f9937222afcfc8f", "sha256": "9e69d46aa6d2b48937ee45b7c7c9ee63a8ab90b606fa1da6aa60429d81728f28"}, "downloads": -1, "filename": "pygauss-0.6.0.tar.gz", "has_sig": false, "md5_digest": "3eb9949ee28d88251f9937222afcfc8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4870791, "upload_time": "2015-09-02T19:58:54", "upload_time_iso_8601": "2015-09-02T19:58:54.599926Z", "url": "https://files.pythonhosted.org/packages/c8/51/a6dadab41f89c0c7808b80c01c855d5a3d70a67f47d9894023ebada3c938/pygauss-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3eb9949ee28d88251f9937222afcfc8f", "sha256": "9e69d46aa6d2b48937ee45b7c7c9ee63a8ab90b606fa1da6aa60429d81728f28"}, "downloads": -1, "filename": "pygauss-0.6.0.tar.gz", "has_sig": false, "md5_digest": "3eb9949ee28d88251f9937222afcfc8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4870791, "upload_time": "2015-09-02T19:58:54", "upload_time_iso_8601": "2015-09-02T19:58:54.599926Z", "url": "https://files.pythonhosted.org/packages/c8/51/a6dadab41f89c0c7808b80c01c855d5a3d70a67f47d9894023ebada3c938/pygauss-0.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:16 2020"}