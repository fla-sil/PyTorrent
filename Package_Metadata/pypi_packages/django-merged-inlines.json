{"info": {"author": "Matt Broach, Koty Yell", "author_email": "broach@aya.yale.edu", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "|Build Status| |Coverage Status| |PyPI version|\n\nMerged Inlines\n==============\n\nMerged Inlines is a Django App that allows you to merge multiple inline\nmodels into a single form. This is particularly useful if you need to\nmix the orderings of multiple authors together, so your inlines in the\nAdmin panel can look like:\n\n-  inline for Poem 1\n-  inline for Poem 2\n-  inline for Book 1\n-  inline for Poem 3\n-  inline for Book 2\n\nInstead of:\n\n-  inline for Poem 1\n-  inline for Poem 2\n-  inline for Poem 3\n\n-  inline for Book 1\n-  inline for Book 2\n\nInstallation\n------------\n\nInstall using pip:\n\n::\n\n    pip install django-merged-inlines\n\nQuick start\n-----------\n\n1. Add \"merged\\_inlines\" to your INSTALLED\\_APPS setting:\n\n::\n\n    INSTALLED_APPS = (\n        ....\n        'merged_inlines'\n    )\n\n2. In the admin.py file for the app you're adding merged inlines to,\n   add:\n\n::\n\n    from merged_inlines.admin import MergedInlineAdmin\n\n3. Instead of admin.ModelAdmin, make your Admin class a child of\n   MergedInlineAdmin, and add your inline classes as you normally would:\n\n::\n\n    class MyFirstInline(admin.TabularInline):\n        pass\n\n    class MySecondInline(admin.TabularInline):\n        pass\n\n    class MyModelAdmin(MergedInlineAdmin):\n        inlines = [MyFirstInline,MySecondInline]\n\n    admin.site.register(MyModel,MyModelAdmin)\n\nNote that regardless of the Inline class used (TabularInline or\nStackedInline), Merged Inlines currently only renders as a tabular\ninline.\n\nOptions\n-------\n\nmerged\\_field\\_order\n~~~~~~~~~~~~~~~~~~~~\n\nYou can use merged\\_field\\_order in your MergedInlineAdmin class to set\nthe order of the fields. The list/type must contain all of fields that\nwill be editable in the admin: to exclude fields from the formset, use\nthe builtin ModelAdmin ``exclude`` function.\n\n::\n\n    class MyInline(admin.TabularInline):\n        exclude = ('my_unwanted_field')\n\n    class MyModelAdmin(MergedInlineAdmin):\n        inlines = [MyInline]\n\n        merged_field_order = ('put_this_field_first','followed_by_this_field','and_then_this_one')\n\nmerged\\_inline\\_order\n~~~~~~~~~~~~~~~~~~~~~\n\nThis option determines what field will be used to sort your merged\ninline models. The shared models must both have the shared field,\notherwise an Exception will be raised. If no field is specified, ``id``\nwill be used.\n\n::\n\n    class BookInline(admin.TabularInline):\n        model = Book\n\n    class PoemInline(admin.TabularInline):\n        model = Poem\n\n    class AuthorAdmin(MergedInlineAdmin):\n        merged_inline_order = 'year'\n\nVersion History\n\n-  1.0 - Added full test coverage. Moved to Django 1.7+ compatibility,\n   dropped compatibility with Django <1.7.\n-  0.2 - Fixed ID ordering and js issues, thanks to @kotyy\n-  0.1 - Initial release\n\n.. |Build Status| image:: https://travis-ci.org/MattBroach/Django-Merged-Inlines.svg?branch=master\n   :target: https://travis-ci.org/MattBroach/Django-Merged-Inlines\n.. |Coverage Status| image:: https://coveralls.io/repos/github/MattBroach/Django-Merged-Inlines/badge.svg?branch=master\n   :target: https://coveralls.io/github/MattBroach/Django-Merged-Inlines?branch=master\n.. |PyPI version| image:: https://badge.fury.io/py/django-merged-inlines.svg\n   :target: https://badge.fury.io/py/django-merged-inlines\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MattBroach/Django-Merged-Inlines", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-merged-inlines", "package_url": "https://pypi.org/project/django-merged-inlines/", "platform": "", "project_url": "https://pypi.org/project/django-merged-inlines/", "project_urls": {"Homepage": "https://github.com/MattBroach/Django-Merged-Inlines"}, "release_url": "https://pypi.org/project/django-merged-inlines/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "A Django Admin extension that allows you to mix and reorder multiple inline classes together", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/MattBroach/Django-Merged-Inlines\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a865549ced2b7d2e768b558d1a055434261c0e56/68747470733a2f2f7472617669732d63692e6f72672f4d61747442726f6163682f446a616e676f2d4d65726765642d496e6c696e65732e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/MattBroach/Django-Merged-Inlines?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2cb5ad1dbf694d0cdba5a261b8836a7a94973e95/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4d61747442726f6163682f446a616e676f2d4d65726765642d496e6c696e65732f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://badge.fury.io/py/django-merged-inlines\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ff06fcf3836d5f92334fed5b263ff263c2bc344b/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d6d65726765642d696e6c696e65732e737667\"></a></p>\n<div id=\"merged-inlines\">\n<h2>Merged Inlines</h2>\n<p>Merged Inlines is a Django App that allows you to merge multiple inline\nmodels into a single form. This is particularly useful if you need to\nmix the orderings of multiple authors together, so your inlines in the\nAdmin panel can look like:</p>\n<ul>\n<li>inline for Poem 1</li>\n<li>inline for Poem 2</li>\n<li>inline for Book 1</li>\n<li>inline for Poem 3</li>\n<li>inline for Book 2</li>\n</ul>\n<p>Instead of:</p>\n<ul>\n<li>inline for Poem 1</li>\n<li>inline for Poem 2</li>\n<li>inline for Poem 3</li>\n<li>inline for Book 1</li>\n<li>inline for Book 2</li>\n</ul>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install using pip:</p>\n<pre>pip install django-merged-inlines\n</pre>\n</div>\n<div id=\"quick-start\">\n<h3>Quick start</h3>\n<ol>\n<li>Add \u201cmerged_inlines\u201d to your INSTALLED_APPS setting:</li>\n</ol>\n<pre>INSTALLED_APPS = (\n    ....\n    'merged_inlines'\n)\n</pre>\n<ol>\n<li>In the admin.py file for the app you\u2019re adding merged inlines to,\nadd:</li>\n</ol>\n<pre>from merged_inlines.admin import MergedInlineAdmin\n</pre>\n<ol>\n<li>Instead of admin.ModelAdmin, make your Admin class a child of\nMergedInlineAdmin, and add your inline classes as you normally would:</li>\n</ol>\n<pre>class MyFirstInline(admin.TabularInline):\n    pass\n\nclass MySecondInline(admin.TabularInline):\n    pass\n\nclass MyModelAdmin(MergedInlineAdmin):\n    inlines = [MyFirstInline,MySecondInline]\n\nadmin.site.register(MyModel,MyModelAdmin)\n</pre>\n<p>Note that regardless of the Inline class used (TabularInline or\nStackedInline), Merged Inlines currently only renders as a tabular\ninline.</p>\n</div>\n<div id=\"options\">\n<h3>Options</h3>\n<div id=\"merged-field-order\">\n<h4>merged_field_order</h4>\n<p>You can use merged_field_order in your MergedInlineAdmin class to set\nthe order of the fields. The list/type must contain all of fields that\nwill be editable in the admin: to exclude fields from the formset, use\nthe builtin ModelAdmin <tt>exclude</tt> function.</p>\n<pre>class MyInline(admin.TabularInline):\n    exclude = ('my_unwanted_field')\n\nclass MyModelAdmin(MergedInlineAdmin):\n    inlines = [MyInline]\n\n    merged_field_order = ('put_this_field_first','followed_by_this_field','and_then_this_one')\n</pre>\n</div>\n<div id=\"merged-inline-order\">\n<h4>merged_inline_order</h4>\n<p>This option determines what field will be used to sort your merged\ninline models. The shared models must both have the shared field,\notherwise an Exception will be raised. If no field is specified, <tt>id</tt>\nwill be used.</p>\n<pre>class BookInline(admin.TabularInline):\n    model = Book\n\nclass PoemInline(admin.TabularInline):\n    model = Poem\n\nclass AuthorAdmin(MergedInlineAdmin):\n    merged_inline_order = 'year'\n</pre>\n<p>Version History</p>\n<ul>\n<li>1.0 - Added full test coverage. Moved to Django 1.7+ compatibility,\ndropped compatibility with Django &lt;1.7.</li>\n<li>0.2 - Fixed ID ordering and js issues, thanks to @kotyy</li>\n<li>0.1 - Initial release</li>\n</ul>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4767054, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "218b9191a460931eabd291645e38506d", "sha256": "f9302a53af6ada2e67e1890b37dd615edce0b80606993c0f14f3e35120dafc92"}, "downloads": -1, "filename": "django-merged-inlines-0.1.tar.gz", "has_sig": false, "md5_digest": "218b9191a460931eabd291645e38506d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7884, "upload_time": "2014-04-30T05:18:08", "upload_time_iso_8601": "2014-04-30T05:18:08.693066Z", "url": "https://files.pythonhosted.org/packages/ca/37/471ad6081bc5575156e6648d212874179f95f04ff47268cf94f1fc56e237/django-merged-inlines-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "ce53fd3de069717a0397b32aaddd6bb7", "sha256": "45246880f099ad89f7888e6b77220420f5ae968c37e23702107ee5d31cbab389"}, "downloads": -1, "filename": "django-merged-inlines-0.2.tar.gz", "has_sig": false, "md5_digest": "ce53fd3de069717a0397b32aaddd6bb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10935, "upload_time": "2014-10-27T17:25:04", "upload_time_iso_8601": "2014-10-27T17:25:04.018122Z", "url": "https://files.pythonhosted.org/packages/aa/66/095645c5e03d822cd6b5a8ab33d5e934cb694cc09c094bc22e1f4426f051/django-merged-inlines-0.2.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "921d67d2cbaefeb28dd0eb58323e6c8b", "sha256": "c79ca3afafb8e796669917b4359b6036eb6add1b6bed627593ebb1b8b2f7d5f0"}, "downloads": -1, "filename": "django-merged-inlines-1.0.tar.gz", "has_sig": false, "md5_digest": "921d67d2cbaefeb28dd0eb58323e6c8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9066, "upload_time": "2016-06-13T20:40:36", "upload_time_iso_8601": "2016-06-13T20:40:36.784414Z", "url": "https://files.pythonhosted.org/packages/0d/1d/a8d2b5a8be288a3a3b4757be4efa7b6ef77e95cfc278365ab831dfff6486/django-merged-inlines-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "9dafadbb4c81867ffebf3b6629ed17c5", "sha256": "cbad74a828c2d0eaffd078c32db3e5219867b29261a09948e41135fa2a3d22f8"}, "downloads": -1, "filename": "django-merged-inlines-1.0.1.tar.gz", "has_sig": false, "md5_digest": "9dafadbb4c81867ffebf3b6629ed17c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9057, "upload_time": "2016-06-13T20:43:48", "upload_time_iso_8601": "2016-06-13T20:43:48.937298Z", "url": "https://files.pythonhosted.org/packages/bb/75/8fbf5ed4954b0464e67d3395ddb938eae0d212693f0c87645f92766197a9/django-merged-inlines-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "08117464bdfad3d1e2f003d9b637ddb5", "sha256": "9ff76ea4d537cccecde564e8c44e96af6b649159b1e2703815ea750e391a5c45"}, "downloads": -1, "filename": "django_merged_inlines-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "08117464bdfad3d1e2f003d9b637ddb5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12260, "upload_time": "2019-02-01T05:54:40", "upload_time_iso_8601": "2019-02-01T05:54:40.651894Z", "url": "https://files.pythonhosted.org/packages/f7/1c/29c0e332a4f7bded2b2ae1987fc66b54a46885c0d9cad1258c2495572839/django_merged_inlines-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e495b767d72b8133cab2f87a87000115", "sha256": "51b29263f7dfda0c8d9e8a13a23ef1e744b669b89a831a2941e49807b4314293"}, "downloads": -1, "filename": "django-merged-inlines-1.0.2.tar.gz", "has_sig": false, "md5_digest": "e495b767d72b8133cab2f87a87000115", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9570, "upload_time": "2019-02-01T05:54:42", "upload_time_iso_8601": "2019-02-01T05:54:42.285067Z", "url": "https://files.pythonhosted.org/packages/a0/fc/46f978132aeae2596e453027c3575c6068d436650cdf846c71237f0091a2/django-merged-inlines-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "8d7f1c6542d5877f7ac93a85eecac7b5", "sha256": "1fb349d826d6776f830dc6704e2f6b3e9c0d17f1bd436623131c543011202948"}, "downloads": -1, "filename": "django_merged_inlines-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8d7f1c6542d5877f7ac93a85eecac7b5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13391, "upload_time": "2019-02-01T05:58:42", "upload_time_iso_8601": "2019-02-01T05:58:42.791507Z", "url": "https://files.pythonhosted.org/packages/1d/02/2f023ddc39906e59e83decc60a2de1d628ca66693bb27807ceb6ceec7c19/django_merged_inlines-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76a836b7db454b54095f8c23d9cbc14d", "sha256": "3d7fff5d8c542e09fe893cadff12e74cf155c1841fe68ba860d491d06b036939"}, "downloads": -1, "filename": "django-merged-inlines-1.0.3.tar.gz", "has_sig": false, "md5_digest": "76a836b7db454b54095f8c23d9cbc14d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11068, "upload_time": "2019-02-01T05:58:45", "upload_time_iso_8601": "2019-02-01T05:58:45.614989Z", "url": "https://files.pythonhosted.org/packages/a2/96/5627ae6712108771f5f14efc08aae7c308b349c7a276b7b7043260fd6d66/django-merged-inlines-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8d7f1c6542d5877f7ac93a85eecac7b5", "sha256": "1fb349d826d6776f830dc6704e2f6b3e9c0d17f1bd436623131c543011202948"}, "downloads": -1, "filename": "django_merged_inlines-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8d7f1c6542d5877f7ac93a85eecac7b5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13391, "upload_time": "2019-02-01T05:58:42", "upload_time_iso_8601": "2019-02-01T05:58:42.791507Z", "url": "https://files.pythonhosted.org/packages/1d/02/2f023ddc39906e59e83decc60a2de1d628ca66693bb27807ceb6ceec7c19/django_merged_inlines-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76a836b7db454b54095f8c23d9cbc14d", "sha256": "3d7fff5d8c542e09fe893cadff12e74cf155c1841fe68ba860d491d06b036939"}, "downloads": -1, "filename": "django-merged-inlines-1.0.3.tar.gz", "has_sig": false, "md5_digest": "76a836b7db454b54095f8c23d9cbc14d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11068, "upload_time": "2019-02-01T05:58:45", "upload_time_iso_8601": "2019-02-01T05:58:45.614989Z", "url": "https://files.pythonhosted.org/packages/a2/96/5627ae6712108771f5f14efc08aae7c308b349c7a276b7b7043260fd6d66/django-merged-inlines-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:06 2020"}