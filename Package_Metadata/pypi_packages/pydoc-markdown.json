{"info": {"author": "Niklas Rosenstein", "author_email": "rosensteinniklas@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Code Generators", "Topic :: Utilities"], "description": "> [April 23, 2019] The current version of Pydoc-Markdown (2.x) is not actively developed.\n> Efforts are focused on Pydoc-markdown 3.x which can be found on the [develop](https://github.com/NiklasRosenstein/pydoc-markdown/tree/develop).\n\n# pydocmd\n\n&ndash; *insipired by the [Keras] Documentation*\n\nPydocmd uses [MkDocs] and extended [Markdown] syntax to generate beautiful\nPython API documentation.\n\n  [MkDocs]: http://www.mkdocs.org/\n  [Markdown]: https://python-markdown.github.io/\n  [Keras]: https://keras.io/\n\n__Todo__\n\n- [x] Support `+` suffix to include documented members of a module/class\n- [ ] Expand and link cross-references (eg. `#SomeClass`)\n- [ ] Parse, format and link types listed in parameter/member/raise/return type\n      docstrings (eg. `someattr (int): This is...`)\n\n## Installation\n\n    pip install pydoc-markdown\n    pip install git+https://github.com/NiklasRosenstein/pydoc-markdown.git  # latest development version\n\n## Usage\n\nPydocmd can generate plain Markdown files from Python modules using the\n`pydocmd simple` command. Specify one or more module names on the command-line.\nSupports the `+` syntax to include members of the module (or `++` to include\nmembers of the members, etc.)\n\n    pydocmd simple mypackage+ mypackage.mymodule+ > docs.md\n\nAlternatively, pydocmd wraps the MkDocs command-line interface and generates\nthe markdown pages beforehand. Simply use `pydocmd build` to build the\ndocumentation, or `pydocmd serve` to serve the documentation on a local HTTP\nserver. The `pydocmd gh-deploy` from MkDocs is also supported.\n\nA configuration file `pydocmd.yml` is required to use pydocmd in this mode.\nBelow is an example configuration. To get started, create `docs/` directory\nand a file `pydocmd.yml` inside of it. Copy the configuration below and\nadjust it to your needs, then run `pydocmd build` from the `docs/` directory.\n\n```yaml\nsite_name: \"My Documentation\"\n\n# This tells pydocmd which pages to generate from which Python modules,\n# functions and classes. At the first level is the page name, below that\n# is a tree of Python member names (modules, classes, etc.) that should be\n# documented. Higher indentation leads to smaller header size.\ngenerate:\n- baz/cool-stuff.md:\n  - foobar.baz:\n    - foobar.baz.CoolClass+     # (+ to include members)\n    - foobar.baz.some_function\n- baz/more-stuff.md:\n  - foobar.more++               # (++ to include members, and their members)\n\n# MkDocs pages configuration. The `<<` operator is sugar added by pydocmd\n# that allows you to use an external Markdown file (eg. your project's README)\n# in the documentation. The path must be relative to current working directory.\n# This configuration is not mandatory if you have your own mkdocs.yml config file.\npages:\n- Home: index.md << ../README.md\n- foobar.baz:\n  - Cool Stuff: baz/cool-stuff.md\n\n# These options all show off their default values. You don't have to add\n# them to your configuration if you're fine with the default.\ndocs_dir: sources\ngens_dir: _build/pydocmd     # This will end up as the MkDocs 'docs_dir'\nsite_dir: _build/site\ntheme:    readthedocs\nloader:   pydocmd.loader.PythonLoader\npreprocessor: pydocmd.preprocessors.simple.Preprocessor\n\n# Whether to output headers as markdown or HTML.  Used to workaround\n# https://github.com/NiklasRosenstein/pydoc-markdown/issues/11.  The default is\n# to generate HTML with unique and meaningful id tags, which can't be done with\n# markdown.\n#\n# Note: if using the simple generator mode, this will default to 'markdown'\n# instead of 'html'.\nheaders: html\n\n# Additional search path for your Python module. If you use Pydocmd from a\n# subdirectory of your project (eg. docs/), you may want to add the parent\n# directory here.\nadditional_search_paths:\n- ..\n```\n\n## Syntax\n\n### Cross-references\n\nSymbols in the same namespace may be referenced by using a hash-symbol (`#`)\ndirectly followed by the symbols' name, including relative references. Note that\nusing parentheses for function names is encouraged and will be ignored and\nautomatically added when converting docstrings. Examples: `#ClassName.member` or\n`#mod.function()`.\n\nFor absolute references for modules or members in names that are not available\nin the current global namespace, `#::mod.member` must be used (note the two\npreceeding two double-colons).\n\nFor long reference names where only some part of the name should be displayed,\nthe syntax `#X~some.reference.name` can be used, where `X` is the number of\nelements to keep. If `X` is omitted, it will be assumed 1. Example:\n`#~some.reference.name` results in only `name` being displayed.\n\nIn order to append additional characters that are not included in the actual\nreference name, another hash-symbol can be used, like `#Signal#s`.\n\n### Sections\n\nSections can be generated with the Markdown `# <Title>` syntax. It is important\nto add a whitespace after the hash-symbol (`#`), as otherwise it would represent\na cross-reference. Some special sections alter the rendered result of their\ncontent, including\n\n- Arguments (1)\n- Parameters (1)\n- Attributes (1)\n- Members (1)\n- Raises (2)\n- Returns (2)\n\n(1): Lines beginning with `<ident> [(<type>[, ...])]:` are treated as\nargument/parameter or attribute/member declarations. Types listed inside the\nparenthesis (optional) are cross-linked, if possible. For attribute/member\ndeclarations, the identifier is typed in a monospace font.\n\n(2): Lines beginning with `<type>[, ...]:` are treated as raise/return type\ndeclarations and the type names are cross-linked, if possible.\n\nLines following a name's description are considered part of the most recent\ndocumentation unless separated by another declaration or an empty line. `<type>`\nplaceholders can also be tuples in the form `(<type>[, ...])`.\n\n### Code Blocks\n\nGitHub-style Markdown code-blocks with language annotations can be used.\n\n    ```python\n    >>> for i in range(100):\n    ...\n    ```\n\n---\n\n## Changes\n\n### v2.1.3 (2020-03-21)\n\n- Support `arg` and `argument` keywords in reStructuredText processor (contributed\n  by @pastelmind in #104)\n\n### v2.1.2 (2020-03-07)\n\n- Fix function signature for classmethods and staticmethods\n\n### v2.1.1 (2020-03-02)\n\n- Reimplement `get_function_signature()` for better compatibility with\n  default values and annotations\n- Prettifying signature with `yapf` no longer raises a `SyntaxError` as\n  all default values and annotations are replaced with placeholders (see\n  #100 and #101)\n- String constants no longer get the `str` built-in docstring\n\n### v2.1.0 (2020-03-01)\n\n- Use `yaml.safe_load()` instead of `yaml.load()` to silence warning about\n  unsafe operation (#87)\n- #65 &ndash; Properly loaded docstring for classmethod/staticmethod.\n- #62 &ndash; getting descriptor's instance instead calling its __get__ method.\n- #61 &ndash; 'pages' configuration is deprecated in MKDocs > 1.0.0. MKDoc dependency bumped to >=1.0.0.\n- #63 &ndash; Pages configuration not required when mkdocs.yml present.\n- Add newline before titles for plaintext visibility\n- Arguments/Returns section is considered ended if an empty line is found\n- Parse references and replace them with markdown links\n- Pretty print function signature\n- Add smart and google preprocessors\n\n### v2.0.5 (2018-11-15)\n\n- Now copies all files from the docs_dir (to include images etc.) (see #56)\n- Fix error with delayed imports changing dictionary size during iteration (see #57)\n- Add `headers` option which can be of value `'html'` or `'markdown'` (see #55)\n- Default `headers` option to `'markdown'` in `simple` mode (see #59)\n\n### v2.0.4 (2018-07-24)\n\n- Add `-c key=value` argument for `generate` and `simple` command\n- Add `filter=[\"docstring\"]` option (#43)\n- Fix regex for detecting cross-references (#44)\n- Handle classes that don't define `__init__()` (PR#51)\n- Add support for reStructuredText Markup (eg. ``:class:`MyClass` ``) (PR#46, #1)\n- Handle `@property` functions (PR#50)\n\n### v2.0.3\n\n- Fix #41, #36, #31\n- Merged #39\n\n### v2.0.2 \n\n- Fix #25 -- Text is incorrectly rendered as code\n- Fix #26 -- Broken links for URLs with fragment identifiers\n- No longer transforms titles in a docstring that are indented (eg. to\n  avoid an indented code block with a `#` comment to be corrupted)\n\n### v2.0.1\n\n- Support `additional_search_path` key in configuration\n- Render headers as HTML `<hX>` tags rather than Markdown tags, so we\n  assign a proper ID to them\n- Fix #21 -- AttributeError: 'module' object has no attribute 'signature'\n- Now requires the `six` module\n- FIx #22 -- No blank space after header does not render codeblocks\n\n### v2.0.0\n\n- Complete overhaul of **pydoc-markdown** employing MkDocs and the Markdown module.\n\n---\n\n<p align=\"center\">Copyright &copy; 2017-2018  Niklas Rosenstein</p>", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/NiklasRosenstein/pydoc-markdown", "keywords": "markdown,pydoc,generator,docs,documentation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pydoc-markdown", "package_url": "https://pypi.org/project/pydoc-markdown/", "platform": "", "project_url": "https://pypi.org/project/pydoc-markdown/", "project_urls": {"Homepage": "https://github.com/NiklasRosenstein/pydoc-markdown"}, "release_url": "https://pypi.org/project/pydoc-markdown/2.1.3/", "requires_dist": null, "requires_python": "", "summary": "Create Python API documentation in Markdown format", "version": "2.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\n<p>[April 23, 2019] The current version of Pydoc-Markdown (2.x) is not actively developed.\nEfforts are focused on Pydoc-markdown 3.x which can be found on the <a href=\"https://github.com/NiklasRosenstein/pydoc-markdown/tree/develop\" rel=\"nofollow\">develop</a>.</p>\n</blockquote>\n<h1>pydocmd</h1>\n<p>\u2013 <em>insipired by the <a href=\"https://keras.io/\" rel=\"nofollow\">Keras</a> Documentation</em></p>\n<p>Pydocmd uses <a href=\"http://www.mkdocs.org/\" rel=\"nofollow\">MkDocs</a> and extended <a href=\"https://python-markdown.github.io/\" rel=\"nofollow\">Markdown</a> syntax to generate beautiful\nPython API documentation.</p>\n<p><strong>Todo</strong></p>\n<ul>\n<li>[x] Support <code>+</code> suffix to include documented members of a module/class</li>\n<li>[ ] Expand and link cross-references (eg. <code>#SomeClass</code>)</li>\n<li>[ ] Parse, format and link types listed in parameter/member/raise/return type\ndocstrings (eg. <code>someattr (int): This is...</code>)</li>\n</ul>\n<h2>Installation</h2>\n<pre><code>pip install pydoc-markdown\npip install git+https://github.com/NiklasRosenstein/pydoc-markdown.git  # latest development version\n</code></pre>\n<h2>Usage</h2>\n<p>Pydocmd can generate plain Markdown files from Python modules using the\n<code>pydocmd simple</code> command. Specify one or more module names on the command-line.\nSupports the <code>+</code> syntax to include members of the module (or <code>++</code> to include\nmembers of the members, etc.)</p>\n<pre><code>pydocmd simple mypackage+ mypackage.mymodule+ &gt; docs.md\n</code></pre>\n<p>Alternatively, pydocmd wraps the MkDocs command-line interface and generates\nthe markdown pages beforehand. Simply use <code>pydocmd build</code> to build the\ndocumentation, or <code>pydocmd serve</code> to serve the documentation on a local HTTP\nserver. The <code>pydocmd gh-deploy</code> from MkDocs is also supported.</p>\n<p>A configuration file <code>pydocmd.yml</code> is required to use pydocmd in this mode.\nBelow is an example configuration. To get started, create <code>docs/</code> directory\nand a file <code>pydocmd.yml</code> inside of it. Copy the configuration below and\nadjust it to your needs, then run <code>pydocmd build</code> from the <code>docs/</code> directory.</p>\n<pre><span class=\"nt\">site_name</span><span class=\"p\">:</span> <span class=\"s\">\"My</span><span class=\"nv\"> </span><span class=\"s\">Documentation\"</span>\n\n<span class=\"c1\"># This tells pydocmd which pages to generate from which Python modules,</span>\n<span class=\"c1\"># functions and classes. At the first level is the page name, below that</span>\n<span class=\"c1\"># is a tree of Python member names (modules, classes, etc.) that should be</span>\n<span class=\"c1\"># documented. Higher indentation leads to smaller header size.</span>\n<span class=\"nt\">generate</span><span class=\"p\">:</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">baz/cool-stuff.md</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">foobar.baz</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">foobar.baz.CoolClass+</span>     <span class=\"c1\"># (+ to include members)</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">foobar.baz.some_function</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">baz/more-stuff.md</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">foobar.more++</span>               <span class=\"c1\"># (++ to include members, and their members)</span>\n\n<span class=\"c1\"># MkDocs pages configuration. The `&lt;&lt;` operator is sugar added by pydocmd</span>\n<span class=\"c1\"># that allows you to use an external Markdown file (eg. your project's README)</span>\n<span class=\"c1\"># in the documentation. The path must be relative to current working directory.</span>\n<span class=\"c1\"># This configuration is not mandatory if you have your own mkdocs.yml config file.</span>\n<span class=\"nt\">pages</span><span class=\"p\">:</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">Home</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">index.md &lt;&lt; ../README.md</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">foobar.baz</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">Cool Stuff</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">baz/cool-stuff.md</span>\n\n<span class=\"c1\"># These options all show off their default values. You don't have to add</span>\n<span class=\"c1\"># them to your configuration if you're fine with the default.</span>\n<span class=\"nt\">docs_dir</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">sources</span>\n<span class=\"nt\">gens_dir</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">_build/pydocmd</span>     <span class=\"c1\"># This will end up as the MkDocs 'docs_dir'</span>\n<span class=\"nt\">site_dir</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">_build/site</span>\n<span class=\"nt\">theme</span><span class=\"p\">:</span>    <span class=\"l l-Scalar l-Scalar-Plain\">readthedocs</span>\n<span class=\"nt\">loader</span><span class=\"p\">:</span>   <span class=\"l l-Scalar l-Scalar-Plain\">pydocmd.loader.PythonLoader</span>\n<span class=\"nt\">preprocessor</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">pydocmd.preprocessors.simple.Preprocessor</span>\n\n<span class=\"c1\"># Whether to output headers as markdown or HTML.  Used to workaround</span>\n<span class=\"c1\"># https://github.com/NiklasRosenstein/pydoc-markdown/issues/11.  The default is</span>\n<span class=\"c1\"># to generate HTML with unique and meaningful id tags, which can't be done with</span>\n<span class=\"c1\"># markdown.</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Note: if using the simple generator mode, this will default to 'markdown'</span>\n<span class=\"c1\"># instead of 'html'.</span>\n<span class=\"nt\">headers</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">html</span>\n\n<span class=\"c1\"># Additional search path for your Python module. If you use Pydocmd from a</span>\n<span class=\"c1\"># subdirectory of your project (eg. docs/), you may want to add the parent</span>\n<span class=\"c1\"># directory here.</span>\n<span class=\"nt\">additional_search_paths</span><span class=\"p\">:</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">..</span>\n</pre>\n<h2>Syntax</h2>\n<h3>Cross-references</h3>\n<p>Symbols in the same namespace may be referenced by using a hash-symbol (<code>#</code>)\ndirectly followed by the symbols' name, including relative references. Note that\nusing parentheses for function names is encouraged and will be ignored and\nautomatically added when converting docstrings. Examples: <code>#ClassName.member</code> or\n<code>#mod.function()</code>.</p>\n<p>For absolute references for modules or members in names that are not available\nin the current global namespace, <code>#::mod.member</code> must be used (note the two\npreceeding two double-colons).</p>\n<p>For long reference names where only some part of the name should be displayed,\nthe syntax <code>#X~some.reference.name</code> can be used, where <code>X</code> is the number of\nelements to keep. If <code>X</code> is omitted, it will be assumed 1. Example:\n<code>#~some.reference.name</code> results in only <code>name</code> being displayed.</p>\n<p>In order to append additional characters that are not included in the actual\nreference name, another hash-symbol can be used, like <code>#Signal#s</code>.</p>\n<h3>Sections</h3>\n<p>Sections can be generated with the Markdown <code># &lt;Title&gt;</code> syntax. It is important\nto add a whitespace after the hash-symbol (<code>#</code>), as otherwise it would represent\na cross-reference. Some special sections alter the rendered result of their\ncontent, including</p>\n<ul>\n<li>Arguments (1)</li>\n<li>Parameters (1)</li>\n<li>Attributes (1)</li>\n<li>Members (1)</li>\n<li>Raises (2)</li>\n<li>Returns (2)</li>\n</ul>\n<p>(1): Lines beginning with <code>&lt;ident&gt; [(&lt;type&gt;[, ...])]:</code> are treated as\nargument/parameter or attribute/member declarations. Types listed inside the\nparenthesis (optional) are cross-linked, if possible. For attribute/member\ndeclarations, the identifier is typed in a monospace font.</p>\n<p>(2): Lines beginning with <code>&lt;type&gt;[, ...]:</code> are treated as raise/return type\ndeclarations and the type names are cross-linked, if possible.</p>\n<p>Lines following a name's description are considered part of the most recent\ndocumentation unless separated by another declaration or an empty line. <code>&lt;type&gt;</code>\nplaceholders can also be tuples in the form <code>(&lt;type&gt;[, ...])</code>.</p>\n<h3>Code Blocks</h3>\n<p>GitHub-style Markdown code-blocks with language annotations can be used.</p>\n<pre><code>```python\n&gt;&gt;&gt; for i in range(100):\n...\n```\n</code></pre>\n<hr>\n<h2>Changes</h2>\n<h3>v2.1.3 (2020-03-21)</h3>\n<ul>\n<li>Support <code>arg</code> and <code>argument</code> keywords in reStructuredText processor (contributed\nby @pastelmind in #104)</li>\n</ul>\n<h3>v2.1.2 (2020-03-07)</h3>\n<ul>\n<li>Fix function signature for classmethods and staticmethods</li>\n</ul>\n<h3>v2.1.1 (2020-03-02)</h3>\n<ul>\n<li>Reimplement <code>get_function_signature()</code> for better compatibility with\ndefault values and annotations</li>\n<li>Prettifying signature with <code>yapf</code> no longer raises a <code>SyntaxError</code> as\nall default values and annotations are replaced with placeholders (see\n#100 and #101)</li>\n<li>String constants no longer get the <code>str</code> built-in docstring</li>\n</ul>\n<h3>v2.1.0 (2020-03-01)</h3>\n<ul>\n<li>Use <code>yaml.safe_load()</code> instead of <code>yaml.load()</code> to silence warning about\nunsafe operation (#87)</li>\n<li>#65 \u2013 Properly loaded docstring for classmethod/staticmethod.</li>\n<li>#62 \u2013 getting descriptor's instance instead calling its <strong>get</strong> method.</li>\n<li>#61 \u2013 'pages' configuration is deprecated in MKDocs &gt; 1.0.0. MKDoc dependency bumped to &gt;=1.0.0.</li>\n<li>#63 \u2013 Pages configuration not required when mkdocs.yml present.</li>\n<li>Add newline before titles for plaintext visibility</li>\n<li>Arguments/Returns section is considered ended if an empty line is found</li>\n<li>Parse references and replace them with markdown links</li>\n<li>Pretty print function signature</li>\n<li>Add smart and google preprocessors</li>\n</ul>\n<h3>v2.0.5 (2018-11-15)</h3>\n<ul>\n<li>Now copies all files from the docs_dir (to include images etc.) (see #56)</li>\n<li>Fix error with delayed imports changing dictionary size during iteration (see #57)</li>\n<li>Add <code>headers</code> option which can be of value <code>'html'</code> or <code>'markdown'</code> (see #55)</li>\n<li>Default <code>headers</code> option to <code>'markdown'</code> in <code>simple</code> mode (see #59)</li>\n</ul>\n<h3>v2.0.4 (2018-07-24)</h3>\n<ul>\n<li>Add <code>-c key=value</code> argument for <code>generate</code> and <code>simple</code> command</li>\n<li>Add <code>filter=[\"docstring\"]</code> option (#43)</li>\n<li>Fix regex for detecting cross-references (#44)</li>\n<li>Handle classes that don't define <code>__init__()</code> (PR#51)</li>\n<li>Add support for reStructuredText Markup (eg. <code>:class:`MyClass`</code>) (PR#46, #1)</li>\n<li>Handle <code>@property</code> functions (PR#50)</li>\n</ul>\n<h3>v2.0.3</h3>\n<ul>\n<li>Fix #41, #36, #31</li>\n<li>Merged #39</li>\n</ul>\n<h3>v2.0.2</h3>\n<ul>\n<li>Fix #25 -- Text is incorrectly rendered as code</li>\n<li>Fix #26 -- Broken links for URLs with fragment identifiers</li>\n<li>No longer transforms titles in a docstring that are indented (eg. to\navoid an indented code block with a <code>#</code> comment to be corrupted)</li>\n</ul>\n<h3>v2.0.1</h3>\n<ul>\n<li>Support <code>additional_search_path</code> key in configuration</li>\n<li>Render headers as HTML <code>&lt;hX&gt;</code> tags rather than Markdown tags, so we\nassign a proper ID to them</li>\n<li>Fix #21 -- AttributeError: 'module' object has no attribute 'signature'</li>\n<li>Now requires the <code>six</code> module</li>\n<li>FIx #22 -- No blank space after header does not render codeblocks</li>\n</ul>\n<h3>v2.0.0</h3>\n<ul>\n<li>Complete overhaul of <strong>pydoc-markdown</strong> employing MkDocs and the Markdown module.</li>\n</ul>\n<hr>\n<p align=\"center\">Copyright \u00a9 2017-2018  Niklas Rosenstein</p>\n\n          </div>"}, "last_serial": 6853510, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2e819c18fc4c56002c3848dc852b8d30", "sha256": "6b281cee1909b96f8b4f4d6ada7b4a1ee7c50564fa18c1392cf23372c590227b"}, "downloads": -1, "filename": "pydoc-markdown-0.1.0.zip", "has_sig": false, "md5_digest": "2e819c18fc4c56002c3848dc852b8d30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12057, "upload_time": "2016-04-04T09:53:05", "upload_time_iso_8601": "2016-04-04T09:53:05.200957Z", "url": "https://files.pythonhosted.org/packages/90/4a/e30686ea4a7068960ec2385e4745b9deceb1090cff06d222a0c0127b2d12/pydoc-markdown-0.1.0.zip", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "89e357ace2d90e61a8f37fdbe524d6e2", "sha256": "c5f3a3f607d426f9d5cd6a1bb517b0e830f8c96b3ae8ba096511ae2fe229783b"}, "downloads": -1, "filename": "pydoc-markdown-2.0.0.zip", "has_sig": false, "md5_digest": "89e357ace2d90e61a8f37fdbe524d6e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26064, "upload_time": "2017-05-02T10:44:37", "upload_time_iso_8601": "2017-05-02T10:44:37.551893Z", "url": "https://files.pythonhosted.org/packages/4c/54/da010c09bac1a5fff2bb19c0e894ca88c3373d47ba22917881253fc9e634/pydoc-markdown-2.0.0.zip", "yanked": false}], "2.0.0.dev0": [{"comment_text": "", "digests": {"md5": "26ff3c4c9364af9645c27a531349d0a9", "sha256": "2737f042c7094be103c8655fab444d1b7dadf6d9b659fa7708ba2be226d848ca"}, "downloads": -1, "filename": "pydoc-markdown-2.0.0.dev0.tar.gz", "has_sig": false, "md5_digest": "26ff3c4c9364af9645c27a531349d0a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12641, "upload_time": "2017-01-05T19:25:02", "upload_time_iso_8601": "2017-01-05T19:25:02.487643Z", "url": "https://files.pythonhosted.org/packages/82/27/5ca6e9167935e4a2587445a7119bd043a57fc187cb5c9eaa079e51579975/pydoc-markdown-2.0.0.dev0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "1d45602d536c1b23c8dc6b8dadad1584", "sha256": "ba8a74936cd7f95ab90176623a61b04fbf001fe95a5b14babc94252aa4b7ae92"}, "downloads": -1, "filename": "pydoc-markdown-2.0.1.tar.gz", "has_sig": false, "md5_digest": "1d45602d536c1b23c8dc6b8dadad1584", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15660, "upload_time": "2017-05-27T10:29:23", "upload_time_iso_8601": "2017-05-27T10:29:23.713632Z", "url": "https://files.pythonhosted.org/packages/ac/82/8240092e3892e7f6114b4d0dddf9dd9e97117422f8dad11f3a022ceb3c23/pydoc-markdown-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "9afb07335ad540bb097e1ccb8d27af98", "sha256": "183d475e1e5acc568b186c7c23fc0faec9770a42cbddadcf6fbfe7565aa055c0"}, "downloads": -1, "filename": "pydoc-markdown-2.0.2.tar.gz", "has_sig": false, "md5_digest": "9afb07335ad540bb097e1ccb8d27af98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16134, "upload_time": "2018-03-20T12:51:23", "upload_time_iso_8601": "2018-03-20T12:51:23.585695Z", "url": "https://files.pythonhosted.org/packages/4c/60/91837c148cd4a6317af648a2b382a02302be4332f148dbb20ace89c07066/pydoc-markdown-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "43e5002e460f7d1f3aba1cdc8d507baa", "sha256": "0086e958046c08cc99aefc40e3e2509a686c5a18e53db11b28a44570f128f83e"}, "downloads": -1, "filename": "pydoc-markdown-2.0.3.tar.gz", "has_sig": false, "md5_digest": "43e5002e460f7d1f3aba1cdc8d507baa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16476, "upload_time": "2018-05-03T17:40:04", "upload_time_iso_8601": "2018-05-03T17:40:04.368280Z", "url": "https://files.pythonhosted.org/packages/68/78/e5c3ccbdb7d427eef44112a245ee52283842192b0ab8b0fd706aeff0b6b0/pydoc-markdown-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "e0037f6a28d37f6943faec455302570f", "sha256": "a9baef97d275ee5b197524e44792c154dd51feea20e23cbdcedb95cc3eac2985"}, "downloads": -1, "filename": "pydoc-markdown-2.0.4.tar.gz", "has_sig": false, "md5_digest": "e0037f6a28d37f6943faec455302570f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17797, "upload_time": "2018-07-24T16:18:02", "upload_time_iso_8601": "2018-07-24T16:18:02.718837Z", "url": "https://files.pythonhosted.org/packages/2d/df/eecbaa9dd5616b2b8c40fc4c4e62f499fd4a23a9272cf92b8b2c1033de10/pydoc-markdown-2.0.4.tar.gz", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "e6eb19cd3cf0409bd9da8abf5d92c757", "sha256": "f1511ad5a6ca33a52dd2010651d18e9debb57bcf36ab87eca560dd15a753ce1f"}, "downloads": -1, "filename": "pydoc-markdown-2.0.5.tar.gz", "has_sig": false, "md5_digest": "e6eb19cd3cf0409bd9da8abf5d92c757", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14305, "upload_time": "2018-11-15T20:39:26", "upload_time_iso_8601": "2018-11-15T20:39:26.320425Z", "url": "https://files.pythonhosted.org/packages/d6/fa/163d1254426f7fa45fd5e6fce8f75cd18165e28971595edbe26e12e61d8c/pydoc-markdown-2.0.5.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "2f93a2afc582297c727fb4965b46368e", "sha256": "423efecffa1f35432c3546dbe9efec350e2a6377b71a92c9ecebb4b004703079"}, "downloads": -1, "filename": "pydoc-markdown-2.1.0.tar.gz", "has_sig": false, "md5_digest": "2f93a2afc582297c727fb4965b46368e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18665, "upload_time": "2020-03-01T03:15:42", "upload_time_iso_8601": "2020-03-01T03:15:42.481709Z", "url": "https://files.pythonhosted.org/packages/14/74/c3285d54cfd22f2191cf57e0c7b9a0805aae6d4b31819bff430c7e157b61/pydoc-markdown-2.1.0.tar.gz", "yanked": false}], "2.1.0.post1": [{"comment_text": "", "digests": {"md5": "2f8aa9444c225ad14a89bac9174d594a", "sha256": "5a2f8fbe557586f1d1c9d791413c49eb44a13f2bb9430a418bb1e6fd94e94a2f"}, "downloads": -1, "filename": "pydoc-markdown-2.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "2f8aa9444c225ad14a89bac9174d594a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18925, "upload_time": "2020-03-01T03:22:49", "upload_time_iso_8601": "2020-03-01T03:22:49.244184Z", "url": "https://files.pythonhosted.org/packages/a6/de/962a32554f496750f8fae7914da002b3cfbe8b4675b9546b371ee7bd86a8/pydoc-markdown-2.1.0.post1.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "94f3abde78686600073d43ba7bd5c454", "sha256": "3b279cc5f01afc2f30c6f5f54a8a4af5c1a3bc18d920da368f4832407088ddec"}, "downloads": -1, "filename": "pydoc-markdown-2.1.1.tar.gz", "has_sig": false, "md5_digest": "94f3abde78686600073d43ba7bd5c454", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20310, "upload_time": "2020-03-02T19:21:55", "upload_time_iso_8601": "2020-03-02T19:21:55.204600Z", "url": "https://files.pythonhosted.org/packages/21/2d/4a6d6683ce9e687ee214a9731783f3f3a77048496fe6b3c7a84232e1bb47/pydoc-markdown-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "7cbbd2461b85fe2aba2e4d3c5e0951ec", "sha256": "62957e41df5ae28665e3d23c9013f94a89121ac25549820a562e3edf514a5e7f"}, "downloads": -1, "filename": "pydoc-markdown-2.1.2.tar.gz", "has_sig": false, "md5_digest": "7cbbd2461b85fe2aba2e4d3c5e0951ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20366, "upload_time": "2020-03-07T17:43:46", "upload_time_iso_8601": "2020-03-07T17:43:46.314642Z", "url": "https://files.pythonhosted.org/packages/e2/92/f716dcc3eef0f486f7c4e1fad274ed5a6afe8752d86308ea10a51c9b0cb5/pydoc-markdown-2.1.2.tar.gz", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "e07bbb8a4d3a23b73305dbb0f1e2d783", "sha256": "6f4da1a1f3eaa2ce485833b1c5d250727d0225217718d2b6f640845032c7ff0a"}, "downloads": -1, "filename": "pydoc-markdown-2.1.3.tar.gz", "has_sig": false, "md5_digest": "e07bbb8a4d3a23b73305dbb0f1e2d783", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20470, "upload_time": "2020-03-21T00:52:49", "upload_time_iso_8601": "2020-03-21T00:52:49.327077Z", "url": "https://files.pythonhosted.org/packages/61/e4/f494f0a0c414052963b94b37cf4e0c091e0b45fb9552f9e8cbc65b9f8977/pydoc-markdown-2.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e07bbb8a4d3a23b73305dbb0f1e2d783", "sha256": "6f4da1a1f3eaa2ce485833b1c5d250727d0225217718d2b6f640845032c7ff0a"}, "downloads": -1, "filename": "pydoc-markdown-2.1.3.tar.gz", "has_sig": false, "md5_digest": "e07bbb8a4d3a23b73305dbb0f1e2d783", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20470, "upload_time": "2020-03-21T00:52:49", "upload_time_iso_8601": "2020-03-21T00:52:49.327077Z", "url": "https://files.pythonhosted.org/packages/61/e4/f494f0a0c414052963b94b37cf4e0c091e0b45fb9552f9e8cbc65b9f8977/pydoc-markdown-2.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:53 2020"}