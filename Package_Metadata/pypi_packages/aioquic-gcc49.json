{"info": {"author": "Madricas", "author_email": "madricas@outlook.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP"], "description": "aioquic\n=======\n\n|rtd| |pypi-v| |pypi-pyversions| |pypi-l| |travis| |codecov| |black|\n\n.. |rtd| image:: https://readthedocs.org/projects/aioquic/badge/?version=latest\n    :target: https://aioquic.readthedocs.io/\n\n.. |pypi-v| image:: https://img.shields.io/pypi/v/aioquic.svg\n    :target: https://pypi.python.org/pypi/aioquic\n\n.. |pypi-pyversions| image:: https://img.shields.io/pypi/pyversions/aioquic.svg\n    :target: https://pypi.python.org/pypi/aioquic\n\n.. |pypi-l| image:: https://img.shields.io/pypi/l/aioquic.svg\n    :target: https://pypi.python.org/pypi/aioquic\n\n.. |travis| image:: https://img.shields.io/travis/com/aiortc/aioquic.svg\n    :target: https://travis-ci.com/aiortc/aioquic\n\n.. |codecov| image:: https://img.shields.io/codecov/c/github/aiortc/aioquic.svg\n    :target: https://codecov.io/gh/aiortc/aioquic\n\n.. |black| image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/python/black\n\nWhat is ``aioquic``?\n--------------------\n\n``aioquic`` is a library for the QUIC network protocol in Python. It features\na minimal TLS 1.3 implementation, a QUIC stack and an HTTP/3 stack.\n\nQUIC standardisation is not finalised yet, but ``aioquic`` closely tracks the\nspecification drafts and is regularly tested for interoperability against other\n`QUIC implementations`_.\n\nTo learn more about ``aioquic`` please `read the documentation`_.\n\nWhy should I use ``aioquic``?\n-----------------------------\n\n``aioquic`` has been designed to be embedded into Python client and server\nlibraries wishing to support QUIC and / or HTTP/3. The goal is to provide a\ncommon codebase for Python libraries in the hope of avoiding duplicated effort.\n\nBoth the QUIC and the HTTP/3 APIs follow the \"bring your own I/O\" pattern,\nleaving actual I/O operations to the API user. This approach has a number of\nadvantages including making the code testable and allowing integration with\ndifferent concurrency models.\n\nFeatures\n--------\n\n- QUIC stack conforming with draft-23\n- HTTP/3 stack conforming with draft-23\n- minimal TLS 1.3 implementation\n- IPv4 and IPv6 support\n- connection migration and NAT rebinding\n- logging TLS traffic secrets\n- logging QUIC events in QLOG format\n- HTTP/3 server push support\n\nRunning the examples\n--------------------\n\n``aioquic`` requires Python 3.6 or better, and the OpenSSL development headers.\n\n.. code-block:: console\n\n   $ sudo apt install libssl-dev python3-dev\n\nAfter checking out the code using git you can run:\n\n.. code-block:: console\n\n   $ pip install -e .\n   $ pip install aiofiles asgiref httpbin starlette wsproto\n\nHTTP/3 server\n.............\n\nYou can run the example server, which handles both HTTP/0.9 and HTTP/3:\n\n.. code-block:: console\n\n   $ python examples/http3_server.py --certificate tests/ssl_cert.pem --private-key tests/ssl_key.pem\n\nHTTP/3 client\n.............\n\nYou can run the example client to perform an HTTP/3 request:\n\n.. code-block:: console\n\n  $ python examples/http3_client.py --ca-certs tests/pycacert.pem https://localhost:4433/\n\nAlternatively you can perform an HTTP/0.9 request:\n\n.. code-block:: console\n\n  $ python examples/http3_client.py --ca-certs tests/pycacert.pem --legacy-http https://localhost:4433/\n\nYou can also open a WebSocket over HTTP/3:\n\n.. code-block:: console\n\n  $ python examples/http3_client.py --ca-certs tests/pycacert.pem wss://localhost:4433/ws\n\nLicense\n-------\n\n``aioquic`` is released under the `BSD license`_.\n\n.. _read the documentation: https://aioquic.readthedocs.io/en/latest/\n.. _QUIC implementations: https://github.com/quicwg/base-drafts/wiki/Implementations\n.. _cryptography: https://cryptography.io/\n.. _BSD license: https://aioquic.readthedocs.io/en/latest/license.html", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/madricas/aioquic", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "aioquic-gcc49", "package_url": "https://pypi.org/project/aioquic-gcc49/", "platform": "", "project_url": "https://pypi.org/project/aioquic-gcc49/", "project_urls": {"Homepage": "https://github.com/madricas/aioquic"}, "release_url": "https://pypi.org/project/aioquic-gcc49/0.8.2/", "requires_dist": null, "requires_python": "", "summary": "An implementation of QUIC and HTTP/3", "version": "0.8.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://aioquic.readthedocs.io/\" rel=\"nofollow\"><img alt=\"rtd\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/115f6f2612cc79360e0beb0e45f687f3bdb147aa/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61696f717569632f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://pypi.python.org/pypi/aioquic\" rel=\"nofollow\"><img alt=\"pypi-v\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43945b5013c2159c8a361c8680be460cd739e5f9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f717569632e737667\"></a> <a href=\"https://pypi.python.org/pypi/aioquic\" rel=\"nofollow\"><img alt=\"pypi-pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91ce727c2ea991e6273d4d7e92494813b34b6c90/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f61696f717569632e737667\"></a> <a href=\"https://pypi.python.org/pypi/aioquic\" rel=\"nofollow\"><img alt=\"pypi-l\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0dfbc7368c826f3e75e98d5aadf5e0f234b87c57/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f61696f717569632e737667\"></a> <a href=\"https://travis-ci.com/aiortc/aioquic\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ee7ffa307776891bd9c6eeb68fa60ea64af3c632/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f61696f7274632f61696f717569632e737667\"></a> <a href=\"https://codecov.io/gh/aiortc/aioquic\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/84f9941d5e04fe979b3cbde699ec2e577a2f927f/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f61696f7274632f61696f717569632e737667\"></a> <a href=\"https://github.com/python/black\" rel=\"nofollow\"><img alt=\"black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<div id=\"what-is-aioquic\">\n<h2>What is <tt>aioquic</tt>?</h2>\n<p><tt>aioquic</tt> is a library for the QUIC network protocol in Python. It features\na minimal TLS 1.3 implementation, a QUIC stack and an HTTP/3 stack.</p>\n<p>QUIC standardisation is not finalised yet, but <tt>aioquic</tt> closely tracks the\nspecification drafts and is regularly tested for interoperability against other\n<a href=\"https://github.com/quicwg/base-drafts/wiki/Implementations\" rel=\"nofollow\">QUIC implementations</a>.</p>\n<p>To learn more about <tt>aioquic</tt> please <a href=\"https://aioquic.readthedocs.io/en/latest/\" rel=\"nofollow\">read the documentation</a>.</p>\n</div>\n<div id=\"why-should-i-use-aioquic\">\n<h2>Why should I use <tt>aioquic</tt>?</h2>\n<p><tt>aioquic</tt> has been designed to be embedded into Python client and server\nlibraries wishing to support QUIC and / or HTTP/3. The goal is to provide a\ncommon codebase for Python libraries in the hope of avoiding duplicated effort.</p>\n<p>Both the QUIC and the HTTP/3 APIs follow the \u201cbring your own I/O\u201d pattern,\nleaving actual I/O operations to the API user. This approach has a number of\nadvantages including making the code testable and allowing integration with\ndifferent concurrency models.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>QUIC stack conforming with draft-23</li>\n<li>HTTP/3 stack conforming with draft-23</li>\n<li>minimal TLS 1.3 implementation</li>\n<li>IPv4 and IPv6 support</li>\n<li>connection migration and NAT rebinding</li>\n<li>logging TLS traffic secrets</li>\n<li>logging QUIC events in QLOG format</li>\n<li>HTTP/3 server push support</li>\n</ul>\n</div>\n<div id=\"running-the-examples\">\n<h2>Running the examples</h2>\n<p><tt>aioquic</tt> requires Python 3.6 or better, and the OpenSSL development headers.</p>\n<pre><span class=\"gp\">$</span> sudo apt install libssl-dev python3-dev\n</pre>\n<p>After checking out the code using git you can run:</p>\n<pre><span class=\"gp\">$</span> pip install -e .\n<span class=\"gp\">$</span> pip install aiofiles asgiref httpbin starlette wsproto\n</pre>\n<div id=\"http-3-server\">\n<h3>HTTP/3 server</h3>\n<p>You can run the example server, which handles both HTTP/0.9 and HTTP/3:</p>\n<pre><span class=\"gp\">$</span> python examples/http3_server.py --certificate tests/ssl_cert.pem --private-key tests/ssl_key.pem\n</pre>\n</div>\n<div id=\"http-3-client\">\n<h3>HTTP/3 client</h3>\n<p>You can run the example client to perform an HTTP/3 request:</p>\n<pre><span class=\"gp\">$</span> python examples/http3_client.py --ca-certs tests/pycacert.pem https://localhost:4433/\n</pre>\n<p>Alternatively you can perform an HTTP/0.9 request:</p>\n<pre><span class=\"gp\">$</span> python examples/http3_client.py --ca-certs tests/pycacert.pem --legacy-http https://localhost:4433/\n</pre>\n<p>You can also open a WebSocket over HTTP/3:</p>\n<pre><span class=\"gp\">$</span> python examples/http3_client.py --ca-certs tests/pycacert.pem wss://localhost:4433/ws\n</pre>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><tt>aioquic</tt> is released under the <a href=\"https://aioquic.readthedocs.io/en/latest/license.html\" rel=\"nofollow\">BSD license</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6024095, "releases": {"0.8.2": [{"comment_text": "", "digests": {"md5": "635047f441416abf46c54decd0ff8167", "sha256": "d824577e2b68d2573d4838d4a2704abded040e9f693f4d358263d28e8f56d5fe"}, "downloads": -1, "filename": "aioquic-gcc49-0.8.2.tar.gz", "has_sig": false, "md5_digest": "635047f441416abf46c54decd0ff8167", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 123995, "upload_time": "2019-10-24T14:13:50", "upload_time_iso_8601": "2019-10-24T14:13:50.230423Z", "url": "https://files.pythonhosted.org/packages/61/c0/e0798f380d722b7a28e4abf3f1ab3e4d9917fc0d4ad12e96a695e216260d/aioquic-gcc49-0.8.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "635047f441416abf46c54decd0ff8167", "sha256": "d824577e2b68d2573d4838d4a2704abded040e9f693f4d358263d28e8f56d5fe"}, "downloads": -1, "filename": "aioquic-gcc49-0.8.2.tar.gz", "has_sig": false, "md5_digest": "635047f441416abf46c54decd0ff8167", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 123995, "upload_time": "2019-10-24T14:13:50", "upload_time_iso_8601": "2019-10-24T14:13:50.230423Z", "url": "https://files.pythonhosted.org/packages/61/c0/e0798f380d722b7a28e4abf3f1ab3e4d9917fc0d4ad12e96a695e216260d/aioquic-gcc49-0.8.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:54 2020"}