{"info": {"author": "Hardy & Ellis Inventions LTD", "author_email": "support@heinventions.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# docnado\n\nA rapid documentation tool to blow you away.\n\nDocnado makes it easy to start and maintain a Markdown documentation project.  Store your own data your own way.\n\n[![PyPI version](https://badge.fury.io/py/docnado.svg)](https://badge.fury.io/py/docnado)\n\n# Basic Features\n\nDocnado renders an adapted Markdown to provide:\n\n* Images, Video, YouTube links, CSV tables.\n* Code highlighting.\n* File download blocks.\n* Lists and Tables.\n* Document defined template selection.\n* Document Meta-data.\n* Auto-generated index sidebar.\n\nDocnado can:\n\n* Output documents as insecure HTML on a localhost.\n* Output documents as PDF files via the HTML server.\n* Create a **static** set of HTML files that contain the documentation and related resources.\n\n# Advanced Features\n\n* Automatically find broken reference links in the generated HTML\n* Automatically find orphan files (i.e. images) that are not referenced by generated HTML\n\n# Usage\n\nBasic usage with the default template:\n\n```bash\npython -m pip install docnado --upgrade\nmkdir docs\nvim docs/home.md # then add some documentation\ndocnado\n```\n\nAdvanced usage with a custom templates and styles:\n\n```bash\npython -m pip install docnado --upgrade\ndocnado --new # copies sample style and docs into working directory\ndocnado # run the server\n```\n\n## Getting Started\n\nIf you are running from the script:\n\n```bash\npython docnado.py                       # start a server on localhost:5000\n\npython docnado.py -h                    # list argument help\n\npython docnado.py --html                # freeze the server into a static site as a set of HTML files\n                                        # this will exit with -1 if there was a problem parsing any file\n\npython docnado.py --pdf                 # generate a set of pdf files for each .md file - won't pull through\n                                        # static resource files like with the --html command\n\npython docnado.py --nav-limit           # include certain document trees only based on a comma separated list of\n                                        # nav strings. e.g. Tooling,Document\n\npython docnado.py --new                 # copy default templates and sample docs into the working directory\n                                        # and update the config too, only if they don't already exist\n\npython docnado.py --new-force           # copy default templates and sample docs into the working directory\n                                        # and update the config too, this will overwrite any existing docs or\n                                        # configs.\n\npython docnado.py --dirs                # display all the different directories Docnado will use to generate\n                                        # the documentation\n\npython docnado.py --generate-meta DIR   # generate metadata for markdown files in the specified directory\n\npython docnado.py --find-orphans        # display unreferenced media assets in the documentation\n\npython docnado.py --find-broken-links   # display external broken links in the documentation\n\npython docnado.py --port PORTNUMBER     # specify a port for Docnado to accept requests on\n\npython docnado.py --host HOSTADDRESS    # set the docnado development server to listen on a specified IP address.\n                                        # use '0.0.0.0' to listen on all available IPs\n```\n\n### Writing Documentation\n\nDocuments are managed using `meta-data` at the top of each document.\nDocuments can select which `template` they present themselves with.\nDocuments must end in **lowercase** `.md`. For example: `mydocument.md`.\n\n\n### Environment Variables\n\n* `DN_FLASK_DEBUG` flag for enabling or disabling flask debug. Defaults to `TRUE`.\n* `DN_RELOAD_ON_CHANGES` flag for reloading the server when a file changes. Defaults to `TRUE`.\n* `DN_WKHTMLTOPDF` the path to the WkHTMLtoPDF binary. Defaults to `wkhtmltopdf_0.12.5.exe`.\n* `DN_DOCS_DIR` the path to the directory that contains the documents. Defaults to `docs`.\n* `DN_STYLE_DIR` the path to the directory that contains the style templates and resources. Defaults to `style`.\n* `DN_PROJECT_LOGO` the path to the project logo *PNG* file. Defaults to `logo.png` in the current working directory.\n\n## Development\n\n### Virtual Environment\n\n```bash\npython -m virtualenv env\nenv/Scripts/activate.bat # or the bash equivalent\npip install -r requirements.txt\n```\n\n```bash\npython docnado.py # with options\n```\n\n```bash\npip install flake8\nflake8 docnado.py --max-line-length=120\n```\n\n### WkHTMLtoPDF\n\nTo enable PDF output, WkHTMLtoPDF must be set in the config `DN_WKHTMLTOPDF` or `wkhtmltopdf_0.12.5.exe` placed in working directory.\n\nThis build uses version 0.12.5. Get it from here: https://wkhtmltopdf.org/downloads.html\n\n### SCSS\n\nThe default theme is built using SCSS.\n\nThe SASSC compiler can be found here: http://libsass.ocbnet.ch/installer/\nUsage: `sassc style/static/default.scss style/static/default.css`\n\nIf you want it to auto-watch, run as admin from this directory, and remember to disable your browser cache:\n\n```bash\npip install watchdog\nwatchmedo shell-command --patterns=\"*.scss\" --recursive --command='echo \"${watch_src_path}\" && sassc style/static/default.scss style/static/default.css' .\n````\n\n### Style\n\nWe use `flake8 docnado.py --max-line-length=110` to static check the code.\n\n### Rebuilding the Package\n\nPyPi\n\n```bash\npython -m pip install --user --upgrade setuptools wheel twine\npython setup.py sdist bdist_wheel\n\npython -m twine upload dist/*\n```\n\nExecutable\n\n```bash\nenv\\Scripts\\activate.bat\npip install pyinstaller\npyinstaller docnado.py\n```\n\n## Roadmap\n\nWe are requesting pull-requests for the following features:\n\n* [ ] Test cases and CI steps\n* [ ] Responsive design in default template.\n* [ ] Generate a large PDF file made from multiple documents (including table of contents with page numbers).\n* [ ] Gravatar print CSS / absent internet in the default theme.\n* [ ] Examples of Python extensions and SCSS extensions.\n* [ ] New template themes.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/HEInventions/docnado", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "docnado", "package_url": "https://pypi.org/project/docnado/", "platform": "", "project_url": "https://pypi.org/project/docnado/", "project_urls": {"Homepage": "https://github.com/HEInventions/docnado"}, "release_url": "https://pypi.org/project/docnado/1.0.10/", "requires_dist": ["Flask (==1.1.2)", "Markdown (==2.6.11)", "timeago (==1.0.8)", "Frozen-Flask (==0.15)", "beautifulsoup4 (==4.9.0)", "requests (==2.23.0)", "watchdog (==0.10.2)"], "requires_python": ">=3.6.0", "summary": "A rapid documentation tool to blow you away.", "version": "1.0.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>docnado</h1>\n<p>A rapid documentation tool to blow you away.</p>\n<p>Docnado makes it easy to start and maintain a Markdown documentation project.  Store your own data your own way.</p>\n<p><a href=\"https://badge.fury.io/py/docnado\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b8d65396b6d6d390c657781739677b24ba43a9e1/68747470733a2f2f62616467652e667572792e696f2f70792f646f636e61646f2e737667\"></a></p>\n<h1>Basic Features</h1>\n<p>Docnado renders an adapted Markdown to provide:</p>\n<ul>\n<li>Images, Video, YouTube links, CSV tables.</li>\n<li>Code highlighting.</li>\n<li>File download blocks.</li>\n<li>Lists and Tables.</li>\n<li>Document defined template selection.</li>\n<li>Document Meta-data.</li>\n<li>Auto-generated index sidebar.</li>\n</ul>\n<p>Docnado can:</p>\n<ul>\n<li>Output documents as insecure HTML on a localhost.</li>\n<li>Output documents as PDF files via the HTML server.</li>\n<li>Create a <strong>static</strong> set of HTML files that contain the documentation and related resources.</li>\n</ul>\n<h1>Advanced Features</h1>\n<ul>\n<li>Automatically find broken reference links in the generated HTML</li>\n<li>Automatically find orphan files (i.e. images) that are not referenced by generated HTML</li>\n</ul>\n<h1>Usage</h1>\n<p>Basic usage with the default template:</p>\n<pre>python -m pip install docnado --upgrade\nmkdir docs\nvim docs/home.md <span class=\"c1\"># then add some documentation</span>\ndocnado\n</pre>\n<p>Advanced usage with a custom templates and styles:</p>\n<pre>python -m pip install docnado --upgrade\ndocnado --new <span class=\"c1\"># copies sample style and docs into working directory</span>\ndocnado <span class=\"c1\"># run the server</span>\n</pre>\n<h2>Getting Started</h2>\n<p>If you are running from the script:</p>\n<pre>python docnado.py                       <span class=\"c1\"># start a server on localhost:5000</span>\n\npython docnado.py -h                    <span class=\"c1\"># list argument help</span>\n\npython docnado.py --html                <span class=\"c1\"># freeze the server into a static site as a set of HTML files</span>\n                                        <span class=\"c1\"># this will exit with -1 if there was a problem parsing any file</span>\n\npython docnado.py --pdf                 <span class=\"c1\"># generate a set of pdf files for each .md file - won't pull through</span>\n                                        <span class=\"c1\"># static resource files like with the --html command</span>\n\npython docnado.py --nav-limit           <span class=\"c1\"># include certain document trees only based on a comma separated list of</span>\n                                        <span class=\"c1\"># nav strings. e.g. Tooling,Document</span>\n\npython docnado.py --new                 <span class=\"c1\"># copy default templates and sample docs into the working directory</span>\n                                        <span class=\"c1\"># and update the config too, only if they don't already exist</span>\n\npython docnado.py --new-force           <span class=\"c1\"># copy default templates and sample docs into the working directory</span>\n                                        <span class=\"c1\"># and update the config too, this will overwrite any existing docs or</span>\n                                        <span class=\"c1\"># configs.</span>\n\npython docnado.py --dirs                <span class=\"c1\"># display all the different directories Docnado will use to generate</span>\n                                        <span class=\"c1\"># the documentation</span>\n\npython docnado.py --generate-meta DIR   <span class=\"c1\"># generate metadata for markdown files in the specified directory</span>\n\npython docnado.py --find-orphans        <span class=\"c1\"># display unreferenced media assets in the documentation</span>\n\npython docnado.py --find-broken-links   <span class=\"c1\"># display external broken links in the documentation</span>\n\npython docnado.py --port PORTNUMBER     <span class=\"c1\"># specify a port for Docnado to accept requests on</span>\n\npython docnado.py --host HOSTADDRESS    <span class=\"c1\"># set the docnado development server to listen on a specified IP address.</span>\n                                        <span class=\"c1\"># use '0.0.0.0' to listen on all available IPs</span>\n</pre>\n<h3>Writing Documentation</h3>\n<p>Documents are managed using <code>meta-data</code> at the top of each document.\nDocuments can select which <code>template</code> they present themselves with.\nDocuments must end in <strong>lowercase</strong> <code>.md</code>. For example: <code>mydocument.md</code>.</p>\n<h3>Environment Variables</h3>\n<ul>\n<li><code>DN_FLASK_DEBUG</code> flag for enabling or disabling flask debug. Defaults to <code>TRUE</code>.</li>\n<li><code>DN_RELOAD_ON_CHANGES</code> flag for reloading the server when a file changes. Defaults to <code>TRUE</code>.</li>\n<li><code>DN_WKHTMLTOPDF</code> the path to the WkHTMLtoPDF binary. Defaults to <code>wkhtmltopdf_0.12.5.exe</code>.</li>\n<li><code>DN_DOCS_DIR</code> the path to the directory that contains the documents. Defaults to <code>docs</code>.</li>\n<li><code>DN_STYLE_DIR</code> the path to the directory that contains the style templates and resources. Defaults to <code>style</code>.</li>\n<li><code>DN_PROJECT_LOGO</code> the path to the project logo <em>PNG</em> file. Defaults to <code>logo.png</code> in the current working directory.</li>\n</ul>\n<h2>Development</h2>\n<h3>Virtual Environment</h3>\n<pre>python -m virtualenv env\nenv/Scripts/activate.bat <span class=\"c1\"># or the bash equivalent</span>\npip install -r requirements.txt\n</pre>\n<pre>python docnado.py <span class=\"c1\"># with options</span>\n</pre>\n<pre>pip install flake8\nflake8 docnado.py --max-line-length<span class=\"o\">=</span><span class=\"m\">120</span>\n</pre>\n<h3>WkHTMLtoPDF</h3>\n<p>To enable PDF output, WkHTMLtoPDF must be set in the config <code>DN_WKHTMLTOPDF</code> or <code>wkhtmltopdf_0.12.5.exe</code> placed in working directory.</p>\n<p>This build uses version 0.12.5. Get it from here: <a href=\"https://wkhtmltopdf.org/downloads.html\" rel=\"nofollow\">https://wkhtmltopdf.org/downloads.html</a></p>\n<h3>SCSS</h3>\n<p>The default theme is built using SCSS.</p>\n<p>The SASSC compiler can be found here: <a href=\"http://libsass.ocbnet.ch/installer/\" rel=\"nofollow\">http://libsass.ocbnet.ch/installer/</a>\nUsage: <code>sassc style/static/default.scss style/static/default.css</code></p>\n<p>If you want it to auto-watch, run as admin from this directory, and remember to disable your browser cache:</p>\n<pre>pip install watchdog\nwatchmedo shell-command --patterns<span class=\"o\">=</span><span class=\"s2\">\"*.scss\"</span> --recursive --command<span class=\"o\">=</span><span class=\"s1\">'echo \"${watch_src_path}\" &amp;&amp; sassc style/static/default.scss style/static/default.css'</span> .\n</pre>\n<h3>Style</h3>\n<p>We use <code>flake8 docnado.py --max-line-length=110</code> to static check the code.</p>\n<h3>Rebuilding the Package</h3>\n<p>PyPi</p>\n<pre>python -m pip install --user --upgrade setuptools wheel twine\npython setup.py sdist bdist_wheel\n\npython -m twine upload dist/*\n</pre>\n<p>Executable</p>\n<pre>env<span class=\"se\">\\S</span>cripts<span class=\"se\">\\a</span>ctivate.bat\npip install pyinstaller\npyinstaller docnado.py\n</pre>\n<h2>Roadmap</h2>\n<p>We are requesting pull-requests for the following features:</p>\n<ul>\n<li>[ ] Test cases and CI steps</li>\n<li>[ ] Responsive design in default template.</li>\n<li>[ ] Generate a large PDF file made from multiple documents (including table of contents with page numbers).</li>\n<li>[ ] Gravatar print CSS / absent internet in the default theme.</li>\n<li>[ ] Examples of Python extensions and SCSS extensions.</li>\n<li>[ ] New template themes.</li>\n</ul>\n\n          </div>"}, "last_serial": 7040117, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0f17a3008deaacbe0cb9ed92ca475aaa", "sha256": "361b046a74ad9d6718f7fa7ba46878b15d35f07188cf11c4c13cc07dbec447fc"}, "downloads": -1, "filename": "docnado-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0f17a3008deaacbe0cb9ed92ca475aaa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 10588983, "upload_time": "2018-10-09T16:04:32", "upload_time_iso_8601": "2018-10-09T16:04:32.657100Z", "url": "https://files.pythonhosted.org/packages/73/7a/875d4bd50a5b1cfb081e97094f54ba9bbb87b42a77bbbdad81851ac7957b/docnado-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1d069bf80c16f6df4aa70a71ff5d536", "sha256": "c5f02857eba6757e137bb82ecd666fd020a402459a39f53b20ada2238a267538"}, "downloads": -1, "filename": "docnado-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b1d069bf80c16f6df4aa70a71ff5d536", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 10580546, "upload_time": "2018-10-09T16:04:40", "upload_time_iso_8601": "2018-10-09T16:04:40.893158Z", "url": "https://files.pythonhosted.org/packages/8d/46/9e13c87ae451b955f21a3866a5b97315f82d5c1654d6e163cecd2c59084b/docnado-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "3a184132c46464dc5344c35786e2e50f", "sha256": "a75b7cca65e5952088268049ceecbe09f58dcd66c05242004a7cbd95cde09706"}, "downloads": -1, "filename": "docnado-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3a184132c46464dc5344c35786e2e50f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 10589084, "upload_time": "2018-10-10T17:05:49", "upload_time_iso_8601": "2018-10-10T17:05:49.822452Z", "url": "https://files.pythonhosted.org/packages/0e/bd/eddac2099ac605eddc9ee651e4bb4d60cbde72c889099d4bf77b26c50d3c/docnado-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6baab8457a9078ce3c198b128b74c1c0", "sha256": "488b1dcaa20a4efdf3c46afbae8518e44c8d0c414229f3c92ef7b866ce0436ac"}, "downloads": -1, "filename": "docnado-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6baab8457a9078ce3c198b128b74c1c0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 10580620, "upload_time": "2018-10-10T17:05:54", "upload_time_iso_8601": "2018-10-10T17:05:54.943729Z", "url": "https://files.pythonhosted.org/packages/9a/aa/e6ea5f79da71a894f64f4c94f14fe11b9e466301a4434202c8fe11f978e0/docnado-1.0.1.tar.gz", "yanked": false}], "1.0.10": [{"comment_text": "", "digests": {"md5": "7b811d0f5b7ec97bc0ae844d32966089", "sha256": "934d684b32e6e20444113fc0dc652ae020ddbf72fd97974760856186a1093d3e"}, "downloads": -1, "filename": "docnado-1.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "7b811d0f5b7ec97bc0ae844d32966089", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 5829721, "upload_time": "2020-04-17T13:04:59", "upload_time_iso_8601": "2020-04-17T13:04:59.312639Z", "url": "https://files.pythonhosted.org/packages/c0/a7/e866f12bb8c52fec8cbdc492f55c654c67bcdb83178de936002f2816e3ef/docnado-1.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77ec49b0a0953ae40294f896f5c4a880", "sha256": "a277130ab2a16922fc94cd6a71fac8951c0188265f8714768351112c770986c5"}, "downloads": -1, "filename": "docnado-1.0.10.tar.gz", "has_sig": false, "md5_digest": "77ec49b0a0953ae40294f896f5c4a880", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 5818765, "upload_time": "2020-04-17T13:05:11", "upload_time_iso_8601": "2020-04-17T13:05:11.973994Z", "url": "https://files.pythonhosted.org/packages/a8/11/de846b131c3e8be3c7faa4d1a32c3e749a86b1a38b951ee335a3807e0f2b/docnado-1.0.10.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "976241640ca7dab7cde107bda5fc6a62", "sha256": "000c0c7d193be6232e23d2cdb54b31fbca064db702d20d8a58c2fe000c5bb0df"}, "downloads": -1, "filename": "docnado-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "976241640ca7dab7cde107bda5fc6a62", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 5819706, "upload_time": "2018-11-05T18:43:03", "upload_time_iso_8601": "2018-11-05T18:43:03.105345Z", "url": "https://files.pythonhosted.org/packages/9f/2f/aa56964be82c3a52e1abc0699b34a9bfd410760c8ccd8f86dd21075020ae/docnado-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ce0b1d630f531666dab9ce52ceda8ec", "sha256": "e2202c904e857df4850467a01e669f9cc83bc151a6358fa28bca82fb409f060d"}, "downloads": -1, "filename": "docnado-1.0.3.tar.gz", "has_sig": false, "md5_digest": "5ce0b1d630f531666dab9ce52ceda8ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 5808234, "upload_time": "2018-11-05T18:43:07", "upload_time_iso_8601": "2018-11-05T18:43:07.515269Z", "url": "https://files.pythonhosted.org/packages/8f/24/920fa3c305cb612263eab950538939a3ce24c30e774b83985ebe15357e6a/docnado-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "488ef6b8a8755b3e170bea56c808fba5", "sha256": "95f36ba263fb6d54357ef677fafa6e6092c6e8b44d874043469d1f399583ae6c"}, "downloads": -1, "filename": "docnado-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "488ef6b8a8755b3e170bea56c808fba5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 5819706, "upload_time": "2018-11-09T21:21:46", "upload_time_iso_8601": "2018-11-09T21:21:46.289799Z", "url": "https://files.pythonhosted.org/packages/e4/98/b82156eaadeccd45989aad88aba0dea65eb1cfabbfe9c74f2328d4275f38/docnado-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31d0f6f666f117e752320fcce76c1659", "sha256": "a48b9169efc149de77165e87fe9595e079969c826eb0fa00d3e875fc585f5c53"}, "downloads": -1, "filename": "docnado-1.0.4.tar.gz", "has_sig": false, "md5_digest": "31d0f6f666f117e752320fcce76c1659", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 5808120, "upload_time": "2018-11-09T21:23:09", "upload_time_iso_8601": "2018-11-09T21:23:09.631548Z", "url": "https://files.pythonhosted.org/packages/f3/a8/c8e94ff43bf31997309664b2e315f4541676792bcd769113c97bc82cedd6/docnado-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "1c63d752674b96694906189839b77e73", "sha256": "6b1a89bfb6942245e5d3c363666700f1fa04a6f482aa92869d421c246c4c1b47"}, "downloads": -1, "filename": "docnado-1.0.5.tar.gz", "has_sig": false, "md5_digest": "1c63d752674b96694906189839b77e73", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 5810579, "upload_time": "2019-02-15T17:13:15", "upload_time_iso_8601": "2019-02-15T17:13:15.240551Z", "url": "https://files.pythonhosted.org/packages/fe/4e/dda91ce9c412cf6c7fcb2bbf5bbd031082b4a13c89a9758d95756b92d61a/docnado-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "68de3298ea5ed9598063357c625127a3", "sha256": "7d90209e0a435fe85dd7fe2e22c57b96face30e6dbe1aaff6d5039b8dbcb746c"}, "downloads": -1, "filename": "docnado-1.0.6.tar.gz", "has_sig": false, "md5_digest": "68de3298ea5ed9598063357c625127a3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 5810583, "upload_time": "2019-02-18T18:03:30", "upload_time_iso_8601": "2019-02-18T18:03:30.105930Z", "url": "https://files.pythonhosted.org/packages/4a/ea/462a7e3124e4dccbf2b59cb80c2ec136d6517d2b69cdaf07f25da1617f17/docnado-1.0.6.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "413d57b0e9f491a48d64bdb9d9d98772", "sha256": "54eba9685ed268db89d23bfec9dd08fe1e3df87e46e36d385edf218cce4e0e8d"}, "downloads": -1, "filename": "docnado-1.0.8.tar.gz", "has_sig": false, "md5_digest": "413d57b0e9f491a48d64bdb9d9d98772", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 5812533, "upload_time": "2019-04-12T15:05:48", "upload_time_iso_8601": "2019-04-12T15:05:48.300055Z", "url": "https://files.pythonhosted.org/packages/bf/cd/e49b0fb49baa65a6389d44f5b596a8091bce40c3b5120ba5a342be35867a/docnado-1.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7b811d0f5b7ec97bc0ae844d32966089", "sha256": "934d684b32e6e20444113fc0dc652ae020ddbf72fd97974760856186a1093d3e"}, "downloads": -1, "filename": "docnado-1.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "7b811d0f5b7ec97bc0ae844d32966089", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 5829721, "upload_time": "2020-04-17T13:04:59", "upload_time_iso_8601": "2020-04-17T13:04:59.312639Z", "url": "https://files.pythonhosted.org/packages/c0/a7/e866f12bb8c52fec8cbdc492f55c654c67bcdb83178de936002f2816e3ef/docnado-1.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77ec49b0a0953ae40294f896f5c4a880", "sha256": "a277130ab2a16922fc94cd6a71fac8951c0188265f8714768351112c770986c5"}, "downloads": -1, "filename": "docnado-1.0.10.tar.gz", "has_sig": false, "md5_digest": "77ec49b0a0953ae40294f896f5c4a880", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 5818765, "upload_time": "2020-04-17T13:05:11", "upload_time_iso_8601": "2020-04-17T13:05:11.973994Z", "url": "https://files.pythonhosted.org/packages/a8/11/de846b131c3e8be3c7faa4d1a32c3e749a86b1a38b951ee335a3807e0f2b/docnado-1.0.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:44 2020"}