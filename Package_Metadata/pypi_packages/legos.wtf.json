{"info": {"author": "Brenton Briggs II", "author_email": "briggs.brenton@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3"], "description": "Wikipedia Top Finder\n====================\n\n|Travis| |PyPI| |PyPI|\n\n|PyPI| |PyPI| |PyPI|\n\nEver wish you could do an \"I'm feeling lucky\" search on Wikipedia right\nfrom chat? Want to be able to pull up a wikipedia link right there in\nthe group and settle the debate once and for all? This module will\nsearch the English langauge Wikipedia for the query you provide and\nreturn the URL for the top matching page.\n\nUsage\n-----\n\nThis lego listens for ``!wtf`` at the beginning of a message and\nprocesses everything after it as a query.\n\nExample: ``!wtf python`` will return\nhttps://en.wikipedia.org/wiki/Python\n\nInstallation\n------------\n\n``pip3 install legos.wtf``\n\nThis is a Lego designed for use with\n`Legobot <https://github.com/bbriggs/Legobot>`__, so you'll get Legobot\nalong with this. To deploy it, import the package and add it to the\nactive legos like so:\n\n.. code:: python\n\n    # This is the legobot stuff\n    from Legobot import Lego\n    # This is your lego\n    from legos.wtf import WikipediaTopFinder\n\n    # Legobot stuff here\n    lock = threading.Lock()\n    baseplate = Lego.start(None, lock)\n    baseplate_proxy = baseplate.proxy()\n\n    # Add your lego\n    baseplate_proxy.add_child(WikipediaTopFinder)\n\nTweaking\n--------\n\nWhile you can use this one as-is, you could also add a localized version\nto your Legobot deployment by grabbing `wtf.py <legos/wtf.py>`__ and\ndeploying is as a local module. `Example of a Legobot instance with\nlocal modules <https://github.com/voxpupuli/thevoxfox/>`__\n\nContributing\n------------\n\nAs always, pull requests are welcome.\n\n.. |Travis| image:: https://img.shields.io/travis/bbriggs/legos.wtf.svg\n   :target: \n.. |PyPI| image:: https://img.shields.io/pypi/pyversions/legos.wtf.svg\n   :target: \n.. |PyPI| image:: https://img.shields.io/pypi/v/legos.wtf.svg\n   :target: \n.. |PyPI| image:: https://img.shields.io/pypi/wheel/legos.wtf.svg\n   :target: \n.. |PyPI| image:: https://img.shields.io/pypi/l/legos.wtf.svg\n   :target: \n.. |PyPI| image:: https://img.shields.io/pypi/status/legos.wtf.svg\n   :target:", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bbriggs/legos.wtf", "keywords": null, "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "legos.wtf", "package_url": "https://pypi.org/project/legos.wtf/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/legos.wtf/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/bbriggs/legos.wtf"}, "release_url": "https://pypi.org/project/legos.wtf/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "Wikipedia Top Finder plugin for Legobot", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            Wikipedia Top Finder<br>====================<br><br>|Travis| |PyPI| |PyPI|<br><br>|PyPI| |PyPI| |PyPI|<br><br>Ever wish you could do an \"I'm feeling lucky\" search on Wikipedia right<br>from chat? Want to be able to pull up a wikipedia link right there in<br>the group and settle the debate once and for all? This module will<br>search the English langauge Wikipedia for the query you provide and<br>return the URL for the top matching page.<br><br>Usage<br>-----<br><br>This lego listens for ``!wtf`` at the beginning of a message and<br>processes everything after it as a query.<br><br>Example: ``!wtf python`` will return<br>https://en.wikipedia.org/wiki/Python<br><br>Installation<br>------------<br><br>``pip3 install legos.wtf``<br><br>This is a Lego designed for use with<br>`Legobot &lt;https://github.com/bbriggs/Legobot&gt;`__, so you'll get Legobot<br>along with this. To deploy it, import the package and add it to the<br>active legos like so:<br><br>.. code:: python<br><br>    # This is the legobot stuff<br>    from Legobot import Lego<br>    # This is your lego<br>    from legos.wtf import WikipediaTopFinder<br><br>    # Legobot stuff here<br>    lock = threading.Lock()<br>    baseplate = Lego.start(None, lock)<br>    baseplate_proxy = baseplate.proxy()<br><br>    # Add your lego<br>    baseplate_proxy.add_child(WikipediaTopFinder)<br><br>Tweaking<br>--------<br><br>While you can use this one as-is, you could also add a localized version<br>to your Legobot deployment by grabbing `wtf.py &lt;legos/wtf.py&gt;`__ and<br>deploying is as a local module. `Example of a Legobot instance with<br>local modules &lt;https://github.com/voxpupuli/thevoxfox/&gt;`__<br><br>Contributing<br>------------<br><br>As always, pull requests are welcome.<br><br>.. |Travis| image:: https://img.shields.io/travis/bbriggs/legos.wtf.svg<br>   :target: <br>.. |PyPI| image:: https://img.shields.io/pypi/pyversions/legos.wtf.svg<br>   :target: <br>.. |PyPI| image:: https://img.shields.io/pypi/v/legos.wtf.svg<br>   :target: <br>.. |PyPI| image:: https://img.shields.io/pypi/wheel/legos.wtf.svg<br>   :target: <br>.. |PyPI| image:: https://img.shields.io/pypi/l/legos.wtf.svg<br>   :target: <br>.. |PyPI| image:: https://img.shields.io/pypi/status/legos.wtf.svg<br>   :target:\n          </div>"}, "last_serial": 2553104, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "e85424495f39ce24116c58638770ba2f", "sha256": "86ac281cee917df7be1df0e257cd4524133b3c27ef48f6bb8959e382a7951b48"}, "downloads": -1, "filename": "legos.wtf-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e85424495f39ce24116c58638770ba2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1894, "upload_time": "2017-01-03T17:00:49", "upload_time_iso_8601": "2017-01-03T17:00:49.689624Z", "url": "https://files.pythonhosted.org/packages/20/21/9f36e0d3267959d67d6a1cf7cab070aec10ad3a1f6bf0119d05912e4f864/legos.wtf-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "1277d1278a50b320a6e400efc023b9de", "sha256": "a5da355e4fe39404b79d42df49d87b7aebfbf9334f4e9e63a132165a281a4320"}, "downloads": -1, "filename": "legos.wtf-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1277d1278a50b320a6e400efc023b9de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1916, "upload_time": "2017-01-03T20:38:41", "upload_time_iso_8601": "2017-01-03T20:38:41.627363Z", "url": "https://files.pythonhosted.org/packages/9a/8f/44155f879d3597e180a05b78c5aebb0d3e16726d85944ff3ac4f69b346bf/legos.wtf-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "871e94a39fc9d7086daa2811010acdde", "sha256": "aeae0000f2b969e3b4967aa6cbead9e122fbf3018cbe91dff1fbcee46f5ccf38"}, "downloads": -1, "filename": "legos.wtf-0.1.3.tar.gz", "has_sig": false, "md5_digest": "871e94a39fc9d7086daa2811010acdde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2897, "upload_time": "2017-01-04T06:52:54", "upload_time_iso_8601": "2017-01-04T06:52:54.775789Z", "url": "https://files.pythonhosted.org/packages/94/66/a862c85934588c3214d3fe7e0264bca65b9ae7f8f3d8171f790983aaaaed/legos.wtf-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "871e94a39fc9d7086daa2811010acdde", "sha256": "aeae0000f2b969e3b4967aa6cbead9e122fbf3018cbe91dff1fbcee46f5ccf38"}, "downloads": -1, "filename": "legos.wtf-0.1.3.tar.gz", "has_sig": false, "md5_digest": "871e94a39fc9d7086daa2811010acdde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2897, "upload_time": "2017-01-04T06:52:54", "upload_time_iso_8601": "2017-01-04T06:52:54.775789Z", "url": "https://files.pythonhosted.org/packages/94/66/a862c85934588c3214d3fe7e0264bca65b9ae7f8f3d8171f790983aaaaed/legos.wtf-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:11 2020"}