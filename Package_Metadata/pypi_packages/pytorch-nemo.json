{"info": {"author": "Francesco Conti", "author_email": "f.conti@unibo.it", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# NEMO (NEural Minimizer for pytOrch)\n**NEMO (NEural Minimizer for pytOrch)** is a small library for minimization of Deep Neural Networks developed in PyTorch, aimed at their deployment on ultra-low power, highly memory constrained platforms, in particular (but not exclusively) PULP-based microcontrollers.\nNEMO features include:\n - deployment-related transformations such as BatchNorm folding, bias removal, weight equalization \n - collection of statistics on activations and weights\n - post-training quantization\n - quantization-aware fine-tuning, with partially automated precision relaxation\n - mixed-precision quantization\n - bit-accurate deployment model\n - export to ONNX\n\nNEMO operates on three different \"levels\" of quantization-aware DNN representations, all built upon `torch.nn.Module` and `torch.autograd.Function`:\n - fake-quantized *FQ*: replaces regular activations (e.g., ReLU) with quantization-aware ones (PACT) and dynamically quantized weights (with linear PACT-like quantization), maintaining full trainability (similar to the native PyTorch support, but not based on it).\n - quantized-deployable *QD*: replaces all function with deployment-equivalent versions, trading off trainability for a more accurate representation of numerical behavior on real hardware.\n - integer-deployable *ID*: replaces all activation and weight tensors used along the network with integer-based ones. It aims at bit-accurate representation of actual hardware behavior.\nAll the quantized representations support mixed-precision weights (signed and asymmetric) and activations (unsigned). The current version of NEMO targets per-layer quantization; work on per-channel quantization is in progress.\n\nNEMO is organized as a Python library that can be applied with relatively small changes to an existing PyTorch based script or training framework.\n\n# Installation and requirements\nThe NEMO library currently supports PyTorch >= 1.3.1 and runs on Python >= 3.5.\nTo install it from PyPI, just run:\n```\npip install pytorch-nemo\n```\nYou can also install a development (and editable) version of NEMO by directly downloading this repo:\n```\ngit clone https://github.com/pulp-platform/nemo\ncd nemo\npip install -e .\n```\nThen, you can import it in your script using\n```\nimport nemo\n```\n\n# Example\n- MNIST post-training quantization: https://colab.research.google.com/drive/1AmcITfN2ELQe07WKQ9szaxq-WSu4hdQb\n\n# Documentation\nFull documentation for NEMO is under development (see `doc` folder). You can find a technical report covering the deployment-aware quantization methodology here: https://arxiv.org/abs/2004.05930\n\n# License\nNEMO is released under Apache 2.0, see the LICENSE file in the root of this repository for details.\n\n# Acknowledgements\n![ALOHA Logo](/var/aloha.png)\n\nNEMO is an outcome of the European Commission [Horizon 2020 ALOHA Project](https://www.aloha-h2020.eu/), funded under the EU's Horizon 2020 Research and Innovation Programme, grant agreement no. 780788.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pulp-platform/nemo", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pytorch-nemo", "package_url": "https://pypi.org/project/pytorch-nemo/", "platform": "", "project_url": "https://pypi.org/project/pytorch-nemo/", "project_urls": {"Homepage": "https://github.com/pulp-platform/nemo"}, "release_url": "https://pypi.org/project/pytorch-nemo/0.0.4/", "requires_dist": ["torch (>=1.3.0)", "torchvision (>=0.4.1)", "numpy", "tqdm", "packaging"], "requires_python": ">=3.5", "summary": "NEural Minimizer for pytOrch", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>NEMO (NEural Minimizer for pytOrch)</h1>\n<p><strong>NEMO (NEural Minimizer for pytOrch)</strong> is a small library for minimization of Deep Neural Networks developed in PyTorch, aimed at their deployment on ultra-low power, highly memory constrained platforms, in particular (but not exclusively) PULP-based microcontrollers.\nNEMO features include:</p>\n<ul>\n<li>deployment-related transformations such as BatchNorm folding, bias removal, weight equalization</li>\n<li>collection of statistics on activations and weights</li>\n<li>post-training quantization</li>\n<li>quantization-aware fine-tuning, with partially automated precision relaxation</li>\n<li>mixed-precision quantization</li>\n<li>bit-accurate deployment model</li>\n<li>export to ONNX</li>\n</ul>\n<p>NEMO operates on three different \"levels\" of quantization-aware DNN representations, all built upon <code>torch.nn.Module</code> and <code>torch.autograd.Function</code>:</p>\n<ul>\n<li>fake-quantized <em>FQ</em>: replaces regular activations (e.g., ReLU) with quantization-aware ones (PACT) and dynamically quantized weights (with linear PACT-like quantization), maintaining full trainability (similar to the native PyTorch support, but not based on it).</li>\n<li>quantized-deployable <em>QD</em>: replaces all function with deployment-equivalent versions, trading off trainability for a more accurate representation of numerical behavior on real hardware.</li>\n<li>integer-deployable <em>ID</em>: replaces all activation and weight tensors used along the network with integer-based ones. It aims at bit-accurate representation of actual hardware behavior.\nAll the quantized representations support mixed-precision weights (signed and asymmetric) and activations (unsigned). The current version of NEMO targets per-layer quantization; work on per-channel quantization is in progress.</li>\n</ul>\n<p>NEMO is organized as a Python library that can be applied with relatively small changes to an existing PyTorch based script or training framework.</p>\n<h1>Installation and requirements</h1>\n<p>The NEMO library currently supports PyTorch &gt;= 1.3.1 and runs on Python &gt;= 3.5.\nTo install it from PyPI, just run:</p>\n<pre><code>pip install pytorch-nemo\n</code></pre>\n<p>You can also install a development (and editable) version of NEMO by directly downloading this repo:</p>\n<pre><code>git clone https://github.com/pulp-platform/nemo\ncd nemo\npip install -e .\n</code></pre>\n<p>Then, you can import it in your script using</p>\n<pre><code>import nemo\n</code></pre>\n<h1>Example</h1>\n<ul>\n<li>MNIST post-training quantization: <a href=\"https://colab.research.google.com/drive/1AmcITfN2ELQe07WKQ9szaxq-WSu4hdQb\" rel=\"nofollow\">https://colab.research.google.com/drive/1AmcITfN2ELQe07WKQ9szaxq-WSu4hdQb</a></li>\n</ul>\n<h1>Documentation</h1>\n<p>Full documentation for NEMO is under development (see <code>doc</code> folder). You can find a technical report covering the deployment-aware quantization methodology here: <a href=\"https://arxiv.org/abs/2004.05930\" rel=\"nofollow\">https://arxiv.org/abs/2004.05930</a></p>\n<h1>License</h1>\n<p>NEMO is released under Apache 2.0, see the LICENSE file in the root of this repository for details.</p>\n<h1>Acknowledgements</h1>\n<p><img alt=\"ALOHA Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ba22024546c28e4a712df10275eec17c3b14462/2f7661722f616c6f68612e706e67\"></p>\n<p>NEMO is an outcome of the European Commission <a href=\"https://www.aloha-h2020.eu/\" rel=\"nofollow\">Horizon 2020 ALOHA Project</a>, funded under the EU's Horizon 2020 Research and Innovation Programme, grant agreement no. 780788.</p>\n\n          </div>"}, "last_serial": 7151735, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f54690db5f70ae808e73cb090cc222ba", "sha256": "125eb7c092ddbca9731fb1af8496b8f1e6be99cd5e23b52b91158033928a511e"}, "downloads": -1, "filename": "pytorch_nemo-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f54690db5f70ae808e73cb090cc222ba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 51620, "upload_time": "2020-04-09T11:07:25", "upload_time_iso_8601": "2020-04-09T11:07:25.567243Z", "url": "https://files.pythonhosted.org/packages/1e/4c/8cb1288ca80028e56919bea88b31365e57ce4e26ea3e9421612a27e3ffe7/pytorch_nemo-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb18fe97e0f35c5c407be23d82732dd5", "sha256": "d102a1a0eedec5fd6fb4caada857d82424edd851e95e7a4cdb6fa5b3a4769778"}, "downloads": -1, "filename": "pytorch-nemo-0.0.1.tar.gz", "has_sig": false, "md5_digest": "cb18fe97e0f35c5c407be23d82732dd5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 35238, "upload_time": "2020-04-09T11:07:27", "upload_time_iso_8601": "2020-04-09T11:07:27.347276Z", "url": "https://files.pythonhosted.org/packages/18/09/bef89e286b73409560c96ed1557ec04d5412b450c27353d306173a12bd06/pytorch-nemo-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "7ea84c9c97fcc1d29821ef1a5da6d0db", "sha256": "80a57b92a4a75d8196fa68885bbc2956a941fe0fe8fa27dfb379aeae4e9b5e98"}, "downloads": -1, "filename": "pytorch_nemo-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7ea84c9c97fcc1d29821ef1a5da6d0db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 51804, "upload_time": "2020-04-23T17:29:07", "upload_time_iso_8601": "2020-04-23T17:29:07.887018Z", "url": "https://files.pythonhosted.org/packages/bf/1f/f80bbab2f741909759626a9a10b1b67c3c91cfad274e313d9bc9bc325fcb/pytorch_nemo-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d0865534fdbd66d571c39d88dd94169", "sha256": "a036f7bdd426c5c74c5b7928a2701e69755a01e5264a4baa974a9644f4309581"}, "downloads": -1, "filename": "pytorch-nemo-0.0.2.tar.gz", "has_sig": false, "md5_digest": "7d0865534fdbd66d571c39d88dd94169", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 35641, "upload_time": "2020-04-23T17:29:08", "upload_time_iso_8601": "2020-04-23T17:29:08.967119Z", "url": "https://files.pythonhosted.org/packages/f5/05/c97ad4ccd8f48af0dd28640f831bb2b01fac182c92b907e3700d91731a5e/pytorch-nemo-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "3ea4b75614d82e44209edabf096562dd", "sha256": "f845eaee510d62e37fb759def7d099d6da58bf425ce5f12a477ab7137643c03e"}, "downloads": -1, "filename": "pytorch_nemo-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3ea4b75614d82e44209edabf096562dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 52833, "upload_time": "2020-04-27T13:14:25", "upload_time_iso_8601": "2020-04-27T13:14:25.331968Z", "url": "https://files.pythonhosted.org/packages/38/ee/ff008f3cdf506a902be56a92de639af6752ba5886433f03b9579e477cccc/pytorch_nemo-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff6ab783b9ff6175acc8669b06a9d320", "sha256": "3f9d2ded70427ac2fc70d4e4a787c2574a4794a710c26de1aba89d46286f10b8"}, "downloads": -1, "filename": "pytorch-nemo-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ff6ab783b9ff6175acc8669b06a9d320", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 36603, "upload_time": "2020-04-27T13:14:26", "upload_time_iso_8601": "2020-04-27T13:14:26.214258Z", "url": "https://files.pythonhosted.org/packages/dd/33/eafcff8c1d04b0a86749935a2437a16a328c125f949e2f8332ab22cf5125/pytorch-nemo-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "9ef707c9c49dcfefb4f4c8873bc619ca", "sha256": "b82f27434a85fac51dd542cc56ccd0be3650004c089882ccd23a48214672b9d7"}, "downloads": -1, "filename": "pytorch_nemo-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9ef707c9c49dcfefb4f4c8873bc619ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 54320, "upload_time": "2020-05-02T14:41:35", "upload_time_iso_8601": "2020-05-02T14:41:35.511383Z", "url": "https://files.pythonhosted.org/packages/84/a5/3f23368c2067e0f56b3ed802ed908a2be7f6f95be262d5b76729754f15fc/pytorch_nemo-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b4b147dd764d228e6e8f62e0a840847", "sha256": "d3927fd59959e56a43f7d78782c589dac8a0ef19cea79819ba86ab5ea18a84f2"}, "downloads": -1, "filename": "pytorch-nemo-0.0.4.tar.gz", "has_sig": false, "md5_digest": "8b4b147dd764d228e6e8f62e0a840847", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 38093, "upload_time": "2020-05-02T14:41:36", "upload_time_iso_8601": "2020-05-02T14:41:36.545275Z", "url": "https://files.pythonhosted.org/packages/b3/91/e2fb4f4ccb1dbfb0f601c2a489ef5db25043c9e0ccd0dfb5c8a36865ebb5/pytorch-nemo-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9ef707c9c49dcfefb4f4c8873bc619ca", "sha256": "b82f27434a85fac51dd542cc56ccd0be3650004c089882ccd23a48214672b9d7"}, "downloads": -1, "filename": "pytorch_nemo-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9ef707c9c49dcfefb4f4c8873bc619ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 54320, "upload_time": "2020-05-02T14:41:35", "upload_time_iso_8601": "2020-05-02T14:41:35.511383Z", "url": "https://files.pythonhosted.org/packages/84/a5/3f23368c2067e0f56b3ed802ed908a2be7f6f95be262d5b76729754f15fc/pytorch_nemo-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b4b147dd764d228e6e8f62e0a840847", "sha256": "d3927fd59959e56a43f7d78782c589dac8a0ef19cea79819ba86ab5ea18a84f2"}, "downloads": -1, "filename": "pytorch-nemo-0.0.4.tar.gz", "has_sig": false, "md5_digest": "8b4b147dd764d228e6e8f62e0a840847", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 38093, "upload_time": "2020-05-02T14:41:36", "upload_time_iso_8601": "2020-05-02T14:41:36.545275Z", "url": "https://files.pythonhosted.org/packages/b3/91/e2fb4f4ccb1dbfb0f601c2a489ef5db25043c9e0ccd0dfb5c8a36865ebb5/pytorch-nemo-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:47 2020"}