{"info": {"author": "Dan Loewenherz", "author_email": "dan@lionheartsw.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: CGI Tools/Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "Python-Onfleet\n==============\n\n|ci|_ \u2003 |version|_ \u2003 |downloads|_\n\n.. |ci| image:: https://img.shields.io/travis/lionheart/python-onfleet.svg?style=flat\n.. _ci: https://travis-ci.org/lionheart/onfleet.py\n\n.. |downloads| image:: https://img.shields.io/pypi/dm/onfleet.svg?style=flat\n.. _downloads: https://pypi.python.org/pypi/onfleet\n\n.. |version| image:: https://img.shields.io/pypi/v/onfleet.svg?style=flat\n.. _version: https://pypi.python.org/pypi/onfleet\n\npython-onfleet is an easy-to-use and fully-functional Python wrapper for the `Onfleet API <http://docs.onfleet.com/v2.0/>`_.\n\nInstallation\n------------\n\npython-onfleet is available for download through the Python Package Index (PyPi). You can install it right away using pip or easy_install.\n\n.. code:: bash\n\n   pip install onfleet\n\nNo dependencies (besides Python >= 2.7).\n\nUsage\n-----\n\nTo get started, you're going to need to get an Onfleet account set up and create an API token. Once you've got that, you're ready to go.\n\n.. code:: pycon\n\n   >>> import onfleet\n   >>> on = onfleet.Onfleet(api_token)\n\nOnce you've done this, you can now use the `on` object to make calls to the Onfleet API. Here are some examples:\n\nOrganizations\n'''''''''''''\n\n.. code:: pycon\n\n   >>> organization = on.organization()\n   >>> organization\n   <Organization id='O1o6D8OryDMILx2YEW3YOFFg'>\n   >>> organization.created_on\n   1425052175000\n\n\nAdministrators\n''''''''''''''\n\nCreate a new administrator:\n\n.. code:: pycon\n\n   >>> administrator = onfleet.Administrator(name=\"John Doe\", email=\"john@example.com\")\n   >>> on.admins(administrator, method=\"POST\")\n   <Administrator id='lMmclZVdpCqzpN9~tSzvIjHn'>\n\nList all administrators:\n\n.. code:: pycon\n\n   >>> on.admins()\n   [<Administrator id='lMmclZVdpCqzpN9~tSzvIjHn'>,\n    <Administrator id='IP4mhhsuA*RivOvpJG9y~tI7'>]\n   >>> admins = _\n   >>> admins[0].name\n   John Doe\n\nWorkers\n'''''''\n\nList workers:\n\n.. code:: pycon\n\n   >>> on.workers()\n   <Worker name='John D'>, <Worker name='Sally D'>]\n\nCreate a new worker:\n\n.. code:: pycon\n\n   >>> vehicle = onfleet.Vehicle(vehicle_type=onfleet.Vehicle.CAR, description=\"2010 Jetta\", licensePlate=\"123456\", color=\"White\")\n   >>> worker = onfleet.Worker(name=\"John Smith\", phone=\"1234567890\", vehicle=vehicle)\n   >>> on.worker(worker, method=\"POST\")\n\nGet a single worker:\n\n.. code:: pycon\n\n   >>> onfleet.Worker[worker_id]()\n   <Worker name='John D'>\n\nUpdate a worker:\n\n.. code:: pycon\n\n   >>> worker = onfleet.Worker(id=\"12345\", tasks=[\"1234\"])\n   >>> on.worker(worker, method=\"PUT\")\n\nTeams\n'''''\n\nList teams:\n\n.. code:: pycon\n\n   >>> on.teams()\n   [{u'id': u'n3MMWj0Cq6emWBg1v0ugJ46f',\n     u'managers': [u'BKH3rtJxU*XdH6anWsn1YEsU'],\n     u'name': u'Test Team',\n     u'timeCreated': 1427748462000,\n     u'timeLastModified': 1427905261933,\n     u'workers': [u'i0TlEqfEk8E65a4dW~0J58VZ', u'SKmm09tPTCLkEWnGKW1AsLh9']}]\n\nGet a single team:\n\n.. code:: pycon\n\n   >>> on.teams['n3MMWj0Cq6emWBg1v0ugJ46f']()\n   {u'id': u'n3MMWj0Cq6emWBF1a0ugJ46f',\n    u'managers': [],\n    u'name': u'Test Team',\n    u'timeCreated': 1427748462000,\n    u'timeLastModified': 1427905261933,\n    u'workers': [{u'id': u'i0TlEqfak8E65i4dW~0J58VZ',\n      u'name': u'John D',\n      u'phone': u'+17172372831'},\n     {u'id': u'SKmm09j3jJJKHanGKW1AsLW9',\n      u'name': u'Sally R',\n      u'phone': u'+15023838282'}]}\n\nDestinations\n''''''''''''\n\nCreate a new destination:\n\n.. code:: pycon\n\n   >>> destination = on.destinations(Destination(address=Address(unparsed=\"543 Howard Street, San Francisco, CA 94105\")), method=\"POST\")\n   >>> destination\n   <Destination id='RJ6SnbJntnGx3M72QvDnWDhn'>\n   >>> destination.location\n   [-122.3965731, 37.7875728]\n\n\nGet a single destination:\n\n.. code:: pycon\n\n   >>> on.destinations['RJ6SnbJntnGx3M72QvDnWDhn']()\n   <Destination id='RJ6SnbJntnGx3M72QvDnWDhn'>\n\n\nTasks\n'''''\n\nTODO\n\nRecipients\n''''''''''\n\nTODO\n\nMiscellaneous\n'''''''''''''\n\nBy default, python-onfleet will return parsed JSON objects. If you'd like the raw response object for a request, just pass in `parse_response=False`.\n\n.. code:: pycon\n\n   >>> response = on.organization(parse_response=False)\n   ... your org ...\n\n\nPython-onfleet maps 1-1 to the Onfleet API (e.g., pb.one.two.three['1234']() will send a request to \"https://api.onfleet.com/api/v2/one/two/three/1234\"). For more information on other methods and usage, please read the `Onfleet API documentation <http://docs.onfleet.com/v2.0/docs>`_.\n\nSupport\n-------\n\nIf you like this library, or need help implementing it, send us an email: hi@lionheartsw.com.\n\nLicense\n-------\n\n.. image:: http://img.shields.io/pypi/l/onfleet.svg?style=flat\n   :target: https://github.com/lionheart/python-onfleet/blob/master/LICENSE\n\nApache License, Version 2.0. See `LICENSE <https://github.com/lionheart/python-onfleet/blob/master/LICENSE>`_ for details.\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/lionheart/python-onfleet", "keywords": "onfleet", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "onfleet", "package_url": "https://pypi.org/project/onfleet/", "platform": "", "project_url": "https://pypi.org/project/onfleet/", "project_urls": {"Homepage": "http://github.com/lionheart/python-onfleet"}, "release_url": "https://pypi.org/project/onfleet/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "A Python wrapper for Onfleet", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/lionheart/onfleet.py\" rel=\"nofollow\"><img alt=\"ci\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a972e29027c0eab2972ce042bd0a4972985ab23/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6c696f6e68656172742f707974686f6e2d6f6e666c6565742e7376673f7374796c653d666c6174\"></a> \u2003 <a href=\"https://pypi.python.org/pypi/onfleet\" rel=\"nofollow\"><img alt=\"version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bccb2b9e1320b73a0e6b221aae55913a6f590cb4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6f6e666c6565742e7376673f7374796c653d666c6174\"></a> \u2003 <a href=\"https://pypi.python.org/pypi/onfleet\" rel=\"nofollow\"><img alt=\"downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/104ac4e9349d99cf53efd1f67fc31980d940e847/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6f6e666c6565742e7376673f7374796c653d666c6174\"></a></p>\n<p>python-onfleet is an easy-to-use and fully-functional Python wrapper for the <a href=\"http://docs.onfleet.com/v2.0/\" rel=\"nofollow\">Onfleet API</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>python-onfleet is available for download through the Python Package Index (PyPi). You can install it right away using pip or easy_install.</p>\n<pre>pip install onfleet\n</pre>\n<p>No dependencies (besides Python &gt;= 2.7).</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To get started, you\u2019re going to need to get an Onfleet account set up and create an API token. Once you\u2019ve got that, you\u2019re ready to go.</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">onfleet</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">on</span> <span class=\"o\">=</span> <span class=\"n\">onfleet</span><span class=\"o\">.</span><span class=\"n\">Onfleet</span><span class=\"p\">(</span><span class=\"n\">api_token</span><span class=\"p\">)</span>\n</pre>\n<p>Once you\u2019ve done this, you can now use the <cite>on</cite> object to make calls to the Onfleet API. Here are some examples:</p>\n<div id=\"organizations\">\n<h3>Organizations</h3>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">organization</span> <span class=\"o\">=</span> <span class=\"n\">on</span><span class=\"o\">.</span><span class=\"n\">organization</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">organization</span>\n<span class=\"go\">&lt;Organization id='O1o6D8OryDMILx2YEW3YOFFg'&gt;\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">organization</span><span class=\"o\">.</span><span class=\"n\">created_on</span>\n<span class=\"go\">1425052175000</span>\n</pre>\n</div>\n<div id=\"administrators\">\n<h3>Administrators</h3>\n<p>Create a new administrator:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">administrator</span> <span class=\"o\">=</span> <span class=\"n\">onfleet</span><span class=\"o\">.</span><span class=\"n\">Administrator</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"John Doe\"</span><span class=\"p\">,</span> <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s2\">\"john@example.com\"</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">on</span><span class=\"o\">.</span><span class=\"n\">admins</span><span class=\"p\">(</span><span class=\"n\">administrator</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"POST\"</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Administrator id='lMmclZVdpCqzpN9~tSzvIjHn'&gt;</span>\n</pre>\n<p>List all administrators:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">on</span><span class=\"o\">.</span><span class=\"n\">admins</span><span class=\"p\">()</span>\n<span class=\"go\">[&lt;Administrator id='lMmclZVdpCqzpN9~tSzvIjHn'&gt;,\n &lt;Administrator id='IP4mhhsuA*RivOvpJG9y~tI7'&gt;]\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">admins</span> <span class=\"o\">=</span> <span class=\"n\">_</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">admins</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span>\n<span class=\"go\">John Doe</span>\n</pre>\n</div>\n<div id=\"workers\">\n<h3>Workers</h3>\n<p>List workers:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">on</span><span class=\"o\">.</span><span class=\"n\">workers</span><span class=\"p\">()</span>\n<span class=\"go\">&lt;Worker name='John D'&gt;, &lt;Worker name='Sally D'&gt;]</span>\n</pre>\n<p>Create a new worker:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">vehicle</span> <span class=\"o\">=</span> <span class=\"n\">onfleet</span><span class=\"o\">.</span><span class=\"n\">Vehicle</span><span class=\"p\">(</span><span class=\"n\">vehicle_type</span><span class=\"o\">=</span><span class=\"n\">onfleet</span><span class=\"o\">.</span><span class=\"n\">Vehicle</span><span class=\"o\">.</span><span class=\"n\">CAR</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"2010 Jetta\"</span><span class=\"p\">,</span> <span class=\"n\">licensePlate</span><span class=\"o\">=</span><span class=\"s2\">\"123456\"</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s2\">\"White\"</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">worker</span> <span class=\"o\">=</span> <span class=\"n\">onfleet</span><span class=\"o\">.</span><span class=\"n\">Worker</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"John Smith\"</span><span class=\"p\">,</span> <span class=\"n\">phone</span><span class=\"o\">=</span><span class=\"s2\">\"1234567890\"</span><span class=\"p\">,</span> <span class=\"n\">vehicle</span><span class=\"o\">=</span><span class=\"n\">vehicle</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">on</span><span class=\"o\">.</span><span class=\"n\">worker</span><span class=\"p\">(</span><span class=\"n\">worker</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"POST\"</span><span class=\"p\">)</span>\n</pre>\n<p>Get a single worker:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">onfleet</span><span class=\"o\">.</span><span class=\"n\">Worker</span><span class=\"p\">[</span><span class=\"n\">worker_id</span><span class=\"p\">]()</span>\n<span class=\"go\">&lt;Worker name='John D'&gt;</span>\n</pre>\n<p>Update a worker:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">worker</span> <span class=\"o\">=</span> <span class=\"n\">onfleet</span><span class=\"o\">.</span><span class=\"n\">Worker</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">\"12345\"</span><span class=\"p\">,</span> <span class=\"n\">tasks</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"1234\"</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">on</span><span class=\"o\">.</span><span class=\"n\">worker</span><span class=\"p\">(</span><span class=\"n\">worker</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"PUT\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"teams\">\n<h3>Teams</h3>\n<p>List teams:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">on</span><span class=\"o\">.</span><span class=\"n\">teams</span><span class=\"p\">()</span>\n<span class=\"go\">[{u'id': u'n3MMWj0Cq6emWBg1v0ugJ46f',\n  u'managers': [u'BKH3rtJxU*XdH6anWsn1YEsU'],\n  u'name': u'Test Team',\n  u'timeCreated': 1427748462000,\n  u'timeLastModified': 1427905261933,\n  u'workers': [u'i0TlEqfEk8E65a4dW~0J58VZ', u'SKmm09tPTCLkEWnGKW1AsLh9']}]</span>\n</pre>\n<p>Get a single team:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">on</span><span class=\"o\">.</span><span class=\"n\">teams</span><span class=\"p\">[</span><span class=\"s1\">'n3MMWj0Cq6emWBg1v0ugJ46f'</span><span class=\"p\">]()</span>\n<span class=\"go\">{u'id': u'n3MMWj0Cq6emWBF1a0ugJ46f',\n u'managers': [],\n u'name': u'Test Team',\n u'timeCreated': 1427748462000,\n u'timeLastModified': 1427905261933,\n u'workers': [{u'id': u'i0TlEqfak8E65i4dW~0J58VZ',\n   u'name': u'John D',\n   u'phone': u'+17172372831'},\n  {u'id': u'SKmm09j3jJJKHanGKW1AsLW9',\n   u'name': u'Sally R',\n   u'phone': u'+15023838282'}]}</span>\n</pre>\n</div>\n<div id=\"destinations\">\n<h3>Destinations</h3>\n<p>Create a new destination:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">destination</span> <span class=\"o\">=</span> <span class=\"n\">on</span><span class=\"o\">.</span><span class=\"n\">destinations</span><span class=\"p\">(</span><span class=\"n\">Destination</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"o\">=</span><span class=\"n\">Address</span><span class=\"p\">(</span><span class=\"n\">unparsed</span><span class=\"o\">=</span><span class=\"s2\">\"543 Howard Street, San Francisco, CA 94105\"</span><span class=\"p\">)),</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"POST\"</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">destination</span>\n<span class=\"go\">&lt;Destination id='RJ6SnbJntnGx3M72QvDnWDhn'&gt;\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">destination</span><span class=\"o\">.</span><span class=\"n\">location</span>\n<span class=\"go\">[-122.3965731, 37.7875728]</span>\n</pre>\n<p>Get a single destination:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">on</span><span class=\"o\">.</span><span class=\"n\">destinations</span><span class=\"p\">[</span><span class=\"s1\">'RJ6SnbJntnGx3M72QvDnWDhn'</span><span class=\"p\">]()</span>\n<span class=\"go\">&lt;Destination id='RJ6SnbJntnGx3M72QvDnWDhn'&gt;</span>\n</pre>\n</div>\n<div id=\"tasks\">\n<h3>Tasks</h3>\n<p>TODO</p>\n</div>\n<div id=\"recipients\">\n<h3>Recipients</h3>\n<p>TODO</p>\n</div>\n<div id=\"miscellaneous\">\n<h3>Miscellaneous</h3>\n<p>By default, python-onfleet will return parsed JSON objects. If you\u2019d like the raw response object for a request, just pass in <cite>parse_response=False</cite>.</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">on</span><span class=\"o\">.</span><span class=\"n\">organization</span><span class=\"p\">(</span><span class=\"n\">parse_response</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span><span class=\"n\">your</span> <span class=\"n\">org</span> <span class=\"o\">...</span>\n</pre>\n<p>Python-onfleet maps 1-1 to the Onfleet API (e.g., pb.one.two.three[\u20181234\u2019]() will send a request to \u201c<a href=\"https://api.onfleet.com/api/v2/one/two/three/1234\" rel=\"nofollow\">https://api.onfleet.com/api/v2/one/two/three/1234</a>\u201d). For more information on other methods and usage, please read the <a href=\"http://docs.onfleet.com/v2.0/docs\" rel=\"nofollow\">Onfleet API documentation</a>.</p>\n</div>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>If you like this library, or need help implementing it, send us an email: <a href=\"mailto:hi%40lionheartsw.com\">hi<span>@</span>lionheartsw<span>.</span>com</a>.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<a href=\"https://github.com/lionheart/python-onfleet/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"http://img.shields.io/pypi/l/onfleet.svg?style=flat\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58be7ff54f6d338534446dcccea2a2c02cc6439d/687474703a2f2f696d672e736869656c64732e696f2f707970692f6c2f6f6e666c6565742e7376673f7374796c653d666c6174\"></a>\n<p>Apache License, Version 2.0. See <a href=\"https://github.com/lionheart/python-onfleet/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a> for details.</p>\n</div>\n\n          </div>"}, "last_serial": 2401767, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "8b98da02eca71800eb42bb6cbc8b28bf", "sha256": "9459a2e1ab2965ad6d092d9b85c4f76d50dfba5bbeeb57086cd8acc9f44f696d"}, "downloads": -1, "filename": "onfleet-0.0.1.tar.gz", "has_sig": true, "md5_digest": "8b98da02eca71800eb42bb6cbc8b28bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6881, "upload_time": "2015-04-06T19:22:06", "upload_time_iso_8601": "2015-04-06T19:22:06.132300Z", "url": "https://files.pythonhosted.org/packages/ec/b0/8f054c1ab551c173e24d1c861478614f56c785968357444a9d1e6010983f/onfleet-0.0.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "55212faaa98145f880b0d0281925a471", "sha256": "8345c79dcf812e55e686f2d026aeb6bf45c67ef6f73d67048605c2b577c33daa"}, "downloads": -1, "filename": "onfleet-1.0.0.tar.gz", "has_sig": true, "md5_digest": "55212faaa98145f880b0d0281925a471", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7561, "upload_time": "2016-10-15T23:50:15", "upload_time_iso_8601": "2016-10-15T23:50:15.109621Z", "url": "https://files.pythonhosted.org/packages/1f/de/7a185cf3d57b696d9ba2649ee061a16727648dce7cf6fbf25e638525606f/onfleet-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "55212faaa98145f880b0d0281925a471", "sha256": "8345c79dcf812e55e686f2d026aeb6bf45c67ef6f73d67048605c2b577c33daa"}, "downloads": -1, "filename": "onfleet-1.0.0.tar.gz", "has_sig": true, "md5_digest": "55212faaa98145f880b0d0281925a471", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7561, "upload_time": "2016-10-15T23:50:15", "upload_time_iso_8601": "2016-10-15T23:50:15.109621Z", "url": "https://files.pythonhosted.org/packages/1f/de/7a185cf3d57b696d9ba2649ee061a16727648dce7cf6fbf25e638525606f/onfleet-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:55 2020"}