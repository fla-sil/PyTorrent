{"info": {"author": "Andrey Ermilov", "author_email": "andrerm@ya.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Testing"], "description": "==================\npytest-mock-server\n==================\n\n.. image:: https://img.shields.io/pypi/v/pytest-mock-server.svg\n    :target: https://pypi.org/project/pytest-mock-server\n    :alt: PyPI version\n\n.. image:: https://img.shields.io/pypi/pyversions/pytest-mock-server.svg\n    :target: https://pypi.org/project/pytest-mock-server\n    :alt: Python versions\n\n.. image:: https://travis-ci.org/AndreyErmilov/pytest-mock-server.svg?branch=master\n    :target: https://travis-ci.org/AndreyErmilov/pytest-mock-server\n    :alt: See Build Status on Travis CI\n\n\nMock server plugin for pytest\n\n----\n\nInstallation\n------------\n\nYou can install \"pytest-mock-server\" via `pip`_ from `PyPI`_::\n\n    $ pip install pytest-mock-server\n\n\nUsage\n-----\nOne handler\n~~~~~~~~~~~\n.. code-block:: python\n\n  import pytest\n  import requests\n\n  @pytest.mark.server(url='/v1/books/', response=[{'id': 1}], method='GET')\n  def test_handler_responses():\n      response = requests.get('http://localhost:5000/v1/books/')\n      assert response.status_code == 200\n      assert response.json() == [{'id': 1}]\n\n\nMore than one handlers\n~~~~~~~~~~~~~~~~~~~~~~\n.. code-block:: python\n\n  import pytest\n  import requests\n\n  @pytest.mark.server(url='/v1/books/', response=[{'id': 1}], method='GET')\n  @pytest.mark.server(url='/v1/books/<book_id>/', response={'id': 1}, method='GET')\n  def test_handler_responses():\n      response = requests.get('http://localhost:5000/v1/books/')\n      assert response.status_code == 200\n      assert response.json() == [{'id': 1}]\n      response = requests.get('http://localhost:5000/v1/books/1/')\n      assert response.status_code == 200\n      assert response.json() == {'id': 1}\n\n\nCallback executes before response returns\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n.. code-block:: python\n\n  import pytest\n  import requests\n  import time\n\n  def sleep_two(*args, **kwargs):\n      time.sleep(2)\n\n  @pytest.mark.server(url='/v1/books/', response={}, callback=sleep_two)\n  def test_handler_responses():\n      \"\"\"Ensures Timeouts works\"\"\"\n      with pytest.raises(requests.exceptions.Timeout):\n          response = requests.get('http://localhost:5000/v1/books/', timeout=1)\n\n\nContributing\n------------\nContributions are very welcome. Tests can be run with `tox`_, please ensure\nthe coverage at least stays the same before you submit a pull request.\n\nLicense\n-------\n\nDistributed under the terms of the `MIT`_ license, \"pytest-mock-server\" is free and open source software\n\n\nIssues\n------\n\nIf you encounter any problems, please `file an issue`_ along with a detailed description.\n\n.. _`MIT`: http://opensource.org/licenses/MIT\n.. _`file an issue`: https://github.com/AndreyErmilov/pytest-mock-server/issues\n.. _`tox`: https://tox.readthedocs.io/en/latest/\n.. _`pip`: https://pypi.org/project/pip/\n.. _`PyPI`: https://pypi.org/project", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AndreyErmilov/pytest-mock-server", "keywords": "", "license": "MIT", "maintainer": "Andrey Ermilov", "maintainer_email": "andrerm@ya.ru", "name": "pytest-mock-server", "package_url": "https://pypi.org/project/pytest-mock-server/", "platform": "", "project_url": "https://pypi.org/project/pytest-mock-server/", "project_urls": {"Homepage": "https://github.com/AndreyErmilov/pytest-mock-server"}, "release_url": "https://pypi.org/project/pytest-mock-server/0.2.0/", "requires_dist": null, "requires_python": ">=3.0", "summary": "Mock server plugin for pytest", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/pytest-mock-server\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0db58ad9f8858b9ecd2b704bb05fd521fb754f5b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079746573742d6d6f636b2d7365727665722e737667\"></a>\n<a href=\"https://pypi.org/project/pytest-mock-server\" rel=\"nofollow\"><img alt=\"Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9699c2880226adfb8c667f3d4ea41fd9dc1a1a77/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079746573742d6d6f636b2d7365727665722e737667\"></a>\n<a href=\"https://travis-ci.org/AndreyErmilov/pytest-mock-server\" rel=\"nofollow\"><img alt=\"See Build Status on Travis CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/16f11d572217256436bdd88f444b527ad9aa91c2/68747470733a2f2f7472617669732d63692e6f72672f416e6472657945726d696c6f762f7079746573742d6d6f636b2d7365727665722e7376673f6272616e63683d6d6173746572\"></a>\n<p>Mock server plugin for pytest</p>\n<hr class=\"docutils\">\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install \u201cpytest-mock-server\u201d via <a href=\"https://pypi.org/project/pip/\" rel=\"nofollow\">pip</a> from <a href=\"https://pypi.org/project\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>$ pip install pytest-mock-server\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"one-handler\">\n<h3>One handler</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">server</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'/v1/books/'</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"o\">=</span><span class=\"p\">[{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}],</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'GET'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_handler_responses</span><span class=\"p\">():</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:5000/v1/books/'</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">200</span>\n    <span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"p\">[{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}]</span>\n</pre>\n</div>\n<div id=\"more-than-one-handlers\">\n<h3>More than one handlers</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">server</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'/v1/books/'</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"o\">=</span><span class=\"p\">[{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}],</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'GET'</span><span class=\"p\">)</span>\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">server</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'/v1/books/&lt;book_id&gt;/'</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'GET'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_handler_responses</span><span class=\"p\">():</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:5000/v1/books/'</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">200</span>\n    <span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"p\">[{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}]</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:5000/v1/books/1/'</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">200</span>\n    <span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"callback-executes-before-response-returns\">\n<h3>Callback executes before response returns</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">sleep_two</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">server</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'/v1/books/'</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"o\">=</span><span class=\"p\">{},</span> <span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"n\">sleep_two</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_handler_responses</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"Ensures Timeouts works\"\"\"</span>\n    <span class=\"k\">with</span> <span class=\"n\">pytest</span><span class=\"o\">.</span><span class=\"n\">raises</span><span class=\"p\">(</span><span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">exceptions</span><span class=\"o\">.</span><span class=\"n\">Timeout</span><span class=\"p\">):</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:5000/v1/books/'</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions are very welcome. Tests can be run with <a href=\"https://tox.readthedocs.io/en/latest/\" rel=\"nofollow\">tox</a>, please ensure\nthe coverage at least stays the same before you submit a pull request.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Distributed under the terms of the <a href=\"http://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT</a> license, \u201cpytest-mock-server\u201d is free and open source software</p>\n</div>\n<div id=\"issues\">\n<h2>Issues</h2>\n<p>If you encounter any problems, please <a href=\"https://github.com/AndreyErmilov/pytest-mock-server/issues\" rel=\"nofollow\">file an issue</a> along with a detailed description.</p>\n</div>\n\n          </div>"}, "last_serial": 6960037, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4fbc6fb2f8b4067c3d21a7858f110b0f", "sha256": "e70d92275b677544bf357bd76efbb043d00d1b4da4087c99d349614b6e483874"}, "downloads": -1, "filename": "pytest-mock-server-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4fbc6fb2f8b4067c3d21a7858f110b0f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 3247, "upload_time": "2020-03-31T19:33:58", "upload_time_iso_8601": "2020-03-31T19:33:58.658243Z", "url": "https://files.pythonhosted.org/packages/4c/49/62790df7d2ac080b01afad883c2cf6110df9aef2ef07a15bfe9a6522183c/pytest-mock-server-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a963284e3d2559c52ab006f549bdb911", "sha256": "8e5aff8bb9c0fe00c1dff7c8e7b29aae28df0d393f620d085d7080eec68255b1"}, "downloads": -1, "filename": "pytest-mock-server-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a963284e3d2559c52ab006f549bdb911", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 3916, "upload_time": "2020-04-06T08:34:46", "upload_time_iso_8601": "2020-04-06T08:34:46.044204Z", "url": "https://files.pythonhosted.org/packages/bd/87/eefcdbfa9f009f96cfac5d2da55a11eb0df6cc42f13078ed3601abb2d699/pytest-mock-server-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a963284e3d2559c52ab006f549bdb911", "sha256": "8e5aff8bb9c0fe00c1dff7c8e7b29aae28df0d393f620d085d7080eec68255b1"}, "downloads": -1, "filename": "pytest-mock-server-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a963284e3d2559c52ab006f549bdb911", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 3916, "upload_time": "2020-04-06T08:34:46", "upload_time_iso_8601": "2020-04-06T08:34:46.044204Z", "url": "https://files.pythonhosted.org/packages/bd/87/eefcdbfa9f009f96cfac5d2da55a11eb0df6cc42f13078ed3601abb2d699/pytest-mock-server-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:58 2020"}