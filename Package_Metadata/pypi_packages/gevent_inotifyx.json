{"info": {"author": "Stanis Trendelenburg", "author_email": "stanis.trendelenburg@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "gevent\\_inotifyx\n================\n\n|build-status-img|\n\nGevent-compatible low-level inotify bindings based on\n`inotifyx <https://launchpad.net/inotifyx/>`__.\n\n-  Python 2 and 3 compatible\n-  Exposes a low-level\n   `inotify(7) <http://man7.org/linux/man-pages/man7/inotify.7.html>`__\n   API\n-  Allows to wait for events in a non-blocking way when using\n   `gevent <http://www.gevent.org/>`__.\n\nInstallation\n------------\n\n::\n\n    $ pip install gevent_inotifyx\n\nFrom source:\n\n::\n\n    $ python setup.py install\n\nTo run the tests:\n\n::\n\n    $ python setup.py test\n\nExamples\n--------\n\nWatch a directory while creating new files. This prints\n\n::\n\n    event: test.txt IN_CLOSE|IN_CLOSE_WRITE|IN_ALL_EVENTS\n\nevery second:\n\n.. code:: python\n\n    #!/usr/bin/env python\n    from __future__ import print_function\n    import os\n    import gevent\n    import gevent_inotifyx as inotify\n\n    def create_file_events():\n        \"\"\"Open and close a file to generate inotify events.\"\"\"\n        while True:\n            with open('/tmp/test.txt', 'a'):\n                pass\n            gevent.sleep(1)\n\n    def watch_for_events():\n        \"\"\"Wait for events and print them to stdout.\"\"\"\n        fd = inotify.init()\n        try:\n            wd = inotify.add_watch(fd, '/tmp', inotify.IN_CLOSE_WRITE)\n            while True:\n                for event in inotify.get_events(fd):\n                    print(\"event:\", event.name, event.get_mask_description())\n        finally:\n            os.close(fd)\n\n    if __name__ == '__main__':\n        tasks = [\n            gevent.spawn(watch_for_events),\n            gevent.spawn(create_file_events),\n        ]\n        gevent.joinall(tasks)\n\nLicense\n-------\n\ngevent\\_inotifyx is licensed under the MIT License. See the included\nfile ``LICENSE`` for details.\n\n.. |build-status-img| image:: https://travis-ci.org/trendels/gevent_inotifyx.svg\n   :target: https://travis-ci.org/trendels/gevent_inotifyx", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/trendels/gevent_inotifyx", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gevent_inotifyx", "package_url": "https://pypi.org/project/gevent_inotifyx/", "platform": "", "project_url": "https://pypi.org/project/gevent_inotifyx/", "project_urls": {"Homepage": "https://github.com/trendels/gevent_inotifyx"}, "release_url": "https://pypi.org/project/gevent_inotifyx/0.2/", "requires_dist": null, "requires_python": "", "summary": "gevent compatibility for inotifyx", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/trendels/gevent_inotifyx\" rel=\"nofollow\"><img alt=\"build-status-img\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6825d71902a5eba06e0c186ad5ebae731bed250/68747470733a2f2f7472617669732d63692e6f72672f7472656e64656c732f676576656e745f696e6f74696679782e737667\"></a></p>\n<p>Gevent-compatible low-level inotify bindings based on\n<a href=\"https://launchpad.net/inotifyx/\" rel=\"nofollow\">inotifyx</a>.</p>\n<ul>\n<li>Python 2 and 3 compatible</li>\n<li>Exposes a low-level\n<a href=\"http://man7.org/linux/man-pages/man7/inotify.7.html\" rel=\"nofollow\">inotify(7)</a>\nAPI</li>\n<li>Allows to wait for events in a non-blocking way when using\n<a href=\"http://www.gevent.org/\" rel=\"nofollow\">gevent</a>.</li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install gevent_inotifyx\n</pre>\n<p>From source:</p>\n<pre>$ python setup.py install\n</pre>\n<p>To run the tests:</p>\n<pre>$ python setup.py test\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Watch a directory while creating new files. This prints</p>\n<pre>event: test.txt IN_CLOSE|IN_CLOSE_WRITE|IN_ALL_EVENTS\n</pre>\n<p>every second:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">gevent</span>\n<span class=\"kn\">import</span> <span class=\"nn\">gevent_inotifyx</span> <span class=\"k\">as</span> <span class=\"nn\">inotify</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">create_file_events</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"Open and close a file to generate inotify events.\"\"\"</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/test.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'a'</span><span class=\"p\">):</span>\n            <span class=\"k\">pass</span>\n        <span class=\"n\">gevent</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">watch_for_events</span><span class=\"p\">():</span>\n    <span class=\"sd\">\"\"\"Wait for events and print them to stdout.\"\"\"</span>\n    <span class=\"n\">fd</span> <span class=\"o\">=</span> <span class=\"n\">inotify</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">()</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">wd</span> <span class=\"o\">=</span> <span class=\"n\">inotify</span><span class=\"o\">.</span><span class=\"n\">add_watch</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span> <span class=\"s1\">'/tmp'</span><span class=\"p\">,</span> <span class=\"n\">inotify</span><span class=\"o\">.</span><span class=\"n\">IN_CLOSE_WRITE</span><span class=\"p\">)</span>\n        <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">event</span> <span class=\"ow\">in</span> <span class=\"n\">inotify</span><span class=\"o\">.</span><span class=\"n\">get_events</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">):</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"event:\"</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">get_mask_description</span><span class=\"p\">())</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">tasks</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">gevent</span><span class=\"o\">.</span><span class=\"n\">spawn</span><span class=\"p\">(</span><span class=\"n\">watch_for_events</span><span class=\"p\">),</span>\n        <span class=\"n\">gevent</span><span class=\"o\">.</span><span class=\"n\">spawn</span><span class=\"p\">(</span><span class=\"n\">create_file_events</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n    <span class=\"n\">gevent</span><span class=\"o\">.</span><span class=\"n\">joinall</span><span class=\"p\">(</span><span class=\"n\">tasks</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>gevent_inotifyx is licensed under the MIT License. See the included\nfile <tt>LICENSE</tt> for details.</p>\n</div>\n\n          </div>"}, "last_serial": 3629996, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6a52498aeae77ddddc6016795327d155", "sha256": "06437257ee27070dc83c023e585ddfdd2f66124209bb19b0f59d8c98b9af88bb"}, "downloads": -1, "filename": "gevent_inotifyx-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6a52498aeae77ddddc6016795327d155", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3403, "upload_time": "2012-12-07T15:37:10", "upload_time_iso_8601": "2012-12-07T15:37:10.465413Z", "url": "https://files.pythonhosted.org/packages/56/ef/e9f282af076752c9be5d77da338433cf1e3f650575d6358c4d86769427ee/gevent_inotifyx-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "05ebaf8c3d69b92283da93a846f78190", "sha256": "b8e0f01d020e7c5a5f446afc51408259f4b3dbc60c0389d44f61c92ae613c120"}, "downloads": -1, "filename": "gevent_inotifyx-0.1.1.tar.gz", "has_sig": false, "md5_digest": "05ebaf8c3d69b92283da93a846f78190", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3442, "upload_time": "2013-04-12T20:27:42", "upload_time_iso_8601": "2013-04-12T20:27:42.681304Z", "url": "https://files.pythonhosted.org/packages/71/de/5ee7f670f8e61e0b5591370646dd65e72ce8d969d0a2931a6264828398ab/gevent_inotifyx-0.1.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "99ad063cfd3e17299dd8ae162728df38", "sha256": "39ad04c8b26d8c8075faac8f4b1d6cb863dd37d85c15ac426ba2d551855ac978"}, "downloads": -1, "filename": "gevent_inotifyx-0.2.tar.gz", "has_sig": false, "md5_digest": "99ad063cfd3e17299dd8ae162728df38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8348, "upload_time": "2018-03-01T21:37:46", "upload_time_iso_8601": "2018-03-01T21:37:46.005921Z", "url": "https://files.pythonhosted.org/packages/0b/11/cfd16b1cb00114806b94d5e800bcbca319ae78022d00439e63d3011be6f7/gevent_inotifyx-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "99ad063cfd3e17299dd8ae162728df38", "sha256": "39ad04c8b26d8c8075faac8f4b1d6cb863dd37d85c15ac426ba2d551855ac978"}, "downloads": -1, "filename": "gevent_inotifyx-0.2.tar.gz", "has_sig": false, "md5_digest": "99ad063cfd3e17299dd8ae162728df38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8348, "upload_time": "2018-03-01T21:37:46", "upload_time_iso_8601": "2018-03-01T21:37:46.005921Z", "url": "https://files.pythonhosted.org/packages/0b/11/cfd16b1cb00114806b94d5e800bcbca319ae78022d00439e63d3011be6f7/gevent_inotifyx-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:39 2020"}