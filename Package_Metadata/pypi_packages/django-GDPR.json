{"info": {"author": "Druids", "author_email": "matllubos@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# Django-GDPR [![Build Status](https://travis-ci.org/BrnoPCmaniak/django-GDPR.svg?branch=develop)](https://travis-ci.org/BrnoPCmaniak/django-GDPR)\n\nThis library enables you to store user's consent for data retention easily\nand to anonymize/deanonymize user's data accordingly.\n\nFor brief overview you can check example app in `tests` directory.\n\n# Quickstart\n\nInstall django-gdpr with pip:\n\n```bash\npip install django-gdpr\n```\n\nAdd gdpr to your `INSTALLED_APPS`:\n\n```python\nINSTALLED_APPS = [\n    # Django apps...\n    'gdpr',\n]\n```\n\nImagine having a customer model:\n\n```python\n# app/models.py\n\nfrom django.db import models\n\nfrom gdpr.mixins import AnonymizationModel\n\nclass Customer(AnonymizationModel):\n    # these fields will be used as basic keys for pseudoanonymization\n    first_name = models.CharField(max_length=256)\n    last_name = models.CharField(max_length=256)\n\n    birth_date = models.DateField(blank=True, null=True)\n    personal_id = models.CharField(max_length=10, blank=True, null=True)\n    phone_number = models.CharField(max_length=9, blank=True, null=True)\n    fb_id = models.CharField(max_length=256, blank=True, null=True)\n    last_login_ip = models.GenericIPAddressField(blank=True, null=True)\n```\n\nYou may want a consent to store all user's data for two years and consent to store first and last name for 10 years.\nFor that you can simply add new consent purposes like this.\n\n```python\n# app/purposes.py\n\nfrom dateutil.relativedelta import relativedelta\n\nfrom gdpr.purposes.default import AbstractPurpose\n\nGENERAL_PURPOSE_SLUG = \"general\"\nFIRST_AND_LAST_NAME_SLUG = \"first_and_last\"\n\nclass GeneralPurpose(AbstractPurpose):\n    name = \"Retain user data for 2 years\"\n    slug = GENERAL_PURPOSE_SLUG\n    expiration_timedelta = relativedelta(years=2)\n    fields = \"__ALL__\"  # Anonymize all fields defined in anonymizer\n\nclass FirstAndLastNamePurpose(AbstractPurpose):\n    \"\"\"Store First & Last name for 10 years.\"\"\"\n    name = \"retain due to internet archive\"\n    slug = FIRST_AND_LAST_NAME_SLUG\n    expiration_timedelta = relativedelta(years=10)\n    fields = (\"first_name\", \"last_name\")\n```\n\nThe field `fields` specify to which fields this consent applies to.\n\nSome more examples:\n```python\nfields = (\"first_name\", \"last_name\") # Anonymize only two fields\n\n# You can also add nested fields to anonymize fields on related objects.\nfields = (\n    \"primary_email_address\",\n    (\"emails\", (\n        \"email\",\n    )),\n)\n\n# Some more advanced configs may look like this:\nfields = (\n    \"__ALL__\",\n    (\"addresses\", \"__ALL__\"),\n    (\"accounts\", (\n        \"__ALL__\",\n        (\"payments\", (\n            \"__ALL__\",\n        ))\n    )),\n    (\"emails\", (\n        \"email\",\n    )),\n)\n\n```\n\nNow when we have the purpose(s) created we also have to make an _anonymizer_ so the library knows which fields to\nanonymize and how. This is fairly simple and is quite similar to Django forms.\n\n```python\n# app/anonymizers.py\n\nfrom gdpr import anonymizers\nfrom tests.models import Customer\n\n\nclass CustomerAnonymizer(anonymizers.ModelAnonymizer):\n    first_name = anonymizers.MD5TextFieldAnonymizer()\n    last_name = anonymizers.MD5TextFieldAnonymizer()\n    primary_email_address = anonymizers.EmailFieldAnonymizer()\n\n    birth_date = anonymizers.DateFieldAnonymizer()\n    personal_id = anonymizers.PersonalIIDFieldAnonymizer()\n    phone_number = anonymizers.PhoneFieldAnonymizer()\n    fb_id = anonymizers.CharFieldAnonymizer()\n    last_login_ip = anonymizers.IPAddressFieldAnonymizer()\n\n    class Meta:\n        model = Customer\n```\n\nNow you can fully leverage the system:\n\nYou can create/revoke consent:\n```python\nfrom gdpr.models import LegalReason\n\nfrom tests.models import Customer\nfrom tests.purposes import FIRST_AND_LAST_NAME_SLUG\n\n\ncustomer = Customer(first_name=\"John\", last_name=\"Smith\")\ncustomer.save()\n\n# Create consent\nLegalReason.objects.create_consent(FIRST_AND_LAST_NAME_SLUG, customer)\n\n# And now you can revoke it\nLegalReason.objects.deactivate_consent(FIRST_AND_LAST_NAME_SLUG, customer)\n```\n\nIn case your model uses the `AnonymizationModelMixin` or `AnonymizationModel` you can create and revoke consents even\neasier.\n```python\nfrom tests.models import Customer\nfrom tests.purposes import FIRST_AND_LAST_NAME_SLUG\n\n\ncustomer = Customer(first_name=\"John\", last_name=\"Smith\")\ncustomer.save()\n\n# Create consent\ncustomer.create_consent(FIRST_AND_LAST_NAME_SLUG)\n\n# And now you can revoke it\ncustomer.deactivate_consent(FIRST_AND_LAST_NAME_SLUG)\n```\n\n\nExpired consents are revoked by running the following command. You should invoke it repeatedly, for example by cron.\nThe invocation interval depends on your circumstances - how fast you want to expire consents after their revocation,\nthe amount of consents to expire in the interval, server load, and last but not least, legal requirements.\n\n```python\nfrom gdpr.models import LegalReason\n\nLegalReason.objects.expire_old_consents()\n```\n\n## FieldAnonymizers\n\n* `FunctionAnonymizer` - in place lambda/function anonymization method (e.g. `secret_code = anonymizers.FunctionFieldAnonymizer(lambda x: x**2)`)\n* `DateFieldAnonymizer`\n* `CharFieldAnonymizer`\n* `DecimalFieldAnonymizer`\n* `IPAddressFieldAnonymizer`\n* `CzechAccountNumberFieldAnonymizer` - for czech bank account numbers\n* `IBANFieldAnonymizer`\n* `JSONFieldAnonymizer`\n* `EmailFieldAnonymizer`\n* `MD5TextFieldAnonymizer`\n* `SHA256TextFieldAnonymizer`\n* `HashTextFieldAnonymizer` - anonymization using given hash algorithm (e.g. `secret_code = anonymizers.HashTextFieldAnonymizer('sha512')`)\n* `StaticValueFieldAnonymizer` - anonymization by replacing with static value (e.g. `secret_code = anonymizers.StaticValueFieldAnonymizer(42)`)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/druids/django-GDPR", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-GDPR", "package_url": "https://pypi.org/project/django-GDPR/", "platform": "", "project_url": "https://pypi.org/project/django-GDPR/", "project_urls": {"Homepage": "https://github.com/druids/django-GDPR"}, "release_url": "https://pypi.org/project/django-GDPR/0.2.9/", "requires_dist": null, "requires_python": "", "summary": "Library for GDPR implementation", "version": "0.2.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django-GDPR <a href=\"https://travis-ci.org/BrnoPCmaniak/django-GDPR\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3275421abb1645f97dfa0fd5eba048feb8f7021b/68747470733a2f2f7472617669732d63692e6f72672f42726e6f50436d616e69616b2f646a616e676f2d474450522e7376673f6272616e63683d646576656c6f70\"></a></h1>\n<p>This library enables you to store user's consent for data retention easily\nand to anonymize/deanonymize user's data accordingly.</p>\n<p>For brief overview you can check example app in <code>tests</code> directory.</p>\n<h1>Quickstart</h1>\n<p>Install django-gdpr with pip:</p>\n<pre>pip install django-gdpr\n</pre>\n<p>Add gdpr to your <code>INSTALLED_APPS</code>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># Django apps...</span>\n    <span class=\"s1\">'gdpr'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Imagine having a customer model:</p>\n<pre><span class=\"c1\"># app/models.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">gdpr.mixins</span> <span class=\"kn\">import</span> <span class=\"n\">AnonymizationModel</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Customer</span><span class=\"p\">(</span><span class=\"n\">AnonymizationModel</span><span class=\"p\">):</span>\n    <span class=\"c1\"># these fields will be used as basic keys for pseudoanonymization</span>\n    <span class=\"n\">first_name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">)</span>\n    <span class=\"n\">last_name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">)</span>\n\n    <span class=\"n\">birth_date</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">(</span><span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">personal_id</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">phone_number</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">fb_id</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">last_login_ip</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">GenericIPAddressField</span><span class=\"p\">(</span><span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>You may want a consent to store all user's data for two years and consent to store first and last name for 10 years.\nFor that you can simply add new consent purposes like this.</p>\n<pre><span class=\"c1\"># app/purposes.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dateutil.relativedelta</span> <span class=\"kn\">import</span> <span class=\"n\">relativedelta</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">gdpr.purposes.default</span> <span class=\"kn\">import</span> <span class=\"n\">AbstractPurpose</span>\n\n<span class=\"n\">GENERAL_PURPOSE_SLUG</span> <span class=\"o\">=</span> <span class=\"s2\">\"general\"</span>\n<span class=\"n\">FIRST_AND_LAST_NAME_SLUG</span> <span class=\"o\">=</span> <span class=\"s2\">\"first_and_last\"</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">GeneralPurpose</span><span class=\"p\">(</span><span class=\"n\">AbstractPurpose</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"Retain user data for 2 years\"</span>\n    <span class=\"n\">slug</span> <span class=\"o\">=</span> <span class=\"n\">GENERAL_PURPOSE_SLUG</span>\n    <span class=\"n\">expiration_timedelta</span> <span class=\"o\">=</span> <span class=\"n\">relativedelta</span><span class=\"p\">(</span><span class=\"n\">years</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"s2\">\"__ALL__\"</span>  <span class=\"c1\"># Anonymize all fields defined in anonymizer</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">FirstAndLastNamePurpose</span><span class=\"p\">(</span><span class=\"n\">AbstractPurpose</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Store First &amp; Last name for 10 years.\"\"\"</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"retain due to internet archive\"</span>\n    <span class=\"n\">slug</span> <span class=\"o\">=</span> <span class=\"n\">FIRST_AND_LAST_NAME_SLUG</span>\n    <span class=\"n\">expiration_timedelta</span> <span class=\"o\">=</span> <span class=\"n\">relativedelta</span><span class=\"p\">(</span><span class=\"n\">years</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">\"first_name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"last_name\"</span><span class=\"p\">)</span>\n</pre>\n<p>The field <code>fields</code> specify to which fields this consent applies to.</p>\n<p>Some more examples:</p>\n<pre><span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">\"first_name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"last_name\"</span><span class=\"p\">)</span> <span class=\"c1\"># Anonymize only two fields</span>\n\n<span class=\"c1\"># You can also add nested fields to anonymize fields on related objects.</span>\n<span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s2\">\"primary_email_address\"</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"emails\"</span><span class=\"p\">,</span> <span class=\"p\">(</span>\n        <span class=\"s2\">\"email\"</span><span class=\"p\">,</span>\n    <span class=\"p\">)),</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Some more advanced configs may look like this:</span>\n<span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s2\">\"__ALL__\"</span><span class=\"p\">,</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"addresses\"</span><span class=\"p\">,</span> <span class=\"s2\">\"__ALL__\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"accounts\"</span><span class=\"p\">,</span> <span class=\"p\">(</span>\n        <span class=\"s2\">\"__ALL__\"</span><span class=\"p\">,</span>\n        <span class=\"p\">(</span><span class=\"s2\">\"payments\"</span><span class=\"p\">,</span> <span class=\"p\">(</span>\n            <span class=\"s2\">\"__ALL__\"</span><span class=\"p\">,</span>\n        <span class=\"p\">))</span>\n    <span class=\"p\">)),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"emails\"</span><span class=\"p\">,</span> <span class=\"p\">(</span>\n        <span class=\"s2\">\"email\"</span><span class=\"p\">,</span>\n    <span class=\"p\">)),</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Now when we have the purpose(s) created we also have to make an <em>anonymizer</em> so the library knows which fields to\nanonymize and how. This is fairly simple and is quite similar to Django forms.</p>\n<pre><span class=\"c1\"># app/anonymizers.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">gdpr</span> <span class=\"kn\">import</span> <span class=\"n\">anonymizers</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tests.models</span> <span class=\"kn\">import</span> <span class=\"n\">Customer</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomerAnonymizer</span><span class=\"p\">(</span><span class=\"n\">anonymizers</span><span class=\"o\">.</span><span class=\"n\">ModelAnonymizer</span><span class=\"p\">):</span>\n    <span class=\"n\">first_name</span> <span class=\"o\">=</span> <span class=\"n\">anonymizers</span><span class=\"o\">.</span><span class=\"n\">MD5TextFieldAnonymizer</span><span class=\"p\">()</span>\n    <span class=\"n\">last_name</span> <span class=\"o\">=</span> <span class=\"n\">anonymizers</span><span class=\"o\">.</span><span class=\"n\">MD5TextFieldAnonymizer</span><span class=\"p\">()</span>\n    <span class=\"n\">primary_email_address</span> <span class=\"o\">=</span> <span class=\"n\">anonymizers</span><span class=\"o\">.</span><span class=\"n\">EmailFieldAnonymizer</span><span class=\"p\">()</span>\n\n    <span class=\"n\">birth_date</span> <span class=\"o\">=</span> <span class=\"n\">anonymizers</span><span class=\"o\">.</span><span class=\"n\">DateFieldAnonymizer</span><span class=\"p\">()</span>\n    <span class=\"n\">personal_id</span> <span class=\"o\">=</span> <span class=\"n\">anonymizers</span><span class=\"o\">.</span><span class=\"n\">PersonalIIDFieldAnonymizer</span><span class=\"p\">()</span>\n    <span class=\"n\">phone_number</span> <span class=\"o\">=</span> <span class=\"n\">anonymizers</span><span class=\"o\">.</span><span class=\"n\">PhoneFieldAnonymizer</span><span class=\"p\">()</span>\n    <span class=\"n\">fb_id</span> <span class=\"o\">=</span> <span class=\"n\">anonymizers</span><span class=\"o\">.</span><span class=\"n\">CharFieldAnonymizer</span><span class=\"p\">()</span>\n    <span class=\"n\">last_login_ip</span> <span class=\"o\">=</span> <span class=\"n\">anonymizers</span><span class=\"o\">.</span><span class=\"n\">IPAddressFieldAnonymizer</span><span class=\"p\">()</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Customer</span>\n</pre>\n<p>Now you can fully leverage the system:</p>\n<p>You can create/revoke consent:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gdpr.models</span> <span class=\"kn\">import</span> <span class=\"n\">LegalReason</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">tests.models</span> <span class=\"kn\">import</span> <span class=\"n\">Customer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tests.purposes</span> <span class=\"kn\">import</span> <span class=\"n\">FIRST_AND_LAST_NAME_SLUG</span>\n\n\n<span class=\"n\">customer</span> <span class=\"o\">=</span> <span class=\"n\">Customer</span><span class=\"p\">(</span><span class=\"n\">first_name</span><span class=\"o\">=</span><span class=\"s2\">\"John\"</span><span class=\"p\">,</span> <span class=\"n\">last_name</span><span class=\"o\">=</span><span class=\"s2\">\"Smith\"</span><span class=\"p\">)</span>\n<span class=\"n\">customer</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Create consent</span>\n<span class=\"n\">LegalReason</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create_consent</span><span class=\"p\">(</span><span class=\"n\">FIRST_AND_LAST_NAME_SLUG</span><span class=\"p\">,</span> <span class=\"n\">customer</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># And now you can revoke it</span>\n<span class=\"n\">LegalReason</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">deactivate_consent</span><span class=\"p\">(</span><span class=\"n\">FIRST_AND_LAST_NAME_SLUG</span><span class=\"p\">,</span> <span class=\"n\">customer</span><span class=\"p\">)</span>\n</pre>\n<p>In case your model uses the <code>AnonymizationModelMixin</code> or <code>AnonymizationModel</code> you can create and revoke consents even\neasier.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tests.models</span> <span class=\"kn\">import</span> <span class=\"n\">Customer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tests.purposes</span> <span class=\"kn\">import</span> <span class=\"n\">FIRST_AND_LAST_NAME_SLUG</span>\n\n\n<span class=\"n\">customer</span> <span class=\"o\">=</span> <span class=\"n\">Customer</span><span class=\"p\">(</span><span class=\"n\">first_name</span><span class=\"o\">=</span><span class=\"s2\">\"John\"</span><span class=\"p\">,</span> <span class=\"n\">last_name</span><span class=\"o\">=</span><span class=\"s2\">\"Smith\"</span><span class=\"p\">)</span>\n<span class=\"n\">customer</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Create consent</span>\n<span class=\"n\">customer</span><span class=\"o\">.</span><span class=\"n\">create_consent</span><span class=\"p\">(</span><span class=\"n\">FIRST_AND_LAST_NAME_SLUG</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># And now you can revoke it</span>\n<span class=\"n\">customer</span><span class=\"o\">.</span><span class=\"n\">deactivate_consent</span><span class=\"p\">(</span><span class=\"n\">FIRST_AND_LAST_NAME_SLUG</span><span class=\"p\">)</span>\n</pre>\n<p>Expired consents are revoked by running the following command. You should invoke it repeatedly, for example by cron.\nThe invocation interval depends on your circumstances - how fast you want to expire consents after their revocation,\nthe amount of consents to expire in the interval, server load, and last but not least, legal requirements.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gdpr.models</span> <span class=\"kn\">import</span> <span class=\"n\">LegalReason</span>\n\n<span class=\"n\">LegalReason</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">expire_old_consents</span><span class=\"p\">()</span>\n</pre>\n<h2>FieldAnonymizers</h2>\n<ul>\n<li><code>FunctionAnonymizer</code> - in place lambda/function anonymization method (e.g. <code>secret_code = anonymizers.FunctionFieldAnonymizer(lambda x: x**2)</code>)</li>\n<li><code>DateFieldAnonymizer</code></li>\n<li><code>CharFieldAnonymizer</code></li>\n<li><code>DecimalFieldAnonymizer</code></li>\n<li><code>IPAddressFieldAnonymizer</code></li>\n<li><code>CzechAccountNumberFieldAnonymizer</code> - for czech bank account numbers</li>\n<li><code>IBANFieldAnonymizer</code></li>\n<li><code>JSONFieldAnonymizer</code></li>\n<li><code>EmailFieldAnonymizer</code></li>\n<li><code>MD5TextFieldAnonymizer</code></li>\n<li><code>SHA256TextFieldAnonymizer</code></li>\n<li><code>HashTextFieldAnonymizer</code> - anonymization using given hash algorithm (e.g. <code>secret_code = anonymizers.HashTextFieldAnonymizer('sha512')</code>)</li>\n<li><code>StaticValueFieldAnonymizer</code> - anonymization by replacing with static value (e.g. <code>secret_code = anonymizers.StaticValueFieldAnonymizer(42)</code>)</li>\n</ul>\n\n          </div>"}, "last_serial": 6670120, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5d3644ad7c181f821f9108c8c21c926f", "sha256": "f7a6aa131cb52d9c3917e0ee18650ed7cc2d4e2ccf1514ea0840954a47a54c58"}, "downloads": -1, "filename": "django-GDPR-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5d3644ad7c181f821f9108c8c21c926f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7392, "upload_time": "2018-04-16T11:35:43", "upload_time_iso_8601": "2018-04-16T11:35:43.506699Z", "url": "https://files.pythonhosted.org/packages/24/e1/3c0a9d09934289fe05c558a39c8397c97ff037eb6ab0c6f3054608140617/django-GDPR-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7a11e931b15ed9923fbc6ffab5511288", "sha256": "fb252f570f492b9fb724b1383be393029ab3e2f8b6516c813e623e06c298de8c"}, "downloads": -1, "filename": "django-GDPR-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7a11e931b15ed9923fbc6ffab5511288", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7119, "upload_time": "2018-05-13T19:30:11", "upload_time_iso_8601": "2018-05-13T19:30:11.913838Z", "url": "https://files.pythonhosted.org/packages/e6/b8/0438778506bc4354e8498f2aefff1dda1fb81f64818259feee222741c2fd/django-GDPR-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "bad7a7b5e399f4b6efe251f8bba9b6d5", "sha256": "79566e2a9aa203d123d9898e2aee45c8404d16e579cf0f48a8af2082d120fd94"}, "downloads": -1, "filename": "django-GDPR-0.1.2.tar.gz", "has_sig": false, "md5_digest": "bad7a7b5e399f4b6efe251f8bba9b6d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7137, "upload_time": "2018-05-16T08:27:08", "upload_time_iso_8601": "2018-05-16T08:27:08.469753Z", "url": "https://files.pythonhosted.org/packages/f1/a9/235ec458d1263cf4a01b3fbc46a3c4f26956c78a8ae9e39fb1f747d73169/django-GDPR-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "2452beeea625d74849ab3252d997b242", "sha256": "6f2a7990a9a323d1a68063272eebf0e1b9c165648bfec7d1cc8743832e7fb66a"}, "downloads": -1, "filename": "django-GDPR-0.1.3.tar.gz", "has_sig": false, "md5_digest": "2452beeea625d74849ab3252d997b242", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7231, "upload_time": "2018-06-20T15:34:25", "upload_time_iso_8601": "2018-06-20T15:34:25.709915Z", "url": "https://files.pythonhosted.org/packages/af/28/cff4878133fa0f2bdba89eb263a3dbaf29d72774c05d13d56dfc4007696e/django-GDPR-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "b7ff471deb5678082b810fda08c273b7", "sha256": "7c27f3c4b63fe4ac1bddfdda75902c65a1cb7bffc1058f4dfb9f7092ecdf2375"}, "downloads": -1, "filename": "django-GDPR-0.1.4.tar.gz", "has_sig": false, "md5_digest": "b7ff471deb5678082b810fda08c273b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7310, "upload_time": "2018-12-07T12:57:32", "upload_time_iso_8601": "2018-12-07T12:57:32.246089Z", "url": "https://files.pythonhosted.org/packages/d4/63/b3b950e29e93814175a088d2ca3dc8bf23cb7320363a5b8cd5bf53f09e24/django-GDPR-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "4a70ec11257503f2dfaddae2f269f660", "sha256": "e8673644de0333f1940eb4c34f8a3057aa0e4163d9ce2d24819de706400fbf3e"}, "downloads": -1, "filename": "django-GDPR-0.1.5.tar.gz", "has_sig": false, "md5_digest": "4a70ec11257503f2dfaddae2f269f660", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8434, "upload_time": "2019-01-10T09:40:49", "upload_time_iso_8601": "2019-01-10T09:40:49.942629Z", "url": "https://files.pythonhosted.org/packages/38/a1/781574cda4b6c83e65e2e089a1a8c760bb96019b264e23508b4a383082d0/django-GDPR-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "041caa94d6c1673175b03eca1d02d2b5", "sha256": "903e7965311c81eba2d4d66b320f2fb46e7a0272c2466aeaf0f657bde4bf03fb"}, "downloads": -1, "filename": "django-GDPR-0.1.6.tar.gz", "has_sig": false, "md5_digest": "041caa94d6c1673175b03eca1d02d2b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8422, "upload_time": "2019-01-15T17:01:32", "upload_time_iso_8601": "2019-01-15T17:01:32.223581Z", "url": "https://files.pythonhosted.org/packages/3a/5b/19ec343f984733b8ae8516be739dc3e707848a4a4cd2147216fc4d768321/django-GDPR-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "68956b588f8633d5a4891c8febfde0c3", "sha256": "d255f3792719b4e3955ad57c1de011537aa9bf35dd44b5a4e60f1db831ac6ad9"}, "downloads": -1, "filename": "django-GDPR-0.1.7.tar.gz", "has_sig": false, "md5_digest": "68956b588f8633d5a4891c8febfde0c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8517, "upload_time": "2019-01-18T13:54:15", "upload_time_iso_8601": "2019-01-18T13:54:15.146894Z", "url": "https://files.pythonhosted.org/packages/5d/a9/3be839709417a82ea75ec0875237b89f65edc2aea59a6d5f23631a4c1253/django-GDPR-0.1.7.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "5a4e5d900fb6cbd77ded1bd385e34e39", "sha256": "f075f2a0bb713f4225210e05d89885cc655284d935d0766599fc0f9d0317948e"}, "downloads": -1, "filename": "django-GDPR-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5a4e5d900fb6cbd77ded1bd385e34e39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8569, "upload_time": "2019-03-12T12:05:48", "upload_time_iso_8601": "2019-03-12T12:05:48.669419Z", "url": "https://files.pythonhosted.org/packages/f0/c2/ec61365a9fc5ade4ebb10fc9efb6c63bdcc6e2cb1da86bd9e8339537fdfc/django-GDPR-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "72d04478494989c3a26c6efbd6ac1308", "sha256": "affcee205efb1e692381b8b66d19c791aeff96e72e8d5664a72459cd854e3127"}, "downloads": -1, "filename": "django-GDPR-0.2.1.tar.gz", "has_sig": false, "md5_digest": "72d04478494989c3a26c6efbd6ac1308", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42645, "upload_time": "2019-03-12T12:11:43", "upload_time_iso_8601": "2019-03-12T12:11:43.472883Z", "url": "https://files.pythonhosted.org/packages/79/ae/e4211b5f7df9153ebf13ed58bb281c64f35bfcc01db5e03f4afb83bcec70/django-GDPR-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "12bb8ef59ab01f392dc1ba21b071f7bd", "sha256": "0f36575bdb49acee7d3013324ce6e029cd77ecfb71be1efd28bc250e5d285107"}, "downloads": -1, "filename": "django-GDPR-0.2.2.tar.gz", "has_sig": false, "md5_digest": "12bb8ef59ab01f392dc1ba21b071f7bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42647, "upload_time": "2019-03-12T15:53:56", "upload_time_iso_8601": "2019-03-12T15:53:56.634926Z", "url": "https://files.pythonhosted.org/packages/a2/76/4348172cca7b25aafdd16abf562ba3de67cb89a35bd77b4c7099311636d5/django-GDPR-0.2.2.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "c012a6a8384e3665d145d77ba66f9e05", "sha256": "c7c1ce9dad350fc7e0204013337085d9126364deb209f9f4e94ec770f3e49655"}, "downloads": -1, "filename": "django-GDPR-0.2.4.tar.gz", "has_sig": false, "md5_digest": "c012a6a8384e3665d145d77ba66f9e05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43081, "upload_time": "2019-03-13T21:03:31", "upload_time_iso_8601": "2019-03-13T21:03:31.895294Z", "url": "https://files.pythonhosted.org/packages/ee/c0/27a9af5654a86d2c26eddcfd6baf5651ac8c6b31b4d4b3e0ca0142b072b2/django-GDPR-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "ff794405caefb1faa8c884416848baf0", "sha256": "450acfd5e255dd383d080ddf029914f4f077538382eb21129abd9779000ddfc0"}, "downloads": -1, "filename": "django-GDPR-0.2.5.tar.gz", "has_sig": false, "md5_digest": "ff794405caefb1faa8c884416848baf0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44579, "upload_time": "2019-03-20T12:38:34", "upload_time_iso_8601": "2019-03-20T12:38:34.028191Z", "url": "https://files.pythonhosted.org/packages/98/17/f36500b8d6af534b64d8740ca3ed54bf6ff55130ceaa8a033111b3d4e813/django-GDPR-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "abd782afa60a91b0d35c60bef643d846", "sha256": "cf99506467ebfe11287b3d6443f1ebaff7ee0885bec7972594cb95276f1dfd2f"}, "downloads": -1, "filename": "django-GDPR-0.2.6.tar.gz", "has_sig": false, "md5_digest": "abd782afa60a91b0d35c60bef643d846", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44624, "upload_time": "2019-03-20T14:44:17", "upload_time_iso_8601": "2019-03-20T14:44:17.381858Z", "url": "https://files.pythonhosted.org/packages/c8/ea/84487de2ae800a28d8f2213484ba680145ed225e7bfcde727b887b921c7c/django-GDPR-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "081de4fb672d69817593e44426d4cd4a", "sha256": "9876636a49f2c55e79272b53d7d9ca5a679ae1b419f1421b714f7f10e7e3fb4a"}, "downloads": -1, "filename": "django-GDPR-0.2.7.tar.gz", "has_sig": false, "md5_digest": "081de4fb672d69817593e44426d4cd4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44716, "upload_time": "2019-03-28T09:42:06", "upload_time_iso_8601": "2019-03-28T09:42:06.705722Z", "url": "https://files.pythonhosted.org/packages/ea/97/682baa895c4ec58bfd4b92f0437dcedbc276a1eef2da3f36205cf6053af4/django-GDPR-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "87c593ebe75abf167e73ef5970a27e6d", "sha256": "113e0152352aa71ae9d2fb0aa718a1f0f4fa648eadf6e2c7a13db6689743d79a"}, "downloads": -1, "filename": "django-GDPR-0.2.8.tar.gz", "has_sig": false, "md5_digest": "87c593ebe75abf167e73ef5970a27e6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44754, "upload_time": "2019-11-14T10:27:52", "upload_time_iso_8601": "2019-11-14T10:27:52.645699Z", "url": "https://files.pythonhosted.org/packages/df/04/79e52e4546975db366f51ea13a2059061dd726c2dc29438b8d5129730956/django-GDPR-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "fe86e5141fbc33f767f0b3da944a8d1b", "sha256": "64adab990654276481ca29850c38021e72d74ee9bd0686a868155346a4284134"}, "downloads": -1, "filename": "django-GDPR-0.2.9.tar.gz", "has_sig": false, "md5_digest": "fe86e5141fbc33f767f0b3da944a8d1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45779, "upload_time": "2020-02-20T19:20:11", "upload_time_iso_8601": "2020-02-20T19:20:11.237204Z", "url": "https://files.pythonhosted.org/packages/da/4f/a772156a5f5b448a05a7e1447ebb7ae1ca79c080ee80560de3920c467912/django-GDPR-0.2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fe86e5141fbc33f767f0b3da944a8d1b", "sha256": "64adab990654276481ca29850c38021e72d74ee9bd0686a868155346a4284134"}, "downloads": -1, "filename": "django-GDPR-0.2.9.tar.gz", "has_sig": false, "md5_digest": "fe86e5141fbc33f767f0b3da944a8d1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45779, "upload_time": "2020-02-20T19:20:11", "upload_time_iso_8601": "2020-02-20T19:20:11.237204Z", "url": "https://files.pythonhosted.org/packages/da/4f/a772156a5f5b448a05a7e1447ebb7ae1ca79c080ee80560de3920c467912/django-GDPR-0.2.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:55 2020"}