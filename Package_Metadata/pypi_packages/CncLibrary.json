{"info": {"author": "Eficode Oy", "author_email": "info@eficode.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2 :: Only", "Topic :: Software Development :: Testing"], "description": "CncLibrary\n==========\n\nThis is a Robot Framework library for driving a CNC milling machine. Idea here is that the mill is modified/built so that the cutter is replaced by a tool tip that can be used to touch physical device e.g. device with numpad. With this library you can move the tool tip to predefined locations and use it to press (buttons). This is useful for auomating acceptance testing for devices that can only be accessed physically. Library only contains keywords for driving the tool. Assertions needs to be done with some other way depending on the device under test e.g. camera+image recognition.\n\nIn our case we used ShapeOko 2 CNC-milling machine controlled by Arduino based grbl motion controller connected to Raspberry Pi 2 with camera module. The device under test in example is iZettle payment terminal. \n\nImage Recognition library we used with camera for assertions is not included in this library.\n\nPrerequisities\n--------------\n\n- `Python 2.7`\n- `pip`\n- `Robot Framework`\n\nInstallation\n------------\n\nIf you have pip, installation is straightforward\n\n::\n\n    $ pip install robotframework-cnclibrary\n\nThis will automatically install dependencies as well as their dependencies.\n\nNote: if pip install does not find the package, \ndownload, extract and pip install the folder\n\n\n\nConfiguration file format\n-------------------------\n\nConfiguration uses simple json format where you define positions in 3D-space. \n\nThere is a special location called 'device_location' that needs to exist in the configuration. The 'device_location' is relative to the home location where you always start the test cases. This 'device_location' is also special location in a sense that it must be the highest location in Z-coordinates. This location is used as safe height when raising and moving the tool -- ie. no other location can be above the 'device_location' - otherwise the tool might collide to the device under test.\n\nButton locations are relative to 'device_location' in xy-plane to make it more simple to map the location of the buttons. Z-coodinate is however always relative to the home location ie. Z should never have negative value.\n\nYou can also define special locations that are not buttons. e.g. location where the tool should go to take a photo if you have a camera attached. You can use 'Go To' keyword to move the tool to such location without lowering/pressing.\n\nSee example config in examples/test_device.json.\n\nKeyword documentation\n---------------------\n\n`Keyword Documentation`__\n\n__ http://eficode.github.io/robotframework-cnclibrary/doc/CncLibrary.html\n\nRunning tests\n-------------\n\nTo run tests:\n\n::\n\n    $ cd tests/itest/\n    $ python test_cnclibrary.py", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Eficode/robotframework-cnclibrary", "keywords": "cnc robotframework testing testautomation acceptancetesting atdd bdd", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "CncLibrary", "package_url": "https://pypi.org/project/CncLibrary/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/CncLibrary/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Eficode/robotframework-cnclibrary"}, "release_url": "https://pypi.org/project/CncLibrary/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Robot Framework library for driving CNC mill", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a Robot Framework library for driving a CNC milling machine. Idea here is that the mill is modified/built so that the cutter is replaced by a tool tip that can be used to touch physical device e.g. device with numpad. With this library you can move the tool tip to predefined locations and use it to press (buttons). This is useful for auomating acceptance testing for devices that can only be accessed physically. Library only contains keywords for driving the tool. Assertions needs to be done with some other way depending on the device under test e.g. camera+image recognition.</p>\n<p>In our case we used ShapeOko 2 CNC-milling machine controlled by Arduino based grbl motion controller connected to Raspberry Pi 2 with camera module. The device under test in example is iZettle payment terminal.</p>\n<p>Image Recognition library we used with camera for assertions is not included in this library.</p>\n<div id=\"prerequisities\">\n<h2>Prerequisities</h2>\n<ul>\n<li><cite>Python 2.7</cite></li>\n<li><cite>pip</cite></li>\n<li><cite>Robot Framework</cite></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>If you have pip, installation is straightforward</p>\n<pre>$ pip install robotframework-cnclibrary\n</pre>\n<p>This will automatically install dependencies as well as their dependencies.</p>\n<p>Note: if pip install does not find the package,\ndownload, extract and pip install the folder</p>\n</div>\n<div id=\"configuration-file-format\">\n<h2>Configuration file format</h2>\n<p>Configuration uses simple json format where you define positions in 3D-space.</p>\n<p>There is a special location called \u2018device_location\u2019 that needs to exist in the configuration. The \u2018device_location\u2019 is relative to the home location where you always start the test cases. This \u2018device_location\u2019 is also special location in a sense that it must be the highest location in Z-coordinates. This location is used as safe height when raising and moving the tool \u2013 ie. no other location can be above the \u2018device_location\u2019 - otherwise the tool might collide to the device under test.</p>\n<p>Button locations are relative to \u2018device_location\u2019 in xy-plane to make it more simple to map the location of the buttons. Z-coodinate is however always relative to the home location ie. Z should never have negative value.</p>\n<p>You can also define special locations that are not buttons. e.g. location where the tool should go to take a photo if you have a camera attached. You can use \u2018Go To\u2019 keyword to move the tool to such location without lowering/pressing.</p>\n<p>See example config in examples/test_device.json.</p>\n</div>\n<div id=\"keyword-documentation\">\n<h2>Keyword documentation</h2>\n<p><a href=\"http://eficode.github.io/robotframework-cnclibrary/doc/CncLibrary.html\" rel=\"nofollow\">Keyword Documentation</a></p>\n</div>\n<div id=\"running-tests\">\n<h2>Running tests</h2>\n<p>To run tests:</p>\n<pre>$ cd tests/itest/\n$ python test_cnclibrary.py\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1842389, "releases": {"0.1-dev": [{"comment_text": "", "digests": {"md5": "eea250e904ab9fec0bec8d79e96edb57", "sha256": "57b9889f59dadacade9447cc1d310f474c86e18a37eb7642013227c71191b9e2"}, "downloads": -1, "filename": "CncLibrary-0.1-dev.tar.gz", "has_sig": false, "md5_digest": "eea250e904ab9fec0bec8d79e96edb57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5259, "upload_time": "2015-12-01T22:09:25", "upload_time_iso_8601": "2015-12-01T22:09:25.235356Z", "url": "https://files.pythonhosted.org/packages/02/81/08064c0b348d718a2c15c112f483b5a22ecc192f4e0ee3f91dd64394d256/CncLibrary-0.1-dev.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4cf2c431d4ac7fe822b41d62165f6386", "sha256": "609c8b948ae02913248dd00261c8fc10e5e02ce53ce0b0fc26fd9aec2fa6337e"}, "downloads": -1, "filename": "CncLibrary-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4cf2c431d4ac7fe822b41d62165f6386", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5261, "upload_time": "2015-12-01T22:14:01", "upload_time_iso_8601": "2015-12-01T22:14:01.413259Z", "url": "https://files.pythonhosted.org/packages/59/60/89052be268abed5386dcf87405746fbce49de8c5eb517aef0270a28039c1/CncLibrary-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4cf2c431d4ac7fe822b41d62165f6386", "sha256": "609c8b948ae02913248dd00261c8fc10e5e02ce53ce0b0fc26fd9aec2fa6337e"}, "downloads": -1, "filename": "CncLibrary-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4cf2c431d4ac7fe822b41d62165f6386", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5261, "upload_time": "2015-12-01T22:14:01", "upload_time_iso_8601": "2015-12-01T22:14:01.413259Z", "url": "https://files.pythonhosted.org/packages/59/60/89052be268abed5386dcf87405746fbce49de8c5eb517aef0270a28039c1/CncLibrary-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:29 2020"}