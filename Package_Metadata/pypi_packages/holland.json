{"info": {"author": "Lambda Life", "author_email": "lambdalife@henrywoody.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "<h1 align='center'>Holland</h1>\n<h2 align='center'>Genetic Algorithm Library for Python</h1>\n\n> Computer programs that \"evolve\" in ways that resemble natural selection can solve complex problems even their creators do not fully understand\n\n\n\n<div align='center'>\n    <a href='https://pypi.org/project/holland/'><img src='https://img.shields.io/pypi/v/holland.svg' alt='PyPI'></img></a>\n    <a href='https://travis-ci.com/lambdalife/holland'><img src='https://travis-ci.com/lambdalife/holland.svg?branch=master' alt='Build'></img></a>\n\t<a href='https://codecov.io/gh/lambdalife/holland'><img src='https://codecov.io/gh/lambdalife/holland/branch/master/graph/badge.svg' alt='Coverage'></img></a>\n    <a href='https://hollandpy.readthedocs.io/en/latest'><img src='https://readthedocs.org/projects/hollandpy/badge/?version=latest' alt='Documentation Status' /></a>\n    <a href=\"https://github.com/henrywoody/holland/blob/master/LICENSE\"><img alt=\"License: MIT\" src=\"https://img.shields.io/badge/License-MIT-purple.svg\"></a>\n</div>\n\n\n\n### Description\n\nHolland is a simple, flexible package for implementing the Genetic Algorithm in Python. The program is designed to act on an arbitrary evaluation function with arbitrary encoding of individuals within a population, both of which are provided by the user.\n\n### Installing\n\nHolland is available via the [Python Package Index (PyPI)](https://pypi.org/project/holland/) and can be installed with:\n\n```shell\npip install holland\n```\n\n### Usage\n\n[Full Documentation](https://hollandpy.readthedocs.io/en/latest/)\n\n**Hello World!**\n\n```python\nfrom holland import Evolver\nfrom holland.library import get_uniform_crossover_function\nfrom holland.utils import bound_value\nimport random\n\n\n# Define a fitness function\ndef fitness_function(genome):\n    message = genome[\"message\"]\n    target = \"Hello World!\"\n    score = 0\n    for i in range(len(message)):\n        score += abs(ord(target[i]) - ord(message[i]))\n    return score\n\ndef mutation_function(value):\n    mutated_value = ord(value) * random.random() * 2\n    return chr(bound_value(mutated_value, minimum=32, maximum=126, to_int=True))\n\n# Define genome parameters for individuals\ngenome_params = {\n    \"message\": {\n        \"type\": \"[str]\",\n        \"size\": len(\"Hello World!\"),\n        \"initial_distribution\": lambda: chr(random.randint(32, 126)),\n        \"crossover_function\": get_uniform_crossover_function(),\n        \"mutation_function\": mutation_function,\n        \"mutation_rate\": 0.15\n    }\n}\n\n# Define how to select individuals for reproduction\nselection_strategy = {\"pool\": {\"top\": 10}}\n\n# Run Evolution\nevolver = Evolver(\n    fitness_function,\n    genome_params,\n    selection_strategy,\n    should_maximize_fitness=False\n)\nfinal_population = evolver.evolve(stop_conditions={\"target_fitness\": 0})\n```\n\nWith sample run:\n\n> Generation: 0; Top Score: 201:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;N~flx.JGcu-*\n>\n> Generation: 1; Top Score: 98:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Xljlw);mj]f \n>\n> Generation: 2; Top Score: 64:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=c}kk SmsYf \n>\n> Generation: 3; Top Score: 37:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Kcjlk$Vms]f \n>\n> Generation: 4; Top Score: 24:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cdjkn Smshf \n>\n> Generation: 5; Top Score: 16:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Idjln Vmshf \n>\n> Generation: 6; Top Score: 14:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Idjln Voshf \n>\n> Generation: 7; Top Score: 11:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hdjln Vmslf \n>\n> Generation: 8; Top Score: 9:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hdjln Voslf \n>\n> Generation: 9; Top Score: 8:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hdjln Vosle \n>\n> Generation: 10; Top Score: 7:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hdmln Vosle \n>\n> Generation: 11; Top Score: 6:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hdlln Vosle \n>\n> Generation: 12; Top Score: 5:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hdllo Vosle \n>\n> Generation: 13; Top Score: 4:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hdllo Vosle!\n>\n> Generation: 14; Top Score: 3:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hello Vosle!\n>\n> Generation: 15; Top Score: 2:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hello Wosle!\n>\n> Generation: 16; Top Score: 2:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hello Wosle!\n>\n> Generation: 17; Top Score: 1:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hello Worle!\n>\n> Generation: 18; Top Score: 1:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hello Worle!\n>\n> Generation: 19; Top Score: 1:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hello Worle!\n>\n> Generation: 20; Top Score: 0:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hello World!\n\nBest Genome:\n\n```python\n{\n    'message': ['H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd', '!']\n}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lambdalife/holland", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "holland", "package_url": "https://pypi.org/project/holland/", "platform": "", "project_url": "https://pypi.org/project/holland/", "project_urls": {"Homepage": "https://github.com/lambdalife/holland"}, "release_url": "https://pypi.org/project/holland/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Genetic Algorithm Library", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Holland</h1>\n<h2>Genetic Algorithm Library for Python</h2>\n<blockquote>\n<p>Computer programs that \"evolve\" in ways that resemble natural selection can solve complex problems even their creators do not fully understand</p>\n</blockquote>\n<div>\n    <a href=\"https://pypi.org/project/holland/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/282d87fb39ccee946a977ce637860f4df91c078f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f686f6c6c616e642e737667\"></a>\n    <a href=\"https://travis-ci.com/lambdalife/holland\" rel=\"nofollow\"><img alt=\"Build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2f00a207461e93b98060feaf1cf74ef0b17c5aeb/68747470733a2f2f7472617669732d63692e636f6d2f6c616d6264616c6966652f686f6c6c616e642e7376673f6272616e63683d6d6173746572\"></a>\n\t<a href=\"https://codecov.io/gh/lambdalife/holland\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a53857342acc84852def691743b064764e1cd161/68747470733a2f2f636f6465636f762e696f2f67682f6c616d6264616c6966652f686f6c6c616e642f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n    <a href=\"https://hollandpy.readthedocs.io/en/latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29aa621c27276e28e596261c2f3bcdfb13547ed2/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f686f6c6c616e6470792f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n    <a href=\"https://github.com/henrywoody/holland/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a49f461fc8c1f6b9d30d1ab91e98210f92db2e6f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d707572706c652e737667\"></a>\n</div>\n<h3>Description</h3>\n<p>Holland is a simple, flexible package for implementing the Genetic Algorithm in Python. The program is designed to act on an arbitrary evaluation function with arbitrary encoding of individuals within a population, both of which are provided by the user.</p>\n<h3>Installing</h3>\n<p>Holland is available via the <a href=\"https://pypi.org/project/holland/\" rel=\"nofollow\">Python Package Index (PyPI)</a> and can be installed with:</p>\n<pre>pip install holland\n</pre>\n<h3>Usage</h3>\n<p><a href=\"https://hollandpy.readthedocs.io/en/latest/\" rel=\"nofollow\">Full Documentation</a></p>\n<p><strong>Hello World!</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">holland</span> <span class=\"kn\">import</span> <span class=\"n\">Evolver</span>\n<span class=\"kn\">from</span> <span class=\"nn\">holland.library</span> <span class=\"kn\">import</span> <span class=\"n\">get_uniform_crossover_function</span>\n<span class=\"kn\">from</span> <span class=\"nn\">holland.utils</span> <span class=\"kn\">import</span> <span class=\"n\">bound_value</span>\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n\n\n<span class=\"c1\"># Define a fitness function</span>\n<span class=\"k\">def</span> <span class=\"nf\">fitness_function</span><span class=\"p\">(</span><span class=\"n\">genome</span><span class=\"p\">):</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">genome</span><span class=\"p\">[</span><span class=\"s2\">\"message\"</span><span class=\"p\">]</span>\n    <span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"s2\">\"Hello World!\"</span>\n    <span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)):</span>\n        <span class=\"n\">score</span> <span class=\"o\">+=</span> <span class=\"nb\">abs</span><span class=\"p\">(</span><span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span> <span class=\"o\">-</span> <span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]))</span>\n    <span class=\"k\">return</span> <span class=\"n\">score</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">mutation_function</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"n\">mutated_value</span> <span class=\"o\">=</span> <span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"mi\">2</span>\n    <span class=\"k\">return</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">bound_value</span><span class=\"p\">(</span><span class=\"n\">mutated_value</span><span class=\"p\">,</span> <span class=\"n\">minimum</span><span class=\"o\">=</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"n\">maximum</span><span class=\"o\">=</span><span class=\"mi\">126</span><span class=\"p\">,</span> <span class=\"n\">to_int</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Define genome parameters for individuals</span>\n<span class=\"n\">genome_params</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[str]\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"size\"</span><span class=\"p\">:</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"s2\">\"Hello World!\"</span><span class=\"p\">),</span>\n        <span class=\"s2\">\"initial_distribution\"</span><span class=\"p\">:</span> <span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"nb\">chr</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">126</span><span class=\"p\">)),</span>\n        <span class=\"s2\">\"crossover_function\"</span><span class=\"p\">:</span> <span class=\"n\">get_uniform_crossover_function</span><span class=\"p\">(),</span>\n        <span class=\"s2\">\"mutation_function\"</span><span class=\"p\">:</span> <span class=\"n\">mutation_function</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"mutation_rate\"</span><span class=\"p\">:</span> <span class=\"mf\">0.15</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># Define how to select individuals for reproduction</span>\n<span class=\"n\">selection_strategy</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"pool\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"top\"</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">}}</span>\n\n<span class=\"c1\"># Run Evolution</span>\n<span class=\"n\">evolver</span> <span class=\"o\">=</span> <span class=\"n\">Evolver</span><span class=\"p\">(</span>\n    <span class=\"n\">fitness_function</span><span class=\"p\">,</span>\n    <span class=\"n\">genome_params</span><span class=\"p\">,</span>\n    <span class=\"n\">selection_strategy</span><span class=\"p\">,</span>\n    <span class=\"n\">should_maximize_fitness</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n<span class=\"p\">)</span>\n<span class=\"n\">final_population</span> <span class=\"o\">=</span> <span class=\"n\">evolver</span><span class=\"o\">.</span><span class=\"n\">evolve</span><span class=\"p\">(</span><span class=\"n\">stop_conditions</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"target_fitness\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">})</span>\n</pre>\n<p>With sample run:</p>\n<blockquote>\n<p>Generation: 0; Top Score: 201:\u00a0\u00a0\u00a0\u00a0\u00a0N~flx.JGcu-*</p>\n<p>Generation: 1; Top Score: 98:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Xljlw);mj]f</p>\n<p>Generation: 2; Top Score: 64:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=c}kk SmsYf</p>\n<p>Generation: 3; Top Score: 37:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Kcjlk$Vms]f</p>\n<p>Generation: 4; Top Score: 24:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Cdjkn Smshf</p>\n<p>Generation: 5; Top Score: 16:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Idjln Vmshf</p>\n<p>Generation: 6; Top Score: 14:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Idjln Voshf</p>\n<p>Generation: 7; Top Score: 11:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Hdjln Vmslf</p>\n<p>Generation: 8; Top Score: 9:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Hdjln Voslf</p>\n<p>Generation: 9; Top Score: 8:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Hdjln Vosle</p>\n<p>Generation: 10; Top Score: 7:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Hdmln Vosle</p>\n<p>Generation: 11; Top Score: 6:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Hdlln Vosle</p>\n<p>Generation: 12; Top Score: 5:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Hdllo Vosle</p>\n<p>Generation: 13; Top Score: 4:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Hdllo Vosle!</p>\n<p>Generation: 14; Top Score: 3:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Hello Vosle!</p>\n<p>Generation: 15; Top Score: 2:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Hello Wosle!</p>\n<p>Generation: 16; Top Score: 2:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Hello Wosle!</p>\n<p>Generation: 17; Top Score: 1:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Hello Worle!</p>\n<p>Generation: 18; Top Score: 1:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Hello Worle!</p>\n<p>Generation: 19; Top Score: 1:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Hello Worle!</p>\n<p>Generation: 20; Top Score: 0:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Hello World!</p>\n</blockquote>\n<p>Best Genome:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s1\">'message'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'H'</span><span class=\"p\">,</span> <span class=\"s1\">'e'</span><span class=\"p\">,</span> <span class=\"s1\">'l'</span><span class=\"p\">,</span> <span class=\"s1\">'l'</span><span class=\"p\">,</span> <span class=\"s1\">'o'</span><span class=\"p\">,</span> <span class=\"s1\">' '</span><span class=\"p\">,</span> <span class=\"s1\">'W'</span><span class=\"p\">,</span> <span class=\"s1\">'o'</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">,</span> <span class=\"s1\">'l'</span><span class=\"p\">,</span> <span class=\"s1\">'d'</span><span class=\"p\">,</span> <span class=\"s1\">'!'</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n\n          </div>"}, "last_serial": 4372727, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ec00d6639ffc580905053a8839d8dcb4", "sha256": "3058e931ce9ca0d682a2236e01c135c89db5616b3af61c4be965f1494c0d214a"}, "downloads": -1, "filename": "holland-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ec00d6639ffc580905053a8839d8dcb4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 43081, "upload_time": "2018-10-13T01:02:05", "upload_time_iso_8601": "2018-10-13T01:02:05.156149Z", "url": "https://files.pythonhosted.org/packages/14/8e/5062e76f2af900321840370a27f6aacc2788d94604b3652cbcab2d7d5697/holland-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da3862e74ba92dda42ee08dda8720e78", "sha256": "50b2d485e2bd09e0568b5727fd3668c3b35b0ac8ccd4592aa09e8e445a71cc56"}, "downloads": -1, "filename": "holland-0.0.1.tar.gz", "has_sig": false, "md5_digest": "da3862e74ba92dda42ee08dda8720e78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30882, "upload_time": "2018-10-13T01:02:06", "upload_time_iso_8601": "2018-10-13T01:02:06.726192Z", "url": "https://files.pythonhosted.org/packages/f2/72/adf4c63e5327f17f1623ae05f5862594b08af32100d5a80c503e0c283c40/holland-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "eab79f94d6c3513db5215e4165880460", "sha256": "5d162a58f247a403ac022e8a6098713d6787ee48cb56f9ce358075e2c46bfd63"}, "downloads": -1, "filename": "holland-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "eab79f94d6c3513db5215e4165880460", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 44247, "upload_time": "2018-10-13T20:22:05", "upload_time_iso_8601": "2018-10-13T20:22:05.366027Z", "url": "https://files.pythonhosted.org/packages/08/9b/904dee2038b3cf7f1cef38e448ac48b736e944a3fa6c22f2f78252f9e959/holland-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54506acdfe530a167cd28535ef33f556", "sha256": "b043e4c11801cb6dd27795abe225ddf40bd378c761d663d63bfbc73e2f7d4942"}, "downloads": -1, "filename": "holland-0.0.2.tar.gz", "has_sig": false, "md5_digest": "54506acdfe530a167cd28535ef33f556", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32025, "upload_time": "2018-10-13T20:22:06", "upload_time_iso_8601": "2018-10-13T20:22:06.758721Z", "url": "https://files.pythonhosted.org/packages/c5/2a/c8e43a1b4a269857ad3b042c3ae71312c3a07cf775df71d5c77275b2277a/holland-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eab79f94d6c3513db5215e4165880460", "sha256": "5d162a58f247a403ac022e8a6098713d6787ee48cb56f9ce358075e2c46bfd63"}, "downloads": -1, "filename": "holland-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "eab79f94d6c3513db5215e4165880460", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 44247, "upload_time": "2018-10-13T20:22:05", "upload_time_iso_8601": "2018-10-13T20:22:05.366027Z", "url": "https://files.pythonhosted.org/packages/08/9b/904dee2038b3cf7f1cef38e448ac48b736e944a3fa6c22f2f78252f9e959/holland-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54506acdfe530a167cd28535ef33f556", "sha256": "b043e4c11801cb6dd27795abe225ddf40bd378c761d663d63bfbc73e2f7d4942"}, "downloads": -1, "filename": "holland-0.0.2.tar.gz", "has_sig": false, "md5_digest": "54506acdfe530a167cd28535ef33f556", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32025, "upload_time": "2018-10-13T20:22:06", "upload_time_iso_8601": "2018-10-13T20:22:06.758721Z", "url": "https://files.pythonhosted.org/packages/c5/2a/c8e43a1b4a269857ad3b042c3ae71312c3a07cf775df71d5c77275b2277a/holland-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:49 2020"}