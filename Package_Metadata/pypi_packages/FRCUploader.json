{"info": {"author": "Nikhil Narayana", "author_email": "nikhil.narayana@live.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "I'm taking a long break from FIRST so feature updates will stagnate for a while. I will continue to fix bugs and keep up to date with new games. If anyone is interested in cleaning up the codebase and adding features, feel free to add PRs so I can approve them. Thank you to everyone in FIRST that has helped make this uploader as good as it is.\n\n# FRC-YouTube-Uploader\n\nA YouTube Uploader for FRC Events\n\n\n## Contributing\nPRs are appreciated and will be reviewed quickly, the only code quality standard I have is to follow PEP8 standard except for the line length. If you have trouble understanding my code just ask me.\n\n\n## Current Feature Set:\n* Upload Videos (single or batch uploads possible)\n* Queue and Dequeue Videos to Upload\n* Add to a YouTube Playlist\n* Include match results from TBA in description\n* Add videos links to The Blue Alliance\n* Mostly Automated Interface\n* Saves and Loads form values\n\n\n## How to Setup\n1. Install [Python 3.7.2](https://www.python.org/downloads/release/python-372/) for your OS with the PATH added and make sure there are no other versions of Python 3.\n2. Install the program with `pip3 install -U FRCUploader`. If you want untested features you can download the repo and install with `pip3 install -U /path/to/repo`\n3. Create a folder for storing your match videos.\n4. Add the thumbnail to the match video folder as `thumbnail.png` (not required, but suggested).\n5. Make your recording program follow this naming scheme: [MATCH TYPE] \\(TIEBREAKER\\) [MATCH NUM].[EXTENSION] ex. Qualification Match 1.mp4.\n6. Start the program by running `frcuploader`.\n7. Add in the necessary info in the Event Values and Match Values tabs\n8. Hit submit every time a match finishes. No need to update any values unless you are entering eliminations or doing ceremonies.\n9. Enjoy not having to deal with YouTube's front end \ud83c\udf89.\n\n### File Name Examples\n\nFile names are determined through substrings, you need the base of the match type and the match number at a minimum. Is this bad code design? Probably but it works and covers all known cases. Additionally all file names can be lowercase.\nBases:\n\n    Qualification -> qual\n    \n    Quarter -> quarter + final\n    \n    Semifinal -> semi + final\n    \n    Final -> final\n    \n    Tiebreaker -> tiebreak\n\nQM15 = `Qualification Match 15.mp4` or `Qual 15.mp4`\n\nSF2M3 = `Semifinal Tiebreaker 2.mp4` or `semi final tiebreak 2.mp4`\n\nF1M3 = `Final 3.mp4` or `final tiebreaker.mp4` (The FMS shows Final 3, but I allow either tiebreaker or 3 for naming)\n\nOpening Ceremonies = `Friday Opening Ceremonies.mp4` or `Day 1 Opening Ceremony.mp4`\n\nClosing Ceremonies = `Awards Ceremony.mp4` or `Closing Ceremonies.mp4`\n\nAlliance Selection = `Alliance Selection.mp4` or `alliance selection.mp4`\n\nHighlight Reel = `Highlight Reel.mp4` or `Wrapup Video.mp4`\n\n## UI Breakdown\n### Event Values\n![alt text](https://i.imgur.com/m5He8Ki.png)\n\n##### Match File Location\nSelect the root directory for files by clicking open and then navigating to the directory you would like to pull match videos from.\n\n##### Get Newest File\nIf your recording program doesn't support setting the file names with the necessary info each time you can use this simply get the newest file in the directory instead. This is great for programs like OBS, XSplit, and vMix.\n\n##### Production Team/Facebook Name/Twitter Handle/Website Link\nConstants that used to be in the script itself, you can now edit them as you see fit without going into the code.\n\n##### Event Name\nYou can name this as you wish, but know that it goes at the start of the video's YouTube Title, if you don't like this I can make a toggle. Generally includes [YEAR] [NAME OF EVENT]\n\n##### Event Code\nFind this at TheBlueAlliance in the address bar of the event page. It generally follows [YEAR][EVENT_CODE] format such as 2018arc or 2016incmp.\n\n##### Playlist ID\nYou can find the playlist ID on the playlist page's web address. Every playlist ID starts with PL making them easy to identify. A full link will be shortened after you submit it.\n\n##### TBA Event ID/Secret\nwww.thebluealliance.com/request/apiwrite\n\nBoth of these must be obtained by requesting them from the link above for the keys to your event. If your event is not on TBA I suggest you just uncheck `Use TBA`.\n\n##### Video Privacy Status\nSelect the privacy status you would like to upload with. If your channel allows monetization and you would like to monetize the videos, you should set the privacy status to `unlisted` and then update monetization later.\n\n##### Video Description\nThe description used in the program is fairly lengthy, but adds a lot of info that can be nice to have. If you would like to change the description you can rearrange it as you see fit, but you must keep anything in curly braces to prevent the program from blowing up in your face when you hit submit.\n\nRight clicking on the `Video Description` title text will bring up a reset button if necessary.\n\n### Match Values\n![alt text](https://i.imgur.com/FVH3wx6l.png)\n\n##### Match Code\nThis is hidden by default and can be accessed by toggling it in the menu bar.\n\nThis is an overriding function that will push any match you setup here to the correct TBA match and with the right info. This does not affect other parameters, you still need to set them up so it will find the correct match. For example, [2017 PCH Albany](https://www.thebluealliance.com/event/2017gaalb) had 5 replay matches in Semifinals 2 due to ties, the matches that counted were matches 4-6 on TBA, but the FMS kept the naming scheme from matches 1-3. To fix this you can input the match info like it was for `SF2M1` and name the file `Semifinal Match 2.mp4`, but then set match code to `SF2M4`. That would get the right scores and then update the right TBA match. This should almost never be used outside of cases like this.\n\n##### Match Number\nFairly self-explanatory, just remember to reset the value when you go into each stage of eliminations. This value will increment each time you press \"Submit\".\n\n##### Tiebreaker\nJust adjusts the value of match number according to the tiebreaker scheme set down by FIRST. For example, Quarterfinals Tiebreaker 1 becomes Quarterfinal Match 9 internally because that is what TBA expects.\n\n##### Tiebreaker\nIf you had a game get replayed, check this box and add `replay` to any part of the file name except the end.\n\n##### Ceremonies\nAll the non-default options in this dropdown will tell the program to ignore various parameters like `Match Number`. Uploading Alliance Selection will then update all the necessary form fields for entering elimination matches.\nFor Opening Ceremonies you need to have `Day X` or put the current day of the week (eg. `Friday`) in the file name.\nFor Closing Ceremonies you need to just have `Closing` or `Award` in the file name.\nFor Alliance Selection you need to have `Alliance` and `Selection` in the file name.\nFor Highlight Reels you need to have `Highlight` or `Wrapup` in the file name\nAll terms are matched in a substring so `Award` will match with `Awards` and same for others.\n\n##### Event Day\nThis is in conjunction with the above option. If you are not uploading live this is very important, you need to name the ceremony files with Day 1, 2, or 3 based on when they were in your event. Then select the same value in this dropdown and the program will find the correct one. Only Opening and Closing Ceremonies are affected, there is only one Alliance Selection so it don't change anything for that. If you are uploading live, I suggest you leave this at `Ignore` and just set the file name to include the current day name.\n\n##### Last Match Number\nIf you want to batch upload a number of files you can do so with this. Every match between `Match Number` and this number, inclusive, will be uploaded and added to TBA. It will then replace this field with 0 and update Match Number to the last match uploaded + 1.\n\n### Status Output\n![alt text](https://i.imgur.com/atKajjXl.png)\n\n##### Output\nThis will display any information you need to know about an ongoing upload, the same info will be written to the command prompt as a backup and any errors will be written to a file in your root user directory. It is currently set to auto scroll to the bottom, but if you hit an infinite loop you can toggle the auto scrolling with the button.\n\n##### Queue\nThe queue shows upcoming uploads with the top most item being the currently uploaded match.\n\nDouble clicking on a row in the Queue will remove it from the Queue. Be careful because you can't undo it unless you resubmit a new job.\n\n#### Menu Bar\nThis is a bit different if you are on MacOS vs Windows. The menu bar is a part of the main window on Windows and it is a part of the native menu bar on MacOS.\n\n##### Reset Form Values\nResets the form values to all the default values and resets the form value file.\n\n##### Remove Youtube Credentials\nDeletes the Youtube credentials and kills the program. Killing the program is intentional and necessary. You will be prompted for new credentials after you restart the program.\n\n##### Show/Hide Match Code\nWill toggle the match code's visiblity.\n\n##### Toggle Uploads/Save Queue/Load Queue\nThese three options are meant to be used together to provide an easy way to upload matches after an event, especially if you choose to use `Get Newest File`. Before submitting any uploads, you should select `Toggle Uploads` and then just submit as necessary. You can choose to save the queue after every submission or save at the very end. When you decide to finally upload you can just open the program, select `Load Queue`, and wait for the uploads to finish. **Note** the filesystem and computer used to upload must be maintained for the uploads to work.\n\nIf you are still in need of assistance, feel free to contact me.\n\n### Stats\nStats are collected on each match uploaded and can be found here: https://docs.google.com/spreadsheets/d/18flsXvAcYvQximmeyG0-9lhYtb5jd_oRtKzIN7zQDqk/edit?usp=sharing\nAll the information collected is very simple and lacks sensetive data. If you want to opt out let me know and I will finally build that button into the form.\n\n### Credits\n* Google - Authentication and Video Uploading\n* Phil Lopreiato - TBA Trusted API Integration\n* Wes Jordan - Python TBA API Layer (https://github.com/Thing342/pyTBA) *no longer used*\n* tbapy -  New Python TBA API Layer\n* Josh Klar - Bug Fixes during 2017 St. Joseph District\n* Matthew Zacune - Testing and Feature Ideas\n* The Internet - Bug Fixes\n\n\n## Extra Scripts\nAll scripts are written in python 3 and can be called as arguments to the main script as listed below.\n\n### updatePlaylistThumbnails.py (`frcuploader -t`)\nThis script will prompt for a playlist link and a file name for the thumbnail. It will then update every the thumbnails of every video in that playlist to the one you provide. This makes it simple to update older playlists with a new thumbnail so you can keep your look consistent.\n\n### updateTBA.py (`frcuploader -u`)\nForcefully update thebluealliance.com with a match video. The prompts will ask you for the necessary links. If you want to post the event's opening ceremonies or other non-match videos please link to www.thebluealliance.com/event/[event_code]#media.\n\n### playlistToTBA.py (`frcuploader -p`)\nIf for whatever reason you failed to post to TBA while using this uploader you can use this script afterwards to automatically link match videos to the event's page. Again the program will prompt you for links, once you do that it will take over and update TBA.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/NikhilNarayana/FRC-YouTube-Uploader", "keywords": "frc robotics youtube uploader", "license": "GNU Public License v3.0", "maintainer": "", "maintainer_email": "", "name": "FRCUploader", "package_url": "https://pypi.org/project/FRCUploader/", "platform": "", "project_url": "https://pypi.org/project/FRCUploader/", "project_urls": {"Homepage": "https://github.com/NikhilNarayana/FRC-YouTube-Uploader"}, "release_url": "https://pypi.org/project/FRCUploader/3.5.7/", "requires_dist": null, "requires_python": ">=3.6, <3.8", "summary": "A YouTube Uploader with FIRST Robotics Competition in mind", "version": "3.5.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>I'm taking a long break from FIRST so feature updates will stagnate for a while. I will continue to fix bugs and keep up to date with new games. If anyone is interested in cleaning up the codebase and adding features, feel free to add PRs so I can approve them. Thank you to everyone in FIRST that has helped make this uploader as good as it is.</p>\n<h1>FRC-YouTube-Uploader</h1>\n<p>A YouTube Uploader for FRC Events</p>\n<h2>Contributing</h2>\n<p>PRs are appreciated and will be reviewed quickly, the only code quality standard I have is to follow PEP8 standard except for the line length. If you have trouble understanding my code just ask me.</p>\n<h2>Current Feature Set:</h2>\n<ul>\n<li>Upload Videos (single or batch uploads possible)</li>\n<li>Queue and Dequeue Videos to Upload</li>\n<li>Add to a YouTube Playlist</li>\n<li>Include match results from TBA in description</li>\n<li>Add videos links to The Blue Alliance</li>\n<li>Mostly Automated Interface</li>\n<li>Saves and Loads form values</li>\n</ul>\n<h2>How to Setup</h2>\n<ol>\n<li>Install <a href=\"https://www.python.org/downloads/release/python-372/\" rel=\"nofollow\">Python 3.7.2</a> for your OS with the PATH added and make sure there are no other versions of Python 3.</li>\n<li>Install the program with <code>pip3 install -U FRCUploader</code>. If you want untested features you can download the repo and install with <code>pip3 install -U /path/to/repo</code></li>\n<li>Create a folder for storing your match videos.</li>\n<li>Add the thumbnail to the match video folder as <code>thumbnail.png</code> (not required, but suggested).</li>\n<li>Make your recording program follow this naming scheme: [MATCH TYPE] (TIEBREAKER) [MATCH NUM].[EXTENSION] ex. Qualification Match 1.mp4.</li>\n<li>Start the program by running <code>frcuploader</code>.</li>\n<li>Add in the necessary info in the Event Values and Match Values tabs</li>\n<li>Hit submit every time a match finishes. No need to update any values unless you are entering eliminations or doing ceremonies.</li>\n<li>Enjoy not having to deal with YouTube's front end \ud83c\udf89.</li>\n</ol>\n<h3>File Name Examples</h3>\n<p>File names are determined through substrings, you need the base of the match type and the match number at a minimum. Is this bad code design? Probably but it works and covers all known cases. Additionally all file names can be lowercase.\nBases:</p>\n<pre><code>Qualification -&gt; qual\n\nQuarter -&gt; quarter + final\n\nSemifinal -&gt; semi + final\n\nFinal -&gt; final\n\nTiebreaker -&gt; tiebreak\n</code></pre>\n<p>QM15 = <code>Qualification Match 15.mp4</code> or <code>Qual 15.mp4</code></p>\n<p>SF2M3 = <code>Semifinal Tiebreaker 2.mp4</code> or <code>semi final tiebreak 2.mp4</code></p>\n<p>F1M3 = <code>Final 3.mp4</code> or <code>final tiebreaker.mp4</code> (The FMS shows Final 3, but I allow either tiebreaker or 3 for naming)</p>\n<p>Opening Ceremonies = <code>Friday Opening Ceremonies.mp4</code> or <code>Day 1 Opening Ceremony.mp4</code></p>\n<p>Closing Ceremonies = <code>Awards Ceremony.mp4</code> or <code>Closing Ceremonies.mp4</code></p>\n<p>Alliance Selection = <code>Alliance Selection.mp4</code> or <code>alliance selection.mp4</code></p>\n<p>Highlight Reel = <code>Highlight Reel.mp4</code> or <code>Wrapup Video.mp4</code></p>\n<h2>UI Breakdown</h2>\n<h3>Event Values</h3>\n<p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/42af430e8b48c7ab99f721fa5cd0b00d1e784dc3/68747470733a2f2f692e696d6775722e636f6d2f6d354865384b692e706e67\"></p>\n<h5>Match File Location</h5>\n<p>Select the root directory for files by clicking open and then navigating to the directory you would like to pull match videos from.</p>\n<h5>Get Newest File</h5>\n<p>If your recording program doesn't support setting the file names with the necessary info each time you can use this simply get the newest file in the directory instead. This is great for programs like OBS, XSplit, and vMix.</p>\n<h5>Production Team/Facebook Name/Twitter Handle/Website Link</h5>\n<p>Constants that used to be in the script itself, you can now edit them as you see fit without going into the code.</p>\n<h5>Event Name</h5>\n<p>You can name this as you wish, but know that it goes at the start of the video's YouTube Title, if you don't like this I can make a toggle. Generally includes [YEAR] [NAME OF EVENT]</p>\n<h5>Event Code</h5>\n<p>Find this at TheBlueAlliance in the address bar of the event page. It generally follows [YEAR][EVENT_CODE] format such as 2018arc or 2016incmp.</p>\n<h5>Playlist ID</h5>\n<p>You can find the playlist ID on the playlist page's web address. Every playlist ID starts with PL making them easy to identify. A full link will be shortened after you submit it.</p>\n<h5>TBA Event ID/Secret</h5>\n<p><a href=\"http://www.thebluealliance.com/request/apiwrite\" rel=\"nofollow\">www.thebluealliance.com/request/apiwrite</a></p>\n<p>Both of these must be obtained by requesting them from the link above for the keys to your event. If your event is not on TBA I suggest you just uncheck <code>Use TBA</code>.</p>\n<h5>Video Privacy Status</h5>\n<p>Select the privacy status you would like to upload with. If your channel allows monetization and you would like to monetize the videos, you should set the privacy status to <code>unlisted</code> and then update monetization later.</p>\n<h5>Video Description</h5>\n<p>The description used in the program is fairly lengthy, but adds a lot of info that can be nice to have. If you would like to change the description you can rearrange it as you see fit, but you must keep anything in curly braces to prevent the program from blowing up in your face when you hit submit.</p>\n<p>Right clicking on the <code>Video Description</code> title text will bring up a reset button if necessary.</p>\n<h3>Match Values</h3>\n<p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1df6aae315e677fe3a1b4f7086e6902980e66490/68747470733a2f2f692e696d6775722e636f6d2f465648337778366c2e706e67\"></p>\n<h5>Match Code</h5>\n<p>This is hidden by default and can be accessed by toggling it in the menu bar.</p>\n<p>This is an overriding function that will push any match you setup here to the correct TBA match and with the right info. This does not affect other parameters, you still need to set them up so it will find the correct match. For example, <a href=\"https://www.thebluealliance.com/event/2017gaalb\" rel=\"nofollow\">2017 PCH Albany</a> had 5 replay matches in Semifinals 2 due to ties, the matches that counted were matches 4-6 on TBA, but the FMS kept the naming scheme from matches 1-3. To fix this you can input the match info like it was for <code>SF2M1</code> and name the file <code>Semifinal Match 2.mp4</code>, but then set match code to <code>SF2M4</code>. That would get the right scores and then update the right TBA match. This should almost never be used outside of cases like this.</p>\n<h5>Match Number</h5>\n<p>Fairly self-explanatory, just remember to reset the value when you go into each stage of eliminations. This value will increment each time you press \"Submit\".</p>\n<h5>Tiebreaker</h5>\n<p>Just adjusts the value of match number according to the tiebreaker scheme set down by FIRST. For example, Quarterfinals Tiebreaker 1 becomes Quarterfinal Match 9 internally because that is what TBA expects.</p>\n<h5>Tiebreaker</h5>\n<p>If you had a game get replayed, check this box and add <code>replay</code> to any part of the file name except the end.</p>\n<h5>Ceremonies</h5>\n<p>All the non-default options in this dropdown will tell the program to ignore various parameters like <code>Match Number</code>. Uploading Alliance Selection will then update all the necessary form fields for entering elimination matches.\nFor Opening Ceremonies you need to have <code>Day X</code> or put the current day of the week (eg. <code>Friday</code>) in the file name.\nFor Closing Ceremonies you need to just have <code>Closing</code> or <code>Award</code> in the file name.\nFor Alliance Selection you need to have <code>Alliance</code> and <code>Selection</code> in the file name.\nFor Highlight Reels you need to have <code>Highlight</code> or <code>Wrapup</code> in the file name\nAll terms are matched in a substring so <code>Award</code> will match with <code>Awards</code> and same for others.</p>\n<h5>Event Day</h5>\n<p>This is in conjunction with the above option. If you are not uploading live this is very important, you need to name the ceremony files with Day 1, 2, or 3 based on when they were in your event. Then select the same value in this dropdown and the program will find the correct one. Only Opening and Closing Ceremonies are affected, there is only one Alliance Selection so it don't change anything for that. If you are uploading live, I suggest you leave this at <code>Ignore</code> and just set the file name to include the current day name.</p>\n<h5>Last Match Number</h5>\n<p>If you want to batch upload a number of files you can do so with this. Every match between <code>Match Number</code> and this number, inclusive, will be uploaded and added to TBA. It will then replace this field with 0 and update Match Number to the last match uploaded + 1.</p>\n<h3>Status Output</h3>\n<p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5f27c85b59ab294b213070be48531b0c347617c1/68747470733a2f2f692e696d6775722e636f6d2f61744b616a6a586c2e706e67\"></p>\n<h5>Output</h5>\n<p>This will display any information you need to know about an ongoing upload, the same info will be written to the command prompt as a backup and any errors will be written to a file in your root user directory. It is currently set to auto scroll to the bottom, but if you hit an infinite loop you can toggle the auto scrolling with the button.</p>\n<h5>Queue</h5>\n<p>The queue shows upcoming uploads with the top most item being the currently uploaded match.</p>\n<p>Double clicking on a row in the Queue will remove it from the Queue. Be careful because you can't undo it unless you resubmit a new job.</p>\n<h4>Menu Bar</h4>\n<p>This is a bit different if you are on MacOS vs Windows. The menu bar is a part of the main window on Windows and it is a part of the native menu bar on MacOS.</p>\n<h5>Reset Form Values</h5>\n<p>Resets the form values to all the default values and resets the form value file.</p>\n<h5>Remove Youtube Credentials</h5>\n<p>Deletes the Youtube credentials and kills the program. Killing the program is intentional and necessary. You will be prompted for new credentials after you restart the program.</p>\n<h5>Show/Hide Match Code</h5>\n<p>Will toggle the match code's visiblity.</p>\n<h5>Toggle Uploads/Save Queue/Load Queue</h5>\n<p>These three options are meant to be used together to provide an easy way to upload matches after an event, especially if you choose to use <code>Get Newest File</code>. Before submitting any uploads, you should select <code>Toggle Uploads</code> and then just submit as necessary. You can choose to save the queue after every submission or save at the very end. When you decide to finally upload you can just open the program, select <code>Load Queue</code>, and wait for the uploads to finish. <strong>Note</strong> the filesystem and computer used to upload must be maintained for the uploads to work.</p>\n<p>If you are still in need of assistance, feel free to contact me.</p>\n<h3>Stats</h3>\n<p>Stats are collected on each match uploaded and can be found here: <a href=\"https://docs.google.com/spreadsheets/d/18flsXvAcYvQximmeyG0-9lhYtb5jd_oRtKzIN7zQDqk/edit?usp=sharing\" rel=\"nofollow\">https://docs.google.com/spreadsheets/d/18flsXvAcYvQximmeyG0-9lhYtb5jd_oRtKzIN7zQDqk/edit?usp=sharing</a>\nAll the information collected is very simple and lacks sensetive data. If you want to opt out let me know and I will finally build that button into the form.</p>\n<h3>Credits</h3>\n<ul>\n<li>Google - Authentication and Video Uploading</li>\n<li>Phil Lopreiato - TBA Trusted API Integration</li>\n<li>Wes Jordan - Python TBA API Layer (<a href=\"https://github.com/Thing342/pyTBA\" rel=\"nofollow\">https://github.com/Thing342/pyTBA</a>) <em>no longer used</em></li>\n<li>tbapy -  New Python TBA API Layer</li>\n<li>Josh Klar - Bug Fixes during 2017 St. Joseph District</li>\n<li>Matthew Zacune - Testing and Feature Ideas</li>\n<li>The Internet - Bug Fixes</li>\n</ul>\n<h2>Extra Scripts</h2>\n<p>All scripts are written in python 3 and can be called as arguments to the main script as listed below.</p>\n<h3>updatePlaylistThumbnails.py (<code>frcuploader -t</code>)</h3>\n<p>This script will prompt for a playlist link and a file name for the thumbnail. It will then update every the thumbnails of every video in that playlist to the one you provide. This makes it simple to update older playlists with a new thumbnail so you can keep your look consistent.</p>\n<h3>updateTBA.py (<code>frcuploader -u</code>)</h3>\n<p>Forcefully update thebluealliance.com with a match video. The prompts will ask you for the necessary links. If you want to post the event's opening ceremonies or other non-match videos please link to <a href=\"http://www.thebluealliance.com/event/%5Bevent_code%5D#media\" rel=\"nofollow\">www.thebluealliance.com/event/[event_code]#media</a>.</p>\n<h3>playlistToTBA.py (<code>frcuploader -p</code>)</h3>\n<p>If for whatever reason you failed to post to TBA while using this uploader you can use this script afterwards to automatically link match videos to the event's page. Again the program will prompt you for links, once you do that it will take over and update TBA.</p>\n\n          </div>"}, "last_serial": 6757028, "releases": {"3.1": [{"comment_text": "", "digests": {"md5": "4c1229b299f7ea11b2feadcb92d0a515", "sha256": "460f0ddea98adf40f172b7b4f7668a77490242a8726874de07b4f1230cd4fb88"}, "downloads": -1, "filename": "FRCUploader-3.1.1.tar.gz", "has_sig": false, "md5_digest": "4c1229b299f7ea11b2feadcb92d0a515", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 19959, "upload_time": "2018-07-16T02:01:17", "upload_time_iso_8601": "2018-07-16T02:01:17.268089Z", "url": "https://files.pythonhosted.org/packages/6d/06/06fd75a9fb9efdf9b865cec5120d2fcb5e489d2db4f71026d0dc11a4279d/FRCUploader-3.1.1.tar.gz", "yanked": false}], "3.1.2": [{"comment_text": "", "digests": {"md5": "7284a9082c28b5d3a613cebd43c530e9", "sha256": "28d59794257c3c57f2f051416e85a957cc054966e70a2eef0b67a71f03a9638f"}, "downloads": -1, "filename": "FRCUploader-3.1.2.tar.gz", "has_sig": false, "md5_digest": "7284a9082c28b5d3a613cebd43c530e9", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 19972, "upload_time": "2018-07-19T03:02:37", "upload_time_iso_8601": "2018-07-19T03:02:37.575824Z", "url": "https://files.pythonhosted.org/packages/4c/43/67a55e1c4ee78af606a7f42eccb1265ddaa0b716b68de88381833c6aa2c5/FRCUploader-3.1.2.tar.gz", "yanked": false}], "3.1.3": [{"comment_text": "", "digests": {"md5": "d4c763f849adbb1ff482a7bb45ee6f91", "sha256": "618283b1530158503b0b0fb7b814e14e98a0515cd3c5c7c041b8ef4f59e60d2a"}, "downloads": -1, "filename": "FRCUploader-3.1.3.tar.gz", "has_sig": false, "md5_digest": "d4c763f849adbb1ff482a7bb45ee6f91", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 19694, "upload_time": "2018-07-25T23:21:12", "upload_time_iso_8601": "2018-07-25T23:21:12.695828Z", "url": "https://files.pythonhosted.org/packages/50/00/49953a85a767be9f6ef02ca381167664b883a4196af88ccca47853b1f6a7/FRCUploader-3.1.3.tar.gz", "yanked": false}], "3.1.4": [{"comment_text": "", "digests": {"md5": "4ce8b3c6ed0a22f1348c0ef0bdc982f9", "sha256": "f004cb4e7ebfc285709b438827bcdca5111c8e5df3cbcab9811a1816d0345d93"}, "downloads": -1, "filename": "FRCUploader-3.1.4.tar.gz", "has_sig": false, "md5_digest": "4ce8b3c6ed0a22f1348c0ef0bdc982f9", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 19701, "upload_time": "2018-07-25T23:32:54", "upload_time_iso_8601": "2018-07-25T23:32:54.685962Z", "url": "https://files.pythonhosted.org/packages/46/20/7eb5225bf2939119bcda02d81adfa5cb3a814cec66a338b959bd8ca19f94/FRCUploader-3.1.4.tar.gz", "yanked": false}], "3.1.5": [{"comment_text": "", "digests": {"md5": "b88d67c4c1cea5759b84f3f8f5300b5c", "sha256": "541200d8b74ca1228f629e9713bc5586dc1e6f47bc321ed91f1e8100d9f7ca72"}, "downloads": -1, "filename": "FRCUploader-3.1.5.tar.gz", "has_sig": false, "md5_digest": "b88d67c4c1cea5759b84f3f8f5300b5c", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 19700, "upload_time": "2018-07-25T23:38:11", "upload_time_iso_8601": "2018-07-25T23:38:11.427312Z", "url": "https://files.pythonhosted.org/packages/91/d2/e37eb1e0b09e08f5aad9db09e8747c3b24a9feeaf3b320a5b52fc9c31ac0/FRCUploader-3.1.5.tar.gz", "yanked": false}], "3.1.7": [{"comment_text": "", "digests": {"md5": "7e4c4e2fcba6bdc34e6ef29ce8f2104b", "sha256": "3421e17841cbad887d4c9d95b53909ff66ba233aebec90b4ffc2a178266950a0"}, "downloads": -1, "filename": "FRCUploader-3.1.7.tar.gz", "has_sig": false, "md5_digest": "7e4c4e2fcba6bdc34e6ef29ce8f2104b", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 19338, "upload_time": "2018-07-31T01:55:42", "upload_time_iso_8601": "2018-07-31T01:55:42.797290Z", "url": "https://files.pythonhosted.org/packages/33/21/45b692a5dfb792fa5683f0529c202d807487d24ec70a6793cad080c4e5e7/FRCUploader-3.1.7.tar.gz", "yanked": false}], "3.1.8": [{"comment_text": "", "digests": {"md5": "f04b5591055130cbb8008b1a4c10ef57", "sha256": "f99294a22cda2f06e32cdb2f6760f607c38eeabcbb7d2ed9f9620c5fb0990150"}, "downloads": -1, "filename": "FRCUploader-3.1.8.tar.gz", "has_sig": false, "md5_digest": "f04b5591055130cbb8008b1a4c10ef57", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 19096, "upload_time": "2018-09-14T16:07:31", "upload_time_iso_8601": "2018-09-14T16:07:31.617359Z", "url": "https://files.pythonhosted.org/packages/4e/8b/759c4db04a5329849ff73659d2e433b66e971ed6f510b1fb3fa5a8838fe7/FRCUploader-3.1.8.tar.gz", "yanked": false}], "3.2.0": [{"comment_text": "", "digests": {"md5": "9191827d734d59b27c8a0dec71e45f05", "sha256": "9de400e7357cb7d83f6545e48856edd650c8b6cb0a1deedafa21c3d06b1a8a2b"}, "downloads": -1, "filename": "FRCUploader-3.2.0.tar.gz", "has_sig": false, "md5_digest": "9191827d734d59b27c8a0dec71e45f05", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 19481, "upload_time": "2018-09-24T18:41:25", "upload_time_iso_8601": "2018-09-24T18:41:25.191861Z", "url": "https://files.pythonhosted.org/packages/eb/af/4cf5e28032705e9f41bba54c7b17ca05ec86a0c3265a9dc4d03c23f9145a/FRCUploader-3.2.0.tar.gz", "yanked": false}], "3.2.1": [{"comment_text": "", "digests": {"md5": "e8cdc0f162c092928d68f58826ec49a9", "sha256": "c2ecdc073bac4053c78092ae8a1753c36764934a148233bf2d165e6e0dbd4a85"}, "downloads": -1, "filename": "FRCUploader-3.2.1.tar.gz", "has_sig": false, "md5_digest": "e8cdc0f162c092928d68f58826ec49a9", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 19429, "upload_time": "2018-09-24T19:53:32", "upload_time_iso_8601": "2018-09-24T19:53:32.698971Z", "url": "https://files.pythonhosted.org/packages/d5/8e/d807dd99618461cb25748d8215ba4af226daf7b451f0e179cdd29c990c8d/FRCUploader-3.2.1.tar.gz", "yanked": false}], "3.2.2": [{"comment_text": "", "digests": {"md5": "9e0f36c0a698877efdf74432b23e91f7", "sha256": "2f2a4c85a567f5f3a9410140a7b8313b799eefe21bd2fed4c6f6fc51c332f38f"}, "downloads": -1, "filename": "FRCUploader-3.2.2.tar.gz", "has_sig": false, "md5_digest": "9e0f36c0a698877efdf74432b23e91f7", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 19185, "upload_time": "2018-09-30T16:37:10", "upload_time_iso_8601": "2018-09-30T16:37:10.277403Z", "url": "https://files.pythonhosted.org/packages/71/4b/5ec783879be0dc0b8eab9c478c5a91474b829d72622824b8e56d4f6cac4b/FRCUploader-3.2.2.tar.gz", "yanked": false}], "3.2.3": [{"comment_text": "", "digests": {"md5": "79bfe8f1cced6a9235cb5d100bafc408", "sha256": "5c3156fd07169280cc0e47a1d83a2fc00a355635aa3967e034edc544ef872e02"}, "downloads": -1, "filename": "FRCUploader-3.2.3.tar.gz", "has_sig": false, "md5_digest": "79bfe8f1cced6a9235cb5d100bafc408", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 19150, "upload_time": "2018-09-30T16:39:47", "upload_time_iso_8601": "2018-09-30T16:39:47.580380Z", "url": "https://files.pythonhosted.org/packages/db/d3/9874405c3e2c2eaea7c560e95bf0d08e29b5fc34b25e2cc93606f9ed2e5b/FRCUploader-3.2.3.tar.gz", "yanked": false}], "3.2.4": [{"comment_text": "", "digests": {"md5": "cb056473d264f562bc9355556af863fb", "sha256": "aba40d4d804a245934362a129ec6fd7fff7118a8dc3499810f43f3500b1bfc5b"}, "downloads": -1, "filename": "FRCUploader-3.2.4.tar.gz", "has_sig": false, "md5_digest": "cb056473d264f562bc9355556af863fb", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 19140, "upload_time": "2018-10-15T20:55:56", "upload_time_iso_8601": "2018-10-15T20:55:56.119564Z", "url": "https://files.pythonhosted.org/packages/a7/03/61f6f181fba2082a9d92f40d1cd1516d8b075757421e12b17bd3cc5a2cfa/FRCUploader-3.2.4.tar.gz", "yanked": false}], "3.3.0": [{"comment_text": "", "digests": {"md5": "a6071f764938b80b451317031cdcee89", "sha256": "9b74195620859f5cc66b80e653cdd2bc02f7f6c134b8370b5b424450e9cab368"}, "downloads": -1, "filename": "FRCUploader-3.3.0.tar.gz", "has_sig": false, "md5_digest": "a6071f764938b80b451317031cdcee89", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 19784, "upload_time": "2019-02-26T19:16:48", "upload_time_iso_8601": "2019-02-26T19:16:48.532207Z", "url": "https://files.pythonhosted.org/packages/10/e4/491e58f11999eca37a6978fd82599c40478982d5eb2da9484c1225548dc4/FRCUploader-3.3.0.tar.gz", "yanked": false}], "3.3.1": [{"comment_text": "", "digests": {"md5": "8d534740274621982b16720cd4435e47", "sha256": "9d1540760b5ab1f49dd852b4ace61970e7bd3d08ec74b7e0ffcf1595174b9a6e"}, "downloads": -1, "filename": "FRCUploader-3.3.1.tar.gz", "has_sig": false, "md5_digest": "8d534740274621982b16720cd4435e47", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20188, "upload_time": "2019-03-02T21:56:23", "upload_time_iso_8601": "2019-03-02T21:56:23.267462Z", "url": "https://files.pythonhosted.org/packages/bb/41/87ae08c5ed6ad1357440eeba1ae1883cfad0b3cc14d2d3893eb7012e436f/FRCUploader-3.3.1.tar.gz", "yanked": false}], "3.3.10": [{"comment_text": "", "digests": {"md5": "291e84584a14139abb862b46fed3a4b6", "sha256": "e0d966042a5570d8307d5c93af829262c5af4b284c5d51301bd4d5cbc1327316"}, "downloads": -1, "filename": "FRCUploader-3.3.10.tar.gz", "has_sig": false, "md5_digest": "291e84584a14139abb862b46fed3a4b6", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20617, "upload_time": "2019-03-16T18:46:33", "upload_time_iso_8601": "2019-03-16T18:46:33.901879Z", "url": "https://files.pythonhosted.org/packages/12/85/868f4c55c582741d293e87671a6bc35c69cfc88168e9a1f17f30162cf885/FRCUploader-3.3.10.tar.gz", "yanked": false}], "3.3.11": [{"comment_text": "", "digests": {"md5": "4458b938f05b6c14b1d4c1d36ac389c3", "sha256": "52c8d14fc603822683c4753281c1bebb8045cfae438b33811901c94ea2ae2de5"}, "downloads": -1, "filename": "FRCUploader-3.3.11.tar.gz", "has_sig": false, "md5_digest": "4458b938f05b6c14b1d4c1d36ac389c3", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20624, "upload_time": "2019-03-16T18:55:18", "upload_time_iso_8601": "2019-03-16T18:55:18.873138Z", "url": "https://files.pythonhosted.org/packages/bb/08/861b57c2ca0e226da1272fdbc4998a3a53e5eedc6834e31d15bb9b82f7a3/FRCUploader-3.3.11.tar.gz", "yanked": false}], "3.3.12": [{"comment_text": "", "digests": {"md5": "b9dcf1ad5815e2ccaebfe54481905041", "sha256": "cda2d515171f5fcdc3f2e484d46f24e9af050f1c97a77c4c3c9598c568bc41f4"}, "downloads": -1, "filename": "FRCUploader-3.3.12.tar.gz", "has_sig": false, "md5_digest": "b9dcf1ad5815e2ccaebfe54481905041", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20703, "upload_time": "2019-03-16T19:10:38", "upload_time_iso_8601": "2019-03-16T19:10:38.280493Z", "url": "https://files.pythonhosted.org/packages/f6/7c/21d7c9d8848bf66a0c873fb54d566334ac4a1c87b97dae81f95b49c3cb67/FRCUploader-3.3.12.tar.gz", "yanked": false}], "3.3.13": [{"comment_text": "", "digests": {"md5": "3eb50e258b056d021c2001cbebcd4aa8", "sha256": "34291d978606a280191e4e9be8634bc1bcf1279faf9fdcb1d2ded5167515a4c5"}, "downloads": -1, "filename": "FRCUploader-3.3.13.tar.gz", "has_sig": false, "md5_digest": "3eb50e258b056d021c2001cbebcd4aa8", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20792, "upload_time": "2019-03-29T21:01:53", "upload_time_iso_8601": "2019-03-29T21:01:53.569689Z", "url": "https://files.pythonhosted.org/packages/ce/d0/04c291222e7df58ae9240ad468c74b5b0d7ee92897926ded8eb5bcae4e7e/FRCUploader-3.3.13.tar.gz", "yanked": false}], "3.3.14": [{"comment_text": "", "digests": {"md5": "3c0111ce7c561dd5a636b27a435b9f3c", "sha256": "83e03784e5b8ded83e7e467503cd315e8b0dbb7e12d8dc911807b70704e707ee"}, "downloads": -1, "filename": "FRCUploader-3.3.14.tar.gz", "has_sig": false, "md5_digest": "3c0111ce7c561dd5a636b27a435b9f3c", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20843, "upload_time": "2019-03-29T21:12:57", "upload_time_iso_8601": "2019-03-29T21:12:57.820499Z", "url": "https://files.pythonhosted.org/packages/d0/f6/7aee7778191fceed56759b3566bfe82bd37c0d0a90f732c943b7f50aa595/FRCUploader-3.3.14.tar.gz", "yanked": false}], "3.3.15": [{"comment_text": "", "digests": {"md5": "b36330f4138a90ac573cc4cb548af6c9", "sha256": "0c3e667ceceba9844137fb0e4cde736a52d52f33a7f54d63bcc486ac069100fc"}, "downloads": -1, "filename": "FRCUploader-3.3.15.tar.gz", "has_sig": false, "md5_digest": "b36330f4138a90ac573cc4cb548af6c9", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20902, "upload_time": "2019-03-29T21:29:54", "upload_time_iso_8601": "2019-03-29T21:29:54.066796Z", "url": "https://files.pythonhosted.org/packages/ad/a7/676a076fe4944e66748d04894002fc2748cbe2ac8e916b1f780764b515fc/FRCUploader-3.3.15.tar.gz", "yanked": false}], "3.3.16": [{"comment_text": "", "digests": {"md5": "de317528bace615e2a45e0dda10ba34d", "sha256": "24b9c565c1d42a4ef9806943f46239da2376554eebdd0d355f36aaf8a8fbec36"}, "downloads": -1, "filename": "FRCUploader-3.3.16.tar.gz", "has_sig": false, "md5_digest": "de317528bace615e2a45e0dda10ba34d", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20900, "upload_time": "2019-03-29T21:36:59", "upload_time_iso_8601": "2019-03-29T21:36:59.630818Z", "url": "https://files.pythonhosted.org/packages/30/4c/f428b44828f2c521c9650ffc66e48c756c022105dbb1c6eec29ff3ddd6d8/FRCUploader-3.3.16.tar.gz", "yanked": false}], "3.3.17": [{"comment_text": "", "digests": {"md5": "d8cd9039f3e81da483f835bf2d6bdeee", "sha256": "0196ab20d260d1079b9bd0a7e69fc2da23ac5b6a817df9354ad188ae3bdeff86"}, "downloads": -1, "filename": "FRCUploader-3.3.17.tar.gz", "has_sig": false, "md5_digest": "d8cd9039f3e81da483f835bf2d6bdeee", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 21107, "upload_time": "2019-03-31T06:56:49", "upload_time_iso_8601": "2019-03-31T06:56:49.972598Z", "url": "https://files.pythonhosted.org/packages/0e/c0/5048f977aa5324f497018a64b5e616fc092c192684d28d649bdaaed28b76/FRCUploader-3.3.17.tar.gz", "yanked": false}], "3.3.2": [{"comment_text": "", "digests": {"md5": "2571a3c4fe876822e703520fe916c47f", "sha256": "8fd0e72fe3ef43fcb464733308e301663da81407a86cce3d7c6d633b28b7e0d2"}, "downloads": -1, "filename": "FRCUploader-3.3.2.tar.gz", "has_sig": false, "md5_digest": "2571a3c4fe876822e703520fe916c47f", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20154, "upload_time": "2019-03-03T17:29:01", "upload_time_iso_8601": "2019-03-03T17:29:01.979306Z", "url": "https://files.pythonhosted.org/packages/79/54/2009bf602b1d320ecd567e30901b385aa1469cd01bc78d35773b72587c68/FRCUploader-3.3.2.tar.gz", "yanked": false}], "3.3.3": [{"comment_text": "", "digests": {"md5": "a1f587b42cea2f58d892d8a6df4f311d", "sha256": "8b0d8c4cfe1eaf2f97644d0acb12278bb76f06cd6445cce723531d6af16d0e39"}, "downloads": -1, "filename": "FRCUploader-3.3.3.tar.gz", "has_sig": false, "md5_digest": "a1f587b42cea2f58d892d8a6df4f311d", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20162, "upload_time": "2019-03-03T17:39:10", "upload_time_iso_8601": "2019-03-03T17:39:10.874969Z", "url": "https://files.pythonhosted.org/packages/81/63/df038c618c1e1bf88d2acf36ee881927363d54f945a9b1d63a76e748ae5a/FRCUploader-3.3.3.tar.gz", "yanked": false}], "3.3.4": [{"comment_text": "", "digests": {"md5": "b1a4e8678674434cf6c293d13b068f75", "sha256": "9ae40e01e52a4fab138cfc592b13eb9dfdb60cce286e5454ec04f5c1ce155ae0"}, "downloads": -1, "filename": "FRCUploader-3.3.4.tar.gz", "has_sig": false, "md5_digest": "b1a4e8678674434cf6c293d13b068f75", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20212, "upload_time": "2019-03-03T18:40:49", "upload_time_iso_8601": "2019-03-03T18:40:49.629878Z", "url": "https://files.pythonhosted.org/packages/b0/3a/e3ffd42396e967f9863745bcdc3d8f11dc0792b919b879db6cfe062a1359/FRCUploader-3.3.4.tar.gz", "yanked": false}], "3.3.6": [{"comment_text": "", "digests": {"md5": "b00e55d8f290caff65b469e96183cd66", "sha256": "0dd60aac4550fe4a386450bcb8e42b95c83f55ba83400df553dbcad25e2c1824"}, "downloads": -1, "filename": "FRCUploader-3.3.6.tar.gz", "has_sig": false, "md5_digest": "b00e55d8f290caff65b469e96183cd66", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20293, "upload_time": "2019-03-03T23:30:58", "upload_time_iso_8601": "2019-03-03T23:30:58.770784Z", "url": "https://files.pythonhosted.org/packages/e0/a5/4b7f0d00c176954050994870c19a1240aae1e88c27797c807c513a71ae25/FRCUploader-3.3.6.tar.gz", "yanked": false}], "3.3.7": [{"comment_text": "", "digests": {"md5": "42e81d3843459f58a89eb193ec95dbe4", "sha256": "65efa723bd2bef49f2350ef0fd00013503a81741a3dd032a814aca48c26d9414"}, "downloads": -1, "filename": "FRCUploader-3.3.7.tar.gz", "has_sig": false, "md5_digest": "42e81d3843459f58a89eb193ec95dbe4", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20318, "upload_time": "2019-03-05T01:36:58", "upload_time_iso_8601": "2019-03-05T01:36:58.933951Z", "url": "https://files.pythonhosted.org/packages/69/08/218aee9f5452f96ca32eb6d8b6fb2edbc412a737fe759163fa870b6a88a0/FRCUploader-3.3.7.tar.gz", "yanked": false}], "3.3.8": [{"comment_text": "", "digests": {"md5": "4d10b4213614097de0a69e728f5ef947", "sha256": "2e659ad9d84f3dce9085a837748b3aa5fed75b626806546714162d7e6f081436"}, "downloads": -1, "filename": "FRCUploader-3.3.8.tar.gz", "has_sig": false, "md5_digest": "4d10b4213614097de0a69e728f5ef947", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20559, "upload_time": "2019-03-05T02:58:04", "upload_time_iso_8601": "2019-03-05T02:58:04.673755Z", "url": "https://files.pythonhosted.org/packages/51/69/8e0e12186f39c888f497f2bd08d56b1f3f929c9314b9ee5f8ab98e680046/FRCUploader-3.3.8.tar.gz", "yanked": false}], "3.3.9": [{"comment_text": "", "digests": {"md5": "487c8a98ec2e5bf545785a0c9b0ea383", "sha256": "d6acdf70aa951aa98cb4e772db61ae282dbe1295868f315233cd364d6383ac28"}, "downloads": -1, "filename": "FRCUploader-3.3.9.tar.gz", "has_sig": false, "md5_digest": "487c8a98ec2e5bf545785a0c9b0ea383", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20559, "upload_time": "2019-03-05T17:12:26", "upload_time_iso_8601": "2019-03-05T17:12:26.506525Z", "url": "https://files.pythonhosted.org/packages/92/ba/0907f36b7aaacac2de4a2ff448dfe8204ddba3c6a16e0b538c983e83f44c/FRCUploader-3.3.9.tar.gz", "yanked": false}], "3.4.0": [{"comment_text": "", "digests": {"md5": "f4f4d944d8073f54c1178f3facab87d4", "sha256": "bae191337b5f6599c9e2f0387d2c33725bbb670495ad8e41c027d126126b1c74"}, "downloads": -1, "filename": "FRCUploader-3.4.0.tar.gz", "has_sig": false, "md5_digest": "f4f4d944d8073f54c1178f3facab87d4", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 21446, "upload_time": "2019-04-04T05:54:42", "upload_time_iso_8601": "2019-04-04T05:54:42.646845Z", "url": "https://files.pythonhosted.org/packages/51/2a/6af34f1588e4d011e396904fd9b389bffdf9f1bf36dfcb7e4d52d93daa14/FRCUploader-3.4.0.tar.gz", "yanked": false}], "3.4.1": [{"comment_text": "", "digests": {"md5": "02033780eeed7034df46e5244f88432d", "sha256": "78d713784f81de481c5113725013b3ae6280d8ddd3972f387a99bdf8cd0a2495"}, "downloads": -1, "filename": "FRCUploader-3.4.1.tar.gz", "has_sig": false, "md5_digest": "02033780eeed7034df46e5244f88432d", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 21447, "upload_time": "2019-04-05T00:49:16", "upload_time_iso_8601": "2019-04-05T00:49:16.178473Z", "url": "https://files.pythonhosted.org/packages/f8/cc/a85c9bfe7714bfced5ca76580f4ee8e9e0533be8028e3addd2ccac4b8ce6/FRCUploader-3.4.1.tar.gz", "yanked": false}], "3.5.0": [{"comment_text": "", "digests": {"md5": "38579f45ee7b28cb396afd0b359b405f", "sha256": "ac9837993b02a1288359bd2db40eeb001af47b899934dfcbdead15c70cd25cae"}, "downloads": -1, "filename": "FRCUploader-3.5.0.tar.gz", "has_sig": false, "md5_digest": "38579f45ee7b28cb396afd0b359b405f", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20857, "upload_time": "2019-04-08T15:45:12", "upload_time_iso_8601": "2019-04-08T15:45:12.136728Z", "url": "https://files.pythonhosted.org/packages/19/c8/a77076f8247f778ae8c5960246d95299ba31bdea104e4e3a0f22501401b1/FRCUploader-3.5.0.tar.gz", "yanked": false}], "3.5.1": [{"comment_text": "", "digests": {"md5": "ff983a6b22ab033bbb2c9ca272bce15d", "sha256": "e9ffc4e5598a3903af673e5b4f12c403ae352e2bfc84284851b9684df1fce757"}, "downloads": -1, "filename": "FRCUploader-3.5.1.tar.gz", "has_sig": false, "md5_digest": "ff983a6b22ab033bbb2c9ca272bce15d", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 20859, "upload_time": "2019-04-13T19:21:02", "upload_time_iso_8601": "2019-04-13T19:21:02.405516Z", "url": "https://files.pythonhosted.org/packages/ab/98/d0bc897ffc29b2c6ef45b5d7d4616e25bb8b29166ae1c34937989f110e86/FRCUploader-3.5.1.tar.gz", "yanked": false}], "3.5.2": [{"comment_text": "", "digests": {"md5": "bcdf84a95dbddf07abc4aaf0453a3227", "sha256": "379c584905a618739ad06993e84655e10fe1b42411fc87ed4d83d5197d57c4d8"}, "downloads": -1, "filename": "FRCUploader-3.5.2.tar.gz", "has_sig": false, "md5_digest": "bcdf84a95dbddf07abc4aaf0453a3227", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 21615, "upload_time": "2019-07-16T04:37:41", "upload_time_iso_8601": "2019-07-16T04:37:41.756160Z", "url": "https://files.pythonhosted.org/packages/eb/4e/9df7bbc5dd5967caf42b885cc7a8835d9c833c5025f6e9ff771c13dfeb3e/FRCUploader-3.5.2.tar.gz", "yanked": false}], "3.5.3": [{"comment_text": "", "digests": {"md5": "04d6dcd991b26094339469a2cacb0977", "sha256": "c110348ae72040cd0e4df7950e9cc5e97332c1ac4370bfd5f5df39dcb9da7b9e"}, "downloads": -1, "filename": "FRCUploader-3.5.3.tar.gz", "has_sig": false, "md5_digest": "04d6dcd991b26094339469a2cacb0977", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <3.7.4", "size": 21540, "upload_time": "2019-08-09T05:22:56", "upload_time_iso_8601": "2019-08-09T05:22:56.625745Z", "url": "https://files.pythonhosted.org/packages/84/fc/c6dcf75291e099000186f807b1e3b33dfcf2eb4a3ca8aa3aec776cb8414b/FRCUploader-3.5.3.tar.gz", "yanked": false}], "3.5.4": [{"comment_text": "", "digests": {"md5": "77bfbeaeaa183d10648eeba1ac409b49", "sha256": "c32ce5328d12b7e69bd2addab5b8adda0f2cc9c49b98821cc5e24d41879c1baf"}, "downloads": -1, "filename": "FRCUploader-3.5.4.tar.gz", "has_sig": false, "md5_digest": "77bfbeaeaa183d10648eeba1ac409b49", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <3.7.4", "size": 21929, "upload_time": "2020-02-17T20:38:54", "upload_time_iso_8601": "2020-02-17T20:38:54.342741Z", "url": "https://files.pythonhosted.org/packages/a7/6a/519ad93e323dfcc7c58ed494ea070322bc57aaa38db5763b3c385c4d4f2d/FRCUploader-3.5.4.tar.gz", "yanked": false}], "3.5.5": [{"comment_text": "", "digests": {"md5": "7e8dd441949891b6481c76a11c72878e", "sha256": "7754f62457fc0fad231beccf4cf5a9be1de26c8f01560a4e5e34404139ad6b38"}, "downloads": -1, "filename": "FRCUploader-3.5.5.tar.gz", "has_sig": false, "md5_digest": "7e8dd441949891b6481c76a11c72878e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <3.8", "size": 22042, "upload_time": "2020-03-01T00:07:07", "upload_time_iso_8601": "2020-03-01T00:07:07.785941Z", "url": "https://files.pythonhosted.org/packages/d5/0a/56a7cc277111337c0864709eb6984bc8182571a7aa9f579d8b3b6fbe2b9a/FRCUploader-3.5.5.tar.gz", "yanked": false}], "3.5.6": [{"comment_text": "", "digests": {"md5": "877d503285eb1d3b0b63572cc07da137", "sha256": "872256685143b51c00c263e6bb270eeab8d329ec58d8c62693672c2ea9bbc7d7"}, "downloads": -1, "filename": "FRCUploader-3.5.6.tar.gz", "has_sig": false, "md5_digest": "877d503285eb1d3b0b63572cc07da137", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <3.8", "size": 22262, "upload_time": "2020-03-04T03:16:27", "upload_time_iso_8601": "2020-03-04T03:16:27.255208Z", "url": "https://files.pythonhosted.org/packages/08/ba/29e7f8d2394a41b12d1960822460eb04dd1877e4f67ecc434032485632d5/FRCUploader-3.5.6.tar.gz", "yanked": false}], "3.5.7": [{"comment_text": "", "digests": {"md5": "3f7684abe022e82773e7a8284d0ea8ee", "sha256": "1591c5671c0423b5d1745679e2847a166aa0ff41342fe0bbc727adf900a50538"}, "downloads": -1, "filename": "FRCUploader-3.5.7.tar.gz", "has_sig": false, "md5_digest": "3f7684abe022e82773e7a8284d0ea8ee", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <3.8", "size": 22275, "upload_time": "2020-03-05T19:16:25", "upload_time_iso_8601": "2020-03-05T19:16:25.904607Z", "url": "https://files.pythonhosted.org/packages/2d/d6/c61e2437e08959cded6fdd03fc7adec0ebdafb015dd0a220fa0fc6a5248a/FRCUploader-3.5.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3f7684abe022e82773e7a8284d0ea8ee", "sha256": "1591c5671c0423b5d1745679e2847a166aa0ff41342fe0bbc727adf900a50538"}, "downloads": -1, "filename": "FRCUploader-3.5.7.tar.gz", "has_sig": false, "md5_digest": "3f7684abe022e82773e7a8284d0ea8ee", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <3.8", "size": 22275, "upload_time": "2020-03-05T19:16:25", "upload_time_iso_8601": "2020-03-05T19:16:25.904607Z", "url": "https://files.pythonhosted.org/packages/2d/d6/c61e2437e08959cded6fdd03fc7adec0ebdafb015dd0a220fa0fc6a5248a/FRCUploader-3.5.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:31 2020"}