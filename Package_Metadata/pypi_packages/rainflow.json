{"info": {"author": "Piotr Janiszewski", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Rainflow\n========\n\n[![Build Status](https://travis-ci.org/iamlikeme/rainflow.svg?branch=master)](https://travis-ci.org/iamlikeme/rainflow)\n\n`rainflow` is a Python implementation of the ASTM E1049-85 rainflow cycle counting\nalgorythm for fatigue analysis. Supports both Python 2 and 3.\n\nInstallation\n------------\n\n`rainflow` is available [on PyPI](https://pypi.org/project/rainflow/):\n\n```\npip install rainflow\n```\n\nand [on conda-forge](https://github.com/conda-forge/rainflow-feedstock):\n\n```\nconda install rainflow --channel conda-forge\n```\n\nUsage\n-----\n\nSee release notes in [`CHANGELOG.md`](CHANGELOG.md).\n\nLet's generate a sample time series.\nHere we simply generate a list of floats but `rainflow` works\nwith any sequence of numbers, including numpy arrays and pandas Series.\n\n```python\nfrom math import sin, cos\n\ntime = [4.0 * i / 200 for i in range(200 + 1)]\nsignal = [0.2 + 0.5 * sin(t) + 0.2 * cos(10*t) + 0.2 * sin(4*t) for t in time]\n```\n\nFunction `count_cycles` returns a sorted list of ranges and the corresponding\nnumber of cycles:\n\n```python\nimport rainflow\n\nrainflow.count_cycles(signal)\n# Output\n[(0.04258965150708488, 0.5),\n (0.10973439445727551, 1.0),\n (0.11294628078612906, 0.5),\n (0.2057106991158965, 1.0),\n (0.21467990941625242, 1.0),\n (0.4388985979776988, 1.0),\n (0.48305748051348263, 0.5),\n (0.5286423866535466, 0.5),\n (0.7809330293159786, 0.5),\n (1.4343610172143002, 0.5)]\n```\n\nCycle ranges can be binned or rounded to a specified number of digits\nusing optional arguments *binsize*, *nbins* or *ndigits*:\n\n```python\nrainflow.count_cycles(signal, binsize=0.5)\n# Output\n[(0.5, 5.5), (1.0, 1.0), (1.5, 0.5)]\n\nrainflow.count_cycles(signal, ndigits=1)\n# Output\n[(0.0, 0.5),\n (0.1, 1.5),\n (0.2, 2.0),\n (0.4, 1.0),\n (0.5, 1.0),\n (0.8, 0.5),\n (1.4, 0.5)]\n```\n\nFull information about each cycle, including mean value, can be obtained\nusing the `extract_cycles` function:\n\n```python\nfor rng, mean, count, i_start, i_end in rainflow.extract_cycles(signal): \n    print(rng, mean, count, i_start, i_end) \n# Output             \n0.04258965150708488 0.4212948257535425 0.5 0 3\n0.11294628078612906 0.38611651111402034 0.5 3 13\n...\n0.4388985979776988 0.18268137509849586 1.0 142 158\n1.4343610172143002 0.3478109852897205 0.5 94 200\n```\n\nRunning tests\n-------------\n\n```\npip install .[dev]\npytest\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/iamlikeme/rainflow/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rainflow", "package_url": "https://pypi.org/project/rainflow/", "platform": "", "project_url": "https://pypi.org/project/rainflow/", "project_urls": {"Homepage": "https://github.com/iamlikeme/rainflow/"}, "release_url": "https://pypi.org/project/rainflow/3.0.0/", "requires_dist": null, "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "summary": "Implementation of ASTM E1049-85 rainflow cycle counting algorithm", "version": "3.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Rainflow</h1>\n<p><a href=\"https://travis-ci.org/iamlikeme/rainflow\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cc31cd54ee9c382fe82b2a73253452104fab392a/68747470733a2f2f7472617669732d63692e6f72672f69616d6c696b656d652f7261696e666c6f772e7376673f6272616e63683d6d6173746572\"></a></p>\n<p><code>rainflow</code> is a Python implementation of the ASTM E1049-85 rainflow cycle counting\nalgorythm for fatigue analysis. Supports both Python 2 and 3.</p>\n<h2>Installation</h2>\n<p><code>rainflow</code> is available <a href=\"https://pypi.org/project/rainflow/\" rel=\"nofollow\">on PyPI</a>:</p>\n<pre><code>pip install rainflow\n</code></pre>\n<p>and <a href=\"https://github.com/conda-forge/rainflow-feedstock\" rel=\"nofollow\">on conda-forge</a>:</p>\n<pre><code>conda install rainflow --channel conda-forge\n</code></pre>\n<h2>Usage</h2>\n<p>See release notes in <a href=\"CHANGELOG.md\" rel=\"nofollow\"><code>CHANGELOG.md</code></a>.</p>\n<p>Let's generate a sample time series.\nHere we simply generate a list of floats but <code>rainflow</code> works\nwith any sequence of numbers, including numpy arrays and pandas Series.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">math</span> <span class=\"kn\">import</span> <span class=\"n\">sin</span><span class=\"p\">,</span> <span class=\"n\">cos</span>\n\n<span class=\"n\">time</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">4.0</span> <span class=\"o\">*</span> <span class=\"n\">i</span> <span class=\"o\">/</span> <span class=\"mi\">200</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">200</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)]</span>\n<span class=\"n\">signal</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.2</span> <span class=\"o\">+</span> <span class=\"mf\">0.5</span> <span class=\"o\">*</span> <span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mf\">0.2</span> <span class=\"o\">*</span> <span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"o\">*</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mf\">0.2</span> <span class=\"o\">*</span> <span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">time</span><span class=\"p\">]</span>\n</pre>\n<p>Function <code>count_cycles</code> returns a sorted list of ranges and the corresponding\nnumber of cycles:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">rainflow</span>\n\n<span class=\"n\">rainflow</span><span class=\"o\">.</span><span class=\"n\">count_cycles</span><span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"p\">)</span>\n<span class=\"c1\"># Output</span>\n<span class=\"p\">[(</span><span class=\"mf\">0.04258965150708488</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mf\">0.10973439445727551</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mf\">0.11294628078612906</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mf\">0.2057106991158965</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mf\">0.21467990941625242</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mf\">0.4388985979776988</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mf\">0.48305748051348263</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mf\">0.5286423866535466</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mf\">0.7809330293159786</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mf\">1.4343610172143002</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">)]</span>\n</pre>\n<p>Cycle ranges can be binned or rounded to a specified number of digits\nusing optional arguments <em>binsize</em>, <em>nbins</em> or <em>ndigits</em>:</p>\n<pre><span class=\"n\">rainflow</span><span class=\"o\">.</span><span class=\"n\">count_cycles</span><span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"p\">,</span> <span class=\"n\">binsize</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"c1\"># Output</span>\n<span class=\"p\">[(</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">5.5</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mf\">1.5</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">)]</span>\n\n<span class=\"n\">rainflow</span><span class=\"o\">.</span><span class=\"n\">count_cycles</span><span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"p\">,</span> <span class=\"n\">ndigits</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"c1\"># Output</span>\n<span class=\"p\">[(</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">1.5</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mf\">1.4</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">)]</span>\n</pre>\n<p>Full information about each cycle, including mean value, can be obtained\nusing the <code>extract_cycles</code> function:</p>\n<pre><span class=\"k\">for</span> <span class=\"n\">rng</span><span class=\"p\">,</span> <span class=\"n\">mean</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"p\">,</span> <span class=\"n\">i_start</span><span class=\"p\">,</span> <span class=\"n\">i_end</span> <span class=\"ow\">in</span> <span class=\"n\">rainflow</span><span class=\"o\">.</span><span class=\"n\">extract_cycles</span><span class=\"p\">(</span><span class=\"n\">signal</span><span class=\"p\">):</span> \n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">rng</span><span class=\"p\">,</span> <span class=\"n\">mean</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"p\">,</span> <span class=\"n\">i_start</span><span class=\"p\">,</span> <span class=\"n\">i_end</span><span class=\"p\">)</span> \n<span class=\"c1\"># Output             </span>\n<span class=\"mf\">0.04258965150708488</span> <span class=\"mf\">0.4212948257535425</span> <span class=\"mf\">0.5</span> <span class=\"mi\">0</span> <span class=\"mi\">3</span>\n<span class=\"mf\">0.11294628078612906</span> <span class=\"mf\">0.38611651111402034</span> <span class=\"mf\">0.5</span> <span class=\"mi\">3</span> <span class=\"mi\">13</span>\n<span class=\"o\">...</span>\n<span class=\"mf\">0.4388985979776988</span> <span class=\"mf\">0.18268137509849586</span> <span class=\"mf\">1.0</span> <span class=\"mi\">142</span> <span class=\"mi\">158</span>\n<span class=\"mf\">1.4343610172143002</span> <span class=\"mf\">0.3478109852897205</span> <span class=\"mf\">0.5</span> <span class=\"mi\">94</span> <span class=\"mi\">200</span>\n</pre>\n<h2>Running tests</h2>\n<pre><code>pip install .[dev]\npytest\n</code></pre>\n\n          </div>"}, "last_serial": 7062431, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "f57edde1bcd59fafc3aa006bde8d5d1e", "sha256": "c26914815635b0023cb255a7799a09d367a62de04fdd25a82ef5f40887a89ab1"}, "downloads": -1, "filename": "rainflow-2.0.0.tar.gz", "has_sig": false, "md5_digest": "f57edde1bcd59fafc3aa006bde8d5d1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2873, "upload_time": "2018-02-25T15:10:09", "upload_time_iso_8601": "2018-02-25T15:10:09.097958Z", "url": "https://files.pythonhosted.org/packages/3d/16/5c45075ff38acc26298faec54b2af4c7168ce39e6d36b31218578b4a6734/rainflow-2.0.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "fb1be2864de3671d56d06f57f1b5c6fa", "sha256": "e3f528c87b0fec9ccb78bab98208d144372ebfeb91867e0ad1e76e7cea49ceb3"}, "downloads": -1, "filename": "rainflow-2.1.1.tar.gz", "has_sig": false, "md5_digest": "fb1be2864de3671d56d06f57f1b5c6fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15881, "upload_time": "2018-04-17T20:06:15", "upload_time_iso_8601": "2018-04-17T20:06:15.316276Z", "url": "https://files.pythonhosted.org/packages/01/59/a2a002ab1a9169af75c0136bfe165cf26366dec02efd4ec9dbb5ce2c4451/rainflow-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "a7de1a74a6b5c66011f207ea59848d71", "sha256": "96a4752d699b2034dd5d117aa31d3b29002ed8133cc31747e155f8f474065bf6"}, "downloads": -1, "filename": "rainflow-2.1.2.tar.gz", "has_sig": false, "md5_digest": "a7de1a74a6b5c66011f207ea59848d71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4414, "upload_time": "2018-06-14T20:03:45", "upload_time_iso_8601": "2018-06-14T20:03:45.496453Z", "url": "https://files.pythonhosted.org/packages/95/e8/ef5a56c597284e2e0f2b8a498d271a8af53451787bb9bfe8019aaf8fc80c/rainflow-2.1.2.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "848e3230709259e7bd1edb09ac372990", "sha256": "9237ae1dd8e588becf4a99687bfd5fc10f98a61d412e0e1000a4d0e0fa0f1838"}, "downloads": -1, "filename": "rainflow-2.2.0.tar.gz", "has_sig": false, "md5_digest": "848e3230709259e7bd1edb09ac372990", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5984, "upload_time": "2019-10-24T19:57:44", "upload_time_iso_8601": "2019-10-24T19:57:44.352438Z", "url": "https://files.pythonhosted.org/packages/af/6a/0df5d9834c921426fae958f0d4b12132ed0e0888f60613dd925753b420bd/rainflow-2.2.0.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "ff7f199de611913b01607ec51dfc7f3b", "sha256": "c6662ba9555d6421d14fcdf71107555d22a87486a54354f65e0368ae12a28022"}, "downloads": -1, "filename": "rainflow-3.0.0.tar.gz", "has_sig": false, "md5_digest": "ff7f199de611913b01607ec51dfc7f3b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 5908, "upload_time": "2020-04-20T19:41:29", "upload_time_iso_8601": "2020-04-20T19:41:29.378575Z", "url": "https://files.pythonhosted.org/packages/82/40/a7c674e534d4b364ee2e7e5cfc1a5118c8628434d239dbeab232c2cd5bb0/rainflow-3.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ff7f199de611913b01607ec51dfc7f3b", "sha256": "c6662ba9555d6421d14fcdf71107555d22a87486a54354f65e0368ae12a28022"}, "downloads": -1, "filename": "rainflow-3.0.0.tar.gz", "has_sig": false, "md5_digest": "ff7f199de611913b01607ec51dfc7f3b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 5908, "upload_time": "2020-04-20T19:41:29", "upload_time_iso_8601": "2020-04-20T19:41:29.378575Z", "url": "https://files.pythonhosted.org/packages/82/40/a7c674e534d4b364ee2e7e5cfc1a5118c8628434d239dbeab232c2cd5bb0/rainflow-3.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:49 2020"}