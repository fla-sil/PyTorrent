{"info": {"author": "Alen Mujezinovic", "author_email": "alen@caffeinehit.com", "bugtrack_url": null, "classifiers": [], "description": "django-flaggit\n==============\n\ndjango-flaggit enables content flagging.\n\nInstallation\n------------\n\n::\n\n    pip install django-flaggit\n\nUsage:\n------\n\n-  Add ``flaggit`` to your ``INSTALLED_APPS``\n-  Include ``flaggit.urls`` into your URLs if you plan on using the view\n   and template tag:\n\n   ::\n\n       urlpatterns = patterns('',\n           url('^', include('flaggit.urls')),\n       )\n\nTest\n----\n\nFollow above steps and run\n\n::\n\n    python manage.py test flaggit\n\nAPI\n---\n\nModels\n~~~~~~\n\n-  ``flaggit.models.Flag``\n-  ``flaggit.models.FlagInstance``\n\nUtils\n~~~~~\n\n-  ``flaggit.utils.flag(obj, user=None, ip=None, comment=None)``:\n    Flag an ``obj``, returns a ``FlagInstance``\n\nSignals\n~~~~~~~\n\n-  ``flaggit.signals.flagged(flag)``:\n    Sent when something is flagged. Can be used to notify moderators.\n\n-  ``flaggit.signals.review(flag)``:\n    Sent when something is in review.\n\n-  ``flaggit.signals.rejected(flag)``:\n    Sent when some content was rejected.\n\n-  ``flaggit.signals.approved(flag)``:\n    Sent when some content was approved.\n\nHere's a template you can copy paste:\n\n::\n\n    import flaggit\n\n    def handle_flagged(sender, flag, created = False, **kwargs):\n        if created:\n            # send emails\n            pass\n        else:\n            pass\n\n    def handle_review(sender, flag, **kwargs):\n        pass\n\n    def handle_rejected(sender, flag, **kwargs):\n        flag.content_object.delete()\n        flag.delete()\n\n    def handle_approved(sender, flag, **kwargs):\n        pass\n\n    flaggit.signals.flagged.connect(handle_flagged)\n    flaggit.signals.review.connect(handle_review)\n    flaggit.signals.rejected.connect(handle_rejected)\n    flaggit.signals.approved.connect(handle_approved)\n\nTemplate tags\n~~~~~~~~~~~~~\n\n::\n\n    {% load flaggit_tags %}\n    {% flag_form object %}\n    {% flag_form object \"your/custom/template.html\" %}\n\n-  ``{% flag_form object %}``:\n    Renders a form to flag ``object``-\n\n-  \\`{% flag\\_form object \"your/custom/template.html\" %}:\n    Renders the form with a custom template.\n\n--------------\n\n`@flashingpumpkin <http://twitter.com/flashingpumpkin>`_", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/caffeinehit/django-flaggit", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-flaggit", "package_url": "https://pypi.org/project/django-flaggit/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-flaggit/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/caffeinehit/django-flaggit"}, "release_url": "https://pypi.org/project/django-flaggit/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "Generic content flagging for Django", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>django-flaggit enables content flagging.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install django-flaggit\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage:</h2>\n<ul>\n<li><p>Add <tt>flaggit</tt> to your <tt>INSTALLED_APPS</tt></p>\n</li>\n<li><p>Include <tt>flaggit.urls</tt> into your URLs if you plan on using the view\nand template tag:</p>\n<pre>urlpatterns = patterns('',\n    url('^', include('flaggit.urls')),\n)\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"test\">\n<h2>Test</h2>\n<p>Follow above steps and run</p>\n<pre>python manage.py test flaggit\n</pre>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<div id=\"models\">\n<h3>Models</h3>\n<ul>\n<li><tt>flaggit.models.Flag</tt></li>\n<li><tt>flaggit.models.FlagInstance</tt></li>\n</ul>\n</div>\n<div id=\"utils\">\n<h3>Utils</h3>\n<ul>\n<li><dl>\n<dt><tt>flaggit.utils.flag(obj, user=None, ip=None, comment=None)</tt>:</dt>\n<dd>Flag an <tt>obj</tt>, returns a <tt>FlagInstance</tt></dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"signals\">\n<h3>Signals</h3>\n<ul>\n<li><dl>\n<dt><tt>flaggit.signals.flagged(flag)</tt>:</dt>\n<dd>Sent when something is flagged. Can be used to notify moderators.</dd>\n</dl>\n</li>\n<li><dl>\n<dt><tt>flaggit.signals.review(flag)</tt>:</dt>\n<dd>Sent when something is in review.</dd>\n</dl>\n</li>\n<li><dl>\n<dt><tt>flaggit.signals.rejected(flag)</tt>:</dt>\n<dd>Sent when some content was rejected.</dd>\n</dl>\n</li>\n<li><dl>\n<dt><tt>flaggit.signals.approved(flag)</tt>:</dt>\n<dd>Sent when some content was approved.</dd>\n</dl>\n</li>\n</ul>\n<p>Here\u2019s a template you can copy paste:</p>\n<pre>import flaggit\n\ndef handle_flagged(sender, flag, created = False, **kwargs):\n    if created:\n        # send emails\n        pass\n    else:\n        pass\n\ndef handle_review(sender, flag, **kwargs):\n    pass\n\ndef handle_rejected(sender, flag, **kwargs):\n    flag.content_object.delete()\n    flag.delete()\n\ndef handle_approved(sender, flag, **kwargs):\n    pass\n\nflaggit.signals.flagged.connect(handle_flagged)\nflaggit.signals.review.connect(handle_review)\nflaggit.signals.rejected.connect(handle_rejected)\nflaggit.signals.approved.connect(handle_approved)\n</pre>\n</div>\n<div id=\"template-tags\">\n<h3>Template tags</h3>\n<pre>{% load flaggit_tags %}\n{% flag_form object %}\n{% flag_form object \"your/custom/template.html\" %}\n</pre>\n<ul>\n<li><dl>\n<dt><tt>{% flag_form object %}</tt>:</dt>\n<dd>Renders a form to flag <tt>object</tt>-</dd>\n</dl>\n</li>\n<li><dl>\n<dt>`{% flag_form object \u201cyour/custom/template.html\u201d %}:</dt>\n<dd>Renders the form with a custom template.</dd>\n</dl>\n</li>\n</ul>\n<hr class=\"docutils\">\n<p><a href=\"http://twitter.com/flashingpumpkin\" rel=\"nofollow\">@flashingpumpkin</a></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 789658, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "cf745bbe265b45a0b70bdee198cd7daf", "sha256": "db2e94eb56ccada98d173f68d86b8f82c058cbc6ea304e0e9cae35d1fcc310d0"}, "downloads": -1, "filename": "django-flaggit-0.0.1.tar.gz", "has_sig": false, "md5_digest": "cf745bbe265b45a0b70bdee198cd7daf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6654, "upload_time": "2011-08-04T18:39:31", "upload_time_iso_8601": "2011-08-04T18:39:31.716277Z", "url": "https://files.pythonhosted.org/packages/6e/b1/dda2ef4d5b609e0ba6abae6c2bb27bfe836e43c6a16b052204d805ab4f06/django-flaggit-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f737b2ffdaa14db170407f0b474ccf37", "sha256": "29e4de39a4c6d205e2cc23ccc2a70411291548bb369a67ee7a81b809aa2e57d4"}, "downloads": -1, "filename": "django-flaggit-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f737b2ffdaa14db170407f0b474ccf37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7291, "upload_time": "2011-08-05T13:20:24", "upload_time_iso_8601": "2011-08-05T13:20:24.010894Z", "url": "https://files.pythonhosted.org/packages/e0/85/cd0767379a11e44dcf7433b3730c7058291a7b249729454710cbbcfe5e63/django-flaggit-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "8bd24f8ace3cb0070b1e371be48d85b1", "sha256": "6aac49d968126a1801fb09a38c68e357509dd78535688074fb4af34e7c2bc761"}, "downloads": -1, "filename": "django-flaggit-0.0.3.tar.gz", "has_sig": false, "md5_digest": "8bd24f8ace3cb0070b1e371be48d85b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7297, "upload_time": "2011-08-05T13:27:13", "upload_time_iso_8601": "2011-08-05T13:27:13.512469Z", "url": "https://files.pythonhosted.org/packages/28/f1/67a024b40313d8001404d2e823975fc61f4848042c1cf97c89f178322bad/django-flaggit-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8bd24f8ace3cb0070b1e371be48d85b1", "sha256": "6aac49d968126a1801fb09a38c68e357509dd78535688074fb4af34e7c2bc761"}, "downloads": -1, "filename": "django-flaggit-0.0.3.tar.gz", "has_sig": false, "md5_digest": "8bd24f8ace3cb0070b1e371be48d85b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7297, "upload_time": "2011-08-05T13:27:13", "upload_time_iso_8601": "2011-08-05T13:27:13.512469Z", "url": "https://files.pythonhosted.org/packages/28/f1/67a024b40313d8001404d2e823975fc61f4848042c1cf97c89f178322bad/django-flaggit-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:07 2020"}