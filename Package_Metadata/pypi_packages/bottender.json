{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "[![travis-ci][travis-image]][travis-url]    [![pypi-version][pypi-image]][pypi-url]    [![codecov][codecov-image]][codecov-url]\n\n[travis-image]: https://travis-ci.org/stegben/bottender-py.svg?branch=master\n[travis-url]: https://travis-ci.org/stegben/bottender-py\n\n[pypi-image]: https://badge.fury.io/py/bottender-py.svg\n[pypi-url]: https://badge.fury.io/py/bottender-py\n\n[codecov-image]: https://codecov.io/gh/stegben/bottender-py/branch/master/graph/badge.svg\n[codecov-url]: https://codecov.io/gh/stegben/bottender-py\n\nRewrite the famous bot framework [Bottender](https://bottender.js.org/) in async python. All credits should be back to [Yoctol Info](https://www.yoctol.com/).\n\n\n# The following part is not ready yet, plz don't take them seriously\n\n\n## Installation\n```bash\npip install bottender\n```\n\n\n## Usage\n\n```python\nfrom bottender import MessengerBot\n\nbot = MessengerBot(\n    access_token=\"__access_token__\",\n    app_secret=\"__app_secret__\",\n)\n\n@bot.on_event\nasync def echo_handler(context):\n    if context.event.is_text:\n        await context.send_text('')\n\n\n# or\n# >>> bot.on_event(handler)\n```\n\n\n## Supported frameworks\n\n- Sanic\nFirst, prepare a :\n```\n```\n\nOr, use `blueprint` for larger project:\n```python\nfrom sanic import Sanic\nfrom bottender.sanic import create_blueprint\n\nbot = ...\n\nbp = create_blueprint(bot, name='bot', url_prefix='/bot')\napp = Sanic(__name__)\napp.blueprint(bp)\n```\n\nor, use ``\n\n- aiohttp\nUse route hadler.\n```python\n```\n\nHome-page: https://github.com/stegben/bottender-py\nAuthor: cph\nAuthor-email: stegben.benjamin@gmail.com\nLicense: UNKNOWN\nDescription: # bottender-py\n        \n        [![travis-ci][travis-image]][travis-url]    [![pypi-version][pypi-image]][pypi-url]    [![codecov][codecov-image]][codecov-url]\n        \n        [travis-image]: https://travis-ci.org/stegben/bottender-py.svg?branch=master\n        [travis-url]: https://travis-ci.org/stegben/bottender-py\n        \n        [pypi-image]: https://badge.fury.io/py/bottender-py.svg\n        [pypi-url]: https://badge.fury.io/py/bottender-py\n        \n        [codecov-image]: https://codecov.io/gh/stegben/bottender-py/branch/master/graph/badge.svg\n        [codecov-url]: https://codecov.io/gh/stegben/bottender-py\n        \n        Rewrite the famous bot framework [Bottender](https://bottender.js.org/) in async python. All credits should be back to [Yoctol Info](https://www.yoctol.com/).\n        \n        \n        # The following part is not ready yet, plz don't take them seriously\n        \n        \n        ## Installation\n        ```bash\n        pip install bottender\n        ```\n        \n        \n        ## Usage\n        \n        ```python\n        from bottender import MessengerBot\n        \n        bot = MessengerBot(\n            access_token=\"__access_token__\",\n            app_secret=\"__app_secret__\",\n        )\n        \n        @bot.on_event\n        async def echo_handler(context):\n            if context.event.is_text:\n                await context.send_text('')\n        \n        \n        # or\n        # >>> bot.on_event(handler)\n        ```\n        \n        \n        ## Supported frameworks\n        \n        - Sanic\n        First, prepare a :\n        ```\n        ```\n        \n        Or, use `blueprint` for larger project:\n        ```python\n        from sanic import Sanic\n        from bottender.sanic import create_blueprint\n        \n        bot = ...\n        \n        bp = create_blueprint(bot, name='bot', url_prefix='/bot')\n        app = Sanic(__name__)\n        app.blueprint(bp)\n        ```\n        \n        or, use ``\n        \n        - aiohttp\n        Use route hadler.\n        ```python\n        ```\n        \nPlatform: UNKNOWN\nClassifier: Programming Language :: Python :: 3.6\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "bottender", "package_url": "https://pypi.org/project/bottender/", "platform": "", "project_url": "https://pypi.org/project/bottender/", "project_urls": null, "release_url": "https://pypi.org/project/bottender/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "# bottender-py", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            [![travis-ci][travis-image]][travis-url]    [![pypi-version][pypi-image]][pypi-url]    [![codecov][codecov-image]][codecov-url]<br><br>[travis-image]: https://travis-ci.org/stegben/bottender-py.svg?branch=master<br>[travis-url]: https://travis-ci.org/stegben/bottender-py<br><br>[pypi-image]: https://badge.fury.io/py/bottender-py.svg<br>[pypi-url]: https://badge.fury.io/py/bottender-py<br><br>[codecov-image]: https://codecov.io/gh/stegben/bottender-py/branch/master/graph/badge.svg<br>[codecov-url]: https://codecov.io/gh/stegben/bottender-py<br><br>Rewrite the famous bot framework [Bottender](https://bottender.js.org/) in async python. All credits should be back to [Yoctol Info](https://www.yoctol.com/).<br><br><br># The following part is not ready yet, plz don't take them seriously<br><br><br>## Installation<br>```bash<br>pip install bottender<br>```<br><br><br>## Usage<br><br>```python<br>from bottender import MessengerBot<br><br>bot = MessengerBot(<br>    access_token=\"__access_token__\",<br>    app_secret=\"__app_secret__\",<br>)<br><br>@bot.on_event<br>async def echo_handler(context):<br>    if context.event.is_text:<br>        await context.send_text('')<br><br><br># or<br># &gt;&gt;&gt; bot.on_event(handler)<br>```<br><br><br>## Supported frameworks<br><br>- Sanic<br>First, prepare a :<br>```<br>```<br><br>Or, use `blueprint` for larger project:<br>```python<br>from sanic import Sanic<br>from bottender.sanic import create_blueprint<br><br>bot = ...<br><br>bp = create_blueprint(bot, name='bot', url_prefix='/bot')<br>app = Sanic(__name__)<br>app.blueprint(bp)<br>```<br><br>or, use ``<br><br>- aiohttp<br>Use route hadler.<br>```python<br>```<br><br>Home-page: https://github.com/stegben/bottender-py<br>Author: cph<br>Author-email: stegben.benjamin@gmail.com<br>License: UNKNOWN<br>Description: # bottender-py<br>        <br>        [![travis-ci][travis-image]][travis-url]    [![pypi-version][pypi-image]][pypi-url]    [![codecov][codecov-image]][codecov-url]<br>        <br>        [travis-image]: https://travis-ci.org/stegben/bottender-py.svg?branch=master<br>        [travis-url]: https://travis-ci.org/stegben/bottender-py<br>        <br>        [pypi-image]: https://badge.fury.io/py/bottender-py.svg<br>        [pypi-url]: https://badge.fury.io/py/bottender-py<br>        <br>        [codecov-image]: https://codecov.io/gh/stegben/bottender-py/branch/master/graph/badge.svg<br>        [codecov-url]: https://codecov.io/gh/stegben/bottender-py<br>        <br>        Rewrite the famous bot framework [Bottender](https://bottender.js.org/) in async python. All credits should be back to [Yoctol Info](https://www.yoctol.com/).<br>        <br>        <br>        # The following part is not ready yet, plz don't take them seriously<br>        <br>        <br>        ## Installation<br>        ```bash<br>        pip install bottender<br>        ```<br>        <br>        <br>        ## Usage<br>        <br>        ```python<br>        from bottender import MessengerBot<br>        <br>        bot = MessengerBot(<br>            access_token=\"__access_token__\",<br>            app_secret=\"__app_secret__\",<br>        )<br>        <br>        @bot.on_event<br>        async def echo_handler(context):<br>            if context.event.is_text:<br>                await context.send_text('')<br>        <br>        <br>        # or<br>        # &gt;&gt;&gt; bot.on_event(handler)<br>        ```<br>        <br>        <br>        ## Supported frameworks<br>        <br>        - Sanic<br>        First, prepare a :<br>        ```<br>        ```<br>        <br>        Or, use `blueprint` for larger project:<br>        ```python<br>        from sanic import Sanic<br>        from bottender.sanic import create_blueprint<br>        <br>        bot = ...<br>        <br>        bp = create_blueprint(bot, name='bot', url_prefix='/bot')<br>        app = Sanic(__name__)<br>        app.blueprint(bp)<br>        ```<br>        <br>        or, use ``<br>        <br>        - aiohttp<br>        Use route hadler.<br>        ```python<br>        ```<br>        <br>Platform: UNKNOWN<br>Classifier: Programming Language :: Python :: 3.6<br>\n          </div>"}, "last_serial": 4637945, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6f0004971576fe2fec75db93e180f060", "sha256": "c770c7d7b6812e46d21953643b3fd17beb049ff483d24738ad5d8bd8051e5d3b"}, "downloads": -1, "filename": "bottender-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6f0004971576fe2fec75db93e180f060", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2073, "upload_time": "2018-12-27T13:31:05", "upload_time_iso_8601": "2018-12-27T13:31:05.042808Z", "url": "https://files.pythonhosted.org/packages/7f/de/7825d7a9463d55b3bd9397094fbc5218693415fc6e0ef7486efe305f3c3d/bottender-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "66f8f3d365cc6b782947f705d53e4229", "sha256": "e3ba6fd91003c8c09debb7b3b4492eaa338858a9f9a423ed17fe8b1ee6c76bb5"}, "downloads": -1, "filename": "bottender-0.0.2.tar.gz", "has_sig": false, "md5_digest": "66f8f3d365cc6b782947f705d53e4229", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2074, "upload_time": "2018-12-27T13:35:53", "upload_time_iso_8601": "2018-12-27T13:35:53.791122Z", "url": "https://files.pythonhosted.org/packages/51/0e/238e676c85d40d3bf230b33c4a6b0a7976b597c4a38da3c84cac1442f377/bottender-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "66f8f3d365cc6b782947f705d53e4229", "sha256": "e3ba6fd91003c8c09debb7b3b4492eaa338858a9f9a423ed17fe8b1ee6c76bb5"}, "downloads": -1, "filename": "bottender-0.0.2.tar.gz", "has_sig": false, "md5_digest": "66f8f3d365cc6b782947f705d53e4229", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2074, "upload_time": "2018-12-27T13:35:53", "upload_time_iso_8601": "2018-12-27T13:35:53.791122Z", "url": "https://files.pythonhosted.org/packages/51/0e/238e676c85d40d3bf230b33c4a6b0a7976b597c4a38da3c84cac1442f377/bottender-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:34 2020"}