{"info": {"author": "Derek Ries", "author_email": "iamderekries@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries"], "description": "ARKpy\n====\n\n**v0.1.3**\n\nARKpy is a library for reading and writing the file formats of ARK: Survival Evolved with the python programming language. ARKpy does not simply look for the offsets of particular strings to find the data (like other existing libraries/scripts), but reads the entire data structure of the file into memory.\n\nFor those interested in the reverse engineering of the file types the specifications can be found among the library docs.\n\n[Docs](http://arkpy.readthedocs.io/en/latest/) **|**\n[File Format Specs](http://arkpy.readthedocs.io/en/latest/formats/) **|**\n[Examples](https://github.com/DerekRies/arkpy-examples)\n\n\n## Features\n - Read and Write the following file types\n    - **.arkcharactersetting** (Character creator preset files)\n    - **.arkprofile** (LocalPlayer.arkprofile or steamid.arkprofile, no LocalPlayerData)\n    - **.arktribe**\n - Create new characters or tribes dynamically\n - Friendly API wrapper around the data\n - Maps to enumerate through and identify the proper index for:\n    - **BoneModifierSlots** (Head Size, Chest, etc...)\n    - **Body Colors** (Skin, Hair, Eyes)\n    - **Stats** (Health, Oxygen, Stamina, etc...)\n    - **Item Blueprint Paths/IDs**\n\n\n## Installation\n```\npip install arkgamepy\n```\n\n## Usage\n\n#### Reading an .arkprofile file\n```python\nfrom arkpy.ark import ArkProfile\nfrom arkpy.ark import BoneMap, StatMap, BodyColorMap\n\nfile_path = 'data/SavedArksLocal/LocalPlayer.arkprofile'\nprofile = ArkProfile(file_path)\n\nprint profile.character.name\nprint profile.character.level_ups\nprint profile.character.experience\nprint profile.character.engram_points\n\n# Get all the Stat points allocated and print them with a string\n# identifying which stat they are\nstats = profile.character.stat_points\nfor stat in StatMap:\n  print '%s: %s' % (stat.name, stats[stat])\n\n# Get all the BoneModifier values and print them with a string\n# identifying which bone it is\nbones = profile.character.body_modifiers\nfor bone in BoneMap:\n  print '%s: %s' % (bone.name, bones[bone])\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DerekRies/arkpy", "keywords": "ark,game,ark survival,ark survival evolved,.ark,.arkprofile,.arktribe,.arkcharactersetting,reverse engineering,game files", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "arkgamepy", "package_url": "https://pypi.org/project/arkgamepy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/arkgamepy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/DerekRies/arkpy"}, "release_url": "https://pypi.org/project/arkgamepy/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "A library for reading and writing the file formats of ARK: Survival Evolved", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            ARKpy<br>====<br><br>**v0.1.3**<br><br>ARKpy is a library for reading and writing the file formats of ARK: Survival Evolved with the python programming language. ARKpy does not simply look for the offsets of particular strings to find the data (like other existing libraries/scripts), but reads the entire data structure of the file into memory.<br><br>For those interested in the reverse engineering of the file types the specifications can be found among the library docs.<br><br>[Docs](http://arkpy.readthedocs.io/en/latest/) **|**<br>[File Format Specs](http://arkpy.readthedocs.io/en/latest/formats/) **|**<br>[Examples](https://github.com/DerekRies/arkpy-examples)<br><br><br>## Features<br> - Read and Write the following file types<br>    - **.arkcharactersetting** (Character creator preset files)<br>    - **.arkprofile** (LocalPlayer.arkprofile or steamid.arkprofile, no LocalPlayerData)<br>    - **.arktribe**<br> - Create new characters or tribes dynamically<br> - Friendly API wrapper around the data<br> - Maps to enumerate through and identify the proper index for:<br>    - **BoneModifierSlots** (Head Size, Chest, etc...)<br>    - **Body Colors** (Skin, Hair, Eyes)<br>    - **Stats** (Health, Oxygen, Stamina, etc...)<br>    - **Item Blueprint Paths/IDs**<br><br><br>## Installation<br>```<br>pip install arkgamepy<br>```<br><br>## Usage<br><br>#### Reading an .arkprofile file<br>```python<br>from arkpy.ark import ArkProfile<br>from arkpy.ark import BoneMap, StatMap, BodyColorMap<br><br>file_path = 'data/SavedArksLocal/LocalPlayer.arkprofile'<br>profile = ArkProfile(file_path)<br><br>print profile.character.name<br>print profile.character.level_ups<br>print profile.character.experience<br>print profile.character.engram_points<br><br># Get all the Stat points allocated and print them with a string<br># identifying which stat they are<br>stats = profile.character.stat_points<br>for stat in StatMap:<br>  print '%s: %s' % (stat.name, stats[stat])<br><br># Get all the BoneModifier values and print them with a string<br># identifying which bone it is<br>bones = profile.character.body_modifiers<br>for bone in BoneMap:<br>  print '%s: %s' % (bone.name, bones[bone])<br>```\n          </div>"}, "last_serial": 2260819, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "450079910e173fe198f3eef90ebe7e13", "sha256": "cb53f1199037cdba635b23628afd96353e2d729e375685abc50e14654932f331"}, "downloads": -1, "filename": "arkgamepy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "450079910e173fe198f3eef90ebe7e13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24805, "upload_time": "2016-07-29T00:37:39", "upload_time_iso_8601": "2016-07-29T00:37:39.875073Z", "url": "https://files.pythonhosted.org/packages/af/8a/bb3821bbe38c265e167209c4beb1da0c8819a4e487cf95d4bad0eacd03e9/arkgamepy-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "bfd13de86e6dce8a813dbfc19471cd67", "sha256": "8fcaa156b01c6496416946c348043f9545378ff95253cfa8c0906144c250c7a8"}, "downloads": -1, "filename": "arkgamepy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "bfd13de86e6dce8a813dbfc19471cd67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24797, "upload_time": "2016-07-29T18:52:22", "upload_time_iso_8601": "2016-07-29T18:52:22.973797Z", "url": "https://files.pythonhosted.org/packages/d8/ef/6660c7dec2b86b337754ebaedb3be39777ab6746e911a520a35af6833f7a/arkgamepy-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "4340fb7fc8d476123118783601a57dad", "sha256": "5a172bcb0e73652174883f66050d1d834e37c2470b718cbb1bcf1f4d06b8fd01"}, "downloads": -1, "filename": "arkgamepy-0.1.3.tar.gz", "has_sig": false, "md5_digest": "4340fb7fc8d476123118783601a57dad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24849, "upload_time": "2016-08-03T21:48:54", "upload_time_iso_8601": "2016-08-03T21:48:54.306178Z", "url": "https://files.pythonhosted.org/packages/15/c8/29e0512e4b66625e3b78397bbfa5da3cf748de39a28d4608fb7cef364650/arkgamepy-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4340fb7fc8d476123118783601a57dad", "sha256": "5a172bcb0e73652174883f66050d1d834e37c2470b718cbb1bcf1f4d06b8fd01"}, "downloads": -1, "filename": "arkgamepy-0.1.3.tar.gz", "has_sig": false, "md5_digest": "4340fb7fc8d476123118783601a57dad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24849, "upload_time": "2016-08-03T21:48:54", "upload_time_iso_8601": "2016-08-03T21:48:54.306178Z", "url": "https://files.pythonhosted.org/packages/15/c8/29e0512e4b66625e3b78397bbfa5da3cf748de39a28d4608fb7cef364650/arkgamepy-0.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:14 2020"}