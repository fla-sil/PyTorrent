{"info": {"author": "Bizzozz\u00e9ro Nicolas, Mirhosseini Yoones", "author_email": "nicolasbizzozzero@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Education", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: French", "Programming Language :: Python :: 2.7", "Topic :: Games/Entertainment :: Puzzle Games"], "description": "# nonogram\n<p align=\"center\">\n    <img src=\"https://github.com/NicolasBi/nonogram/blob/master/nonogram/res/tux.gif?raw=true\" alt=\"tux gif\"/>\n</p>\n\n\n# Installation\nThe following line will install the **nonogram** package on your computer and add an entry point to the software\n```shell\n~$ pip install nonogram\n```\n\n# Usage\nLaunching the software is pretty straightforward. All the parameters have been already configured to help you during your day-to-day nonogram solving routine. Here's the command to use for solving the grid whose constraints has been saved in the file **constraints.txt** :\n```shell\n~$ nonogram constraints.txt\n```\n\n# Requirements\nThe linear-programming solver need the <b><a href=\"http://www.gurobi.com\">Gurobi Optimizer</a></b> software to be installed and properly configured.\n\n# Dependencies\n* numpy \u2265 1.12.0\n* docopt \u2265 0.6.2\n\n# Contributing\n1. Fork the project.\n2. Create your feature branch : `git checkout -b my-new-feature`.\n3. Commit your changes : `git commit -am 'Added some cool feature !'`.\n4. Push to the branch  : `git push origin my-new-feature`.\n5. Submit a pull request.\n\n# Todo\n* Add the following parameters :\n    * encoding\n    * verbose (tell when a bloc has been placed)\n    * progressbar\n    * output = (stdout in raw format | picture in window | picture saved)\n    * picture_output_path\n    * grid_path (with an non-empty grid)\n* Add a decorator outputing the current grid when a ctrl + c happen\n\n# Acknowledgments\nWe would like to thanks the **Pierre et Marie Curie University** (UPMC), for giving us the possibility and authorization to release this project.  \nWe also want to thanks professor <a href=\"http://www-poleia.lip6.fr/~escoffier/\">Bruno Escoffier</a> for offering us the knowledge and oppoortunities needed to build this software.\n\n\n# License\nThis project is licensed under the GPLv3 License - see the [LICENSE.txt](LICENSE.txt) file for details.\n\n# References\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/NicolasBi/nonogram/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/NicolasBi/nonogram", "keywords": "command-line,solver,nonogram,picross", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "nonogram", "package_url": "https://pypi.org/project/nonogram/", "platform": "", "project_url": "https://pypi.org/project/nonogram/", "project_urls": {"Download": "https://github.com/NicolasBi/nonogram/tarball/master", "Homepage": "https://github.com/NicolasBi/nonogram"}, "release_url": "https://pypi.org/project/nonogram/3.1.1/", "requires_dist": ["docopt (>=0.6.2)", "numpy (>=1.12.0)"], "requires_python": "", "summary": "Command-line tools to solve nonograms/picross", "version": "3.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>nonogram</h1>\n<p align=\"center\">\n    <img alt=\"tux gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5e530f561d9c151109185a7d411deabce8d5b964/68747470733a2f2f6769746875622e636f6d2f4e69636f6c617342692f6e6f6e6f6772616d2f626c6f622f6d61737465722f6e6f6e6f6772616d2f7265732f7475782e6769663f7261773d74727565\">\n</p>\n<h1>Installation</h1>\n<p>The following line will install the <strong>nonogram</strong> package on your computer and add an entry point to the software</p>\n<pre>~$ pip install nonogram\n</pre>\n<h1>Usage</h1>\n<p>Launching the software is pretty straightforward. All the parameters have been already configured to help you during your day-to-day nonogram solving routine. Here's the command to use for solving the grid whose constraints has been saved in the file <strong>constraints.txt</strong> :</p>\n<pre>~$ nonogram constraints.txt\n</pre>\n<h1>Requirements</h1>\n<p>The linear-programming solver need the <b><a href=\"http://www.gurobi.com\" rel=\"nofollow\">Gurobi Optimizer</a></b> software to be installed and properly configured.</p>\n<h1>Dependencies</h1>\n<ul>\n<li>numpy \u2265 1.12.0</li>\n<li>docopt \u2265 0.6.2</li>\n</ul>\n<h1>Contributing</h1>\n<ol>\n<li>Fork the project.</li>\n<li>Create your feature branch : <code>git checkout -b my-new-feature</code>.</li>\n<li>Commit your changes : <code>git commit -am 'Added some cool feature !'</code>.</li>\n<li>Push to the branch  : <code>git push origin my-new-feature</code>.</li>\n<li>Submit a pull request.</li>\n</ol>\n<h1>Todo</h1>\n<ul>\n<li>Add the following parameters :\n<ul>\n<li>encoding</li>\n<li>verbose (tell when a bloc has been placed)</li>\n<li>progressbar</li>\n<li>output = (stdout in raw format | picture in window | picture saved)</li>\n<li>picture_output_path</li>\n<li>grid_path (with an non-empty grid)</li>\n</ul>\n</li>\n<li>Add a decorator outputing the current grid when a ctrl + c happen</li>\n</ul>\n<h1>Acknowledgments</h1>\n<p>We would like to thanks the <strong>Pierre et Marie Curie University</strong> (UPMC), for giving us the possibility and authorization to release this project.<br>\nWe also want to thanks professor <a href=\"http://www-poleia.lip6.fr/~escoffier/\" rel=\"nofollow\">Bruno Escoffier</a> for offering us the knowledge and oppoortunities needed to build this software.</p>\n<h1>License</h1>\n<p>This project is licensed under the GPLv3 License - see the <a href=\"LICENSE.txt\" rel=\"nofollow\">LICENSE.txt</a> file for details.</p>\n<h1>References</h1>\n\n          </div>"}, "last_serial": 6518085, "releases": {"3.0.2": [{"comment_text": "", "digests": {"md5": "4fad955402af3f7c798c29ce50d813c7", "sha256": "6463e51a1978da5e5cd947e5b8d7342fcd6c1f9036993c868ea4cfe160e8e22f"}, "downloads": -1, "filename": "nonogram-3.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "4fad955402af3f7c798c29ce50d813c7", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 18905, "upload_time": "2017-12-06T12:31:11", "upload_time_iso_8601": "2017-12-06T12:31:11.943102Z", "url": "https://files.pythonhosted.org/packages/87/4a/de7027774730b6b094567aa910b5f3509aa299bfb4c3b15d6afb0105aa0c/nonogram-3.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a46f73493fa4bcbeeefaabd8c84d07c8", "sha256": "b533db62014ded999a9aabdc079b10b31044e8f6e3386abdf76eee008758d9da"}, "downloads": -1, "filename": "nonogram-3.0.2.tar.gz", "has_sig": false, "md5_digest": "a46f73493fa4bcbeeefaabd8c84d07c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23519, "upload_time": "2017-12-06T12:31:12", "upload_time_iso_8601": "2017-12-06T12:31:12.959461Z", "url": "https://files.pythonhosted.org/packages/9e/bf/43c4cfbc71eed2b8284f527f6762b7d0198f914528510e430df6581b11ca/nonogram-3.0.2.tar.gz", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "7cddb6610949c9b18b807fd0a85d03fa", "sha256": "1deb934a9bfc478e01a64969f9d146db4ab8b8e14359f726e38646ab5845c569"}, "downloads": -1, "filename": "nonogram-3.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "7cddb6610949c9b18b807fd0a85d03fa", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 23191, "upload_time": "2017-12-15T11:31:10", "upload_time_iso_8601": "2017-12-15T11:31:10.248035Z", "url": "https://files.pythonhosted.org/packages/77/e9/8c137de4060ef300efdd5ab5d4decb99cb87a915803144f14b355775f2bf/nonogram-3.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9e768a0f55ca23cc97f3bb1d3734b55", "sha256": "1a4f0ec4f676de3cf12ae8873e3fdd767cf260494e14cc48880aa36d796ab39a"}, "downloads": -1, "filename": "nonogram-3.1.0.tar.gz", "has_sig": false, "md5_digest": "a9e768a0f55ca23cc97f3bb1d3734b55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26571, "upload_time": "2017-12-15T11:31:11", "upload_time_iso_8601": "2017-12-15T11:31:11.639562Z", "url": "https://files.pythonhosted.org/packages/24/fe/c9c4300980ee9947a20642695b22e006cd3a92d08a81ca3e5be270278177/nonogram-3.1.0.tar.gz", "yanked": false}], "3.1.1": [{"comment_text": "", "digests": {"md5": "42d0e9cd691184b131f3c45a1c8c6d31", "sha256": "48a37dba7bf18e02f95c1fc61ae62030d6d4926d380dc6ce4c52826f39310dc5"}, "downloads": -1, "filename": "nonogram-3.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "42d0e9cd691184b131f3c45a1c8c6d31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33592, "upload_time": "2020-01-25T09:49:02", "upload_time_iso_8601": "2020-01-25T09:49:02.389952Z", "url": "https://files.pythonhosted.org/packages/92/de/bfd9752697a8fc7a31516b523bf6f3d4f167c2dce1889370d9ba9bd73470/nonogram-3.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8347d8727eb8dba97ed68244a9bb1cb", "sha256": "3329837ed14cdd0c52141d483b9591b2050298c69bbbbae0c4fd540c32f5872a"}, "downloads": -1, "filename": "nonogram-3.1.1.tar.gz", "has_sig": false, "md5_digest": "d8347d8727eb8dba97ed68244a9bb1cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28097, "upload_time": "2020-01-25T09:49:04", "upload_time_iso_8601": "2020-01-25T09:49:04.162050Z", "url": "https://files.pythonhosted.org/packages/06/d6/ed430b754edf76e6d7e2169741bebf7b39a66ba5328c7c73ac01c4af0bbb/nonogram-3.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "42d0e9cd691184b131f3c45a1c8c6d31", "sha256": "48a37dba7bf18e02f95c1fc61ae62030d6d4926d380dc6ce4c52826f39310dc5"}, "downloads": -1, "filename": "nonogram-3.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "42d0e9cd691184b131f3c45a1c8c6d31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33592, "upload_time": "2020-01-25T09:49:02", "upload_time_iso_8601": "2020-01-25T09:49:02.389952Z", "url": "https://files.pythonhosted.org/packages/92/de/bfd9752697a8fc7a31516b523bf6f3d4f167c2dce1889370d9ba9bd73470/nonogram-3.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8347d8727eb8dba97ed68244a9bb1cb", "sha256": "3329837ed14cdd0c52141d483b9591b2050298c69bbbbae0c4fd540c32f5872a"}, "downloads": -1, "filename": "nonogram-3.1.1.tar.gz", "has_sig": false, "md5_digest": "d8347d8727eb8dba97ed68244a9bb1cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28097, "upload_time": "2020-01-25T09:49:04", "upload_time_iso_8601": "2020-01-25T09:49:04.162050Z", "url": "https://files.pythonhosted.org/packages/06/d6/ed430b754edf76e6d7e2169741bebf7b39a66ba5328c7c73ac01c4af0bbb/nonogram-3.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:51 2020"}