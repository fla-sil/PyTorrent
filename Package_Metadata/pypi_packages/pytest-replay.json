{"info": {"author": "Bruno Oliveira", "author_email": "foss@esss.co", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Testing"], "description": "=============\npytest-replay\n=============\n\n\n.. image:: http://img.shields.io/pypi/v/pytest-replay.svg\n    :target: https://pypi.python.org/pypi/pytest-replay\n\n.. image:: https://anaconda.org/conda-forge/pytest-replay/badges/version.svg\n    :target: https://anaconda.org/conda-forge/pytest-replay\n\n.. image:: https://travis-ci.org/ESSS/pytest-replay.svg?branch=master\n    :target: https://travis-ci.org/ESSS/pytest-replay\n    :alt: See Build Status on Travis CI\n\n.. image:: https://ci.appveyor.com/api/projects/status/github/ESSS/pytest-replay?branch=master\n    :target: https://ci.appveyor.com/project/ESSS/pytest-replay/branch/master\n    :alt: See Build Status on AppVeyor\n\n.. image:: https://img.shields.io/pypi/pyversions/pytest-replay.svg\n    :target: https://pypi.python.org/pypi/pytest-replay\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\n\nSaves previous test runs and allow re-execute previous pytest runs to reproduce crashes or flaky tests\n\n----\n\nThis `Pytest`_ plugin was generated with `Cookiecutter`_ along with `@hackebrot`_'s `Cookiecutter-pytest-plugin`_ template.\n\n\nFeatures\n--------\n\nThis plugin helps to reproduce random or flaky behavior when running tests with xdist. ``pytest-xdist`` executes tests\nin a non-predictable order, making it hard to reproduce a behavior seen in CI locally because there's no convenient way\nto track which test executed in which worker.\n\nThis plugin records the executed node ids by each worker in the directory given by ``--replay-record-dir=<dir>`` flag,\nand a ``--replay=<file>`` can be used to re-run the tests from a previous run. For example::\n\n    $ pytest -n auto --replay-record-dir=build/tests/replay\n\nThis will generate files with each line being a ``json`` with the following content:\nnode identification, start time, end time and outcome. It is interesting to note\nthat usually the node id is repeated twice, that is necessary in case of a test\nsuddenly crashes we will still have the record of that test started. After the\ntest finishes, ``pytest-replay`` will add another ``json`` line with the\ncomplete information.\nThat is also useful to analyze concurrent tests which might have some kind of\nrace condition and interfere in each other.\n\nFor example worker ``gw1`` will generate a file\n``.pytest-replay-gw1.txt`` with contents like this::\n\n    {\"nodeid\": \"test_foo.py::test[1]\", \"start\": 0.000}\n    {\"nodeid\": \"test_foo.py::test[1]\", \"start\": 0.000, \"finish\": 1.5, \"outcome\": \"passed\"}\n    {\"nodeid\": \"test_foo.py::test[3]\", \"start\": 1.5}\n    {\"nodeid\": \"test_foo.py::test[3]\", \"start\": 1.5, \"finish\": 2.5, \"outcome\": \"passed\"}\n    {\"nodeid\": \"test_foo.py::test[5]\", \"start\": 2.5}\n    {\"nodeid\": \"test_foo.py::test[5]\", \"start\": 2.5, \"finish\": 3.5, \"outcome\": \"passed\"}\n    {\"nodeid\": \"test_foo.py::test[7]\", \"start\": 3.5}\n    {\"nodeid\": \"test_foo.py::test[7]\", \"start\": 3.5, \"finish\": 4.5, \"outcome\": \"passed\"}\n    {\"nodeid\": \"test_foo.py::test[8]\", \"start\": 4.5}\n    {\"nodeid\": \"test_foo.py::test[8]\", \"start\": 4.5, \"finish\": 5.5, \"outcome\": \"passed\"}\n\n\nIf there is a crash or a flaky failure in the tests of the worker ``gw1``, one can take that file from the CI server and\nexecute the tests in the same order with::\n\n    $ pytest --replay=.pytest-replay-gw1.txt\n\nHopefully this will make it easier to reproduce the problem and fix it.\n\n\nFAQ\n~~~\n\n1. ``pytest`` has its own `cache <https://docs.pytest.org/en/latest/cache.html>`_, why use a different mechanism?\n\n   The internal cache saves its data using ``json``, which is not suitable in the advent of a crash because the file\n   will not be readable.\n\n2. Shouldn't the ability of selecting tests from a file be part of the ``pytest`` core?\n\n   Sure, but let's try to use this a bit as a separate plugin before proposing\n   its inclusion into the core.\n\nInstallation\n------------\n\nYou can install ``pytest-replay`` via `pip`_ from `PyPI`_::\n\n    $ pip install pytest-replay\n\nOr with conda::\n\n    $ conda install -c conda-forge pytest-replay\n\n\nContributing\n------------\n\nContributions are very welcome.\n\nTests can be run with `tox`_ if you are using a native Python installation.\n\nTo run tests with `conda <https://conda.io/docs/>`_, first create a virtual environment and execute tests from there\n(conda with Python 3.5+ in the root environment)::\n\n    $ python -m venv .env\n    $ .env\\scripts\\activate\n    $ pip install -e . pytest-xdist\n    $ pytest tests\n\n\nReleases\n~~~~~~~~\n\nFollow these steps to make a new release:\n\n1. Create a new branch ``release-X.Y.Z`` from ``master``;\n2. Update ``CHANGELOG.rst``;\n3. Open a PR;\n4. After it is **green** and **approved**, push a new tag in the format ``X.Y.Z``;\n\nTravis will deploy to PyPI automatically.\n\nAfterwards, update the recipe in `conda-forge/pytest-replay-feedstock <https://github.com/conda-forge/pytest-replay-feedstock>`_.\n\n\nLicense\n-------\n\nDistributed under the terms of the `MIT`_ license.\n\n\nIssues\n------\n\nIf you encounter any problems, please `file an issue`_ along with a detailed description.\n\n.. _`Cookiecutter`: https://github.com/audreyr/cookiecutter\n.. _`@hackebrot`: https://github.com/hackebrot\n.. _`MIT`: http://opensource.org/licenses/MIT\n.. _`BSD-3`: http://opensource.org/licenses/BSD-3-Clause\n.. _`GNU GPL v3.0`: http://www.gnu.org/licenses/gpl-3.0.txt\n.. _`Apache Software License 2.0`: http://www.apache.org/licenses/LICENSE-2.0\n.. _`cookiecutter-pytest-plugin`: https://github.com/pytest-dev/cookiecutter-pytest-plugin\n.. _`file an issue`: https://github.com/ESSS/pytest-replay/issues\n.. _`pytest`: https://github.com/pytest-dev/pytest\n.. _`tox`: https://tox.readthedocs.io/en/latest/\n.. _`pip`: https://pypi.python.org/pypi/pip/\n.. _`PyPI`: https://pypi.python.org/pypi\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ESSS/pytest-replay", "keywords": "", "license": "MIT", "maintainer": "Bruno Oliveira", "maintainer_email": "bruno@esss.com.br", "name": "pytest-replay", "package_url": "https://pypi.org/project/pytest-replay/", "platform": "", "project_url": "https://pypi.org/project/pytest-replay/", "project_urls": {"Homepage": "https://github.com/ESSS/pytest-replay"}, "release_url": "https://pypi.org/project/pytest-replay/1.2.0/", "requires_dist": ["pytest (>=3.0.0)"], "requires_python": ">=3.6", "summary": "Saves previous test runs and allow re-execute previous pytest runs to reproduce crashes or flaky tests", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/pytest-replay\" rel=\"nofollow\"><img alt=\"http://img.shields.io/pypi/v/pytest-replay.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3b06df2f1d76cc5a0bc0dde9dea171e6f7f48dbb/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f7079746573742d7265706c61792e737667\"></a>\n<a href=\"https://anaconda.org/conda-forge/pytest-replay\" rel=\"nofollow\"><img alt=\"https://anaconda.org/conda-forge/pytest-replay/badges/version.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb5866428cc8f40efe094fde632793ac305fb735/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f7079746573742d7265706c61792f6261646765732f76657273696f6e2e737667\"></a>\n<a href=\"https://travis-ci.org/ESSS/pytest-replay\" rel=\"nofollow\"><img alt=\"See Build Status on Travis CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e314240619f58674537ae4dbff0be5b72391dd99/68747470733a2f2f7472617669732d63692e6f72672f455353532f7079746573742d7265706c61792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/ESSS/pytest-replay/branch/master\" rel=\"nofollow\"><img alt=\"See Build Status on AppVeyor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae754587545f8710e886bbb8c8796412b60569fd/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f455353532f7079746573742d7265706c61793f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/pytest-replay\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/pytest-replay.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b5b5d5a7f75c38c7c6e3008ce1cad2999aa9681/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079746573742d7265706c61792e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/code%20style-black-000000.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<p>Saves previous test runs and allow re-execute previous pytest runs to reproduce crashes or flaky tests</p>\n<hr class=\"docutils\">\n<p>This <a href=\"https://github.com/pytest-dev/pytest\" rel=\"nofollow\">Pytest</a> plugin was generated with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> along with <a href=\"https://github.com/hackebrot\" rel=\"nofollow\">@hackebrot</a>\u2019s <a href=\"https://github.com/pytest-dev/cookiecutter-pytest-plugin\" rel=\"nofollow\">Cookiecutter-pytest-plugin</a> template.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<p>This plugin helps to reproduce random or flaky behavior when running tests with xdist. <tt><span class=\"pre\">pytest-xdist</span></tt> executes tests\nin a non-predictable order, making it hard to reproduce a behavior seen in CI locally because there\u2019s no convenient way\nto track which test executed in which worker.</p>\n<p>This plugin records the executed node ids by each worker in the directory given by <tt><span class=\"pre\">--replay-record-dir=&lt;dir&gt;</span></tt> flag,\nand a <tt><span class=\"pre\">--replay=&lt;file&gt;</span></tt> can be used to re-run the tests from a previous run. For example:</p>\n<pre>$ pytest -n auto --replay-record-dir=build/tests/replay\n</pre>\n<p>This will generate files with each line being a <tt>json</tt> with the following content:\nnode identification, start time, end time and outcome. It is interesting to note\nthat usually the node id is repeated twice, that is necessary in case of a test\nsuddenly crashes we will still have the record of that test started. After the\ntest finishes, <tt><span class=\"pre\">pytest-replay</span></tt> will add another <tt>json</tt> line with the\ncomplete information.\nThat is also useful to analyze concurrent tests which might have some kind of\nrace condition and interfere in each other.</p>\n<p>For example worker <tt>gw1</tt> will generate a file\n<tt><span class=\"pre\">.pytest-replay-gw1.txt</span></tt> with contents like this:</p>\n<pre>{\"nodeid\": \"test_foo.py::test[1]\", \"start\": 0.000}\n{\"nodeid\": \"test_foo.py::test[1]\", \"start\": 0.000, \"finish\": 1.5, \"outcome\": \"passed\"}\n{\"nodeid\": \"test_foo.py::test[3]\", \"start\": 1.5}\n{\"nodeid\": \"test_foo.py::test[3]\", \"start\": 1.5, \"finish\": 2.5, \"outcome\": \"passed\"}\n{\"nodeid\": \"test_foo.py::test[5]\", \"start\": 2.5}\n{\"nodeid\": \"test_foo.py::test[5]\", \"start\": 2.5, \"finish\": 3.5, \"outcome\": \"passed\"}\n{\"nodeid\": \"test_foo.py::test[7]\", \"start\": 3.5}\n{\"nodeid\": \"test_foo.py::test[7]\", \"start\": 3.5, \"finish\": 4.5, \"outcome\": \"passed\"}\n{\"nodeid\": \"test_foo.py::test[8]\", \"start\": 4.5}\n{\"nodeid\": \"test_foo.py::test[8]\", \"start\": 4.5, \"finish\": 5.5, \"outcome\": \"passed\"}\n</pre>\n<p>If there is a crash or a flaky failure in the tests of the worker <tt>gw1</tt>, one can take that file from the CI server and\nexecute the tests in the same order with:</p>\n<pre>$ pytest --replay=.pytest-replay-gw1.txt\n</pre>\n<p>Hopefully this will make it easier to reproduce the problem and fix it.</p>\n<div id=\"faq\">\n<h3>FAQ</h3>\n<ol>\n<li><p><tt>pytest</tt> has its own <a href=\"https://docs.pytest.org/en/latest/cache.html\" rel=\"nofollow\">cache</a>, why use a different mechanism?</p>\n<p>The internal cache saves its data using <tt>json</tt>, which is not suitable in the advent of a crash because the file\nwill not be readable.</p>\n</li>\n<li><p>Shouldn\u2019t the ability of selecting tests from a file be part of the <tt>pytest</tt> core?</p>\n<p>Sure, but let\u2019s try to use this a bit as a separate plugin before proposing\nits inclusion into the core.</p>\n</li>\n</ol>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install <tt><span class=\"pre\">pytest-replay</span></tt> via <a href=\"https://pypi.python.org/pypi/pip/\" rel=\"nofollow\">pip</a> from <a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>$ pip install pytest-replay\n</pre>\n<p>Or with conda:</p>\n<pre>$ conda install -c conda-forge pytest-replay\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions are very welcome.</p>\n<p>Tests can be run with <a href=\"https://tox.readthedocs.io/en/latest/\" rel=\"nofollow\">tox</a> if you are using a native Python installation.</p>\n<p>To run tests with <a href=\"https://conda.io/docs/\" rel=\"nofollow\">conda</a>, first create a virtual environment and execute tests from there\n(conda with Python 3.5+ in the root environment):</p>\n<pre>$ python -m venv .env\n$ .env\\scripts\\activate\n$ pip install -e . pytest-xdist\n$ pytest tests\n</pre>\n<div id=\"releases\">\n<h3>Releases</h3>\n<p>Follow these steps to make a new release:</p>\n<ol>\n<li>Create a new branch <tt><span class=\"pre\">release-X.Y.Z</span></tt> from <tt>master</tt>;</li>\n<li>Update <tt>CHANGELOG.rst</tt>;</li>\n<li>Open a PR;</li>\n<li>After it is <strong>green</strong> and <strong>approved</strong>, push a new tag in the format <tt>X.Y.Z</tt>;</li>\n</ol>\n<p>Travis will deploy to PyPI automatically.</p>\n<p>Afterwards, update the recipe in <a href=\"https://github.com/conda-forge/pytest-replay-feedstock\" rel=\"nofollow\">conda-forge/pytest-replay-feedstock</a>.</p>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Distributed under the terms of the <a href=\"http://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT</a> license.</p>\n</div>\n<div id=\"issues\">\n<h2>Issues</h2>\n<p>If you encounter any problems, please <a href=\"https://github.com/ESSS/pytest-replay/issues\" rel=\"nofollow\">file an issue</a> along with a detailed description.</p>\n</div>\n\n          </div>"}, "last_serial": 6138048, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "849b82be70c510ce87fad19f5ff01e4b", "sha256": "d9dd6ba3fa7fbd7d941a9a81a366cc6d105ba212dae4fd841195789846147275"}, "downloads": -1, "filename": "pytest_replay-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "849b82be70c510ce87fad19f5ff01e4b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2624, "upload_time": "2018-02-22T18:24:44", "upload_time_iso_8601": "2018-02-22T18:24:44.577880Z", "url": "https://files.pythonhosted.org/packages/dd/91/58792a1d91ade5dc57ef296a1c29098af229708f3704fff1ef4d02664b6e/pytest_replay-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9745c837c264b7711c088b765a12d66a", "sha256": "723b5629d37eddb83da1f47aa3a7fdadaa2d0eea44e2450b1356e1ed7020f025"}, "downloads": -1, "filename": "pytest-replay-0.0.0.tar.gz", "has_sig": false, "md5_digest": "9745c837c264b7711c088b765a12d66a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3359, "upload_time": "2018-02-22T18:24:45", "upload_time_iso_8601": "2018-02-22T18:24:45.639188Z", "url": "https://files.pythonhosted.org/packages/06/e5/da5548c47a02f4773af20d73a1c3606f863220b8f4bb4e76c5c5677b1282/pytest-replay-0.0.0.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "d98fe9c777bcc47b63ec4020a9b2f943", "sha256": "53ef2c6936bca9574f8e4a752a640b295968d6ba463e111df1ab7ffe8be224db"}, "downloads": -1, "filename": "pytest_replay-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d98fe9c777bcc47b63ec4020a9b2f943", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6817, "upload_time": "2018-02-22T19:17:52", "upload_time_iso_8601": "2018-02-22T19:17:52.808524Z", "url": "https://files.pythonhosted.org/packages/d3/07/f2a13d4d802aeae6db16dd8d7f0a7922b904f5bf8042f80dd5ff7f235aeb/pytest_replay-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62e9b2998d2cb7899dc076088da6e37f", "sha256": "9bd32a373a3b25956a7d58d2df035319556d9576224789f1ee7f2f6cdd7f3a6c"}, "downloads": -1, "filename": "pytest-replay-0.1.0.tar.gz", "has_sig": false, "md5_digest": "62e9b2998d2cb7899dc076088da6e37f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8068, "upload_time": "2018-02-22T19:17:55", "upload_time_iso_8601": "2018-02-22T19:17:55.055352Z", "url": "https://files.pythonhosted.org/packages/16/3d/bd023ffc7ba000a39e225f6fe5890ce5618bcc37e54d053ace5dd39929b2/pytest-replay-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "48f326fd69d51af9ad36056967f068a5", "sha256": "66fd98d11a4c6f9b5c1e034ea629aef649e6d52054efa0f65f1c4c1f0ed76e87"}, "downloads": -1, "filename": "pytest_replay-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "48f326fd69d51af9ad36056967f068a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6826, "upload_time": "2018-02-22T19:58:30", "upload_time_iso_8601": "2018-02-22T19:58:30.072637Z", "url": "https://files.pythonhosted.org/packages/9f/6c/42642ff61c88b31b1b2af68dec70b03b483dd3007471a1d03ed4e81218bb/pytest_replay-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b45baa93232ff7c3947b372009cddd42", "sha256": "7f6e201300d203c73079107e49155a52fdd262131b17b4061c2ed6e2ae75b83f"}, "downloads": -1, "filename": "pytest-replay-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b45baa93232ff7c3947b372009cddd42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8143, "upload_time": "2018-02-22T19:58:31", "upload_time_iso_8601": "2018-02-22T19:58:31.435100Z", "url": "https://files.pythonhosted.org/packages/2d/cf/c7f258655956c95c43044c98508e09a5177be29fcc034d9fb78b4c83b40c/pytest-replay-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8e3b769b08c24fac27b34290b2da8e0e", "sha256": "5c2e35bef034792d213ea660cf67e021d46ddaf7b63d0340b020fdd32dfe97cf"}, "downloads": -1, "filename": "pytest_replay-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8e3b769b08c24fac27b34290b2da8e0e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7223, "upload_time": "2018-02-23T12:18:37", "upload_time_iso_8601": "2018-02-23T12:18:37.025647Z", "url": "https://files.pythonhosted.org/packages/2b/9d/1989b59eaa1c24aecc7e1a52805b4044ef5ea8ac2747ee2e1a8984acace2/pytest_replay-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b23c4985eba8e0df08fa70fb94441776", "sha256": "8258417a96605b1de21f369a1c595c9239c1f0b1af594659f38f180dc969945f"}, "downloads": -1, "filename": "pytest-replay-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b23c4985eba8e0df08fa70fb94441776", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8342, "upload_time": "2018-02-23T12:18:37", "upload_time_iso_8601": "2018-02-23T12:18:37.875258Z", "url": "https://files.pythonhosted.org/packages/3f/ac/ae441311f201cc54fd5b5f59367cd8ed4f7b38eebdaeb2c8202fd097bf38/pytest-replay-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "3e195ae60183dbb97371aaf88c3ab1ab", "sha256": "7cdc71a4a7ab4dcb6cabf5706ed09e30da70cb6eb5e7300ad46089ed23abfec8"}, "downloads": -1, "filename": "pytest_replay-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3e195ae60183dbb97371aaf88c3ab1ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7348, "upload_time": "2018-03-01T19:04:11", "upload_time_iso_8601": "2018-03-01T19:04:11.749342Z", "url": "https://files.pythonhosted.org/packages/40/af/1c9d1bbbfe0e6cb9a2a18efe59a044b20680169f012c4210e6aa9bcec2f0/pytest_replay-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "522778f2b707eb176c5107e4b4b232a0", "sha256": "7c08cba713c9335f2149f0ef9587b92467d60365d10546837a1952042377601d"}, "downloads": -1, "filename": "pytest-replay-0.2.1.tar.gz", "has_sig": false, "md5_digest": "522778f2b707eb176c5107e4b4b232a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8603, "upload_time": "2018-03-01T19:04:12", "upload_time_iso_8601": "2018-03-01T19:04:12.605101Z", "url": "https://files.pythonhosted.org/packages/c7/25/701240118924bd989900ed59aa9e4b2c82a1f22968dd3dcfc4b97be49f83/pytest-replay-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "8d6fac23929b9306922c5fc6bb60f27f", "sha256": "d2aa0818f26627409a3008b6d7e9f67bf5b769cd3ccfd49407a0cfb8683b0eb1"}, "downloads": -1, "filename": "pytest_replay-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8d6fac23929b9306922c5fc6bb60f27f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7408, "upload_time": "2018-03-02T12:25:58", "upload_time_iso_8601": "2018-03-02T12:25:58.481197Z", "url": "https://files.pythonhosted.org/packages/8c/8d/cc6c995749be595ac2fcb638de48ae84637d1dded0e7c040f9156a5d290c/pytest_replay-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb91999f398a5967e5362564ca98fbc4", "sha256": "ab3e089b3dec0c37dc39d88935cccaa5f6d763ec6d782224378beae51b6dd944"}, "downloads": -1, "filename": "pytest-replay-0.2.2.tar.gz", "has_sig": false, "md5_digest": "eb91999f398a5967e5362564ca98fbc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8883, "upload_time": "2018-03-02T12:25:59", "upload_time_iso_8601": "2018-03-02T12:25:59.516192Z", "url": "https://files.pythonhosted.org/packages/56/11/fbeabe42b06d297567cf39eb1b318c7c64dc6a166c2ee820726d81a7eb60/pytest-replay-0.2.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "94164c2fca4334816f1e3e27a04dfc0f", "sha256": "3d74aff8b7ccf636aa646f6f49e0a3561598194959b8af5adb4f010e6417cc44"}, "downloads": -1, "filename": "pytest_replay-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "94164c2fca4334816f1e3e27a04dfc0f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5442, "upload_time": "2019-09-10T19:22:43", "upload_time_iso_8601": "2019-09-10T19:22:43.156732Z", "url": "https://files.pythonhosted.org/packages/dc/2c/1f95958f7993767d7e56eda8155e5a395de56ea2ec2711bda306c48ebb52/pytest_replay-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6cbc8fa9a6db052fb7224e586a4a25f", "sha256": "21e9e26857cd4d386109176dea32983af963af30c5a1a8944a1a59bd2b3e7c68"}, "downloads": -1, "filename": "pytest-replay-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e6cbc8fa9a6db052fb7224e586a4a25f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8815, "upload_time": "2019-09-10T19:22:44", "upload_time_iso_8601": "2019-09-10T19:22:44.520090Z", "url": "https://files.pythonhosted.org/packages/f4/62/34bb1417fe7991f41ebff093bb6535fd1c1e79a4cd311267a623a9846c03/pytest-replay-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "bf5134b1da23ec44032003372d8625e8", "sha256": "6171deb26e7a25da3b1a718c6023a5f48b41db5480fab22713e90559625ff07c"}, "downloads": -1, "filename": "pytest_replay-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bf5134b1da23ec44032003372d8625e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5427, "upload_time": "2019-11-11T21:56:17", "upload_time_iso_8601": "2019-11-11T21:56:17.038458Z", "url": "https://files.pythonhosted.org/packages/51/ed/601234cb647e7251ab3b789cefacbf4c2a8f771ce20e6528552cf9af7d47/pytest_replay-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f295ba758d8d80e31a9c1b0fee351a01", "sha256": "caa7d67b93963f626ac0d6382ea3b50b8aac2ca88e4dfa25190297c302700f9c"}, "downloads": -1, "filename": "pytest-replay-1.1.0.tar.gz", "has_sig": false, "md5_digest": "f295ba758d8d80e31a9c1b0fee351a01", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8999, "upload_time": "2019-11-11T21:56:18", "upload_time_iso_8601": "2019-11-11T21:56:18.560015Z", "url": "https://files.pythonhosted.org/packages/fb/3d/7b9d9f7f5f6fadc99a7468d19ee7828f6970b446374724233c2d308d5993/pytest-replay-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "77c17695825f2038d96e795dc6f14a18", "sha256": "84cb9e19ca711f4a69d6807676ce8e37f839ac5c9592628be5ef3bbcd8f2c7d9"}, "downloads": -1, "filename": "pytest_replay-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "77c17695825f2038d96e795dc6f14a18", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6106, "upload_time": "2019-11-14T18:16:25", "upload_time_iso_8601": "2019-11-14T18:16:25.970551Z", "url": "https://files.pythonhosted.org/packages/5a/17/4c54f692d5a44c1f7a609c9abc9ddc60e0b8e538b49105336131da3bb91b/pytest_replay-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "761e78903b0c8bc62294764399b741ec", "sha256": "09d28df66bd2336e13909e7b6fc9ee63adb2c34cf5b4f2d601de445103f96aac"}, "downloads": -1, "filename": "pytest-replay-1.2.0.tar.gz", "has_sig": false, "md5_digest": "761e78903b0c8bc62294764399b741ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9980, "upload_time": "2019-11-14T18:16:27", "upload_time_iso_8601": "2019-11-14T18:16:27.202944Z", "url": "https://files.pythonhosted.org/packages/77/83/7dd91a51ff4b94cf8a02a597fdca4b23288500085012d88f1c396103a58c/pytest-replay-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "77c17695825f2038d96e795dc6f14a18", "sha256": "84cb9e19ca711f4a69d6807676ce8e37f839ac5c9592628be5ef3bbcd8f2c7d9"}, "downloads": -1, "filename": "pytest_replay-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "77c17695825f2038d96e795dc6f14a18", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6106, "upload_time": "2019-11-14T18:16:25", "upload_time_iso_8601": "2019-11-14T18:16:25.970551Z", "url": "https://files.pythonhosted.org/packages/5a/17/4c54f692d5a44c1f7a609c9abc9ddc60e0b8e538b49105336131da3bb91b/pytest_replay-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "761e78903b0c8bc62294764399b741ec", "sha256": "09d28df66bd2336e13909e7b6fc9ee63adb2c34cf5b4f2d601de445103f96aac"}, "downloads": -1, "filename": "pytest-replay-1.2.0.tar.gz", "has_sig": false, "md5_digest": "761e78903b0c8bc62294764399b741ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9980, "upload_time": "2019-11-14T18:16:27", "upload_time_iso_8601": "2019-11-14T18:16:27.202944Z", "url": "https://files.pythonhosted.org/packages/77/83/7dd91a51ff4b94cf8a02a597fdca4b23288500085012d88f1c396103a58c/pytest-replay-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:47 2020"}