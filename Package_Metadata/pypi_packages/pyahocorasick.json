{"info": {"author": "Wojciech Mu\u0142a", "author_email": "wojciech_mula@poczta.onet.pl", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: BSD License", "Programming Language :: C", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries", "Topic :: Text Editors :: Text Processing"], "description": "========================================================================\n                          pyahocorasick\n========================================================================\n\n.. image:: https://travis-ci.org/WojciechMula/pyahocorasick.svg?branch=master\n    :target: https://travis-ci.org/WojciechMula/pyahocorasick\n    :alt: Linux Master branch tests status\n\n.. image:: https://ci.appveyor.com/api/projects/status/github/WojciechMula/pyahocorasick?branch=master&svg=true\n   :target: https://ci.appveyor.com/project/WojciechMula/pyahocorasick\n   :alt: Windows Master branch tests status\n\n**pyahocorasick** is a fast and memory efficient library for exact or approximate\nmulti-pattern string search meaning that you can find multiple key strings\noccurrences at once in some input text.  The library provides an `ahocorasick` Python\nmodule that you can use as a plain dict-like Trie or convert a Trie to an automaton\nfor efficient Aho-Corasick search.\n\nIt is implemented in C and tested on Python 2.7 and 3.4+. It works on Linux, Mac and\nWindows.\n\nThe license_ is BSD-3-clause. Some utilities, such as tests and the pure Python\nautomaton are dedicated to the Public Domain.\n\n\nDownload and source code\n========================\n\nYou can fetch **pyahocorasick** from:\n    - GitHub https://github.com/WojciechMula/pyahocorasick/\n    - Pypi https://pypi.python.org/pypi/pyahocorasick/\n    - Conda-Forge https://github.com/conda-forge/pyahocorasick-feedstock/\n\n\nQuick start\n===========\n\nThis module is written in C. You need a C compiler installed to compile native\nCPython extensions. To install::\n\n    pip install pyahocorasick\n\nThen create an Automaton::\n\n    >>> import ahocorasick\n    >>> A = ahocorasick.Automaton()\n\nYou can use the Automaton class as a trie. Add some string keys and their associated\nvalue to this trie. Here we associate a tuple of (insertion index, original string)\nas a value to each key string we add to the trie::\n\n    >>> for idx, key in enumerate('he her hers she'.split()):\n    ...   A.add_word(key, (idx, key))\n\nThen check if some string exists in the trie::\n\n    >>> 'he' in A\n    True\n    >>> 'HER' in A\n    False\n\nAnd play with the ``get()`` dict-like method::\n\n    >>> A.get('he')\n    (0, 'he')\n    >>> A.get('she')\n    (3, 'she')\n    >>> A.get('cat', 'not exists')\n    'not exists'\n    >>> A.get('dog')\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    KeyError\n\nNow convert the trie to an Aho-Corasick automaton to enable Aho-Corasick search::\n\n    >>> A.make_automaton()\n\nThen search all occurrences of the keys (the needles) in an input string (our haystack).\n\nHere we print the results and just check that they are correct. The\n`Automaton.iter()` method return the results as two-tuples of the `end index` where a\ntrie key was found in the input string and the associated `value` for this key. Here\nwe had stored as values a tuple with the original string and its trie insertion\norder::\n\n    >>> for end_index, (insert_order, original_value) in A.iter(haystack):\n    ...     start_index = end_index - len(original_value) + 1\n    ...     print((start_index, end_index, (insert_order, original_value)))\n    ...     assert haystack[start_index:start_index + len(original_value)] == original_value\n    ...\n    (1, 2, (0, 'he'))\n    (1, 3, (1, 'her'))\n    (1, 4, (2, 'hers'))\n    (4, 6, (3, 'she'))\n    (5, 6, (0, 'he'))\n\nYou can also create an eventually large automaton ahead of time and `pickle` it to\nre-load later. Here we just pickle to a string. You would typically pickle to a\nfile instead::\n\n    >>> import cPickle\n    >>> pickled = cPickle.dumps(A)\n    >>> B = cPickle.loads(pickled)\n    >>> B.get('he')\n    (0, 'he')\n\n\nSee also:\n    - FAQ and Who is using pyahocorasick? https://github.com/WojciechMula/pyahocorasick/wiki/FAQ#who-is-using-pyahocorasick\n\n\nDocumentation\n=============\n\nThe full documentation including the API overview and reference is published on\n`readthedocs <http://pyahocorasick.readthedocs.io/>`_.\n\n\nOverview\n========\n\nWith an `Aho-Corasick automaton <http://en.wikipedia.org/wiki/Aho-Corasick%20algorithm>`_\nyou can efficiently search all occurrences of multiple strings (the needles) in an\ninput string (the haystack) making a single pass over the input string. With\npyahocorasick you can eventually build large automatons and pickle them to reuse\nthem over and over as an indexed structure for fast multi pattern string matching.\n\nOne of the advantages of an Aho-Corasick automaton is that the typical worst-case\nand best-case **runtimes** are about the same and depends primarily on the size\nof the input string and secondarily on the number of matches returned.  While\nthis may not be the fastest string search algorithm in all cases, it can search\nfor multiple strings at once and its runtime guarantees make it rather unique.\nBecause pyahocorasick is based on a Trie, it stores redundant keys prefixes only\nonce using memory efficiently.\n\nA drawback is that it needs to be constructed and \"finalized\" ahead of time\nbefore you can search strings. In several applications where you search for several\npre-defined \"needles\" in a variable \"haystacks\" this is actually an advantage.\n\n**Aho-Corasick automatons** are commonly used for fast multi-pattern matching\nin intrusion detection systems (such as snort), anti-viruses and many other\napplications that need fast matching against a pre-defined set of string keys.\n\nInternally an Aho-Corasick automaton is typically based on a Trie with extra\ndata for failure links and an implementation of the Aho-Corasick search\nprocedure.\n\nBehind the scenes the **pyahocorasick** Python library implements these two data\nstructures:  a `Trie <http://en.wikipedia.org/wiki/trie>`_ and an Aho-Corasick string\nmatching automaton. Both are exposed through the `Automaton` class.\n\nIn addition to Trie-like and Aho-Corasick methods and data structures,\n**pyahocorasick** also implements dict-like methods: The pyahocorasick\n**Automaton** is a **Trie** a dict-like structure indexed by string keys each\nassociated with a value object. You can use this to retrieve an associated value\nin a time proportional to a string key length.\n\npyahocorasick is available in two flavors:\n\n* a CPython **C-based extension**, compatible with Python 2 and 3.\n\n* a simpler pure Python module, compatible with Python 2 and 3. This is only\n  available in the source repository (not on Pypi) under the py/ directory and\n  has a slightly different API.\n\n\nUnicode and bytes\n-----------------\n\nThe type of strings accepted and returned by ``Automaton`` methods are either\n**unicode** or **bytes**, depending on a compile time settings (preprocessor\ndefinition of ``AHOCORASICK_UNICODE`` as set in `setup.py`).\n\nThe ``Automaton.unicode`` attributes can tell you how the library was built.\nOn Python 3, unicode is the default. On Python 2, bytes is the default and only value.\n\n\n.. warning::\n\n    When the library is built with unicode support on Python 3, an Automaton will\n    store 2 or 4 bytes per letter, depending on your Python installation. When built\n    for bytes, only one byte per letter is needed.\n\n    Unicode is **NOT supported** on Python 2 for now.\n\n\nBuild and install from PyPi\n===========================\n\nTo install for common operating systems, use pip. Pre-built wheels should be\navailable on Pypi at some point in the future::\n\n    pip install pyahocorasick\n\nTo build from sources you need to have a C compiler installed and configured which\nshould be standard on Linux and easy to get on MacOSX.\n\nOn Windows and Python 2.7 you need the `Microsoft Visual C++ Compiler for Python 2.7\n<https://www.microsoft.com/en-us/download/details.aspx?id=44266>`_ (aka. Visual\nStudio 2008). There have been reports that `pyahocorasick` does not build yet with\nMinGW. It may build with cygwin but this has not been tested. If you get this working\nwith these platforms, please report in a ticket!\n\nTo build from sources, clone the git repository or download and extract the source\narchive.\n\nInstall `pip` (and its `setuptools` companion) and then run (in a `virtualenv` of\ncourse!)::\n\n    pip install .\n\nIf compilation succeeds, the module is ready to use.\n\n\nSupport\n=======\n\nSupport is available through the `GitHub issue tracker\n<https://github.com/WojciechMula/pyahocorasick/issues>`_ to report bugs or ask\nquestions.\n\n\nContributing\n============\n\nYou can submit contributions through `GitHub pull requests\n<https://github.com/WojciechMula/pyahocorasick/pull>`_.\n\n\nAuthors\n=======\n\nThe initial author and maintainer is Wojciech Mu\u0142a. `Philippe Ombredanne\n<https://github.com/pombredanne>`_, the current co-owner, rewrote\ndocumentation, setup CI servers and did a whole lot of work to make this module\nbetter accessible to end users.\n\nAlphabetic list of authors:\n\n* **Andrew Grigorev**\n* **Bogdan**\n* **David Woakes**\n* **Edward Betts**\n* **Frankie Robertson**\n* **Frederik Petersen**\n* **gladtosee**\n* **INADA Naoki**\n* **Jan Fan**\n* **Pastafarianist**\n* **Philippe Ombredanne**\n* **Renat Nasyrov**\n* **Sylvain Zimmer**\n* **Xiaopeng Xu**\n\nThis library would not be possible without help of many people, who contributed in\nvarious ways.\nThey created `pull requests <https://github.com/WojciechMula/pyahocorasick/pull>`_,\nreported bugs as `GitHub issues <https://github.com/WojciechMula/pyahocorasick/issues>`_\nor via direct messages, proposed fixes, or spent their valuable time on testing.\n\nThank you.\n\n\nLicense\n=======\n\nThis library is licensed under very liberal\n`BSD-3-Clause <http://spdx.org/licenses/BSD-3-Clause.html>`_ license. Some portions of\nthe code are dedicated to the public domain such as the pure Python automaton and test\ncode.\n\nFull text of license is available in LICENSE file.\n\n\nOther Aho-Corasick implementations for Python you can consider\n==============================================================\n\nWhile **pyahocorasick** tries to be the finest and fastest Aho Corasick library\nfor Python you may consider these other libraries:\n\n\n* `py_aho_corasick <https://github.com/JanFan/py-aho-corasick>`_ by Jan\n\n * Written in pure Python.\n * Poor performance.\n\n* `ahocorapy <https://github.com/abusix/ahocorapy>`_ by abusix\n\n * Written in pure Python.\n * Better performance than py-aho-corasick.\n * Using pypy, ahocorapy's search performance is only slightly worse than pyahocorasick's.\n * Performs additional suffix shortcutting (more setup overhead, less search overhead for suffix lookups).\n * Includes visualization tool for resulting automaton (using pygraphviz).\n * MIT-licensed, 100% test coverage, tested on all major python versions (+ pypy)\n\n* `noaho <https://github.com/JDonner/NoAho>`_ by Jeff Donner\n\n * Written in C. Does not return overlapping matches.\n * Does not compile on Windows (July 2016).\n * No support for the pickle protocol.\n\n* `acora <https://github.com/scoder/acora>`_ by Stefan Behnel\n\n * Written in Cython.\n * Large automaton may take a long time to build (July 2016)\n * No support for a dict-like protocol to associate a value to a string key.\n\n* `ahocorasick <https://hkn.eecs.berkeley.edu/~dyoo/python/ahocorasick/>`_ by Danny Yoo\n\n * Written in C.\n * seems unmaintained (last update in 2005).\n * GPL-licensed.\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/WojciechMula/pyahocorasick", "keywords": "aho-corasick", "license": " BSD-3-Clause and Public-Domain", "maintainer": "", "maintainer_email": "", "name": "pyahocorasick", "package_url": "https://pypi.org/project/pyahocorasick/", "platform": "Linux", "project_url": "https://pypi.org/project/pyahocorasick/", "project_urls": {"Homepage": "http://github.com/WojciechMula/pyahocorasick"}, "release_url": "https://pypi.org/project/pyahocorasick/1.4.0/", "requires_dist": null, "requires_python": "", "summary": "pyahocorasick is a fast and memory efficient library for exact or approximate multi-pattern string search.  With the ahocorasick.Automaton class, you can find multiple key strings occurrences at once in some input text.  You can use it as a plain dict-like Trie or convert a Trie to an automaton for efficient Aho-Corasick search.  Implemented in C and tested on Python 2.7 and 3.4+.  Works on Linux, Mac and Windows. BSD-3-clause license.", "version": "1.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/WojciechMula/pyahocorasick\" rel=\"nofollow\"><img alt=\"Linux Master branch tests status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7bd963f8e3717f731961ed0dce903234bbfa3b6f/68747470733a2f2f7472617669732d63692e6f72672f576f6a63696563684d756c612f707961686f636f72617369636b2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/WojciechMula/pyahocorasick\" rel=\"nofollow\"><img alt=\"Windows Master branch tests status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cd9ec583596dbf7f269e73831f641f3a75a308be/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f576f6a63696563684d756c612f707961686f636f72617369636b3f6272616e63683d6d6173746572267376673d74727565\"></a>\n<p><strong>pyahocorasick</strong> is a fast and memory efficient library for exact or approximate\nmulti-pattern string search meaning that you can find multiple key strings\noccurrences at once in some input text.  The library provides an <cite>ahocorasick</cite> Python\nmodule that you can use as a plain dict-like Trie or convert a Trie to an automaton\nfor efficient Aho-Corasick search.</p>\n<p>It is implemented in C and tested on Python 2.7 and 3.4+. It works on Linux, Mac and\nWindows.</p>\n<p>The <a href=\"#license\" rel=\"nofollow\">license</a> is BSD-3-clause. Some utilities, such as tests and the pure Python\nautomaton are dedicated to the Public Domain.</p>\n<div id=\"download-and-source-code\">\n<h2>Download and source code</h2>\n<dl>\n<dt>You can fetch <strong>pyahocorasick</strong> from:</dt>\n<dd><ul>\n<li>GitHub <a href=\"https://github.com/WojciechMula/pyahocorasick/\" rel=\"nofollow\">https://github.com/WojciechMula/pyahocorasick/</a></li>\n<li>Pypi <a href=\"https://pypi.python.org/pypi/pyahocorasick/\" rel=\"nofollow\">https://pypi.python.org/pypi/pyahocorasick/</a></li>\n<li>Conda-Forge <a href=\"https://github.com/conda-forge/pyahocorasick-feedstock/\" rel=\"nofollow\">https://github.com/conda-forge/pyahocorasick-feedstock/</a></li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<p>This module is written in C. You need a C compiler installed to compile native\nCPython extensions. To install:</p>\n<pre>pip install pyahocorasick\n</pre>\n<p>Then create an Automaton:</p>\n<pre>&gt;&gt;&gt; import ahocorasick\n&gt;&gt;&gt; A = ahocorasick.Automaton()\n</pre>\n<p>You can use the Automaton class as a trie. Add some string keys and their associated\nvalue to this trie. Here we associate a tuple of (insertion index, original string)\nas a value to each key string we add to the trie:</p>\n<pre>&gt;&gt;&gt; for idx, key in enumerate('he her hers she'.split()):\n...   A.add_word(key, (idx, key))\n</pre>\n<p>Then check if some string exists in the trie:</p>\n<pre>&gt;&gt;&gt; 'he' in A\nTrue\n&gt;&gt;&gt; 'HER' in A\nFalse\n</pre>\n<p>And play with the <tt>get()</tt> dict-like method:</p>\n<pre>&gt;&gt;&gt; A.get('he')\n(0, 'he')\n&gt;&gt;&gt; A.get('she')\n(3, 'she')\n&gt;&gt;&gt; A.get('cat', 'not exists')\n'not exists'\n&gt;&gt;&gt; A.get('dog')\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nKeyError\n</pre>\n<p>Now convert the trie to an Aho-Corasick automaton to enable Aho-Corasick search:</p>\n<pre>&gt;&gt;&gt; A.make_automaton()\n</pre>\n<p>Then search all occurrences of the keys (the needles) in an input string (our haystack).</p>\n<p>Here we print the results and just check that they are correct. The\n<cite>Automaton.iter()</cite> method return the results as two-tuples of the <cite>end index</cite> where a\ntrie key was found in the input string and the associated <cite>value</cite> for this key. Here\nwe had stored as values a tuple with the original string and its trie insertion\norder:</p>\n<pre>&gt;&gt;&gt; for end_index, (insert_order, original_value) in A.iter(haystack):\n...     start_index = end_index - len(original_value) + 1\n...     print((start_index, end_index, (insert_order, original_value)))\n...     assert haystack[start_index:start_index + len(original_value)] == original_value\n...\n(1, 2, (0, 'he'))\n(1, 3, (1, 'her'))\n(1, 4, (2, 'hers'))\n(4, 6, (3, 'she'))\n(5, 6, (0, 'he'))\n</pre>\n<p>You can also create an eventually large automaton ahead of time and <cite>pickle</cite> it to\nre-load later. Here we just pickle to a string. You would typically pickle to a\nfile instead:</p>\n<pre>&gt;&gt;&gt; import cPickle\n&gt;&gt;&gt; pickled = cPickle.dumps(A)\n&gt;&gt;&gt; B = cPickle.loads(pickled)\n&gt;&gt;&gt; B.get('he')\n(0, 'he')\n</pre>\n<dl>\n<dt>See also:</dt>\n<dd><ul>\n<li>FAQ and Who is using pyahocorasick? <a href=\"https://github.com/WojciechMula/pyahocorasick/wiki/FAQ#who-is-using-pyahocorasick\" rel=\"nofollow\">https://github.com/WojciechMula/pyahocorasick/wiki/FAQ#who-is-using-pyahocorasick</a></li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The full documentation including the API overview and reference is published on\n<a href=\"http://pyahocorasick.readthedocs.io/\" rel=\"nofollow\">readthedocs</a>.</p>\n</div>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>With an <a href=\"http://en.wikipedia.org/wiki/Aho-Corasick%20algorithm\" rel=\"nofollow\">Aho-Corasick automaton</a>\nyou can efficiently search all occurrences of multiple strings (the needles) in an\ninput string (the haystack) making a single pass over the input string. With\npyahocorasick you can eventually build large automatons and pickle them to reuse\nthem over and over as an indexed structure for fast multi pattern string matching.</p>\n<p>One of the advantages of an Aho-Corasick automaton is that the typical worst-case\nand best-case <strong>runtimes</strong> are about the same and depends primarily on the size\nof the input string and secondarily on the number of matches returned.  While\nthis may not be the fastest string search algorithm in all cases, it can search\nfor multiple strings at once and its runtime guarantees make it rather unique.\nBecause pyahocorasick is based on a Trie, it stores redundant keys prefixes only\nonce using memory efficiently.</p>\n<p>A drawback is that it needs to be constructed and \u201cfinalized\u201d ahead of time\nbefore you can search strings. In several applications where you search for several\npre-defined \u201cneedles\u201d in a variable \u201chaystacks\u201d this is actually an advantage.</p>\n<p><strong>Aho-Corasick automatons</strong> are commonly used for fast multi-pattern matching\nin intrusion detection systems (such as snort), anti-viruses and many other\napplications that need fast matching against a pre-defined set of string keys.</p>\n<p>Internally an Aho-Corasick automaton is typically based on a Trie with extra\ndata for failure links and an implementation of the Aho-Corasick search\nprocedure.</p>\n<p>Behind the scenes the <strong>pyahocorasick</strong> Python library implements these two data\nstructures:  a <a href=\"http://en.wikipedia.org/wiki/trie\" rel=\"nofollow\">Trie</a> and an Aho-Corasick string\nmatching automaton. Both are exposed through the <cite>Automaton</cite> class.</p>\n<p>In addition to Trie-like and Aho-Corasick methods and data structures,\n<strong>pyahocorasick</strong> also implements dict-like methods: The pyahocorasick\n<strong>Automaton</strong> is a <strong>Trie</strong> a dict-like structure indexed by string keys each\nassociated with a value object. You can use this to retrieve an associated value\nin a time proportional to a string key length.</p>\n<p>pyahocorasick is available in two flavors:</p>\n<ul>\n<li>a CPython <strong>C-based extension</strong>, compatible with Python 2 and 3.</li>\n<li>a simpler pure Python module, compatible with Python 2 and 3. This is only\navailable in the source repository (not on Pypi) under the py/ directory and\nhas a slightly different API.</li>\n</ul>\n<div id=\"unicode-and-bytes\">\n<h3>Unicode and bytes</h3>\n<p>The type of strings accepted and returned by <tt>Automaton</tt> methods are either\n<strong>unicode</strong> or <strong>bytes</strong>, depending on a compile time settings (preprocessor\ndefinition of <tt>AHOCORASICK_UNICODE</tt> as set in <cite>setup.py</cite>).</p>\n<p>The <tt>Automaton.unicode</tt> attributes can tell you how the library was built.\nOn Python 3, unicode is the default. On Python 2, bytes is the default and only value.</p>\n<div>\n<p>Warning</p>\n<p>When the library is built with unicode support on Python 3, an Automaton will\nstore 2 or 4 bytes per letter, depending on your Python installation. When built\nfor bytes, only one byte per letter is needed.</p>\n<p>Unicode is <strong>NOT supported</strong> on Python 2 for now.</p>\n</div>\n</div>\n</div>\n<div id=\"build-and-install-from-pypi\">\n<h2>Build and install from PyPi</h2>\n<p>To install for common operating systems, use pip. Pre-built wheels should be\navailable on Pypi at some point in the future:</p>\n<pre>pip install pyahocorasick\n</pre>\n<p>To build from sources you need to have a C compiler installed and configured which\nshould be standard on Linux and easy to get on MacOSX.</p>\n<p>On Windows and Python 2.7 you need the <a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=44266\" rel=\"nofollow\">Microsoft Visual C++ Compiler for Python 2.7</a> (aka. Visual\nStudio 2008). There have been reports that <cite>pyahocorasick</cite> does not build yet with\nMinGW. It may build with cygwin but this has not been tested. If you get this working\nwith these platforms, please report in a ticket!</p>\n<p>To build from sources, clone the git repository or download and extract the source\narchive.</p>\n<p>Install <cite>pip</cite> (and its <cite>setuptools</cite> companion) and then run (in a <cite>virtualenv</cite> of\ncourse!):</p>\n<pre>pip install .\n</pre>\n<p>If compilation succeeds, the module is ready to use.</p>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>Support is available through the <a href=\"https://github.com/WojciechMula/pyahocorasick/issues\" rel=\"nofollow\">GitHub issue tracker</a> to report bugs or ask\nquestions.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>You can submit contributions through <a href=\"https://github.com/WojciechMula/pyahocorasick/pull\" rel=\"nofollow\">GitHub pull requests</a>.</p>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>The initial author and maintainer is Wojciech Mu\u0142a. <a href=\"https://github.com/pombredanne\" rel=\"nofollow\">Philippe Ombredanne</a>, the current co-owner, rewrote\ndocumentation, setup CI servers and did a whole lot of work to make this module\nbetter accessible to end users.</p>\n<p>Alphabetic list of authors:</p>\n<ul>\n<li><strong>Andrew Grigorev</strong></li>\n<li><strong>Bogdan</strong></li>\n<li><strong>David Woakes</strong></li>\n<li><strong>Edward Betts</strong></li>\n<li><strong>Frankie Robertson</strong></li>\n<li><strong>Frederik Petersen</strong></li>\n<li><strong>gladtosee</strong></li>\n<li><strong>INADA Naoki</strong></li>\n<li><strong>Jan Fan</strong></li>\n<li><strong>Pastafarianist</strong></li>\n<li><strong>Philippe Ombredanne</strong></li>\n<li><strong>Renat Nasyrov</strong></li>\n<li><strong>Sylvain Zimmer</strong></li>\n<li><strong>Xiaopeng Xu</strong></li>\n</ul>\n<p>This library would not be possible without help of many people, who contributed in\nvarious ways.\nThey created <a href=\"https://github.com/WojciechMula/pyahocorasick/pull\" rel=\"nofollow\">pull requests</a>,\nreported bugs as <a href=\"https://github.com/WojciechMula/pyahocorasick/issues\" rel=\"nofollow\">GitHub issues</a>\nor via direct messages, proposed fixes, or spent their valuable time on testing.</p>\n<p>Thank you.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This library is licensed under very liberal\n<a href=\"http://spdx.org/licenses/BSD-3-Clause.html\" rel=\"nofollow\">BSD-3-Clause</a> license. Some portions of\nthe code are dedicated to the public domain such as the pure Python automaton and test\ncode.</p>\n<p>Full text of license is available in LICENSE file.</p>\n</div>\n<div id=\"other-aho-corasick-implementations-for-python-you-can-consider\">\n<h2>Other Aho-Corasick implementations for Python you can consider</h2>\n<p>While <strong>pyahocorasick</strong> tries to be the finest and fastest Aho Corasick library\nfor Python you may consider these other libraries:</p>\n<ul>\n<li><a href=\"https://github.com/JanFan/py-aho-corasick\" rel=\"nofollow\">py_aho_corasick</a> by Jan</li>\n</ul>\n<blockquote>\n<ul>\n<li>Written in pure Python.</li>\n<li>Poor performance.</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/abusix/ahocorapy\" rel=\"nofollow\">ahocorapy</a> by abusix</li>\n</ul>\n<blockquote>\n<ul>\n<li>Written in pure Python.</li>\n<li>Better performance than py-aho-corasick.</li>\n<li>Using pypy, ahocorapy\u2019s search performance is only slightly worse than pyahocorasick\u2019s.</li>\n<li>Performs additional suffix shortcutting (more setup overhead, less search overhead for suffix lookups).</li>\n<li>Includes visualization tool for resulting automaton (using pygraphviz).</li>\n<li>MIT-licensed, 100% test coverage, tested on all major python versions (+ pypy)</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/JDonner/NoAho\" rel=\"nofollow\">noaho</a> by Jeff Donner</li>\n</ul>\n<blockquote>\n<ul>\n<li>Written in C. Does not return overlapping matches.</li>\n<li>Does not compile on Windows (July 2016).</li>\n<li>No support for the pickle protocol.</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/scoder/acora\" rel=\"nofollow\">acora</a> by Stefan Behnel</li>\n</ul>\n<blockquote>\n<ul>\n<li>Written in Cython.</li>\n<li>Large automaton may take a long time to build (July 2016)</li>\n<li>No support for a dict-like protocol to associate a value to a string key.</li>\n</ul>\n</blockquote>\n<ul>\n<li><a href=\"https://hkn.eecs.berkeley.edu/~dyoo/python/ahocorasick/\" rel=\"nofollow\">ahocorasick</a> by Danny Yoo</li>\n</ul>\n<blockquote>\n<ul>\n<li>Written in C.</li>\n<li>seems unmaintained (last update in 2005).</li>\n<li>GPL-licensed.</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 4694882, "releases": {"1.0": [], "1.0.0": [{"comment_text": "", "digests": {"md5": "177508a1571952f5c0892cb06bf1a6ca", "sha256": "df33b16810faa7ec4285eff1a9e19ef6058f8034b17d70d490a4473043cf85fc"}, "downloads": -1, "filename": "pyahocorasick-1.0.0.tar.gz", "has_sig": false, "md5_digest": "177508a1571952f5c0892cb06bf1a6ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24272, "upload_time": "2014-11-25T18:53:43", "upload_time_iso_8601": "2014-11-25T18:53:43.865419Z", "url": "https://files.pythonhosted.org/packages/a5/7c/2c358d45ceafb3bbf14aa8c67b8461c5bd9c0a4c1770221d00d9d4bb3eb6/pyahocorasick-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "c6b097c9198fcb2e6f5e72a9c8db6ff6", "sha256": "6d200fbc2741e6598b574497dd1a7ea76c698f244584cc5cfce605be60bbb969"}, "downloads": -1, "filename": "pyahocorasick-1.0.1.tar.gz", "has_sig": false, "md5_digest": "c6b097c9198fcb2e6f5e72a9c8db6ff6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22086, "upload_time": "2016-04-19T18:25:31", "upload_time_iso_8601": "2016-04-19T18:25:31.864086Z", "url": "https://files.pythonhosted.org/packages/17/e4/118675d2e5b10f2bb53293f5a614eab29e669f87b513ec4a52f99c620731/pyahocorasick-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "73e9d77b61fd0f194219d8f4202cab89", "sha256": "dab3d4112a5edcc9498a148dd0b18400c7e4f36bcd767a6d1a88379fc0531848"}, "downloads": -1, "filename": "pyahocorasick-1.0.2.tar.gz", "has_sig": false, "md5_digest": "73e9d77b61fd0f194219d8f4202cab89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22408, "upload_time": "2016-04-23T19:10:12", "upload_time_iso_8601": "2016-04-23T19:10:12.541909Z", "url": "https://files.pythonhosted.org/packages/6c/7d/70b5eddb94703b9ecf30c47b0fd7a18f3affa2cd0d8c46b2686684f9e008/pyahocorasick-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "ba5ef5b8276f2f246b938b60c142410f", "sha256": "6fda6a72d9c1bb9ad64bf00e107097c1edcb27cdece7df6fc54ddf017e30405a"}, "downloads": -1, "filename": "pyahocorasick-1.0.3.tar.gz", "has_sig": false, "md5_digest": "ba5ef5b8276f2f246b938b60c142410f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22328, "upload_time": "2016-04-24T16:00:54", "upload_time_iso_8601": "2016-04-24T16:00:54.382483Z", "url": "https://files.pythonhosted.org/packages/06/65/890752fcba80c65d2d76f325d2f2ff99f482a0e2c5043427b1479992ad43/pyahocorasick-1.0.3.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "2e304e7b3e9da43633aed47b6969dd6e", "sha256": "483ac352a732fdba98d0aef474887574fd1b2316742ed1fb8d9b55543e915b1d"}, "downloads": -1, "filename": "pyahocorasick-1.1.0.tar.gz", "has_sig": false, "md5_digest": "2e304e7b3e9da43633aed47b6969dd6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23228, "upload_time": "2016-04-26T18:08:45", "upload_time_iso_8601": "2016-04-26T18:08:45.685033Z", "url": "https://files.pythonhosted.org/packages/14/fa/05bd230aa57c14bd22fcb2c9293029ddaa220b96e0a5e032636cff8ef824/pyahocorasick-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "ac58da737a2bf01aa4dddccef127985b", "sha256": "25f76b610e8ee3414e04688ba933f3f16409cbd821921de279c7143bdf35040c"}, "downloads": -1, "filename": "pyahocorasick-1.1.1.tar.gz", "has_sig": false, "md5_digest": "ac58da737a2bf01aa4dddccef127985b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46268, "upload_time": "2016-07-29T16:54:55", "upload_time_iso_8601": "2016-07-29T16:54:55.878812Z", "url": "https://files.pythonhosted.org/packages/8a/2b/a2b2d4cbc93afe5d4a02f43f5fb9de27fc1e98008b6cabf9242252b8f301/pyahocorasick-1.1.1.tar.gz", "yanked": false}], "1.1.10": [{"comment_text": "", "digests": {"md5": "60d8bee85eeaf7ec9491a935c82c2047", "sha256": "a817f590f568ed96741415c13c6ff8b90113f9f99dd3d1e02968297ea3aebe8f"}, "downloads": -1, "filename": "pyahocorasick-1.1.10.tar.gz", "has_sig": false, "md5_digest": "60d8bee85eeaf7ec9491a935c82c2047", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69073, "upload_time": "2018-11-06T22:40:18", "upload_time_iso_8601": "2018-11-06T22:40:18.258594Z", "url": "https://files.pythonhosted.org/packages/85/0a/81d2e93c5629e920b2764bb5559d057330e04361e82b0075546c7d6ad8a7/pyahocorasick-1.1.10.tar.gz", "yanked": false}], "1.1.11": [{"comment_text": "", "digests": {"md5": "43394b6825f48cda50e3bda0962d91dd", "sha256": "9b1115720a9b2ce5ff532da8e44bdab23da8e4c168f87c17a36f105cdf14300c"}, "downloads": -1, "filename": "pyahocorasick-1.1.11.tar.gz", "has_sig": false, "md5_digest": "43394b6825f48cda50e3bda0962d91dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78599, "upload_time": "2018-12-02T17:49:57", "upload_time_iso_8601": "2018-12-02T17:49:57.240553Z", "url": "https://files.pythonhosted.org/packages/ca/65/d5215a78d164285b2cff6816c6fe9a82257ea6f0a394e00a0c8909f2a962/pyahocorasick-1.1.11.tar.gz", "yanked": false}], "1.1.12": [{"comment_text": "", "digests": {"md5": "e81883ec87bc3faf755df1bb0c26aff5", "sha256": "3aee81353af3f7b23c8c9e7bd0367c941850bf6cc9384f0d37c7f3fa7503ebab"}, "downloads": -1, "filename": "pyahocorasick-1.1.12.tar.gz", "has_sig": false, "md5_digest": "e81883ec87bc3faf755df1bb0c26aff5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78944, "upload_time": "2018-12-03T18:06:27", "upload_time_iso_8601": "2018-12-03T18:06:27.576797Z", "url": "https://files.pythonhosted.org/packages/de/ab/2c6e50ce12bc4d03edc028f1c55461e573599349cea17cb985476d833ee7/pyahocorasick-1.1.12.tar.gz", "yanked": false}], "1.1.13.1": [{"comment_text": "", "digests": {"md5": "8d1665662a4523ccbc6b6f592560af62", "sha256": "7bd09c35b0b248b34d124d4f78dec5c316f4f299a9c28cf3a6377798064af92f"}, "downloads": -1, "filename": "pyahocorasick-1.1.13.1.tar.gz", "has_sig": false, "md5_digest": "8d1665662a4523ccbc6b6f592560af62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 82107, "upload_time": "2018-12-11T18:38:34", "upload_time_iso_8601": "2018-12-11T18:38:34.645655Z", "url": "https://files.pythonhosted.org/packages/a1/07/59ea29342500c6e6d64e4bd95e8d48c89db2fce6dd9c6434e00608990eab/pyahocorasick-1.1.13.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "331d93a2d4f50726c6cd89b02ecec0e7", "sha256": "6bcd35f70f26860f19355e6b6e2151d74be7b2651ac97e02812e0877e46829ab"}, "downloads": -1, "filename": "pyahocorasick-1.1.2.tar.gz", "has_sig": false, "md5_digest": "331d93a2d4f50726c6cd89b02ecec0e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32705, "upload_time": "2016-08-06T17:47:17", "upload_time_iso_8601": "2016-08-06T17:47:17.255132Z", "url": "https://files.pythonhosted.org/packages/76/6c/57cbf0c8638d29f5cef4d6670998c82fe5ece1e8095ede167e265b4a4625/pyahocorasick-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "e4f33d9527c60bb7fb4e6f8f5179b1aa", "sha256": "381735c3600d7458d26e865f9ac56697becc3559d867f6c29d35869fdcdb5deb"}, "downloads": -1, "filename": "pyahocorasick-1.1.3.tar.bz2", "has_sig": false, "md5_digest": "e4f33d9527c60bb7fb4e6f8f5179b1aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31060, "upload_time": "2016-08-08T07:23:37", "upload_time_iso_8601": "2016-08-08T07:23:37.839627Z", "url": "https://files.pythonhosted.org/packages/a5/a7/3ebb3e3ee262ebf45fcabc5796e81eb5589d3358e63042205a47cb5eeede/pyahocorasick-1.1.3.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "870fe772c0457300ea13bcb641b2cc8a", "sha256": "fe1a98f9ab41f9d6159721744f1329fcbe5a3e122ea40ffa2bafa6f0b0721276"}, "downloads": -1, "filename": "pyahocorasick-1.1.3.tar.gz", "has_sig": false, "md5_digest": "870fe772c0457300ea13bcb641b2cc8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45129, "upload_time": "2016-08-08T07:23:40", "upload_time_iso_8601": "2016-08-08T07:23:40.430332Z", "url": "https://files.pythonhosted.org/packages/a1/77/be4acc07e59942ed35de6bff4e17ee898e9acb7e36ef122a421df8ebf2c9/pyahocorasick-1.1.3.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f4bd282866f9dcc782d2ac8ec35e2c9", "sha256": "a94e00d609b9ea9221daff9f6a4fdb01d8dea325d4429ae83c9fb0f343af0596"}, "downloads": -1, "filename": "pyahocorasick-1.1.3.zip", "has_sig": false, "md5_digest": "6f4bd282866f9dcc782d2ac8ec35e2c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56686, "upload_time": "2016-08-08T07:23:43", "upload_time_iso_8601": "2016-08-08T07:23:43.141357Z", "url": "https://files.pythonhosted.org/packages/97/70/4b9c634752c7255ccd849aeb4d3c02f3b17cefde20704096ac19573055d0/pyahocorasick-1.1.3.zip", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "ad445b6648dc06e9040705ce1ccb4384", "sha256": "16d7ad7ba79d89c1f7d896cc0ef68dddca0b4e341e7a75251ff2f6a5e51d2d1f"}, "downloads": -1, "filename": "pyahocorasick-1.1.4.tar.bz2", "has_sig": false, "md5_digest": "ad445b6648dc06e9040705ce1ccb4384", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31040, "upload_time": "2016-08-08T07:56:45", "upload_time_iso_8601": "2016-08-08T07:56:45.401052Z", "url": "https://files.pythonhosted.org/packages/1e/75/8005d086cac4cc41d3b320d338972c5e5c6a21f88472f21ac9d0e031d300/pyahocorasick-1.1.4.tar.bz2", "yanked": false}, {"comment_text": "", "digests": {"md5": "850eed8264eef383b2671bbc95c2692c", "sha256": "655d9a137d386fb9220a4fd3eccaf2d1431070e82f9844de0703d0ead0886905"}, "downloads": -1, "filename": "pyahocorasick-1.1.4.tar.gz", "has_sig": false, "md5_digest": "850eed8264eef383b2671bbc95c2692c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45091, "upload_time": "2016-08-08T07:56:48", "upload_time_iso_8601": "2016-08-08T07:56:48.531960Z", "url": "https://files.pythonhosted.org/packages/c2/e3/a57a410a867d20fe869354f82896f4874614ecd2b63bfee14b5ab7f3c9fb/pyahocorasick-1.1.4.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3c254e511d468be4b2fda032accc5f6", "sha256": "a9c0d01ea485493ee5a3885b7a56ce4f3132ce07fd25f299d4065ece851d3690"}, "downloads": -1, "filename": "pyahocorasick-1.1.4.zip", "has_sig": false, "md5_digest": "c3c254e511d468be4b2fda032accc5f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56642, "upload_time": "2016-08-08T07:56:51", "upload_time_iso_8601": "2016-08-08T07:56:51.665201Z", "url": "https://files.pythonhosted.org/packages/af/7a/5e27f583f733f737192831ec4fb430c0b3d1cca882e7c8bb0c636a155b3e/pyahocorasick-1.1.4.zip", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "9068078941d62508fc5dd494616be91a", "sha256": "43a44d73e74b739a3f765e182009396c1be1e5cbfbb439aaac9e86020f1985cc"}, "downloads": -1, "filename": "pyahocorasick-1.1.5.tar.gz", "has_sig": false, "md5_digest": "9068078941d62508fc5dd494616be91a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48062, "upload_time": "2017-11-22T12:55:29", "upload_time_iso_8601": "2017-11-22T12:55:29.874822Z", "url": "https://files.pythonhosted.org/packages/cf/f8/4689f23b4ecc021ebe17cc9e6f3ff9d30e00edc325a13f07078e57779383/pyahocorasick-1.1.5.tar.gz", "yanked": false}], "1.1.6": [{"comment_text": "", "digests": {"md5": "152985bf49c16ba26667f1471d232276", "sha256": "6bb71feccd515584edfb6923cd9e5c143da11cf0f7ffbc3c7d3eb2912cbd2026"}, "downloads": -1, "filename": "pyahocorasick-1.1.6.tar.gz", "has_sig": false, "md5_digest": "152985bf49c16ba26667f1471d232276", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69833, "upload_time": "2017-11-27T17:40:24", "upload_time_iso_8601": "2017-11-27T17:40:24.235130Z", "url": "https://files.pythonhosted.org/packages/ba/cb/6fbc85fb088658e0dcbe002a09bfa361fec0bb69c72c1f42fe0368adfc99/pyahocorasick-1.1.6.tar.gz", "yanked": false}], "1.1.7": [{"comment_text": "", "digests": {"md5": "80e714131b69e6990cb7e33a576f3307", "sha256": "4eac78a6c94329d4d58ce888689b86469f4c8ab80be699c7ba53f3184b41280a"}, "downloads": -1, "filename": "pyahocorasick-1.1.7.tar.gz", "has_sig": false, "md5_digest": "80e714131b69e6990cb7e33a576f3307", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72553, "upload_time": "2018-02-23T18:02:12", "upload_time_iso_8601": "2018-02-23T18:02:12.210077Z", "url": "https://files.pythonhosted.org/packages/3a/53/5b81165577c0b7792a487cba55ad4eaab5d48b6defa59f964a5e6d1afb20/pyahocorasick-1.1.7.tar.gz", "yanked": false}], "1.1.7.dev1": [{"comment_text": "", "digests": {"md5": "f6efe78b463abfc886400f862a3b955f", "sha256": "09ecfe76f81d34f7cfbcb6144cadc3d422345610ff369680792de9b3593ab139"}, "downloads": -1, "filename": "pyahocorasick-1.1.7.dev1.tar.gz", "has_sig": false, "md5_digest": "f6efe78b463abfc886400f862a3b955f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72533, "upload_time": "2018-02-23T16:52:38", "upload_time_iso_8601": "2018-02-23T16:52:38.618756Z", "url": "https://files.pythonhosted.org/packages/83/22/f73d0be4fac0d415f5bbc0cc35c88d319cabf40c822eb0360d35ddc044cd/pyahocorasick-1.1.7.dev1.tar.gz", "yanked": false}], "1.1.8": [{"comment_text": "", "digests": {"md5": "fe2fecdf3250134635a29cccd2836cf8", "sha256": "3d584e7836ca7b066f99d7fdb384dc6ef7af211b2b139baedbd960c7c279bb7f"}, "downloads": -1, "filename": "pyahocorasick-1.1.8.tar.gz", "has_sig": false, "md5_digest": "fe2fecdf3250134635a29cccd2836cf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74050, "upload_time": "2018-04-25T18:19:31", "upload_time_iso_8601": "2018-04-25T18:19:31.431051Z", "url": "https://files.pythonhosted.org/packages/1e/ae/1aafea16da273f9e6f9abf334389e422c868844a2d90a24a4ded2742418b/pyahocorasick-1.1.8.tar.gz", "yanked": false}], "1.1.9": [{"comment_text": "", "digests": {"md5": "91817cb9cb7fd0d0f9a7ea9773ea662e", "sha256": "1d78af46093374d9795b4a310b6a9e4789eca21d74ab42fba9dc3ccbe4f066c8"}, "downloads": -1, "filename": "pyahocorasick-1.1.9.tar.gz", "has_sig": false, "md5_digest": "91817cb9cb7fd0d0f9a7ea9773ea662e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74166, "upload_time": "2018-10-25T14:18:44", "upload_time_iso_8601": "2018-10-25T14:18:44.470734Z", "url": "https://files.pythonhosted.org/packages/57/fe/7e37f339d58cf5ce84e8299e571fc1c127a7bd8a0be0603ef871fe996c9b/pyahocorasick-1.1.9.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "45b89af9ea1e16c22c837c23e1f5d3e3", "sha256": "819749c0f99dda5fd45f43ce588ee32109aec3006aad01a3698148603c3ad0ee"}, "downloads": -1, "filename": "pyahocorasick-1.3.0.tar.gz", "has_sig": false, "md5_digest": "45b89af9ea1e16c22c837c23e1f5d3e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92760, "upload_time": "2018-12-20T19:06:01", "upload_time_iso_8601": "2018-12-20T19:06:01.632834Z", "url": "https://files.pythonhosted.org/packages/30/bc/0cea34295e98437b14db3bf4628ed6bc9c0968dca3a001d13866c6b91cc8/pyahocorasick-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "7ce7a990146bae2095e7e5afd59d1d71", "sha256": "f9431a20e47e893cadd29f367825e882dbc6fc324a3c24c41e3ff9648e5d04b2"}, "downloads": -1, "filename": "pyahocorasick-1.4.0.tar.gz", "has_sig": false, "md5_digest": "7ce7a990146bae2095e7e5afd59d1d71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 312138, "upload_time": "2019-01-14T16:20:13", "upload_time_iso_8601": "2019-01-14T16:20:13.609344Z", "url": "https://files.pythonhosted.org/packages/f4/9f/f0d8e8850e12829eea2e778f1c90e3c53a9a799b7f412082a5d21cd19ae1/pyahocorasick-1.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7ce7a990146bae2095e7e5afd59d1d71", "sha256": "f9431a20e47e893cadd29f367825e882dbc6fc324a3c24c41e3ff9648e5d04b2"}, "downloads": -1, "filename": "pyahocorasick-1.4.0.tar.gz", "has_sig": false, "md5_digest": "7ce7a990146bae2095e7e5afd59d1d71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 312138, "upload_time": "2019-01-14T16:20:13", "upload_time_iso_8601": "2019-01-14T16:20:13.609344Z", "url": "https://files.pythonhosted.org/packages/f4/9f/f0d8e8850e12829eea2e778f1c90e3c53a9a799b7f412082a5d21cd19ae1/pyahocorasick-1.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:57 2020"}