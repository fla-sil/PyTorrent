{"info": {"author": "azwane", "author_email": "debianbyte@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pimux\n\n[![Build Status](http://img.shields.io/travis/badges/badgerbadgerbadger.svg?style=flat-square)](https://github.com/azwyane/pymux.git)\n\n> PIMUX is here, made with :heart:\n\n## What is pimux?\n> pimux is a python module created by me, to access the termux-api(hardware\n> and software api). To ease the access of these beautiful api's which \n> can be really useful for IOT projects deploying using your own android phone.\n\n## Why to use pimux?\n> For every pythonist and enthusiast pimux can really ease hardware and software\n> access through termux-api.\n\n## Special thanks \n I would like to thank every developer before me who made this beautiful\n language(python),termux-api, termux, os(linux), and all others, on whose\n contributions I have been able to make this.\n\n> This project is originally located at [pimux](https://github.com/azwyane/pimux)\n\n## Table of Contents\n- [Requirements](#Requirements)\n- [Installation](#Installation)\n- [Features](#Features)\n- [Contributing](#Contributing)\n\n## Requirements\n\n- Termux app\n- Termux-api (both app and package)\n- Python\n\n## Installation\n\n\ud83d\ude80&nbsp; To install in your local machine follow the steps below:\n\n### Method-1\n\nYou can always get the latest version of pimux maintained here in the github.\n> To get the latest feature:\n- Clone this repo to your local machine(termux) using `https://github.com/azwyane/pimux.git`\n\nGoto to your terminal and type:\n\n```sh\ngit clone https://github.com/azwyane/pimux.git\n```\n\nNow add this to site packages by first building by being where the setup.py is:\n```\n$ python3 setup.py sdist bdist_wheel\n\n$ python3 -m pip install -e <path to pimux main dir>\n```\n\nFinally, you have it installed.\n\n### Method-2\n\n**Install by pip**\n> The stable version is available in the Pypi, which you can download by:\n\n```\n$ python3 -m pip install pimux\n```\n\n## Run the project\n\n> Now to run the pimux type in your terminal:\n\n```bash\n$ python\n>>> from pimux import function\n\n>>>help(function)\nCLASSES\n    builtins.object\n        camera\n        clipboard\n        misc\n        tts\n        volume\n        wifi\n\n    class camera(builtins.object)\n     |  The class camera is for fetching\n     |  camera info or taking picture with the\n     |  camera on the android.\n     |\n     |  Methods defined here:\n     |\n     |  __init__(self)\n     |      Initialize self.  See help(type(self)) for accurate signature.\n     |\n     |  camera(self)\n     |      This method returns camera info\n     |      of the android device.It takes no argument.\n     |\n     |  takephoto(self, cid=0, saveas='newimg.jpeg')\n     |      This method is for taking picture from the\n     |      available camera on the device.\n     |      It takes two argument:\n     |      cid : camera id in int default(0)\n     |      saveas: output file name in str format default(\"newimg.jpeg\")\n     |\n     |  ----------------------------------------------------------------------\n     |  Data descriptors defined here:\n\n```\n\n```bash\n>>> v=function.misc()\n\n>>>help(v)\nclass misc(builtins.object)\n |  The class misc has miscellaneous methods\n |  of termuxa-pi available.\n |  Available methods are :\n |  battery,\n |  brightness,\n |  vibrate,\n |  contactlist,\n |  torch,\n |  downloadFile\n |\n |  Methods defined here:\n |\n |  __init__(self)\n |      Initialize self.  See help(type(self)) for accurate signature.\n |\n |  battery(self)\n |      This method return battery status info.\n |\n |  brightness(self, Brightness)\n |      Set the brightness of your device.\n\n>>>v.vibrate()    This command vibrates your device if not in silent.\n'Done'\n\n>>>v.brightness(Brightness=100) This command sets the brightness to 100.\n'Done'\n```\n**Also**\n\n```bash\n$ python\n>>>from pimux import Sensors\n\n >>>help(Sensors)\n CLASSES\n    builtins.object\n        sensor\n\n    class sensor(builtins.object)\n     |  This is a class that lets to view\n     |  sensor data directly from your android device.\n     |\n     |  Methods defined here:\n     |\n     |  __init__(self)\n     |      Initialize self.  See help(type(self)) for accurate signature.\n     |\n     |  allsensors(self)\n     |      Method to print sensor data all at once.\n     |      WARNING: Can cause over load to the device.\n     |\n     |  cleanup(self)\n      Performs cleanup releasing sensor resources.\n     |\n     |  delay(self, sensorname='', delayvalue=3000)\n     |      Method to delay time in milliseconds\n     |      on receiving every new sensor update.\n     |      Arguments:\n     |      sensorname=\"\"\n     |      delayvalue=3000(default)(delayed by 3 sec)\n     |\n     |  listSensor(self)\n     |      lists available sensors on the device.\n```\n\n```bash\n>>> s=Sensors.sensor()\n>>>help(s)\nclass sensor(builtins.object)\n |  This is a class that lets to view\n |  sensor data directly from your android device.\n |\n |  Methods defined here:\n |\n |  __init__(self)\n |      Initialize self.  See help(type(self)) for accurate signature.\n |\n |  allsensors(self)\n |      Method to print sensor data all at once.\n |      WARNING: Can cause over load to the device.\n |\n |  cleanup(self)\n |      Performs cleanup releasing sensor resources.\n |\n |  delay(self, sensorname='', delayvalue=3000)\n |      Method to delay time in milliseconds\n |      on receiving every new sensor update.\n |      Arguments:\n |      sensorname=\"\"\n\n\n>>>s.listSensor()\n'{  \"sensors\": [ ........]}'\n```\n\n## Features\n\n> It is a side project of making use of android sensors and IOT projects. \n> It has the feature of termux-api which can be easily used with\n> python projects.\n\n---\n\n## Contributing\n\n### Step 1\n\n- Option 1\n    - \ud83c\udf74 Fork this repo!\n\n- Option 2\n    - \ud83d\udc6f Clone this repo to your local machine using `https://github.com/azwyane/pimux.git`\n\n### Step 2\n\n- HACK AWAY!\n\n### Step 3\n\n- \ud83d\udd03 Create a new pull request using <a href=\"https://github.com/azwyane/pymux/compare\" target=\"_blank\">`https://github.com/azwyane/pimux/compare`</a>.\n\n\n---\n\n###  Found a bug? Missing a specific feature?\n\nFeel free to **file a new issue** with a respective title and description on the the [azwyane/pimux](https://github.com/azwyane/pymux/issues) repository. If you already found a solution to your problem, **I would love to review your pull request**!\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/azwyane/pymux.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pimux", "package_url": "https://pypi.org/project/pimux/", "platform": "", "project_url": "https://pypi.org/project/pimux/", "project_urls": {"Homepage": "https://github.com/azwyane/pymux.git"}, "release_url": "https://pypi.org/project/pimux/2.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A package for accessing termux-api", "version": "2.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pimux</h1>\n<p><a href=\"https://github.com/azwyane/pymux.git\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f1c2f1819ce99b9eacc039d807ab1fc23b187810/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f6261646765732f6261646765726261646765726261646765722e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<blockquote>\n<p>PIMUX is here, made with :heart:</p>\n</blockquote>\n<h2>What is pimux?</h2>\n<blockquote>\n<p>pimux is a python module created by me, to access the termux-api(hardware\nand software api). To ease the access of these beautiful api's which\ncan be really useful for IOT projects deploying using your own android phone.</p>\n</blockquote>\n<h2>Why to use pimux?</h2>\n<blockquote>\n<p>For every pythonist and enthusiast pimux can really ease hardware and software\naccess through termux-api.</p>\n</blockquote>\n<h2>Special thanks</h2>\n<p>I would like to thank every developer before me who made this beautiful\nlanguage(python),termux-api, termux, os(linux), and all others, on whose\ncontributions I have been able to make this.</p>\n<blockquote>\n<p>This project is originally located at <a href=\"https://github.com/azwyane/pimux\" rel=\"nofollow\">pimux</a></p>\n</blockquote>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#Requirements\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#Installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#Features\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#Contributing\" rel=\"nofollow\">Contributing</a></li>\n</ul>\n<h2>Requirements</h2>\n<ul>\n<li>Termux app</li>\n<li>Termux-api (both app and package)</li>\n<li>Python</li>\n</ul>\n<h2>Installation</h2>\n<p>\ud83d\ude80\u00a0 To install in your local machine follow the steps below:</p>\n<h3>Method-1</h3>\n<p>You can always get the latest version of pimux maintained here in the github.</p>\n<blockquote>\n<p>To get the latest feature:</p>\n</blockquote>\n<ul>\n<li>Clone this repo to your local machine(termux) using <code>https://github.com/azwyane/pimux.git</code></li>\n</ul>\n<p>Goto to your terminal and type:</p>\n<pre>git clone https://github.com/azwyane/pimux.git\n</pre>\n<p>Now add this to site packages by first building by being where the setup.py is:</p>\n<pre><code>$ python3 setup.py sdist bdist_wheel\n\n$ python3 -m pip install -e &lt;path to pimux main dir&gt;\n</code></pre>\n<p>Finally, you have it installed.</p>\n<h3>Method-2</h3>\n<p><strong>Install by pip</strong></p>\n<blockquote>\n<p>The stable version is available in the Pypi, which you can download by:</p>\n</blockquote>\n<pre><code>$ python3 -m pip install pimux\n</code></pre>\n<h2>Run the project</h2>\n<blockquote>\n<p>Now to run the pimux type in your terminal:</p>\n</blockquote>\n<pre>$ python\n&gt;&gt;&gt; from pimux import <span class=\"k\">function</span>\n\n&gt;&gt;&gt;help<span class=\"o\">(</span><span class=\"k\">function</span><span class=\"o\">)</span>\nCLASSES\n    builtins.object\n        camera\n        clipboard\n        misc\n        tts\n        volume\n        wifi\n\n    class camera<span class=\"o\">(</span>builtins.object<span class=\"o\">)</span>\n     <span class=\"p\">|</span>  The class camera is <span class=\"k\">for</span> fetching\n     <span class=\"p\">|</span>  camera info or taking picture with the\n     <span class=\"p\">|</span>  camera on the android.\n     <span class=\"p\">|</span>\n     <span class=\"p\">|</span>  Methods defined here:\n     <span class=\"p\">|</span>\n     <span class=\"p\">|</span>  __init__<span class=\"o\">(</span>self<span class=\"o\">)</span>\n     <span class=\"p\">|</span>      Initialize self.  See help<span class=\"o\">(</span>type<span class=\"o\">(</span>self<span class=\"o\">))</span> <span class=\"k\">for</span> accurate signature.\n     <span class=\"p\">|</span>\n     <span class=\"p\">|</span>  camera<span class=\"o\">(</span>self<span class=\"o\">)</span>\n     <span class=\"p\">|</span>      This method returns camera info\n     <span class=\"p\">|</span>      of the android device.It takes no argument.\n     <span class=\"p\">|</span>\n     <span class=\"p\">|</span>  takephoto<span class=\"o\">(</span>self, <span class=\"nv\">cid</span><span class=\"o\">=</span><span class=\"m\">0</span>, <span class=\"nv\">saveas</span><span class=\"o\">=</span><span class=\"s1\">'newimg.jpeg'</span><span class=\"o\">)</span>\n     <span class=\"p\">|</span>      This method is <span class=\"k\">for</span> taking picture from the\n     <span class=\"p\">|</span>      available camera on the device.\n     <span class=\"p\">|</span>      It takes two argument:\n     <span class=\"p\">|</span>      cid : camera id in int default<span class=\"o\">(</span><span class=\"m\">0</span><span class=\"o\">)</span>\n     <span class=\"p\">|</span>      saveas: output file name in str format default<span class=\"o\">(</span><span class=\"s2\">\"newimg.jpeg\"</span><span class=\"o\">)</span>\n     <span class=\"p\">|</span>\n     <span class=\"p\">|</span>  ----------------------------------------------------------------------\n     <span class=\"p\">|</span>  Data descriptors defined here:\n</pre>\n<pre>&gt;&gt;&gt; <span class=\"nv\">v</span><span class=\"o\">=</span><span class=\"k\">function</span>.misc<span class=\"o\">()</span>\n\n&gt;&gt;&gt;help<span class=\"o\">(</span>v<span class=\"o\">)</span>\nclass misc<span class=\"o\">(</span>builtins.object<span class=\"o\">)</span>\n <span class=\"p\">|</span>  The class misc has miscellaneous methods\n <span class=\"p\">|</span>  of termuxa-pi available.\n <span class=\"p\">|</span>  Available methods are :\n <span class=\"p\">|</span>  battery,\n <span class=\"p\">|</span>  brightness,\n <span class=\"p\">|</span>  vibrate,\n <span class=\"p\">|</span>  contactlist,\n <span class=\"p\">|</span>  torch,\n <span class=\"p\">|</span>  downloadFile\n <span class=\"p\">|</span>\n <span class=\"p\">|</span>  Methods defined here:\n <span class=\"p\">|</span>\n <span class=\"p\">|</span>  __init__<span class=\"o\">(</span>self<span class=\"o\">)</span>\n <span class=\"p\">|</span>      Initialize self.  See help<span class=\"o\">(</span>type<span class=\"o\">(</span>self<span class=\"o\">))</span> <span class=\"k\">for</span> accurate signature.\n <span class=\"p\">|</span>\n <span class=\"p\">|</span>  battery<span class=\"o\">(</span>self<span class=\"o\">)</span>\n <span class=\"p\">|</span>      This method <span class=\"k\">return</span> battery status info.\n <span class=\"p\">|</span>\n <span class=\"p\">|</span>  brightness<span class=\"o\">(</span>self, Brightness<span class=\"o\">)</span>\n <span class=\"p\">|</span>      Set the brightness of your device.\n\n&gt;&gt;&gt;v.vibrate<span class=\"o\">()</span>    This <span class=\"nb\">command</span> vibrates your device <span class=\"k\">if</span> not in silent.\n<span class=\"s1\">'Done'</span>\n\n&gt;&gt;&gt;v.brightness<span class=\"o\">(</span><span class=\"nv\">Brightness</span><span class=\"o\">=</span><span class=\"m\">100</span><span class=\"o\">)</span> This <span class=\"nb\">command</span> sets the brightness to <span class=\"m\">100</span>.\n<span class=\"s1\">'Done'</span>\n</pre>\n<p><strong>Also</strong></p>\n<pre>$ python\n&gt;&gt;&gt;from pimux import Sensors\n\n &gt;&gt;&gt;help<span class=\"o\">(</span>Sensors<span class=\"o\">)</span>\n CLASSES\n    builtins.object\n        sensor\n\n    class sensor<span class=\"o\">(</span>builtins.object<span class=\"o\">)</span>\n     <span class=\"p\">|</span>  This is a class that lets to view\n     <span class=\"p\">|</span>  sensor data directly from your android device.\n     <span class=\"p\">|</span>\n     <span class=\"p\">|</span>  Methods defined here:\n     <span class=\"p\">|</span>\n     <span class=\"p\">|</span>  __init__<span class=\"o\">(</span>self<span class=\"o\">)</span>\n     <span class=\"p\">|</span>      Initialize self.  See help<span class=\"o\">(</span>type<span class=\"o\">(</span>self<span class=\"o\">))</span> <span class=\"k\">for</span> accurate signature.\n     <span class=\"p\">|</span>\n     <span class=\"p\">|</span>  allsensors<span class=\"o\">(</span>self<span class=\"o\">)</span>\n     <span class=\"p\">|</span>      Method to print sensor data all at once.\n     <span class=\"p\">|</span>      WARNING: Can cause over load to the device.\n     <span class=\"p\">|</span>\n     <span class=\"p\">|</span>  cleanup<span class=\"o\">(</span>self<span class=\"o\">)</span>\n      Performs cleanup releasing sensor resources.\n     <span class=\"p\">|</span>\n     <span class=\"p\">|</span>  delay<span class=\"o\">(</span>self, <span class=\"nv\">sensorname</span><span class=\"o\">=</span><span class=\"s1\">''</span>, <span class=\"nv\">delayvalue</span><span class=\"o\">=</span><span class=\"m\">3000</span><span class=\"o\">)</span>\n     <span class=\"p\">|</span>      Method to delay <span class=\"nb\">time</span> in milliseconds\n     <span class=\"p\">|</span>      on receiving every new sensor update.\n     <span class=\"p\">|</span>      Arguments:\n     <span class=\"p\">|</span>      <span class=\"nv\">sensorname</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n     <span class=\"p\">|</span>      <span class=\"nv\">delayvalue</span><span class=\"o\">=</span><span class=\"m\">3000</span><span class=\"o\">(</span>default<span class=\"o\">)(</span>delayed by <span class=\"m\">3</span> sec<span class=\"o\">)</span>\n     <span class=\"p\">|</span>\n     <span class=\"p\">|</span>  listSensor<span class=\"o\">(</span>self<span class=\"o\">)</span>\n     <span class=\"p\">|</span>      lists available sensors on the device.\n</pre>\n<pre>&gt;&gt;&gt; <span class=\"nv\">s</span><span class=\"o\">=</span>Sensors.sensor<span class=\"o\">()</span>\n&gt;&gt;&gt;help<span class=\"o\">(</span>s<span class=\"o\">)</span>\nclass sensor<span class=\"o\">(</span>builtins.object<span class=\"o\">)</span>\n <span class=\"p\">|</span>  This is a class that lets to view\n <span class=\"p\">|</span>  sensor data directly from your android device.\n <span class=\"p\">|</span>\n <span class=\"p\">|</span>  Methods defined here:\n <span class=\"p\">|</span>\n <span class=\"p\">|</span>  __init__<span class=\"o\">(</span>self<span class=\"o\">)</span>\n <span class=\"p\">|</span>      Initialize self.  See help<span class=\"o\">(</span>type<span class=\"o\">(</span>self<span class=\"o\">))</span> <span class=\"k\">for</span> accurate signature.\n <span class=\"p\">|</span>\n <span class=\"p\">|</span>  allsensors<span class=\"o\">(</span>self<span class=\"o\">)</span>\n <span class=\"p\">|</span>      Method to print sensor data all at once.\n <span class=\"p\">|</span>      WARNING: Can cause over load to the device.\n <span class=\"p\">|</span>\n <span class=\"p\">|</span>  cleanup<span class=\"o\">(</span>self<span class=\"o\">)</span>\n <span class=\"p\">|</span>      Performs cleanup releasing sensor resources.\n <span class=\"p\">|</span>\n <span class=\"p\">|</span>  delay<span class=\"o\">(</span>self, <span class=\"nv\">sensorname</span><span class=\"o\">=</span><span class=\"s1\">''</span>, <span class=\"nv\">delayvalue</span><span class=\"o\">=</span><span class=\"m\">3000</span><span class=\"o\">)</span>\n <span class=\"p\">|</span>      Method to delay <span class=\"nb\">time</span> in milliseconds\n <span class=\"p\">|</span>      on receiving every new sensor update.\n <span class=\"p\">|</span>      Arguments:\n <span class=\"p\">|</span>      <span class=\"nv\">sensorname</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span>\n\n\n&gt;&gt;&gt;s.listSensor<span class=\"o\">()</span>\n<span class=\"s1\">'{  \"sensors\": [ ........]}'</span>\n</pre>\n<h2>Features</h2>\n<blockquote>\n<p>It is a side project of making use of android sensors and IOT projects.\nIt has the feature of termux-api which can be easily used with\npython projects.</p>\n</blockquote>\n<hr>\n<h2>Contributing</h2>\n<h3>Step 1</h3>\n<ul>\n<li>\n<p>Option 1</p>\n<ul>\n<li>\ud83c\udf74 Fork this repo!</li>\n</ul>\n</li>\n<li>\n<p>Option 2</p>\n<ul>\n<li>\ud83d\udc6f Clone this repo to your local machine using <code>https://github.com/azwyane/pimux.git</code></li>\n</ul>\n</li>\n</ul>\n<h3>Step 2</h3>\n<ul>\n<li>HACK AWAY!</li>\n</ul>\n<h3>Step 3</h3>\n<ul>\n<li>\ud83d\udd03 Create a new pull request using <a href=\"https://github.com/azwyane/pymux/compare\" rel=\"nofollow\"><code>https://github.com/azwyane/pimux/compare</code></a>.</li>\n</ul>\n<hr>\n<h3>Found a bug? Missing a specific feature?</h3>\n<p>Feel free to <strong>file a new issue</strong> with a respective title and description on the the <a href=\"https://github.com/azwyane/pymux/issues\" rel=\"nofollow\">azwyane/pimux</a> repository. If you already found a solution to your problem, <strong>I would love to review your pull request</strong>!</p>\n\n          </div>"}, "last_serial": 7156424, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "4bc2f7f7ec3f0d8928a3e727d7d1c9c2", "sha256": "678c9caabeaa6c46904d53b1b95ea9544c9a25b494b3c7044fb98884bccc3ced"}, "downloads": -1, "filename": "pimux-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4bc2f7f7ec3f0d8928a3e727d7d1c9c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6833, "upload_time": "2020-05-01T16:35:44", "upload_time_iso_8601": "2020-05-01T16:35:44.709788Z", "url": "https://files.pythonhosted.org/packages/37/c5/ec5d69ca821edddb4e0310908de4be5acb204b49fb3deb75c0f98cf146cc/pimux-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31f269c7b8c19c48addce7e56b5451be", "sha256": "56310bf703613d1e9976c24889337e5eba325959ca5f06f0b6ffa1b58ab58dea"}, "downloads": -1, "filename": "pimux-2.0.0.tar.gz", "has_sig": false, "md5_digest": "31f269c7b8c19c48addce7e56b5451be", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5624, "upload_time": "2020-05-01T16:35:47", "upload_time_iso_8601": "2020-05-01T16:35:47.948258Z", "url": "https://files.pythonhosted.org/packages/5d/d6/2bcce98a88d6bf2dcbd2a48de7eb67cec5fa4a7da3cf0ede380ec6ecc778/pimux-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "531c1a736c9638faa5cdd734b9e8bea3", "sha256": "2ad974037f5e8ad7eae3cc48831bda2f9d94b9b15dae4474f16eb4dce2090af8"}, "downloads": -1, "filename": "pimux-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "531c1a736c9638faa5cdd734b9e8bea3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7930, "upload_time": "2020-05-02T14:58:21", "upload_time_iso_8601": "2020-05-02T14:58:21.952804Z", "url": "https://files.pythonhosted.org/packages/ad/98/a18dd2df67e8bee731c85739354f0c57da9ee91c042164bc6f3590d4ac8c/pimux-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e0120a6e505dd359da234c7e009d973", "sha256": "d3f59d7ee994f3ba7a13cc01c4f4b2d2b084ec623a5a3f8b13bddb0c1f58480b"}, "downloads": -1, "filename": "pimux-2.0.1.tar.gz", "has_sig": false, "md5_digest": "0e0120a6e505dd359da234c7e009d973", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7731, "upload_time": "2020-05-02T14:58:23", "upload_time_iso_8601": "2020-05-02T14:58:23.837198Z", "url": "https://files.pythonhosted.org/packages/6d/10/ce23084eac89f306d5596a6ac1d6108bca6fd7a77763394c7ef74da4153d/pimux-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "06d46ab0254eefcc738cdee16b5238f9", "sha256": "96f5d69d43000bb39f37adf716295019d5606487e4bce838d9b6dadcf733c8f6"}, "downloads": -1, "filename": "pimux-2.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "06d46ab0254eefcc738cdee16b5238f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8081, "upload_time": "2020-05-03T11:52:28", "upload_time_iso_8601": "2020-05-03T11:52:28.843216Z", "url": "https://files.pythonhosted.org/packages/6d/4d/d41e92e33dd3d958ef980a61591f8a46d73931e3f3cd91370068a953995a/pimux-2.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fea41dd95557760578bd786ad516c234", "sha256": "44709d5f82a36cd2b0bf7782d894abf678a62460d3a9bfdf0a0e2e055fbb5217"}, "downloads": -1, "filename": "pimux-2.0.2.tar.gz", "has_sig": false, "md5_digest": "fea41dd95557760578bd786ad516c234", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7880, "upload_time": "2020-05-03T11:52:30", "upload_time_iso_8601": "2020-05-03T11:52:30.819333Z", "url": "https://files.pythonhosted.org/packages/75/36/16e1ee4d5ee45703c57a1ee701593b5378145d688ddedaf97ca9a97fa463/pimux-2.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "06d46ab0254eefcc738cdee16b5238f9", "sha256": "96f5d69d43000bb39f37adf716295019d5606487e4bce838d9b6dadcf733c8f6"}, "downloads": -1, "filename": "pimux-2.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "06d46ab0254eefcc738cdee16b5238f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8081, "upload_time": "2020-05-03T11:52:28", "upload_time_iso_8601": "2020-05-03T11:52:28.843216Z", "url": "https://files.pythonhosted.org/packages/6d/4d/d41e92e33dd3d958ef980a61591f8a46d73931e3f3cd91370068a953995a/pimux-2.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fea41dd95557760578bd786ad516c234", "sha256": "44709d5f82a36cd2b0bf7782d894abf678a62460d3a9bfdf0a0e2e055fbb5217"}, "downloads": -1, "filename": "pimux-2.0.2.tar.gz", "has_sig": false, "md5_digest": "fea41dd95557760578bd786ad516c234", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7880, "upload_time": "2020-05-03T11:52:30", "upload_time_iso_8601": "2020-05-03T11:52:30.819333Z", "url": "https://files.pythonhosted.org/packages/75/36/16e1ee4d5ee45703c57a1ee701593b5378145d688ddedaf97ca9a97fa463/pimux-2.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:37 2020"}