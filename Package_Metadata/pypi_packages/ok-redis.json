{"info": {"author": "Mitchel Cabuloy (mixxorz)", "author_email": "mixxorz@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Database", "Topic :: Utilities"], "description": "ok |latest-version|\n==============================\n\n|build-status| |python-support| |downloads| |license|\n\nObject-Key Mapper for Redis\n\nIf you\u2019ve used redis on python, you\u2019ve had to deal with redis keys.\nSometimes, *lots* of redis keys. With so many keys, it\u2019s easy to make\nmistakes, especially since keys are just strings. I built ``ok`` so that\nI didn\u2019t have to work with strings for redis keys.\n\nHere\u2019s how you use it:\n\n.. code:: python\n\n    import ok\n    import redis\n\n\n    class User(ok.Key):\n        fields = ['timeline', 'followers', 'following']\n\n\n    # Get user mixxorz' timeline\n    r = redis.StrictRedis()\n    r.zrevrange(User('mixxorz').timeline, 0, 50)\n    # ZREVRANGE User:mixxorz:timeline 0 50\n\nManaging your keys just became a lot less fragile.\n\nInstallation\n------------\n\nInstall it from pypi\n\n::\n\n    $ pip install ok-redis\n\nUsage\n-----\n\nAccess fields.\n\n.. code:: python\n\n    class User(ok.Key):\n        fields = ['timeline', 'followers', 'following']\n\n\n    print(User('mixxorz').timeline)\n    # User:mixxorz:timeline\n\nChain keys.\n\n.. code:: python\n\n    class City(ok.Key):\n        fields = ['tweets_hll']\n\n\n    class Country(ok.Key):\n        subkeys = [City]\n\n\n    print(Country('PH').City('Manila').tweets_hll)\n    # Country:PH:City:Manila:tweets\n\nSubkeys can be an absolute or relative path to a key.\n\n.. code:: python\n\n    # mod_one.py\n    class Refer(Key):\n        fields = ['elements']\n\n\n    # mod_two.py\n    class Parent(Key):\n        subkeys = ['..mod_one.Refer']\n\n\n    print(Parent('foo').Refer('bar').elements)\n    # Parent:foo:Refer:bar:elements\n\nThe string representation of a `Key` instance is the key, so you can use it like\nthis:\n\n.. code:: python\n\n    class User(ok.Key):\n        pass\n\n\n    r.get(User('mixxorz'))\n\nBut you can also access the key explicitly.\n\n.. code:: python\n\n    User('mixxorz').key\n    # >>> User:mixxorz\n\nIDs are optional.\n\n.. code:: python\n\n    class User(ok.Key):\n        fields = ['rankings']\n\n\n    print(User().rankings)\n    # User:rankings\n\nIDs don't have to be strings\n\n.. code:: python\n\n    class User(ok.Key)\n        pass\n\n    print(User(123))\n    # User:123\n\nYou can change the string used for the key.\n\n.. code:: python\n\n    class Facebook(ok.Key):\n        fields = ['all_posts']\n        class_key = 'fb'\n\n\n    print(Facebook().all_posts)\n    # fb:all_posts\n\nLicense\n-------\n\nMIT\n\n.. |latest-version| image:: https://img.shields.io/pypi/v/ok-redis.svg\n    :target: https://pypi.python.org/pypi/ok-redis/\n    :alt: Latest version\n.. |build-status| image:: https://img.shields.io/travis/mixxorz/ok-redis/master.svg\n    :target: https://travis-ci.org/mixxorz/ok-redis\n    :alt: Build status\n.. |python-support| image:: https://img.shields.io/pypi/pyversions/ok-redis.svg\n   :target: https://pypi.python.org/pypi/ok-redis\n   :alt: Python versions\n.. |downloads| image:: https://img.shields.io/pypi/dm/ok-redis.svg\n    :target: https://pypi.python.org/pypi/ok-redis/\n    :alt: Monthly downloads\n.. |license| image:: https://img.shields.io/pypi/l/ok-redis.svg\n    :target: https://github.com/behave/ok-redis/blob/master/LICENSE\n    :alt: Software license", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mixxorz/ok-redis", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "ok-redis", "package_url": "https://pypi.org/project/ok-redis/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ok-redis/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mixxorz/ok-redis"}, "release_url": "https://pypi.org/project/ok-redis/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "Object-Key Mapper for Redis", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/mixxorz/ok-redis\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/177fced81f42fb91a9412e8915b237682d8ffff6/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6d6978786f727a2f6f6b2d72656469732f6d61737465722e737667\"></a> <a href=\"https://pypi.python.org/pypi/ok-redis\" rel=\"nofollow\"><img alt=\"Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f208063efcc72ad2e698416fb5bd6d5f53c608ff/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6f6b2d72656469732e737667\"></a> <a href=\"https://pypi.python.org/pypi/ok-redis/\" rel=\"nofollow\"><img alt=\"Monthly downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a66f453edf3c1827ced9d2906d38cc90b92253ed/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6f6b2d72656469732e737667\"></a> <a href=\"https://github.com/behave/ok-redis/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"Software license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6129e0930b07ae537fabbc7510358f0b7c935f07/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6f6b2d72656469732e737667\"></a></p>\n<p>Object-Key Mapper for Redis</p>\n<p>If you\u2019ve used redis on python, you\u2019ve had to deal with redis keys.\nSometimes, <em>lots</em> of redis keys. With so many keys, it\u2019s easy to make\nmistakes, especially since keys are just strings. I built <tt>ok</tt> so that\nI didn\u2019t have to work with strings for redis keys.</p>\n<p>Here\u2019s how you use it:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ok</span>\n<span class=\"kn\">import</span> <span class=\"nn\">redis</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">ok</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">):</span>\n    <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'timeline'</span><span class=\"p\">,</span> <span class=\"s1\">'followers'</span><span class=\"p\">,</span> <span class=\"s1\">'following'</span><span class=\"p\">]</span>\n\n\n<span class=\"c1\"># Get user mixxorz' timeline</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">StrictRedis</span><span class=\"p\">()</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">zrevrange</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">(</span><span class=\"s1\">'mixxorz'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">timeline</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">)</span>\n<span class=\"c1\"># ZREVRANGE User:mixxorz:timeline 0 50</span>\n</pre>\n<p>Managing your keys just became a lot less fragile.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install it from pypi</p>\n<pre>$ pip install ok-redis\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Access fields.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">ok</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">):</span>\n    <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'timeline'</span><span class=\"p\">,</span> <span class=\"s1\">'followers'</span><span class=\"p\">,</span> <span class=\"s1\">'following'</span><span class=\"p\">]</span>\n\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">(</span><span class=\"s1\">'mixxorz'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">timeline</span><span class=\"p\">)</span>\n<span class=\"c1\"># User:mixxorz:timeline</span>\n</pre>\n<p>Chain keys.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">City</span><span class=\"p\">(</span><span class=\"n\">ok</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">):</span>\n    <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'tweets_hll'</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Country</span><span class=\"p\">(</span><span class=\"n\">ok</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">):</span>\n    <span class=\"n\">subkeys</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">City</span><span class=\"p\">]</span>\n\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Country</span><span class=\"p\">(</span><span class=\"s1\">'PH'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">City</span><span class=\"p\">(</span><span class=\"s1\">'Manila'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">tweets_hll</span><span class=\"p\">)</span>\n<span class=\"c1\"># Country:PH:City:Manila:tweets</span>\n</pre>\n<p>Subkeys can be an absolute or relative path to a key.</p>\n<pre><span class=\"c1\"># mod_one.py</span>\n<span class=\"k\">class</span> <span class=\"nc\">Refer</span><span class=\"p\">(</span><span class=\"n\">Key</span><span class=\"p\">):</span>\n    <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'elements'</span><span class=\"p\">]</span>\n\n\n<span class=\"c1\"># mod_two.py</span>\n<span class=\"k\">class</span> <span class=\"nc\">Parent</span><span class=\"p\">(</span><span class=\"n\">Key</span><span class=\"p\">):</span>\n    <span class=\"n\">subkeys</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'..mod_one.Refer'</span><span class=\"p\">]</span>\n\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Parent</span><span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Refer</span><span class=\"p\">(</span><span class=\"s1\">'bar'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">elements</span><span class=\"p\">)</span>\n<span class=\"c1\"># Parent:foo:Refer:bar:elements</span>\n</pre>\n<p>The string representation of a <cite>Key</cite> instance is the key, so you can use it like\nthis:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">ok</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">(</span><span class=\"s1\">'mixxorz'</span><span class=\"p\">))</span>\n</pre>\n<p>But you can also access the key explicitly.</p>\n<pre><span class=\"n\">User</span><span class=\"p\">(</span><span class=\"s1\">'mixxorz'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">key</span>\n<span class=\"c1\"># &gt;&gt;&gt; User:mixxorz</span>\n</pre>\n<p>IDs are optional.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">ok</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">):</span>\n    <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'rankings'</span><span class=\"p\">]</span>\n\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">rankings</span><span class=\"p\">)</span>\n<span class=\"c1\"># User:rankings</span>\n</pre>\n<p>IDs don\u2019t have to be strings</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">ok</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">)</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">(</span><span class=\"mi\">123</span><span class=\"p\">))</span>\n<span class=\"c1\"># User:123</span>\n</pre>\n<p>You can change the string used for the key.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Facebook</span><span class=\"p\">(</span><span class=\"n\">ok</span><span class=\"o\">.</span><span class=\"n\">Key</span><span class=\"p\">):</span>\n    <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'all_posts'</span><span class=\"p\">]</span>\n    <span class=\"n\">class_key</span> <span class=\"o\">=</span> <span class=\"s1\">'fb'</span>\n\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Facebook</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">all_posts</span><span class=\"p\">)</span>\n<span class=\"c1\"># fb:all_posts</span>\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT</p>\n</div>\n\n          </div>"}, "last_serial": 2248721, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6018132ea89a989d00d2f9af284dc777", "sha256": "8d1824380610702ee4e1803d79e76c75e393810e434d133a9881c3d079f42c85"}, "downloads": -1, "filename": "ok-redis-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6018132ea89a989d00d2f9af284dc777", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3427, "upload_time": "2016-06-26T13:20:33", "upload_time_iso_8601": "2016-06-26T13:20:33.617260Z", "url": "https://files.pythonhosted.org/packages/b5/f5/d0127acc78f0c132da170c1c0cff6c7feae94bbc35cba1712abb3649f828/ok-redis-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "acb8df6f1b34ed00aadafb72ce3a86ac", "sha256": "85ca6f29cfa083c79677b1ddee9c2c1bddd1fc1e12441cc2322a0dfaff58f188"}, "downloads": -1, "filename": "ok-redis-0.1.1.tar.gz", "has_sig": false, "md5_digest": "acb8df6f1b34ed00aadafb72ce3a86ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4058, "upload_time": "2016-07-07T16:12:37", "upload_time_iso_8601": "2016-07-07T16:12:37.667540Z", "url": "https://files.pythonhosted.org/packages/10/51/6d6ae9efbb326ca74c4a25c837ff1c981961b516d0047955b6ef969746a8/ok-redis-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a02e7bac4e31fb47821bef5f028bc2af", "sha256": "b457a9c13a22b2917c1b2f03b42894459d1a8aa3a9f3e0a79f8c114ab4e987c2"}, "downloads": -1, "filename": "ok-redis-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a02e7bac4e31fb47821bef5f028bc2af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4127, "upload_time": "2016-07-28T10:37:32", "upload_time_iso_8601": "2016-07-28T10:37:32.126528Z", "url": "https://files.pythonhosted.org/packages/70/c0/ab4d48494d52897dabefc3a2985240ce9ed7844d1daa7bec4847a0d5c33a/ok-redis-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a02e7bac4e31fb47821bef5f028bc2af", "sha256": "b457a9c13a22b2917c1b2f03b42894459d1a8aa3a9f3e0a79f8c114ab4e987c2"}, "downloads": -1, "filename": "ok-redis-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a02e7bac4e31fb47821bef5f028bc2af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4127, "upload_time": "2016-07-28T10:37:32", "upload_time_iso_8601": "2016-07-28T10:37:32.126528Z", "url": "https://files.pythonhosted.org/packages/70/c0/ab4d48494d52897dabefc3a2985240ce9ed7844d1daa7bec4847a0d5c33a/ok-redis-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:44 2020"}