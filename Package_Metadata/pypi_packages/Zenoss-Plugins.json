{"info": {"author": "Christopher Blunck", "author_email": "chris@swcomplete.com", "bugtrack_url": null, "classifiers": [], "description": "The zenoss plugins collect information about a computer's CPU, memory,\n        disk, io, or process activity and reports it in name-value pair\n        format.  These name-value pairs can be graphed in the Zenoss web\n        application.\n        \n        The zenoss plugins are platform specific, and certain platforms offer\n        plugins that are not implemented on other platforms.  The following\n        command can be used to determine the list of supported plugins on the\n        detected platform:\n        \n        # list the plugins that are defined on the detected platform\n        $ zenplugin.py --list-plugins\n        \n        platform 'darwin' supports the following plugins:\n        mem\n        process\n        disk\n        \n        The --report-platform option can be used to print out the platform\n        that has been detected.  It is used as follows:\n        \n        # report the detected platform\n        $ zenplugin.py --detect-platform\n        \n        darwin\n        \n        \n        Some plugins require additional command line arguments in order to\n        function.  An example of this requirement is the disk monitor.  The\n        disk monitor plugin must be passed an argument that defines which\n        filesystem should be reported on.  Plugin arguments are provided\n        immediately after the plugin name, as illustrated below:\n        \n        # report the disk utilization for /var\n        $ zenplugin.py disk /var\n        \n        DISK OK;|availBlocks=14251580 usedBlocks=63512052 totalBlocks=78019632\n        \n        \n        Other plugins may require keyword provided arguments in order to\n        function.  None of the plugins currently require it, but in the future\n        they may honor keyword arguments as follows:\n        \n        # report the disk utilization for /var\n        $ zenplugin.py disk /var --debug=10", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.zenoss.com", "keywords": "network management", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "Zenoss-Plugins", "package_url": "https://pypi.org/project/Zenoss-Plugins/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Zenoss-Plugins/", "project_urls": {"Homepage": "http://www.zenoss.com"}, "release_url": "https://pypi.org/project/Zenoss-Plugins/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Zenoss-Plugins collect information about your workstation and report them on the command line.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <dl>\n<dt>The zenoss plugins collect information about a computer\u2019s CPU, memory,</dt>\n<dd><p>disk, io, or process activity and reports it in name-value pair\nformat.  These name-value pairs can be graphed in the Zenoss web\napplication.</p>\n<p>The zenoss plugins are platform specific, and certain platforms offer\nplugins that are not implemented on other platforms.  The following\ncommand can be used to determine the list of supported plugins on the\ndetected platform:</p>\n<p># list the plugins that are defined on the detected platform\n$ zenplugin.py \u2013list-plugins</p>\n<p>platform \u2018darwin\u2019 supports the following plugins:\nmem\nprocess\ndisk</p>\n<p>The \u2013report-platform option can be used to print out the platform\nthat has been detected.  It is used as follows:</p>\n<p># report the detected platform\n$ zenplugin.py \u2013detect-platform</p>\n<p>darwin</p>\n<p>Some plugins require additional command line arguments in order to\nfunction.  An example of this requirement is the disk monitor.  The\ndisk monitor plugin must be passed an argument that defines which\nfilesystem should be reported on.  Plugin arguments are provided\nimmediately after the plugin name, as illustrated below:</p>\n<p># report the disk utilization for /var\n$ zenplugin.py disk /var</p>\n<p>DISK OK;|availBlocks=14251580 usedBlocks=63512052 totalBlocks=78019632</p>\n<p>Other plugins may require keyword provided arguments in order to\nfunction.  None of the plugins currently require it, but in the future\nthey may honor keyword arguments as follows:</p>\n<p># report the disk utilization for /var\n$ zenplugin.py disk /var \u2013debug=10</p>\n</dd>\n</dl>\n\n          </div>"}, "last_serial": 786076, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a427fded3e5504a1c9e14d7571778927", "sha256": "b152eee46f03fbe46f4edacd8163d4c79de98f6108603acd43a0dd6b743852c5"}, "downloads": -1, "filename": "Zenoss-Plugins-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a427fded3e5504a1c9e14d7571778927", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8218, "upload_time": "2006-11-14T21:20:22", "upload_time_iso_8601": "2006-11-14T21:20:22Z", "url": "https://files.pythonhosted.org/packages/23/eb/f7255a0ff40bcb95c493e83cb8d34693d79bb6f3b40c1d205610532a6057/Zenoss-Plugins-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a427fded3e5504a1c9e14d7571778927", "sha256": "b152eee46f03fbe46f4edacd8163d4c79de98f6108603acd43a0dd6b743852c5"}, "downloads": -1, "filename": "Zenoss-Plugins-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a427fded3e5504a1c9e14d7571778927", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8218, "upload_time": "2006-11-14T21:20:22", "upload_time_iso_8601": "2006-11-14T21:20:22Z", "url": "https://files.pythonhosted.org/packages/23/eb/f7255a0ff40bcb95c493e83cb8d34693d79bb6f3b40c1d205610532a6057/Zenoss-Plugins-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:18:08 2020"}