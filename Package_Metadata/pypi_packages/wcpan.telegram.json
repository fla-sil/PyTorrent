{"info": {"author": "Wei-Cheng Pan", "author_email": "legnaleurc@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Communications :: Chat"], "description": "TeleZombie\r\n==========\r\n\r\nTelegram Bot API with Tornado.\r\n\r\nHigh Level API Example\r\n----------------------\r\n\r\n``TeleLich`` is a high level undead, you can demand it to send requests:\r\n\r\n.. code:: python\r\n\r\n    from tornado import gen, ioloop\r\n    from telezombie import api, types\r\n\r\n\r\n    @gen.coroutine\r\n    def main():\r\n        API_TOKEN = 'your_token'\r\n        lich = api.TeleLich(API_TOKEN)\r\n        talk_to = 42\r\n\r\n        # getMe\r\n        user = yield lich.get_me()\r\n        print(user)\r\n\r\n        # getUpdates\r\n        updates = yield lich.get_updates()\r\n        print(updates)\r\n\r\n        # sendMessage\r\n        message = yield lich.send_message(talk_to, 'hello')\r\n        print(message)\r\n\r\n        # sendPhoto\r\n        photo = types.InputFile('path_to_your_phoho.png')\r\n        message = yield lich.send_photo(talk_to, photo)\r\n        print(message)\r\n\r\n        # sendAudio\r\n        audio = types.InputFile('path_to_your_audio.ogg')\r\n        message = yield lich.send_audio(talk_to, audio)\r\n        print(message)\r\n\r\n        # sendVideo\r\n        video = types.InputFile('path_to_your_video.mp4')\r\n        message = yield lich.send_video(talk_to, video)\r\n        print(message)\r\n\r\n        # sendDocument\r\n        document = types.InputFile('path_to_your_file.zip')\r\n        message = yield lich.send_document(talk_to, document)\r\n        print(message)\r\n\r\n\r\n    main_loop = ioloop.IOLoop.instance()\r\n    main_loop.run_sync(main)\r\n\r\nAnd let it handles updates:\r\n\r\n.. code:: python\r\n\r\n    from tornado import gen, ioloop\r\n    from telezombie import api\r\n\r\n\r\n    class KelThuzad(api.TeleLich):\r\n\r\n        def __init__(self, api_token):\r\n            super(KelThuzad, self).__init__(api_token)\r\n\r\n        @gen.coroutine\r\n        def on_text(self, message):\r\n            id_ = message.message_id\r\n            chat = message.chat\r\n            text = message.text\r\n            # echo same text\r\n            yield self.send_message(chat.id_, text, reply_to_message_id=id_)\r\n\r\n        @gen.coroutine\r\n        def on_video(self, message):\r\n            chat = message.chat\r\n            video = message.video\r\n            # echo video without upload again\r\n            yield self.send_video(chat.id_, video.file_id, reply_to_message_id=id_)\r\n\r\n\r\n    @gen.coroutine\r\n    def forever():\r\n        API_TOKEN = 'your_token'\r\n        lich = api.KelThuzad(API_TOKEN)\r\n\r\n        yield lich.poll()\r\n\r\n\r\n    main_loop = ioloop.IOLoop.instance()\r\n    main_loop.run_sync(forever)\r\n\r\nOr handles updates by webhook:\r\n\r\n.. code:: python\r\n\r\n    from tornado import gen, ioloop, web\r\n    from telezombie import api\r\n\r\n\r\n    class HookHandler(api.TeleHookHandler):\r\n\r\n        @gen.coroutine\r\n        def on_text(self, message):\r\n            lich = self.application.settings['lich']\r\n            id_ = message.message_id\r\n            chat = message.chat\r\n            text = message.text\r\n            # echo same text\r\n            yield lich.send_message(chat.id_, text, reply_to_message_id=id_)\r\n\r\n\r\n    @gen.coroutine\r\n    def create_lich():\r\n        API_TOKEN = 'your_token'\r\n        lich = api.TeleLich(API_TOKEN)\r\n\r\n        yield lich.listen('https://your.host/hook')\r\n\r\n        return lich\r\n\r\n\r\n    main_loop = ioloop.IOLoop.instance()\r\n\r\n    lich = main_loop.run_sync(create_lich)\r\n    application = web.Application([\r\n        (r\"/hook\", HookHandler),\r\n    ], lich=lich)\r\n    # please configure your own SSL proxy\r\n    application.listen(8000)\r\n\r\n    main_loop.start()\r\n\r\nLow Level API Example\r\n---------------------\r\n\r\nAlthough the ``TeleLich`` is handy, sometimes you just need a ghoul to\r\ncollect lumber for you, so you can use it to build your own Ziggurat.\r\n\r\n``TeleZombie`` provides simple and direct API mapping:\r\n\r\n.. code:: python\r\n\r\n    from tornado import gen, ioloop\r\n    from telezombie import api, types\r\n\r\n\r\n    @gen.coroutine\r\n    def main():\r\n        API_TOKEN = 'your_token'\r\n        ghoul = api.TeleZombie(API_TOKEN)\r\n        talk_to = 42\r\n\r\n        # getMe\r\n        user = yield ghoul.get_me()\r\n        print(user)\r\n\r\n        # getUpdates\r\n        offset = 0\r\n        updates = []\r\n        while True:\r\n            us = yield ghoul.get_updates(offset)\r\n            updates.extend(us)\r\n            if not us:\r\n                break\r\n            offset = us[-1].update_id + 1\r\n        print(updates)\r\n\r\n        # sendMessage\r\n        message = yield ghoul.send_message(talk_to, 'hello')\r\n        print(message)\r\n\r\n        # sendDocument\r\n        document = types.InputFile('path_to_your_file.zip')\r\n        message = yield lich.send_document(talk_to, document)\r\n        print(message)\r\n\r\n\r\n    main_loop = ioloop.IOLoop.instance()\r\n    main_loop.run_sync(main)", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/legnaleurc/telezombie", "keywords": "telegram bot tornado", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "wcpan.telegram", "package_url": "https://pypi.org/project/wcpan.telegram/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/wcpan.telegram/", "project_urls": {"Homepage": "https://github.com/legnaleurc/telezombie"}, "release_url": "https://pypi.org/project/wcpan.telegram/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Telegram Bot API with Tornado", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Telegram Bot API with Tornado.</p>\n<div id=\"high-level-api-example\">\n<h2>High Level API Example</h2>\n<p><tt>TeleLich</tt> is a high level undead, you can demand it to send requests:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tornado</span> <span class=\"kn\">import</span> <span class=\"n\">gen</span><span class=\"p\">,</span> <span class=\"n\">ioloop</span>\n<span class=\"kn\">from</span> <span class=\"nn\">telezombie</span> <span class=\"kn\">import</span> <span class=\"n\">api</span><span class=\"p\">,</span> <span class=\"n\">types</span>\n\n\n<span class=\"nd\">@gen</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">API_TOKEN</span> <span class=\"o\">=</span> <span class=\"s1\">'your_token'</span>\n    <span class=\"n\">lich</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">TeleLich</span><span class=\"p\">(</span><span class=\"n\">API_TOKEN</span><span class=\"p\">)</span>\n    <span class=\"n\">talk_to</span> <span class=\"o\">=</span> <span class=\"mi\">42</span>\n\n    <span class=\"c1\"># getMe</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">lich</span><span class=\"o\">.</span><span class=\"n\">get_me</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># getUpdates</span>\n    <span class=\"n\">updates</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">lich</span><span class=\"o\">.</span><span class=\"n\">get_updates</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">updates</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># sendMessage</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">lich</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"n\">talk_to</span><span class=\"p\">,</span> <span class=\"s1\">'hello'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># sendPhoto</span>\n    <span class=\"n\">photo</span> <span class=\"o\">=</span> <span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">InputFile</span><span class=\"p\">(</span><span class=\"s1\">'path_to_your_phoho.png'</span><span class=\"p\">)</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">lich</span><span class=\"o\">.</span><span class=\"n\">send_photo</span><span class=\"p\">(</span><span class=\"n\">talk_to</span><span class=\"p\">,</span> <span class=\"n\">photo</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># sendAudio</span>\n    <span class=\"n\">audio</span> <span class=\"o\">=</span> <span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">InputFile</span><span class=\"p\">(</span><span class=\"s1\">'path_to_your_audio.ogg'</span><span class=\"p\">)</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">lich</span><span class=\"o\">.</span><span class=\"n\">send_audio</span><span class=\"p\">(</span><span class=\"n\">talk_to</span><span class=\"p\">,</span> <span class=\"n\">audio</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># sendVideo</span>\n    <span class=\"n\">video</span> <span class=\"o\">=</span> <span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">InputFile</span><span class=\"p\">(</span><span class=\"s1\">'path_to_your_video.mp4'</span><span class=\"p\">)</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">lich</span><span class=\"o\">.</span><span class=\"n\">send_video</span><span class=\"p\">(</span><span class=\"n\">talk_to</span><span class=\"p\">,</span> <span class=\"n\">video</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># sendDocument</span>\n    <span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">InputFile</span><span class=\"p\">(</span><span class=\"s1\">'path_to_your_file.zip'</span><span class=\"p\">)</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">lich</span><span class=\"o\">.</span><span class=\"n\">send_document</span><span class=\"p\">(</span><span class=\"n\">talk_to</span><span class=\"p\">,</span> <span class=\"n\">document</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">main_loop</span> <span class=\"o\">=</span> <span class=\"n\">ioloop</span><span class=\"o\">.</span><span class=\"n\">IOLoop</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">()</span>\n<span class=\"n\">main_loop</span><span class=\"o\">.</span><span class=\"n\">run_sync</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">)</span>\n</pre>\n<p>And let it handles updates:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tornado</span> <span class=\"kn\">import</span> <span class=\"n\">gen</span><span class=\"p\">,</span> <span class=\"n\">ioloop</span>\n<span class=\"kn\">from</span> <span class=\"nn\">telezombie</span> <span class=\"kn\">import</span> <span class=\"n\">api</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">KelThuzad</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">TeleLich</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">api_token</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">KelThuzad</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">api_token</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@gen</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n    <span class=\"k\">def</span> <span class=\"nf\">on_text</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">):</span>\n        <span class=\"n\">id_</span> <span class=\"o\">=</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">message_id</span>\n        <span class=\"n\">chat</span> <span class=\"o\">=</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">chat</span>\n        <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">text</span>\n        <span class=\"c1\"># echo same text</span>\n        <span class=\"k\">yield</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"n\">chat</span><span class=\"o\">.</span><span class=\"n\">id_</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">reply_to_message_id</span><span class=\"o\">=</span><span class=\"n\">id_</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@gen</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n    <span class=\"k\">def</span> <span class=\"nf\">on_video</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">):</span>\n        <span class=\"n\">chat</span> <span class=\"o\">=</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">chat</span>\n        <span class=\"n\">video</span> <span class=\"o\">=</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">video</span>\n        <span class=\"c1\"># echo video without upload again</span>\n        <span class=\"k\">yield</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_video</span><span class=\"p\">(</span><span class=\"n\">chat</span><span class=\"o\">.</span><span class=\"n\">id_</span><span class=\"p\">,</span> <span class=\"n\">video</span><span class=\"o\">.</span><span class=\"n\">file_id</span><span class=\"p\">,</span> <span class=\"n\">reply_to_message_id</span><span class=\"o\">=</span><span class=\"n\">id_</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@gen</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">forever</span><span class=\"p\">():</span>\n    <span class=\"n\">API_TOKEN</span> <span class=\"o\">=</span> <span class=\"s1\">'your_token'</span>\n    <span class=\"n\">lich</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">KelThuzad</span><span class=\"p\">(</span><span class=\"n\">API_TOKEN</span><span class=\"p\">)</span>\n\n    <span class=\"k\">yield</span> <span class=\"n\">lich</span><span class=\"o\">.</span><span class=\"n\">poll</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">main_loop</span> <span class=\"o\">=</span> <span class=\"n\">ioloop</span><span class=\"o\">.</span><span class=\"n\">IOLoop</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">()</span>\n<span class=\"n\">main_loop</span><span class=\"o\">.</span><span class=\"n\">run_sync</span><span class=\"p\">(</span><span class=\"n\">forever</span><span class=\"p\">)</span>\n</pre>\n<p>Or handles updates by webhook:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tornado</span> <span class=\"kn\">import</span> <span class=\"n\">gen</span><span class=\"p\">,</span> <span class=\"n\">ioloop</span><span class=\"p\">,</span> <span class=\"n\">web</span>\n<span class=\"kn\">from</span> <span class=\"nn\">telezombie</span> <span class=\"kn\">import</span> <span class=\"n\">api</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">HookHandler</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">TeleHookHandler</span><span class=\"p\">):</span>\n\n    <span class=\"nd\">@gen</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n    <span class=\"k\">def</span> <span class=\"nf\">on_text</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">):</span>\n        <span class=\"n\">lich</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">application</span><span class=\"o\">.</span><span class=\"n\">settings</span><span class=\"p\">[</span><span class=\"s1\">'lich'</span><span class=\"p\">]</span>\n        <span class=\"n\">id_</span> <span class=\"o\">=</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">message_id</span>\n        <span class=\"n\">chat</span> <span class=\"o\">=</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">chat</span>\n        <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">text</span>\n        <span class=\"c1\"># echo same text</span>\n        <span class=\"k\">yield</span> <span class=\"n\">lich</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"n\">chat</span><span class=\"o\">.</span><span class=\"n\">id_</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">reply_to_message_id</span><span class=\"o\">=</span><span class=\"n\">id_</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@gen</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">create_lich</span><span class=\"p\">():</span>\n    <span class=\"n\">API_TOKEN</span> <span class=\"o\">=</span> <span class=\"s1\">'your_token'</span>\n    <span class=\"n\">lich</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">TeleLich</span><span class=\"p\">(</span><span class=\"n\">API_TOKEN</span><span class=\"p\">)</span>\n\n    <span class=\"k\">yield</span> <span class=\"n\">lich</span><span class=\"o\">.</span><span class=\"n\">listen</span><span class=\"p\">(</span><span class=\"s1\">'https://your.host/hook'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">lich</span>\n\n\n<span class=\"n\">main_loop</span> <span class=\"o\">=</span> <span class=\"n\">ioloop</span><span class=\"o\">.</span><span class=\"n\">IOLoop</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">()</span>\n\n<span class=\"n\">lich</span> <span class=\"o\">=</span> <span class=\"n\">main_loop</span><span class=\"o\">.</span><span class=\"n\">run_sync</span><span class=\"p\">(</span><span class=\"n\">create_lich</span><span class=\"p\">)</span>\n<span class=\"n\">application</span> <span class=\"o\">=</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">([</span>\n    <span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"/hook\"</span><span class=\"p\">,</span> <span class=\"n\">HookHandler</span><span class=\"p\">),</span>\n<span class=\"p\">],</span> <span class=\"n\">lich</span><span class=\"o\">=</span><span class=\"n\">lich</span><span class=\"p\">)</span>\n<span class=\"c1\"># please configure your own SSL proxy</span>\n<span class=\"n\">application</span><span class=\"o\">.</span><span class=\"n\">listen</span><span class=\"p\">(</span><span class=\"mi\">8000</span><span class=\"p\">)</span>\n\n<span class=\"n\">main_loop</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"low-level-api-example\">\n<h2>Low Level API Example</h2>\n<p>Although the <tt>TeleLich</tt> is handy, sometimes you just need a ghoul to\ncollect lumber for you, so you can use it to build your own Ziggurat.</p>\n<p><tt>TeleZombie</tt> provides simple and direct API mapping:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tornado</span> <span class=\"kn\">import</span> <span class=\"n\">gen</span><span class=\"p\">,</span> <span class=\"n\">ioloop</span>\n<span class=\"kn\">from</span> <span class=\"nn\">telezombie</span> <span class=\"kn\">import</span> <span class=\"n\">api</span><span class=\"p\">,</span> <span class=\"n\">types</span>\n\n\n<span class=\"nd\">@gen</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">API_TOKEN</span> <span class=\"o\">=</span> <span class=\"s1\">'your_token'</span>\n    <span class=\"n\">ghoul</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">TeleZombie</span><span class=\"p\">(</span><span class=\"n\">API_TOKEN</span><span class=\"p\">)</span>\n    <span class=\"n\">talk_to</span> <span class=\"o\">=</span> <span class=\"mi\">42</span>\n\n    <span class=\"c1\"># getMe</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">ghoul</span><span class=\"o\">.</span><span class=\"n\">get_me</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># getUpdates</span>\n    <span class=\"n\">offset</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"n\">updates</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">us</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">ghoul</span><span class=\"o\">.</span><span class=\"n\">get_updates</span><span class=\"p\">(</span><span class=\"n\">offset</span><span class=\"p\">)</span>\n        <span class=\"n\">updates</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">us</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">us</span><span class=\"p\">:</span>\n            <span class=\"k\">break</span>\n        <span class=\"n\">offset</span> <span class=\"o\">=</span> <span class=\"n\">us</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">update_id</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">updates</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># sendMessage</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">ghoul</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span><span class=\"n\">talk_to</span><span class=\"p\">,</span> <span class=\"s1\">'hello'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># sendDocument</span>\n    <span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">InputFile</span><span class=\"p\">(</span><span class=\"s1\">'path_to_your_file.zip'</span><span class=\"p\">)</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">lich</span><span class=\"o\">.</span><span class=\"n\">send_document</span><span class=\"p\">(</span><span class=\"n\">talk_to</span><span class=\"p\">,</span> <span class=\"n\">document</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">main_loop</span> <span class=\"o\">=</span> <span class=\"n\">ioloop</span><span class=\"o\">.</span><span class=\"n\">IOLoop</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">()</span>\n<span class=\"n\">main_loop</span><span class=\"o\">.</span><span class=\"n\">run_sync</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3635183, "releases": {"0.2.1": [], "0.3.0.dev1": [{"comment_text": "", "digests": {"md5": "46271ba25a3c06f74566f193c585bc02", "sha256": "e713397b79d8702572effca7a0b191729e9070bf0867efc0836f1d07032b4604"}, "downloads": -1, "filename": "wcpan.telegram-0.3.0.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "46271ba25a3c06f74566f193c585bc02", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4350, "upload_time": "2016-12-15T08:36:24", "upload_time_iso_8601": "2016-12-15T08:36:24.427176Z", "url": "https://files.pythonhosted.org/packages/d0/0f/9f5763c722e8bf63faa64c8b610ea637b678a2930b5ff3717a2063d2ad1e/wcpan.telegram-0.3.0.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82fc717bf02f31afd0ad291615e9d8a1", "sha256": "fb2a63dfd54f5c7907bb62593a74d2a70345eb3dbd755e468348523dd838942c"}, "downloads": -1, "filename": "wcpan.telegram-0.3.0.dev1.tar.gz", "has_sig": false, "md5_digest": "82fc717bf02f31afd0ad291615e9d8a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2631, "upload_time": "2016-12-15T08:36:28", "upload_time_iso_8601": "2016-12-15T08:36:28.694268Z", "url": "https://files.pythonhosted.org/packages/cc/ca/05eda894265ab4edde52c5fb5a9b97ab9233035044830312fc4b11eefef8/wcpan.telegram-0.3.0.dev1.tar.gz", "yanked": false}], "0.3.0.dev2": [{"comment_text": "", "digests": {"md5": "703734f86f5ac5043f3e9a655dcbb3e4", "sha256": "f4b0dcf232c3e65fa5f91810cbc2c38a2c3c1f149cd993b2842ef3f42f1dced3"}, "downloads": -1, "filename": "wcpan.telegram-0.3.0.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "703734f86f5ac5043f3e9a655dcbb3e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14110, "upload_time": "2016-12-15T08:52:24", "upload_time_iso_8601": "2016-12-15T08:52:24.048658Z", "url": "https://files.pythonhosted.org/packages/de/06/f82559f073d51bad68d9bb01ecb32429c35105eaa74106ed7cbbddc4dfda/wcpan.telegram-0.3.0.dev2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06d9da98fce88d47546c96524da15bff", "sha256": "fa9a37d0bde87afd181bdf39e6653e75963007fca2ab502e5f693ce9a3b1747d"}, "downloads": -1, "filename": "wcpan.telegram-0.3.0.dev2.tar.gz", "has_sig": false, "md5_digest": "06d9da98fce88d47546c96524da15bff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11345, "upload_time": "2016-12-15T08:52:26", "upload_time_iso_8601": "2016-12-15T08:52:26.164706Z", "url": "https://files.pythonhosted.org/packages/4e/d2/656c073a99aff19c04c180405b4f12327e3a496bcc5bb042934c4c5b000b/wcpan.telegram-0.3.0.dev2.tar.gz", "yanked": false}], "0.3.0.dev3": [{"comment_text": "", "digests": {"md5": "0b02d988d3fcd9964cde431268f0dc39", "sha256": "7a6b8ca2a58fd1ed0e4254ecf3cae5c43aa83cc8bee7d935959e1c197f667851"}, "downloads": -1, "filename": "wcpan.telegram-0.3.0.dev3-py3-none-any.whl", "has_sig": false, "md5_digest": "0b02d988d3fcd9964cde431268f0dc39", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14145, "upload_time": "2016-12-15T09:03:11", "upload_time_iso_8601": "2016-12-15T09:03:11.710108Z", "url": "https://files.pythonhosted.org/packages/6e/0d/947aa027187cbb0cedc959e8b7aa313675de5198cd74171eb9f0158449e0/wcpan.telegram-0.3.0.dev3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "518a3027e5cacd359218dc3834e971ae", "sha256": "c6d642b72231b2ca2ebe9a88ce3a38441fe0eb57c6c1c4c52ec2706b5a492e33"}, "downloads": -1, "filename": "wcpan.telegram-0.3.0.dev3.tar.gz", "has_sig": false, "md5_digest": "518a3027e5cacd359218dc3834e971ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11377, "upload_time": "2016-12-15T09:03:14", "upload_time_iso_8601": "2016-12-15T09:03:14.165899Z", "url": "https://files.pythonhosted.org/packages/ba/5a/e98d892f6b8583499394a521848301360aedea1877b88f4ca084b8915493/wcpan.telegram-0.3.0.dev3.tar.gz", "yanked": false}], "0.3.0.dev4": [{"comment_text": "", "digests": {"md5": "f7ad10eb8e2f4c6c414c67545e4afa85", "sha256": "3a1250bc10ea948223db1d5649154c8b5653841dfb5278fe6f59d2a0acb9a2ee"}, "downloads": -1, "filename": "wcpan.telegram-0.3.0.dev4-py3-none-any.whl", "has_sig": false, "md5_digest": "f7ad10eb8e2f4c6c414c67545e4afa85", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14135, "upload_time": "2016-12-15T09:08:07", "upload_time_iso_8601": "2016-12-15T09:08:07.563556Z", "url": "https://files.pythonhosted.org/packages/7d/5f/e56363177f00927ae927bd21217495ba99dff77b9e60912785aef9085e58/wcpan.telegram-0.3.0.dev4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ef7fbab136d090a44e2ba4c5e258f39", "sha256": "3e1c364db09fb0d9afa7c2653e25095c385911ca569f2c05a5802a402bcc3988"}, "downloads": -1, "filename": "wcpan.telegram-0.3.0.dev4.tar.gz", "has_sig": false, "md5_digest": "6ef7fbab136d090a44e2ba4c5e258f39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11374, "upload_time": "2016-12-15T09:08:09", "upload_time_iso_8601": "2016-12-15T09:08:09.540959Z", "url": "https://files.pythonhosted.org/packages/9e/a2/cde2b2a8699f019a47178a237e96dd7b59af8ee595caaa2c2477032b2da2/wcpan.telegram-0.3.0.dev4.tar.gz", "yanked": false}], "0.3.0.dev5": [{"comment_text": "", "digests": {"md5": "4fde473ac022d71de44fd099823fe29f", "sha256": "237c41af605fc9b6be181650142be08faf368431c097ab6f4875574d6e87d247"}, "downloads": -1, "filename": "wcpan.telegram-0.3.0.dev5-py3-none-any.whl", "has_sig": false, "md5_digest": "4fde473ac022d71de44fd099823fe29f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14132, "upload_time": "2016-12-15T09:37:55", "upload_time_iso_8601": "2016-12-15T09:37:55.603402Z", "url": "https://files.pythonhosted.org/packages/18/e7/65bd1b106c51f13e2d76b9f0e97362cccb8185be0652094cada24c36adcd/wcpan.telegram-0.3.0.dev5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a45a92d725f816ff7d09d008c0909223", "sha256": "c5be0789e52cf14a16025f44f2051f64ac3e19dc1910f6ca8a27841bdd82fdbb"}, "downloads": -1, "filename": "wcpan.telegram-0.3.0.dev5.tar.gz", "has_sig": false, "md5_digest": "a45a92d725f816ff7d09d008c0909223", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11371, "upload_time": "2016-12-15T09:37:57", "upload_time_iso_8601": "2016-12-15T09:37:57.267103Z", "url": "https://files.pythonhosted.org/packages/cb/ea/1feda7766c523e272e34de3becdb8f89fe285d75ed26cd9ef79a889a32c1/wcpan.telegram-0.3.0.dev5.tar.gz", "yanked": false}], "0.3.0.dev6": [{"comment_text": "", "digests": {"md5": "13b04991fa02f1d704161ff8d135f122", "sha256": "767a48e66519513b8e0f44fd575da93160f81ad25db696fe96c4f849f7117225"}, "downloads": -1, "filename": "wcpan.telegram-0.3.0.dev6-py3-none-any.whl", "has_sig": false, "md5_digest": "13b04991fa02f1d704161ff8d135f122", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16725, "upload_time": "2018-03-03T16:03:42", "upload_time_iso_8601": "2018-03-03T16:03:42.160552Z", "url": "https://files.pythonhosted.org/packages/cb/89/fb45b2a3835b6caf1fdf85e830f4409e796dcac4f161df350385a372faed/wcpan.telegram-0.3.0.dev6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2c3f58bd4031f939be868ccff2de58f", "sha256": "39b4b329a65222a6e70558f29c1d024155456bb8e66226dd01571d09c8340b84"}, "downloads": -1, "filename": "wcpan.telegram-0.3.0.dev6.tar.gz", "has_sig": false, "md5_digest": "f2c3f58bd4031f939be868ccff2de58f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15521, "upload_time": "2018-03-03T16:03:44", "upload_time_iso_8601": "2018-03-03T16:03:44.141575Z", "url": "https://files.pythonhosted.org/packages/dc/e9/2ca30ac4f9fd3fe164131d43852fc4990a2b9c4d365f9d1f265c09ed20ea/wcpan.telegram-0.3.0.dev6.tar.gz", "yanked": false}]}, "urls": [], "timestamp": "Fri May  8 03:31:43 2020"}