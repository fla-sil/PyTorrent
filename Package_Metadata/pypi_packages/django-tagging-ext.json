{"info": {"author": "Daniel Greenfeld", "author_email": "pydanny@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "=======================================\ndjango-tagging-ext (Django Tagging EXT)\n=======================================\n\n`django-tagging`_ gives you tagging. django-tagging-ext gives you enhanced \ndisplays of tags. All rendered HTML is done via templates so you can customize\nthe displays as needed.\n\nFuture releases of Django Tagging EXT will include these features:\n\n * More comprehensive tests\n * Tag dispatching so you can control tagging more tightly. For example, limiting tags to just one model.\n * Tag Auto-complete\n\nDependencies\n~~~~~~~~~~~~\n\ndjango-tagging\n\nOptional Dependencies\n~~~~~~~~~~~~~~~~~~~~~\n\nPinax 0.7.x\nPinax 0.9+\n\nInstallation\n~~~~~~~~~~~~\n\nTagged release::\n\n    pip install django-tagging-ext\n    \nDevelopment version::\n\n    pip install -e git+git://github.com/pydanny/django-tagging-ext.git#egg=django-tagging-ext\n    \nAdd to your Django settings.py file::\n\n    INSTALLED_APPS = (\n        ...\n        'tagging_ext',\n    )\n    \n\nView rendering via root url_conf\n=================================\n\ndjango-tagging-ext is designed so all the work is done in the root urls file.\n\nIn the project url_conf (urls.py)::\n\n    # django-tagging-ext url definitions\n    from blog.models import Post\n    from bookmarks.models import BookmarkInstance\n    from photos.models import Image\n    from tagging.models import TaggedItem\n\n    tagged_models = (\n      dict(title=\"Blog Posts\",\n        query=lambda tag : TaggedItem.objects.get_by_model(Post, tag).filter(status=2),\n      ),\n      dict(title=\"Bookmarks\",\n        query=lambda tag : TaggedItem.objects.get_by_model(BookmarkInstance, tag),\n      ),\n      dict(title=\"Photos\",\n        query=lambda tag: TaggedItem.objects.get_by_model(Image, tag).filter(safetylevel=1),\n      ),\n    )\n\n    tagging_ext_kwargs = {\n      'tagged_models':tagged_models,\n      # You can add your own special template to be the default\n      #'default_template':'custom_templates/special.html'\n    }\n\n    urlpatterns += patterns('',\n      url(r'^tags/(?P<tag>.+)/(?P<model>.+)$', 'tagging_ext.views.tag_by_model', \n            kwargs=tagging_ext_kwargs, name='tagging_ext_tag_by_model'),\n      url(r'^tags/(?P<tag>.+)/$', 'tagging_ext.views.tag', \n            kwargs=tagging_ext_kwargs, name='tagging_ext_tag'),\n      url(r'^tags/$', 'tagging_ext.views.index', name='tagging_ext_index'),  \n    )\n    \nView rendering of Pinax objects via root url_conf\n==================================================\n\nIn the pinax project url_conf (urls.py) we use the custom_template field to \nexplicitly tell Django Tagging EXT to fetch views customized for use in \nPinax::\n\n    # django-tagging-ext url definitions\n    from blog.models import Post\n    from bookmarks.models import BookmarkInstance\n    from photos.models import Image\n    from tagging.models import TaggedItem\n\n    tagged_models = (\n      dict(title=\"Blog Posts\",\n        query=lambda tag : TaggedItem.objects.get_by_model(Post, tag).filter(status=2),\n        content_template=\"pinax_tagging_ext/blogs.html\",\n      ),\n      dict(title=\"Bookmarks\",\n        query=lambda tag : TaggedItem.objects.get_by_model(BookmarkInstance, tag),\n        content_template=\"pinax_tagging_ext/bookmarks.html\",        \n      ),\n      dict(title=\"Photos\",\n        query=lambda tag: TaggedItem.objects.get_by_model(Image, tag).filter(safetylevel=1),\n        content_template=\"pinax_tagging_ext/photos.html\",    \n      ),\n    )\n\n    tagging_ext_kwargs = {\n      'tagged_models':tagged_models,\n      # You can add your own special template to be the default\n      #'default_template':'custom_templates/special.html'\n    }\n\n    urlpatterns += patterns('',\n      url(r'^tags/(?P<tag>.+)/(?P<model>.+)$', 'tagging_ext.views.tag_by_model',\n            kwargs=tagging_ext_kwargs, name='tagging_ext_tag_by_model'),\n      url(r'^tags/(?P<tag>.+)/$', 'tagging_ext.views.tag', \n            kwargs=tagging_ext_kwargs, name='tagging_ext_tag'),\n      url(r'^tags/$', 'tagging_ext.views.index', name='tagging_ext_index'),  \n    )\n\n\nRunning tests from within your Pinax project\n============================================\n\n $ pinax-admin setup_project -b social my_pinax_project\n $ cd my_pinax_project\n $ python manage.py test tagging_ext\n\n\n.. _`django-tagging`: http://code.google.com/p/django-tagging\n.. _`Django`: http://djangoproject.com\n.. _`Pinax`: http://pinaxproject.com", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/pydanny/django-tagging-ext", "keywords": "django,pinax", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-tagging-ext", "package_url": "https://pypi.org/project/django-tagging-ext/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-tagging-ext/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/pydanny/django-tagging-ext"}, "release_url": "https://pypi.org/project/django-tagging-ext/0.3.6/", "requires_dist": null, "requires_python": null, "summary": "Adds in new features to supplement django-tagging", "version": "0.3.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"http://code.google.com/p/django-tagging\" rel=\"nofollow\">django-tagging</a> gives you tagging. django-tagging-ext gives you enhanced\ndisplays of tags. All rendered HTML is done via templates so you can customize\nthe displays as needed.</p>\n<p>Future releases of Django Tagging EXT will include these features:</p>\n<blockquote>\n<ul>\n<li>More comprehensive tests</li>\n<li>Tag dispatching so you can control tagging more tightly. For example, limiting tags to just one model.</li>\n<li>Tag Auto-complete</li>\n</ul>\n</blockquote>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>django-tagging</p>\n</div>\n<div id=\"optional-dependencies\">\n<h2>Optional Dependencies</h2>\n<p>Pinax 0.7.x\nPinax 0.9+</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Tagged release:</p>\n<pre>pip install django-tagging-ext\n</pre>\n<p>Development version:</p>\n<pre>pip install -e git+git://github.com/pydanny/django-tagging-ext.git#egg=django-tagging-ext\n</pre>\n<p>Add to your Django settings.py file:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'tagging_ext',\n)\n</pre>\n<div id=\"view-rendering-via-root-url-conf\">\n<h3>View rendering via root url_conf</h3>\n<p>django-tagging-ext is designed so all the work is done in the root urls file.</p>\n<p>In the project url_conf (urls.py):</p>\n<pre># django-tagging-ext url definitions\nfrom blog.models import Post\nfrom bookmarks.models import BookmarkInstance\nfrom photos.models import Image\nfrom tagging.models import TaggedItem\n\ntagged_models = (\n  dict(title=\"Blog Posts\",\n    query=lambda tag : TaggedItem.objects.get_by_model(Post, tag).filter(status=2),\n  ),\n  dict(title=\"Bookmarks\",\n    query=lambda tag : TaggedItem.objects.get_by_model(BookmarkInstance, tag),\n  ),\n  dict(title=\"Photos\",\n    query=lambda tag: TaggedItem.objects.get_by_model(Image, tag).filter(safetylevel=1),\n  ),\n)\n\ntagging_ext_kwargs = {\n  'tagged_models':tagged_models,\n  # You can add your own special template to be the default\n  #'default_template':'custom_templates/special.html'\n}\n\nurlpatterns += patterns('',\n  url(r'^tags/(?P&lt;tag&gt;.+)/(?P&lt;model&gt;.+)$', 'tagging_ext.views.tag_by_model',\n        kwargs=tagging_ext_kwargs, name='tagging_ext_tag_by_model'),\n  url(r'^tags/(?P&lt;tag&gt;.+)/$', 'tagging_ext.views.tag',\n        kwargs=tagging_ext_kwargs, name='tagging_ext_tag'),\n  url(r'^tags/$', 'tagging_ext.views.index', name='tagging_ext_index'),\n)\n</pre>\n</div>\n<div id=\"view-rendering-of-pinax-objects-via-root-url-conf\">\n<h3>View rendering of Pinax objects via root url_conf</h3>\n<p>In the pinax project url_conf (urls.py) we use the custom_template field to\nexplicitly tell Django Tagging EXT to fetch views customized for use in\nPinax:</p>\n<pre># django-tagging-ext url definitions\nfrom blog.models import Post\nfrom bookmarks.models import BookmarkInstance\nfrom photos.models import Image\nfrom tagging.models import TaggedItem\n\ntagged_models = (\n  dict(title=\"Blog Posts\",\n    query=lambda tag : TaggedItem.objects.get_by_model(Post, tag).filter(status=2),\n    content_template=\"pinax_tagging_ext/blogs.html\",\n  ),\n  dict(title=\"Bookmarks\",\n    query=lambda tag : TaggedItem.objects.get_by_model(BookmarkInstance, tag),\n    content_template=\"pinax_tagging_ext/bookmarks.html\",\n  ),\n  dict(title=\"Photos\",\n    query=lambda tag: TaggedItem.objects.get_by_model(Image, tag).filter(safetylevel=1),\n    content_template=\"pinax_tagging_ext/photos.html\",\n  ),\n)\n\ntagging_ext_kwargs = {\n  'tagged_models':tagged_models,\n  # You can add your own special template to be the default\n  #'default_template':'custom_templates/special.html'\n}\n\nurlpatterns += patterns('',\n  url(r'^tags/(?P&lt;tag&gt;.+)/(?P&lt;model&gt;.+)$', 'tagging_ext.views.tag_by_model',\n        kwargs=tagging_ext_kwargs, name='tagging_ext_tag_by_model'),\n  url(r'^tags/(?P&lt;tag&gt;.+)/$', 'tagging_ext.views.tag',\n        kwargs=tagging_ext_kwargs, name='tagging_ext_tag'),\n  url(r'^tags/$', 'tagging_ext.views.index', name='tagging_ext_index'),\n)\n</pre>\n</div>\n<div id=\"running-tests-from-within-your-pinax-project\">\n<h3>Running tests from within your Pinax project</h3>\n<blockquote>\n$ pinax-admin setup_project -b social my_pinax_project\n$ cd my_pinax_project\n$ python manage.py test tagging_ext</blockquote>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1041455, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "17b9d490249e07efe1d00e45ea1913b2", "sha256": "cc983911c7147aafd31f3d3c819472d4c502bf9d4bbbd4d9d92a0856d2485090"}, "downloads": -1, "filename": "django-tagging-ext-0.1.0.tar.gz", "has_sig": false, "md5_digest": "17b9d490249e07efe1d00e45ea1913b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11653, "upload_time": "2009-09-12T23:16:09", "upload_time_iso_8601": "2009-09-12T23:16:09.433917Z", "url": "https://files.pythonhosted.org/packages/b8/09/681e8645cb167226a412d0fa8e958f3a849a0c2c23a1c011fcd781ff9be6/django-tagging-ext-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d144161a6f625429b8ff5d586bd208d0", "sha256": "e0726e0d07806a3a336176cf0938f3141b8208c9423dfb98533c8f889c833d69"}, "downloads": -1, "filename": "django-tagging-ext-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d144161a6f625429b8ff5d586bd208d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11326, "upload_time": "2010-02-22T17:42:55", "upload_time_iso_8601": "2010-02-22T17:42:55.383036Z", "url": "https://files.pythonhosted.org/packages/fa/07/475b06cc51ee531d7cb6b4050e513fdfee649d30fc6b0e09610886717ef3/django-tagging-ext-0.2.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "3dc4d3a95e7542754d3e8c9d48b21bf4", "sha256": "a54c59678fb7bf9b38d529adb537912e5e02f0924b383e719799199230dff478"}, "downloads": -1, "filename": "django-tagging-ext-0.3.1.tar.gz", "has_sig": false, "md5_digest": "3dc4d3a95e7542754d3e8c9d48b21bf4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14265, "upload_time": "2011-01-06T18:39:03", "upload_time_iso_8601": "2011-01-06T18:39:03.362279Z", "url": "https://files.pythonhosted.org/packages/1a/1d/c1d27a9e3e4093ce480d933b788a9b20af3e8d5da71a45a80d1b2f71f17f/django-tagging-ext-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "8d89597307d17f89979881b9023c7380", "sha256": "07e67b5bf88b22209494d21fb1130291c1f06f39cfa68ec9e5835687395122b9"}, "downloads": -1, "filename": "django-tagging-ext-0.3.2.tar.gz", "has_sig": false, "md5_digest": "8d89597307d17f89979881b9023c7380", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14337, "upload_time": "2011-05-03T17:47:43", "upload_time_iso_8601": "2011-05-03T17:47:43.206761Z", "url": "https://files.pythonhosted.org/packages/5f/2b/185c2f00d4dcf2eb89c1acc1fdf942a92461c7b405185223814a24666996/django-tagging-ext-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "0f13ac05ba589aa812478dc291a62aca", "sha256": "2eac5d262300e8020a2da5e16b5df71349a37615d6e4a5ed1eb2fbd167cf6be7"}, "downloads": -1, "filename": "django-tagging-ext-0.3.3.tar.gz", "has_sig": false, "md5_digest": "0f13ac05ba589aa812478dc291a62aca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14377, "upload_time": "2011-05-03T17:49:24", "upload_time_iso_8601": "2011-05-03T17:49:24.057600Z", "url": "https://files.pythonhosted.org/packages/d4/ba/e0acadb9a6d29e469025edb0b63bd9f42357534490c7617f7327973d3f4e/django-tagging-ext-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "80dd3f9cef185405a327a40286a0a1d1", "sha256": "7515c03050df4f45f55e0689dc98998d33a20b9f146f18980ecff9b6f3e00000"}, "downloads": -1, "filename": "django-tagging-ext-0.3.4.tar.gz", "has_sig": false, "md5_digest": "80dd3f9cef185405a327a40286a0a1d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14356, "upload_time": "2011-05-03T17:53:10", "upload_time_iso_8601": "2011-05-03T17:53:10.516266Z", "url": "https://files.pythonhosted.org/packages/6b/cc/6099f86af99c238879f730dd1189d036e292c18945e7ffdb2fd46b0c69a3/django-tagging-ext-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "6ad988af6349654c15cd724c9d260ad9", "sha256": "026004b5a1fa631075ebfb1ff16b2ae1b723ecd4f94da24ff97c22e945b82429"}, "downloads": -1, "filename": "django-tagging-ext-0.3.5.tar.gz", "has_sig": false, "md5_digest": "6ad988af6349654c15cd724c9d260ad9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14385, "upload_time": "2011-05-05T21:24:39", "upload_time_iso_8601": "2011-05-05T21:24:39.467904Z", "url": "https://files.pythonhosted.org/packages/ae/f7/090b6d22be103d0566625253a42d470cb52451acde723653de6b8c6f1cd7/django-tagging-ext-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "481c78078c0b161cee27c2aa9cfdd6b5", "sha256": "f56d834b8cdc3bbba6211dc5a6c0e264f70c799c9914395ac9449eab4997df12"}, "downloads": -1, "filename": "django-tagging-ext-0.3.6.tar.gz", "has_sig": false, "md5_digest": "481c78078c0b161cee27c2aa9cfdd6b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9782, "upload_time": "2014-03-26T01:57:43", "upload_time_iso_8601": "2014-03-26T01:57:43.292708Z", "url": "https://files.pythonhosted.org/packages/a3/7c/fdf67c2d8815f2248b6a352d7254f2ed4b574d17640bb32152597e41ce66/django-tagging-ext-0.3.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "481c78078c0b161cee27c2aa9cfdd6b5", "sha256": "f56d834b8cdc3bbba6211dc5a6c0e264f70c799c9914395ac9449eab4997df12"}, "downloads": -1, "filename": "django-tagging-ext-0.3.6.tar.gz", "has_sig": false, "md5_digest": "481c78078c0b161cee27c2aa9cfdd6b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9782, "upload_time": "2014-03-26T01:57:43", "upload_time_iso_8601": "2014-03-26T01:57:43.292708Z", "url": "https://files.pythonhosted.org/packages/a3/7c/fdf67c2d8815f2248b6a352d7254f2ed4b574d17640bb32152597e41ce66/django-tagging-ext-0.3.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:43 2020"}