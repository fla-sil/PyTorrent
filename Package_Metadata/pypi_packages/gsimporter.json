{"info": {"author": "Ian Schneider", "author_email": "ischneider@opengeo.org", "bugtrack_url": null, "classifiers": [], "description": "gsimporter\n==========\n\n.. image:: https://travis-ci.org/boundlessgeo/gsimporter.svg?branch=master\n    :target: https://travis-ci.org/boundlessgeo/gsimporter\n\ngsimporter is a python library for using GeoServer's importer API.\n\nInstalling\n==========\n\npip install gsconfig\n\nor\n\ngit clone https://github.com/boundlessgeo/gsimporter.git\ncd gsimporter\npip install .\n\nGetting Help\n============\n\nPlease use the Github project at http://github.com/boundlessgeo/gsimporter for any bug reports (and pull requests are welcome, but please include tests where possible.)\n\nRunning Tests\n=============\n\nThe tests are integration tests. These require having a running GeoServer instance with the community/importer modules installed. Because some of the tests use a postgres database, a data base is required to run. **It is strongly advised to run with a data directory you don't care about.**\n\nThe test suite will first attempt to verify a connection to GeoServer and a connection to the database. If the default values are not appropriate, provide them via environment variables on the command line or via `export`. For example::\n\n  GEOSERVER_BASE_URL=http://localhost:8080 python setup.py test\n\nA convenient way to deal with connection or other settings (besides setting things up to use the defaults) is to put them all in a bash (or other shell) script.\n\nThe tests are designed to create a workspace named `importer` and `importer2` for use in testing. `importer` will be set to the default workspace. As much as possible, things are cleaned up after test execution.\n\nTo run all of the tests, one way is via `setup.py`. `python setup.py test` should do the trick.\n\nIf developing and finer grained control is desired, specific tests and other flags can be provided using `python test/uploadtests.py`. Supported arguments are:\n\n* **--clean** delete layers and stores in the test workspaces. useful for cleanup.\n* **--skip-teardown** don't delete things after running. may cause errors but useful for a single test.\n\nTo run a single case (or drop the method name to run the whole class)::\n\n  python test/uploadtests.py ErrorTests.test_invalid_file\n\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/opengeo/gsimporter", "keywords": "GeoServer Importer", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "gsimporter", "package_url": "https://pypi.org/project/gsimporter/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gsimporter/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/opengeo/gsimporter"}, "release_url": "https://pypi.org/project/gsimporter/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "GeoServer Importer Client", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"gsimporter\">\n<h2>gsimporter</h2>\n<a href=\"https://travis-ci.org/boundlessgeo/gsimporter\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/boundlessgeo/gsimporter.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ff8d95657a7033bc314749f02c0fcb9190734d4d/68747470733a2f2f7472617669732d63692e6f72672f626f756e646c65737367656f2f6773696d706f727465722e7376673f6272616e63683d6d6173746572\"></a>\n<p>gsimporter is a python library for using GeoServer\u2019s importer API.</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>pip install gsconfig</p>\n<p>or</p>\n<p>git clone <a href=\"https://github.com/boundlessgeo/gsimporter.git\" rel=\"nofollow\">https://github.com/boundlessgeo/gsimporter.git</a>\ncd gsimporter\npip install .</p>\n</div>\n<div id=\"getting-help\">\n<h2>Getting Help</h2>\n<p>Please use the Github project at <a href=\"http://github.com/boundlessgeo/gsimporter\" rel=\"nofollow\">http://github.com/boundlessgeo/gsimporter</a> for any bug reports (and pull requests are welcome, but please include tests where possible.)</p>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<p>The tests are integration tests. These require having a running GeoServer instance with the community/importer modules installed. Because some of the tests use a postgres database, a data base is required to run. <strong>It is strongly advised to run with a data directory you don\u2019t care about.</strong></p>\n<p>The test suite will first attempt to verify a connection to GeoServer and a connection to the database. If the default values are not appropriate, provide them via environment variables on the command line or via <cite>export</cite>. For example:</p>\n<pre>GEOSERVER_BASE_URL=http://localhost:8080 python setup.py test\n</pre>\n<p>A convenient way to deal with connection or other settings (besides setting things up to use the defaults) is to put them all in a bash (or other shell) script.</p>\n<p>The tests are designed to create a workspace named <cite>importer</cite> and <cite>importer2</cite> for use in testing. <cite>importer</cite> will be set to the default workspace. As much as possible, things are cleaned up after test execution.</p>\n<p>To run all of the tests, one way is via <cite>setup.py</cite>. <cite>python setup.py test</cite> should do the trick.</p>\n<p>If developing and finer grained control is desired, specific tests and other flags can be provided using <cite>python test/uploadtests.py</cite>. Supported arguments are:</p>\n<ul>\n<li><strong>\u2013clean</strong> delete layers and stores in the test workspaces. useful for cleanup.</li>\n<li><strong>\u2013skip-teardown</strong> don\u2019t delete things after running. may cause errors but useful for a single test.</li>\n</ul>\n<p>To run a single case (or drop the method name to run the whole class):</p>\n<pre>python test/uploadtests.py ErrorTests.test_invalid_file\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1742883, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7ffbae4b17b830e0b2485ef4ea8ed7e6", "sha256": "d6c0e0615f9ec719b2a833bb343b08a97da47e5ff61fcb0d64aa93760b8426c4"}, "downloads": -1, "filename": "gsimporter-0.1.tar.gz", "has_sig": false, "md5_digest": "7ffbae4b17b830e0b2485ef4ea8ed7e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7750, "upload_time": "2014-04-11T12:31:46", "upload_time_iso_8601": "2014-04-11T12:31:46.870953Z", "url": "https://files.pythonhosted.org/packages/9d/36/8d8b55ce6e0985c166a909edc95213ce5c14bec040746080c5fe837f3d21/gsimporter-0.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "edf8604030c08c03c46d21a5ece32c6e", "sha256": "47f2222d9120732f2d88bfe7eac25833feda9390a582596565be98a0181f4d95"}, "downloads": -1, "filename": "gsimporter-1.0.0.tar.gz", "has_sig": false, "md5_digest": "edf8604030c08c03c46d21a5ece32c6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9208, "upload_time": "2015-09-28T21:41:06", "upload_time_iso_8601": "2015-09-28T21:41:06.503571Z", "url": "https://files.pythonhosted.org/packages/1e/2c/a421996da2dbf75e97df1ed77818d6e56705eeea02494429d265804d1878/gsimporter-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "edf8604030c08c03c46d21a5ece32c6e", "sha256": "47f2222d9120732f2d88bfe7eac25833feda9390a582596565be98a0181f4d95"}, "downloads": -1, "filename": "gsimporter-1.0.0.tar.gz", "has_sig": false, "md5_digest": "edf8604030c08c03c46d21a5ece32c6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9208, "upload_time": "2015-09-28T21:41:06", "upload_time_iso_8601": "2015-09-28T21:41:06.503571Z", "url": "https://files.pythonhosted.org/packages/1e/2c/a421996da2dbf75e97df1ed77818d6e56705eeea02494429d265804d1878/gsimporter-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:40 2020"}