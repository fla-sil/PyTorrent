{"info": {"author": "Pascal Eng\u00e9libert", "author_email": "tuxmain@zettascript.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Affero General Public License v3", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Security :: Cryptography"], "description": "# Py-PKSTL\n\nPython 3 bindings for [Rust PKSTL](https://github.com/librelois/pkstl). PKSTL is a security layer for network connections (public key cryptography & Diffie-Hellman secret generation).\n\n## Install\n\n\tsudo pip3 install pkstl\n\n## Build & install\n\n\tsudo pip3 install --upgrade setuptools wheel\n\tsh build_wheel.sh\n\tsudo pip3 install target/wheel/dist/pkstl-*-py3-none-any.whl\n\n## Example\n\nRun an example (client-server echo):\n\n\tpython3 py/example_echo.py server\n\tpython3 py/example_echo.py client\n\t# and type some text into the client!\n\nMinimal example code: (Bob knows Alice's public key and contacts her)\n\n\timport pkstl\n\n\t# Generate keypairs\n\talice_seed = pkstl.Seed32.random() # Alice's permanent private key\n\talice_pubkey = pkstl.Ed25519KeyPair.from_seed_unchecked(alice_seed.bytes).pubkey\n\tbob_seed = pkstl.Seed32.random() # Bob's ephemeral private key\n\talice_msl = pkstl.SecureLayer.create(pkstl.SecureLayerConfig.default(), alice_seed)\n\tbob_msl = pkstl.SecureLayer.create(pkstl.SecureLayerConfig.default(), bob_seed, alice_pubkey)\n\n\t# Establish connection\n\tmsg = bob_msl.write_connect_msg_bin(b\"Hello Alice!\")\n\talice_msl.read_bin(msg)\n\n\tmsg = alice_msl.write_connect_msg_bin(b\"Hello Bob!\")\n\tbob_msl.read_bin(msg)\n\n\tmsg = alice_msl.write_ack_msg_bin(b\"Nice to meet you Bob!\")\n\tbob_msl.read_bin(msg)\n\n\tmsg = bob_msl.write_ack_msg_bin(b\"Nice to meet you Alice!\")\n\talice_msl.read_bin(msg)\n\n\t# Send messages\n\tmsg = alice_msl.write_bin(b\"Is this channel encrypted?\")\n\tprint(bob_msl.read_bin(msg)[0].data[0])\n\n\tmsg = bob_msl.write_bin(b\"Yes it is.\")\n\tprint(alice_msl.read_bin(msg)[0].data[0])\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://git.duniter.org/tools/py-pkstl", "keywords": "security network transport cryptography", "license": "", "maintainer": "", "maintainer_email": "", "name": "pkstl", "package_url": "https://pypi.org/project/pkstl/", "platform": "", "project_url": "https://pypi.org/project/pkstl/", "project_urls": {"Homepage": "https://git.duniter.org/tools/py-pkstl"}, "release_url": "https://pypi.org/project/pkstl/0.1.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Public key secure transport layer", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Py-PKSTL</h1>\n<p>Python 3 bindings for <a href=\"https://github.com/librelois/pkstl\" rel=\"nofollow\">Rust PKSTL</a>. PKSTL is a security layer for network connections (public key cryptography &amp; Diffie-Hellman secret generation).</p>\n<h2>Install</h2>\n<pre><code>sudo pip3 install pkstl\n</code></pre>\n<h2>Build &amp; install</h2>\n<pre><code>sudo pip3 install --upgrade setuptools wheel\nsh build_wheel.sh\nsudo pip3 install target/wheel/dist/pkstl-*-py3-none-any.whl\n</code></pre>\n<h2>Example</h2>\n<p>Run an example (client-server echo):</p>\n<pre><code>python3 py/example_echo.py server\npython3 py/example_echo.py client\n# and type some text into the client!\n</code></pre>\n<p>Minimal example code: (Bob knows Alice's public key and contacts her)</p>\n<pre><code>import pkstl\n\n# Generate keypairs\nalice_seed = pkstl.Seed32.random() # Alice's permanent private key\nalice_pubkey = pkstl.Ed25519KeyPair.from_seed_unchecked(alice_seed.bytes).pubkey\nbob_seed = pkstl.Seed32.random() # Bob's ephemeral private key\nalice_msl = pkstl.SecureLayer.create(pkstl.SecureLayerConfig.default(), alice_seed)\nbob_msl = pkstl.SecureLayer.create(pkstl.SecureLayerConfig.default(), bob_seed, alice_pubkey)\n\n# Establish connection\nmsg = bob_msl.write_connect_msg_bin(b\"Hello Alice!\")\nalice_msl.read_bin(msg)\n\nmsg = alice_msl.write_connect_msg_bin(b\"Hello Bob!\")\nbob_msl.read_bin(msg)\n\nmsg = alice_msl.write_ack_msg_bin(b\"Nice to meet you Bob!\")\nbob_msl.read_bin(msg)\n\nmsg = bob_msl.write_ack_msg_bin(b\"Nice to meet you Alice!\")\nalice_msl.read_bin(msg)\n\n# Send messages\nmsg = alice_msl.write_bin(b\"Is this channel encrypted?\")\nprint(bob_msl.read_bin(msg)[0].data[0])\n\nmsg = bob_msl.write_bin(b\"Yes it is.\")\nprint(alice_msl.read_bin(msg)[0].data[0])\n</code></pre>\n\n          </div>"}, "last_serial": 6762019, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d4b74da25ddf6c3e9f2f56b2cd7e36fc", "sha256": "9d9600828ada744ebb87c4a0fa89396783c20e921a6e2a1af64b31b932450257"}, "downloads": -1, "filename": "pkstl-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d4b74da25ddf6c3e9f2f56b2cd7e36fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 1042535, "upload_time": "2020-03-06T13:42:04", "upload_time_iso_8601": "2020-03-06T13:42:04.606285Z", "url": "https://files.pythonhosted.org/packages/fe/20/abc21126fe06ef1a58028b5484a1e463ae9acc3ab89b2eb57091f6e22bdf/pkstl-0.1.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d4b74da25ddf6c3e9f2f56b2cd7e36fc", "sha256": "9d9600828ada744ebb87c4a0fa89396783c20e921a6e2a1af64b31b932450257"}, "downloads": -1, "filename": "pkstl-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d4b74da25ddf6c3e9f2f56b2cd7e36fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 1042535, "upload_time": "2020-03-06T13:42:04", "upload_time_iso_8601": "2020-03-06T13:42:04.606285Z", "url": "https://files.pythonhosted.org/packages/fe/20/abc21126fe06ef1a58028b5484a1e463ae9acc3ab89b2eb57091f6e22bdf/pkstl-0.1.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:53:47 2020"}