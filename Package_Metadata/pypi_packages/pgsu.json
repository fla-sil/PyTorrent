{"info": {"author": "AiiDA Team", "author_email": "aiidateam@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "[![Build Status](https://github.com/aiidateam/pgsu/workflows/ci/badge.svg)](https://github.com/aiidateam/pgsu/actions)\n[![Coverage Status](https://codecov.io/gh/aiidateam/pgsu/branch/master/graph/badge.svg)](https://codecov.io/gh/aiidateam/pgsu)\n[![PyPI version](https://badge.fury.io/py/pgsu.svg)](https://badge.fury.io/py/pgsu)\n[![GitHub license](https://img.shields.io/badge/License-MIT-blue.svg)](https://github.com/aiidateam/pgsu/blob/master/LICENSE)\n# pgsu\n\nConnect to an existing PostgreSQL cluster as a PostgreSQL [SUPERUSER](https://www.postgresql.org/docs/current/sql-createrole.html) and execute SQL commands.\n\n[`psycopg2`](https://pypi.org/project/psycopg2/) has a great API for interacting with PostgreSQL, once you provide it with the connection parameters for a given database.\nHowever, what if your desired database and database user do not yet exist?\nIn order to create them, you will need to connect to PostgreSQL as a SUPERUSER.\n\n## Features\n\n * autodetects postgres setup, tested on\n   * [Ubuntu 18.04](https://github.com/actions/virtual-environments/blob/master/images/linux/Ubuntu1804-README.md) & PostgreSQL installed via `apt`\n   * [Ubuntu 18.04](https://github.com/actions/virtual-environments/blob/master/images/linux/Ubuntu1804-README.md) & PostgreSQL docker container\n   * [MacOS 10.15](https://github.com/actions/virtual-environments/blob/master/images/macos/macos-10.15-Readme.md) and PostgreSQL installed via `conda`\n   * [Windows Server 2019](https://github.com/actions/virtual-environments/blob/master/images/win/Windows2019-Readme.md) and PostgreSQL installed via `conda`\n * uses [psycopg2](http://initd.org/psycopg/docs/index.html) to connect if possible\n * can use `sudo` to become the `postgres` UNIX user if necessary/possible (default Ubuntu PostgreSQL setups)\n\n## Usage\n\n### Python API\n```python\nfrom pgsu import PGSU\npgsu = PGSU()  # On Ubuntu, this may prompt for sudo password\npgsu.execute(\"CREATE USER newuser WITH PASSWORD 'newpassword'\")\nusers = pgsu.execute(\"SELECT usename FROM pg_user WHERE usename='newuser'\")\nprint(users)\n```\n\nWhile the main point of the package is to *guess* how to connect as a postgres superuser, you can also provide partial or all information abut the setup using the `dsn` parameter.\nThese are the default settings:\n```python\nfrom pgsu import PGSU\npgsu = PGSU(dsn={\n    'host': None,\n    'port': 5432,\n    'user': 'postgres',\n    'password': None,\n    'database': 'template1',  # Note: you cannot drop databases you are connected to\n})\n```\n\n### Command line tool\n\nThe package also comes with a very basic `pgsu` command line tool that allows users to execute PostgreSQL commands as the superuser:\n```\n$ pgsu \"SELECT usename FROM pg_user\"\nTrying to connect to PostgreSQL...\nExecuting query: SELECT usename FROM pg_user\n[('aiida_qs_leopold',),\n ('postgres',)]\n```\n\n## Tests\n\nRun the tests as follows:\n```bash\npip install -e .[testing]\npytest\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aiidateam/pgsu", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pgsu", "package_url": "https://pypi.org/project/pgsu/", "platform": "", "project_url": "https://pypi.org/project/pgsu/", "project_urls": {"Homepage": "https://github.com/aiidateam/pgsu"}, "release_url": "https://pypi.org/project/pgsu/0.1.0/", "requires_dist": ["psycopg2-binary (>=2.8.3)", "click", "enum34 ; python_version < \"3.5\"", "pre-commit (==1.18.3) ; extra == 'pre-commit'", "yapf (==0.28.0) ; extra == 'pre-commit'", "prospector (==1.2.0) ; extra == 'pre-commit'", "pylint (==2.4.4) ; extra == 'pre-commit'", "pytest ; extra == 'testing'", "pgtest (>=1.3.1) ; extra == 'testing'", "pytest-cov ; extra == 'testing'"], "requires_python": "", "summary": "Connect to an existing PostgreSQL cluster as a postgres superuser and execute SQL commands.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/aiidateam/pgsu/actions\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/38e36bfdf3fa19a3549e1e596babaaa6cd10c2bb/68747470733a2f2f6769746875622e636f6d2f61696964617465616d2f706773752f776f726b666c6f77732f63692f62616467652e737667\"></a>\n<a href=\"https://codecov.io/gh/aiidateam/pgsu\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12b8c4b9d8badddf0689f191e56ed6573f6d9932/68747470733a2f2f636f6465636f762e696f2f67682f61696964617465616d2f706773752f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://badge.fury.io/py/pgsu\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eed3be83084f69dcef686515d44e3bc819b6f757/68747470733a2f2f62616467652e667572792e696f2f70792f706773752e737667\"></a>\n<a href=\"https://github.com/aiidateam/pgsu/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4150014b4dfdd7b565fa18de88e9bb1b8ccd7c08/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e737667\"></a></p>\n<h1>pgsu</h1>\n<p>Connect to an existing PostgreSQL cluster as a PostgreSQL <a href=\"https://www.postgresql.org/docs/current/sql-createrole.html\" rel=\"nofollow\">SUPERUSER</a> and execute SQL commands.</p>\n<p><a href=\"https://pypi.org/project/psycopg2/\" rel=\"nofollow\"><code>psycopg2</code></a> has a great API for interacting with PostgreSQL, once you provide it with the connection parameters for a given database.\nHowever, what if your desired database and database user do not yet exist?\nIn order to create them, you will need to connect to PostgreSQL as a SUPERUSER.</p>\n<h2>Features</h2>\n<ul>\n<li>autodetects postgres setup, tested on\n<ul>\n<li><a href=\"https://github.com/actions/virtual-environments/blob/master/images/linux/Ubuntu1804-README.md\" rel=\"nofollow\">Ubuntu 18.04</a> &amp; PostgreSQL installed via <code>apt</code></li>\n<li><a href=\"https://github.com/actions/virtual-environments/blob/master/images/linux/Ubuntu1804-README.md\" rel=\"nofollow\">Ubuntu 18.04</a> &amp; PostgreSQL docker container</li>\n<li><a href=\"https://github.com/actions/virtual-environments/blob/master/images/macos/macos-10.15-Readme.md\" rel=\"nofollow\">MacOS 10.15</a> and PostgreSQL installed via <code>conda</code></li>\n<li><a href=\"https://github.com/actions/virtual-environments/blob/master/images/win/Windows2019-Readme.md\" rel=\"nofollow\">Windows Server 2019</a> and PostgreSQL installed via <code>conda</code></li>\n</ul>\n</li>\n<li>uses <a href=\"http://initd.org/psycopg/docs/index.html\" rel=\"nofollow\">psycopg2</a> to connect if possible</li>\n<li>can use <code>sudo</code> to become the <code>postgres</code> UNIX user if necessary/possible (default Ubuntu PostgreSQL setups)</li>\n</ul>\n<h2>Usage</h2>\n<h3>Python API</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pgsu</span> <span class=\"kn\">import</span> <span class=\"n\">PGSU</span>\n<span class=\"n\">pgsu</span> <span class=\"o\">=</span> <span class=\"n\">PGSU</span><span class=\"p\">()</span>  <span class=\"c1\"># On Ubuntu, this may prompt for sudo password</span>\n<span class=\"n\">pgsu</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s2\">\"CREATE USER newuser WITH PASSWORD 'newpassword'\"</span><span class=\"p\">)</span>\n<span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"n\">pgsu</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s2\">\"SELECT usename FROM pg_user WHERE usename='newuser'\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">users</span><span class=\"p\">)</span>\n</pre>\n<p>While the main point of the package is to <em>guess</em> how to connect as a postgres superuser, you can also provide partial or all information abut the setup using the <code>dsn</code> parameter.\nThese are the default settings:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pgsu</span> <span class=\"kn\">import</span> <span class=\"n\">PGSU</span>\n<span class=\"n\">pgsu</span> <span class=\"o\">=</span> <span class=\"n\">PGSU</span><span class=\"p\">(</span><span class=\"n\">dsn</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s1\">'host'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"s1\">'port'</span><span class=\"p\">:</span> <span class=\"mi\">5432</span><span class=\"p\">,</span>\n    <span class=\"s1\">'user'</span><span class=\"p\">:</span> <span class=\"s1\">'postgres'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'password'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"s1\">'database'</span><span class=\"p\">:</span> <span class=\"s1\">'template1'</span><span class=\"p\">,</span>  <span class=\"c1\"># Note: you cannot drop databases you are connected to</span>\n<span class=\"p\">})</span>\n</pre>\n<h3>Command line tool</h3>\n<p>The package also comes with a very basic <code>pgsu</code> command line tool that allows users to execute PostgreSQL commands as the superuser:</p>\n<pre><code>$ pgsu \"SELECT usename FROM pg_user\"\nTrying to connect to PostgreSQL...\nExecuting query: SELECT usename FROM pg_user\n[('aiida_qs_leopold',),\n ('postgres',)]\n</code></pre>\n<h2>Tests</h2>\n<p>Run the tests as follows:</p>\n<pre>pip install -e .<span class=\"o\">[</span>testing<span class=\"o\">]</span>\npytest\n</pre>\n\n          </div>"}, "last_serial": 6957130, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "bdc6770bd46d7f693d7338996377238a", "sha256": "9ddd16cccd3f6d17b4b787ceae624f6f4d064d87482fe425327a93b6ae88d002"}, "downloads": -1, "filename": "pgsu-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bdc6770bd46d7f693d7338996377238a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8509, "upload_time": "2020-04-05T18:27:06", "upload_time_iso_8601": "2020-04-05T18:27:06.618221Z", "url": "https://files.pythonhosted.org/packages/dc/57/7d51e20b4dc3c71f4d8336b132f8b5d852fbad8a3b2a457c14a2e34dee10/pgsu-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a333ceb498d79c4a42d880c1050c2885", "sha256": "af33bc917b26cede741f53953f54e5cef9d6428bd56a68f37198ac7879e99e83"}, "downloads": -1, "filename": "pgsu-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a333ceb498d79c4a42d880c1050c2885", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7945, "upload_time": "2020-04-05T18:27:08", "upload_time_iso_8601": "2020-04-05T18:27:08.970341Z", "url": "https://files.pythonhosted.org/packages/81/d5/62443d08c2f639dc8f28b16646ac631ab9ce872734a586eb729edc70dda7/pgsu-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bdc6770bd46d7f693d7338996377238a", "sha256": "9ddd16cccd3f6d17b4b787ceae624f6f4d064d87482fe425327a93b6ae88d002"}, "downloads": -1, "filename": "pgsu-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bdc6770bd46d7f693d7338996377238a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8509, "upload_time": "2020-04-05T18:27:06", "upload_time_iso_8601": "2020-04-05T18:27:06.618221Z", "url": "https://files.pythonhosted.org/packages/dc/57/7d51e20b4dc3c71f4d8336b132f8b5d852fbad8a3b2a457c14a2e34dee10/pgsu-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a333ceb498d79c4a42d880c1050c2885", "sha256": "af33bc917b26cede741f53953f54e5cef9d6428bd56a68f37198ac7879e99e83"}, "downloads": -1, "filename": "pgsu-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a333ceb498d79c4a42d880c1050c2885", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7945, "upload_time": "2020-04-05T18:27:08", "upload_time_iso_8601": "2020-04-05T18:27:08.970341Z", "url": "https://files.pythonhosted.org/packages/81/d5/62443d08c2f639dc8f28b16646ac631ab9ce872734a586eb729edc70dda7/pgsu-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:41 2020"}