{"info": {"author": "Theodore L Caputi", "author_email": "tcaputi@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# cdcwonderpy: Use Python3 and Selenium to automatically complete the CDC WONDER Online Form\n\n## Disclaimer\nThis project is a work-in-progress. It works in some cases but may not work in many others (and may not be flexible enough for some users), and some extra code exists for functions that are not yet operational. This program has only been tested in Windows 10.\n\n\n## Description\nThe CDC's WONDER API does not allow users to collect subnational data -- users have to use the [online form](https://wonder.cdc.gov/mcd-icd10.html). This package automates that form. Note that this is still a work in progress.\n\nThis package is intended to be used with the R package [\"wondeR\"](https://www.github.com/tlcaputi/wondeR).\n\n## Installation\n\nTo use this package, you'll need to have Selenium set up for Chrome. This means you need to have Chrome, Chromedriver, and Selenium.\n\n```\n$ pip install cdcwonderpy\n```\n\n\n## Usage\n\n```python\nfrom cdcwonderpy.pulldata import wonder\n\nwonder(\n  ## wonderpy arguments\n  RUN_NAME = \"opioids\", # Name of the run\n  download_dir = \"/path/to/downloads/folder\", # Where to download the data\n  existing_file = False, # True if the data file already exists on your local computer\n\n  ## You want deaths matching the following ICD Codes\n  MCD_CAUSE_CODE_1 = [\"A10\", \"A20\"], # Deaths that include ANY of these ICD Codes\n  MCD_CAUSE_CODE_2 = [\"A12\", \"A22\"], # ...and ANY of these ICD Codes\n\n  ## Group the deaths by these variables\n  by_variables = [\"sex\", \"age\"], # Any of the following: \"sex\", \"age\", \"race\", \"hispanic\", \"state\", \"year\", \"month\"\n\n  ## Only collect data of the following (None if all)\n  AGEG = None, # age group\n  GENDERG = None, # gender\n  RACEG = None, # race\n  HISPANICG = None, # hispanic status\n\n  ## Other\n  just_go = False # For use with more further and undeveloped cases. Keep as False.\n)\n\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tlcaputi/cdcwonderpy", "keywords": "", "license": "No License", "maintainer": "", "maintainer_email": "", "name": "cdcwonderpy", "package_url": "https://pypi.org/project/cdcwonderpy/", "platform": "", "project_url": "https://pypi.org/project/cdcwonderpy/", "project_urls": {"Homepage": "https://github.com/tlcaputi/cdcwonderpy"}, "release_url": "https://pypi.org/project/cdcwonderpy/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "A Python package to automatically fill out the CDC WONDER MCD form", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>cdcwonderpy: Use Python3 and Selenium to automatically complete the CDC WONDER Online Form</h1>\n<h2>Disclaimer</h2>\n<p>This project is a work-in-progress. It works in some cases but may not work in many others (and may not be flexible enough for some users), and some extra code exists for functions that are not yet operational. This program has only been tested in Windows 10.</p>\n<h2>Description</h2>\n<p>The CDC's WONDER API does not allow users to collect subnational data -- users have to use the <a href=\"https://wonder.cdc.gov/mcd-icd10.html\" rel=\"nofollow\">online form</a>. This package automates that form. Note that this is still a work in progress.</p>\n<p>This package is intended to be used with the R package <a href=\"https://www.github.com/tlcaputi/wondeR\" rel=\"nofollow\">\"wondeR\"</a>.</p>\n<h2>Installation</h2>\n<p>To use this package, you'll need to have Selenium set up for Chrome. This means you need to have Chrome, Chromedriver, and Selenium.</p>\n<pre><code>$ pip install cdcwonderpy\n</code></pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cdcwonderpy.pulldata</span> <span class=\"kn\">import</span> <span class=\"n\">wonder</span>\n\n<span class=\"n\">wonder</span><span class=\"p\">(</span>\n  <span class=\"c1\">## wonderpy arguments</span>\n  <span class=\"n\">RUN_NAME</span> <span class=\"o\">=</span> <span class=\"s2\">\"opioids\"</span><span class=\"p\">,</span> <span class=\"c1\"># Name of the run</span>\n  <span class=\"n\">download_dir</span> <span class=\"o\">=</span> <span class=\"s2\">\"/path/to/downloads/folder\"</span><span class=\"p\">,</span> <span class=\"c1\"># Where to download the data</span>\n  <span class=\"n\">existing_file</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"c1\"># True if the data file already exists on your local computer</span>\n\n  <span class=\"c1\">## You want deaths matching the following ICD Codes</span>\n  <span class=\"n\">MCD_CAUSE_CODE_1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"A10\"</span><span class=\"p\">,</span> <span class=\"s2\">\"A20\"</span><span class=\"p\">],</span> <span class=\"c1\"># Deaths that include ANY of these ICD Codes</span>\n  <span class=\"n\">MCD_CAUSE_CODE_2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"A12\"</span><span class=\"p\">,</span> <span class=\"s2\">\"A22\"</span><span class=\"p\">],</span> <span class=\"c1\"># ...and ANY of these ICD Codes</span>\n\n  <span class=\"c1\">## Group the deaths by these variables</span>\n  <span class=\"n\">by_variables</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"sex\"</span><span class=\"p\">,</span> <span class=\"s2\">\"age\"</span><span class=\"p\">],</span> <span class=\"c1\"># Any of the following: \"sex\", \"age\", \"race\", \"hispanic\", \"state\", \"year\", \"month\"</span>\n\n  <span class=\"c1\">## Only collect data of the following (None if all)</span>\n  <span class=\"n\">AGEG</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"c1\"># age group</span>\n  <span class=\"n\">GENDERG</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"c1\"># gender</span>\n  <span class=\"n\">RACEG</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"c1\"># race</span>\n  <span class=\"n\">HISPANICG</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"c1\"># hispanic status</span>\n\n  <span class=\"c1\">## Other</span>\n  <span class=\"n\">just_go</span> <span class=\"o\">=</span> <span class=\"kc\">False</span> <span class=\"c1\"># For use with more further and undeveloped cases. Keep as False.</span>\n<span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6980070, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f99a7a319fd04ed636149731f62502e9", "sha256": "ef95dc6f014fa355b4b6625df66928efaea14863ea3738f9c7d6f6df656bb5c8"}, "downloads": -1, "filename": "cdcwonderpy-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f99a7a319fd04ed636149731f62502e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12525, "upload_time": "2020-04-08T19:27:19", "upload_time_iso_8601": "2020-04-08T19:27:19.515847Z", "url": "https://files.pythonhosted.org/packages/4b/5e/07b2de385089d6cc63e5b21595ef1e70e0c183c16f91421a1a43fead54c1/cdcwonderpy-0.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f99a7a319fd04ed636149731f62502e9", "sha256": "ef95dc6f014fa355b4b6625df66928efaea14863ea3738f9c7d6f6df656bb5c8"}, "downloads": -1, "filename": "cdcwonderpy-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f99a7a319fd04ed636149731f62502e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12525, "upload_time": "2020-04-08T19:27:19", "upload_time_iso_8601": "2020-04-08T19:27:19.515847Z", "url": "https://files.pythonhosted.org/packages/4b/5e/07b2de385089d6cc63e5b21595ef1e70e0c183c16f91421a1a43fead54c1/cdcwonderpy-0.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 22:34:57 2020"}