{"info": {"author": "Bruno Barreto Freitas", "author_email": "brunobarretofreitas@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP"], "description": "![Python application](https://github.com/brunobarretofreitas/django-rest-action-serializer/workflows/Python%20application/badge.svg) [![codecov](https://codecov.io/gh/brunobarretofreitas/django-rest-action-serializer/branch/master/graph/badge.svg)](https://codecov.io/gh/brunobarretofreitas/django-rest-action-serializer)\n\n# django-rest-action-serializer\nA Django app that provides a serializer mixin that allows You to customize the fields according to the action provided without the need to create other serializers.\n\n# Installation\nInstall the package using pip\n\n```python\npip install django-rest-action-serializer\n```\n\n# Quickstart\n\nAs an example, let's suppose You have a ModelViewSet which You need to display different fields in the list action and in the retrieve action. Without django-rest-action-serializer, You would do:\n\n```python\nclass SerializerForList(serializers.ModelSerializer):\n  \n    class Meta:\n        model = User\n        fields = ('url', 'name', 'age')\n    \n\nclass SerializerForDetail(SerializerForList):\n    stories = StorySerializer(many=True, read_only=True)\n    class Meta:\n        model = User\n        fields = ('name', 'age', 'stories', 'email')\n    \n\nclass UserModelViewSet(ModelViewSet):\n    serializer_class = SerializerForList\n    queryset = User.objects.all()\n    \n    def get_serializer_class(self):\n        if self.detail:\n            return SerializerForDetail\n        \n        return super().get_serializer_class()\n```\n\nA lot of code, right? See how It's easy to do it with django-rest-action-serializer\n\n```python\nfrom dra.serializers import ActionSerializer\n\nclass UserSerializer(ActionSerializer,\n                     serializers.ModelSerializer):\n    \n    class Meta:\n        model = User\n        fields = ('url', 'name', 'age',)\n        action_fields_map: {\n            'retrieve': {\n                'fields': fields + (\n                    'email',\n                    ('stories', StorySerializer(read_only=True, many=True))\n                ),\n                'exclude': ('url',)\n            }\n        }\n        \nclass UserModelViewSet(ModelViewSet):\n    serializer_class = SerializerForList\n    queryset = User.objects.all()\n```\n\nSo, all You need to do is to make your serializer class innherit the ActionSerializer from django-rest-action-serializer and set in it's Meta class the **action_fields_map** attribute, with the following structure:\n\n```python\nclass Meta:\n    ...\n    action_fields_map = {\n      '<action name (retrieve, list, delete)>': {\n        'fields': () # All the field you want to display. If You want a custom field, declare it as a Tuple (field name, field type)\n        'exclude': () # All the fields you want to remove from the fields attribute\n      }\n    }\n```\n\n# Contribution\nFeel free to contribute to this project :D Just open an issue or a pull-request", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/brunobarretofreitas/django-rest-action-serializer/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brunobarretofreitas/django-rest-action-serializer", "keywords": "django django-rest-framework api serializer", "license": "", "maintainer": "", "maintainer_email": "", "name": "django-rest-action-serializer", "package_url": "https://pypi.org/project/django-rest-action-serializer/", "platform": "", "project_url": "https://pypi.org/project/django-rest-action-serializer/", "project_urls": {"Download": "https://github.com/brunobarretofreitas/django-rest-action-serializer/archive/master.zip", "Homepage": "https://github.com/brunobarretofreitas/django-rest-action-serializer"}, "release_url": "https://pypi.org/project/django-rest-action-serializer/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "A Django app that provides a serializer mixin that allows You to customize the fieldsaccording to the action provided without the need tocreate other serializers.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Python application\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9700857df2b8a36f83a5209d0cb4df39d3a7c0f/68747470733a2f2f6769746875622e636f6d2f6272756e6f6261727265746f667265697461732f646a616e676f2d726573742d616374696f6e2d73657269616c697a65722f776f726b666c6f77732f507974686f6e2532306170706c69636174696f6e2f62616467652e737667\"> <a href=\"https://codecov.io/gh/brunobarretofreitas/django-rest-action-serializer\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ca886e4f2c0b783325869267b81b09f2977e191/68747470733a2f2f636f6465636f762e696f2f67682f6272756e6f6261727265746f667265697461732f646a616e676f2d726573742d616374696f6e2d73657269616c697a65722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<h1>django-rest-action-serializer</h1>\n<p>A Django app that provides a serializer mixin that allows You to customize the fields according to the action provided without the need to create other serializers.</p>\n<h1>Installation</h1>\n<p>Install the package using pip</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">django</span><span class=\"o\">-</span><span class=\"n\">rest</span><span class=\"o\">-</span><span class=\"n\">action</span><span class=\"o\">-</span><span class=\"n\">serializer</span>\n</pre>\n<h1>Quickstart</h1>\n<p>As an example, let's suppose You have a ModelViewSet which You need to display different fields in the list action and in the retrieve action. Without django-rest-action-serializer, You would do:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">SerializerForList</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n  \n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">User</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'url'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">)</span>\n    \n\n<span class=\"k\">class</span> <span class=\"nc\">SerializerForDetail</span><span class=\"p\">(</span><span class=\"n\">SerializerForList</span><span class=\"p\">):</span>\n    <span class=\"n\">stories</span> <span class=\"o\">=</span> <span class=\"n\">StorySerializer</span><span class=\"p\">(</span><span class=\"n\">many</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">read_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">User</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">,</span> <span class=\"s1\">'stories'</span><span class=\"p\">,</span> <span class=\"s1\">'email'</span><span class=\"p\">)</span>\n    \n\n<span class=\"k\">class</span> <span class=\"nc\">UserModelViewSet</span><span class=\"p\">(</span><span class=\"n\">ModelViewSet</span><span class=\"p\">):</span>\n    <span class=\"n\">serializer_class</span> <span class=\"o\">=</span> <span class=\"n\">SerializerForList</span>\n    <span class=\"n\">queryset</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n    \n    <span class=\"k\">def</span> <span class=\"nf\">get_serializer_class</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">detail</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">SerializerForDetail</span>\n        \n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_serializer_class</span><span class=\"p\">()</span>\n</pre>\n<p>A lot of code, right? See how It's easy to do it with django-rest-action-serializer</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dra.serializers</span> <span class=\"kn\">import</span> <span class=\"n\">ActionSerializer</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">UserSerializer</span><span class=\"p\">(</span><span class=\"n\">ActionSerializer</span><span class=\"p\">,</span>\n                     <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\n    \n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">User</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'url'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">,)</span>\n        <span class=\"n\">action_fields_map</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'retrieve'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'fields'</span><span class=\"p\">:</span> <span class=\"n\">fields</span> <span class=\"o\">+</span> <span class=\"p\">(</span>\n                    <span class=\"s1\">'email'</span><span class=\"p\">,</span>\n                    <span class=\"p\">(</span><span class=\"s1\">'stories'</span><span class=\"p\">,</span> <span class=\"n\">StorySerializer</span><span class=\"p\">(</span><span class=\"n\">read_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">many</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n                <span class=\"p\">),</span>\n                <span class=\"s1\">'exclude'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s1\">'url'</span><span class=\"p\">,)</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n        \n<span class=\"k\">class</span> <span class=\"nc\">UserModelViewSet</span><span class=\"p\">(</span><span class=\"n\">ModelViewSet</span><span class=\"p\">):</span>\n    <span class=\"n\">serializer_class</span> <span class=\"o\">=</span> <span class=\"n\">SerializerForList</span>\n    <span class=\"n\">queryset</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n</pre>\n<p>So, all You need to do is to make your serializer class innherit the ActionSerializer from django-rest-action-serializer and set in it's Meta class the <strong>action_fields_map</strong> attribute, with the following structure:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">action_fields_map</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n      <span class=\"s1\">'&lt;action name (retrieve, list, delete)&gt;'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'fields'</span><span class=\"p\">:</span> <span class=\"p\">()</span> <span class=\"c1\"># All the field you want to display. If You want a custom field, declare it as a Tuple (field name, field type)</span>\n        <span class=\"s1\">'exclude'</span><span class=\"p\">:</span> <span class=\"p\">()</span> <span class=\"c1\"># All the fields you want to remove from the fields attribute</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n</pre>\n<h1>Contribution</h1>\n<p>Feel free to contribute to this project :D Just open an issue or a pull-request</p>\n\n          </div>"}, "last_serial": 6576783, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "2a105b7d174c7d6cc3370d8e82100013", "sha256": "0e7c9b77439c4ee444d0bc73d647cc9cfab8ce599bccbc1004a17c6c1f15e9df"}, "downloads": -1, "filename": "django-rest-action-serializer-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2a105b7d174c7d6cc3370d8e82100013", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5411, "upload_time": "2020-02-02T16:12:43", "upload_time_iso_8601": "2020-02-02T16:12:43.077525Z", "url": "https://files.pythonhosted.org/packages/3b/50/57fa2cd3bc2cf05bf2f4a6a20b85e9f2d69aeb5c9f546690c608613fcbd4/django-rest-action-serializer-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "dcb6734b33bcecd3fd84dc207a3f1019", "sha256": "a88be7f5119ee0e937feeccb70531fae44277a83a2a800d3df29085401e4f8db"}, "downloads": -1, "filename": "django-rest-action-serializer-1.1.0.tar.gz", "has_sig": false, "md5_digest": "dcb6734b33bcecd3fd84dc207a3f1019", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5411, "upload_time": "2020-02-05T16:13:16", "upload_time_iso_8601": "2020-02-05T16:13:16.655310Z", "url": "https://files.pythonhosted.org/packages/58/08/c25770a19b272c2a6da9f4b0207ad175cf9add1731bd1c6518c3f1abb53b/django-rest-action-serializer-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dcb6734b33bcecd3fd84dc207a3f1019", "sha256": "a88be7f5119ee0e937feeccb70531fae44277a83a2a800d3df29085401e4f8db"}, "downloads": -1, "filename": "django-rest-action-serializer-1.1.0.tar.gz", "has_sig": false, "md5_digest": "dcb6734b33bcecd3fd84dc207a3f1019", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5411, "upload_time": "2020-02-05T16:13:16", "upload_time_iso_8601": "2020-02-05T16:13:16.655310Z", "url": "https://files.pythonhosted.org/packages/58/08/c25770a19b272c2a6da9f4b0207ad175cf9add1731bd1c6518c3f1abb53b/django-rest-action-serializer-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:12 2020"}