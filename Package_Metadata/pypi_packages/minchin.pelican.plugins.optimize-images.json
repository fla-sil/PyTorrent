{"info": {"author": "William Minchin", "author_email": "w_minchin@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Pelican :: Plugins", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "===============\nOptimize Images\n===============\n\n``Optimize Images`` is a plugin for\n`Pelican <http://docs.getpelican.com/>`_, a static site generator written\nin Python.\n\n``Optimize Images``  applies lossless compression on JPEG and PNG images,\nwith no effect on image quality. It uses jpegtran_ and OptiPNG_.\n\n\nInstallation\n============\n\nThe easiest way to install ``Optimize Images`` is through the use of pip.\nThis will also install the required Python dependencies automatically\n(currently none beyond Pelican itself).\n\n.. code-block:: sh\n\n  pip install minchin.pelican.plugins.optimize_images\n\nIt is assumed both jpegtran_ and OptiPNG_ are installed on system path.\n\nThen, in your ``pelicanconf.py`` file, add ``Optimize Images`` to your list\nof plugins:\n\n.. code-block:: python\n\n  PLUGINS = [\n              # ...\n              'minchin.pelican.plugins.optimize_images',\n              # ...\n            ]\n\n\nRequirements\n============\n\n``Optimize Images`` depends on (and is really only useful with) Pelican.\nThis can be manually installed with pip:\n\n.. code-block:: sh\n\n   pip install pelican\n\nIt is assumed both jpegtran_ and OptiPNG_ are installed on system path. On\nWindows, installers are available at each respective website. On Ubuntu\nsystems (including Travis-CI), the two can be installed via ``apt-get``:\n\n.. code-block:: sh\n\n  apt-get install optipng libjpeg-progs\n\n\nConfiguration and Usage\n=======================\n\nThe plugin will activate and optimize images upon ``finalized`` signal of\npelican.\n\nThe plugin has no user settings.\n\n\nKnown Issues\n============\n\nImage manipulation like this can take some time to run. You may consider\nonly adding this plugin to your ``publishconf.py`` (rather than your base\n``pelicanconf.py``), which will then only run this image optimization in\npreparation for site publication.\n\nAn issue, as such, is that there is no formal test suite. Testing is\ncurrently limited to my in-use observations. I also run a basic check upon\nuploaded the package to PyPI that it can be downloaded and loaded into\nPython.\n\nThe package is tested in Python 3.6; compatibility with other version of\nPython is unknown, but there should be nothing particular keeping it from working with other \"modern\" versions of Python.\n\n\nCredits\n=======\n\nOriginal plugin from the `Pelican-Plugins repo\n<https://github.com/getpelican/pelican-plugins>`_.\n\n\nLicense\n=======\n\nThe plugin code is assumed to be under the AGPLv3 license (this is the\nlicense of the Pelican-Plugins repo).\n\n\n.. _jpegtran: http://jpegclub.org/jpegtran/ \n.. _OptiPNG: http://optipng.sourceforge.net/", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MinchinWeb/minchin.pelican.plugins.optimize_images", "keywords": "", "license": "GNU Affero General Public License v3", "maintainer": "", "maintainer_email": "", "name": "minchin.pelican.plugins.optimize-images", "package_url": "https://pypi.org/project/minchin.pelican.plugins.optimize-images/", "platform": "any", "project_url": "https://pypi.org/project/minchin.pelican.plugins.optimize-images/", "project_urls": {"Homepage": "https://github.com/MinchinWeb/minchin.pelican.plugins.optimize_images"}, "release_url": "https://pypi.org/project/minchin.pelican.plugins.optimize-images/1.1.1/", "requires_dist": null, "requires_python": "", "summary": "This Pelcan plugin optimized images (jpg and png).", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>Optimize Images</tt> is a plugin for\n<a href=\"http://docs.getpelican.com/\" rel=\"nofollow\">Pelican</a>, a static site generator written\nin Python.</p>\n<p><tt>Optimize Images</tt>  applies lossless compression on JPEG and PNG images,\nwith no effect on image quality. It uses <a href=\"http://jpegclub.org/jpegtran/\" rel=\"nofollow\">jpegtran</a> and <a href=\"http://optipng.sourceforge.net/\" rel=\"nofollow\">OptiPNG</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The easiest way to install <tt>Optimize Images</tt> is through the use of pip.\nThis will also install the required Python dependencies automatically\n(currently none beyond Pelican itself).</p>\n<pre>pip install minchin.pelican.plugins.optimize_images\n</pre>\n<p>It is assumed both <a href=\"http://jpegclub.org/jpegtran/\" rel=\"nofollow\">jpegtran</a> and <a href=\"http://optipng.sourceforge.net/\" rel=\"nofollow\">OptiPNG</a> are installed on system path.</p>\n<p>Then, in your <tt>pelicanconf.py</tt> file, add <tt>Optimize Images</tt> to your list\nof plugins:</p>\n<pre><span class=\"n\">PLUGINS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"c1\"># ...</span>\n            <span class=\"s1\">'minchin.pelican.plugins.optimize_images'</span><span class=\"p\">,</span>\n            <span class=\"c1\"># ...</span>\n          <span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p><tt>Optimize Images</tt> depends on (and is really only useful with) Pelican.\nThis can be manually installed with pip:</p>\n<pre>pip install pelican\n</pre>\n<p>It is assumed both <a href=\"http://jpegclub.org/jpegtran/\" rel=\"nofollow\">jpegtran</a> and <a href=\"http://optipng.sourceforge.net/\" rel=\"nofollow\">OptiPNG</a> are installed on system path. On\nWindows, installers are available at each respective website. On Ubuntu\nsystems (including Travis-CI), the two can be installed via <tt><span class=\"pre\">apt-get</span></tt>:</p>\n<pre>apt-get install optipng libjpeg-progs\n</pre>\n</div>\n<div id=\"configuration-and-usage\">\n<h2>Configuration and Usage</h2>\n<p>The plugin will activate and optimize images upon <tt>finalized</tt> signal of\npelican.</p>\n<p>The plugin has no user settings.</p>\n</div>\n<div id=\"known-issues\">\n<h2>Known Issues</h2>\n<p>Image manipulation like this can take some time to run. You may consider\nonly adding this plugin to your <tt>publishconf.py</tt> (rather than your base\n<tt>pelicanconf.py</tt>), which will then only run this image optimization in\npreparation for site publication.</p>\n<p>An issue, as such, is that there is no formal test suite. Testing is\ncurrently limited to my in-use observations. I also run a basic check upon\nuploaded the package to PyPI that it can be downloaded and loaded into\nPython.</p>\n<p>The package is tested in Python 3.6; compatibility with other version of\nPython is unknown, but there should be nothing particular keeping it from working with other \u201cmodern\u201d versions of Python.</p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Original plugin from the <a href=\"https://github.com/getpelican/pelican-plugins\" rel=\"nofollow\">Pelican-Plugins repo</a>.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The plugin code is assumed to be under the AGPLv3 license (this is the\nlicense of the Pelican-Plugins repo).</p>\n</div>\n\n          </div>"}, "last_serial": 2809961, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "50b76675477ad40e412580c1f3573177", "sha256": "8268bab29aec9287fe3d7611324c66715d417159e3b12f54920200b3c8cc3c67"}, "downloads": -1, "filename": "minchin.pelican.plugins.optimize_images-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "50b76675477ad40e412580c1f3573177", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6651, "upload_time": "2017-02-22T19:23:50", "upload_time_iso_8601": "2017-02-22T19:23:50.305510Z", "url": "https://files.pythonhosted.org/packages/1d/b3/c4a4372dd5d01125df40328143a6a54038509ee4df7176daedee67f677ac/minchin.pelican.plugins.optimize_images-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93f4c240f0477a0efb8bb619c78b0312", "sha256": "8e0bf96e49f83ee6851025561e61cfbc2fe5812a636571107832b5a16089dab2"}, "downloads": -1, "filename": "minchin.pelican.plugins.optimize_images-1.1.0.tar.gz", "has_sig": false, "md5_digest": "93f4c240f0477a0efb8bb619c78b0312", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17058, "upload_time": "2017-02-22T19:22:51", "upload_time_iso_8601": "2017-02-22T19:22:51.988411Z", "url": "https://files.pythonhosted.org/packages/fc/fc/3e5e28100684ca7411e586168cb617e2be8d58d786441a171992b510229a/minchin.pelican.plugins.optimize_images-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "693706b6c858f1d18f8ed20b8fa6629e", "sha256": "c4ffeec80ef144eefa277af606bbd3921671a7e3c828dc44fee43b31e8227323"}, "downloads": -1, "filename": "minchin.pelican.plugins.optimize_images-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "693706b6c858f1d18f8ed20b8fa6629e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7301, "upload_time": "2017-04-17T23:21:37", "upload_time_iso_8601": "2017-04-17T23:21:37.733729Z", "url": "https://files.pythonhosted.org/packages/90/ff/48fe58bcedbe6e19141ec09350c92cb3b5df2397aefabdf75712284e26cb/minchin.pelican.plugins.optimize_images-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d0f919901538e74867bdc618454d27a", "sha256": "72c0e255510769f92aacde82af1791ceb4e446d697e22d1db2edf90be9a973d7"}, "downloads": -1, "filename": "minchin.pelican.plugins.optimize_images-1.1.1.tar.gz", "has_sig": false, "md5_digest": "7d0f919901538e74867bdc618454d27a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17469, "upload_time": "2017-04-17T23:20:48", "upload_time_iso_8601": "2017-04-17T23:20:48.220590Z", "url": "https://files.pythonhosted.org/packages/9a/af/7bb33a09c3fa4eb9cc814d7740528daf4fe475b026b4830700c7480585e0/minchin.pelican.plugins.optimize_images-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "693706b6c858f1d18f8ed20b8fa6629e", "sha256": "c4ffeec80ef144eefa277af606bbd3921671a7e3c828dc44fee43b31e8227323"}, "downloads": -1, "filename": "minchin.pelican.plugins.optimize_images-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "693706b6c858f1d18f8ed20b8fa6629e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7301, "upload_time": "2017-04-17T23:21:37", "upload_time_iso_8601": "2017-04-17T23:21:37.733729Z", "url": "https://files.pythonhosted.org/packages/90/ff/48fe58bcedbe6e19141ec09350c92cb3b5df2397aefabdf75712284e26cb/minchin.pelican.plugins.optimize_images-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d0f919901538e74867bdc618454d27a", "sha256": "72c0e255510769f92aacde82af1791ceb4e446d697e22d1db2edf90be9a973d7"}, "downloads": -1, "filename": "minchin.pelican.plugins.optimize_images-1.1.1.tar.gz", "has_sig": false, "md5_digest": "7d0f919901538e74867bdc618454d27a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17469, "upload_time": "2017-04-17T23:20:48", "upload_time_iso_8601": "2017-04-17T23:20:48.220590Z", "url": "https://files.pythonhosted.org/packages/9a/af/7bb33a09c3fa4eb9cc814d7740528daf4fe475b026b4830700c7480585e0/minchin.pelican.plugins.optimize_images-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:34 2020"}