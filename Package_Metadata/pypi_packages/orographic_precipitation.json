{"info": {"author": "Raphael Lange", "author_email": "raphael.lange@gfz-potsdam.de", "bugtrack_url": null, "classifiers": [], "description": "Linear Theory of Orographic Precipitation\n=========================================\n\nA `Python`_ framework that implements the Linear Theory of Orographic Precipitation\nfollowing `Smith & Barstad (2004)`_.\n\n.. _`Python`: https://www.python.org\n.. _`Smith & Barstad (2004)`: https://journals.ametsoc.org/doi/full/10.1175/1520-0469%282004%29061%3C1377%3AALTOOP%3E2.0.CO%3B2\n\nThe model includes airflow dynamics, condensed water advection, and downslope\nevaporation. It consists of two vertically-integrated steady-state advection\nequations describing: (i) the cloud water density and (ii) the hydrometeor\ndensity. Solving these equations using Fourier transform techniques,\nderives a single formula relating terrain and precipitation.\n\nPlease refer to the original manuscript of Smith and Barstad (2004) to understand\nthe model physics and limitations.\n\nInstallation\n------------\n\nRequired dependencies:\n\n* Python 3.6 or later\n* `numpy`_\n\n.. _`numpy`: https://numpy.org\n\norographic precipitation can be installed using ``pip``::\n\n    $ pip install orographic_precipitation\n\nUsage\n-----\n\n1. Import relevant functions to compute orographic precipitation,\n   set up a topography and plot the resulting precipitation matrix.\n\n.. code-block:: python\n\n    import matplotlib.pyplot as plt\n    from orographic_precipitation import compute_orographic_precip\n\n2. Create example topography, for instance, an isolated circular Gaussian hill\n(see original publication, Fig. 4 a-c).\n\n.. code-block:: python\n\n    def gauss_topography(dx, dy):\n      \"\"\"Returns synthetic topography for testing.\n      Analogous to Fig 4 in Smith and Barstedt, 2004.\n      \"\"\"\n      h_max = 500.\n      x0 = -25e3\n      y0 = 0\n      sigma_x = sigma_y = 15e3\n\n      x, y = np.arange(-100e3, 200e3, dx), np.arange(-150e3, 150e3, dy)\n      X, Y = np.meshgrid(x, y)\n\n      h = (h_max *\n           np.exp(-(((X - x0)**2 / (2 * sigma_x**2)) +\n                    ((Y - y0)**2 / (2 * sigma_y**2)))))\n\n      return X, Y, h\n\n    def plot2d(X, Y, field):\n      \"\"\"Function that plots precipitation matrices\"\"\"\n      fig, ax = plt.subplots(figsize=(6, 6))\n      pc = ax.pcolormesh(X, Y, field)\n      ax.set_aspect(1)\n      fig.colorbar(pc)\n\n    dx = 750.\n    dy = 750.\n\n    X, Y, elevation = gauss_topography(dx, dy)\n\n    plot2d(X, Y, elevation)\n\n.. image:: doc/_static/gauss_topo.png\n   :width: 400px\n\n3. Initialize dictionary with relevant parameters, compute and plot orographic\n   precipitation.\n\n.. code-block:: python\n\n    gamma = -5.8    #-6.49\n    Gamma_m = -6.5  #-5\n    rhosref = 7.4e-3\n\n    param = {\n    'latitude': 40,\n    'p0': 7,                          # uniform precipitation rate\n    'windspeed': 10,\n    'winddir': 270,                   # wind direction (270: west)\n    'tau_c': 1000,                    # conversion time\n    'tau_f': 1000,                    # fallout time\n    'nm': 0.005,                      # moist stability frequency\n    'hw': 5000,                       # water vapor scale height\n    'cw': rhosref * Gamma_m / gamma   # uplift sensitivity\n    }\n\n    P = compute_orographic_precip(elevation, dx, dy, **param)\n\n    plot2d(X, Y, P)\n\n.. image:: doc/_static/orograph_precip_example.png\n   :width: 400px\n\nAcknowledgement\n---------------\n\nThis project is supported by the `Earth Surface Process Modelling`_ group at\nthe German Geoscience Research Institute in Potsdam, Germany.\n\n.. _`Earth Surface Process Modelling`: http://www.gfz-potsdam.de/en/section/earth-surface-process-modelling/\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/rlange2/orographic-precipitation/archive/0.1a.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rlange2/orographic-precipitation", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "orographic_precipitation", "package_url": "https://pypi.org/project/orographic_precipitation/", "platform": "", "project_url": "https://pypi.org/project/orographic_precipitation/", "project_urls": {"Download": "https://github.com/rlange2/orographic-precipitation/archive/0.1a.tar.gz", "Homepage": "https://github.com/rlange2/orographic-precipitation"}, "release_url": "https://pypi.org/project/orographic_precipitation/0.1rc0/", "requires_dist": null, "requires_python": "", "summary": "Linear Theory of Orographic Precipitation", "version": "0.1rc0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A <a href=\"https://www.python.org\" rel=\"nofollow\">Python</a> framework that implements the Linear Theory of Orographic Precipitation\nfollowing <a href=\"https://journals.ametsoc.org/doi/full/10.1175/1520-0469%282004%29061%3C1377%3AALTOOP%3E2.0.CO%3B2\" rel=\"nofollow\">Smith &amp; Barstad (2004)</a>.</p>\n<p>The model includes airflow dynamics, condensed water advection, and downslope\nevaporation. It consists of two vertically-integrated steady-state advection\nequations describing: (i) the cloud water density and (ii) the hydrometeor\ndensity. Solving these equations using Fourier transform techniques,\nderives a single formula relating terrain and precipitation.</p>\n<p>Please refer to the original manuscript of Smith and Barstad (2004) to understand\nthe model physics and limitations.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Required dependencies:</p>\n<ul>\n<li>Python 3.6 or later</li>\n<li><a href=\"https://numpy.org\" rel=\"nofollow\">numpy</a></li>\n</ul>\n<p>orographic precipitation can be installed using <tt>pip</tt>:</p>\n<pre>$ pip install orographic_precipitation\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ol>\n<li>Import relevant functions to compute orographic precipitation,\nset up a topography and plot the resulting precipitation matrix.</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">orographic_precipitation</span> <span class=\"kn\">import</span> <span class=\"n\">compute_orographic_precip</span>\n</pre>\n<p>2. Create example topography, for instance, an isolated circular Gaussian hill\n(see original publication, Fig. 4 a-c).</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">gauss_topography</span><span class=\"p\">(</span><span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">dy</span><span class=\"p\">):</span>\n  <span class=\"sd\">\"\"\"Returns synthetic topography for testing.\n  Analogous to Fig 4 in Smith and Barstedt, 2004.\n  \"\"\"</span>\n  <span class=\"n\">h_max</span> <span class=\"o\">=</span> <span class=\"mf\">500.</span>\n  <span class=\"n\">x0</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">25e3</span>\n  <span class=\"n\">y0</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n  <span class=\"n\">sigma_x</span> <span class=\"o\">=</span> <span class=\"n\">sigma_y</span> <span class=\"o\">=</span> <span class=\"mf\">15e3</span>\n\n  <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">100e3</span><span class=\"p\">,</span> <span class=\"mf\">200e3</span><span class=\"p\">,</span> <span class=\"n\">dx</span><span class=\"p\">),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">150e3</span><span class=\"p\">,</span> <span class=\"mf\">150e3</span><span class=\"p\">,</span> <span class=\"n\">dy</span><span class=\"p\">)</span>\n  <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">meshgrid</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n  <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">h_max</span> <span class=\"o\">*</span>\n       <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"p\">(((</span><span class=\"n\">X</span> <span class=\"o\">-</span> <span class=\"n\">x0</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">sigma_x</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">))</span> <span class=\"o\">+</span>\n                <span class=\"p\">((</span><span class=\"n\">Y</span> <span class=\"o\">-</span> <span class=\"n\">y0</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">sigma_y</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">)))))</span>\n\n  <span class=\"k\">return</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">h</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">plot2d</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">):</span>\n  <span class=\"sd\">\"\"\"Function that plots precipitation matrices\"\"\"</span>\n  <span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">))</span>\n  <span class=\"n\">pc</span> <span class=\"o\">=</span> <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">pcolormesh</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">field</span><span class=\"p\">)</span>\n  <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_aspect</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n  <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">colorbar</span><span class=\"p\">(</span><span class=\"n\">pc</span><span class=\"p\">)</span>\n\n<span class=\"n\">dx</span> <span class=\"o\">=</span> <span class=\"mf\">750.</span>\n<span class=\"n\">dy</span> <span class=\"o\">=</span> <span class=\"mf\">750.</span>\n\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">elevation</span> <span class=\"o\">=</span> <span class=\"n\">gauss_topography</span><span class=\"p\">(</span><span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">dy</span><span class=\"p\">)</span>\n\n<span class=\"n\">plot2d</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">elevation</span><span class=\"p\">)</span>\n</pre>\n<img alt=\"doc/_static/gauss_topo.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0c6207eaa0f8ca4c877abfd158e743b03e88b48/646f632f5f7374617469632f67617573735f746f706f2e706e67\" width=\"400px\">\n<ol>\n<li>Initialize dictionary with relevant parameters, compute and plot orographic\nprecipitation.</li>\n</ol>\n<pre><span class=\"n\">gamma</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">5.8</span>    <span class=\"c1\">#-6.49</span>\n<span class=\"n\">Gamma_m</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">6.5</span>  <span class=\"c1\">#-5</span>\n<span class=\"n\">rhosref</span> <span class=\"o\">=</span> <span class=\"mf\">7.4e-3</span>\n\n<span class=\"n\">param</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"s1\">'latitude'</span><span class=\"p\">:</span> <span class=\"mi\">40</span><span class=\"p\">,</span>\n<span class=\"s1\">'p0'</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">,</span>                          <span class=\"c1\"># uniform precipitation rate</span>\n<span class=\"s1\">'windspeed'</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n<span class=\"s1\">'winddir'</span><span class=\"p\">:</span> <span class=\"mi\">270</span><span class=\"p\">,</span>                   <span class=\"c1\"># wind direction (270: west)</span>\n<span class=\"s1\">'tau_c'</span><span class=\"p\">:</span> <span class=\"mi\">1000</span><span class=\"p\">,</span>                    <span class=\"c1\"># conversion time</span>\n<span class=\"s1\">'tau_f'</span><span class=\"p\">:</span> <span class=\"mi\">1000</span><span class=\"p\">,</span>                    <span class=\"c1\"># fallout time</span>\n<span class=\"s1\">'nm'</span><span class=\"p\">:</span> <span class=\"mf\">0.005</span><span class=\"p\">,</span>                      <span class=\"c1\"># moist stability frequency</span>\n<span class=\"s1\">'hw'</span><span class=\"p\">:</span> <span class=\"mi\">5000</span><span class=\"p\">,</span>                       <span class=\"c1\"># water vapor scale height</span>\n<span class=\"s1\">'cw'</span><span class=\"p\">:</span> <span class=\"n\">rhosref</span> <span class=\"o\">*</span> <span class=\"n\">Gamma_m</span> <span class=\"o\">/</span> <span class=\"n\">gamma</span>   <span class=\"c1\"># uplift sensitivity</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">P</span> <span class=\"o\">=</span> <span class=\"n\">compute_orographic_precip</span><span class=\"p\">(</span><span class=\"n\">elevation</span><span class=\"p\">,</span> <span class=\"n\">dx</span><span class=\"p\">,</span> <span class=\"n\">dy</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">param</span><span class=\"p\">)</span>\n\n<span class=\"n\">plot2d</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span><span class=\"p\">,</span> <span class=\"n\">P</span><span class=\"p\">)</span>\n</pre>\n<img alt=\"doc/_static/orograph_precip_example.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d052a26fdff64e85e3cea6e42c8f504ef29da5ed/646f632f5f7374617469632f6f726f67726170685f7072656369705f6578616d706c652e706e67\" width=\"400px\">\n</div>\n<div id=\"acknowledgement\">\n<h2>Acknowledgement</h2>\n<p>This project is supported by the <a href=\"http://www.gfz-potsdam.de/en/section/earth-surface-process-modelling/\" rel=\"nofollow\">Earth Surface Process Modelling</a> group at\nthe German Geoscience Research Institute in Potsdam, Germany.</p>\n</div>\n\n          </div>"}, "last_serial": 6675285, "releases": {"0.1a0": [{"comment_text": "", "digests": {"md5": "11bc050f71abc2624afe48e8b85f25f8", "sha256": "bcecfd9e7ef134a683426d47dc6f5764751a9eace11e75a25c43cda946dae692"}, "downloads": -1, "filename": "orographic_precipitation-0.1a0.tar.gz", "has_sig": false, "md5_digest": "11bc050f71abc2624afe48e8b85f25f8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5192, "upload_time": "2020-02-14T15:47:34", "upload_time_iso_8601": "2020-02-14T15:47:34.117330Z", "url": "https://files.pythonhosted.org/packages/2d/fb/5bfa8e2e32f14884ab46d4353a0a445c6aa5afeff9b058ed8f81f36dff68/orographic_precipitation-0.1a0.tar.gz", "yanked": false}], "0.1b0": [{"comment_text": "", "digests": {"md5": "0cb40c64be37a0a8c9c70956b112499c", "sha256": "c16653d9c584f6ae6ee37deac8a711a111df25765b7845d94cb55074224b04e8"}, "downloads": -1, "filename": "orographic_precipitation-0.1b0.tar.gz", "has_sig": false, "md5_digest": "0cb40c64be37a0a8c9c70956b112499c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21097, "upload_time": "2020-02-21T11:21:35", "upload_time_iso_8601": "2020-02-21T11:21:35.045578Z", "url": "https://files.pythonhosted.org/packages/e3/e3/c4241f33e2fa759f35de0d3aeeda6ba2d56818f478f433065a1ea813c2d1/orographic_precipitation-0.1b0.tar.gz", "yanked": false}], "0.1rc0": [{"comment_text": "", "digests": {"md5": "570a13adf155809ac83b3117f4ed180a", "sha256": "13559a0f324f9761ee2534430feb628f71416ff1c3b10c79d3452b2c276246b2"}, "downloads": -1, "filename": "orographic_precipitation-0.1rc0.tar.gz", "has_sig": false, "md5_digest": "570a13adf155809ac83b3117f4ed180a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20999, "upload_time": "2020-02-21T13:26:52", "upload_time_iso_8601": "2020-02-21T13:26:52.485442Z", "url": "https://files.pythonhosted.org/packages/d3/cc/7999832504166166ceac2eb83a27133a19b3d444dc4266aca287119a478b/orographic_precipitation-0.1rc0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "570a13adf155809ac83b3117f4ed180a", "sha256": "13559a0f324f9761ee2534430feb628f71416ff1c3b10c79d3452b2c276246b2"}, "downloads": -1, "filename": "orographic_precipitation-0.1rc0.tar.gz", "has_sig": false, "md5_digest": "570a13adf155809ac83b3117f4ed180a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20999, "upload_time": "2020-02-21T13:26:52", "upload_time_iso_8601": "2020-02-21T13:26:52.485442Z", "url": "https://files.pythonhosted.org/packages/d3/cc/7999832504166166ceac2eb83a27133a19b3d444dc4266aca287119a478b/orographic_precipitation-0.1rc0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:32 2020"}