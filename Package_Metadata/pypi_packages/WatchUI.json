{"info": {"author": "Jan Egermaier", "author_email": "jan.egermaier@tesena.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# WatchUI\n### Basic Info\nCustom library for comparing images with use in Robot Framework. \n### What is here?\n- Test robot/test.robot - file with examples how to use keywords\n- WatchUI/WatchUI.py - file with keywords\n\n# What you need\n## Pip install\n\n[WatchUI](https://pypi.org/project/WatchUI/)\n1. Open CMD\n2. Start `pip install WatchUI`\n3. Now you can download WatchUI.py from repository or import WatchUI to new python file more [here](https://stackoverflow.com/questions/32952106/creating-a-robot-framework-library-from-existing-python-package)\n4. If you download WatchUI.py: You must first enter the path in Settings => `Library          path`, where path is the path to the WatchUI.py file\n\n## Manual Install\n### Main\n- [Python](https://www.python.org/)\n- [RobotFramework](https://robotframework.org/)\n- [OpenCV](https://opencv.org/)  `pip install opencv-python` or `pip3 install opencv-python`\n- [Pillow](https://python-pillow.org/)    `pip install Pillow`\n- [Numpy](https://numpy.org/) `pip install numpy`\n- [Scikit](https://scikit-image.org/) `pip install scikit-image`\n- [Imutils](https://github.com/jrosebr1/imutils) `pip install imutils`\n\n### How to install in RF\n- Download git file (Mainly ./Python/WatchUI.py)\n- Enter the path in Settings => `Library          path`, where path is the path to the WatchUI.py file\n- Now you can start using keywords listed below. Keep in mind that you need to have all dependencies installed.\n\n## Description Keyword\n### Images must have same resolution!!!!\n\n- In folder Robot framework you can find some example\n- You can settings two main value in import (`Library <path to WathUI>`)\n- Applies to all TCs where it is not set directly at the key that the argument takes a different value\n\n| Arguments | Documentation |\n|    :---:      |     :---:      |\n| outputs_folder= | The path where you want to save the image with the highlighted differences. Default folder is ../Outputs. Adjusting the Keywords has more weight than adjusting in import  |\n| ssim_basic= | The lowest limit of difference between images when an RF gives you a pass. Takes values from 1.0E-12 to 1.0. Default ssim is 1.0 (100%) |\n\nExample: `Library  WatchUI.py outputs_folder=../Myfolder ssim_basic=0.865`\n\n| Keyword  | Arguments | Documentation |\n|     :---:      |    :---:      |     :---      |\n| Compare images  | path1, <br>path2, <br>save_folder=, <br>ssim=  |  This compares two images.  If there are differences it saves an image with the differences highlighted into the folder.</p>path1 = path to the first image to be compared<p>path2 =  path to the second image to be compared  <br>save_folder= the path where you want to save the image with the highlighted differences. Default folder is ../Outputs<br> ssim= The lowest limit of difference between images when an RF gives you a pass. Takes values from 1.0E-12 to 1.0. Default ssim is 1.0 (100%)   <p>Example:  `Compare two images  ../image1.png  ../Image2.png`  |\n| Compare screen  | path1, <br>save_folder=, <br>ssim= |Compares a saved image with what is displayed on the screen. If there is a difference it saves an image with the differences highlighted to the save_folder </p>path1  = path to the image to be compared to screen<br>save_folder= the path where you want to save the image with the highlighted differences. Default folder is ../Outputs <br> ssim= The lowest limit of difference between images when an RF gives you a pass. Takes values from 1.0E-12 to 1.0. Default ssim is 1.0 (100%)  </p> Example:  `Compare screen  ../image1.png`  |\n| Create area  | x1, y1, x2, y2,<br> screen_name=,  <br>save_folder=  | Creates a cut-out area of what is displayed on the screen and saves it in the folder: ../Create area  </p>x1 a y1 = x and y coordinates for the upper left corner of the square <p>x2 and y2 = x and y coordinates for the bottom right corner of the square<br>screen_name= the path where you want to save the image with the highlighted differences. Default name is (it is not mandatory to set it up)<br>save_folder= the path where you want to save the image with the cut out area. Default folder is ../Outputs <p> Example:  `Create area  0   0   25  25`  |\n| Compare screen areas  | x1, y1, x2, y2, <br>path1, <br>save_folder=, <br>ssim=  | Compares area of the screen with a previously created cut out image area. </p>x1 and y1 = x and y coordinates for the upper left corner of the region <p>x2 and y2 = x and y coordinates for the bottom right corner of the region <br>path1 =   the path to an already created image (region) with which we want to compare the region selected at screen <br>save_folder= path where you want to save the image with the highlighted differences. Default folder is ../Outputs <br> ssim= The lowest limit of difference between images when an RF gives you a pass. Takes values from 1.0E-12 to 1.0. Default ssim is 1.0 (100%)</p>Example:  `Compare screen areas  0   0   25  25  ../Crop_Image1.png` |\n| Compare screen without areas  | path1 <br>*args, <br>save_folder=, <br>ssim=  | Compares pictures (screenshot and image file) with areas to be ignored </p>x1 and y1 = x and y coordinates for the upper left corner of the area to be ignored  <p>x2 and y2 = coordinates for the lower right corner of the area to be ignored <br>save_folder= the path where you want to save the image with the highlighted differences. Default folder is ../Outputs <br> ssim= The lowest limit of difference between images when an RF gives you a pass. Takes values from 1.0E-12 to 1.0. Default ssim is 1.0 (100%)  <p>Attention! It is always necessary to enter in order x1 y1 x2 y2 x1 y1 x2 y2 etc ...  </p>Example: `Compare screen without areas ../Image1.png 0 0 30 40 50 50 100 100` <br> Creates 2 ignored parts at 0,0, 30,40 and 50, 50, 100, 100 |\n| Create screens  | *resolution<br>save_folder=<br> screen_name=   | Creates a screenshot of the screen with specified resolution. It is possible in one command to create an infinite number of screens with different resolutions. Screens are stored in the folder: ../Create_screens </p>*resolution = The specified resolution in width and height format, you can enter as many as needed<br> save_folder= path where you want to save the image with the highlighted differences. Default folder is ../Create_screens <br>screen_name= the path where you want to save the image with the highlighted differences. Default name is (it is not mandatory to set it up) </p>Example: `compare making rescreens            800  600    1280    800     1440    900` <br>Creates 3 screens in 800x600 1280x800 and 1440x900 |\n| Compare screen get information  | path1, <br>save_folder=, <br>folder_csv=, <br>ssim=  |Compares an already saved image with what is displayed on the screen. If there is a difference, it saves an image with the highlighted differences to the: ../save_folder and creates a csv file with the coordinates and elements that exist on those coordinates <p> *path1 = path to the image to be compared</p> *path1 = path to the image to be compared <br>save_folder= path where you have save img Default folder is ../Outputs<br> folder_csv= folder for csv file with save coordinates. Default folder is ../CSV_ERROR <br> ssim= The lowest limit of difference between images when an RF gives you a pass. Takes values from 1.0E-12 to 1.0. Default ssim is 1.0 (100%)</p>Example:     `compare screen get information      1c.png`<br> Compare img 1c.png with screen and save img with diff and save csv file with elements on this coordinates |\n\n## Sample results\n\n_Image where the differences are stored + You can see two black box in left corner. These black box are ignored during comparison._\n\n<img src=\"/Img/logscreen.png\" width=\"850\" height=\"300\">\n\n_The red rectangles outlining missing elements on compared screens_\n\n<img src=\"/Img/img_inlog.png\" width=\"850\" height=\"300\">\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Tesena-smart-testing/WatchUI", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "WatchUI", "package_url": "https://pypi.org/project/WatchUI/", "platform": "", "project_url": "https://pypi.org/project/WatchUI/", "project_urls": {"Homepage": "https://github.com/Tesena-smart-testing/WatchUI"}, "release_url": "https://pypi.org/project/WatchUI/0.17.2/", "requires_dist": ["numpy", "pandas", "scikit-image", "opencv-python", "Pillow", "imutils"], "requires_python": ">=3.6", "summary": "Compare GUi with RobotFramework", "version": "0.17.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>WatchUI</h1>\n<h3>Basic Info</h3>\n<p>Custom library for comparing images with use in Robot Framework.</p>\n<h3>What is here?</h3>\n<ul>\n<li>Test robot/test.robot - file with examples how to use keywords</li>\n<li>WatchUI/WatchUI.py - file with keywords</li>\n</ul>\n<h1>What you need</h1>\n<h2>Pip install</h2>\n<p><a href=\"https://pypi.org/project/WatchUI/\" rel=\"nofollow\">WatchUI</a></p>\n<ol>\n<li>Open CMD</li>\n<li>Start <code>pip install WatchUI</code></li>\n<li>Now you can download WatchUI.py from repository or import WatchUI to new python file more <a href=\"https://stackoverflow.com/questions/32952106/creating-a-robot-framework-library-from-existing-python-package\" rel=\"nofollow\">here</a></li>\n<li>If you download WatchUI.py: You must first enter the path in Settings =&gt; <code>Library path</code>, where path is the path to the WatchUI.py file</li>\n</ol>\n<h2>Manual Install</h2>\n<h3>Main</h3>\n<ul>\n<li><a href=\"https://www.python.org/\" rel=\"nofollow\">Python</a></li>\n<li><a href=\"https://robotframework.org/\" rel=\"nofollow\">RobotFramework</a></li>\n<li><a href=\"https://opencv.org/\" rel=\"nofollow\">OpenCV</a>  <code>pip install opencv-python</code> or <code>pip3 install opencv-python</code></li>\n<li><a href=\"https://python-pillow.org/\" rel=\"nofollow\">Pillow</a>    <code>pip install Pillow</code></li>\n<li><a href=\"https://numpy.org/\" rel=\"nofollow\">Numpy</a> <code>pip install numpy</code></li>\n<li><a href=\"https://scikit-image.org/\" rel=\"nofollow\">Scikit</a> <code>pip install scikit-image</code></li>\n<li><a href=\"https://github.com/jrosebr1/imutils\" rel=\"nofollow\">Imutils</a> <code>pip install imutils</code></li>\n</ul>\n<h3>How to install in RF</h3>\n<ul>\n<li>Download git file (Mainly ./Python/WatchUI.py)</li>\n<li>Enter the path in Settings =&gt; <code>Library path</code>, where path is the path to the WatchUI.py file</li>\n<li>Now you can start using keywords listed below. Keep in mind that you need to have all dependencies installed.</li>\n</ul>\n<h2>Description Keyword</h2>\n<h3>Images must have same resolution!!!!</h3>\n<ul>\n<li>In folder Robot framework you can find some example</li>\n<li>You can settings two main value in import (<code>Library &lt;path to WathUI&gt;</code>)</li>\n<li>Applies to all TCs where it is not set directly at the key that the argument takes a different value</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Arguments</th>\n<th align=\"center\">Documentation</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">outputs_folder=</td>\n<td align=\"center\">The path where you want to save the image with the highlighted differences. Default folder is ../Outputs. Adjusting the Keywords has more weight than adjusting in import</td>\n</tr>\n<tr>\n<td align=\"center\">ssim_basic=</td>\n<td align=\"center\">The lowest limit of difference between images when an RF gives you a pass. Takes values from 1.0E-12 to 1.0. Default ssim is 1.0 (100%)</td>\n</tr></tbody></table>\n<p>Example: <code>Library WatchUI.py outputs_folder=../Myfolder ssim_basic=0.865</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Keyword</th>\n<th align=\"center\">Arguments</th>\n<th align=\"left\">Documentation</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Compare images</td>\n<td align=\"center\">path1, <br>path2, <br>save_folder=, <br>ssim=</td>\n<td align=\"left\">This compares two images.  If there are differences it saves an image with the differences highlighted into the folder.<p></p>path1 = path to the first image to be compared<p>path2 =  path to the second image to be compared  <br>save_folder= the path where you want to save the image with the highlighted differences. Default folder is ../Outputs<br> ssim= The lowest limit of difference between images when an RF gives you a pass. Takes values from 1.0E-12 to 1.0. Default ssim is 1.0 (100%)   </p><p>Example:  <code>Compare two images ../image1.png ../Image2.png</code></p></td>\n</tr>\n<tr>\n<td align=\"center\">Compare screen</td>\n<td align=\"center\">path1, <br>save_folder=, <br>ssim=</td>\n<td align=\"left\">Compares a saved image with what is displayed on the screen. If there is a difference it saves an image with the differences highlighted to the save_folder <p></p>path1  = path to the image to be compared to screen<br>save_folder= the path where you want to save the image with the highlighted differences. Default folder is ../Outputs <br> ssim= The lowest limit of difference between images when an RF gives you a pass. Takes values from 1.0E-12 to 1.0. Default ssim is 1.0 (100%)  <p></p> Example:  <code>Compare screen ../image1.png</code></td>\n</tr>\n<tr>\n<td align=\"center\">Create area</td>\n<td align=\"center\">x1, y1, x2, y2,<br> screen_name=,  <br>save_folder=</td>\n<td align=\"left\">Creates a cut-out area of what is displayed on the screen and saves it in the folder: ../Create area  <p></p>x1 a y1 = x and y coordinates for the upper left corner of the square <p>x2 and y2 = x and y coordinates for the bottom right corner of the square<br>screen_name= the path where you want to save the image with the highlighted differences. Default name is (it is not mandatory to set it up)<br>save_folder= the path where you want to save the image with the cut out area. Default folder is ../Outputs </p><p> Example:  <code>Create area 0 0 25 25</code></p></td>\n</tr>\n<tr>\n<td align=\"center\">Compare screen areas</td>\n<td align=\"center\">x1, y1, x2, y2, <br>path1, <br>save_folder=, <br>ssim=</td>\n<td align=\"left\">Compares area of the screen with a previously created cut out image area. <p></p>x1 and y1 = x and y coordinates for the upper left corner of the region <p>x2 and y2 = x and y coordinates for the bottom right corner of the region <br>path1 =   the path to an already created image (region) with which we want to compare the region selected at screen <br>save_folder= path where you want to save the image with the highlighted differences. Default folder is ../Outputs <br> ssim= The lowest limit of difference between images when an RF gives you a pass. Takes values from 1.0E-12 to 1.0. Default ssim is 1.0 (100%)</p>Example:  <code>Compare screen areas 0 0 25 25 ../Crop_Image1.png</code></td>\n</tr>\n<tr>\n<td align=\"center\">Compare screen without areas</td>\n<td align=\"center\">path1 <br>*args, <br>save_folder=, <br>ssim=</td>\n<td align=\"left\">Compares pictures (screenshot and image file) with areas to be ignored <p></p>x1 and y1 = x and y coordinates for the upper left corner of the area to be ignored  <p>x2 and y2 = coordinates for the lower right corner of the area to be ignored <br>save_folder= the path where you want to save the image with the highlighted differences. Default folder is ../Outputs <br> ssim= The lowest limit of difference between images when an RF gives you a pass. Takes values from 1.0E-12 to 1.0. Default ssim is 1.0 (100%)  </p><p>Attention! It is always necessary to enter in order x1 y1 x2 y2 x1 y1 x2 y2 etc ...  </p>Example: <code>Compare screen without areas ../Image1.png 0 0 30 40 50 50 100 100</code> <br> Creates 2 ignored parts at 0,0, 30,40 and 50, 50, 100, 100</td>\n</tr>\n<tr>\n<td align=\"center\">Create screens</td>\n<td align=\"center\">*resolution<br>save_folder=<br> screen_name=</td>\n<td align=\"left\">Creates a screenshot of the screen with specified resolution. It is possible in one command to create an infinite number of screens with different resolutions. Screens are stored in the folder: ../Create_screens <p></p>*resolution = The specified resolution in width and height format, you can enter as many as needed<br> save_folder= path where you want to save the image with the highlighted differences. Default folder is ../Create_screens <br>screen_name= the path where you want to save the image with the highlighted differences. Default name is (it is not mandatory to set it up) <p></p>Example: <code>compare making rescreens 800 600 1280 800 1440 900</code> <br>Creates 3 screens in 800x600 1280x800 and 1440x900</td>\n</tr>\n<tr>\n<td align=\"center\">Compare screen get information</td>\n<td align=\"center\">path1, <br>save_folder=, <br>folder_csv=, <br>ssim=</td>\n<td align=\"left\">Compares an already saved image with what is displayed on the screen. If there is a difference, it saves an image with the highlighted differences to the: ../save_folder and creates a csv file with the coordinates and elements that exist on those coordinates <p> *path1 = path to the image to be compared</p> *path1 = path to the image to be compared <br>save_folder= path where you have save img Default folder is ../Outputs<br> folder_csv= folder for csv file with save coordinates. Default folder is ../CSV_ERROR <br> ssim= The lowest limit of difference between images when an RF gives you a pass. Takes values from 1.0E-12 to 1.0. Default ssim is 1.0 (100%)<p></p>Example:     <code>compare screen get information 1c.png</code><br> Compare img 1c.png with screen and save img with diff and save csv file with elements on this coordinates</td>\n</tr></tbody></table>\n<h2>Sample results</h2>\n<p><em>Image where the differences are stored + You can see two black box in left corner. These black box are ignored during comparison.</em></p>\n<img height=\"300\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/260cf08fd28e62130cdc4fb232faefa496d31c5b/2f496d672f6c6f6773637265656e2e706e67\" width=\"850\">\n<p><em>The red rectangles outlining missing elements on compared screens</em></p>\n<img height=\"300\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c9167be79a843bf71f8ff596cd937e92b38168b/2f496d672f696d675f696e6c6f672e706e67\" width=\"850\">\n\n          </div>"}, "last_serial": 6880201, "releases": {"0.1.14": [{"comment_text": "", "digests": {"md5": "a32474bb093abcd1c504106d4368f55f", "sha256": "7757ff6adc766edd8b4eb578105d282658769e61b1da96edde431bc3845b19b4"}, "downloads": -1, "filename": "WatchUI-0.1.14-py3-none-any.whl", "has_sig": false, "md5_digest": "a32474bb093abcd1c504106d4368f55f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4062, "upload_time": "2020-03-17T13:40:45", "upload_time_iso_8601": "2020-03-17T13:40:45.180403Z", "url": "https://files.pythonhosted.org/packages/32/7c/37d87b6cbc9b9f5c299238bff15e538220b524e66be6ca05024f0bdd4b5e/WatchUI-0.1.14-py3-none-any.whl", "yanked": false}], "0.1.15": [{"comment_text": "", "digests": {"md5": "cd11793d4394684c39046959c78f1af8", "sha256": "108440d8468929f15f0b2de48993034f16ff1791f9826837ad0e0ed5b2d7f408"}, "downloads": -1, "filename": "WatchUI-0.1.15-py3-none-any.whl", "has_sig": false, "md5_digest": "cd11793d4394684c39046959c78f1af8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4061, "upload_time": "2020-03-17T14:02:03", "upload_time_iso_8601": "2020-03-17T14:02:03.412477Z", "url": "https://files.pythonhosted.org/packages/06/eb/752d9ebed97d017f4820a3272ea69cee640194da89ad83a194ed1a14b458/WatchUI-0.1.15-py3-none-any.whl", "yanked": false}], "0.16.0": [{"comment_text": "", "digests": {"md5": "2604bba7c2e6695b45ddf7594faf964d", "sha256": "130f2616182dac2f48a9f765e16100d4afff7a73ebbf9e0a82370bf0076ad20b"}, "downloads": -1, "filename": "WatchUI-0.16.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2604bba7c2e6695b45ddf7594faf964d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4168, "upload_time": "2020-03-19T12:54:23", "upload_time_iso_8601": "2020-03-19T12:54:23.685029Z", "url": "https://files.pythonhosted.org/packages/7f/5d/2a8283bd89be08b6c30b511baa7e457ac70031e16bb3e0a29d3450a5acb7/WatchUI-0.16.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7e35d664b44c61772d60ba9a2faf94f", "sha256": "9ccccb7094be9cb10a6bf0b9f2759d0e69bb50e00107e029a583da470f1055eb"}, "downloads": -1, "filename": "WatchUI-0.16.0.tar.gz", "has_sig": false, "md5_digest": "a7e35d664b44c61772d60ba9a2faf94f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3350, "upload_time": "2020-03-19T12:54:24", "upload_time_iso_8601": "2020-03-19T12:54:24.898200Z", "url": "https://files.pythonhosted.org/packages/20/44/15929a0229a91309deee56040d17acee840d35b447aeef36167009348141/WatchUI-0.16.0.tar.gz", "yanked": false}], "0.16.1": [{"comment_text": "", "digests": {"md5": "f9024b396d8682d4c7899c765754b4b0", "sha256": "ae1be83a13bf5bc26c416588d073b6031a89dbd5b94b1a5e84900c495d068cea"}, "downloads": -1, "filename": "WatchUI-0.16.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f9024b396d8682d4c7899c765754b4b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8604, "upload_time": "2020-03-19T12:56:33", "upload_time_iso_8601": "2020-03-19T12:56:33.085344Z", "url": "https://files.pythonhosted.org/packages/fd/8e/c0f6d44e114ac60cf4c855bdc1a82193ae8d9e935e27d63f34fda0b37358/WatchUI-0.16.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f36e10ea912ca803ab673ea098ec2bdd", "sha256": "3d08a3c14f290a40a0ac4e30bd2966470c0f965c6ae737379b139ebfcaaada6c"}, "downloads": -1, "filename": "WatchUI-0.16.1.tar.gz", "has_sig": false, "md5_digest": "f36e10ea912ca803ab673ea098ec2bdd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7178, "upload_time": "2020-03-19T12:56:34", "upload_time_iso_8601": "2020-03-19T12:56:34.686580Z", "url": "https://files.pythonhosted.org/packages/73/e2/2e76c78fc195b222b1cae2c63f9e0b19acf69b21827a376fc32dad99e204/WatchUI-0.16.1.tar.gz", "yanked": false}], "0.16.2": [{"comment_text": "", "digests": {"md5": "447dd1361883d24ad04773c6a37dae67", "sha256": "2c02089ff2aa0b61761f633e8ef9b969813fb0b82a08cd6205903c5ce753a5d0"}, "downloads": -1, "filename": "WatchUI-0.16.2-py3-none-any.whl", "has_sig": false, "md5_digest": "447dd1361883d24ad04773c6a37dae67", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8605, "upload_time": "2020-03-19T12:58:13", "upload_time_iso_8601": "2020-03-19T12:58:13.223999Z", "url": "https://files.pythonhosted.org/packages/e1/fe/f3aba6285c03c387ed4fb1399d8e387a0de1384cc7de45a12525a95f894a/WatchUI-0.16.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf2e11b27f9c83a7a8fb59817e0902a1", "sha256": "70171a823ef55f9e5b4d56000238fc2a5d6e2fbdd903e714be619e3c87883e89"}, "downloads": -1, "filename": "WatchUI-0.16.2.tar.gz", "has_sig": false, "md5_digest": "bf2e11b27f9c83a7a8fb59817e0902a1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7180, "upload_time": "2020-03-19T12:58:14", "upload_time_iso_8601": "2020-03-19T12:58:14.189317Z", "url": "https://files.pythonhosted.org/packages/e3/d6/2586cf358bc80a2b4a4ddd16fe9126a738d338f281abf92887a5685a75ba/WatchUI-0.16.2.tar.gz", "yanked": false}], "0.16.3": [{"comment_text": "", "digests": {"md5": "47e441f5de52ea5836ccddd1821899f7", "sha256": "18db455420aa0c08dc76a7e324735b932c9c9c7922f3986d06e44311ce1b2cec"}, "downloads": -1, "filename": "WatchUI-0.16.3-py3-none-any.whl", "has_sig": false, "md5_digest": "47e441f5de52ea5836ccddd1821899f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7962, "upload_time": "2020-03-19T13:00:24", "upload_time_iso_8601": "2020-03-19T13:00:24.835282Z", "url": "https://files.pythonhosted.org/packages/27/66/da71e232a73a3e7a08752af2a01f84d6415e84f989e04ed119fe25699cc4/WatchUI-0.16.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "584415abfa29916965d9fff5c1d75c60", "sha256": "39230e1094c158c80b2f81a5f8136dd8a8f4dbe92b03cb165ca7ee752e9b75ab"}, "downloads": -1, "filename": "WatchUI-0.16.3.tar.gz", "has_sig": false, "md5_digest": "584415abfa29916965d9fff5c1d75c60", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6908, "upload_time": "2020-03-19T13:00:25", "upload_time_iso_8601": "2020-03-19T13:00:25.692121Z", "url": "https://files.pythonhosted.org/packages/0f/03/e096a1063fe317a3ab48709c9ed9b00c0f1fa47ce92a6982bb132010cad6/WatchUI-0.16.3.tar.gz", "yanked": false}], "0.16.4": [{"comment_text": "", "digests": {"md5": "0019ce32a333b12a448bcbc721b41cb3", "sha256": "98179e4506f0ff9f5a3610d2688ee3b8f43047f503fa59cfafaa29c628786893"}, "downloads": -1, "filename": "WatchUI-0.16.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0019ce32a333b12a448bcbc721b41cb3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8069, "upload_time": "2020-03-19T14:23:59", "upload_time_iso_8601": "2020-03-19T14:23:59.921648Z", "url": "https://files.pythonhosted.org/packages/85/c2/e828800002c9103f4eba2579e8f80adae25408581d1396be9ffbab391145/WatchUI-0.16.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "991fb6e9a7d33a39ec5463fd98bd898a", "sha256": "9bfd28144456ba9330b97c0f3f38db34ab8d1131f85c0150287f0ebf3144fe7b"}, "downloads": -1, "filename": "WatchUI-0.16.4.tar.gz", "has_sig": false, "md5_digest": "991fb6e9a7d33a39ec5463fd98bd898a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6962, "upload_time": "2020-03-19T14:24:00", "upload_time_iso_8601": "2020-03-19T14:24:00.846778Z", "url": "https://files.pythonhosted.org/packages/14/89/019178a485f06b13d3a8270a562560309d5eb076d9744dfc1f2b6ee76979/WatchUI-0.16.4.tar.gz", "yanked": false}], "0.16.5": [{"comment_text": "", "digests": {"md5": "4189738662a6e68ae6ecff5836432574", "sha256": "968ec9c6730b0fbdb824ec27a668bfa21e39441ddfcfa196602cf2affff79cb3"}, "downloads": -1, "filename": "WatchUI-0.16.5-py3-none-any.whl", "has_sig": false, "md5_digest": "4189738662a6e68ae6ecff5836432574", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8109, "upload_time": "2020-03-20T07:25:27", "upload_time_iso_8601": "2020-03-20T07:25:27.705356Z", "url": "https://files.pythonhosted.org/packages/f0/2d/333ba22f5858dcc44edf8db21ffffe5bfa544b7dd12cacb3d55d3341a0ae/WatchUI-0.16.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6273e5f93fd5e29dace5ab6e6916ba4d", "sha256": "47b7360f5e317531db76938d3c30c3d02f48a9451ecac4e102f7fbe7877a337f"}, "downloads": -1, "filename": "WatchUI-0.16.5.tar.gz", "has_sig": false, "md5_digest": "6273e5f93fd5e29dace5ab6e6916ba4d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7104, "upload_time": "2020-03-20T07:25:28", "upload_time_iso_8601": "2020-03-20T07:25:28.661620Z", "url": "https://files.pythonhosted.org/packages/da/01/a8a39752f32a62c7251175b3d7408bfc0a1a5671791107ab0b58a0a32da3/WatchUI-0.16.5.tar.gz", "yanked": false}], "0.16.6": [{"comment_text": "", "digests": {"md5": "6d2f4b231a8e5856391c1574c1263eae", "sha256": "d29c8f8d8401631e2a297b582bb189e057f4e054d077b468f166a86521bd0b27"}, "downloads": -1, "filename": "WatchUI-0.16.6-py3-none-any.whl", "has_sig": false, "md5_digest": "6d2f4b231a8e5856391c1574c1263eae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8103, "upload_time": "2020-03-20T11:19:21", "upload_time_iso_8601": "2020-03-20T11:19:21.909074Z", "url": "https://files.pythonhosted.org/packages/60/19/41995b1ca22a11b1b3ffe95bfe96a8861b0f32593cb3ff4ce7f201c1c1c9/WatchUI-0.16.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "feca77a96578faccf29b46e6b109fce7", "sha256": "fd4d7373a266709fb8007a84729b180274faad70fb00bd21cabb18299b9a2bf2"}, "downloads": -1, "filename": "WatchUI-0.16.6.tar.gz", "has_sig": false, "md5_digest": "feca77a96578faccf29b46e6b109fce7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7105, "upload_time": "2020-03-20T11:19:23", "upload_time_iso_8601": "2020-03-20T11:19:23.194379Z", "url": "https://files.pythonhosted.org/packages/40/7b/dad079505feeb877605db275473a663aec2ad989a5e0330500b328034fdd/WatchUI-0.16.6.tar.gz", "yanked": false}], "0.17.2": [{"comment_text": "", "digests": {"md5": "0f652690d896c97e1b22d5116aab2fa7", "sha256": "50bb13a3f87954d8f5b6e959dbe4fb366011576c34e48a88f0e039b33fabec84"}, "downloads": -1, "filename": "WatchUI-0.17.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0f652690d896c97e1b22d5116aab2fa7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8544, "upload_time": "2020-03-25T12:13:21", "upload_time_iso_8601": "2020-03-25T12:13:21.716517Z", "url": "https://files.pythonhosted.org/packages/c3/43/0f5f691be460118b3b674192d6ce8d141466bb17ce1bd72d4af108fd8bc2/WatchUI-0.17.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36931e86feefae1f9d35d7e0ebb4e5af", "sha256": "cc29ba79be7565235a92017d4494e64541eb420165fd35b0a1a165671872f668"}, "downloads": -1, "filename": "WatchUI-0.17.2.tar.gz", "has_sig": false, "md5_digest": "36931e86feefae1f9d35d7e0ebb4e5af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7577, "upload_time": "2020-03-25T12:13:22", "upload_time_iso_8601": "2020-03-25T12:13:22.974771Z", "url": "https://files.pythonhosted.org/packages/7b/5c/2f03039c0c5e05a3df20a96cdb749258a3c36525fee99e530209750f9625/WatchUI-0.17.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0f652690d896c97e1b22d5116aab2fa7", "sha256": "50bb13a3f87954d8f5b6e959dbe4fb366011576c34e48a88f0e039b33fabec84"}, "downloads": -1, "filename": "WatchUI-0.17.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0f652690d896c97e1b22d5116aab2fa7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8544, "upload_time": "2020-03-25T12:13:21", "upload_time_iso_8601": "2020-03-25T12:13:21.716517Z", "url": "https://files.pythonhosted.org/packages/c3/43/0f5f691be460118b3b674192d6ce8d141466bb17ce1bd72d4af108fd8bc2/WatchUI-0.17.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36931e86feefae1f9d35d7e0ebb4e5af", "sha256": "cc29ba79be7565235a92017d4494e64541eb420165fd35b0a1a165671872f668"}, "downloads": -1, "filename": "WatchUI-0.17.2.tar.gz", "has_sig": false, "md5_digest": "36931e86feefae1f9d35d7e0ebb4e5af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7577, "upload_time": "2020-03-25T12:13:22", "upload_time_iso_8601": "2020-03-25T12:13:22.974771Z", "url": "https://files.pythonhosted.org/packages/7b/5c/2f03039c0c5e05a3df20a96cdb749258a3c36525fee99e530209750f9625/WatchUI-0.17.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:32:08 2020"}