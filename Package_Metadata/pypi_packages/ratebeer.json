{"info": {"author": "Andrew Lilja", "author_email": "andrewlilja@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Internet", "Topic :: Internet :: WWW/HTTP"], "description": "ratebeer.py\n===========\n\nWhat is this?\n-------------\n\n`RateBeer <http://www.ratebeer.com/>`__ is a database of user-created\nreviews about beers and breweries. However, their API has been down for\nsome time, making it difficult to get that information programmatically.\nThis simplifies that process, allowing you to access it in the most\npainless way possible. Data is returned to you in a friendly, Pythonic\nway:\n\n.. code:: python\n\n    >>> import ratebeer\n    >>> rb = ratebeer.RateBeer()\n    >>> rb.search('Summit')\n    {'beers': [<Beer('/beer/21st-amendment-summit-ipa/61118/')>,\n               <Beer('/beer/4ts-summit-hoppy/258783/')>,\n               ...\n               <Beer('/beer/karben4--summit-maccc-daddy-hophead-red-ale/264171/')>,\n               <Beer('/beer/keroche-summit-lager/146462/')>],\n     'breweries': [<Brewery('/brewers/sound-to-summit-brewing/22497/')>,\n                   <Brewery('/brewers/summit-brewing-company/1233/')>,\n                   ...\n                   <Brewery('/brewers/summit-hard-cider-and-perry/18260/')>,\n                   <Brewery('/brewers/summit-station-restaurant-brewery/346/')>]}\n\nWhy not BeerAdvocate.com?\n-------------------------\n\nBecause they're evil, and they issue takedown notices left and right. We\nlike RateBeer. Scratch that, we **love** RateBeer.\n\nRequirements\n------------\n\nRequires `requests[security] <https://pypi.python.org/pypi/requests>`__,\n`beautifulsoup4 <https://pypi.python.org/pypi/beautifulsoup4/4.3.2>`__,\nand `lxml <https://pypi.python.org/pypi/lxml/3.4.1>`__.\n\nInstallation\n------------\n\nUse ``pip``:\n\n::\n\n    pip install ratebeer\n\nOr clone the package:\n\n::\n\n    git clone https://github.com/alilja/ratebeer.git\n\nUsage\n-----\n\nBecause ``ratebeer.py`` does not use an API, since one is not provided,\nno key is required. Simply:\n\n.. code:: python\n\n    >>> import ratebeer\n    >>> rb = ratebeer.RateBeer()\n    >>> rb.search(\"summit extra pale ale\")\n\n``RateBeer`` Class\n~~~~~~~~~~~~~~~~~~\n\n**Methods**\n\n-  ``get_beer`` -- Pass in the URL for a beer page and this function\n   will return a ``Beer`` object containing information about the beer.\n   In addition the the URL, it accepts an optional ``fetch`` argument\n   (default: False), which can be set to true to immediately download\n   the object's attributes. See the ``Beer`` class below. You can\n   replicate the ``RateBeer.beer(URL)`` functionality using\n   ``RateBeer.get_beer(URL, True).__dict__``.\n\n-  ``beer`` -- Returns a dictionary with information about that beer.\n\n.. code:: python\n\n    >>> rb.beer(\"/beer/new-belgium-tour-de-fall/279122/\")\n    {'_has_fetched': True,\n     'abv': 6.0,\n     'brewed_at': None,\n     'brewery': <Brewery('/brewers/new-belgium-brewing-company/77/')>,\n     'calories': 180,\n     'description': 'New Belgium\\x92s love for beer, bikes and benefits is best '\n                    'described by being at Tour de Fat. Our love for Cascade and '\n                    'Amarillo hops is best tasted in our Tour de Fall Pale Ale. '\n                    'We\\x92re cruising both across the country during our '\n                    'favorite time of year. Hop on and find Tour de Fall Pale '\n                    'Ale in fall 2014.',\n     'ibu': 38,\n     'img_url': 'http://res.cloudinary.com/ratebeer/image/upload/w_120,c_limit,q_85,d_no%20image.jpg/beer_279122.jpg',\n     'mean_rating': None,\n     'name': 'New Belgium Tour de Fall',\n     'num_ratings': 257,\n     'overall_rating': 77,\n     'seasonal': 'Autumn',\n     'style': 'American Pale Ale',\n     'style_rating': 75,\n     'style_url': '/beerstyles/american-pale-ale/18/',\n     'tags': ['cascade', 'amarillo'],\n     'url': '/beer/new-belgium-tour-de-fall/279122/',\n     'weighted_avg': 3.34}\n\n-  ``get_brewery`` -- Pass in the URL for a brewery page and this\n   function will return a ``Brewery`` object containing information\n   about that brewery. In addition the the URL, it accepts an optional\n   ``fetch`` argument (default: False), which can be set to true to\n   immediately download the object's attributes. See the ``Brewery``\n   class below. You can replicate the ``RateBeer.brewery(URL)``\n   functionality using ``RateBeer.get_brewery(URL, True).__dict__``.\n\n-  ``brewery`` -- Returns a dictionary with information about the\n   brewery. Includes a 'get\\_beers()' generator that provides\n   information about the brewery's beers.\n\n.. code:: python\n\n    >>> rb.brewery(\"/brewers/deschutes-brewery/233/\")\n    {'_has_fetched': True,\n     'city': 'Bend',\n     'country': 'USA',\n     'name': 'Deschutes Brewery',\n     'postal_code': '97702',\n     'state': 'Oregon',\n     'street': '901 SW Simpson Ave',\n     'telephone': '(541) 385-8606',\n     'type': 'Microbrewery',\n     'url': '/brewers/deschutes-brewery/233/',\n     'web': 'http://www.deschutesbrewery.com/'}\n\n-  ``search`` -- A generic search. A dictionary with two keys: beers and\n   breweries. Each of those contains a list of objects, beers and\n   breweries, respectively.\n\n.. code:: python\n\n    >>> rb = RateBeer()\n    >>> results = rb.search(\"summit extra pale ale\")\n    >>> results\n    {'beers': [<Beer('/beer/summit-extra-pale-ale/7344/')>,\n               <Beer('/beer/summit-extra-pale-ale--rose-petals/317841/')>],\n     'breweries': []}\n    >>> results['beers'][0].__dict__\n    {'_has_fetched': True,\n     'abv': 5.1,\n     'brewed_at': None,\n     'brewery': <Brewery('/brewers/summit-brewing-company/1233/')>,\n     'calories': 153,\n     'description': 'Summit Extra Pale Ale is not a beer brewed only for beer '\n                    'snobs. Just the opposite. It\\x92s a beer for everyone to '\n                    'enjoy: construction workers, stock brokers, farmers, sales '\n                    'people, clerks, teachers, lawyers, doctors, even other '\n                    'brewers. Its light bronze color and distinctly hoppy flavor '\n                    'have made it a favorite in St. Paul, Minneapolis and the '\n                    'rest of the Upper Midwest ever since we first brewed it '\n                    'back in 1986.',\n     'ibu': None,\n     'img_url': 'http://res.cloudinary.com/ratebeer/image/upload/w_120,c_limit,q_85,d_no%20image.jpg/beer_7344.jpg',\n     'mean_rating': None,\n     'name': 'Summit Extra Pale Ale',\n     'num_ratings': 701,\n     'overall_rating': 67,\n     'seasonal': None,\n     'style': 'American Pale Ale',\n     'style_rating': 58,\n     'style_url': '/beerstyles/american-pale-ale/18/',\n     'tags': ['fuggles', 'cascade', 'canned', 'extra pale ale', 'horizon'],\n     'url': '/beer/summit-extra-pale-ale/7344/',\n     'weighted_avg': 3.27}\n\n-  ``beer_style_list`` -- Returns a dictionary containing the beer style\n   name and a link to that page.\n\n.. code:: python\n\n    >>> rb.beer_style_list()\n    {'Abbey Dubbel': '/beerstyles/abbey-dubbel/71/',\n     'Abbey Tripel': '/beerstyles/abbey-tripel/72/',\n     ...\n     'Witbier': '/beerstyles/witbier/48/',\n     'Zwickel/Keller/Landbier': '/beerstyles/zwickel-keller-landbier/74/'}\n\n-  ``beer_style`` -- Returns a generator of ``Beer`` objects from the\n   beer style page. Takes a ``url`` to a beer style and an optional\n   ``sort_type``: ``overall`` returns the highest-rated beers (default\n   behavior) and ``trending`` returns, well, the trending beers.\n\n.. code:: python\n\n    >>> [b for b in rb.beer_style(\"/beerstyles/abbey-dubbel/71/\")]\n    [<Beer('/beer/st-bernardus-prior-8/2531/')>,\n     <Beer('/beer/westmalle-dubbel/2205/')>,\n     ...\n     <Beer('/beer/weyerbacher-althea/230962/')>,\n     <Beer('/beer/cricket-hill-small-batch-belgian-dubbel/143244/')>]\n\n``Beer`` Class\n~~~~~~~~~~~~~~\n\n``Beer`` requires the url of the beer you're looking for, like\n``RateBeer.beer`` and ``RateBeer.get_beer``.\n\n**Attributes**\n\n-  ``abv`` (float): percentage alcohol\n-  ``brewery`` (string): the name of the beer's brewery\n-  ``brewery`` (Brewery object): the beer's brewery\n-  ``brewed_at`` (Brewery object): actual brewery if contract brewed\n-  ``calories`` (float): estimated calories for the beer\n-  ``description`` (string): the beer's description\n-  ``img_url`` (string): a url to an image of the beer\n-  ``mean_rating`` (float): the mean rating for the beer (out of 5)\n-  ``name`` (string): the full name of the beer (may include the brewery\n   name)\n-  ``num_ratings`` (int): the number of reviews\n-  ``overall_rating`` (int): the overall rating (out of 100)\n-  ``seasonal`` (string): Summer, Winter, Autumn, Spring, Series, Special, None\n-  ``style`` (string): beer style\n-  ``style_url`` (string): beer style URL\n-  ``style_rating`` (int): rating of the beer within its style (out of\n   100)\n-  ``url`` (string): the url of the beer's ratebeer page\n-  ``tags`` (list of strings): tags given to the beer\n-  ``weighted_avg`` (float): the beer rating average, weighted using\n   some unknown algorithm (out of 5)\n\nAny attributes not available will be returned as None\n\n**Methods**\n\n-  ``get_reviews`` -- Returns a generator of ``Review`` objects for all\n   the reviews in the beer. Takes a ``review_order`` argument, which can\n   be \"most recent\", \"top raters\", or \"highest score\".\n\n``Review`` Class\n~~~~~~~~~~~~~~~~\n\n``Review`` returns a datatype that contains information about a specific\nreview. For efficiency reasons, it requires the soup of the individual\nreview. Probably best to not try to make one yourself: use\n``beer.get_reviews`` instead.\n\n**Attributes**\n\n-  ``appearance`` (int): rating for appearance (out of 5)\n-  ``aroma`` (int): aroma rating (out of 10)\n-  ``date`` (datetime): review date\n-  ``overall`` (int): overall rating (out of 20, for some reason)\n-  ``palate`` (int): palate rating (out of 5)\n-  ``rating`` (float): another overall rating provided in the review.\n   Not sure how this different from ``overall``.\n-  ``taste`` (int): taste rating (out of 10)\n-  ``text`` (string): actual text of the review.\n-  ``user_location`` (string): writer's location\n-  ``user_name`` (string): writer's username\n\n``Brewery`` Class\n~~~~~~~~~~~~~~~~~\n\n``Brewery`` requires the url of the brewery you want information on.\n\n**Attributes**\n\n-  ``city`` (string): the brewery's city\n-  ``country`` (string): the brewery's country\n-  ``name`` (string): the brewery's name\n-  ``postal_code`` (string): the brewery's postal code\n-  ``state`` (string): the brewery's state/municipality/province\n-  ``street`` (string): the street address of the brewery\n-  ``telephone`` (string): the brewery's telephone number\n-  ``type`` (string): the type of brewery. Typically \"microbrewery\" or\n   \"macrobrewery\"\n-  ``url`` (string): the url of the brewery's ratebeer page\n-  ``web`` (string): the url of the brewery's homepage\n\n**Methods**\n\n-  ``get_beers`` -- Returns a generator of ``Beer`` objects for every\n   beer produced by the brewery. Some brewery pages list beers that are\n   produced by do not have any pages, ratings, or information besides a\n   name. For now, these beers are omitted from the results.\n\nTests\n-----\n\n``ratebeer`` uses the standard Python unit testing library.\n\nChanges\n-------\n\nNote that the nature of web scraping means this might break at **any**\ntime.\n\nv2.3.1\n~~~~\n\n- Overhauled the Beer object so that it will be a little easier to fix with\n  future changes. Beer object now also returns Brewery objects rather than\n  strings for the brewery and brewed_at attributes. Also returns the url for the\n  image of the beer and a list of user-assigned tags. The test.py file has been\n  updated to be a bit clearer about where failures occur.\n\nv2.3\n~~~~\n\n- Fixes to work with the new RateBeer search page.\n\nv2.2.1\n~~~~~~\n\n-  ``Beer`` and ``Brewery`` objects are now \"lazy\", meaning they will\n   not fetch the RateBeer page unless the requested attributes are not\n   available. This should help minimize unnecessary requests.\n-  ``RateBeer.search()`` now returns two lists of ``Beer`` and\n   ``Brewery`` objects.\n-  ``RateBeer.beer_style_list()`` now returns ``Beer`` and ``Brewery``\n   objects.\n-  ``Beer`` and ``Brewery`` objects now allow custom attributes to be\n   set.\n\nv2.1\n~~~~\n\n-  Bugfixes and performance enhancements.\n-  Python 3 compatibility.\n\nv2.0\n~~~~\n\nMajor changes.\n\n-  New ``Beer``, ``Review``, and ``Brewery`` classes.\n-  Substantial overhaul in ``ratebeer.py``, addition of new files\n   including separation of responsibilities\n-  New generator functions in new classes.\n\nv1.4\n~~~~\n\n-  ``reviews`` is now a generator.\n\nv1.3.5\n~~~~~~\n\n-  Several improvements to results, particularly for edge cases and\n   situations where search results are not in the expected order.\n\nv1.3.4\n~~~~~~\n\n-  Metadata for beers returns floats when appropriate.\n\nv1.3.3\n~~~~~~\n\n-  Captures more meta data.\n-  Plays better with foreign beers.\n-  Now if information is missing from a beer entry, its key is not added\n   to the ``beer`` output.\n\nv1.3.2\n~~~~~~\n\n-  Captures aliases for beer names.\n\nv1.3\n~~~~\n\n-  Added ``beer_style_list`` and ``beer_style``.\n\nv1.2\n~~~~\n\n-  Everything conforms to PEP8 now. Thanks to the fine folks\n   `here <http://codereview.stackexchange.com/questions/69909/ratebeer-com-scraper>`__.\n-  Minor refactoring.\n\nv1.1\n~~~~\n\n-  Added ``reviews``.\n-  Better exceptions (no more ``LookupError`` for 404s)\n\nv1.0\n~~~~\n\n-  Initial release.\n\nLicense\n-------\n\n**Creator**: Andrew Lilja\n\n**Contributors**: \\* Vincent Castellano\n(@`Surye <https://github.com/Surye>`__) - Python 2 and 3 compatability\n\\* Steven A. Cholewiak - General bug squishing\n\nAll code released under `the Unlicense <http://unlicense.org/>`__\n(a.k.a. Public Domain).", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alilja/ratebeer", "keywords": "ratebeer rate beer ratings", "license": "Unlicense (a.k.a. Public Domain)", "maintainer": null, "maintainer_email": null, "name": "ratebeer", "package_url": "https://pypi.org/project/ratebeer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ratebeer/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/alilja/ratebeer"}, "release_url": "https://pypi.org/project/ratebeer/2.3.1/", "requires_dist": null, "requires_python": null, "summary": "Python API for RateBeer.com", "version": "2.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            ratebeer.py<br>===========<br><br>What is this?<br>-------------<br><br>`RateBeer &lt;http://www.ratebeer.com/&gt;`__ is a database of user-created<br>reviews about beers and breweries. However, their API has been down for<br>some time, making it difficult to get that information programmatically.<br>This simplifies that process, allowing you to access it in the most<br>painless way possible. Data is returned to you in a friendly, Pythonic<br>way:<br><br>.. code:: python<br><br>    &gt;&gt;&gt; import ratebeer<br>    &gt;&gt;&gt; rb = ratebeer.RateBeer()<br>    &gt;&gt;&gt; rb.search('Summit')<br>    {'beers': [&lt;Beer('/beer/21st-amendment-summit-ipa/61118/')&gt;,<br>               &lt;Beer('/beer/4ts-summit-hoppy/258783/')&gt;,<br>               ...<br>               &lt;Beer('/beer/karben4--summit-maccc-daddy-hophead-red-ale/264171/')&gt;,<br>               &lt;Beer('/beer/keroche-summit-lager/146462/')&gt;],<br>     'breweries': [&lt;Brewery('/brewers/sound-to-summit-brewing/22497/')&gt;,<br>                   &lt;Brewery('/brewers/summit-brewing-company/1233/')&gt;,<br>                   ...<br>                   &lt;Brewery('/brewers/summit-hard-cider-and-perry/18260/')&gt;,<br>                   &lt;Brewery('/brewers/summit-station-restaurant-brewery/346/')&gt;]}<br><br>Why not BeerAdvocate.com?<br>-------------------------<br><br>Because they're evil, and they issue takedown notices left and right. We<br>like RateBeer. Scratch that, we **love** RateBeer.<br><br>Requirements<br>------------<br><br>Requires `requests[security] &lt;https://pypi.python.org/pypi/requests&gt;`__,<br>`beautifulsoup4 &lt;https://pypi.python.org/pypi/beautifulsoup4/4.3.2&gt;`__,<br>and `lxml &lt;https://pypi.python.org/pypi/lxml/3.4.1&gt;`__.<br><br>Installation<br>------------<br><br>Use ``pip``:<br><br>::<br><br>    pip install ratebeer<br><br>Or clone the package:<br><br>::<br><br>    git clone https://github.com/alilja/ratebeer.git<br><br>Usage<br>-----<br><br>Because ``ratebeer.py`` does not use an API, since one is not provided,<br>no key is required. Simply:<br><br>.. code:: python<br><br>    &gt;&gt;&gt; import ratebeer<br>    &gt;&gt;&gt; rb = ratebeer.RateBeer()<br>    &gt;&gt;&gt; rb.search(\"summit extra pale ale\")<br><br>``RateBeer`` Class<br>~~~~~~~~~~~~~~~~~~<br><br>**Methods**<br><br>-  ``get_beer`` -- Pass in the URL for a beer page and this function<br>   will return a ``Beer`` object containing information about the beer.<br>   In addition the the URL, it accepts an optional ``fetch`` argument<br>   (default: False), which can be set to true to immediately download<br>   the object's attributes. See the ``Beer`` class below. You can<br>   replicate the ``RateBeer.beer(URL)`` functionality using<br>   ``RateBeer.get_beer(URL, True).__dict__``.<br><br>-  ``beer`` -- Returns a dictionary with information about that beer.<br><br>.. code:: python<br><br>    &gt;&gt;&gt; rb.beer(\"/beer/new-belgium-tour-de-fall/279122/\")<br>    {'_has_fetched': True,<br>     'abv': 6.0,<br>     'brewed_at': None,<br>     'brewery': &lt;Brewery('/brewers/new-belgium-brewing-company/77/')&gt;,<br>     'calories': 180,<br>     'description': 'New Belgium\\x92s love for beer, bikes and benefits is best '<br>                    'described by being at Tour de Fat. Our love for Cascade and '<br>                    'Amarillo hops is best tasted in our Tour de Fall Pale Ale. '<br>                    'We\\x92re cruising both across the country during our '<br>                    'favorite time of year. Hop on and find Tour de Fall Pale '<br>                    'Ale in fall 2014.',<br>     'ibu': 38,<br>     'img_url': 'http://res.cloudinary.com/ratebeer/image/upload/w_120,c_limit,q_85,d_no%20image.jpg/beer_279122.jpg',<br>     'mean_rating': None,<br>     'name': 'New Belgium Tour de Fall',<br>     'num_ratings': 257,<br>     'overall_rating': 77,<br>     'seasonal': 'Autumn',<br>     'style': 'American Pale Ale',<br>     'style_rating': 75,<br>     'style_url': '/beerstyles/american-pale-ale/18/',<br>     'tags': ['cascade', 'amarillo'],<br>     'url': '/beer/new-belgium-tour-de-fall/279122/',<br>     'weighted_avg': 3.34}<br><br>-  ``get_brewery`` -- Pass in the URL for a brewery page and this<br>   function will return a ``Brewery`` object containing information<br>   about that brewery. In addition the the URL, it accepts an optional<br>   ``fetch`` argument (default: False), which can be set to true to<br>   immediately download the object's attributes. See the ``Brewery``<br>   class below. You can replicate the ``RateBeer.brewery(URL)``<br>   functionality using ``RateBeer.get_brewery(URL, True).__dict__``.<br><br>-  ``brewery`` -- Returns a dictionary with information about the<br>   brewery. Includes a 'get\\_beers()' generator that provides<br>   information about the brewery's beers.<br><br>.. code:: python<br><br>    &gt;&gt;&gt; rb.brewery(\"/brewers/deschutes-brewery/233/\")<br>    {'_has_fetched': True,<br>     'city': 'Bend',<br>     'country': 'USA',<br>     'name': 'Deschutes Brewery',<br>     'postal_code': '97702',<br>     'state': 'Oregon',<br>     'street': '901 SW Simpson Ave',<br>     'telephone': '(541) 385-8606',<br>     'type': 'Microbrewery',<br>     'url': '/brewers/deschutes-brewery/233/',<br>     'web': 'http://www.deschutesbrewery.com/'}<br><br>-  ``search`` -- A generic search. A dictionary with two keys: beers and<br>   breweries. Each of those contains a list of objects, beers and<br>   breweries, respectively.<br><br>.. code:: python<br><br>    &gt;&gt;&gt; rb = RateBeer()<br>    &gt;&gt;&gt; results = rb.search(\"summit extra pale ale\")<br>    &gt;&gt;&gt; results<br>    {'beers': [&lt;Beer('/beer/summit-extra-pale-ale/7344/')&gt;,<br>               &lt;Beer('/beer/summit-extra-pale-ale--rose-petals/317841/')&gt;],<br>     'breweries': []}<br>    &gt;&gt;&gt; results['beers'][0].__dict__<br>    {'_has_fetched': True,<br>     'abv': 5.1,<br>     'brewed_at': None,<br>     'brewery': &lt;Brewery('/brewers/summit-brewing-company/1233/')&gt;,<br>     'calories': 153,<br>     'description': 'Summit Extra Pale Ale is not a beer brewed only for beer '<br>                    'snobs. Just the opposite. It\\x92s a beer for everyone to '<br>                    'enjoy: construction workers, stock brokers, farmers, sales '<br>                    'people, clerks, teachers, lawyers, doctors, even other '<br>                    'brewers. Its light bronze color and distinctly hoppy flavor '<br>                    'have made it a favorite in St. Paul, Minneapolis and the '<br>                    'rest of the Upper Midwest ever since we first brewed it '<br>                    'back in 1986.',<br>     'ibu': None,<br>     'img_url': 'http://res.cloudinary.com/ratebeer/image/upload/w_120,c_limit,q_85,d_no%20image.jpg/beer_7344.jpg',<br>     'mean_rating': None,<br>     'name': 'Summit Extra Pale Ale',<br>     'num_ratings': 701,<br>     'overall_rating': 67,<br>     'seasonal': None,<br>     'style': 'American Pale Ale',<br>     'style_rating': 58,<br>     'style_url': '/beerstyles/american-pale-ale/18/',<br>     'tags': ['fuggles', 'cascade', 'canned', 'extra pale ale', 'horizon'],<br>     'url': '/beer/summit-extra-pale-ale/7344/',<br>     'weighted_avg': 3.27}<br><br>-  ``beer_style_list`` -- Returns a dictionary containing the beer style<br>   name and a link to that page.<br><br>.. code:: python<br><br>    &gt;&gt;&gt; rb.beer_style_list()<br>    {'Abbey Dubbel': '/beerstyles/abbey-dubbel/71/',<br>     'Abbey Tripel': '/beerstyles/abbey-tripel/72/',<br>     ...<br>     'Witbier': '/beerstyles/witbier/48/',<br>     'Zwickel/Keller/Landbier': '/beerstyles/zwickel-keller-landbier/74/'}<br><br>-  ``beer_style`` -- Returns a generator of ``Beer`` objects from the<br>   beer style page. Takes a ``url`` to a beer style and an optional<br>   ``sort_type``: ``overall`` returns the highest-rated beers (default<br>   behavior) and ``trending`` returns, well, the trending beers.<br><br>.. code:: python<br><br>    &gt;&gt;&gt; [b for b in rb.beer_style(\"/beerstyles/abbey-dubbel/71/\")]<br>    [&lt;Beer('/beer/st-bernardus-prior-8/2531/')&gt;,<br>     &lt;Beer('/beer/westmalle-dubbel/2205/')&gt;,<br>     ...<br>     &lt;Beer('/beer/weyerbacher-althea/230962/')&gt;,<br>     &lt;Beer('/beer/cricket-hill-small-batch-belgian-dubbel/143244/')&gt;]<br><br>``Beer`` Class<br>~~~~~~~~~~~~~~<br><br>``Beer`` requires the url of the beer you're looking for, like<br>``RateBeer.beer`` and ``RateBeer.get_beer``.<br><br>**Attributes**<br><br>-  ``abv`` (float): percentage alcohol<br>-  ``brewery`` (string): the name of the beer's brewery<br>-  ``brewery`` (Brewery object): the beer's brewery<br>-  ``brewed_at`` (Brewery object): actual brewery if contract brewed<br>-  ``calories`` (float): estimated calories for the beer<br>-  ``description`` (string): the beer's description<br>-  ``img_url`` (string): a url to an image of the beer<br>-  ``mean_rating`` (float): the mean rating for the beer (out of 5)<br>-  ``name`` (string): the full name of the beer (may include the brewery<br>   name)<br>-  ``num_ratings`` (int): the number of reviews<br>-  ``overall_rating`` (int): the overall rating (out of 100)<br>-  ``seasonal`` (string): Summer, Winter, Autumn, Spring, Series, Special, None<br>-  ``style`` (string): beer style<br>-  ``style_url`` (string): beer style URL<br>-  ``style_rating`` (int): rating of the beer within its style (out of<br>   100)<br>-  ``url`` (string): the url of the beer's ratebeer page<br>-  ``tags`` (list of strings): tags given to the beer<br>-  ``weighted_avg`` (float): the beer rating average, weighted using<br>   some unknown algorithm (out of 5)<br><br>Any attributes not available will be returned as None<br><br>**Methods**<br><br>-  ``get_reviews`` -- Returns a generator of ``Review`` objects for all<br>   the reviews in the beer. Takes a ``review_order`` argument, which can<br>   be \"most recent\", \"top raters\", or \"highest score\".<br><br>``Review`` Class<br>~~~~~~~~~~~~~~~~<br><br>``Review`` returns a datatype that contains information about a specific<br>review. For efficiency reasons, it requires the soup of the individual<br>review. Probably best to not try to make one yourself: use<br>``beer.get_reviews`` instead.<br><br>**Attributes**<br><br>-  ``appearance`` (int): rating for appearance (out of 5)<br>-  ``aroma`` (int): aroma rating (out of 10)<br>-  ``date`` (datetime): review date<br>-  ``overall`` (int): overall rating (out of 20, for some reason)<br>-  ``palate`` (int): palate rating (out of 5)<br>-  ``rating`` (float): another overall rating provided in the review.<br>   Not sure how this different from ``overall``.<br>-  ``taste`` (int): taste rating (out of 10)<br>-  ``text`` (string): actual text of the review.<br>-  ``user_location`` (string): writer's location<br>-  ``user_name`` (string): writer's username<br><br>``Brewery`` Class<br>~~~~~~~~~~~~~~~~~<br><br>``Brewery`` requires the url of the brewery you want information on.<br><br>**Attributes**<br><br>-  ``city`` (string): the brewery's city<br>-  ``country`` (string): the brewery's country<br>-  ``name`` (string): the brewery's name<br>-  ``postal_code`` (string): the brewery's postal code<br>-  ``state`` (string): the brewery's state/municipality/province<br>-  ``street`` (string): the street address of the brewery<br>-  ``telephone`` (string): the brewery's telephone number<br>-  ``type`` (string): the type of brewery. Typically \"microbrewery\" or<br>   \"macrobrewery\"<br>-  ``url`` (string): the url of the brewery's ratebeer page<br>-  ``web`` (string): the url of the brewery's homepage<br><br>**Methods**<br><br>-  ``get_beers`` -- Returns a generator of ``Beer`` objects for every<br>   beer produced by the brewery. Some brewery pages list beers that are<br>   produced by do not have any pages, ratings, or information besides a<br>   name. For now, these beers are omitted from the results.<br><br>Tests<br>-----<br><br>``ratebeer`` uses the standard Python unit testing library.<br><br>Changes<br>-------<br><br>Note that the nature of web scraping means this might break at **any**<br>time.<br><br>v2.3.1<br>~~~~<br><br>- Overhauled the Beer object so that it will be a little easier to fix with<br>  future changes. Beer object now also returns Brewery objects rather than<br>  strings for the brewery and brewed_at attributes. Also returns the url for the<br>  image of the beer and a list of user-assigned tags. The test.py file has been<br>  updated to be a bit clearer about where failures occur.<br><br>v2.3<br>~~~~<br><br>- Fixes to work with the new RateBeer search page.<br><br>v2.2.1<br>~~~~~~<br><br>-  ``Beer`` and ``Brewery`` objects are now \"lazy\", meaning they will<br>   not fetch the RateBeer page unless the requested attributes are not<br>   available. This should help minimize unnecessary requests.<br>-  ``RateBeer.search()`` now returns two lists of ``Beer`` and<br>   ``Brewery`` objects.<br>-  ``RateBeer.beer_style_list()`` now returns ``Beer`` and ``Brewery``<br>   objects.<br>-  ``Beer`` and ``Brewery`` objects now allow custom attributes to be<br>   set.<br><br>v2.1<br>~~~~<br><br>-  Bugfixes and performance enhancements.<br>-  Python 3 compatibility.<br><br>v2.0<br>~~~~<br><br>Major changes.<br><br>-  New ``Beer``, ``Review``, and ``Brewery`` classes.<br>-  Substantial overhaul in ``ratebeer.py``, addition of new files<br>   including separation of responsibilities<br>-  New generator functions in new classes.<br><br>v1.4<br>~~~~<br><br>-  ``reviews`` is now a generator.<br><br>v1.3.5<br>~~~~~~<br><br>-  Several improvements to results, particularly for edge cases and<br>   situations where search results are not in the expected order.<br><br>v1.3.4<br>~~~~~~<br><br>-  Metadata for beers returns floats when appropriate.<br><br>v1.3.3<br>~~~~~~<br><br>-  Captures more meta data.<br>-  Plays better with foreign beers.<br>-  Now if information is missing from a beer entry, its key is not added<br>   to the ``beer`` output.<br><br>v1.3.2<br>~~~~~~<br><br>-  Captures aliases for beer names.<br><br>v1.3<br>~~~~<br><br>-  Added ``beer_style_list`` and ``beer_style``.<br><br>v1.2<br>~~~~<br><br>-  Everything conforms to PEP8 now. Thanks to the fine folks<br>   `here &lt;http://codereview.stackexchange.com/questions/69909/ratebeer-com-scraper&gt;`__.<br>-  Minor refactoring.<br><br>v1.1<br>~~~~<br><br>-  Added ``reviews``.<br>-  Better exceptions (no more ``LookupError`` for 404s)<br><br>v1.0<br>~~~~<br><br>-  Initial release.<br><br>License<br>-------<br><br>**Creator**: Andrew Lilja<br><br>**Contributors**: \\* Vincent Castellano<br>(@`Surye &lt;https://github.com/Surye&gt;`__) - Python 2 and 3 compatability<br>\\* Steven A. Cholewiak - General bug squishing<br><br>All code released under `the Unlicense &lt;http://unlicense.org/&gt;`__<br>(a.k.a. Public Domain).\n          </div>"}, "last_serial": 3202463, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "6ce81df9b490d44e26655b6cc577ca03", "sha256": "0a902dd5115bddc374fee625dc67e81238a1c23a81ebda4f3fce9042c9f9e8a7"}, "downloads": -1, "filename": "ratebeer-1.0.macosx-10.9-x86_64.exe", "has_sig": false, "md5_digest": "6ce81df9b490d44e26655b6cc577ca03", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 65631, "upload_time": "2014-11-04T19:32:17", "upload_time_iso_8601": "2014-11-04T19:32:17.749991Z", "url": "https://files.pythonhosted.org/packages/42/4d/97cb0d7902a163dea1da24d8b40dfc86274ccb208ba9aca65b17dee9f09f/ratebeer-1.0.macosx-10.9-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "27d2bb32e77f91fb73b96bf350f49543", "sha256": "a400a0578934d15447625d464dc271a61d937db52f25ba565229aaa785c96463"}, "downloads": -1, "filename": "ratebeer-1.0.tar.gz", "has_sig": false, "md5_digest": "27d2bb32e77f91fb73b96bf350f49543", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2870, "upload_time": "2014-11-04T19:32:14", "upload_time_iso_8601": "2014-11-04T19:32:14.975639Z", "url": "https://files.pythonhosted.org/packages/7d/d1/956a4ffc11d4209349b4d7020100c62d3c9273f0b20eab75b5bab585bbab/ratebeer-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "567ac45c21c0a8b9fae167fad290576a", "sha256": "7f87df7a12521cf416201059cac8942df521776d428e33b169e7d6352f1c81d8"}, "downloads": -1, "filename": "ratebeer-1.1.macosx-10.9-x86_64.exe", "has_sig": false, "md5_digest": "567ac45c21c0a8b9fae167fad290576a", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 66087, "upload_time": "2014-11-08T03:13:53", "upload_time_iso_8601": "2014-11-08T03:13:53.382431Z", "url": "https://files.pythonhosted.org/packages/e5/c3/fca77d546401bd6210b9ab78a4bd49f771f83ca798293edba7f1f16d339e/ratebeer-1.1.macosx-10.9-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "36707ab71669e84954b0c3a4cb978941", "sha256": "a57b04d1de00537c63739fb9e67b01d08aa57d53f4091016c349f2de0ca63e51"}, "downloads": -1, "filename": "ratebeer-1.1.tar.gz", "has_sig": false, "md5_digest": "36707ab71669e84954b0c3a4cb978941", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3319, "upload_time": "2014-11-08T03:13:50", "upload_time_iso_8601": "2014-11-08T03:13:50.108991Z", "url": "https://files.pythonhosted.org/packages/ef/3f/24e3c8be5b6141cb6636250657d63e8b6a7ed9e476341adfef7e0fcdcec0/ratebeer-1.1.tar.gz", "yanked": false}], "1.1.0a": [], "1.1.1": [{"comment_text": "", "digests": {"md5": "e39f0c88e8d8d2bafcb9d25f27cd955e", "sha256": "5fa2848af7e20e35de67484ca5beac80ee13b52001172a70189f6aa48957cbc8"}, "downloads": -1, "filename": "ratebeer-1.1.1.macosx-10.9-x86_64.exe", "has_sig": false, "md5_digest": "e39f0c88e8d8d2bafcb9d25f27cd955e", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 66457, "upload_time": "2014-11-08T03:28:09", "upload_time_iso_8601": "2014-11-08T03:28:09.312461Z", "url": "https://files.pythonhosted.org/packages/dd/5e/d3cac7efc73d1755fb3d0c9eaf605260b3c19fb1a47a4fa31825381193fd/ratebeer-1.1.1.macosx-10.9-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ec3d3a519b895a5a4e01775205592b0", "sha256": "a7104f892b219bd64a0bd9f44e6218fd44eabf7b58621a39bd9068d6e2a86cc8"}, "downloads": -1, "filename": "ratebeer-1.1.1.tar.gz", "has_sig": false, "md5_digest": "1ec3d3a519b895a5a4e01775205592b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3451, "upload_time": "2014-11-08T03:28:06", "upload_time_iso_8601": "2014-11-08T03:28:06.108106Z", "url": "https://files.pythonhosted.org/packages/54/e9/1d1d55593a0f61a9d945769016b251e9c5f3b2ce8d884fb78f9f90fc01c1/ratebeer-1.1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "24d8fa07186f8b54b5706ca2d7954e69", "sha256": "e580b41a1e29dd770d5c640251b7d9026c0e2b6bfc0ecbbc7fec29001f69010a"}, "downloads": -1, "filename": "ratebeer-1.2.macosx-10.9-x86_64.exe", "has_sig": false, "md5_digest": "24d8fa07186f8b54b5706ca2d7954e69", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 66814, "upload_time": "2014-11-16T02:14:18", "upload_time_iso_8601": "2014-11-16T02:14:18.879576Z", "url": "https://files.pythonhosted.org/packages/8d/e8/65ea4d9f7b18396b0cd8ddb3f00486f624a2b41d6e0c0ea8a923218dd1ab/ratebeer-1.2.macosx-10.9-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "1db9754123bb9f0a3be8d44a88b93eef", "sha256": "96f2626e938cbe70cfcc3c716b60731ce88523ede9f11be3afd2faca0cb86ff2"}, "downloads": -1, "filename": "ratebeer-1.2.tar.gz", "has_sig": false, "md5_digest": "1db9754123bb9f0a3be8d44a88b93eef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3837, "upload_time": "2014-11-16T02:14:14", "upload_time_iso_8601": "2014-11-16T02:14:14.997209Z", "url": "https://files.pythonhosted.org/packages/21/ea/28d4f95e73bddba307059a3d8dfc74fe87f8c3945a5f9068670db4a2d560/ratebeer-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "9805bd35a213bc9ba3e62d6602920e7f", "sha256": "4e2fc3f90882484b4b5f35c6f99e68210950bb45f45498c8d8e9aa7f4723bcfa"}, "downloads": -1, "filename": "ratebeer-1.2.1.tar.gz", "has_sig": false, "md5_digest": "9805bd35a213bc9ba3e62d6602920e7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3906, "upload_time": "2014-11-16T02:20:33", "upload_time_iso_8601": "2014-11-16T02:20:33.431625Z", "url": "https://files.pythonhosted.org/packages/2c/8d/14d74c61b5612aa033b14f616becff7e9ae34e3035b6e534b7066bdd4316/ratebeer-1.2.1.tar.gz", "yanked": false}], "1.2.1.1": [], "1.2.2": [{"comment_text": "", "digests": {"md5": "1b49d9a1d6c59c41d4cc144918ab8056", "sha256": "71504e00306e98bb19c26f02facfcd06009c5624f41513b2d39e9a237f337e2e"}, "downloads": -1, "filename": "ratebeer-1.2.2.tar.gz", "has_sig": false, "md5_digest": "1b49d9a1d6c59c41d4cc144918ab8056", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3832, "upload_time": "2014-11-16T02:28:01", "upload_time_iso_8601": "2014-11-16T02:28:01.501021Z", "url": "https://files.pythonhosted.org/packages/ad/2c/e40b5dbacf2021dec41482b1736b5433896f69392cee51cb4ea200e165ce/ratebeer-1.2.2.tar.gz", "yanked": false}], "1.2.2a": [{"comment_text": "", "digests": {"md5": "144dd47a0fef63ac743bda4814c25be6", "sha256": "21c725935851e46982f942ac75d2503cf0331e84aa846aa408c8a7ceca3e9217"}, "downloads": -1, "filename": "ratebeer-1.2.2a.tar.gz", "has_sig": false, "md5_digest": "144dd47a0fef63ac743bda4814c25be6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3857, "upload_time": "2014-11-16T21:28:33", "upload_time_iso_8601": "2014-11-16T21:28:33.556679Z", "url": "https://files.pythonhosted.org/packages/cc/6c/760116d58284b4648f2b4e4b12328cada7bf2b1e4658d13523ff754a01a2/ratebeer-1.2.2a.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "14f90101cf47b5b9bf5ba672959b3e24", "sha256": "7d3bce3a53fc7029ba9398c0db17c3972ef2725fde01a6e23d8493ca3045e60f"}, "downloads": -1, "filename": "ratebeer-1.2.3.tar.gz", "has_sig": false, "md5_digest": "14f90101cf47b5b9bf5ba672959b3e24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3857, "upload_time": "2014-11-16T21:33:34", "upload_time_iso_8601": "2014-11-16T21:33:34.807709Z", "url": "https://files.pythonhosted.org/packages/ee/ff/da6a573e6faba55b20af364f29467dbdfe49ea397590fd990b28effb482b/ratebeer-1.2.3.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "b2f05f8376014fd72cc5c80eaaf41ca8", "sha256": "9663000d76213c92d80e2f10aa5d62b6ad1d29d9ab2dd9c48ec3afd053e2d1cb"}, "downloads": -1, "filename": "ratebeer-1.3.tar.gz", "has_sig": false, "md5_digest": "b2f05f8376014fd72cc5c80eaaf41ca8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4487, "upload_time": "2014-11-26T02:51:57", "upload_time_iso_8601": "2014-11-26T02:51:57.864935Z", "url": "https://files.pythonhosted.org/packages/15/38/ae5cc71c3c5c4c97d77eb93664022d7d124610b8b0ea1c15856955672ac3/ratebeer-1.3.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "fb4a649b35b305ec05e4d365db086102", "sha256": "423358fe293a389a959d2251ebbaf9dafd6b3b456cc067ba92f941b2d2900222"}, "downloads": -1, "filename": "ratebeer-1.3.1.tar.gz", "has_sig": false, "md5_digest": "fb4a649b35b305ec05e4d365db086102", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4497, "upload_time": "2014-11-26T03:04:57", "upload_time_iso_8601": "2014-11-26T03:04:57.012313Z", "url": "https://files.pythonhosted.org/packages/5d/77/819ff65270d4b2de73906031042edc635d322cf4f11a544d21d62a13c1fd/ratebeer-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "c310110d643c4c81a9e90d38d3c536a9", "sha256": "49c4a524947c8e521257dc046808dc575c511b3523ddad087bcc7e59a56845c1"}, "downloads": -1, "filename": "ratebeer-1.3.2.tar.gz", "has_sig": false, "md5_digest": "c310110d643c4c81a9e90d38d3c536a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4735, "upload_time": "2014-12-07T18:08:05", "upload_time_iso_8601": "2014-12-07T18:08:05.748598Z", "url": "https://files.pythonhosted.org/packages/a0/5a/6bab452f27e91ed22f823f6460a35af2583aa7ec192234097c9069ae2a74/ratebeer-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "bec110acf04b1ef1dd5a1e69bc69eb95", "sha256": "d73c32bfc982b10d876ad4f03ad81e324ebe6cfaeb19bf6354b68c27e7e5bc99"}, "downloads": -1, "filename": "ratebeer-1.3.3.tar.gz", "has_sig": false, "md5_digest": "bec110acf04b1ef1dd5a1e69bc69eb95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5056, "upload_time": "2014-12-09T01:59:57", "upload_time_iso_8601": "2014-12-09T01:59:57.486204Z", "url": "https://files.pythonhosted.org/packages/f2/3b/083ef542059779b63963d476a2e0fa0d92971a9bcae932f77f7107994c42/ratebeer-1.3.3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "3301ed1c944421644fd7498ab8c0f634", "sha256": "93027105ac5d577b03a90d683f396186691ea09b82c12f960dca3e5fd1affd49"}, "downloads": -1, "filename": "ratebeer-1.3.4.tar.gz", "has_sig": false, "md5_digest": "3301ed1c944421644fd7498ab8c0f634", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5846, "upload_time": "2014-12-09T17:03:01", "upload_time_iso_8601": "2014-12-09T17:03:01.334720Z", "url": "https://files.pythonhosted.org/packages/58/86/28ffba72747afb27e0817a1b42f1774fe81283fa3b70579bea6618cf341d/ratebeer-1.3.4.tar.gz", "yanked": false}], "1.3.5": [{"comment_text": "", "digests": {"md5": "b7e3361914de1abbd5794e5821d45306", "sha256": "37e50bb6b2ac03a0e142bfaa498b5a42a90ad290511a492ad51918f8848a727a"}, "downloads": -1, "filename": "ratebeer-1.3.5.tar.gz", "has_sig": false, "md5_digest": "b7e3361914de1abbd5794e5821d45306", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5935, "upload_time": "2014-12-27T17:23:58", "upload_time_iso_8601": "2014-12-27T17:23:58.737367Z", "url": "https://files.pythonhosted.org/packages/9e/01/4dcee1683aab9426dd7100c3d33255ec068e4c676ad10e2d84f4912481b4/ratebeer-1.3.5.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "b356d3202c0a1ab6835559b8b262bf64", "sha256": "cf1b1e05804732983cc3d208ed12da8273434aa86d68e2e087ce8862cb5a27f9"}, "downloads": -1, "filename": "ratebeer-1.4.tar.gz", "has_sig": false, "md5_digest": "b356d3202c0a1ab6835559b8b262bf64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6064, "upload_time": "2015-02-04T19:01:32", "upload_time_iso_8601": "2015-02-04T19:01:32.514074Z", "url": "https://files.pythonhosted.org/packages/53/a2/aa2c2b1352337140d64f3526032339b54a9f2c2cd1b0408beeaac677a9f4/ratebeer-1.4.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "a58da8ca246298a59ec96bf83d12bdde", "sha256": "a64492bf77e506807d1d6c4ff11c9bd37df4061b59498f736327988ecd827c9a"}, "downloads": -1, "filename": "ratebeer-2.0.tar.gz", "has_sig": false, "md5_digest": "a58da8ca246298a59ec96bf83d12bdde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7314, "upload_time": "2015-03-16T18:52:30", "upload_time_iso_8601": "2015-03-16T18:52:30.975752Z", "url": "https://files.pythonhosted.org/packages/44/86/2f622f143dda5c0c46f199d5445c650bd2e0809eae0189e9b2552eaae040/ratebeer-2.0.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "81c76d6a8af80a9c9cc63bf4a7892b8d", "sha256": "3e6a80b1a091de00149176f983c623f0f4b12526c1a346bff919704846a20c52"}, "downloads": -1, "filename": "ratebeer-2.1.tar.gz", "has_sig": false, "md5_digest": "81c76d6a8af80a9c9cc63bf4a7892b8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7241, "upload_time": "2015-05-27T19:11:26", "upload_time_iso_8601": "2015-05-27T19:11:26.363065Z", "url": "https://files.pythonhosted.org/packages/6b/09/38d702147c9d30b4cc7a0fc0d8af32e86795381fbc4cde13414a48341136/ratebeer-2.1.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "64bcec10051ef41da2f5760504c0616c", "sha256": "d53a462bfe64449ad361adc722b489397f7a78f956c1152da047e8b4bc460591"}, "downloads": -1, "filename": "ratebeer-2.3.0.tar.gz", "has_sig": false, "md5_digest": "64bcec10051ef41da2f5760504c0616c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16611, "upload_time": "2015-09-21T16:48:19", "upload_time_iso_8601": "2015-09-21T16:48:19.107228Z", "url": "https://files.pythonhosted.org/packages/64/a7/e8a0a8d6f4f51dc60f21b92c94b0177fa4294e731cfc64d4daf0bd3c000b/ratebeer-2.3.0.tar.gz", "yanked": false}], "2.3.1": [{"comment_text": "", "digests": {"md5": "58d7310935858be2755a1cbd8181f4bc", "sha256": "c27fefd454e1c4b2b1a716c6cf65ea06bc91e86ff5afa7cedcafe1e0ef8fbf14"}, "downloads": -1, "filename": "ratebeer-2.3.1.tar.gz", "has_sig": false, "md5_digest": "58d7310935858be2755a1cbd8181f4bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18023, "upload_time": "2015-12-15T15:48:46", "upload_time_iso_8601": "2015-12-15T15:48:46.175873Z", "url": "https://files.pythonhosted.org/packages/60/ed/2e3b8b9d13cf4e44a57d6914282aaf74535ddbbb87b2e22d019e6d8f6cec/ratebeer-2.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "58d7310935858be2755a1cbd8181f4bc", "sha256": "c27fefd454e1c4b2b1a716c6cf65ea06bc91e86ff5afa7cedcafe1e0ef8fbf14"}, "downloads": -1, "filename": "ratebeer-2.3.1.tar.gz", "has_sig": false, "md5_digest": "58d7310935858be2755a1cbd8181f4bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18023, "upload_time": "2015-12-15T15:48:46", "upload_time_iso_8601": "2015-12-15T15:48:46.175873Z", "url": "https://files.pythonhosted.org/packages/60/ed/2e3b8b9d13cf4e44a57d6914282aaf74535ddbbb87b2e22d019e6d8f6cec/ratebeer-2.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:07 2020"}