{"info": {"author": "Rohith Gandhi G", "author_email": "grohith327@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Image Recognition", "Topic :: Software Development :: Build Tools"], "description": "# SimpleGAN\n\n[![License](http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat)](LICENSE) [![Documentation Status](https://readthedocs.org/projects/simplegan/badge/?version=latest)](https://simplegan.readthedocs.io/en/latest/?badge=latest) [![Downloads](https://pepy.tech/badge/simplegan)](https://pepy.tech/project/simplegan) [![Downloads](https://pepy.tech/badge/simplegan/month)](https://pepy.tech/project/simplegan/month) [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n**Framework to ease training of generative models**\n\nSimpleGAN is a framework based on [TensorFlow](https://www.tensorflow.org/) to make training of generative models easier. SimpleGAN provides high level APIs with customizability options to user which allows them to train a generative models with few lines of code or the user can reuse modules from the exisiting architectures to run custom training loops and experiments.\n### Requirements\nMake sure you have the following packages installed\n* [tensorflow](https://www.tensorflow.org/install)\n* [tqdm](https://github.com/tqdm/tqdm#latest-pypi-stable-release)\n* [imagio](https://pypi.org/project/imageio/)\n* [opencv](https://pypi.org/project/opencv-python/)\n* [tensorflow-datasets](https://www.tensorflow.org/datasets/overview#installation)\n### Installation\nLatest stable release:\n```bash\n  $ pip install simplegan\n```\nLatest Development release:\n```bash\n  $ pip install git+https://github.com/grohith327/simplegan.git\n```\n### Getting Started\n##### DCGAN\n```python\nfrom simplegan.gan import DCGAN\n\n## initialize model\ngan = DCGAN() \n\n## load train data\ntrain_ds = gan.load_data(use_mnist = True)\n\n## get samples from the data object\nsamples = gan.get_sample(train_ds, n_samples = 5)\n\n## train the model\ngan.fit(train_ds = train_ds)\n\n## get generated samples from model\ngenerated_samples = gan.generate_samples(n_samples = 5)\n```\n##### Custom training loops for GANs\n```python\nfrom simplegan.gan import Pix2Pix\n\n## initialize model\ngan = Pix2Pix()\n\n## get generator module of Pix2Pix\ngenerator = gan.generator() ## A tf.keras model\n\n## get discriminator module of Pix2Pix\ndiscriminator = gan.discriminator() ## A tf.keras model\n\n## training loop\nwith tf.GradientTape() as tape:\n\"\"\" Custom training loops \"\"\"\n```\n##### Convolutional Autoencoder\n```python\nfrom simplegan.autoencoder import ConvolutionalAutoencoder\n\n## initialize autoencoder\nautoenc = ConvolutionalAutoencoder()\n\n## load train and test data\ntrain_ds, test_ds = autoenc.load_data(use_cifar10 = True)\n\n## get sample from data object\ntrain_sample = autoenc.get_sample(data = train_ds, n_samples = 5)\ntest_sample = autoenc.get_sample(data = test_ds, n_samples = 1)\n\n## train the autoencoder\nautoenc.fit(train_ds = train_ds, epochs = 5, optimizer = 'RMSprop', learning_rate = 0.002)\n\n## get generated test samples from model\ngenerated_samples = autoenc.generate_samples(test_ds = test_ds.take(1))\n```\nTo have a look at more examples in detail, check [here](examples)\n### Documentation\nCheck out the [docs page](https://simplegan.readthedocs.io/en/latest/)\n### Provided models\n| Model | Generated Images |\n|:---------:|:--------------:|\n| Vanilla Autoencoder | None |\n| Convolutional Autoencoder | ![](https://github.com/grohith327/simplegan/blob/master/assets/mnist_conv_ae.png) |\n| Variational Autoencoder [[Paper](https://arxiv.org/abs/1312.6114)] | ![](https://github.com/grohith327/simplegan/blob/master/assets/vae.jpeg) |\n| Vector Quantized - Variational Autoencoder [[Paper](https://arxiv.org/abs/1711.00937)] | ![](https://github.com/grohith327/simplegan/blob/master/assets/vq_vae.png) |\n| Vanilla GAN [[Paper](https://arxiv.org/abs/1406.2661)] | ![](https://github.com/grohith327/simplegan/blob/master/assets/GAN.png) |\n| DCGAN [[Paper](https://arxiv.org/abs/1511.06434)] | ![](https://github.com/grohith327/simplegan/blob/master/assets/DCGAN.png) |\n| WGAN [[Paper](https://arxiv.org/abs/1701.07875)] | ![](https://github.com/grohith327/simplegan/blob/master/assets/WGAN.png) |\n| CGAN [[Paper](https://arxiv.org/abs/1411.1784)] | ![](https://github.com/grohith327/simplegan/blob/master/assets/CGAN.png) |\n| InfoGAN [[Paper](https://arxiv.org/abs/1606.03657)] | ![](https://github.com/grohith327/simplegan/blob/master/assets/InfoGAN.png) |\n| Pix2Pix [[Paper](https://arxiv.org/abs/1611.07004)] | ![](https://github.com/grohith327/simplegan/blob/master/assets/Pix2Pix.png) |\n| CycleGAN [[Paper](https://arxiv.org/abs/1703.10593)] | ![](https://github.com/grohith327/simplegan/blob/master/assets/CycleGAN.png) |\n| 3DGAN(VoxelGAN) [[Paper](http://3dgan.csail.mit.edu/papers/3dgan_nips.pdf)] | ![](https://github.com/grohith327/simplegan/blob/master/assets/3DGAN.png) |\n| Self-Attention GAN(SAGAN) [[Paper](https://arxiv.org/pdf/1805.08318.pdf)] | ![](https://github.com/grohith327/simplegan/blob/master/assets/SAGAN.png) |\n\n\n### Contributing\nWe appreciate all contributions. If you are planning to perform bug-fixes, add new features or models, please file an issue and discuss before making a pull request.\n### Citation\n```\n@software{simplegan,\n    author = {{Rohith Gandhi et al.}},\n    title = {simplegan},\n    url = {https://simplegan.readthedocs.io},\n    version = {0.2.8},\n}\n```\n### Contributors \n* [Rohith Gandhi](https://github.com/grohith327)\n* [Prem Kumar](https://github.com/Prem-kumar27)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/grohith327", "keywords": "GAN,Computer Vision,Deep Learning,TensorFlow,Generative Models,Neural Networks,AI", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "simplegan", "package_url": "https://pypi.org/project/simplegan/", "platform": "", "project_url": "https://pypi.org/project/simplegan/", "project_urls": {"Homepage": "https://github.com/grohith327"}, "release_url": "https://pypi.org/project/simplegan/0.2.9/", "requires_dist": null, "requires_python": "", "summary": "Framework to ease training of generative models based on TensorFlow", "version": "0.2.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SimpleGAN</h1>\n<p><a href=\"LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5bce10e8e48e6c0a122e9f07c0b94cad805796fb/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c6174\"></a> <a href=\"https://simplegan.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d256eb387db0e259833a017cf67a71ed55df2f6/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f73696d706c6567616e2f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://pepy.tech/project/simplegan\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b1f64a215035620bb71c110e80a49a026a124a3/68747470733a2f2f706570792e746563682f62616467652f73696d706c6567616e\"></a> <a href=\"https://pepy.tech/project/simplegan/month\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9cd051212c02e5353b0557138c6fbf09fd74431/68747470733a2f2f706570792e746563682f62616467652f73696d706c6567616e2f6d6f6e7468\"></a> <a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p><strong>Framework to ease training of generative models</strong></p>\n<p>SimpleGAN is a framework based on <a href=\"https://www.tensorflow.org/\" rel=\"nofollow\">TensorFlow</a> to make training of generative models easier. SimpleGAN provides high level APIs with customizability options to user which allows them to train a generative models with few lines of code or the user can reuse modules from the exisiting architectures to run custom training loops and experiments.</p>\n<h3>Requirements</h3>\n<p>Make sure you have the following packages installed</p>\n<ul>\n<li><a href=\"https://www.tensorflow.org/install\" rel=\"nofollow\">tensorflow</a></li>\n<li><a href=\"https://github.com/tqdm/tqdm#latest-pypi-stable-release\" rel=\"nofollow\">tqdm</a></li>\n<li><a href=\"https://pypi.org/project/imageio/\" rel=\"nofollow\">imagio</a></li>\n<li><a href=\"https://pypi.org/project/opencv-python/\" rel=\"nofollow\">opencv</a></li>\n<li><a href=\"https://www.tensorflow.org/datasets/overview#installation\" rel=\"nofollow\">tensorflow-datasets</a></li>\n</ul>\n<h3>Installation</h3>\n<p>Latest stable release:</p>\n<pre>  $ pip install simplegan\n</pre>\n<p>Latest Development release:</p>\n<pre>  $ pip install git+https://github.com/grohith327/simplegan.git\n</pre>\n<h3>Getting Started</h3>\n<h5>DCGAN</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simplegan.gan</span> <span class=\"kn\">import</span> <span class=\"n\">DCGAN</span>\n\n<span class=\"c1\">## initialize model</span>\n<span class=\"n\">gan</span> <span class=\"o\">=</span> <span class=\"n\">DCGAN</span><span class=\"p\">()</span> \n\n<span class=\"c1\">## load train data</span>\n<span class=\"n\">train_ds</span> <span class=\"o\">=</span> <span class=\"n\">gan</span><span class=\"o\">.</span><span class=\"n\">load_data</span><span class=\"p\">(</span><span class=\"n\">use_mnist</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## get samples from the data object</span>\n<span class=\"n\">samples</span> <span class=\"o\">=</span> <span class=\"n\">gan</span><span class=\"o\">.</span><span class=\"n\">get_sample</span><span class=\"p\">(</span><span class=\"n\">train_ds</span><span class=\"p\">,</span> <span class=\"n\">n_samples</span> <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## train the model</span>\n<span class=\"n\">gan</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">train_ds</span> <span class=\"o\">=</span> <span class=\"n\">train_ds</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## get generated samples from model</span>\n<span class=\"n\">generated_samples</span> <span class=\"o\">=</span> <span class=\"n\">gan</span><span class=\"o\">.</span><span class=\"n\">generate_samples</span><span class=\"p\">(</span><span class=\"n\">n_samples</span> <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<h5>Custom training loops for GANs</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simplegan.gan</span> <span class=\"kn\">import</span> <span class=\"n\">Pix2Pix</span>\n\n<span class=\"c1\">## initialize model</span>\n<span class=\"n\">gan</span> <span class=\"o\">=</span> <span class=\"n\">Pix2Pix</span><span class=\"p\">()</span>\n\n<span class=\"c1\">## get generator module of Pix2Pix</span>\n<span class=\"n\">generator</span> <span class=\"o\">=</span> <span class=\"n\">gan</span><span class=\"o\">.</span><span class=\"n\">generator</span><span class=\"p\">()</span> <span class=\"c1\">## A tf.keras model</span>\n\n<span class=\"c1\">## get discriminator module of Pix2Pix</span>\n<span class=\"n\">discriminator</span> <span class=\"o\">=</span> <span class=\"n\">gan</span><span class=\"o\">.</span><span class=\"n\">discriminator</span><span class=\"p\">()</span> <span class=\"c1\">## A tf.keras model</span>\n\n<span class=\"c1\">## training loop</span>\n<span class=\"k\">with</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">GradientTape</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">tape</span><span class=\"p\">:</span>\n<span class=\"sd\">\"\"\" Custom training loops \"\"\"</span>\n</pre>\n<h5>Convolutional Autoencoder</h5>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simplegan.autoencoder</span> <span class=\"kn\">import</span> <span class=\"n\">ConvolutionalAutoencoder</span>\n\n<span class=\"c1\">## initialize autoencoder</span>\n<span class=\"n\">autoenc</span> <span class=\"o\">=</span> <span class=\"n\">ConvolutionalAutoencoder</span><span class=\"p\">()</span>\n\n<span class=\"c1\">## load train and test data</span>\n<span class=\"n\">train_ds</span><span class=\"p\">,</span> <span class=\"n\">test_ds</span> <span class=\"o\">=</span> <span class=\"n\">autoenc</span><span class=\"o\">.</span><span class=\"n\">load_data</span><span class=\"p\">(</span><span class=\"n\">use_cifar10</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## get sample from data object</span>\n<span class=\"n\">train_sample</span> <span class=\"o\">=</span> <span class=\"n\">autoenc</span><span class=\"o\">.</span><span class=\"n\">get_sample</span><span class=\"p\">(</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">train_ds</span><span class=\"p\">,</span> <span class=\"n\">n_samples</span> <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">test_sample</span> <span class=\"o\">=</span> <span class=\"n\">autoenc</span><span class=\"o\">.</span><span class=\"n\">get_sample</span><span class=\"p\">(</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">test_ds</span><span class=\"p\">,</span> <span class=\"n\">n_samples</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## train the autoencoder</span>\n<span class=\"n\">autoenc</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">train_ds</span> <span class=\"o\">=</span> <span class=\"n\">train_ds</span><span class=\"p\">,</span> <span class=\"n\">epochs</span> <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"s1\">'RMSprop'</span><span class=\"p\">,</span> <span class=\"n\">learning_rate</span> <span class=\"o\">=</span> <span class=\"mf\">0.002</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## get generated test samples from model</span>\n<span class=\"n\">generated_samples</span> <span class=\"o\">=</span> <span class=\"n\">autoenc</span><span class=\"o\">.</span><span class=\"n\">generate_samples</span><span class=\"p\">(</span><span class=\"n\">test_ds</span> <span class=\"o\">=</span> <span class=\"n\">test_ds</span><span class=\"o\">.</span><span class=\"n\">take</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n</pre>\n<p>To have a look at more examples in detail, check <a href=\"examples\" rel=\"nofollow\">here</a></p>\n<h3>Documentation</h3>\n<p>Check out the <a href=\"https://simplegan.readthedocs.io/en/latest/\" rel=\"nofollow\">docs page</a></p>\n<h3>Provided models</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Model</th>\n<th align=\"center\">Generated Images</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Vanilla Autoencoder</td>\n<td align=\"center\">None</td>\n</tr>\n<tr>\n<td align=\"center\">Convolutional Autoencoder</td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2b67a76de219423ca68168aab540e12835e60bea/68747470733a2f2f6769746875622e636f6d2f67726f686974683332372f73696d706c6567616e2f626c6f622f6d61737465722f6173736574732f6d6e6973745f636f6e765f61652e706e67\"></td>\n</tr>\n<tr>\n<td align=\"center\">Variational Autoencoder [<a href=\"https://arxiv.org/abs/1312.6114\" rel=\"nofollow\">Paper</a>]</td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e4b8ac275fe7f1e089004c36ff82932b2a02e5a0/68747470733a2f2f6769746875622e636f6d2f67726f686974683332372f73696d706c6567616e2f626c6f622f6d61737465722f6173736574732f7661652e6a706567\"></td>\n</tr>\n<tr>\n<td align=\"center\">Vector Quantized - Variational Autoencoder [<a href=\"https://arxiv.org/abs/1711.00937\" rel=\"nofollow\">Paper</a>]</td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d4c47943984a8d42f58f5069a015db501a6d8f9a/68747470733a2f2f6769746875622e636f6d2f67726f686974683332372f73696d706c6567616e2f626c6f622f6d61737465722f6173736574732f76715f7661652e706e67\"></td>\n</tr>\n<tr>\n<td align=\"center\">Vanilla GAN [<a href=\"https://arxiv.org/abs/1406.2661\" rel=\"nofollow\">Paper</a>]</td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/03cf25e7696b39ca2ae666ce6deccb3d6c6aa52f/68747470733a2f2f6769746875622e636f6d2f67726f686974683332372f73696d706c6567616e2f626c6f622f6d61737465722f6173736574732f47414e2e706e67\"></td>\n</tr>\n<tr>\n<td align=\"center\">DCGAN [<a href=\"https://arxiv.org/abs/1511.06434\" rel=\"nofollow\">Paper</a>]</td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4111af571ccc97b192f5349599eca46ce25d3679/68747470733a2f2f6769746875622e636f6d2f67726f686974683332372f73696d706c6567616e2f626c6f622f6d61737465722f6173736574732f444347414e2e706e67\"></td>\n</tr>\n<tr>\n<td align=\"center\">WGAN [<a href=\"https://arxiv.org/abs/1701.07875\" rel=\"nofollow\">Paper</a>]</td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/de05a7268793431793b59e23b99b20c4e5f3f053/68747470733a2f2f6769746875622e636f6d2f67726f686974683332372f73696d706c6567616e2f626c6f622f6d61737465722f6173736574732f5747414e2e706e67\"></td>\n</tr>\n<tr>\n<td align=\"center\">CGAN [<a href=\"https://arxiv.org/abs/1411.1784\" rel=\"nofollow\">Paper</a>]</td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e41cffefd33b657c9f6514f2ee6c66ebed0a4125/68747470733a2f2f6769746875622e636f6d2f67726f686974683332372f73696d706c6567616e2f626c6f622f6d61737465722f6173736574732f4347414e2e706e67\"></td>\n</tr>\n<tr>\n<td align=\"center\">InfoGAN [<a href=\"https://arxiv.org/abs/1606.03657\" rel=\"nofollow\">Paper</a>]</td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/41b229d8888bdeabbdbb26dae7113c87b93440a7/68747470733a2f2f6769746875622e636f6d2f67726f686974683332372f73696d706c6567616e2f626c6f622f6d61737465722f6173736574732f496e666f47414e2e706e67\"></td>\n</tr>\n<tr>\n<td align=\"center\">Pix2Pix [<a href=\"https://arxiv.org/abs/1611.07004\" rel=\"nofollow\">Paper</a>]</td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/baf1bad6b5a363f2516238201fe91745c2f9c748/68747470733a2f2f6769746875622e636f6d2f67726f686974683332372f73696d706c6567616e2f626c6f622f6d61737465722f6173736574732f506978325069782e706e67\"></td>\n</tr>\n<tr>\n<td align=\"center\">CycleGAN [<a href=\"https://arxiv.org/abs/1703.10593\" rel=\"nofollow\">Paper</a>]</td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/688285d5bad2f0ca70ec49051c3a9c2317859599/68747470733a2f2f6769746875622e636f6d2f67726f686974683332372f73696d706c6567616e2f626c6f622f6d61737465722f6173736574732f4379636c6547414e2e706e67\"></td>\n</tr>\n<tr>\n<td align=\"center\">3DGAN(VoxelGAN) [<a href=\"http://3dgan.csail.mit.edu/papers/3dgan_nips.pdf\" rel=\"nofollow\">Paper</a>]</td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68ec0112bbd14e6d89b62c1872fb926f030922bb/68747470733a2f2f6769746875622e636f6d2f67726f686974683332372f73696d706c6567616e2f626c6f622f6d61737465722f6173736574732f334447414e2e706e67\"></td>\n</tr>\n<tr>\n<td align=\"center\">Self-Attention GAN(SAGAN) [<a href=\"https://arxiv.org/pdf/1805.08318.pdf\" rel=\"nofollow\">Paper</a>]</td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f4f1dc45db3406fb5014ebc5b34685579ce88cf/68747470733a2f2f6769746875622e636f6d2f67726f686974683332372f73696d706c6567616e2f626c6f622f6d61737465722f6173736574732f534147414e2e706e67\"></td>\n</tr></tbody></table>\n<h3>Contributing</h3>\n<p>We appreciate all contributions. If you are planning to perform bug-fixes, add new features or models, please file an issue and discuss before making a pull request.</p>\n<h3>Citation</h3>\n<pre><code>@software{simplegan,\n    author = {{Rohith Gandhi et al.}},\n    title = {simplegan},\n    url = {https://simplegan.readthedocs.io},\n    version = {0.2.8},\n}\n</code></pre>\n<h3>Contributors</h3>\n<ul>\n<li><a href=\"https://github.com/grohith327\" rel=\"nofollow\">Rohith Gandhi</a></li>\n<li><a href=\"https://github.com/Prem-kumar27\" rel=\"nofollow\">Prem Kumar</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7168965, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ea6625b15b9d95208d1b741537d9cdec", "sha256": "605a19d5df5c9364fc26331711293958303188c2b674f94851e471a2b654a43f"}, "downloads": -1, "filename": "simplegan-0.1.tar.gz", "has_sig": false, "md5_digest": "ea6625b15b9d95208d1b741537d9cdec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1181, "upload_time": "2020-03-09T01:18:03", "upload_time_iso_8601": "2020-03-09T01:18:03.379194Z", "url": "https://files.pythonhosted.org/packages/76/e1/49209b0b79f8a0de8ec7069b0b52aa2ebcac84836ab6dc5e720f19daf39c/simplegan-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "42c06caea2a3e1601f5b527fb2e5b7c4", "sha256": "6a97568824b377fd064ca529209ab329aa8900627086aa2fcaabbf8dc831da14"}, "downloads": -1, "filename": "simplegan-0.2.tar.gz", "has_sig": false, "md5_digest": "42c06caea2a3e1601f5b527fb2e5b7c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1164, "upload_time": "2020-03-09T02:41:00", "upload_time_iso_8601": "2020-03-09T02:41:00.640922Z", "url": "https://files.pythonhosted.org/packages/70/a1/1c61168312445c5bdda695f2c80bcbaf6d71b71fbc86efce54644562c154/simplegan-0.2.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "c8f7888782ec3680a4b3d16c42c19e88", "sha256": "fdb4fa922552432e681d5bb3a8c6bb287f1c99f206f464b343344433efa19c07"}, "downloads": -1, "filename": "simplegan-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "c8f7888782ec3680a4b3d16c42c19e88", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47091, "upload_time": "2020-03-09T04:13:26", "upload_time_iso_8601": "2020-03-09T04:13:26.538483Z", "url": "https://files.pythonhosted.org/packages/67/00/3ac2f0f7f350c4e1b0745ddf15d7cc7a9177a41ab0b0acb46a553be212c2/simplegan-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "075f662f73de4326d023ae492013a232", "sha256": "5c19662aa4c6a3175b9dcab511eb444f720328d03ffcacb2bb196aea90030bd3"}, "downloads": -1, "filename": "simplegan-0.2.5.tar.gz", "has_sig": false, "md5_digest": "075f662f73de4326d023ae492013a232", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23058, "upload_time": "2020-03-09T04:13:28", "upload_time_iso_8601": "2020-03-09T04:13:28.093221Z", "url": "https://files.pythonhosted.org/packages/12/ae/5165ac857ff75b33364fd4df8179a1940e92216b2f75b1928e15865211af/simplegan-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "52a1f56afa6a35044ba3222dda9d769b", "sha256": "e86b5eb856d974afb912823c939a3b99c3c4f6f542e72fa5fd06cbdfad1dbd71"}, "downloads": -1, "filename": "simplegan-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "52a1f56afa6a35044ba3222dda9d769b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47108, "upload_time": "2020-03-09T04:20:21", "upload_time_iso_8601": "2020-03-09T04:20:21.708191Z", "url": "https://files.pythonhosted.org/packages/93/3a/d0c34353df8a9df051b108a0f0f57f92a55921a8b3a4f243dad406b27087/simplegan-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "606941eb7971277bb7582e5baaad232d", "sha256": "411ca2ec114d140c2a66f93a82032d7ee6f25cfc8556f5a16d51f440b9fe28ac"}, "downloads": -1, "filename": "simplegan-0.2.6.tar.gz", "has_sig": false, "md5_digest": "606941eb7971277bb7582e5baaad232d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23057, "upload_time": "2020-03-09T04:20:23", "upload_time_iso_8601": "2020-03-09T04:20:23.128951Z", "url": "https://files.pythonhosted.org/packages/d7/cd/9d77489e22bd0c411c4c7b0b4a0e592cc162d6dd990ce40436a1bbdd352d/simplegan-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "7280426bbeff8a8574fe738409c381cc", "sha256": "0268aef0fccbec992cbd01dab62b3bb4f52407f9713ef48f84dbe43b409d5d2b"}, "downloads": -1, "filename": "simplegan-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "7280426bbeff8a8574fe738409c381cc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 57230, "upload_time": "2020-03-10T21:10:30", "upload_time_iso_8601": "2020-03-10T21:10:30.797710Z", "url": "https://files.pythonhosted.org/packages/c3/32/8042632a2095e24efa31dd4ea4bdd84032cf077bb4736aca3d90ff66244f/simplegan-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43621309e5b939f1b42b6f24d17a72e9", "sha256": "7b118ce1c103a8ad077c9ba43a1b2a5227cb43de64f125d649c4f28842237700"}, "downloads": -1, "filename": "simplegan-0.2.7.tar.gz", "has_sig": false, "md5_digest": "43621309e5b939f1b42b6f24d17a72e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27086, "upload_time": "2020-03-10T21:10:32", "upload_time_iso_8601": "2020-03-10T21:10:32.170956Z", "url": "https://files.pythonhosted.org/packages/92/72/c8989ed3a763a90aee9de58f9c5d5f957ab12aea9d0e8cec0695b72dddbd/simplegan-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "bdcca8b7363119af79134e99f9227cbb", "sha256": "aaf2c13bd84b47593a68e8c51f0bb5e585576d44cb5d4b3be042971be9e91870"}, "downloads": -1, "filename": "simplegan-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "bdcca8b7363119af79134e99f9227cbb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 57246, "upload_time": "2020-03-10T23:53:51", "upload_time_iso_8601": "2020-03-10T23:53:51.149699Z", "url": "https://files.pythonhosted.org/packages/40/d7/337f3b24d02d6ff92d33d087896d8f56318df547ef35c9214d66367c0443/simplegan-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2039dbfd2415d185e757329f2261b647", "sha256": "5f402534a30f1a071e243c0922f1e7569250dde39816b207b0af80bdc39e0845"}, "downloads": -1, "filename": "simplegan-0.2.8.tar.gz", "has_sig": false, "md5_digest": "2039dbfd2415d185e757329f2261b647", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27082, "upload_time": "2020-03-10T23:53:52", "upload_time_iso_8601": "2020-03-10T23:53:52.637359Z", "url": "https://files.pythonhosted.org/packages/8c/e8/76758c69354ae80d67dbef9ee0887219826cdd9a9711263fb42efcd860a5/simplegan-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "2776f58e1a7a725464d055da9bef89f2", "sha256": "e0ab7f98125e927960f785a5297cd312963a112d37a010e80b13d72be7847e1c"}, "downloads": -1, "filename": "simplegan-0.2.9.tar.gz", "has_sig": false, "md5_digest": "2776f58e1a7a725464d055da9bef89f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33404, "upload_time": "2020-05-05T02:07:32", "upload_time_iso_8601": "2020-05-05T02:07:32.806615Z", "url": "https://files.pythonhosted.org/packages/ce/c7/a294ec30023f40f727be1e1c72664f40f16330b676a72e09c4b417d79467/simplegan-0.2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2776f58e1a7a725464d055da9bef89f2", "sha256": "e0ab7f98125e927960f785a5297cd312963a112d37a010e80b13d72be7847e1c"}, "downloads": -1, "filename": "simplegan-0.2.9.tar.gz", "has_sig": false, "md5_digest": "2776f58e1a7a725464d055da9bef89f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33404, "upload_time": "2020-05-05T02:07:32", "upload_time_iso_8601": "2020-05-05T02:07:32.806615Z", "url": "https://files.pythonhosted.org/packages/ce/c7/a294ec30023f40f727be1e1c72664f40f16330b676a72e09c4b417d79467/simplegan-0.2.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:47 2020"}