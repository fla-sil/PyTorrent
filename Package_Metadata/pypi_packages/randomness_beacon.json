{"info": {"author": "Hilary Mason", "author_email": "me@hilarymason.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: BSD License", "Topic :: Utilities"], "description": "NIST Randomness Beacon\n======================\n\nThis is a python module to simplify using the [NIST randomness beacon](http://www.nist.gov/itl/csd/ct/nist_beacon.cfm), a public source of truly random numbers. \n\nFrom the project description:\n\n> The Beacon will broadcast full-entropy bit-strings in blocks of 512 bits every 60 seconds. Each such value is time-stamped and signed, and includes the hash of the previous value to chain the sequence of values together.\n\nUsing the python wrapper is easy. To generate a random number:\n\n    b = Beacon()\n    print b.last_record()['outputValue']\n  \nThe Beacon object will cache the timestamp of the last call and use that for the basis of next() and previous() calls.\n    \nThere's also a generator for convenience:\n\n    for num in random_nums(3):\n        print num['outputValue']\n\n(Note, as the documentation says, *WARNING: DO NOT USE BEACON GENERATED VALUES AS SECRET CRYPTOGRAPHIC KEYS.*)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hmason/randomness_beacon", "keywords": "NIST randomness beacon random numbers", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "randomness_beacon", "package_url": "https://pypi.org/project/randomness_beacon/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/randomness_beacon/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/hmason/randomness_beacon"}, "release_url": "https://pypi.org/project/randomness_beacon/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "A wrapper for the NIST randomness beacon, a source of true random numbers", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a python module to simplify using the [NIST randomness beacon](<a href=\"http://www.nist.gov/itl/csd/ct/nist_beacon.cfm\" rel=\"nofollow\">http://www.nist.gov/itl/csd/ct/nist_beacon.cfm</a>), a public source of truly random numbers.</p>\n<p>From the project description:</p>\n<p>&gt; The Beacon will broadcast full-entropy bit-strings in blocks of 512 bits every 60 seconds. Each such value is time-stamped and signed, and includes the hash of the previous value to chain the sequence of values together.</p>\n<p>Using the python wrapper is easy. To generate a random number:</p>\n<blockquote>\nb = Beacon()\nprint b.last_record()[\u2018outputValue\u2019]</blockquote>\n<p>The Beacon object will cache the timestamp of the last call and use that for the basis of next() and previous() calls.</p>\n<p>There\u2019s also a generator for convenience:</p>\n<blockquote>\n<dl>\n<dt>for num in random_nums(3):</dt>\n<dd>print num[\u2018outputValue\u2019]</dd>\n</dl>\n</blockquote>\n<p>(Note, as the documentation says, <em>WARNING: DO NOT USE BEACON GENERATED VALUES AS SECRET CRYPTOGRAPHIC KEYS.</em>)</p>\n\n          </div>"}, "last_serial": 876366, "releases": {"0.0.1": []}, "urls": [], "timestamp": "Fri May  8 03:07:37 2020"}