{"info": {"author": "Daniel Havlik", "author_email": "dh@gocept.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python"], "description": "raspi.lpd8806\n*************\n\nThis package provides helpers to easily build fancy LED stuff with a \"lpd8806\nbased digital addressable RGB led strip\":https://www.adafruit.com/products/306. \n\nIt consists of three parts.\n\n\nAPI for sequences\n=================\n\nTo define a sequence you can use `raspi.lpd8806.led_lib.Sequence` as a base\nclass.\n\nOn the class you can set, if the sequence should loop by setting `loop =\nTrue`.\n\nYou also have to define the used leds by the sequence on the class in a list\n`leds = [12, 33, 44]`.\n\nThe actual sequence is defined in the __call__ method which has to\nreturn a generator yielding leds with their values for each frame.\n\nYou can set a single Led via `raspi.lpd8806.led_lib.Led(index).on(red, green,\nblue)`, or set multiple Leds at once via `Leds([12, 33, 44]).on({12: (r, g, b),\n33: (r, g, b), 44: (r, g, b)})`.\n\nThere is also a convenience method to set a predefined part of your strip by\nusing `raspi.lpd8806.led_lib.Strip('strip_name').on(r, g, b)`.\n\nLed, Leds and Strip instances of course also have `off()` methods to set all\ncolors to 0.\n\n\nWebserver\n=========\n\nThe Webserver serves a page with buttons to start or stop the sequences.\nIt is started with the led_webserver script. See --help for details.\n\nQueue Worker\n============\n\nThe Queue worker processes the commands of the webserver and communicates with\nthe LED strip. It can be started with the led_queue_worker script. See --help\nfor details.\n\nCHANGES\n*******\n\n0.2 (2013-08-16)\n================\n\n- Move the README to its proper place.\n\n\n0.1 (2013-08-16)\n================\n\n* Initial public release.\n\nDownload\n********", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://gocept.com", "keywords": "raspberry pi lpd8806", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "raspi.lpd8806", "package_url": "https://pypi.org/project/raspi.lpd8806/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/raspi.lpd8806/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://gocept.com"}, "release_url": "https://pypi.org/project/raspi.lpd8806/0.2/", "requires_dist": null, "requires_python": null, "summary": "Servers for playing predefined sequences on a LPD8806 based LED strip connected to a RaspberryPi.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"raspi-lpd8806\">\n<h2>raspi.lpd8806</h2>\n<p>This package provides helpers to easily build fancy LED stuff with a \u201clpd8806\nbased digital addressable RGB led strip\u201d:<a href=\"https://www.adafruit.com/products/306\" rel=\"nofollow\">https://www.adafruit.com/products/306</a>.</p>\n<p>It consists of three parts.</p>\n<div id=\"api-for-sequences\">\n<h3>API for sequences</h3>\n<p>To define a sequence you can use <cite>raspi.lpd8806.led_lib.Sequence</cite> as a base\nclass.</p>\n<p>On the class you can set, if the sequence should loop by setting <cite>loop =\nTrue</cite>.</p>\n<p>You also have to define the used leds by the sequence on the class in a list\n<cite>leds = [12, 33, 44]</cite>.</p>\n<p>The actual sequence is defined in the __call__ method which has to\nreturn a generator yielding leds with their values for each frame.</p>\n<p>You can set a single Led via <cite>raspi.lpd8806.led_lib.Led(index).on(red, green,\nblue)</cite>, or set multiple Leds at once via <cite>Leds([12, 33, 44]).on({12: (r, g, b),\n33: (r, g, b), 44: (r, g, b)})</cite>.</p>\n<p>There is also a convenience method to set a predefined part of your strip by\nusing <cite>raspi.lpd8806.led_lib.Strip(\u2018strip_name\u2019).on(r, g, b)</cite>.</p>\n<p>Led, Leds and Strip instances of course also have <cite>off()</cite> methods to set all\ncolors to 0.</p>\n</div>\n<div id=\"webserver\">\n<h3>Webserver</h3>\n<p>The Webserver serves a page with buttons to start or stop the sequences.\nIt is started with the led_webserver script. See \u2013help for details.</p>\n</div>\n<div id=\"queue-worker\">\n<h3>Queue Worker</h3>\n<p>The Queue worker processes the commands of the webserver and communicates with\nthe LED strip. It can be started with the led_queue_worker script. See \u2013help\nfor details.</p>\n</div>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<div id=\"id1\">\n<h3>0.2 (2013-08-16)</h3>\n<ul>\n<li>Move the README to its proper place.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1 (2013-08-16)</h3>\n<ul>\n<li>Initial public release.</li>\n</ul>\n</div>\n</div>\n<div id=\"download\">\n<h2>Download</h2>\n</div>\n\n          </div>"}, "last_serial": 841540, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "60285e7f32079958363010f861189681", "sha256": "7595a71add026d27caa045e368069eda4296ae1c8ba7a45ad043bb4b1cf798f8"}, "downloads": -1, "filename": "raspi.lpd8806-0.2.zip", "has_sig": false, "md5_digest": "60285e7f32079958363010f861189681", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56986, "upload_time": "2013-08-16T13:43:04", "upload_time_iso_8601": "2013-08-16T13:43:04.473951Z", "url": "https://files.pythonhosted.org/packages/9d/44/959b8123143b702507a3cc6cb2acac21ab35c1703e8d1f8f46da21d366e9/raspi.lpd8806-0.2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "60285e7f32079958363010f861189681", "sha256": "7595a71add026d27caa045e368069eda4296ae1c8ba7a45ad043bb4b1cf798f8"}, "downloads": -1, "filename": "raspi.lpd8806-0.2.zip", "has_sig": false, "md5_digest": "60285e7f32079958363010f861189681", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56986, "upload_time": "2013-08-16T13:43:04", "upload_time_iso_8601": "2013-08-16T13:43:04.473951Z", "url": "https://files.pythonhosted.org/packages/9d/44/959b8123143b702507a3cc6cb2acac21ab35c1703e8d1f8f46da21d366e9/raspi.lpd8806-0.2.zip", "yanked": false}], "timestamp": "Fri May  8 03:07:12 2020"}