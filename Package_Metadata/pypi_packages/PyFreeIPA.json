{"info": {"author": "Aaron Hicks", "author_email": "aethylred@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pyfreeipa\n\nPython module for accessing the FreeIPA/Red Hat Identity Manager API (a.k.a IPA)\n\nThis module does not do any exception handling, it wants your code to handle exceptions.\n\n# Usage\n\nThe following sample sets up a IPA API object with minimal configuration.\n\n```python\nfrom pyfreeipa.Api import Api\n\nipaapi = Api(\n    host=\"ipa.example.org\",\n    username=\"ipauser\",\n    password=\"somethingsecret\"\n)\n\nresponse = ipaapi.ping()\n\nif response.ok:\n    result = response.json()['result']\n    print('Good: %s' & result['summary'])\nelse:\n    print('Bad: %s' % response.status_code)\n```\n\nIncluded is a `configuration` method that can read all the required configuration options from a yaml file.\n\n# Examples\n\nThe `pyfreeipa` module itself can be executed as a wrapper script around `pyfreeipa.Api`\n\nThere are also some test scripts that demonstrate it's capabilites in the `test` directory, they have their own [documentation](tests/README.md).\n\n# FreeIPA API Methods\n\nThe `Api` object supports both implemented and unimplemented methods\n\n## Unimplemented Methods\n\nUnimplemented methods are supported via the `Api.request()` method:\n\n```python\nfrom pyfreeipa.Api import Api\n\nipaapi = Api(\n    host=\"ipa.example.org\",\n    username=\"ipauser\",\n    password=\"somethingsecret\"\n)\n\nipaapi.request(\n    method='group_add_member',\n    args=['groupname'],\n    parameters={\n        'users': [\n            'anne',\n            'bob',\n            'claire'\n        ]\n    }\n)\n```\n\n\n## Implemented Methods\n\n# Other Methods\n\nThe `Api` object has a some methods that do not directly relate to requests to the IPA API\n\n## `login()`\n\nThe IPA API login process that isn't standard HTTPS authentication, this method initiates the login and should be sufficient to maintain login througout a session.\n\n## `get()`\n\nA passthrough function that sends a `GET` request to the IPA API session. Returns a `requests.response` object.\n\n## `post()`\n\nA passthrough function that sends a `POST` request to the IPA API session. Returns a `requests.response` object.\n\n## `put()`\n\nA passthrough function that sends a `PUT` request to the IPA API session. Returns a `requests.response` object.\n\n## `request()`\n\nThis function checks and verifies it's argments and converts regular string, dictionary, and list objects and converts them into the required data types to submit as a request, executes the request and returns a `requests.Response` object.\n\n### Parameters\n\n* `method` A the IPA API method to be called\n* `args` A list of arguments for the method\n* `params` A dictionary of parameters for the method\n\n## `preprequest()`\n\nThis function checks and verifies it's argments and converts regular string, dictionary, and list objects and converts them into the required data types to submit as a request, executes the request and returns a `requests.PreparedRequest` object.\n\n### Parameters\n\n* `method` A the IPA API method to be called\n* `args` A list of arguments for the method\n* `params` A dictionary of parameters for the method\n\n## `warnings`\n\nEmits a list of warnings that have occured.\n\n## `clearwarnings()`\n\nClears the warnings list.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "PyFreeIPA", "package_url": "https://pypi.org/project/PyFreeIPA/", "platform": "", "project_url": "https://pypi.org/project/PyFreeIPA/", "project_urls": null, "release_url": "https://pypi.org/project/PyFreeIPA/0.1.0/", "requires_dist": ["certifi", "chardet", "idna", "PyYAML", "requests", "typing", "urllib3"], "requires_python": "", "summary": "Python FreeIPA API interface", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyfreeipa</h1>\n<p>Python module for accessing the FreeIPA/Red Hat Identity Manager API (a.k.a IPA)</p>\n<p>This module does not do any exception handling, it wants your code to handle exceptions.</p>\n<h1>Usage</h1>\n<p>The following sample sets up a IPA API object with minimal configuration.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyfreeipa.Api</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span>\n\n<span class=\"n\">ipaapi</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span>\n    <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"ipa.example.org\"</span><span class=\"p\">,</span>\n    <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">\"ipauser\"</span><span class=\"p\">,</span>\n    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">\"somethingsecret\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">ipaapi</span><span class=\"o\">.</span><span class=\"n\">ping</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"p\">:</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()[</span><span class=\"s1\">'result'</span><span class=\"p\">]</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Good: </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">&amp;</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"s1\">'summary'</span><span class=\"p\">])</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Bad: </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status_code</span><span class=\"p\">)</span>\n</pre>\n<p>Included is a <code>configuration</code> method that can read all the required configuration options from a yaml file.</p>\n<h1>Examples</h1>\n<p>The <code>pyfreeipa</code> module itself can be executed as a wrapper script around <code>pyfreeipa.Api</code></p>\n<p>There are also some test scripts that demonstrate it's capabilites in the <code>test</code> directory, they have their own <a href=\"tests/README.md\" rel=\"nofollow\">documentation</a>.</p>\n<h1>FreeIPA API Methods</h1>\n<p>The <code>Api</code> object supports both implemented and unimplemented methods</p>\n<h2>Unimplemented Methods</h2>\n<p>Unimplemented methods are supported via the <code>Api.request()</code> method:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyfreeipa.Api</span> <span class=\"kn\">import</span> <span class=\"n\">Api</span>\n\n<span class=\"n\">ipaapi</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span>\n    <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"ipa.example.org\"</span><span class=\"p\">,</span>\n    <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">\"ipauser\"</span><span class=\"p\">,</span>\n    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">\"somethingsecret\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">ipaapi</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span>\n    <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'group_add_member'</span><span class=\"p\">,</span>\n    <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'groupname'</span><span class=\"p\">],</span>\n    <span class=\"n\">parameters</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'users'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s1\">'anne'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'bob'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'claire'</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Implemented Methods</h2>\n<h1>Other Methods</h1>\n<p>The <code>Api</code> object has a some methods that do not directly relate to requests to the IPA API</p>\n<h2><code>login()</code></h2>\n<p>The IPA API login process that isn't standard HTTPS authentication, this method initiates the login and should be sufficient to maintain login througout a session.</p>\n<h2><code>get()</code></h2>\n<p>A passthrough function that sends a <code>GET</code> request to the IPA API session. Returns a <code>requests.response</code> object.</p>\n<h2><code>post()</code></h2>\n<p>A passthrough function that sends a <code>POST</code> request to the IPA API session. Returns a <code>requests.response</code> object.</p>\n<h2><code>put()</code></h2>\n<p>A passthrough function that sends a <code>PUT</code> request to the IPA API session. Returns a <code>requests.response</code> object.</p>\n<h2><code>request()</code></h2>\n<p>This function checks and verifies it's argments and converts regular string, dictionary, and list objects and converts them into the required data types to submit as a request, executes the request and returns a <code>requests.Response</code> object.</p>\n<h3>Parameters</h3>\n<ul>\n<li><code>method</code> A the IPA API method to be called</li>\n<li><code>args</code> A list of arguments for the method</li>\n<li><code>params</code> A dictionary of parameters for the method</li>\n</ul>\n<h2><code>preprequest()</code></h2>\n<p>This function checks and verifies it's argments and converts regular string, dictionary, and list objects and converts them into the required data types to submit as a request, executes the request and returns a <code>requests.PreparedRequest</code> object.</p>\n<h3>Parameters</h3>\n<ul>\n<li><code>method</code> A the IPA API method to be called</li>\n<li><code>args</code> A list of arguments for the method</li>\n<li><code>params</code> A dictionary of parameters for the method</li>\n</ul>\n<h2><code>warnings</code></h2>\n<p>Emits a list of warnings that have occured.</p>\n<h2><code>clearwarnings()</code></h2>\n<p>Clears the warnings list.</p>\n\n          </div>"}, "last_serial": 4951877, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5186311dc43fa5fd1591e31e64252915", "sha256": "8b39b92d5d9f2a75fc0152a7fa0139f6b2016e27664616398da325759b1b3d1a"}, "downloads": -1, "filename": "PyFreeIPA-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5186311dc43fa5fd1591e31e64252915", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14259, "upload_time": "2019-03-18T01:37:11", "upload_time_iso_8601": "2019-03-18T01:37:11.877320Z", "url": "https://files.pythonhosted.org/packages/55/fd/f0809534a91263f66227515ad2e90e54769fddcf2923c81222bee9f19086/PyFreeIPA-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aba4c8bd3628655b4cc92016fdea8a73", "sha256": "4c46ca45c4c64658e056da2035944ac7cb9d211be555453c2b28ff3e15661007"}, "downloads": -1, "filename": "PyFreeIPA-0.1.0.tar.gz", "has_sig": false, "md5_digest": "aba4c8bd3628655b4cc92016fdea8a73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10660, "upload_time": "2019-03-18T01:37:14", "upload_time_iso_8601": "2019-03-18T01:37:14.215417Z", "url": "https://files.pythonhosted.org/packages/8b/55/2c73c9f25ea9a8c67c30bedc612dbaef9ea1a1424074e310816ddd6974cb/PyFreeIPA-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5186311dc43fa5fd1591e31e64252915", "sha256": "8b39b92d5d9f2a75fc0152a7fa0139f6b2016e27664616398da325759b1b3d1a"}, "downloads": -1, "filename": "PyFreeIPA-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5186311dc43fa5fd1591e31e64252915", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14259, "upload_time": "2019-03-18T01:37:11", "upload_time_iso_8601": "2019-03-18T01:37:11.877320Z", "url": "https://files.pythonhosted.org/packages/55/fd/f0809534a91263f66227515ad2e90e54769fddcf2923c81222bee9f19086/PyFreeIPA-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aba4c8bd3628655b4cc92016fdea8a73", "sha256": "4c46ca45c4c64658e056da2035944ac7cb9d211be555453c2b28ff3e15661007"}, "downloads": -1, "filename": "PyFreeIPA-0.1.0.tar.gz", "has_sig": false, "md5_digest": "aba4c8bd3628655b4cc92016fdea8a73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10660, "upload_time": "2019-03-18T01:37:14", "upload_time_iso_8601": "2019-03-18T01:37:14.215417Z", "url": "https://files.pythonhosted.org/packages/8b/55/2c73c9f25ea9a8c67c30bedc612dbaef9ea1a1424074e310816ddd6974cb/PyFreeIPA-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:32 2020"}