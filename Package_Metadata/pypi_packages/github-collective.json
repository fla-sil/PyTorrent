{"info": {"author": "Rok Garbas", "author_email": "rok@garbas.si", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "Introduction\n============\n\n`GitHub organizations`_ are great way for organizations to manage their Git\nrepositories. This tool will let you automate the tedious tasks of creating\nteams, granting permissions, and creating repositories or modifying their\nsettings.\n\nThe approach that the ``github-collective`` tool takes is that you edit a\ncentral configuration (currently an ini-like file) from where options are\nread and synchronized to GitHub respectively.\n\nInitially, the purpose of this script was to manage Plone's collective\norganization on GitHub: http://collective.github.com. It is currently in use\nin several other locations.\n\n\n.. contents\n\nDocumentation\n=============\n\nRead the full documentation at http://github-collective.rtfd.org.\n\nFeatures\n========\n\n* Create one central configuration that you can sync to GitHub to configure\n  your organisation's settings, repositories, teams, and more.\n\n  * Combine this with GitHub's fork-and-pull request model to easily\n    allow non-administrative users to create and manage repositories\n    with minimal overhead.\n\n* Repositories: create and modify repositories within an organization\n\n  * Configure all repository properties as per the `GitHub Repos API`_,\n    including privacy (public/private), description, and other metadata. \n  * After the initial repository creation happens, updated values in your\n    configuration will replace those on GitHub.\n\n* Service hooks: add and modify service hooks for repositories.\n\n  * GitHub repositories have support for sending information upon\n    certain events taking place (for instance, pushes being made to a \n    repository or a fork being taken).\n  * After the initial repo creation process takes place, updated values in your\n    hook configuration will `replace` those on GitHub. \n  * Hooks not present in your configuration (such as those manually added\n    on GitHub or those removed from local configuration) will *not* be\n    deleted.\n\n* Teams: automatically create teams and modify members\n\n  * Control permissions for teams (for example: push, pull or admin)\n\n* Automatically syncs all of the above with GitHub when the tool is run.\n\n* Buildout-style variable substitution in the form ``${section:option}``.\n\n\n.. _`GitHub organizations`: https://github.com/blog/674-introducing-organizations\n.. _`GitHub Repos API`: http://developer.github.com/v3/repos/#create\n\n\n\nUsage\n=====\n\nWhen ``github-collective`` is installed it should create an executable with\nsame name in your `bin` directory. \n::\n\n    % bin/github-collective --help\n    usage: github-collective [-h] -c CONFIG [-M MAILER] [-C CACHE] -o GITHUB_ORG\n                             -u GITHUB_USERNAME -P GITHUB_PASSWORD [-v] [-p]\n    \n    This tool will let you automate tedious tasks of creating teams granting\n    permission and creating repositories.\n    \n    optional arguments:\n      -h, --help            show this help message and exit\n      -c CONFIG, --config CONFIG\n                            path to configuration file (could also be remote\n                            location). eg.\n                            http://collective.github.com/permissions.cfg (default:\n                            None)\n      -M MAILER, --mailer MAILER\n                            TODO (default: None)\n      -C CACHE, --cache CACHE\n                            path to file where to cache results from github.\n                            (default: None)\n      -o GITHUB_ORG, --github-org GITHUB_ORG\n                            github organisation. (default: None)\n      -u GITHUB_USERNAME, --github-username GITHUB_USERNAME\n                            github account username. (default: None)\n      -P GITHUB_PASSWORD, --github-password GITHUB_PASSWORD\n                            github account password. (default: None)\n      -v, --verbose\n      -p, --pretend\n\nLocally-stored configuration\n----------------------------\n\n::\n\n    % bin/github-collective \\\n        -c example.cfg \\ # path to configuration file\n        -o vim-addons \\  # organization that we are \n        -u garbas \\      # account that has management right for organization\n        -P PASSWORD      # account password\n\nRemotely-stored configuration (GitHub)\n--------------------------------------\n\n::\n\n    % bin/github-collective \\\n        -c https://raw.github.com/collective/github-collective/master/example.cfg \\\n                         # url to configuration file\n        -o collective \\  # organization that we are \n        -u garbas \\      # account that has management right for organization\n        -P PASSWORD      # account password\n\nCached configuration\n--------------------\n\n::\n\n    % bin/github-collective \\\n        -c https://raw.github.com/collective/github-collective/master/example.cfg \\\n                         # url to configuration file\n        -C .cache        # file where store and read cached results from github\n        -o collective \\  # organization that we are \n        -u garbas \\      # account that has management right for organization\n        -P PASSWORD      # account password\n\n\nTesting\n=======\n\n``nose`` is utilised for testing and configuration for ``nose`` exists\nwithin the ``setup.cfg`` file within this project.  This configuration\nautomatically examines files for tests within the project, including\nthis read-me itself. You can initialise and run tests using the Buildout\nconfiguration provided::\n\n    git clone git://github.com/collective/github-collective.git\n    cd github-collective\n    virtualenv .\n    python boostrap.py\n    bin/buildout\n    bin/nosetests\n\n`tox <http://tox.testrun.org/latest/>`_ is used to ensure this package\ninstalls correctly under each version of Python.  Currently we test \nPython 2.6 and Python 2.7.  Support for running tests under ``tox`` will\ncome shortly. To test installation::\n\n    git clone git://github.com/collective/github-collective.git\n    cd github-collective\n    virtualenv .\n    pip install tox\n    tox\n    \n\nIssues and Contributing\n=======================\n\nReport issues via this project's GitHub issue tracker at\nhttps://github.com/collective/github-collective/issues.\n\nContribute by submitting a pull request on GitHub or else by\nadding yourself to the `Collective <http://collective.github.com>`_\nand contributing directly.\n\nTodo\n====\n \n- Allow configuration of organisation settings via API\n- Add facility to continue if error experienced\n- Send emails to owners about removing repos\n- Better logging mechanism (eg. logbook)\n- Support configuration extensibility (eg ``extends =`` syntax) for\n  using multiple configuration files.\n\n\nCredits\n=======\n\n:Author: `Rok Garbas`_ (garbas)\n:Contributor: `David Beitey`_ (davidjb)\n\n.. _`Rok Garbas`: http://www.garbas.si\n.. _`David Beitey`: http://davidjb.com\n\nChangelog\n=========\n\n0.4 (2012-11-28)\n----------------\n\n- Restore ability to fork repositories to organisations after unexpected\n  API change.\n  [davidjb]\n- Ensure fork data payload (org name) is sent as JSON.\n  [davidjb]\n- Allow forks to be correctly named once created. GitHub's API forks using\n  the same name originally, so we need to rename once forked.\n  [davidjb]\n- Add rename helper functionality to sync module. (Note that configuration \n  does not yet support renaming)\n  [davidjb]\n- Read the Docs-ified documentation.\n  [davidjb]\n\n\n0.3.2 (2012-07-17)\n------------------\n\n- Fix issue with templating of hook variables. Previously,\n  the original config was being altered, preventing further\n  templating.\n  [davidjb]\n- Fix issue with hooks being updated from cache by storing the\n  existing integer ID.\n  [davidjb]\n- Fix issue with cache not being updated on repo change.\n  [davidjb]\n\n\n0.3.1 (2012-07-17)\n------------------\n\n- Only send API options to GitHub to reduce overhead.\n  [davidjb]\n- Display output of changes to configuration when running in verbose \n  mode. This helps track down oddities with GitHub value storage to\n  reduce overhead.\n  [davidjb]\n\n\n0.3 (2012-07-17)\n----------------\n\n- Implement Buildout-style variable substitution for configuration with\n  doctesting. \n  [davidjb]\n- Output resolved configuration when running in verbose mode.\n  [davidjb]\n- Implement deletion of repos from configuration now GitHub API v3 \n  supports this. *Warning*: if a repo exists on GitHub but not in \n  your configuration, it will now be deleted. Run the command in\n  `pretend` mode first if unsure.\n  [davidjb]\n- Optimise deletion process to not clear cache when attempting to \n  delete.\n  [davidjb]\n- Add extras_require option for testing to use ``nose``.\n  [davidjb]\n- Updating to depend on ``requests==0.13.1``.\n  [davidjb] \n\n\n0.2 (2012-06-22)\n----------------\n\n- Allow service hooks to be specified within the configuration.\n  For samples, see the example configuration. Any GitHub supported\n  hook can be associated with repos.\n  [davidjb]\n- Allowing repo properties to be set on creation and editing of config.\n  For available options, see http://developer.github.com/v3/repos/#create.\n  This facilities private repo creation (if quota available), amongst other\n  options.\n  [davidjb]\n- Fix response parsing issue when creating teams.\n  [davidjb]\n- Improved end-user documentation.\n  [davidjb]\n\n0.1.4 - 2012-02-19\n------------------\n\n- adding support for requests==0.10.2 and removing pdb\n  [`f561d79`_, garbas]\n\n0.1.3 - 2011-07-09\n------------------\n\n- fix caching file bug, cache now working\n  [garbas]\n\n0.1.2 - 2011-07-03\n------------------\n\n- remane team to old_team to keep convention in sync.run method, using\n  add instead of update on sets\n  [`e48de49`_, garbas]\n- pretend should work for all except get reuqest type\n  [`e098f9d`_, garbas]\n- nicer dump of json in cache file, unindent section which searches for\n  repos defined in teams\n  [`b8cb123`_, garbas]\n- we should write to cache file when there is no cache file avaliable\n  [`fd7f9ee`_, garbas]\n\n0.1.1 - 2011-07-02\n------------------\n\n- and we have first bugfix relese, after refractoring and merging\n  ``enable-cache`` branch.\n  [`a09d174`_, garbas]\n\n\n0.1 - 2011-07-02\n----------------\n\n- initial release\n  [garbas]\n\n.. _`f561d79`: https://github.com/garbas/github-collective/commit/f561d79\n.. _`e48de49`: https://github.com/garbas/github-collective/commit/e48de49\n.. _`e098f9d`: https://github.com/garbas/github-collective/commit/e098f9d\n.. _`b8cb123`: https://github.com/garbas/github-collective/commit/b8cb123\n.. _`fd7f9ee`: https://github.com/garbas/github-collective/commit/fd7f9ee\n.. _`a09d174`: https://github.com/garbas/github-collective/commit/a09d174", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/github-collective", "keywords": "github git permission collaboration collective organization", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "github-collective", "package_url": "https://pypi.org/project/github-collective/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/github-collective/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/collective/github-collective"}, "release_url": "https://pypi.org/project/github-collective/0.4/", "requires_dist": null, "requires_python": null, "summary": "Script to manage GitHub organizations in a collective manner", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p><a href=\"https://github.com/blog/674-introducing-organizations\" rel=\"nofollow\">GitHub organizations</a> are great way for organizations to manage their Git\nrepositories. This tool will let you automate the tedious tasks of creating\nteams, granting permissions, and creating repositories or modifying their\nsettings.</p>\n<p>The approach that the <tt><span class=\"pre\">github-collective</span></tt> tool takes is that you edit a\ncentral configuration (currently an ini-like file) from where options are\nread and synchronized to GitHub respectively.</p>\n<p>Initially, the purpose of this script was to manage Plone\u2019s collective\norganization on GitHub: <a href=\"http://collective.github.com\" rel=\"nofollow\">http://collective.github.com</a>. It is currently in use\nin several other locations.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Read the full documentation at <a href=\"http://github-collective.rtfd.org\" rel=\"nofollow\">http://github-collective.rtfd.org</a>.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Create one central configuration that you can sync to GitHub to configure\nyour organisation\u2019s settings, repositories, teams, and more.<ul>\n<li>Combine this with GitHub\u2019s fork-and-pull request model to easily\nallow non-administrative users to create and manage repositories\nwith minimal overhead.</li>\n</ul>\n</li>\n<li>Repositories: create and modify repositories within an organization<ul>\n<li>Configure all repository properties as per the <a href=\"http://developer.github.com/v3/repos/#create\" rel=\"nofollow\">GitHub Repos API</a>,\nincluding privacy (public/private), description, and other metadata.</li>\n<li>After the initial repository creation happens, updated values in your\nconfiguration will replace those on GitHub.</li>\n</ul>\n</li>\n<li>Service hooks: add and modify service hooks for repositories.<ul>\n<li>GitHub repositories have support for sending information upon\ncertain events taking place (for instance, pushes being made to a\nrepository or a fork being taken).</li>\n<li>After the initial repo creation process takes place, updated values in your\nhook configuration will <cite>replace</cite> those on GitHub.</li>\n<li>Hooks not present in your configuration (such as those manually added\non GitHub or those removed from local configuration) will <em>not</em> be\ndeleted.</li>\n</ul>\n</li>\n<li>Teams: automatically create teams and modify members<ul>\n<li>Control permissions for teams (for example: push, pull or admin)</li>\n</ul>\n</li>\n<li>Automatically syncs all of the above with GitHub when the tool is run.</li>\n<li>Buildout-style variable substitution in the form <tt>${section:option}</tt>.</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>When <tt><span class=\"pre\">github-collective</span></tt> is installed it should create an executable with\nsame name in your <cite>bin</cite> directory.</p>\n<pre>% bin/github-collective --help\nusage: github-collective [-h] -c CONFIG [-M MAILER] [-C CACHE] -o GITHUB_ORG\n                         -u GITHUB_USERNAME -P GITHUB_PASSWORD [-v] [-p]\n\nThis tool will let you automate tedious tasks of creating teams granting\npermission and creating repositories.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONFIG, --config CONFIG\n                        path to configuration file (could also be remote\n                        location). eg.\n                        http://collective.github.com/permissions.cfg (default:\n                        None)\n  -M MAILER, --mailer MAILER\n                        TODO (default: None)\n  -C CACHE, --cache CACHE\n                        path to file where to cache results from github.\n                        (default: None)\n  -o GITHUB_ORG, --github-org GITHUB_ORG\n                        github organisation. (default: None)\n  -u GITHUB_USERNAME, --github-username GITHUB_USERNAME\n                        github account username. (default: None)\n  -P GITHUB_PASSWORD, --github-password GITHUB_PASSWORD\n                        github account password. (default: None)\n  -v, --verbose\n  -p, --pretend\n</pre>\n<div id=\"locally-stored-configuration\">\n<h3>Locally-stored configuration</h3>\n<pre>% bin/github-collective \\\n    -c example.cfg \\ # path to configuration file\n    -o vim-addons \\  # organization that we are\n    -u garbas \\      # account that has management right for organization\n    -P PASSWORD      # account password\n</pre>\n</div>\n<div id=\"remotely-stored-configuration-github\">\n<h3>Remotely-stored configuration (GitHub)</h3>\n<pre>% bin/github-collective \\\n    -c https://raw.github.com/collective/github-collective/master/example.cfg \\\n                     # url to configuration file\n    -o collective \\  # organization that we are\n    -u garbas \\      # account that has management right for organization\n    -P PASSWORD      # account password\n</pre>\n</div>\n<div id=\"cached-configuration\">\n<h3>Cached configuration</h3>\n<pre>% bin/github-collective \\\n    -c https://raw.github.com/collective/github-collective/master/example.cfg \\\n                     # url to configuration file\n    -C .cache        # file where store and read cached results from github\n    -o collective \\  # organization that we are\n    -u garbas \\      # account that has management right for organization\n    -P PASSWORD      # account password\n</pre>\n</div>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p><tt>nose</tt> is utilised for testing and configuration for <tt>nose</tt> exists\nwithin the <tt>setup.cfg</tt> file within this project.  This configuration\nautomatically examines files for tests within the project, including\nthis read-me itself. You can initialise and run tests using the Buildout\nconfiguration provided:</p>\n<pre>git clone git://github.com/collective/github-collective.git\ncd github-collective\nvirtualenv .\npython boostrap.py\nbin/buildout\nbin/nosetests\n</pre>\n<p><a href=\"http://tox.testrun.org/latest/\" rel=\"nofollow\">tox</a> is used to ensure this package\ninstalls correctly under each version of Python.  Currently we test\nPython 2.6 and Python 2.7.  Support for running tests under <tt>tox</tt> will\ncome shortly. To test installation:</p>\n<pre>git clone git://github.com/collective/github-collective.git\ncd github-collective\nvirtualenv .\npip install tox\ntox\n</pre>\n</div>\n<div id=\"issues-and-contributing\">\n<h2>Issues and Contributing</h2>\n<p>Report issues via this project\u2019s GitHub issue tracker at\n<a href=\"https://github.com/collective/github-collective/issues\" rel=\"nofollow\">https://github.com/collective/github-collective/issues</a>.</p>\n<p>Contribute by submitting a pull request on GitHub or else by\nadding yourself to the <a href=\"http://collective.github.com\" rel=\"nofollow\">Collective</a>\nand contributing directly.</p>\n</div>\n<div id=\"todo\">\n<h2>Todo</h2>\n<ul>\n<li>Allow configuration of organisation settings via API</li>\n<li>Add facility to continue if error experienced</li>\n<li>Send emails to owners about removing repos</li>\n<li>Better logging mechanism (eg. logbook)</li>\n<li>Support configuration extensibility (eg <tt>extends =</tt> syntax) for\nusing multiple configuration files.</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th><td><a href=\"http://www.garbas.si\" rel=\"nofollow\">Rok Garbas</a> (garbas)</td>\n</tr>\n<tr><th>Contributor:</th><td><a href=\"http://davidjb.com\" rel=\"nofollow\">David Beitey</a> (davidjb)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.4 (2012-11-28)</h3>\n<ul>\n<li>Restore ability to fork repositories to organisations after unexpected\nAPI change.\n[davidjb]</li>\n<li>Ensure fork data payload (org name) is sent as JSON.\n[davidjb]</li>\n<li>Allow forks to be correctly named once created. GitHub\u2019s API forks using\nthe same name originally, so we need to rename once forked.\n[davidjb]</li>\n<li>Add rename helper functionality to sync module. (Note that configuration\ndoes not yet support renaming)\n[davidjb]</li>\n<li>Read the Docs-ified documentation.\n[davidjb]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.3.2 (2012-07-17)</h3>\n<ul>\n<li>Fix issue with templating of hook variables. Previously,\nthe original config was being altered, preventing further\ntemplating.\n[davidjb]</li>\n<li>Fix issue with hooks being updated from cache by storing the\nexisting integer ID.\n[davidjb]</li>\n<li>Fix issue with cache not being updated on repo change.\n[davidjb]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.3.1 (2012-07-17)</h3>\n<ul>\n<li>Only send API options to GitHub to reduce overhead.\n[davidjb]</li>\n<li>Display output of changes to configuration when running in verbose\nmode. This helps track down oddities with GitHub value storage to\nreduce overhead.\n[davidjb]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.3 (2012-07-17)</h3>\n<ul>\n<li>Implement Buildout-style variable substitution for configuration with\ndoctesting.\n[davidjb]</li>\n<li>Output resolved configuration when running in verbose mode.\n[davidjb]</li>\n<li>Implement deletion of repos from configuration now GitHub API v3\nsupports this. <em>Warning</em>: if a repo exists on GitHub but not in\nyour configuration, it will now be deleted. Run the command in\n<cite>pretend</cite> mode first if unsure.\n[davidjb]</li>\n<li>Optimise deletion process to not clear cache when attempting to\ndelete.\n[davidjb]</li>\n<li>Add extras_require option for testing to use <tt>nose</tt>.\n[davidjb]</li>\n<li>Updating to depend on <tt><span class=\"pre\">requests==0.13.1</span></tt>.\n[davidjb]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.2 (2012-06-22)</h3>\n<ul>\n<li>Allow service hooks to be specified within the configuration.\nFor samples, see the example configuration. Any GitHub supported\nhook can be associated with repos.\n[davidjb]</li>\n<li>Allowing repo properties to be set on creation and editing of config.\nFor available options, see <a href=\"http://developer.github.com/v3/repos/#create\" rel=\"nofollow\">http://developer.github.com/v3/repos/#create</a>.\nThis facilities private repo creation (if quota available), amongst other\noptions.\n[davidjb]</li>\n<li>Fix response parsing issue when creating teams.\n[davidjb]</li>\n<li>Improved end-user documentation.\n[davidjb]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.1.4 - 2012-02-19</h3>\n<ul>\n<li>adding support for requests==0.10.2 and removing pdb\n[<a href=\"https://github.com/garbas/github-collective/commit/f561d79\" rel=\"nofollow\">f561d79</a>, garbas]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.1.3 - 2011-07-09</h3>\n<ul>\n<li>fix caching file bug, cache now working\n[garbas]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.1.2 - 2011-07-03</h3>\n<ul>\n<li>remane team to old_team to keep convention in sync.run method, using\nadd instead of update on sets\n[<a href=\"https://github.com/garbas/github-collective/commit/e48de49\" rel=\"nofollow\">e48de49</a>, garbas]</li>\n<li>pretend should work for all except get reuqest type\n[<a href=\"https://github.com/garbas/github-collective/commit/e098f9d\" rel=\"nofollow\">e098f9d</a>, garbas]</li>\n<li>nicer dump of json in cache file, unindent section which searches for\nrepos defined in teams\n[<a href=\"https://github.com/garbas/github-collective/commit/b8cb123\" rel=\"nofollow\">b8cb123</a>, garbas]</li>\n<li>we should write to cache file when there is no cache file avaliable\n[<a href=\"https://github.com/garbas/github-collective/commit/fd7f9ee\" rel=\"nofollow\">fd7f9ee</a>, garbas]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.1.1 - 2011-07-02</h3>\n<ul>\n<li>and we have first bugfix relese, after refractoring and merging\n<tt><span class=\"pre\">enable-cache</span></tt> branch.\n[<a href=\"https://github.com/garbas/github-collective/commit/a09d174\" rel=\"nofollow\">a09d174</a>, garbas]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.1 - 2011-07-02</h3>\n<ul>\n<li>initial release\n[garbas]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 722098, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "78fe23ef61d4081ee4200215a03d2240", "sha256": "f85a10079ac7821ddd9b3df0960e0280376a99aa3c9c46a80b11ac5bcad62764"}, "downloads": -1, "filename": "github-collective-0.1.tar.gz", "has_sig": false, "md5_digest": "78fe23ef61d4081ee4200215a03d2240", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9054, "upload_time": "2011-07-02T22:35:40", "upload_time_iso_8601": "2011-07-02T22:35:40.825742Z", "url": "https://files.pythonhosted.org/packages/ab/19/a2794050f2ff75c350ae1a02bf2d4e83df37dd6f364ef6e0a1a34884ec82/github-collective-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "900a74d10a61688d60aa1ba3853a5be8", "sha256": "42da93130e08532ce98903043729a8e6d614399cc4449593d781408f6019ea42"}, "downloads": -1, "filename": "github-collective-0.1.1.tar.gz", "has_sig": false, "md5_digest": "900a74d10a61688d60aa1ba3853a5be8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9219, "upload_time": "2011-07-02T23:58:15", "upload_time_iso_8601": "2011-07-02T23:58:15.433696Z", "url": "https://files.pythonhosted.org/packages/f5/1a/5282805d818ff55813b4f81bb8c2f4758dfaa2547c59c6ad7f0aab063895/github-collective-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "700ca4b87897967effbe3e0501f8ca37", "sha256": "773b73c3d7a8a26bd6eecc9a752916d92ec9a4628676acbeb42e75c3c2b0ac22"}, "downloads": -1, "filename": "github-collective-0.1.2.tar.gz", "has_sig": false, "md5_digest": "700ca4b87897967effbe3e0501f8ca37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9879, "upload_time": "2011-07-03T05:06:28", "upload_time_iso_8601": "2011-07-03T05:06:28.751442Z", "url": "https://files.pythonhosted.org/packages/69/50/0fedef6f6d2f0d8a9c966ede7f3c13ea3075fc3861085d8fea0be52248a3/github-collective-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "67628187ed310289ea47f1bc3b65faaa", "sha256": "e1ab8a9297ac5e3b9fb4545e060eb5d54814c8e13696c07287d6ba7833112b8a"}, "downloads": -1, "filename": "github-collective-0.1.3.tar.gz", "has_sig": false, "md5_digest": "67628187ed310289ea47f1bc3b65faaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10229, "upload_time": "2011-07-09T04:44:36", "upload_time_iso_8601": "2011-07-09T04:44:36.197415Z", "url": "https://files.pythonhosted.org/packages/f9/c2/87ffde69b4f6a41eaaf7376d0922526cc1042e6a632fc3cc2ce8e0919b8d/github-collective-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "bae7f4dab44cec4324bb856b4576186e", "sha256": "abece0be037c341ba44638b9ab5a272824279eeba5f704abeb59eefbdd5e6d59"}, "downloads": -1, "filename": "github-collective-0.1.4.tar.gz", "has_sig": false, "md5_digest": "bae7f4dab44cec4324bb856b4576186e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10304, "upload_time": "2012-02-19T19:06:39", "upload_time_iso_8601": "2012-02-19T19:06:39.538614Z", "url": "https://files.pythonhosted.org/packages/ac/83/81653b865bcc50ccfaa4162e7cfa9893d4ed4d21c4c1d8d6545032f5a462/github-collective-0.1.4.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "55cd0da548ede986d254b27f23ac94c1", "sha256": "44def8c79cbbfdc1e73e38c253d3488cb8cce1f274fe1cd2e47d70bd2d4bfadf"}, "downloads": -1, "filename": "github-collective-0.2.zip", "has_sig": false, "md5_digest": "55cd0da548ede986d254b27f23ac94c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33939, "upload_time": "2012-06-22T06:22:50", "upload_time_iso_8601": "2012-06-22T06:22:50.031323Z", "url": "https://files.pythonhosted.org/packages/1f/3e/22bda7f59b0cc8b03043ab74f51c01359da4cbb8ea3639616250cf8aa087/github-collective-0.2.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "9c16b09e3edd2b14db952d2774c23358", "sha256": "a106264b850cf95d75c992f3126428dc3c2265a00ca716b1484cabd1bd8e41ac"}, "downloads": -1, "filename": "github-collective-0.3.zip", "has_sig": false, "md5_digest": "9c16b09e3edd2b14db952d2774c23358", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45197, "upload_time": "2012-07-17T03:06:03", "upload_time_iso_8601": "2012-07-17T03:06:03.534121Z", "url": "https://files.pythonhosted.org/packages/ee/66/b54c08aaf690707ed9d6025a17293ec77f7f1d3a6113b0e8e3b0177019a4/github-collective-0.3.zip", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "64ed741786bca1733b561533e016987a", "sha256": "fc54c9f15f7f7da7d62cde9cd6088c2a38e55a82e36adab8aaf2a12ffd340fed"}, "downloads": -1, "filename": "github-collective-0.3.1.zip", "has_sig": false, "md5_digest": "64ed741786bca1733b561533e016987a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46302, "upload_time": "2012-07-17T04:58:48", "upload_time_iso_8601": "2012-07-17T04:58:48.654015Z", "url": "https://files.pythonhosted.org/packages/87/9a/bfaeaf876fe66746b92b08c09aef7828a24c29aa8cce4d5fd47e7c7c82fe/github-collective-0.3.1.zip", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "562b1793d099cdf93743e88603cb5734", "sha256": "e5807b35a7926cd5073f5317bbbfb3f1f06da50ca1885671bad7877406de9fae"}, "downloads": -1, "filename": "github-collective-0.3.2.zip", "has_sig": false, "md5_digest": "562b1793d099cdf93743e88603cb5734", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46655, "upload_time": "2012-07-17T07:01:22", "upload_time_iso_8601": "2012-07-17T07:01:22.487304Z", "url": "https://files.pythonhosted.org/packages/ac/55/77a833f62f5370aface3dcdf5f19c33a6f9d8a949f23b86cc07b08646681/github-collective-0.3.2.zip", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "79a99297df35a5085df36844306bb8df", "sha256": "24288e2b5dff5fa1d5909a917cd0343ceaa8c68d358cfa142a0f93547379864b"}, "downloads": -1, "filename": "github-collective-0.4.zip", "has_sig": false, "md5_digest": "79a99297df35a5085df36844306bb8df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42996, "upload_time": "2012-11-27T22:49:36", "upload_time_iso_8601": "2012-11-27T22:49:36.590094Z", "url": "https://files.pythonhosted.org/packages/fb/38/975fd993c487ea7d937555ed9a6a710d61a1ecedbfffa9bfb80d522d9cc3/github-collective-0.4.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "79a99297df35a5085df36844306bb8df", "sha256": "24288e2b5dff5fa1d5909a917cd0343ceaa8c68d358cfa142a0f93547379864b"}, "downloads": -1, "filename": "github-collective-0.4.zip", "has_sig": false, "md5_digest": "79a99297df35a5085df36844306bb8df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42996, "upload_time": "2012-11-27T22:49:36", "upload_time_iso_8601": "2012-11-27T22:49:36.590094Z", "url": "https://files.pythonhosted.org/packages/fb/38/975fd993c487ea7d937555ed9a6a710d61a1ecedbfffa9bfb80d522d9cc3/github-collective-0.4.zip", "yanked": false}], "timestamp": "Fri May  8 00:57:01 2020"}