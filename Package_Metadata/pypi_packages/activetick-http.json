{"info": {"author": "Christopher Toledo", "author_email": "chris@mindsforge.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "===============\nactivetick_http\n===============\nPython module that connects to ActiveTick HTTP proxy and supplies Pandas DataFrames.\nRequires requests for the quoteStream, and redis for caching.\n\nCurrently unstable, may end up changing the methods from camelCase to pep8 snake_case.\n\ntests run using ``pytest``\n\n===========\nHow to use:\n===========\nRun the\nHTTP proxy supplied by ActiveTick_\nand instantiate ActiveTick, the defaults are shown with a Redis cache enabled::\n\n    from activetick_http import ActiveTick\n\n    # Import the StrictRedis client to enable local persistent caching\n    from redis import StrictRedis\n\n    # ActiveTick initialized with Redis caching enabled (requires Redis)\n    at = ActiveTick(host='127.0.0.1', port=5000, cache=StrictRedis(host='127.0.0.1'))\n\n>From the ActiveTick instance we have access to all the functionality provided by the HTTP proxy with the following \\\nmethods:\n\n.. _ActiveTick: http://www.activetick.com/activetick/contents/PersonalServicesDataAPIDownload.aspx\n\n=========\nquoteData\n=========\n``quoteData(symbols, fields)``\n\nReturns instantaneous quote information (fields) on symbols\ncheck `quote_fields.py` for available options.::\n\n    fields = ['LastPrice', 'BidPrice', 'AskPrice']\n    df = at.quoteData(('SPY', 'TLT', 'TVIX'), fields)\n    print(df[fields].head())\n\n+------+-------------+------------+------------+\n|      |   LastPrice |   BidPrice |   AskPrice |\n+======+=============+============+============+\n| SPY  |      216.3  |     216.46 |     216.55 |\n+------+-------------+------------+------------+\n| TLT  |      137.51 |     137.02 |     137.5  |\n+------+-------------+------------+------------+\n| TVIX |       18.15 |      18.2  |      18.25 |\n+------+-------------+------------+------------+\n\n===========\nquoteStream\n===========\n``quoteStream(symbols)``\n\nReturns a live updated quote stream iterator::\n\n    stream = at.quoteStream(('NUGT','DUST'))\n    for tick in stream:\n        print(tick)\n\nTODO: example df\n\n=======\nbarData\n=======\n``barData(symbol, historyType='I', intradayMinutes=60, beginTime=datetime, endTime=datetime)``\n\nReturns OHLCV data for singular symbol::\n\n    df = at.barData('INTC', historyType='I', beginTime=datetime(datetime.now().year, 9, 27))\n    print(df.head())\n\n+---------------------+--------+--------+-------+---------+-------------+\n|                     |   open |   high |   low |   close |      volume |\n+=====================+========+========+=======+=========+=============+\n| 2016-09-28 09:00:00 | 37.52  |  37.52 | 37.25 |  37.395 | 1.79294e+06 |\n+---------------------+--------+--------+-------+---------+-------------+\n| 2016-09-28 10:00:00 | 37.4   |  37.46 | 37.27 |  37.31  | 1.59818e+06 |\n+---------------------+--------+--------+-------+---------+-------------+\n| 2016-09-28 11:00:00 | 37.31  |  37.32 | 37.15 |  37.28  | 1.32702e+06 |\n+---------------------+--------+--------+-------+---------+-------------+\n| 2016-09-28 12:00:00 | 37.28  |  37.32 | 37.2  |  37.27  | 2.39398e+06 |\n+---------------------+--------+--------+-------+---------+-------------+\n| 2016-09-28 13:00:00 | 37.275 |  37.39 | 37.22 |  37.37  | 1.23249e+06 |\n+---------------------+--------+--------+-------+---------+-------------+\n\n========\ntickData\n========\n``tickData(symbol, trades=False, quotes=True, beginTime=datetime, endTime=dateime)``\nReturns historical tick level quote and trade data for a symbol::\n\n    df = at.tickData('GDX', trades=True, quotes=False)\n    print(df.head())\n\n+----------------------------+--------+--------+---------+---------+---------+---------+---------+---------+\n|                            | type   |   last |   lastz | lastx   |   cond1 |   cond2 |   cond3 |   cond4 |\n+============================+========+========+=========+=========+=========+=========+=========+=========+\n| 2016-09-28 09:30:00.091000 | T      |  26.27 |   52073 | P       |       0 |       0 |      17 |       0 |\n+----------------------------+--------+--------+---------+---------+---------+---------+---------+---------+\n| 2016-09-28 09:30:00.091000 | T      |  26.27 |   52073 | P       |      16 |       0 |       0 |       0 |\n+----------------------------+--------+--------+---------+---------+---------+---------+---------+---------+\n| 2016-09-28 09:30:00.182000 | T      |  26.25 |     211 | T       |       0 |      12 |       0 |       0 |\n+----------------------------+--------+--------+---------+---------+---------+---------+---------+---------+\n| 2016-09-28 09:30:00.184000 | T      |  26.25 |      89 | T       |      37 |      12 |      14 |       0 |\n+----------------------------+--------+--------+---------+---------+---------+---------+---------+---------+\n| 2016-09-28 09:30:00.185000 | T      |  26.25 |     500 | T       |       0 |      12 |      14 |       0 |\n+----------------------------+--------+--------+---------+---------+---------+---------+---------+---------+\n\n===========\noptionChain\n===========\n``optionChain(symbol)``\n\nReturns the symbols making up the optionchain for the underlying::\n\n    df = at.optionChain('SPY')\n    print(df.head())\n\n+----+------------------------------+\n|    |                              |\n+====+==============================+\n|  0 | OPTION:SPY---161014P00186000 |\n+----+------------------------------+\n|  1 | OPTION:SPY---161012C00197000 |\n+----+------------------------------+\n|  2 | OPTION:SPY---161014C00187000 |\n+----+------------------------------+\n|  3 | OPTION:SPY---161014P00192000 |\n+----+------------------------------+\n|  4 | OPTION:SPY---161012P00193000 |\n+----+------------------------------+\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/uberscientist/activetick_http", "keywords": "activetick,finance,quant,pandas", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "activetick-http", "package_url": "https://pypi.org/project/activetick-http/", "platform": "", "project_url": "https://pypi.org/project/activetick-http/", "project_urls": {"Homepage": "https://github.com/uberscientist/activetick_http"}, "release_url": "https://pypi.org/project/activetick-http/0.12.1/", "requires_dist": ["numpy", "pandas", "redis", "requests"], "requires_python": "", "summary": "Pandas wrapper for ActiveTick HTTP Proxy", "version": "0.12.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"activetick-http\">\n<h2>activetick_http</h2>\n<p>Python module that connects to ActiveTick HTTP proxy and supplies Pandas DataFrames.\nRequires requests for the quoteStream, and redis for caching.</p>\n<p>Currently unstable, may end up changing the methods from camelCase to pep8 snake_case.</p>\n<p>tests run using <tt>pytest</tt></p>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use:</h2>\n<p>Run the\nHTTP proxy supplied by <a href=\"http://www.activetick.com/activetick/contents/PersonalServicesDataAPIDownload.aspx\" rel=\"nofollow\">ActiveTick</a>\nand instantiate ActiveTick, the defaults are shown with a Redis cache enabled:</p>\n<pre>from activetick_http import ActiveTick\n\n# Import the StrictRedis client to enable local persistent caching\nfrom redis import StrictRedis\n\n# ActiveTick initialized with Redis caching enabled (requires Redis)\nat = ActiveTick(host='127.0.0.1', port=5000, cache=StrictRedis(host='127.0.0.1'))\n</pre>\n<p>&gt;From the ActiveTick instance we have access to all the functionality provided by the HTTP proxy with the following methods:</p>\n</div>\n<div id=\"quotedata\">\n<h2>quoteData</h2>\n<p><tt>quoteData(symbols, fields)</tt></p>\n<p>Returns instantaneous quote information (fields) on symbols\ncheck <cite>quote_fields.py</cite> for available options.:</p>\n<pre>fields = ['LastPrice', 'BidPrice', 'AskPrice']\ndf = at.quoteData(('SPY', 'TLT', 'TVIX'), fields)\nprint(df[fields].head())\n</pre>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>\u00a0</th>\n<th>LastPrice</th>\n<th>BidPrice</th>\n<th>AskPrice</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>SPY</td>\n<td>216.3</td>\n<td>216.46</td>\n<td>216.55</td>\n</tr>\n<tr><td>TLT</td>\n<td>137.51</td>\n<td>137.02</td>\n<td>137.5</td>\n</tr>\n<tr><td>TVIX</td>\n<td>18.15</td>\n<td>18.2</td>\n<td>18.25</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"quotestream\">\n<h2>quoteStream</h2>\n<p><tt>quoteStream(symbols)</tt></p>\n<p>Returns a live updated quote stream iterator:</p>\n<pre>stream = at.quoteStream(('NUGT','DUST'))\nfor tick in stream:\n    print(tick)\n</pre>\n<p>TODO: example df</p>\n</div>\n<div id=\"bardata\">\n<h2>barData</h2>\n<p><tt>barData(symbol, <span class=\"pre\">historyType='I',</span> intradayMinutes=60, beginTime=datetime, endTime=datetime)</tt></p>\n<p>Returns OHLCV data for singular symbol:</p>\n<pre>df = at.barData('INTC', historyType='I', beginTime=datetime(datetime.now().year, 9, 27))\nprint(df.head())\n</pre>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>\u00a0</th>\n<th>open</th>\n<th>high</th>\n<th>low</th>\n<th>close</th>\n<th>volume</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>2016-09-28 09:00:00</td>\n<td>37.52</td>\n<td>37.52</td>\n<td>37.25</td>\n<td>37.395</td>\n<td>1.79294e+06</td>\n</tr>\n<tr><td>2016-09-28 10:00:00</td>\n<td>37.4</td>\n<td>37.46</td>\n<td>37.27</td>\n<td>37.31</td>\n<td>1.59818e+06</td>\n</tr>\n<tr><td>2016-09-28 11:00:00</td>\n<td>37.31</td>\n<td>37.32</td>\n<td>37.15</td>\n<td>37.28</td>\n<td>1.32702e+06</td>\n</tr>\n<tr><td>2016-09-28 12:00:00</td>\n<td>37.28</td>\n<td>37.32</td>\n<td>37.2</td>\n<td>37.27</td>\n<td>2.39398e+06</td>\n</tr>\n<tr><td>2016-09-28 13:00:00</td>\n<td>37.275</td>\n<td>37.39</td>\n<td>37.22</td>\n<td>37.37</td>\n<td>1.23249e+06</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"tickdata\">\n<h2>tickData</h2>\n<p><tt>tickData(symbol, trades=False, quotes=True, beginTime=datetime, endTime=dateime)</tt>\nReturns historical tick level quote and trade data for a symbol:</p>\n<pre>df = at.tickData('GDX', trades=True, quotes=False)\nprint(df.head())\n</pre>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>\u00a0</th>\n<th>type</th>\n<th>last</th>\n<th>lastz</th>\n<th>lastx</th>\n<th>cond1</th>\n<th>cond2</th>\n<th>cond3</th>\n<th>cond4</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>2016-09-28 09:30:00.091000</td>\n<td>T</td>\n<td>26.27</td>\n<td>52073</td>\n<td>P</td>\n<td>0</td>\n<td>0</td>\n<td>17</td>\n<td>0</td>\n</tr>\n<tr><td>2016-09-28 09:30:00.091000</td>\n<td>T</td>\n<td>26.27</td>\n<td>52073</td>\n<td>P</td>\n<td>16</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr><td>2016-09-28 09:30:00.182000</td>\n<td>T</td>\n<td>26.25</td>\n<td>211</td>\n<td>T</td>\n<td>0</td>\n<td>12</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr><td>2016-09-28 09:30:00.184000</td>\n<td>T</td>\n<td>26.25</td>\n<td>89</td>\n<td>T</td>\n<td>37</td>\n<td>12</td>\n<td>14</td>\n<td>0</td>\n</tr>\n<tr><td>2016-09-28 09:30:00.185000</td>\n<td>T</td>\n<td>26.25</td>\n<td>500</td>\n<td>T</td>\n<td>0</td>\n<td>12</td>\n<td>14</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"optionchain\">\n<h2>optionChain</h2>\n<p><tt>optionChain(symbol)</tt></p>\n<p>Returns the symbols making up the optionchain for the underlying:</p>\n<pre>df = at.optionChain('SPY')\nprint(df.head())\n</pre>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>\u00a0</th>\n<th>\u00a0</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>0</td>\n<td>OPTION:SPY\u2014161014P00186000</td>\n</tr>\n<tr><td>1</td>\n<td>OPTION:SPY\u2014161012C00197000</td>\n</tr>\n<tr><td>2</td>\n<td>OPTION:SPY\u2014161014C00187000</td>\n</tr>\n<tr><td>3</td>\n<td>OPTION:SPY\u2014161014P00192000</td>\n</tr>\n<tr><td>4</td>\n<td>OPTION:SPY\u2014161012P00193000</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 2764369, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "165445df34a3d814f46c6768ca716d5e", "sha256": "9bcd68e18bfe952dfab942b924a1d7180d31fc61d7f1801e70c5f931b5e6757d"}, "downloads": -1, "filename": "activetick_http-0.1.tar.gz", "has_sig": false, "md5_digest": "165445df34a3d814f46c6768ca716d5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6982, "upload_time": "2016-10-02T23:55:35", "upload_time_iso_8601": "2016-10-02T23:55:35.090155Z", "url": "https://files.pythonhosted.org/packages/87/5a/730a2d095d73f23e5af59c48b969fe59b0c4dfd4d309dda37d8749dbb6d9/activetick_http-0.1.tar.gz", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "a9976f96f9262bba9074a016fd86e945", "sha256": "3c1d4b1cfc8ef54e9f956f3df9c884892fc545d5fd6e580eaed01599bceec53a"}, "downloads": -1, "filename": "activetick_http-0.11.tar.gz", "has_sig": false, "md5_digest": "a9976f96f9262bba9074a016fd86e945", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7073, "upload_time": "2016-10-02T23:55:30", "upload_time_iso_8601": "2016-10-02T23:55:30.414624Z", "url": "https://files.pythonhosted.org/packages/21/9d/234c277ae159fe84172ae41eec425aa1c91c1dfb3fd95cd5ea6770e2056a/activetick_http-0.11.tar.gz", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "86c64c830c3fe6be0c938197cb2cc395", "sha256": "700f0e43596535c8747f66eee069563cbe4aa8aea004ac78de5ec0a52ae8fd11"}, "downloads": -1, "filename": "activetick_http-0.12.tar.gz", "has_sig": false, "md5_digest": "86c64c830c3fe6be0c938197cb2cc395", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7077, "upload_time": "2016-10-02T23:55:32", "upload_time_iso_8601": "2016-10-02T23:55:32.528525Z", "url": "https://files.pythonhosted.org/packages/6d/74/62b2dc90cdf94a5a5b4a6623e9cff43706c334381dad299eee346d6394d8/activetick_http-0.12.tar.gz", "yanked": false}], "0.12.1": [{"comment_text": "", "digests": {"md5": "fc05f15045eb4273f70b21ad76564167", "sha256": "65574f96fe8b217fe0a0ad43da9d7c5070197243dd35cf8364e6a800ac7dd89d"}, "downloads": -1, "filename": "activetick_http-0.12.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fc05f15045eb4273f70b21ad76564167", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10102, "upload_time": "2017-04-09T19:10:56", "upload_time_iso_8601": "2017-04-09T19:10:56.977971Z", "url": "https://files.pythonhosted.org/packages/5b/67/1798e8ceb6c37dc32b8e186659fb6075dd16e5f86b1a0ef0c0f0fdb9b89a/activetick_http-0.12.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88ab974b0e0cfff7892793a4a55ab379", "sha256": "6228a2eb38df439e3388862200fe168b6f0904cc88949f2c5e5d06ae10d55b81"}, "downloads": -1, "filename": "activetick_http-0.12.1-py3-none-any.whl", "has_sig": false, "md5_digest": "88ab974b0e0cfff7892793a4a55ab379", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10097, "upload_time": "2017-04-09T19:10:58", "upload_time_iso_8601": "2017-04-09T19:10:58.444480Z", "url": "https://files.pythonhosted.org/packages/04/1e/f8b5e5412cf5c79bc0d59f523b972e8faa31538aa3bff8255d6109fe72c6/activetick_http-0.12.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fc05f15045eb4273f70b21ad76564167", "sha256": "65574f96fe8b217fe0a0ad43da9d7c5070197243dd35cf8364e6a800ac7dd89d"}, "downloads": -1, "filename": "activetick_http-0.12.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fc05f15045eb4273f70b21ad76564167", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10102, "upload_time": "2017-04-09T19:10:56", "upload_time_iso_8601": "2017-04-09T19:10:56.977971Z", "url": "https://files.pythonhosted.org/packages/5b/67/1798e8ceb6c37dc32b8e186659fb6075dd16e5f86b1a0ef0c0f0fdb9b89a/activetick_http-0.12.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88ab974b0e0cfff7892793a4a55ab379", "sha256": "6228a2eb38df439e3388862200fe168b6f0904cc88949f2c5e5d06ae10d55b81"}, "downloads": -1, "filename": "activetick_http-0.12.1-py3-none-any.whl", "has_sig": false, "md5_digest": "88ab974b0e0cfff7892793a4a55ab379", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10097, "upload_time": "2017-04-09T19:10:58", "upload_time_iso_8601": "2017-04-09T19:10:58.444480Z", "url": "https://files.pythonhosted.org/packages/04/1e/f8b5e5412cf5c79bc0d59f523b972e8faa31538aa3bff8255d6109fe72c6/activetick_http-0.12.1-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 16:24:17 2020"}