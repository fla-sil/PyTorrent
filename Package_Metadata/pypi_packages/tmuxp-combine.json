{"info": {"author": "Andrzej Pragacz", "author_email": "apragacz@o2.pl", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "tmuxp-combine\n=============\n\nA tool for combining tmuxp configs.\n\nWhy?\n----\n\n``tmux`` is a great tool. In some cases, you would like to start it with\npreconfigured windows instead of creating them manually each time.\n``tmuxp`` is a great tool for doing that.\n\nI found out that in some cases I wanted to load only a subset of\nparticular windows, so I wrote simple tool which combines the configs\nand calls ``tmuxp`` with combined config.\n\nSample config\n-------------\n\n``~/.tmuxp-combine/mysession/base.yml``:\n\n.. code:: yaml\n\n    session_name: mysession\n    start_directory: ~/projects/myproject\n\n``~/.tmuxp-combine/mysession/windows/docker.yml``:\n\n.. code:: yaml\n\n    window_name: docker\n    layout: main-vertical\n    panes:\n    - shell_command:\n      - cd .\n      focus: true\n    - shell_command:\n      - docker-compose up\n\n``~/.tmuxp-combine/mysession/windows/nodejs.yml``:\n\n.. code:: yaml\n\n    window_name: nodejs\n    layout: main-vertical\n    panes:\n    - shell_command:\n      - cd .\n      focus: true\n    - shell_command:\n      - npm run serve\n\nRunning the ``mysession`` in ``tmux`` only with ``nodejs`` window:\n\n.. code:: bash\n\n    tmuxp-combine load mysession -w nodejs\n\nRunning the ``mysession`` in ``tmux`` only with ``nodejs`` and\n``docker`` windows:\n\n.. code:: bash\n\n    tmuxp-combine load mysession -w nodejs -w docker\n\nRunning the ``mysession`` in ``tmux`` with all windows:\n\n.. code:: bash\n\n    tmuxp-combine load mysession\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/szopu/tmuxp-combine", "keywords": "tmux tmuxp cli", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tmuxp-combine", "package_url": "https://pypi.org/project/tmuxp-combine/", "platform": "", "project_url": "https://pypi.org/project/tmuxp-combine/", "project_urls": {"Homepage": "https://github.com/szopu/tmuxp-combine"}, "release_url": "https://pypi.org/project/tmuxp-combine/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "A tool for combining tmuxp configs", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A tool for combining tmuxp configs.</p>\n<div id=\"why\">\n<h2>Why?</h2>\n<p><tt>tmux</tt> is a great tool. In some cases, you would like to start it with\npreconfigured windows instead of creating them manually each time.\n<tt>tmuxp</tt> is a great tool for doing that.</p>\n<p>I found out that in some cases I wanted to load only a subset of\nparticular windows, so I wrote simple tool which combines the configs\nand calls <tt>tmuxp</tt> with combined config.</p>\n</div>\n<div id=\"sample-config\">\n<h2>Sample config</h2>\n<p><tt><span class=\"pre\">~/.tmuxp-combine/mysession/base.yml</span></tt>:</p>\n<pre><span class=\"nt\">session_name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">mysession</span>\n<span class=\"nt\">start_directory</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">~/projects/myproject</span>\n</pre>\n<p><tt><span class=\"pre\">~/.tmuxp-combine/mysession/windows/docker.yml</span></tt>:</p>\n<pre><span class=\"nt\">window_name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">docker</span>\n<span class=\"nt\">layout</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">main-vertical</span>\n<span class=\"nt\">panes</span><span class=\"p\">:</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">shell_command</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">cd .</span>\n  <span class=\"nt\">focus</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">true</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">shell_command</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">docker-compose up</span>\n</pre>\n<p><tt><span class=\"pre\">~/.tmuxp-combine/mysession/windows/nodejs.yml</span></tt>:</p>\n<pre><span class=\"nt\">window_name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">nodejs</span>\n<span class=\"nt\">layout</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">main-vertical</span>\n<span class=\"nt\">panes</span><span class=\"p\">:</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">shell_command</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">cd .</span>\n  <span class=\"nt\">focus</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">true</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">shell_command</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">npm run serve</span>\n</pre>\n<p>Running the <tt>mysession</tt> in <tt>tmux</tt> only with <tt>nodejs</tt> window:</p>\n<pre>tmuxp-combine load mysession -w nodejs\n</pre>\n<p>Running the <tt>mysession</tt> in <tt>tmux</tt> only with <tt>nodejs</tt> and\n<tt>docker</tt> windows:</p>\n<pre>tmuxp-combine load mysession -w nodejs -w docker\n</pre>\n<p>Running the <tt>mysession</tt> in <tt>tmux</tt> with all windows:</p>\n<pre>tmuxp-combine load mysession\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3250297, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "5ec5c21e2dd37042b56fb2520408956d", "sha256": "4212bb455a88d5a78ef2e0043b2e34c1474b21d1f0f9ac8230ef8fa6463eebbd"}, "downloads": -1, "filename": "tmuxp-combine-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5ec5c21e2dd37042b56fb2520408956d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5440, "upload_time": "2017-10-14T16:37:51", "upload_time_iso_8601": "2017-10-14T16:37:51.190193Z", "url": "https://files.pythonhosted.org/packages/7b/e5/513ba8daa261affce3279204bc441b34c15c35313bd9e6ca46cee14db696/tmuxp-combine-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5ec5c21e2dd37042b56fb2520408956d", "sha256": "4212bb455a88d5a78ef2e0043b2e34c1474b21d1f0f9ac8230ef8fa6463eebbd"}, "downloads": -1, "filename": "tmuxp-combine-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5ec5c21e2dd37042b56fb2520408956d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5440, "upload_time": "2017-10-14T16:37:51", "upload_time_iso_8601": "2017-10-14T16:37:51.190193Z", "url": "https://files.pythonhosted.org/packages/7b/e5/513ba8daa261affce3279204bc441b34c15c35313bd9e6ca46cee14db696/tmuxp-combine-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:52:06 2020"}