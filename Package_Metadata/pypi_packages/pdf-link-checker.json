{"info": {"author": "Ezequiel Garcia", "author_email": "ezequiel.garcia@free-electrons.com", "bugtrack_url": null, "classifiers": [], "description": "================\npdf-link-checker\n================\n**pdf-link-checker** is a simple tool that parses a PDF document and checks for\nbroken hyperlinks. This done by sending a simple HTTP request to each link\nfound in a given document.\n\nGetting it running\n==================\n\n::\n\n    pip install pdf-link-checker\n    pdf-link-checker my-awesome-slides.pdf\n\nOptions\n=======\n\n* --max-threads\n\n  Specifies the maximum number of allowed threads (default: 100).\n\n  To speedup the run, pdf-link-checker will launch several threads\n  in order to check several links in parallel.\n  This option allows to set a limit to the number of threads.\n\n* --max-requests-per-host\n\n  Specifies the maximum number of allowed requests per host.\n\n  Some URLs may belong to the same host, and since pdf-link-checker\n  can check many URLs at the same time, we may want to set a limit\n  to the number of requests per host.\n  Otherwise, some hosts may confuse the check with a DoS attack.\n\nGetting help\n============\n\nYou can post your questions to our dedicated mailing list:\n\n  http://lists.free-electrons.com/mailman/listinfo/pdf-link-checker-updates\n\nTODO\n====\n\n*(...because there's no active project without a TODO list!)*\n\n* Fix: some documents are failing on doc.initialize().\n\n* Fix: if the URL is a huge document, we should just check and not\n  download it entirely.\n\n* Replace the thread array into a nice thread pool.\n  Each thread from the pool should take an URL from a (protected) queue.\n  We could also have one queue per host and thus handle the\n  max-requests-per-host constraint without a separate parameter.\n\nVersion History\n===============\n\n1.1.1\n  * Remove extra print, just a leftover\n\n1.1.0\n  * Only allow https and ftp URIs. This prevents from failing on mailto:\n    and file:// URIs.\n  * Add better exception handling to avoid crashing\n  * Add better timeout and request exception handling\n  * Fix broken thread management\n  * Remove stupid double-requests\n  * Several small fixes\n\n1.0.2\n  * Updated repo location\n  * Moved from distutils to setuptools\n\n1.0.1\n  * Version bump\n\n1.0\n  * Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://git.free-electrons.com/pdf-link-checker", "keywords": null, "license": "GPL-2", "maintainer": null, "maintainer_email": null, "name": "pdf-link-checker", "package_url": "https://pypi.org/project/pdf-link-checker/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pdf-link-checker/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://git.free-electrons.com/pdf-link-checker"}, "release_url": "https://pypi.org/project/pdf-link-checker/1.1.1/", "requires_dist": null, "requires_python": null, "summary": "Reports broken hyperlinks in PDF documents", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>pdf-link-checker</strong> is a simple tool that parses a PDF document and checks for\nbroken hyperlinks. This done by sending a simple HTTP request to each link\nfound in a given document.</p>\n<div id=\"getting-it-running\">\n<h2>Getting it running</h2>\n<pre>pip install pdf-link-checker\npdf-link-checker my-awesome-slides.pdf\n</pre>\n</div>\n<div id=\"options\">\n<h2>Options</h2>\n<ul>\n<li><p>\u2013max-threads</p>\n<p>Specifies the maximum number of allowed threads (default: 100).</p>\n<p>To speedup the run, pdf-link-checker will launch several threads\nin order to check several links in parallel.\nThis option allows to set a limit to the number of threads.</p>\n</li>\n<li><p>\u2013max-requests-per-host</p>\n<p>Specifies the maximum number of allowed requests per host.</p>\n<p>Some URLs may belong to the same host, and since pdf-link-checker\ncan check many URLs at the same time, we may want to set a limit\nto the number of requests per host.\nOtherwise, some hosts may confuse the check with a DoS attack.</p>\n</li>\n</ul>\n</div>\n<div id=\"getting-help\">\n<h2>Getting help</h2>\n<p>You can post your questions to our dedicated mailing list:</p>\n<blockquote>\n<a href=\"http://lists.free-electrons.com/mailman/listinfo/pdf-link-checker-updates\" rel=\"nofollow\">http://lists.free-electrons.com/mailman/listinfo/pdf-link-checker-updates</a></blockquote>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<p><em>(\u2026because there\u2019s no active project without a TODO list!)</em></p>\n<ul>\n<li>Fix: some documents are failing on doc.initialize().</li>\n<li>Fix: if the URL is a huge document, we should just check and not\ndownload it entirely.</li>\n<li>Replace the thread array into a nice thread pool.\nEach thread from the pool should take an URL from a (protected) queue.\nWe could also have one queue per host and thus handle the\nmax-requests-per-host constraint without a separate parameter.</li>\n</ul>\n</div>\n<div id=\"version-history\">\n<h2>Version History</h2>\n<dl>\n<dt>1.1.1</dt>\n<dd><ul>\n<li>Remove extra print, just a leftover</li>\n</ul>\n</dd>\n<dt>1.1.0</dt>\n<dd><ul>\n<li>Only allow https and ftp URIs. This prevents from failing on mailto:\nand <a>file://</a> URIs.</li>\n<li>Add better exception handling to avoid crashing</li>\n<li>Add better timeout and request exception handling</li>\n<li>Fix broken thread management</li>\n<li>Remove stupid double-requests</li>\n<li>Several small fixes</li>\n</ul>\n</dd>\n<dt>1.0.2</dt>\n<dd><ul>\n<li>Updated repo location</li>\n<li>Moved from distutils to setuptools</li>\n</ul>\n</dd>\n<dt>1.0.1</dt>\n<dd><ul>\n<li>Version bump</li>\n</ul>\n</dd>\n<dt>1.0</dt>\n<dd><ul>\n<li>Initial release</li>\n</ul>\n</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 796125, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "a97181fa922602f7d6534134c4f95888", "sha256": "bce26e269e1378ad661645d020a5a944a8b0d4d87e5257fed84b8ac7937857d7"}, "downloads": -1, "filename": "pdf-link-checker-1.0.tar.gz", "has_sig": false, "md5_digest": "a97181fa922602f7d6534134c4f95888", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6004, "upload_time": "2013-04-12T12:02:19", "upload_time_iso_8601": "2013-04-12T12:02:19.501311Z", "url": "https://files.pythonhosted.org/packages/49/37/61e82f8919caa69b67d993b1d75f151eda26eb1200b55be91abc276a26d5/pdf-link-checker-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "889bd17a6ad46bbd5193419cb9169af8", "sha256": "9ba19106f6b3ada1aecc0003c21962e7ac29a3a209664f6412b8d2d587e80bff"}, "downloads": -1, "filename": "pdf-link-checker-1.0.1.tar.gz", "has_sig": false, "md5_digest": "889bd17a6ad46bbd5193419cb9169af8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6136, "upload_time": "2013-04-12T13:31:01", "upload_time_iso_8601": "2013-04-12T13:31:01.564571Z", "url": "https://files.pythonhosted.org/packages/1d/71/a2e9d050b53100c2f9167890be2edbc871acdae2953f4db7d1513b1dff74/pdf-link-checker-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "bf868b1e918cd5a96d75fa921ab5c422", "sha256": "a27bb83456d9625854dcae8f5e0b94e97be99a3534995c7cf61c931e1aa6b472"}, "downloads": -1, "filename": "pdf-link-checker-1.0.2.tar.gz", "has_sig": false, "md5_digest": "bf868b1e918cd5a96d75fa921ab5c422", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6826, "upload_time": "2013-05-03T15:23:53", "upload_time_iso_8601": "2013-05-03T15:23:53.103019Z", "url": "https://files.pythonhosted.org/packages/96/82/5ef7047a0b0f41a128a2c22f1890e09d6a531bce299e4cb0aabfadb1829e/pdf-link-checker-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "08ed346a1d92186a49cf39b67466a5e8", "sha256": "2944b8cd6db37304d56f9c940ea6c00e08c606f5ad0ffa202816ee3008364679"}, "downloads": -1, "filename": "pdf-link-checker-1.1.0.tar.gz", "has_sig": false, "md5_digest": "08ed346a1d92186a49cf39b67466a5e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7095, "upload_time": "2013-05-06T16:45:15", "upload_time_iso_8601": "2013-05-06T16:45:15.797012Z", "url": "https://files.pythonhosted.org/packages/84/63/8f8c38426b80afa5b39e1d962c0a5b3ed7dfbb7b7c9ab51d2de4c6d78165/pdf-link-checker-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "b0364f365dc9d514d6236aa7301bf68a", "sha256": "525bcc512a076e4e3961c2a931b614321eb4d6028ff7a5965c2afed215499d24"}, "downloads": -1, "filename": "pdf-link-checker-1.1.1.tar.gz", "has_sig": false, "md5_digest": "b0364f365dc9d514d6236aa7301bf68a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7104, "upload_time": "2013-05-06T16:54:55", "upload_time_iso_8601": "2013-05-06T16:54:55.431446Z", "url": "https://files.pythonhosted.org/packages/d9/0a/e4f65923861a6710828ad3d9b5bab5a7cdfed4714131fa2d84b0fef73bda/pdf-link-checker-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b0364f365dc9d514d6236aa7301bf68a", "sha256": "525bcc512a076e4e3961c2a931b614321eb4d6028ff7a5965c2afed215499d24"}, "downloads": -1, "filename": "pdf-link-checker-1.1.1.tar.gz", "has_sig": false, "md5_digest": "b0364f365dc9d514d6236aa7301bf68a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7104, "upload_time": "2013-05-06T16:54:55", "upload_time_iso_8601": "2013-05-06T16:54:55.431446Z", "url": "https://files.pythonhosted.org/packages/d9/0a/e4f65923861a6710828ad3d9b5bab5a7cdfed4714131fa2d84b0fef73bda/pdf-link-checker-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:12 2020"}