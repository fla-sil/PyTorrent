{"info": {"author": "Kirill Vercetti", "author_email": "office@kyzima-spb.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "=====\ndjango-adminlte-full\n=====\n\nThis Django application is port the `AdminLTE Template <https://github.com/almasaeed2010/AdminLTE>`_ for easy integration into Django Framework\n\nQuick start\n-----------\n\n1. Add \"bootstrap3\" and \"adminlte_full\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'bootstrap3',\n        'adminlte_full',\n    ]\n\n2. Include the panels URLconf in your project urls.py like this::\n\n    url(r'^<url_url>/', include('adminlte_full.urls')),\n\nBuilding an HTML menu\n---------------------\n\nThis application offers these elements to ease the construction of the HTML markup expected by AdminLTE to render the sidebar menu:\n\n* A `template tag <adminlte_full/templatetags/adminlte_full.py>`_ named *show_menu*, which is already used by the `base-layout.html template file <adminlte_full/templates/adminlte_full/base-layout.html>`_ so you have to do nothing to render the menu!\n* A `couple of classes <adminlte_full/menu.py>`_: MenuItem and Menu, which handle the inner data structure of the menu hierarchy and are agnostic and neutral about how you decide which items, links and parent-child relationships will be in the final menu\n* A `Django Signal <https://docs.djangoproject.com/en/1.9/topics/signals/>`_ available for you to get a chance to add MenuItem instances to the Menu object created by the *show_menu* tag\n\nA simple real example would be involve some files, like the following ones.\n\n* The URLs patterns file::\n\n    # urls.py\n    from django.conf.urls import url\n    from my_app.views import my_view_1, my_view_2, my_view_3\n    urlpatterns = [\n        url(r'^$', my_view_1, name='index'),\n        url(r'^$', my_view_2, name='view_2'),\n        url(r'^$', my_view_3, name='view_3'),\n    ]\n\n* The views file::\n\n    # views.py\n    from adminlte_full.menu import MenuItem, Menu\n    from django.shortcuts import render\n\n    def my_view_1(request):\n        return render(request, 'my_app/template_1.html')\n\n        def my_view_2(request):\n        return render(request, 'my_app/template_2.html')\n\n    def my_view_3(request):\n        return render(request, 'my_app/template_3.html')\n\n    def my_menuitems_builder(sender, **kwargs):\n        # sender is an instance of Menu class\n        single_menuitem_1 = MenuItem(1, 'Index', 'index')\n        parent_menuitem_2 = MenuItem(2, 'Parent Menu', '#')\n        single_menuitem_3 = MenuItem(3, 'Index', 'view_2')\n        single_menuitem_4 = MenuItem(4, 'Index', 'view_3')\n        parent_menuitem_2.add_child(single_menuitem_3)\n        parent_menuitem_2.add_child(single_menuitem_4)\n        sender.add_item(single_menuitem_1)\n        sender.add_item(parent_menuitem_2)\n\n    Menu.show_signal.connect(my_menuitems_builder)\n\n* The template file::\n\n    {# templates/my_app/template_1.html #}\n    {% extends \"adminlte_full/base-layout.html\" %}\n\n    {% block page_title %}Title One{% endblock %}\n\n    {% block page_content %}\n        <h1>My header one</h1>\n        <p>My content one</p>\n    {% endblock %}", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kyzima-spb/django-adminlte-full", "keywords": null, "license": "Apache License 2.0", "maintainer": null, "maintainer_email": null, "name": "django-adminlte-full", "package_url": "https://pypi.org/project/django-adminlte-full/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-adminlte-full/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/kyzima-spb/django-adminlte-full"}, "release_url": "https://pypi.org/project/django-adminlte-full/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "This Django application is port the AdminLTE Template for easy integration into Django Framework", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            =====<br>django-adminlte-full<br>=====<br><br>This Django application is port the `AdminLTE Template &lt;https://github.com/almasaeed2010/AdminLTE&gt;`_ for easy integration into Django Framework<br><br>Quick start<br>-----------<br><br>1. Add \"bootstrap3\" and \"adminlte_full\" to your INSTALLED_APPS setting like this::<br><br>    INSTALLED_APPS = [<br>        ...<br>        'bootstrap3',<br>        'adminlte_full',<br>    ]<br><br>2. Include the panels URLconf in your project urls.py like this::<br><br>    url(r'^&lt;url_url&gt;/', include('adminlte_full.urls')),<br><br>Building an HTML menu<br>---------------------<br><br>This application offers these elements to ease the construction of the HTML markup expected by AdminLTE to render the sidebar menu:<br><br>* A `template tag &lt;adminlte_full/templatetags/adminlte_full.py&gt;`_ named *show_menu*, which is already used by the `base-layout.html template file &lt;adminlte_full/templates/adminlte_full/base-layout.html&gt;`_ so you have to do nothing to render the menu!<br>* A `couple of classes &lt;adminlte_full/menu.py&gt;`_: MenuItem and Menu, which handle the inner data structure of the menu hierarchy and are agnostic and neutral about how you decide which items, links and parent-child relationships will be in the final menu<br>* A `Django Signal &lt;https://docs.djangoproject.com/en/1.9/topics/signals/&gt;`_ available for you to get a chance to add MenuItem instances to the Menu object created by the *show_menu* tag<br><br>A simple real example would be involve some files, like the following ones.<br><br>* The URLs patterns file::<br><br>    # urls.py<br>    from django.conf.urls import url<br>    from my_app.views import my_view_1, my_view_2, my_view_3<br>    urlpatterns = [<br>        url(r'^$', my_view_1, name='index'),<br>        url(r'^$', my_view_2, name='view_2'),<br>        url(r'^$', my_view_3, name='view_3'),<br>    ]<br><br>* The views file::<br><br>    # views.py<br>    from adminlte_full.menu import MenuItem, Menu<br>    from django.shortcuts import render<br><br>    def my_view_1(request):<br>        return render(request, 'my_app/template_1.html')<br><br>        def my_view_2(request):<br>        return render(request, 'my_app/template_2.html')<br><br>    def my_view_3(request):<br>        return render(request, 'my_app/template_3.html')<br><br>    def my_menuitems_builder(sender, **kwargs):<br>        # sender is an instance of Menu class<br>        single_menuitem_1 = MenuItem(1, 'Index', 'index')<br>        parent_menuitem_2 = MenuItem(2, 'Parent Menu', '#')<br>        single_menuitem_3 = MenuItem(3, 'Index', 'view_2')<br>        single_menuitem_4 = MenuItem(4, 'Index', 'view_3')<br>        parent_menuitem_2.add_child(single_menuitem_3)<br>        parent_menuitem_2.add_child(single_menuitem_4)<br>        sender.add_item(single_menuitem_1)<br>        sender.add_item(parent_menuitem_2)<br><br>    Menu.show_signal.connect(my_menuitems_builder)<br><br>* The template file::<br><br>    {# templates/my_app/template_1.html #}<br>    {% extends \"adminlte_full/base-layout.html\" %}<br><br>    {% block page_title %}Title One{% endblock %}<br><br>    {% block page_content %}<br>        &lt;h1&gt;My header one&lt;/h1&gt;<br>        &lt;p&gt;My content one&lt;/p&gt;<br>    {% endblock %}\n          </div>"}, "last_serial": 2175930, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7e84f491f7d4ac67ac7ea2d6bf20810e", "sha256": "0ed47ae63812bdc6e9576bd675b47975d88ce9432b8f9e9f1f20c85510db485a"}, "downloads": -1, "filename": "django-adminlte-full-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7e84f491f7d4ac67ac7ea2d6bf20810e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5806084, "upload_time": "2016-04-14T22:21:20", "upload_time_iso_8601": "2016-04-14T22:21:20.392979Z", "url": "https://files.pythonhosted.org/packages/e4/62/a11bb73d59677706143f67b0c87c120a5e2a6b7d581b2cdd92ef91434b19/django-adminlte-full-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d3fd2ff6f7f98e51e1a134604fb687d7", "sha256": "1bcee055feabb8ee922bb83d0648dd5aa995a7ed52d380bd0e56a1b471859648"}, "downloads": -1, "filename": "django-adminlte-full-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d3fd2ff6f7f98e51e1a134604fb687d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6439254, "upload_time": "2016-04-18T22:31:25", "upload_time_iso_8601": "2016-04-18T22:31:25.321077Z", "url": "https://files.pythonhosted.org/packages/0f/03/8669fd7bade19dd33d06f278c9b660195f6a568c4cf3d848a54b86ed9021/django-adminlte-full-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "7b3fa0c1fc734de59520ac3909088936", "sha256": "0842670ca351630f0943b4a8fe9aba610b88bac695df71d0826070d5e0ec9c38"}, "downloads": -1, "filename": "django-adminlte-full-0.0.3.tar.gz", "has_sig": false, "md5_digest": "7b3fa0c1fc734de59520ac3909088936", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6441093, "upload_time": "2016-04-20T11:48:07", "upload_time_iso_8601": "2016-04-20T11:48:07.346785Z", "url": "https://files.pythonhosted.org/packages/58/46/4c4268c4c365b27ecac33f73d968a65a8a1d4f3709c81e56813b5d26f7c4/django-adminlte-full-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "b5403e9ff3b1a22d283acf3144496b84", "sha256": "ebf617ae2c7e6f372ed18b240cfac3c323bf890c1b0009d4985e162967efeef0"}, "downloads": -1, "filename": "django-adminlte-full-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b5403e9ff3b1a22d283acf3144496b84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6440151, "upload_time": "2016-04-24T23:33:00", "upload_time_iso_8601": "2016-04-24T23:33:00.329746Z", "url": "https://files.pythonhosted.org/packages/de/a4/77f116b1ac079a91c6bfee3f93ac017f14e7be8c97a38fc8553a968046f1/django-adminlte-full-0.0.4.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "dac566cc428225adcbbcbf3baca27924", "sha256": "1a258a65300ecfdda8f1144a18cd2e659115b0ffe3f6c47b8d3b136e3cfc1120"}, "downloads": -1, "filename": "django-adminlte-full-0.1.0.tar.gz", "has_sig": false, "md5_digest": "dac566cc428225adcbbcbf3baca27924", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6447529, "upload_time": "2016-06-19T16:14:22", "upload_time_iso_8601": "2016-06-19T16:14:22.034755Z", "url": "https://files.pythonhosted.org/packages/ce/36/a59e14c37a71ef23d90755b54ea770f7fdf35abc2dfcf2d7c56451dc4a29/django-adminlte-full-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dac566cc428225adcbbcbf3baca27924", "sha256": "1a258a65300ecfdda8f1144a18cd2e659115b0ffe3f6c47b8d3b136e3cfc1120"}, "downloads": -1, "filename": "django-adminlte-full-0.1.0.tar.gz", "has_sig": false, "md5_digest": "dac566cc428225adcbbcbf3baca27924", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6447529, "upload_time": "2016-06-19T16:14:22", "upload_time_iso_8601": "2016-06-19T16:14:22.034755Z", "url": "https://files.pythonhosted.org/packages/ce/36/a59e14c37a71ef23d90755b54ea770f7fdf35abc2dfcf2d7c56451dc4a29/django-adminlte-full-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:48 2020"}