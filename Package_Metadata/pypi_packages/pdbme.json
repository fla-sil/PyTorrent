{"info": {"author": "\u0141ukasz Mach", "author_email": "maho@pagema.net", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: ISC License (ISCL)", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Programming Language :: Python :: 3.0", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Debuggers"], "description": "# pdbme - remote active debugger based on rpdb\n\nThis is active fork of https://github.com/tamentis/rpdb. \n\nRpdb is a wrapper around pdb that re-routes stdin and stdout to a socket\nhandler. \n\nPdbme is Rpdb, which is active. Which means, that while Rpdb open port and waits until you connect to this port, Pdbme connects to your port. \n\nSo, in other words, you open pdbme-cli tool, ask your app \"pdb me please\" and your app will pdb you :). \n\n## Why active?\n\nRpdb opens debugger pon port (default 4444), but it has many drawbacks. Eg - it cannot be used in mutlithreaded or multiprocessing application. Even in non-parallel app, port can be occupied a little while after closing it and app will break trying to open it again. \n\nCalling your terminal sounds way better way. It's useful when you want to debug app which can break\nsimultaneously more than once in a time, and passive mode will refuse to open\nport 4444 again.\n\nSolution to the problem is:\n\n    # default host is 127.0.0.1 and default port is 4444\n    import pdbme; pdbme.set_trace()\n\nor, in more complex case, eg. when it's running in other host, in your docker, or sth like that\n\n    import pdbme\n    pdbme.set_trace(host='192.168.1.120', port=12345)\n\nYou should have pdbme-cli running on other side of your communication. \n\n### pdbme-cli\n\npdbme-cli is a simple tool, using tmux, tcpwrapper and socat to accept incoming\nconnections and spawn tmux session for each incoming breakpoint. \n\n * tcpwrapper comes from https://cr.yp.to/ucspi-tcp.html (available in many distros and in MacOS brew)\n * socat - http://www.dest-unreach.org/socat/\n\n\nInstallation in CPython (standard Python)\n-----------------------------------------\n\n ~~pip install pdbme~~ (not yet on PyPi)\n\nor\n\n    pip install git+https://github.com/mahomahomaho/pdbme\n\n\nTrigger rpdb with signal\n------------------------\n\n`set_trace()` can be triggered at any time by using the TRAP signal handler.\nThis allows you to debug a running process independantly of a specific failure\nor breakpoint::\n\n    import pdbme\n    pdbme.handle_trap()\n\n    # As with set_trace, you can optionally specify addr and port\n    rpdb.handle_trap(host=\"0.0.0.0\", port=4441)\n\nCalling `handle_trap` will overwrite the existing handler for SIGTRAP if one has\nalready been defined in your application.\n\nAuthor(s)\n---------\n\n\u0141ukasz Mach <maho@pagema.net> - http://pagema.net/\n\nbased on work of rpdb author:\nBertrand Janin <b@janin.com> - http://tamentis.com/ \n\nand rpdbs contributors: (chronological, latest first):\n\n - Cameron Davidson-Pilon - @CamDavidsonPilon\n - Pavel Fux - @fuxpavel\n - Ken Manheimer - @kenmanheimer\n - Steven Willis - @onlynone\n - Jorge Niedbalski R <niedbalski@gmail.com>\n - Cyprien Le Pann\u00e9rer <clepannerer@edd.fr>\n - k4ml <kamal.mustafa@gmail.com>\n - Sean M. Collins <sean@coreitpro.com>\n - Sean Myers <sean.myers@redhat.com>\n\n\n0.0.1 (2019-06-14)\n==================\n - New functionality, new package name, new versioning....\n - dropped some rpdb functionality, \n\n0.1.6 (2015-01-05)\n==================\n\n - Give access to attributes of stdin and stdout (by @fuxpavel).\n - Add rpdb.post_mortem(), similar to pdb.post_mortem() (by @CamDavidsonPilon).\n\n0.1.5 (2014-10-16)\n==================\n\n - Write addr/port to stderr instead of stdout (thanks to @onlynone).\n - Allow for dynamic host port (thanks to @onlynone).\n - Make q/quit do proper cleanup (@kenmanheimer)\n - Benignly disregard repeated rpdb.set_trace() to same port as currently\n   active session (@kenmanheimer)\n - Extend backwards compatibility down to Python 2.5 (@kenmanheimer)\n\n0.1.4 (2014-04-28)\n==================\n\n - Expose the addr, port arguments to the set_trace method (thanks to @niedbalski).\n\n0.1.3 (2013-08-02)\n==================\n\n - Remove a try/finally that seemed to shift the trace location (thanks to k4ml@github).\n\n0.1.2 (2012-01-26)\n==================\n\n - Catch IOError raised by print in initialization, it may not work in some\n   environments (e.g. mod_wsgi). (Menno Smits)\n\n0.1.1 (2010-05-09)\n==================\n\nInitial release.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/mahomahomaho/pdbme", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pdbme", "package_url": "https://pypi.org/project/pdbme/", "platform": "", "project_url": "https://pypi.org/project/pdbme/", "project_urls": {"Homepage": "http://github.com/mahomahomaho/pdbme"}, "release_url": "https://pypi.org/project/pdbme/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "remote pdb which connects to developer", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pdbme - remote active debugger based on rpdb</h1>\n<p>This is active fork of <a href=\"https://github.com/tamentis/rpdb\" rel=\"nofollow\">https://github.com/tamentis/rpdb</a>.</p>\n<p>Rpdb is a wrapper around pdb that re-routes stdin and stdout to a socket\nhandler.</p>\n<p>Pdbme is Rpdb, which is active. Which means, that while Rpdb open port and waits until you connect to this port, Pdbme connects to your port.</p>\n<p>So, in other words, you open pdbme-cli tool, ask your app \"pdb me please\" and your app will pdb you :).</p>\n<h2>Why active?</h2>\n<p>Rpdb opens debugger pon port (default 4444), but it has many drawbacks. Eg - it cannot be used in mutlithreaded or multiprocessing application. Even in non-parallel app, port can be occupied a little while after closing it and app will break trying to open it again.</p>\n<p>Calling your terminal sounds way better way. It's useful when you want to debug app which can break\nsimultaneously more than once in a time, and passive mode will refuse to open\nport 4444 again.</p>\n<p>Solution to the problem is:</p>\n<pre><code># default host is 127.0.0.1 and default port is 4444\nimport pdbme; pdbme.set_trace()\n</code></pre>\n<p>or, in more complex case, eg. when it's running in other host, in your docker, or sth like that</p>\n<pre><code>import pdbme\npdbme.set_trace(host='192.168.1.120', port=12345)\n</code></pre>\n<p>You should have pdbme-cli running on other side of your communication.</p>\n<h3>pdbme-cli</h3>\n<p>pdbme-cli is a simple tool, using tmux, tcpwrapper and socat to accept incoming\nconnections and spawn tmux session for each incoming breakpoint.</p>\n<ul>\n<li>tcpwrapper comes from <a href=\"https://cr.yp.to/ucspi-tcp.html\" rel=\"nofollow\">https://cr.yp.to/ucspi-tcp.html</a> (available in many distros and in MacOS brew)</li>\n<li>socat - <a href=\"http://www.dest-unreach.org/socat/\" rel=\"nofollow\">http://www.dest-unreach.org/socat/</a></li>\n</ul>\n<h2>Installation in CPython (standard Python)</h2>\n<p><del>pip install pdbme</del> (not yet on PyPi)</p>\n<p>or</p>\n<pre><code>pip install git+https://github.com/mahomahomaho/pdbme\n</code></pre>\n<h2>Trigger rpdb with signal</h2>\n<p><code>set_trace()</code> can be triggered at any time by using the TRAP signal handler.\nThis allows you to debug a running process independantly of a specific failure\nor breakpoint::</p>\n<pre><code>import pdbme\npdbme.handle_trap()\n\n# As with set_trace, you can optionally specify addr and port\nrpdb.handle_trap(host=\"0.0.0.0\", port=4441)\n</code></pre>\n<p>Calling <code>handle_trap</code> will overwrite the existing handler for SIGTRAP if one has\nalready been defined in your application.</p>\n<h2>Author(s)</h2>\n<p>\u0141ukasz Mach <a href=\"mailto:maho@pagema.net\">maho@pagema.net</a> - <a href=\"http://pagema.net/\" rel=\"nofollow\">http://pagema.net/</a></p>\n<p>based on work of rpdb author:\nBertrand Janin <a href=\"mailto:b@janin.com\">b@janin.com</a> - <a href=\"http://tamentis.com/\" rel=\"nofollow\">http://tamentis.com/</a></p>\n<p>and rpdbs contributors: (chronological, latest first):</p>\n<ul>\n<li>Cameron Davidson-Pilon - @CamDavidsonPilon</li>\n<li>Pavel Fux - @fuxpavel</li>\n<li>Ken Manheimer - @kenmanheimer</li>\n<li>Steven Willis - @onlynone</li>\n<li>Jorge Niedbalski R <a href=\"mailto:niedbalski@gmail.com\">niedbalski@gmail.com</a></li>\n<li>Cyprien Le Pann\u00e9rer <a href=\"mailto:clepannerer@edd.fr\">clepannerer@edd.fr</a></li>\n<li>k4ml <a href=\"mailto:kamal.mustafa@gmail.com\">kamal.mustafa@gmail.com</a></li>\n<li>Sean M. Collins <a href=\"mailto:sean@coreitpro.com\">sean@coreitpro.com</a></li>\n<li>Sean Myers <a href=\"mailto:sean.myers@redhat.com\">sean.myers@redhat.com</a></li>\n</ul>\n<h1>0.0.1 (2019-06-14)</h1>\n<ul>\n<li>New functionality, new package name, new versioning....</li>\n<li>dropped some rpdb functionality,</li>\n</ul>\n<h1>0.1.6 (2015-01-05)</h1>\n<ul>\n<li>Give access to attributes of stdin and stdout (by @fuxpavel).</li>\n<li>Add rpdb.post_mortem(), similar to pdb.post_mortem() (by @CamDavidsonPilon).</li>\n</ul>\n<h1>0.1.5 (2014-10-16)</h1>\n<ul>\n<li>Write addr/port to stderr instead of stdout (thanks to @onlynone).</li>\n<li>Allow for dynamic host port (thanks to @onlynone).</li>\n<li>Make q/quit do proper cleanup (@kenmanheimer)</li>\n<li>Benignly disregard repeated rpdb.set_trace() to same port as currently\nactive session (@kenmanheimer)</li>\n<li>Extend backwards compatibility down to Python 2.5 (@kenmanheimer)</li>\n</ul>\n<h1>0.1.4 (2014-04-28)</h1>\n<ul>\n<li>Expose the addr, port arguments to the set_trace method (thanks to @niedbalski).</li>\n</ul>\n<h1>0.1.3 (2013-08-02)</h1>\n<ul>\n<li>Remove a try/finally that seemed to shift the trace location (thanks to k4ml@github).</li>\n</ul>\n<h1>0.1.2 (2012-01-26)</h1>\n<ul>\n<li>Catch IOError raised by print in initialization, it may not work in some\nenvironments (e.g. mod_wsgi). (Menno Smits)</li>\n</ul>\n<h1>0.1.1 (2010-05-09)</h1>\n<p>Initial release.</p>\n\n          </div>"}, "last_serial": 5409781, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4dd501daea97e0e5fffa0719e095f3e7", "sha256": "fdbdd47cea5b435a3136c46df63badb18c75be848ec41488fcf1e036c97cef9f"}, "downloads": -1, "filename": "pdbme-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4dd501daea97e0e5fffa0719e095f3e7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8073, "upload_time": "2019-06-17T11:48:42", "upload_time_iso_8601": "2019-06-17T11:48:42.078431Z", "url": "https://files.pythonhosted.org/packages/30/1e/f64ef443a8e3d87ee994e3e04c3f1d1c268ac387d5456215ca781b3975a6/pdbme-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00c3cd761870bfd025488312ff4f895a", "sha256": "484fef178894c51aeb47aa04214cc5bad6d77174aba4c08ae295e7fb756a161b"}, "downloads": -1, "filename": "pdbme-0.0.1.tar.gz", "has_sig": false, "md5_digest": "00c3cd761870bfd025488312ff4f895a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6348, "upload_time": "2019-06-17T11:48:44", "upload_time_iso_8601": "2019-06-17T11:48:44.417182Z", "url": "https://files.pythonhosted.org/packages/b8/bf/b1ae78a94943048243c919a0a30cf32fe8d853c8657236c70ab5c262be13/pdbme-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4dd501daea97e0e5fffa0719e095f3e7", "sha256": "fdbdd47cea5b435a3136c46df63badb18c75be848ec41488fcf1e036c97cef9f"}, "downloads": -1, "filename": "pdbme-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4dd501daea97e0e5fffa0719e095f3e7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8073, "upload_time": "2019-06-17T11:48:42", "upload_time_iso_8601": "2019-06-17T11:48:42.078431Z", "url": "https://files.pythonhosted.org/packages/30/1e/f64ef443a8e3d87ee994e3e04c3f1d1c268ac387d5456215ca781b3975a6/pdbme-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00c3cd761870bfd025488312ff4f895a", "sha256": "484fef178894c51aeb47aa04214cc5bad6d77174aba4c08ae295e7fb756a161b"}, "downloads": -1, "filename": "pdbme-0.0.1.tar.gz", "has_sig": false, "md5_digest": "00c3cd761870bfd025488312ff4f895a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6348, "upload_time": "2019-06-17T11:48:44", "upload_time_iso_8601": "2019-06-17T11:48:44.417182Z", "url": "https://files.pythonhosted.org/packages/b8/bf/b1ae78a94943048243c919a0a30cf32fe8d853c8657236c70ab5c262be13/pdbme-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:20 2020"}