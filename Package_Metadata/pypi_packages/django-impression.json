{"info": {"author": "Gregory N. Schmit", "author_email": "schmitgreg@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "Impression - The CMS For Email\n##############################\n\n.. image:: https://travis-ci.org/gregschmit/django-impression.svg?branch=master\n    :alt: TravisCI\n    :target: https://travis-ci.org/gregschmit/django-impression\n\n.. image:: https://img.shields.io/pypi/v/django-impression\n    :alt: PyPI\n    :target: https://pypi.org/project/django-impression/\n\n.. image:: https://coveralls.io/repos/github/gregschmit/django-impression/badge.svg?branch=master\n    :alt: Coverage\n    :target: https://coveralls.io/github/gregschmit/django-impression?branch=master\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :alt: Code Style\n    :target: https://github.com/ambv/black\n\nSource: https://github.com/gregschmit/django-impression\n\nPyPI: https://pypi.org/project/django-impression/\n\nDjango Impression is a reusable Django app that provides you with the ability to edit\nyour email templates in a web interface and configure distribution lists if you don't\nhave them configured on your email provider. It also implements a RESTful API so any\nother web applications you have in your ecosystem can send consistent-looking emails.\n\n**The Problem**: Email lists and templates for Django projects and other web\napplications are often kept in source control, requiring developers to edit code when,\nfor example, your marketing guru wants to tweak the layout of one of your emails. They\nmay not want to sift through your backend code to make such changes. Even if they do,\nyou may want to have your email templates accessible over an API so all of your\norganization's email templates can be centralized.\n\n**The Solution**: Impression provides the ability to separate your email template system\nfrom your source code, by building email templates as model instances. You can still use\nfile-based templates if you would like, and the model templates can even\n``{% extend %}`` those file-based templates. This allows email templates to be modified\nin the admin UI by a wider variety of users; not just those who have access to your\nsource code. Impression also exposes a REST API endpoint for sending emails from other\nweb applications, with easy-to-configure access controls. This makes it easier to\ncentralize your email brand and keep things looking awesome and consistent. You can run\nImpression in an existing project, or you can run it standalone by itself (e.g.,\n``impression.example.com``).\n\nKey Features:\n\n- Email templates are editable by users in the UI.\n- API endpoints allow remote systems to send emails.\n- Impression is protected by a system of semi-trust, where you can apply rate limits on\n  the systems which use Impression, and control the content and format of emails.\n\n\nArchitectures\n#############\n\nThere are a few ways to integrate Impression into an environment:\n\n- **Standalone:** Impression can be run from a system to serve RESTful requests from\n  your web applications. As long as you use HTTPS, this can be done across the\n  internet. Here are some use cases:\n\n  - You have more than 1 web application operating in your ecosystem and want to\n    centralize your email templating within your organization.\n  - You have a fleet of systems in the hands of customers (semi-trusted users) to whom\n    you cannot provide your SMTP details. You want them to be able to request emails to\n    be sent (e.g., for notification systems).\n\n- **Integrated:** Impression can be mixed in with an existing Django project. A use\n  case could be:\n\n  - A company has a couple people in the marketing department who are wizards with the\n    Bootstrap Email framework; they don't need to have access to the source and they\n    really want to quickly test and push out new designs. Using Impression along with\n    the sleek template editing UI, powered by `CodeMirror <https://codemirror.net>`_,\n    they can quickly develop email templates and deploy them without involving the\n    development team.\n\n\nInstallation\n############\n\n.. code-block:: shell\n\n    $ pip install django-impression\n\n\nConfiguration\n*************\n\nWhether you are going to run Impression from your existing project locally, or whether\nyou are going to integrate your existing project with a standalone Impression system\naffects how you should configure\nthe settings.\n\nThere are 2 configuration schemes:\n\n- Local: You wish to send emails from a project that has Impression integrated into it.\n- Remote: You wish to send email remotely via the REST API of an Impression instance\n  running in another project. (For our purposes, \"Remote\" means on another system, or\n  even another project running on the same system, in which case you'll use localhost.)\n\nLocal\n-----\n\nAdd ``impression`` to your ``INSTALLED_APPS``, run migrations, and configure some\nsettings:\n\n.. code-block:: python\n\n    # This should be your *actual* email backend.\n    IMPRESSION_EMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\n\n    # this is configured to pass emails to Impression.\n    EMAIL_BACKEND = \"impression.backends.LocalEmailBackend\"\n\nTo hook the API endpoint ``/api/send_message`` into your project for remote systems,\njust add this entry to your URL dispatcher's ``urlpatterns`` list:\n\n.. code-block:: python\n\n    path(\"api/\", include(\"impression.api.urls\")),  # includes the send_message endpoint\n\n\nRemote\n------\n\nFor remote systems that will talk to your Impression server over the REST API, use the\n`Impression Client <https://github.com/gregschmit/django-impression-client>`_.\n\n\nInstalling as Standalone System\n*******************************\n\nIt's a very good idea to setup a dedicated Django application on a server for your\norganization (then all of your apps can use that system remotely).\n\nTo make things really easy, if you have a Docker or Virtual environment, or just wish to\nspin Impression up on it's own server, you can check out\n`ImpressionOS <https://github.com/gregschmit/impression_os>`_ to deploy Impression as\na standalone system. That project provides the ability to configure everything about the\nsystem in the Admin UI, and even configure Let's Encrypt certificates to ensure your\nemail API is secure.\n\n\nModel Configuration\n###################\n\nTo get familiar with Impression models, here is a quick guide on which models to visit\nfirst, in order:\n\n1) Email addresses (the ``EmailAddress`` model): You should create email addresses for\n   the email that you will be sending from.\n2) Services (the ``Service`` model): You should create at least one \"default\" service.\n   If you permit users to specify the emails that they send to (only for trusted\n   systems!), then those emails will be created on the fly when those messages are\n   created.\n3) Templates (the ``Template`` model): Go ahead and create a template that adds a\n   footer. Ensure you add ``{{ body }}`` somewhere in the body, and ``{{ subject }}`` in\n   the subject and the subject/body of the email request will be inserted there. You can\n   then hook it into your Service by editing your service and selecting it under the\n   ``template`` field. If you're feeling adventurous, you can use an email template from\n   `Bootstrap <https://bootstrapemail.com>`_ or\n   `Foundation <https://foundation.zurb.com/emails.html>`_.\n4) Now you can either send email with Django's ``send_mail``, and remote systems can\n   use ``send_mail`` to reach your Impression server, provided they have followed the\n   configuration instructions above.\n\n\nTests\n#####\n\n.. code-block:: shell\n\n    $ python manage.py test\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gregschmit/django-impression", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-impression", "package_url": "https://pypi.org/project/django-impression/", "platform": "", "project_url": "https://pypi.org/project/django-impression/", "project_urls": {"Homepage": "https://github.com/gregschmit/django-impression"}, "release_url": "https://pypi.org/project/django-impression/0.5.0/", "requires_dist": ["Django (>=2)", "djangorestframework (>=3)", "django-impression-client", "beautifulsoup4 (>=4.4)"], "requires_python": "", "summary": "CMS for email; admin UI, API, and permissions for email templates.", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"impression-the-cms-for-email\">\n<h2>Impression - The CMS For Email</h2>\n<a href=\"https://travis-ci.org/gregschmit/django-impression\" rel=\"nofollow\"><img alt=\"TravisCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/26307e33680abe5c214078235308d1cf10256670/68747470733a2f2f7472617669732d63692e6f72672f677265677363686d69742f646a616e676f2d696d7072657373696f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/django-impression/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72c0858c5ac9c606621f586dfc20214bceb3051c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d696d7072657373696f6e\"></a>\n<a href=\"https://coveralls.io/github/gregschmit/django-impression?branch=master\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8fd6b7a587758a5cb3181adb663cd2120e828f95/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f677265677363686d69742f646a616e676f2d696d7072657373696f6e2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code Style\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<p>Source: <a href=\"https://github.com/gregschmit/django-impression\" rel=\"nofollow\">https://github.com/gregschmit/django-impression</a></p>\n<p>PyPI: <a href=\"https://pypi.org/project/django-impression/\" rel=\"nofollow\">https://pypi.org/project/django-impression/</a></p>\n<p>Django Impression is a reusable Django app that provides you with the ability to edit\nyour email templates in a web interface and configure distribution lists if you don\u2019t\nhave them configured on your email provider. It also implements a RESTful API so any\nother web applications you have in your ecosystem can send consistent-looking emails.</p>\n<p><strong>The Problem</strong>: Email lists and templates for Django projects and other web\napplications are often kept in source control, requiring developers to edit code when,\nfor example, your marketing guru wants to tweak the layout of one of your emails. They\nmay not want to sift through your backend code to make such changes. Even if they do,\nyou may want to have your email templates accessible over an API so all of your\norganization\u2019s email templates can be centralized.</p>\n<p><strong>The Solution</strong>: Impression provides the ability to separate your email template system\nfrom your source code, by building email templates as model instances. You can still use\nfile-based templates if you would like, and the model templates can even\n<tt>{% extend %}</tt> those file-based templates. This allows email templates to be modified\nin the admin UI by a wider variety of users; not just those who have access to your\nsource code. Impression also exposes a REST API endpoint for sending emails from other\nweb applications, with easy-to-configure access controls. This makes it easier to\ncentralize your email brand and keep things looking awesome and consistent. You can run\nImpression in an existing project, or you can run it standalone by itself (e.g.,\n<tt>impression.example.com</tt>).</p>\n<p>Key Features:</p>\n<ul>\n<li>Email templates are editable by users in the UI.</li>\n<li>API endpoints allow remote systems to send emails.</li>\n<li>Impression is protected by a system of semi-trust, where you can apply rate limits on\nthe systems which use Impression, and control the content and format of emails.</li>\n</ul>\n</div>\n<div id=\"architectures\">\n<h2>Architectures</h2>\n<p>There are a few ways to integrate Impression into an environment:</p>\n<ul>\n<li><strong>Standalone:</strong> Impression can be run from a system to serve RESTful requests from\nyour web applications. As long as you use HTTPS, this can be done across the\ninternet. Here are some use cases:<ul>\n<li>You have more than 1 web application operating in your ecosystem and want to\ncentralize your email templating within your organization.</li>\n<li>You have a fleet of systems in the hands of customers (semi-trusted users) to whom\nyou cannot provide your SMTP details. You want them to be able to request emails to\nbe sent (e.g., for notification systems).</li>\n</ul>\n</li>\n<li><strong>Integrated:</strong> Impression can be mixed in with an existing Django project. A use\ncase could be:<ul>\n<li>A company has a couple people in the marketing department who are wizards with the\nBootstrap Email framework; they don\u2019t need to have access to the source and they\nreally want to quickly test and push out new designs. Using Impression along with\nthe sleek template editing UI, powered by <a href=\"https://codemirror.net\" rel=\"nofollow\">CodeMirror</a>,\nthey can quickly develop email templates and deploy them without involving the\ndevelopment team.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install django-impression\n</pre>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>Whether you are going to run Impression from your existing project locally, or whether\nyou are going to integrate your existing project with a standalone Impression system\naffects how you should configure\nthe settings.</p>\n<p>There are 2 configuration schemes:</p>\n<ul>\n<li>Local: You wish to send emails from a project that has Impression integrated into it.</li>\n<li>Remote: You wish to send email remotely via the REST API of an Impression instance\nrunning in another project. (For our purposes, \u201cRemote\u201d means on another system, or\neven another project running on the same system, in which case you\u2019ll use localhost.)</li>\n</ul>\n<div id=\"local\">\n<h4>Local</h4>\n<p>Add <tt>impression</tt> to your <tt>INSTALLED_APPS</tt>, run migrations, and configure some\nsettings:</p>\n<pre><span class=\"c1\"># This should be your *actual* email backend.</span>\n<span class=\"n\">IMPRESSION_EMAIL_BACKEND</span> <span class=\"o\">=</span> <span class=\"s2\">\"django.core.mail.backends.smtp.EmailBackend\"</span>\n\n<span class=\"c1\"># this is configured to pass emails to Impression.</span>\n<span class=\"n\">EMAIL_BACKEND</span> <span class=\"o\">=</span> <span class=\"s2\">\"impression.backends.LocalEmailBackend\"</span>\n</pre>\n<p>To hook the API endpoint <tt>/api/send_message</tt> into your project for remote systems,\njust add this entry to your URL dispatcher\u2019s <tt>urlpatterns</tt> list:</p>\n<pre><span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">\"api/\"</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s2\">\"impression.api.urls\"</span><span class=\"p\">)),</span>  <span class=\"c1\"># includes the send_message endpoint</span>\n</pre>\n</div>\n<div id=\"remote\">\n<h4>Remote</h4>\n<p>For remote systems that will talk to your Impression server over the REST API, use the\n<a href=\"https://github.com/gregschmit/django-impression-client\" rel=\"nofollow\">Impression Client</a>.</p>\n</div>\n</div>\n<div id=\"installing-as-standalone-system\">\n<h3>Installing as Standalone System</h3>\n<p>It\u2019s a very good idea to setup a dedicated Django application on a server for your\norganization (then all of your apps can use that system remotely).</p>\n<p>To make things really easy, if you have a Docker or Virtual environment, or just wish to\nspin Impression up on it\u2019s own server, you can check out\n<a href=\"https://github.com/gregschmit/impression_os\" rel=\"nofollow\">ImpressionOS</a> to deploy Impression as\na standalone system. That project provides the ability to configure everything about the\nsystem in the Admin UI, and even configure Let\u2019s Encrypt certificates to ensure your\nemail API is secure.</p>\n</div>\n</div>\n<div id=\"model-configuration\">\n<h2>Model Configuration</h2>\n<p>To get familiar with Impression models, here is a quick guide on which models to visit\nfirst, in order:</p>\n<ol>\n<li>Email addresses (the <tt>EmailAddress</tt> model): You should create email addresses for\nthe email that you will be sending from.</li>\n<li>Services (the <tt>Service</tt> model): You should create at least one \u201cdefault\u201d service.\nIf you permit users to specify the emails that they send to (only for trusted\nsystems!), then those emails will be created on the fly when those messages are\ncreated.</li>\n<li>Templates (the <tt>Template</tt> model): Go ahead and create a template that adds a\nfooter. Ensure you add <tt>{{ body }}</tt> somewhere in the body, and <tt>{{ subject }}</tt> in\nthe subject and the subject/body of the email request will be inserted there. You can\nthen hook it into your Service by editing your service and selecting it under the\n<tt>template</tt> field. If you\u2019re feeling adventurous, you can use an email template from\n<a href=\"https://bootstrapemail.com\" rel=\"nofollow\">Bootstrap</a> or\n<a href=\"https://foundation.zurb.com/emails.html\" rel=\"nofollow\">Foundation</a>.</li>\n<li>Now you can either send email with Django\u2019s <tt>send_mail</tt>, and remote systems can\nuse <tt>send_mail</tt> to reach your Impression server, provided they have followed the\nconfiguration instructions above.</li>\n</ol>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<pre>$ python manage.py <span class=\"nb\">test</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6370242, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "1694765dfdd7a3d2a6b59dc729821b92", "sha256": "2a677ab00e1662b7ae37d3ab7325ffa57e0aa102dc82966f1b16d383abb0a9e9"}, "downloads": -1, "filename": "django_impression-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1694765dfdd7a3d2a6b59dc729821b92", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28972, "upload_time": "2019-11-09T23:28:47", "upload_time_iso_8601": "2019-11-09T23:28:47.026130Z", "url": "https://files.pythonhosted.org/packages/ba/47/9e68a1433af3786978013913a01ee9892ac58164f41a75fc7581e1665708/django_impression-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "46fd1251d4652ec8579feb3d8737dba4", "sha256": "8e01ce71f10479b18d6fd3fa897656c0cc1a45355769cc92d98d09b59ae652e7"}, "downloads": -1, "filename": "django-impression-0.1.0.tar.gz", "has_sig": false, "md5_digest": "46fd1251d4652ec8579feb3d8737dba4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18612, "upload_time": "2019-11-09T23:28:49", "upload_time_iso_8601": "2019-11-09T23:28:49.346736Z", "url": "https://files.pythonhosted.org/packages/e0/38/c4e4feedc2bfd1f39a1e2a9e24d216328331b21d53ef786738148e22a028/django-impression-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "5deafee2b1e48605187068603cd78f6f", "sha256": "7370218b3c383585c9bff750b072f2ee410e566327457d6c211adee7b68ce0d0"}, "downloads": -1, "filename": "django_impression-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5deafee2b1e48605187068603cd78f6f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25092, "upload_time": "2019-11-16T23:48:49", "upload_time_iso_8601": "2019-11-16T23:48:49.140448Z", "url": "https://files.pythonhosted.org/packages/ef/8a/4067b59e8e7a8499764a31469532af2c9c433cf82c38a2e197be25a77b5c/django_impression-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "918c52787cc83a525b712070d409f5ba", "sha256": "ccfa79197b3b15c1c75de3ca63be39c8c9bdc666ee5ee8b239229d020c24d1dc"}, "downloads": -1, "filename": "django-impression-0.1.1.tar.gz", "has_sig": false, "md5_digest": "918c52787cc83a525b712070d409f5ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17375, "upload_time": "2019-11-16T23:48:50", "upload_time_iso_8601": "2019-11-16T23:48:50.274373Z", "url": "https://files.pythonhosted.org/packages/39/5b/fcbfed7cf9a4c4c6bfa1ef7f315997c4047155e6e44670d66d7a0bbc7826/django-impression-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "587f19e71463580fdea19b92d379c089", "sha256": "a5daf6ee4c592caa6fa885c7f9a718090a1508d883c1bfd2c331cc7472837cc9"}, "downloads": -1, "filename": "django_impression-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "587f19e71463580fdea19b92d379c089", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25102, "upload_time": "2019-11-17T22:33:27", "upload_time_iso_8601": "2019-11-17T22:33:27.328621Z", "url": "https://files.pythonhosted.org/packages/77/ac/938857fd41ec2352b9b4108c3ad83a223b5777fae6c252cf8d21e8a2443b/django_impression-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22e8e01c2042dfca495563ab8d620689", "sha256": "31b5bdccb3a6f56747d2664e0d8f9cbd0c9f7a12e01332b3f35e564ebd00f509"}, "downloads": -1, "filename": "django-impression-0.2.0.tar.gz", "has_sig": false, "md5_digest": "22e8e01c2042dfca495563ab8d620689", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17368, "upload_time": "2019-11-17T22:33:28", "upload_time_iso_8601": "2019-11-17T22:33:28.958658Z", "url": "https://files.pythonhosted.org/packages/c3/68/e4c420c965e3bb3e913b27a6463e01c60b608f0e8b3124dbaacbf1624584/django-impression-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "9bb5625a592ab10a813857a46a2875ad", "sha256": "e844201066fbe3429d19379a25932fb1b38296d947d014c85a1b40e675efcfd3"}, "downloads": -1, "filename": "django_impression-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9bb5625a592ab10a813857a46a2875ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25537, "upload_time": "2019-11-17T23:31:01", "upload_time_iso_8601": "2019-11-17T23:31:01.003385Z", "url": "https://files.pythonhosted.org/packages/ea/38/97094c1665f6ecb5f054f5adb2f20dc2f981372ca0eb799eba7eed4fc113/django_impression-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb32b9c5ae37aea230e005c6b8acb9bc", "sha256": "ad182a25bdc8b73681c82daf35696a8283f8685b53b75e752e426aced443a140"}, "downloads": -1, "filename": "django-impression-0.2.1.tar.gz", "has_sig": false, "md5_digest": "cb32b9c5ae37aea230e005c6b8acb9bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17813, "upload_time": "2019-11-17T23:31:02", "upload_time_iso_8601": "2019-11-17T23:31:02.277021Z", "url": "https://files.pythonhosted.org/packages/c0/2e/b58b5063c7375f1949adb2493314361ae964d9e17dcaa5624a707a6f9945/django-impression-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "2ab6ef44da359f51917638deaf1abd63", "sha256": "53e1bba62b7ffaf8cea7912e6537b05446d1a2f5503cbe164e81591f57879bd4"}, "downloads": -1, "filename": "django_impression-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2ab6ef44da359f51917638deaf1abd63", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28322, "upload_time": "2019-12-14T23:35:44", "upload_time_iso_8601": "2019-12-14T23:35:44.386054Z", "url": "https://files.pythonhosted.org/packages/18/92/72e3767329c91e2bb6f07e7518adcc6a73cd94b45326bcf8d572ac2237f9/django_impression-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9104f6150a436296cff003c41436581c", "sha256": "de68d85da96cc1338c29bb0e2d5224f1d7044c322a8a0f64e0f8519f5ea2e23f"}, "downloads": -1, "filename": "django-impression-0.3.0.tar.gz", "has_sig": false, "md5_digest": "9104f6150a436296cff003c41436581c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23089, "upload_time": "2019-12-14T23:35:46", "upload_time_iso_8601": "2019-12-14T23:35:46.111611Z", "url": "https://files.pythonhosted.org/packages/f3/76/a3a3d96eab117a94d696774fa5b096c8b90b379cf9f31a76f070265846fe/django-impression-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "45877814e98f5ddd57b290b4aff51baf", "sha256": "45dac82ff6f0d9b28a76d6a18f0957ba8b1dbe5155db980b1807687b9d259e47"}, "downloads": -1, "filename": "django_impression-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "45877814e98f5ddd57b290b4aff51baf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34701, "upload_time": "2019-12-20T03:11:52", "upload_time_iso_8601": "2019-12-20T03:11:52.638240Z", "url": "https://files.pythonhosted.org/packages/5d/70/7648d7602b54b860e8890172c0457a42b5744b923cef95997f2f0996a71e/django_impression-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1b047e6555906dc2eca62f9f58ce234", "sha256": "b69dcc472e51d14df9bfefd3ecb3719d446c546385e62abda26fc6d544f6f13d"}, "downloads": -1, "filename": "django-impression-0.4.0.tar.gz", "has_sig": false, "md5_digest": "a1b047e6555906dc2eca62f9f58ce234", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26283, "upload_time": "2019-12-20T03:11:54", "upload_time_iso_8601": "2019-12-20T03:11:54.342131Z", "url": "https://files.pythonhosted.org/packages/6f/57/3cddd8e43c2fa109656638f5b8226e3c487158d94727d7b2a2735d1452ac/django-impression-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "84438f3cff7c7a9088417ee977035fb9", "sha256": "6ccfd8704e420aba4998e43da13206112ac76e498ea5504ffadbf383b26db162"}, "downloads": -1, "filename": "django_impression-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "84438f3cff7c7a9088417ee977035fb9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31783, "upload_time": "2019-12-29T02:30:52", "upload_time_iso_8601": "2019-12-29T02:30:52.389904Z", "url": "https://files.pythonhosted.org/packages/a2/93/0303bc1211e45f8b0b691f2ce39221c77ce0fa2989e3c330e5e603e0020d/django_impression-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73a699b0bb203da890a85f231b1a4cba", "sha256": "1f8bcb08e3e98e66e5efc7bb9acc0f4a7214e3f4603313cdeb9fa4b156d93e62"}, "downloads": -1, "filename": "django-impression-0.5.0.tar.gz", "has_sig": false, "md5_digest": "73a699b0bb203da890a85f231b1a4cba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25204, "upload_time": "2019-12-29T02:30:54", "upload_time_iso_8601": "2019-12-29T02:30:54.193547Z", "url": "https://files.pythonhosted.org/packages/f8/4d/76f9234819ec1392a4215c92d0ac0a74e51fe42276c1cc1aede3f1555404/django-impression-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "84438f3cff7c7a9088417ee977035fb9", "sha256": "6ccfd8704e420aba4998e43da13206112ac76e498ea5504ffadbf383b26db162"}, "downloads": -1, "filename": "django_impression-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "84438f3cff7c7a9088417ee977035fb9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31783, "upload_time": "2019-12-29T02:30:52", "upload_time_iso_8601": "2019-12-29T02:30:52.389904Z", "url": "https://files.pythonhosted.org/packages/a2/93/0303bc1211e45f8b0b691f2ce39221c77ce0fa2989e3c330e5e603e0020d/django_impression-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73a699b0bb203da890a85f231b1a4cba", "sha256": "1f8bcb08e3e98e66e5efc7bb9acc0f4a7214e3f4603313cdeb9fa4b156d93e62"}, "downloads": -1, "filename": "django-impression-0.5.0.tar.gz", "has_sig": false, "md5_digest": "73a699b0bb203da890a85f231b1a4cba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25204, "upload_time": "2019-12-29T02:30:54", "upload_time_iso_8601": "2019-12-29T02:30:54.193547Z", "url": "https://files.pythonhosted.org/packages/f8/4d/76f9234819ec1392a4215c92d0ac0a74e51fe42276c1cc1aede3f1555404/django-impression-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:37 2020"}