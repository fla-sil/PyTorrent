{"info": {"author": "Nick Humrich", "author_email": "humrichn@amazon.com", "bugtrack_url": null, "classifiers": [], "description": "======\nEB-CLI\n======\n\nEB Command Line Interface (CLI) is a tool that helps you deploy and manage\nyour AWS Elastic Beanstalk applications and environments. It also\nprovides integration with Git. This file provides a sample walkthrough of EB CLI. To view a list of commands, type:\n\n    eb --help\n\nFor more information about a specific command, type:\n\n    eb {cmd} --help\n\n\nFor detailed information about EB CLI, see `EB Command Line Reference. <http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-reference-eb.html>`__\n\n------------\nInstallation\n------------\n\nYou will need administrator/sudo privileges unless you install into a virtual environment.\nTo install you will first need to install Python and Pip.\nThe most recent version of Python now includes pip.\n\n`To install Python, go here. <https://www.python.org/downloads/>`__\n\nIf you already have Python, but need to install Pip, `go here. <http://pip.readthedocs.org/en/latest/installing.html>`__\n\nAfter you have installed Pip, run the following command:\n\npip install awsebcli\n\n---------------\nGetting Started\n---------------\n\nEB CLI requires you to have AWS security credentials.\nFor procedures to get security credentials, `see the documentation. <http://docs.aws.amazon.com/general/latest/gr/managing-aws-access-keys.html>`__\n\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n1. Create a new directory for your project.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIn Linux/UNIX, type the following:\n    mkdir my-hello-app\n\nIn Windows, type the following:\n\tmd my-hello-app\n\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n2. Create an index.html file for EB CLI to use as your sample application.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    echo \"Hello World\" > index.html\n\nNOTE: In Windows, do not include quotes in the command.\n\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n3. Set up your directory with EB CLI and then answer the questions to configure AWS Elastic Beanstalk.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    eb init\n\nWhen prompted for your AWS security credentials, type your access key ID and secret access key. To answer a question with the default value, press Enter.\n\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4. Create your running environment and deploy the Hello World application.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    eb create\n\nWait for AWS Elastic Beanstalk to finish creating the environment.\nWhen it is done, your application is live in a load-balancing environment.\n\n^^^^^^^^^^^^^^^^^^^^^^^^^\n5. View your application.\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    eb open\n\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n6. Update the sample application to create a new application version to deploy.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nMake a change to your code by typing the following:\n\n   echo \" to you.\" >> index.html\n\nNOTE: In Windows, do not include quotes in the command.\n\nWhen you are ready to launch your new application version, type the following:\n\n   eb deploy\n\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7. View the health of your environment\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    eb health\n\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8. View the updated environment.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    eb open\n\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n9. Shut down your running environment.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    eb terminate\n\nConfirm that this is the environment that you want to terminate by typing the environment name.\n\n^^^^^^^^^^^^^\n10. Clean up.\n^^^^^^^^^^^^^\n\nTo completely remove your application and clean up the local project directory, type the following:\n\n    eb terminate --all\n\nConfirm that this is the application that you want to remove by typing the application name.\n\n---------------\nEB CLI Commands\n---------------\n\nThis section describes some EB CLI 3 commands and why you would use them.\n\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n1. View environment status.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    eb status -v\n\nThe status command will show you the current state of your application. This includes things such as:\n  * Environment Name\n  * Application Version\n  * Solution Stack\n  * Health\n  * Number of running instances\n\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n2. List your running environments.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   eb list\n\nThe list command will show you a list of running environments.\nThe environment with an asterisk next to it is the default environment.\nTo see more detailed information about your environments, type the following to use verbose mode:\n\n   eb list -v\n\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n3. Change your current environment.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nYou can run most commands with any environment by using the following syntax:\n\n    eb {cmd} <environment>\n\nTo change your default environment, type the following:\n\n    eb use [environment_name]\n\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4. Open the AWS Elastic Beanstalk management console.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nTo view your environment in the AWS Management Console, type the following:\n\n    eb console\n\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n5. Change environment variables.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nYou can set environment variables for your running environment at any time by typing the following:\n\n    eb setenv foo=bar\n\nYou can view your environment variables by typing the following:\n\n    eb printenv\n\n---------------------\nUsing EB CLI with Git\n---------------------\n\nEB CLI 3 provides integration with Git. After running \"git clone\" or \"git init\", run the following command:\n\n    eb init\n\nEB CLI 3 will now recognize that your application is set up with Git.\n\nTo use Git with EB CLI 3:\n\n1. Make any change to your code.\n\n2. After you make a change to your code, type the following:\n\n\tgit commit\n\n3. Deploy your updated code.\n\nNow when you run the \"eb deploy\" command, EB CLI will only deploy the code that was under source control.\nMake sure to always commit what you want to deploy.\nEB CLI uses your commit ID and message as the version label and description, respectively.\n\n4. Deploy to production.\n\nWhen you are ready to deploy an updated version of your code, use Git tags.\n\n    git tag -a v1.0 -m \"My version 1.0\"\n\nThe tag will be used for the version label so you always know which version your environment is running on.\nIf you have already deployed this version, EB CLI will deploy that version to your environment instead of uploading a new application version.\n\n5. Use branches.\n\nEB CLI enables you to associate different branches with different branches of your code.\nFor example:\n\n    git checkout master\n\n    eb use prod\n\n    git checkout develop\n\n    eb use dev\n\nNow whenever you switch to a new branch, your default environment will also switch.\n=========\nChangelog\n=========\n\n------------------\n3.5.2-synctree (n/a)\n------------------\n - Fall back to app/env prompt for all commands when there is no local configuration\n - Respect region specified in AWS profile when no other region is supplied\n\n------------------\n3.5.2 (2015-08-26)\n------------------\n- Fix bug in \"eb health\" command preventing it from running.\n\n------------------\n3.5.1 (2015-08-25)\n------------------\n- Fix az column clipping.\n- Unhide labs setup-cwl feature as well as logs --stream.\n- Add pip install command when a new version is available.\n\n------------------\n3.5 (2015-08-11)\n------------------\n- Add command \"eb labs setup-ssl\"\n- Add command \"eb labs cloudwatchlogs-setup\"\n- Change `eb open` to now open https if load balancer http port is OFF\n- Add support for enhanced health with `eb health`\n- Other minor changes\n\n------------------\n3.4.7 (2015-07-28)\n------------------\n- Fix issue with .gitignore being included on deploy\n- Fix issue with streaming unicode events\n\n------------------\n3.4.6 (2015-07-10)\n------------------\n- Fix issue with \"eb labs download\"\n- Fix issue where folders in .ebignore were incorrectly being uploaded.\n\n------------------\n3.4.5 (2015-06-08)\n------------------\n- SSH no longer attempts to open port 22 if a Source restriction is in place\n- Added --force flag to override above behavior\n- SSH errors now show properly with the -o option\n- Environment variables are less strict and can now contain the '=' sign\n\n------------------\n3.4.4 (2015-05-18)\n------------------\n- Changed how Sample Application is handled internally\n\n------------------\n3.4.3 (2015-05-12)\n------------------\n- Fix issue with \"eb config\" when adding new option settings\n- Update golang local container file\n- Fix issue with overwriting docker environment variables during local\n\n------------------\n3.4.2 (2015-05-09)\n------------------\n- Fix issue with installation for eb local files\n\n----------------\n3.4 (2015-05-07)\n----------------\n- Added 'localContainerDefinitions' section for multi-continer docker\n- Multi-container docker containers now correctly read 'environment'\n- Added printenv/setenv commands to eb local\n- t2.micro is now default instance type for accounts with a default vpc\n- add --staged option to eb deploy for deploying git stage rather then commit\n- Fix config file path resolution\n\n------------------\n3.3.2 (2015-04-30)\n------------------\n- Fix \"eb open\" for windows\n\n------------------\n3.3.1 (2015-04-28)\n------------------\n- Fix --force option on \"eb labs cleanup-versions\"\n\n----------------\n3.3 (2015-04-28)\n----------------\n- Added \"local\" commands\n- Added \"eb labs cleanup-versions\" for cleaning up old app versions\n- Added support for an .ebignore file\n- using \"eb terminate --all\" now removes application bundles from s3\n- Add support for branch specific defaults in config.yml\n- Fix interactive vpc bug\n- Fix \"eb open\" race condition\n- Incomplete credentials errors are now more verbose\n\n------------------\n3.2.2 (2015-04-06)\n------------------\n- Fix issue with creating single instance environments\n\n------------------\n3.2.1 (2015-04-02)\n------------------\n- Added warning string for Multi-container permissions on \"create\"\n\n----------------\n3.2 (2015-03-30)\n----------------\n- Added \"platform\" commands\n- Added \"upgrade\" command\n- Added \"abort\" command\n- Added \"labs\" commands\n- Printed events now look nicer\n- Logs and events are automatically paged.\n- Health based rolling updates are now default for new environments.\n\n------------------\n3.1.3 (2015-03-13)\n------------------\n- Added option on create for specifying database version (--database.version)\n\n------------------\n3.1.2 (2015-02-26)\n------------------\n- Fix multithreaded issue on python 3.4.3\n- Fix environment names printing in columns\n- Update botocore to 0.93.0\n\n------------------\n3.1.1 (2015-02-24)\n------------------\n- Fix git issue on windows\n- Support older versions of git\n- Saved Configurations now work with Worker tier\n\n----------------\n3.1 (2015-02-17)\n----------------\n- Editor backup files (file.txt~) no longer included in application zip\n- Added commands for Saved Configurations (eb config --help)\n- Now receive alerts for an outdated cli and outdated environment platform.\n- Deploy now works in subdirectories\n- Config now works in subdirectories\n- Can now specify your own timeout period with \"--timeout x\"\n- Can now specify environment variables on environment create with \"--envvars\"\n- Can now get the latest platform version when you clone an environment. \"eb clone\"\n- Application Bundle uploads now show status\n- Large file uploads are now multi-threaded\n- Added warning on deploy if unstaged git changes exist\n- Can now swap environment CNAME's using \"eb swap\"\n- Exposed --vpc option on create\n- Added --no-verify-ssl option\n- Updated Botocore to 0.88.0\n\n-------------------\n3.0.11 (2015-02-09)\n-------------------\n- Fixed Zipping issue for Windows Containers\n\n-------------------\n3.0.10 (2014-11-24)\n-------------------\n- Fixed parsing error for uploads in a s3 bucket with auto-deletion policy\n- Fixed terminated environment issues\n- No longer uploads application if the application version already exists in s3\n- Default database username changed from admin to ebroot\n- Trim application version description if it is too long\n- Application version no longer includes git hash", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://aws.amazon.com/elasticbeanstalk/", "keywords": null, "license": "Apache License 2.0", "maintainer": null, "maintainer_email": null, "name": "synctree-awsebcli", "package_url": "https://pypi.org/project/synctree-awsebcli/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/synctree-awsebcli/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://aws.amazon.com/elasticbeanstalk/"}, "release_url": "https://pypi.org/project/synctree-awsebcli/3.5.4/", "requires_dist": null, "requires_python": null, "summary": "Command Line Interface for AWS EB.", "version": "3.5.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            ======<br>EB-CLI<br>======<br><br>EB Command Line Interface (CLI) is a tool that helps you deploy and manage<br>your AWS Elastic Beanstalk applications and environments. It also<br>provides integration with Git. This file provides a sample walkthrough of EB CLI. To view a list of commands, type:<br><br>    eb --help<br><br>For more information about a specific command, type:<br><br>    eb {cmd} --help<br><br><br>For detailed information about EB CLI, see `EB Command Line Reference. &lt;http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-reference-eb.html&gt;`__<br><br>------------<br>Installation<br>------------<br><br>You will need administrator/sudo privileges unless you install into a virtual environment.<br>To install you will first need to install Python and Pip.<br>The most recent version of Python now includes pip.<br><br>`To install Python, go here. &lt;https://www.python.org/downloads/&gt;`__<br><br>If you already have Python, but need to install Pip, `go here. &lt;http://pip.readthedocs.org/en/latest/installing.html&gt;`__<br><br>After you have installed Pip, run the following command:<br><br>pip install awsebcli<br><br>---------------<br>Getting Started<br>---------------<br><br>EB CLI requires you to have AWS security credentials.<br>For procedures to get security credentials, `see the documentation. &lt;http://docs.aws.amazon.com/general/latest/gr/managing-aws-access-keys.html&gt;`__<br><br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>1. Create a new directory for your project.<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>In Linux/UNIX, type the following:<br>    mkdir my-hello-app<br><br>In Windows, type the following:<br>\tmd my-hello-app<br><br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>2. Create an index.html file for EB CLI to use as your sample application.<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>    echo \"Hello World\" &gt; index.html<br><br>NOTE: In Windows, do not include quotes in the command.<br><br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>3. Set up your directory with EB CLI and then answer the questions to configure AWS Elastic Beanstalk.<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>    eb init<br><br>When prompted for your AWS security credentials, type your access key ID and secret access key. To answer a question with the default value, press Enter.<br><br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>4. Create your running environment and deploy the Hello World application.<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>    eb create<br><br>Wait for AWS Elastic Beanstalk to finish creating the environment.<br>When it is done, your application is live in a load-balancing environment.<br><br>^^^^^^^^^^^^^^^^^^^^^^^^^<br>5. View your application.<br>^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>    eb open<br><br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>6. Update the sample application to create a new application version to deploy.<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>Make a change to your code by typing the following:<br><br>   echo \" to you.\" &gt;&gt; index.html<br><br>NOTE: In Windows, do not include quotes in the command.<br><br>When you are ready to launch your new application version, type the following:<br><br>   eb deploy<br><br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>7. View the health of your environment<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>    eb health<br><br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>8. View the updated environment.<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>    eb open<br><br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>9. Shut down your running environment.<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>    eb terminate<br><br>Confirm that this is the environment that you want to terminate by typing the environment name.<br><br>^^^^^^^^^^^^^<br>10. Clean up.<br>^^^^^^^^^^^^^<br><br>To completely remove your application and clean up the local project directory, type the following:<br><br>    eb terminate --all<br><br>Confirm that this is the application that you want to remove by typing the application name.<br><br>---------------<br>EB CLI Commands<br>---------------<br><br>This section describes some EB CLI 3 commands and why you would use them.<br><br>^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>1. View environment status.<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>    eb status -v<br><br>The status command will show you the current state of your application. This includes things such as:<br>  * Environment Name<br>  * Application Version<br>  * Solution Stack<br>  * Health<br>  * Number of running instances<br><br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>2. List your running environments.<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>   eb list<br><br>The list command will show you a list of running environments.<br>The environment with an asterisk next to it is the default environment.<br>To see more detailed information about your environments, type the following to use verbose mode:<br><br>   eb list -v<br><br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>3. Change your current environment.<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>You can run most commands with any environment by using the following syntax:<br><br>    eb {cmd} &lt;environment&gt;<br><br>To change your default environment, type the following:<br><br>    eb use [environment_name]<br><br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>4. Open the AWS Elastic Beanstalk management console.<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>To view your environment in the AWS Management Console, type the following:<br><br>    eb console<br><br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br>5. Change environment variables.<br>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<br><br>You can set environment variables for your running environment at any time by typing the following:<br><br>    eb setenv foo=bar<br><br>You can view your environment variables by typing the following:<br><br>    eb printenv<br><br>---------------------<br>Using EB CLI with Git<br>---------------------<br><br>EB CLI 3 provides integration with Git. After running \"git clone\" or \"git init\", run the following command:<br><br>    eb init<br><br>EB CLI 3 will now recognize that your application is set up with Git.<br><br>To use Git with EB CLI 3:<br><br>1. Make any change to your code.<br><br>2. After you make a change to your code, type the following:<br><br>\tgit commit<br><br>3. Deploy your updated code.<br><br>Now when you run the \"eb deploy\" command, EB CLI will only deploy the code that was under source control.<br>Make sure to always commit what you want to deploy.<br>EB CLI uses your commit ID and message as the version label and description, respectively.<br><br>4. Deploy to production.<br><br>When you are ready to deploy an updated version of your code, use Git tags.<br><br>    git tag -a v1.0 -m \"My version 1.0\"<br><br>The tag will be used for the version label so you always know which version your environment is running on.<br>If you have already deployed this version, EB CLI will deploy that version to your environment instead of uploading a new application version.<br><br>5. Use branches.<br><br>EB CLI enables you to associate different branches with different branches of your code.<br>For example:<br><br>    git checkout master<br><br>    eb use prod<br><br>    git checkout develop<br><br>    eb use dev<br><br>Now whenever you switch to a new branch, your default environment will also switch.<br>=========<br>Changelog<br>=========<br><br>------------------<br>3.5.2-synctree (n/a)<br>------------------<br> - Fall back to app/env prompt for all commands when there is no local configuration<br> - Respect region specified in AWS profile when no other region is supplied<br><br>------------------<br>3.5.2 (2015-08-26)<br>------------------<br>- Fix bug in \"eb health\" command preventing it from running.<br><br>------------------<br>3.5.1 (2015-08-25)<br>------------------<br>- Fix az column clipping.<br>- Unhide labs setup-cwl feature as well as logs --stream.<br>- Add pip install command when a new version is available.<br><br>------------------<br>3.5 (2015-08-11)<br>------------------<br>- Add command \"eb labs setup-ssl\"<br>- Add command \"eb labs cloudwatchlogs-setup\"<br>- Change `eb open` to now open https if load balancer http port is OFF<br>- Add support for enhanced health with `eb health`<br>- Other minor changes<br><br>------------------<br>3.4.7 (2015-07-28)<br>------------------<br>- Fix issue with .gitignore being included on deploy<br>- Fix issue with streaming unicode events<br><br>------------------<br>3.4.6 (2015-07-10)<br>------------------<br>- Fix issue with \"eb labs download\"<br>- Fix issue where folders in .ebignore were incorrectly being uploaded.<br><br>------------------<br>3.4.5 (2015-06-08)<br>------------------<br>- SSH no longer attempts to open port 22 if a Source restriction is in place<br>- Added --force flag to override above behavior<br>- SSH errors now show properly with the -o option<br>- Environment variables are less strict and can now contain the '=' sign<br><br>------------------<br>3.4.4 (2015-05-18)<br>------------------<br>- Changed how Sample Application is handled internally<br><br>------------------<br>3.4.3 (2015-05-12)<br>------------------<br>- Fix issue with \"eb config\" when adding new option settings<br>- Update golang local container file<br>- Fix issue with overwriting docker environment variables during local<br><br>------------------<br>3.4.2 (2015-05-09)<br>------------------<br>- Fix issue with installation for eb local files<br><br>----------------<br>3.4 (2015-05-07)<br>----------------<br>- Added 'localContainerDefinitions' section for multi-continer docker<br>- Multi-container docker containers now correctly read 'environment'<br>- Added printenv/setenv commands to eb local<br>- t2.micro is now default instance type for accounts with a default vpc<br>- add --staged option to eb deploy for deploying git stage rather then commit<br>- Fix config file path resolution<br><br>------------------<br>3.3.2 (2015-04-30)<br>------------------<br>- Fix \"eb open\" for windows<br><br>------------------<br>3.3.1 (2015-04-28)<br>------------------<br>- Fix --force option on \"eb labs cleanup-versions\"<br><br>----------------<br>3.3 (2015-04-28)<br>----------------<br>- Added \"local\" commands<br>- Added \"eb labs cleanup-versions\" for cleaning up old app versions<br>- Added support for an .ebignore file<br>- using \"eb terminate --all\" now removes application bundles from s3<br>- Add support for branch specific defaults in config.yml<br>- Fix interactive vpc bug<br>- Fix \"eb open\" race condition<br>- Incomplete credentials errors are now more verbose<br><br>------------------<br>3.2.2 (2015-04-06)<br>------------------<br>- Fix issue with creating single instance environments<br><br>------------------<br>3.2.1 (2015-04-02)<br>------------------<br>- Added warning string for Multi-container permissions on \"create\"<br><br>----------------<br>3.2 (2015-03-30)<br>----------------<br>- Added \"platform\" commands<br>- Added \"upgrade\" command<br>- Added \"abort\" command<br>- Added \"labs\" commands<br>- Printed events now look nicer<br>- Logs and events are automatically paged.<br>- Health based rolling updates are now default for new environments.<br><br>------------------<br>3.1.3 (2015-03-13)<br>------------------<br>- Added option on create for specifying database version (--database.version)<br><br>------------------<br>3.1.2 (2015-02-26)<br>------------------<br>- Fix multithreaded issue on python 3.4.3<br>- Fix environment names printing in columns<br>- Update botocore to 0.93.0<br><br>------------------<br>3.1.1 (2015-02-24)<br>------------------<br>- Fix git issue on windows<br>- Support older versions of git<br>- Saved Configurations now work with Worker tier<br><br>----------------<br>3.1 (2015-02-17)<br>----------------<br>- Editor backup files (file.txt~) no longer included in application zip<br>- Added commands for Saved Configurations (eb config --help)<br>- Now receive alerts for an outdated cli and outdated environment platform.<br>- Deploy now works in subdirectories<br>- Config now works in subdirectories<br>- Can now specify your own timeout period with \"--timeout x\"<br>- Can now specify environment variables on environment create with \"--envvars\"<br>- Can now get the latest platform version when you clone an environment. \"eb clone\"<br>- Application Bundle uploads now show status<br>- Large file uploads are now multi-threaded<br>- Added warning on deploy if unstaged git changes exist<br>- Can now swap environment CNAME's using \"eb swap\"<br>- Exposed --vpc option on create<br>- Added --no-verify-ssl option<br>- Updated Botocore to 0.88.0<br><br>-------------------<br>3.0.11 (2015-02-09)<br>-------------------<br>- Fixed Zipping issue for Windows Containers<br><br>-------------------<br>3.0.10 (2014-11-24)<br>-------------------<br>- Fixed parsing error for uploads in a s3 bucket with auto-deletion policy<br>- Fixed terminated environment issues<br>- No longer uploads application if the application version already exists in s3<br>- Default database username changed from admin to ebroot<br>- Trim application version description if it is too long<br>- Application version no longer includes git hash\n          </div>"}, "last_serial": 1772390, "releases": {"3.5.2": [{"comment_text": "", "digests": {"md5": "887c2b125dfcea73526ac169aeee7ec7", "sha256": "c5174ae7dc8e9cdbb74b20e3d775922ef2051a389461694800ef0d00d85d86ef"}, "downloads": -1, "filename": "synctree-awsebcli-3.5.2.tar.gz", "has_sig": false, "md5_digest": "887c2b125dfcea73526ac169aeee7ec7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 162263, "upload_time": "2015-10-07T20:09:58", "upload_time_iso_8601": "2015-10-07T20:09:58.247390Z", "url": "https://files.pythonhosted.org/packages/36/a3/d77fecd07e3c562246181e368e6cc2ca0f1930c4c68cbd36a409e37b955b/synctree-awsebcli-3.5.2.tar.gz", "yanked": false}], "3.5.3": [{"comment_text": "", "digests": {"md5": "f5dcb6cdf45ecd0473ad5656064a9fdf", "sha256": "972d9c229b319a0a17cf269f4c6b3bba62e4664a84d675dba3fef29aeef0c0fe"}, "downloads": -1, "filename": "synctree-awsebcli-3.5.3.tar.gz", "has_sig": false, "md5_digest": "f5dcb6cdf45ecd0473ad5656064a9fdf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 162325, "upload_time": "2015-10-15T17:58:56", "upload_time_iso_8601": "2015-10-15T17:58:56.866234Z", "url": "https://files.pythonhosted.org/packages/f0/e3/efd93779f9d9809c680e566b24b51e0ffe66a2fed29ca6ec7561e4f1bf67/synctree-awsebcli-3.5.3.tar.gz", "yanked": false}], "3.5.4": [{"comment_text": "", "digests": {"md5": "4eb468e309eb9327088162dfd1bf74e6", "sha256": "da30fdfde6871be1193d54b5f455ef9b772098c79b0d62fffb017b1d4d8f5239"}, "downloads": -1, "filename": "synctree-awsebcli-3.5.4.tar.gz", "has_sig": false, "md5_digest": "4eb468e309eb9327088162dfd1bf74e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 162422, "upload_time": "2015-10-16T21:01:52", "upload_time_iso_8601": "2015-10-16T21:01:52.385340Z", "url": "https://files.pythonhosted.org/packages/f9/eb/a5794d095ac79b70e7e683f0c18e5b7b59f1ad83e9d6d2591cfe40e800ab/synctree-awsebcli-3.5.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4eb468e309eb9327088162dfd1bf74e6", "sha256": "da30fdfde6871be1193d54b5f455ef9b772098c79b0d62fffb017b1d4d8f5239"}, "downloads": -1, "filename": "synctree-awsebcli-3.5.4.tar.gz", "has_sig": false, "md5_digest": "4eb468e309eb9327088162dfd1bf74e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 162422, "upload_time": "2015-10-16T21:01:52", "upload_time_iso_8601": "2015-10-16T21:01:52.385340Z", "url": "https://files.pythonhosted.org/packages/f9/eb/a5794d095ac79b70e7e683f0c18e5b7b59f1ad83e9d6d2591cfe40e800ab/synctree-awsebcli-3.5.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:02 2020"}