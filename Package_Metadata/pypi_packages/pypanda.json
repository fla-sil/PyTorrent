{"info": {"author": "David van IJzendoorn", "author_email": "d.g.p.van_ijzendoorn@lumc.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable"], "description": "PyPanda is a Python implementation of the PANDA algorithm using the Python Numpy library, which is optimized for matrix operations. Using matrix operations the Python implementation is significantly faster than the C implementation of PANDA. PyPanda is also capable of predicting single sample networks using the Lioness algorithm and returning indegrees and outdegrees for further analysis with GSEA for example. As PyPanda was build using the Numpy it is optimized for multicore processing using BLAS and LAPACK functions which significantly decreases run times compared to the C-code.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/davidvi/pypanda", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/davidvi/", "keywords": "panda, network prediction, pypanda", "license": "MIT", "maintainer": "David van IJzendoorn", "maintainer_email": "d.g.p.van_ijzendoorn@lumc.nl", "name": "pypanda", "package_url": "https://pypi.org/project/pypanda/", "platform": "Unix", "project_url": "https://pypi.org/project/pypanda/", "project_urls": {"Download": "https://github.com/davidvi/pypanda", "Homepage": "https://github.com/davidvi/"}, "release_url": "https://pypi.org/project/pypanda/0.1/", "requires_dist": null, "requires_python": null, "summary": "PyPanda: A Python package for network prediction", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>PyPanda is a Python implementation of the PANDA algorithm using the Python Numpy library, which is optimized for matrix operations. Using matrix operations the Python implementation is significantly faster than the C implementation of PANDA. PyPanda is also capable of predicting single sample networks using the Lioness algorithm and returning indegrees and outdegrees for further analysis with GSEA for example. As PyPanda was build using the Numpy it is optimized for multicore processing using BLAS and LAPACK functions which significantly decreases run times compared to the C-code.</p>\n\n          </div>"}, "last_serial": 1917014, "releases": {"0.1": []}, "urls": [], "timestamp": "Fri May  8 02:59:57 2020"}