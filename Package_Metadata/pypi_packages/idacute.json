{"info": {"author": "Tamir Bahar", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "Cute\r\n====\r\n\r\nCross-Qt compatibility module for IDAPython.\r\n\r\nWhat is it?\r\n-----------\r\n\r\nCute is a tiny compatibility module, to allow IDAPython code to use\r\nPySide/Qt4 and PyQt/Qt5 seamlessly.\r\n\r\nMotivation\r\n----------\r\n\r\nCute was originally a part of\r\n`Sark <https://github.com/tmr232/Sark/blob/master/sark/qt.py>`__\r\n(``sark.qt``). Since no-one likes dependencies, especially for things\r\nthis small, no-one used it. So I decided to release it as a separate\r\nmodule as well, so that people can just take the file as-is and use it\r\nin their own code.\r\n\r\nUsage\r\n-----\r\n\r\nQt Modules\r\n~~~~~~~~~~\r\n\r\nImporting ``QtCore``, ``QtGui`` and ``QtWidgets`` works for all Qt\r\nversions. For Qt4, ``QtWidgets`` is an alias for ``QtGui``, so Qt5 code\r\nwith ``QtWidgets`` / ``QtGui`` separation will work on Qt4 as well.\r\n\r\n::\r\n\r\n    from cute import QtCure, QtGui, QtWidgets\r\n\r\nConnecting to Signals\r\n~~~~~~~~~~~~~~~~~~~~~\r\n\r\nCute offers a ``cute.connect(...)`` method to mitigate the difference\r\nbetween Qt4 and Qt5.\r\n\r\n::\r\n\r\n    # Qt4 Code:\r\n    QtCore.QObject.connect(my_object, QtCore.SIGNAL('error(QProcess::ProcessError)'), my_callback)\r\n\r\n    # Qt5 Code:\r\n    my_object.error.connect(my_callback)\r\n\r\n    # Cute Code:\r\n    cute.connect(my_object, 'error(QProcess::ProcessError)', my_callback)\r\n\r\nThe API for disconnecting is the same, just use the\r\n``cute.disconnect(...)`` function.\r\n\r\nForm to Widget\r\n~~~~~~~~~~~~~~\r\n\r\nIDA has 2 APIs for getting the widget associated with a TForm. One for\r\nPyQt and one for PySide. Cute wraps them both in one function.\r\n\r\n::\r\n\r\n    my_widget = cute.form_to_widget(my_tform)\r\n\r\nWhich Qt Should I Use?\r\n~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nSometimes, you *do* need to to know the Qt version your code uses. For\r\nthose cases, ask the ``use_qt5`` variable.\r\n\r\n::\r\n\r\n    if cute.use_qt5:\r\n        print 'Use Qt5'\r\n    else:\r\n        print 'Use Qt4'\r\n\r\nIn a Project\r\n~~~~~~~~~~~~\r\n\r\nThere are two recommended ways to use Cute:\r\n\r\n#. Copy it into your own project. This way *does* create code duplication, but avoid dependencies.\r\n#. Install it as a package - ``pip install idacute``.\r\n\r\n\r\nLicensing\r\n---------\r\n\r\nCute is released under the MIT license, so you are free to use it in any\r\nproject whatsoever.\r\n\r\nFAQ\r\n---\r\n\r\n**Q:** Why did you name it \"cute\"?\r\n\r\n**A:** For years I was sure \"Qt\" is pronounced \"Q T\". This is my effort\r\nto remind myself it is not.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tmr232/Cute", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "idacute", "package_url": "https://pypi.org/project/idacute/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/idacute/", "project_urls": {"Homepage": "https://github.com/tmr232/Cute"}, "release_url": "https://pypi.org/project/idacute/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Cross-Qt compatibility module for IDAPython", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Cross-Qt compatibility module for IDAPython.</p>\n<div id=\"what-is-it\">\n<h2>What is it?</h2>\n<p>Cute is a tiny compatibility module, to allow IDAPython code to use\nPySide/Qt4 and PyQt/Qt5 seamlessly.</p>\n</div>\n<div id=\"motivation\">\n<h2>Motivation</h2>\n<p>Cute was originally a part of\n<a href=\"https://github.com/tmr232/Sark/blob/master/sark/qt.py\" rel=\"nofollow\">Sark</a>\n(<tt>sark.qt</tt>). Since no-one likes dependencies, especially for things\nthis small, no-one used it. So I decided to release it as a separate\nmodule as well, so that people can just take the file as-is and use it\nin their own code.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"qt-modules\">\n<h3>Qt Modules</h3>\n<p>Importing <tt>QtCore</tt>, <tt>QtGui</tt> and <tt>QtWidgets</tt> works for all Qt\nversions. For Qt4, <tt>QtWidgets</tt> is an alias for <tt>QtGui</tt>, so Qt5 code\nwith <tt>QtWidgets</tt> / <tt>QtGui</tt> separation will work on Qt4 as well.</p>\n<pre>from cute import QtCure, QtGui, QtWidgets\n</pre>\n</div>\n<div id=\"connecting-to-signals\">\n<h3>Connecting to Signals</h3>\n<p>Cute offers a <tt><span class=\"pre\">cute.connect(...)</span></tt> method to mitigate the difference\nbetween Qt4 and Qt5.</p>\n<pre># Qt4 Code:\nQtCore.QObject.connect(my_object, QtCore.SIGNAL('error(QProcess::ProcessError)'), my_callback)\n\n# Qt5 Code:\nmy_object.error.connect(my_callback)\n\n# Cute Code:\ncute.connect(my_object, 'error(QProcess::ProcessError)', my_callback)\n</pre>\n<p>The API for disconnecting is the same, just use the\n<tt><span class=\"pre\">cute.disconnect(...)</span></tt> function.</p>\n</div>\n<div id=\"form-to-widget\">\n<h3>Form to Widget</h3>\n<p>IDA has 2 APIs for getting the widget associated with a TForm. One for\nPyQt and one for PySide. Cute wraps them both in one function.</p>\n<pre>my_widget = cute.form_to_widget(my_tform)\n</pre>\n</div>\n<div id=\"which-qt-should-i-use\">\n<h3>Which Qt Should I Use?</h3>\n<p>Sometimes, you <em>do</em> need to to know the Qt version your code uses. For\nthose cases, ask the <tt>use_qt5</tt> variable.</p>\n<pre>if cute.use_qt5:\n    print 'Use Qt5'\nelse:\n    print 'Use Qt4'\n</pre>\n</div>\n<div id=\"in-a-project\">\n<h3>In a Project</h3>\n<p>There are two recommended ways to use Cute:</p>\n<ol>\n<li>Copy it into your own project. This way <em>does</em> create code duplication, but avoid dependencies.</li>\n<li>Install it as a package - <tt>pip install idacute</tt>.</li>\n</ol>\n</div>\n</div>\n<div id=\"licensing\">\n<h2>Licensing</h2>\n<p>Cute is released under the MIT license, so you are free to use it in any\nproject whatsoever.</p>\n</div>\n<div id=\"faq\">\n<h2>FAQ</h2>\n<p><strong>Q:</strong> Why did you name it \u201ccute\u201d?</p>\n<p><strong>A:</strong> For years I was sure \u201cQt\u201d is pronounced \u201cQ T\u201d. This is my effort\nto remind myself it is not.</p>\n</div>\n\n          </div>"}, "last_serial": 5919283, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "8c5c79439e117f131bce47c888ed21a5", "sha256": "82be01e1f96e634f3a8f0157a95a3ed4d6bc2df710785b3f587d3a8975449a0f"}, "downloads": -1, "filename": "IDACute-1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "8c5c79439e117f131bce47c888ed21a5", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5341, "upload_time": "2016-02-01T09:27:53", "upload_time_iso_8601": "2016-02-01T09:27:53.371051Z", "url": "https://files.pythonhosted.org/packages/28/c9/4707c0e304265f3bb47b10772272ae40ea5ef6261cbdd41388aca64c0798/IDACute-1.0-py2-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "0b4c85af8070157b3868a699af7c0bd1", "sha256": "c70c168ab127a69bd4d6d507bb565eaad14ed645e7de361980438c1150515b95"}, "downloads": -1, "filename": "idacute-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "0b4c85af8070157b3868a699af7c0bd1", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7600, "upload_time": "2016-02-01T09:36:03", "upload_time_iso_8601": "2016-02-01T09:36:03.154345Z", "url": "https://files.pythonhosted.org/packages/37/95/479358e5d98e5bdad5a24788acd08c2d7d53b66e77cc40e5dcbed6954f80/idacute-1.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8f9dad54ca800f05ab75b797be04a18", "sha256": "8a8d7dbc3d345616db4616145d22f0dccdb0976c74a5cb4faabf7a5e446d2957"}, "downloads": -1, "filename": "idacute-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f8f9dad54ca800f05ab75b797be04a18", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5748, "upload_time": "2019-10-02T17:50:05", "upload_time_iso_8601": "2019-10-02T17:50:05.910783Z", "url": "https://files.pythonhosted.org/packages/48/30/b9fd9c14694aed8923563c5cda9b3526baf0b1f2d06b49151185d9c923c9/idacute-1.0.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0b4c85af8070157b3868a699af7c0bd1", "sha256": "c70c168ab127a69bd4d6d507bb565eaad14ed645e7de361980438c1150515b95"}, "downloads": -1, "filename": "idacute-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "0b4c85af8070157b3868a699af7c0bd1", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7600, "upload_time": "2016-02-01T09:36:03", "upload_time_iso_8601": "2016-02-01T09:36:03.154345Z", "url": "https://files.pythonhosted.org/packages/37/95/479358e5d98e5bdad5a24788acd08c2d7d53b66e77cc40e5dcbed6954f80/idacute-1.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8f9dad54ca800f05ab75b797be04a18", "sha256": "8a8d7dbc3d345616db4616145d22f0dccdb0976c74a5cb4faabf7a5e446d2957"}, "downloads": -1, "filename": "idacute-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f8f9dad54ca800f05ab75b797be04a18", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5748, "upload_time": "2019-10-02T17:50:05", "upload_time_iso_8601": "2019-10-02T17:50:05.910783Z", "url": "https://files.pythonhosted.org/packages/48/30/b9fd9c14694aed8923563c5cda9b3526baf0b1f2d06b49151185d9c923c9/idacute-1.0.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:48:57 2020"}