{"info": {"author": "Paulo Mateus Moura da Silva (SrMouraSilva)", "author_email": "mateus.moura@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Multimedia :: Sound/Audio"], "description": "Pedal Pi - Application\n======================\n\n.. image:: https://travis-ci.org/PedalPi/Application.svg?branch=master\n    :target: https://travis-ci.org/PedalPi/Application\n    :alt: Build Status\n\n.. image:: https://readthedocs.org/projects/pedalpi-application/badge/?version=latest\n    :target: http://pedalpi-application.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://codecov.io/gh/PedalPi/Application/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/PedalPi/Application\n    :alt: Code coverage\n\n.. image:: https://landscape.io/github/PedalPi/Application/master/landscape.svg?style=flat\n    :target: https://landscape.io/github/PedalPi/Application/master\n    :alt: Code Health\n\nPedal Pi - Application is a framework for manager the Pedal Pi.\nThrough it is possible loads `Pedal Pi Components`_\nto provide a Human Machine Interface (HMI) or even have an opening for other software\nto consume the features of the Pedal Pi.\n\nThe components developed use the API (available through `Controllers <controller.html>`__) to manage the resources of the Pedal Pi.\n\n.. _Pedal Pi Components: https://github.com/PedalPi/Components\n\n**Documentation:**\n   http://pedalpi-application.readthedocs.io/\n\n**Code:**\n   https://github.com/PedalPi/Application\n\n**Python Package Index:**\n   https://pypi.org/project/PedalPi-Application\n\n**License:**\n   `Apache License 2.0`_\n\n.. _Apache License 2.0: https://github.com/PedalPi/Application/blob/master/LICENSE\n\n\nRunning Application\n-------------------\n\nFollowing are the steps required to set up and run Pedal Pi - Application.\n\nPrepare ambient\n***************\n\nInstall with pip\n\n.. code-block:: bash\n\n    pip3 install PedalPi-Application\n\nCreate the script file that contains the code to run the application (as example ``start.py``)\n\n.. code-block:: python\n\n    from application.application import Application\n\n    application = Application(path_data=\"data/\", address='localhost')\n\n    application.start()\n\n    from signal import pause\n    try:\n        pause()\n    except KeyboardInterrupt:\n        application.stop()\n\nDownload, compile and install `mod-host`_. Mod-host is a *LV2 host for Jack controllable via socket or command line*.\nIt is developed by `Mod Devices`_, a company that also develops professional equipment for musicians.\n\n.. _mod-host: https://github.com/moddevices/mod-host\n.. _Mod Devices: https://moddevices.com/\n\n.. code-block:: bash\n\n    git clone https://github.com/moddevices/mod-host\n    cd mod-host\n    make\n    make install\n\nRun Application\n***************\n\nStart audio process. The required settings for your audio card can vary greatly.\nI recommend that you try different possibilities in order to minimize the latency and number of *xruns*.\n\nIf you do not have any experience with JACK, is recommend the lecture of\n`Demystifying JACK \u2013 A Beginners Guide to Getting Started with JACK`_ from **Linux Music Production**.\n\n.. _Demystifying JACK \u2013 A Beginners Guide to Getting Started with JACK: http://libremusicproduction.com/articles/demystifying-jack-%E2%80%93-beginners-guide-getting-started-jack\n\n.. code-block:: bash\n\n    # In this example, is starting a Zoom g3 series audio interface\n    jackd -R -P70 -t2000 -dalsa -dhw:Series -p256 -n3 -r44100 -s &\n    mod-host &\n\nFinally, start the application\n\n.. code-block:: bash\n\n    python3 start.py\n\n\nExtending\n---------\n\nIt's possible add or extends the Pedal Pi with addiction of `Component`. A component can\nprovides a Human Machine Interface (HMI) - like `Raspberry P0`_ - or even have an opening for other software\nto consume the features of the Pedal Pi - like `WebService`_ plugin.\n\nSee the `github Components Project`_ for complete components list.\n\nTo add a component in your configuration file, download it and register it before starting the application (``application.start()``):\n\n.. code-block:: bash\n\n    pip3 install PedalPi-<component name>\n\n.. code-block:: python\n\n    from application.Application import Application\n    application = Application(path_data=\"data/\", address='localhost')\n\n    # Loading component\n    from raspberry_p0.raspberry_p0 import RaspberryP0\n    application.register(RaspberryP0(application))\n\n    # Start application\n    application.start()\n\n    # Don't stop application\n    from signal import pause\n    try:\n        pause()\n    except KeyboardInterrupt:\n        # Stop components with safety\n        application.stop()\n\nEach component needs a configuration to work.\nPay attention to your documentation for details on how to set it up and use it.\n\n.. _github Components Project: https://github.com/PedalPi/Components\n.. _Raspberry P0: https://github.com/PedalPi/Raspberry-P0\n.. _WebService: https://github.com/PedalPi/WebService\n\n\nDelegating audio processing to other equipment\n----------------------------------------------\n\nThe connection with `mod-host`_ is over `TCP`_. So it's possible to place a\nmachine to perform the processing and another to provide the control services.\n\nFor example, you have a **Raspberry Pi B+** and a **PC**.\n * The PC in http://10.0.0.100 will process the audio, then it will execute `jack` process,\n   `mod-host` process and the audio interface will be connected to it.\n * The *RPi* will executes `Application` with `Component`, like `Raspberry P0 component`_.\n   Raspberry P0 disposes a simple current pedalboard control.\n\n.. code-block:: python\n\n    application = Application(path_data=\"data/\", address='10.0.0.100')\n\n.. _Raspberry P0 component: https://github.com/PedalPi/Raspberry-P0\n.. _TCP: https://en.wikipedia.org/wiki/Transmission_Control_Protocol\n\nCreating a component\n--------------------\n\nSubsequently will be added details in the documentation on how to create a component for the Pedal Pi.\nFor now, you can check the blog post `Building a Pedal Pi Component - Pedalboard selector`_\n\n.. _Building a Pedal Pi Component - Pedalboard selector: https://pedalpi.github.io/blog/building-a-pedal-pi-component-pedalboard-selector.html\n\nMaintenance\n-----------\n\nTest\n****\n\nThe purpose of the tests is:\n\n* Check if the notifications are working, since the module plugins manager is responsible for testing the models;\n* Serve as a sample basis.\n\n.. code-block:: bash\n\n    make test\n    make test-details\n\nGenerate documentation\n**********************\n\nThis project uses `Sphinx`_ + `Read the Docs`_.\n\nYou can generate the documentation in your local machine:\n\n.. code-block:: bash\n\n    make install-docs-requirements\n    make docs\n\n    make docs-see\n\n.. _Sphinx: http://www.sphinx-doc.org/\n.. _Read the Docs: http://readthedocs.org\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PedalPi/Application", "keywords": "pedal-pi mod-host lv2 audio plugins-manager", "license": "Apache Software License v2", "maintainer": "", "maintainer_email": "", "name": "PedalPi-Application", "package_url": "https://pypi.org/project/PedalPi-Application/", "platform": "Linux", "project_url": "https://pypi.org/project/PedalPi-Application/", "project_urls": {"Homepage": "https://github.com/PedalPi/Application"}, "release_url": "https://pypi.org/project/PedalPi-Application/0.4.1/", "requires_dist": null, "requires_python": "", "summary": "Framework for manager the Pedal Pi", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/PedalPi/Application\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/84db0f4c057d9874c324686a9262fd22f236101b/68747470733a2f2f7472617669732d63692e6f72672f506564616c50692f4170706c69636174696f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://pedalpi-application.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/83e9d710339ed2a613338b57e7d694c280fe0d39/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f706564616c70692d6170706c69636174696f6e2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codecov.io/gh/PedalPi/Application\" rel=\"nofollow\"><img alt=\"Code coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b5650d1c1d7a93c4cfc9c6e6b9acd8ff4542f006/68747470733a2f2f636f6465636f762e696f2f67682f506564616c50692f4170706c69636174696f6e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://landscape.io/github/PedalPi/Application/master\" rel=\"nofollow\"><img alt=\"Code Health\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f72a6c0dbec86d412b6f99b1d3c560343908ad41/68747470733a2f2f6c616e6473636170652e696f2f6769746875622f506564616c50692f4170706c69636174696f6e2f6d61737465722f6c616e6473636170652e7376673f7374796c653d666c6174\"></a>\n<p>Pedal Pi - Application is a framework for manager the Pedal Pi.\nThrough it is possible loads <a href=\"https://github.com/PedalPi/Components\" rel=\"nofollow\">Pedal Pi Components</a>\nto provide a Human Machine Interface (HMI) or even have an opening for other software\nto consume the features of the Pedal Pi.</p>\n<p>The components developed use the API (available through <a href=\"controller.html\" rel=\"nofollow\">Controllers</a>) to manage the resources of the Pedal Pi.</p>\n<dl>\n<dt><strong>Documentation:</strong></dt>\n<dd><a href=\"http://pedalpi-application.readthedocs.io/\" rel=\"nofollow\">http://pedalpi-application.readthedocs.io/</a></dd>\n<dt><strong>Code:</strong></dt>\n<dd><a href=\"https://github.com/PedalPi/Application\" rel=\"nofollow\">https://github.com/PedalPi/Application</a></dd>\n<dt><strong>Python Package Index:</strong></dt>\n<dd><a href=\"https://pypi.org/project/PedalPi-Application\" rel=\"nofollow\">https://pypi.org/project/PedalPi-Application</a></dd>\n<dt><strong>License:</strong></dt>\n<dd><a href=\"https://github.com/PedalPi/Application/blob/master/LICENSE\" rel=\"nofollow\">Apache License 2.0</a></dd>\n</dl>\n<div id=\"running-application\">\n<h2>Running Application</h2>\n<p>Following are the steps required to set up and run Pedal Pi - Application.</p>\n<div id=\"prepare-ambient\">\n<h3>Prepare ambient</h3>\n<p>Install with pip</p>\n<pre>pip3 install PedalPi-Application\n</pre>\n<p>Create the script file that contains the code to run the application (as example <tt>start.py</tt>)</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">application.application</span> <span class=\"kn\">import</span> <span class=\"n\">Application</span>\n\n<span class=\"n\">application</span> <span class=\"o\">=</span> <span class=\"n\">Application</span><span class=\"p\">(</span><span class=\"n\">path_data</span><span class=\"o\">=</span><span class=\"s2\">\"data/\"</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"o\">=</span><span class=\"s1\">'localhost'</span><span class=\"p\">)</span>\n\n<span class=\"n\">application</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">signal</span> <span class=\"kn\">import</span> <span class=\"n\">pause</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">pause</span><span class=\"p\">()</span>\n<span class=\"k\">except</span> <span class=\"ne\">KeyboardInterrupt</span><span class=\"p\">:</span>\n    <span class=\"n\">application</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<p>Download, compile and install <a href=\"https://github.com/moddevices/mod-host\" rel=\"nofollow\">mod-host</a>. Mod-host is a <em>LV2 host for Jack controllable via socket or command line</em>.\nIt is developed by <a href=\"https://moddevices.com/\" rel=\"nofollow\">Mod Devices</a>, a company that also develops professional equipment for musicians.</p>\n<pre>git clone https://github.com/moddevices/mod-host\n<span class=\"nb\">cd</span> mod-host\nmake\nmake install\n</pre>\n</div>\n<div id=\"run-application\">\n<h3>Run Application</h3>\n<p>Start audio process. The required settings for your audio card can vary greatly.\nI recommend that you try different possibilities in order to minimize the latency and number of <em>xruns</em>.</p>\n<p>If you do not have any experience with JACK, is recommend the lecture of\n<a href=\"http://libremusicproduction.com/articles/demystifying-jack-%E2%80%93-beginners-guide-getting-started-jack\" rel=\"nofollow\">Demystifying JACK \u2013 A Beginners Guide to Getting Started with JACK</a> from <strong>Linux Music Production</strong>.</p>\n<pre><span class=\"c1\"># In this example, is starting a Zoom g3 series audio interface\n</span>jackd -R -P70 -t2000 -dalsa -dhw:Series -p256 -n3 -r44100 -s <span class=\"p\">&amp;</span>\nmod-host <span class=\"p\">&amp;</span>\n</pre>\n<p>Finally, start the application</p>\n<pre>python3 start.py\n</pre>\n</div>\n</div>\n<div id=\"extending\">\n<h2>Extending</h2>\n<p>It\u2019s possible add or extends the Pedal Pi with addiction of <cite>Component</cite>. A component can\nprovides a Human Machine Interface (HMI) - like <a href=\"https://github.com/PedalPi/Raspberry-P0\" rel=\"nofollow\">Raspberry P0</a> - or even have an opening for other software\nto consume the features of the Pedal Pi - like <a href=\"https://github.com/PedalPi/WebService\" rel=\"nofollow\">WebService</a> plugin.</p>\n<p>See the <a href=\"https://github.com/PedalPi/Components\" rel=\"nofollow\">github Components Project</a> for complete components list.</p>\n<p>To add a component in your configuration file, download it and register it before starting the application (<tt>application.start()</tt>):</p>\n<pre>pip3 install PedalPi-&lt;component name&gt;\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">application.Application</span> <span class=\"kn\">import</span> <span class=\"n\">Application</span>\n<span class=\"n\">application</span> <span class=\"o\">=</span> <span class=\"n\">Application</span><span class=\"p\">(</span><span class=\"n\">path_data</span><span class=\"o\">=</span><span class=\"s2\">\"data/\"</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"o\">=</span><span class=\"s1\">'localhost'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Loading component</span>\n<span class=\"kn\">from</span> <span class=\"nn\">raspberry_p0.raspberry_p0</span> <span class=\"kn\">import</span> <span class=\"n\">RaspberryP0</span>\n<span class=\"n\">application</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">RaspberryP0</span><span class=\"p\">(</span><span class=\"n\">application</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Start application</span>\n<span class=\"n\">application</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Don't stop application</span>\n<span class=\"kn\">from</span> <span class=\"nn\">signal</span> <span class=\"kn\">import</span> <span class=\"n\">pause</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">pause</span><span class=\"p\">()</span>\n<span class=\"k\">except</span> <span class=\"ne\">KeyboardInterrupt</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Stop components with safety</span>\n    <span class=\"n\">application</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<p>Each component needs a configuration to work.\nPay attention to your documentation for details on how to set it up and use it.</p>\n</div>\n<div id=\"delegating-audio-processing-to-other-equipment\">\n<h2>Delegating audio processing to other equipment</h2>\n<p>The connection with <a href=\"https://github.com/moddevices/mod-host\" rel=\"nofollow\">mod-host</a> is over <a href=\"https://en.wikipedia.org/wiki/Transmission_Control_Protocol\" rel=\"nofollow\">TCP</a>. So it\u2019s possible to place a\nmachine to perform the processing and another to provide the control services.</p>\n<dl>\n<dt>For example, you have a <strong>Raspberry Pi B+</strong> and a <strong>PC</strong>.</dt>\n<dd><ul>\n<li>The PC in <a href=\"http://10.0.0.100\" rel=\"nofollow\">http://10.0.0.100</a> will process the audio, then it will execute <cite>jack</cite> process,\n<cite>mod-host</cite> process and the audio interface will be connected to it.</li>\n<li>The <em>RPi</em> will executes <cite>Application</cite> with <cite>Component</cite>, like <a href=\"https://github.com/PedalPi/Raspberry-P0\" rel=\"nofollow\">Raspberry P0 component</a>.\nRaspberry P0 disposes a simple current pedalboard control.</li>\n</ul>\n</dd>\n</dl>\n<pre><span class=\"n\">application</span> <span class=\"o\">=</span> <span class=\"n\">Application</span><span class=\"p\">(</span><span class=\"n\">path_data</span><span class=\"o\">=</span><span class=\"s2\">\"data/\"</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"o\">=</span><span class=\"s1\">'10.0.0.100'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"creating-a-component\">\n<h2>Creating a component</h2>\n<p>Subsequently will be added details in the documentation on how to create a component for the Pedal Pi.\nFor now, you can check the blog post <a href=\"https://pedalpi.github.io/blog/building-a-pedal-pi-component-pedalboard-selector.html\" rel=\"nofollow\">Building a Pedal Pi Component - Pedalboard selector</a></p>\n</div>\n<div id=\"maintenance\">\n<h2>Maintenance</h2>\n<div id=\"test\">\n<h3>Test</h3>\n<p>The purpose of the tests is:</p>\n<ul>\n<li>Check if the notifications are working, since the module plugins manager is responsible for testing the models;</li>\n<li>Serve as a sample basis.</li>\n</ul>\n<pre>make <span class=\"nb\">test</span>\nmake test-details\n</pre>\n</div>\n<div id=\"generate-documentation\">\n<h3>Generate documentation</h3>\n<p>This project uses <a href=\"http://www.sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a> + <a href=\"http://readthedocs.org\" rel=\"nofollow\">Read the Docs</a>.</p>\n<p>You can generate the documentation in your local machine:</p>\n<pre>make install-docs-requirements\nmake docs\n\nmake docs-see\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3673861, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "e7116e9e21a5e1eeb43d27dd9b148501", "sha256": "4267c10215b991c4e66f9b6a5f8db89e917b7d3c60af7c7da2af476c8139295d"}, "downloads": -1, "filename": "PedalPi-Application-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e7116e9e21a5e1eeb43d27dd9b148501", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20834, "upload_time": "2017-05-12T16:51:07", "upload_time_iso_8601": "2017-05-12T16:51:07.247099Z", "url": "https://files.pythonhosted.org/packages/86/22/2fc1e8dd19497883a205750f695119b0ed93f4a3240adb6426bc5dda9c4d/PedalPi-Application-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "95e66d19d6eda570cf76ff92b7918dc0", "sha256": "69d6663fe2e45413f9a3f1af194cadd8eeaccc80d051ce0752ecace39f568d63"}, "downloads": -1, "filename": "PedalPi-Application-0.2.1.tar.gz", "has_sig": false, "md5_digest": "95e66d19d6eda570cf76ff92b7918dc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20818, "upload_time": "2017-05-14T11:21:50", "upload_time_iso_8601": "2017-05-14T11:21:50.620578Z", "url": "https://files.pythonhosted.org/packages/d5/e2/530d018cdac4260737d9403dc3124570491374bada7a052d0890010488b1/PedalPi-Application-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "9275b1748cad0941e319e304dc9a9937", "sha256": "70362e0267158ffecd05282585411e687167947a57fe3bcbe62f07a1211fad86"}, "downloads": -1, "filename": "PedalPi-Application-0.3.0.tar.gz", "has_sig": false, "md5_digest": "9275b1748cad0941e319e304dc9a9937", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18077, "upload_time": "2017-05-30T13:41:02", "upload_time_iso_8601": "2017-05-30T13:41:02.610626Z", "url": "https://files.pythonhosted.org/packages/63/ba/80b56af4f10e8d462fc3d1e0402a206ec1d2c2bae2d04df50523d66ae6f8/PedalPi-Application-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "2ceeb4457f66efac9cfa44f1906ebc4a", "sha256": "bed15d76907cbcc344daa5093d4d82b8428e75688a2e30da504a2ea6be955a19"}, "downloads": -1, "filename": "PedalPi-Application-0.4.0.tar.gz", "has_sig": false, "md5_digest": "2ceeb4457f66efac9cfa44f1906ebc4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18144, "upload_time": "2018-02-18T16:10:28", "upload_time_iso_8601": "2018-02-18T16:10:28.203437Z", "url": "https://files.pythonhosted.org/packages/e8/25/9da78c954027e1aec5414f0629e752d39f27ad28423cdb1cbcf996667349/PedalPi-Application-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "cddc5903f4ffa466964365d0cdb45685", "sha256": "9942999c37cdd960f287f7ea68ae87a3d33a39f866abe56f82f1f6b33211d23e"}, "downloads": -1, "filename": "PedalPi-Application-0.4.1.tar.gz", "has_sig": false, "md5_digest": "cddc5903f4ffa466964365d0cdb45685", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18160, "upload_time": "2018-03-15T19:31:03", "upload_time_iso_8601": "2018-03-15T19:31:03.589527Z", "url": "https://files.pythonhosted.org/packages/ca/c7/de40857b9f70cbc0a1e488261e7471fd58c962dec006aba97d9192d45a95/PedalPi-Application-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cddc5903f4ffa466964365d0cdb45685", "sha256": "9942999c37cdd960f287f7ea68ae87a3d33a39f866abe56f82f1f6b33211d23e"}, "downloads": -1, "filename": "PedalPi-Application-0.4.1.tar.gz", "has_sig": false, "md5_digest": "cddc5903f4ffa466964365d0cdb45685", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18160, "upload_time": "2018-03-15T19:31:03", "upload_time_iso_8601": "2018-03-15T19:31:03.589527Z", "url": "https://files.pythonhosted.org/packages/ca/c7/de40857b9f70cbc0a1e488261e7471fd58c962dec006aba97d9192d45a95/PedalPi-Application-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:54 2020"}