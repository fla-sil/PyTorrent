{"info": {"author": "Tim Bell", "author_email": "timothybell@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "=========\nIrritable\n=========\n\n\n.. image:: https://img.shields.io/pypi/v/irritable.svg\n        :target: https://pypi.python.org/pypi/irritable\n\n.. image:: https://img.shields.io/travis/timb07/irritable.svg\n        :target: https://travis-ci.org/timb07/irritable\n\n.. image:: https://readthedocs.org/projects/irritable/badge/?version=latest\n        :target: https://irritable.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://pyup.io/repos/github/timb07/irritable/shield.svg\n     :target: https://pyup.io/repos/github/timb07/irritable/\n     :alt: Updates\n\n\nIrritable implements broken iterators called irritables\n\n\n* Free software: BSD license\n* Documentation: https://irritable.readthedocs.io.\n\n\nFeatures\n--------\n\nIterators are defined in the docs_ ; the definition includes what\nconstitutes a broken implementation:\n\n    4.5. Iterator Types\n\n    [...]\n\n    Once an iterator\u2019s ``__next__()`` method raises StopIteration, it must\n    continue to do so on subsequent calls. Implementations that do not\n    obey this property are deemed broken.\n\n*Irritables* are like iterables, but deliberately broken. The following\ntypes of brokenness are supported:\n\n- after ``next()`` first raises ``StopIteration``, subsequent calls will\n  raise ``StopIrritation`` instead;\n\n- if the irritator is instantiated with ``resume=True``, calling\n  ``next()`` may raise ``StopIteration`` when items remain still remain in\n  the container; subsequent calls to ``next()`` will return the remaining\n  items as usual until none remain;\n\n- if the irritator is instantiated with ``repeat=True``, after the\n  iterator has been exhausted and raises ``StopIteration``, the iterator\n  is reset and can be iterated over again ad infinitum; in this case\n  ``next()`` will never raise ``StopIrritation``;\n\n\nCredits\n---------\n\nThe idea for irritators came during Trey Hunner's talk_ \"Loop better:\na deeper look at iteration in Python\" at DjangoCon AU 2017.\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n.. _docs: https://docs.python.org/3/library/stdtypes.html\n.. _talk: https://2017.pycon-au.org/schedule/presentation/55/\n\n\n=======\nHistory\n=======\n\n0.1.0 (2017-08-08)\n------------------\n\n* First release on PyPI.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/timb07/irritable", "keywords": "irritable", "license": "BSD license", "maintainer": "", "maintainer_email": "", "name": "irritable", "package_url": "https://pypi.org/project/irritable/", "platform": "", "project_url": "https://pypi.org/project/irritable/", "project_urls": {"Homepage": "https://github.com/timb07/irritable"}, "release_url": "https://pypi.org/project/irritable/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Irritable implements broken iterators called irritables", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"irritable\">\n<h2>Irritable</h2>\n<a href=\"https://pypi.python.org/pypi/irritable\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/irritable.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34bb44309bc6789d40cc4a8aff1eb11ac500d71f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f697272697461626c652e737667\"></a>\n<a href=\"https://travis-ci.org/timb07/irritable\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/timb07/irritable.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e4641fd6920eddffe3351d0cf9cf0308f299ad2e/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f74696d6230372f697272697461626c652e737667\"></a>\n<a href=\"https://irritable.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f152c9a1b1a4d339809c8a6c86977ce56468b7d/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f697272697461626c652f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://pyup.io/repos/github/timb07/irritable/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d9801e4b349aa9b79073bb6e969551382afd5c7/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f74696d6230372f697272697461626c652f736869656c642e737667\"></a>\n<p>Irritable implements broken iterators called irritables</p>\n<ul>\n<li>Free software: BSD license</li>\n<li>Documentation: <a href=\"https://irritable.readthedocs.io\" rel=\"nofollow\">https://irritable.readthedocs.io</a>.</li>\n</ul>\n<div id=\"features\">\n<h3>Features</h3>\n<p>Iterators are defined in the <a href=\"https://docs.python.org/3/library/stdtypes.html\" rel=\"nofollow\">docs</a> ; the definition includes what\nconstitutes a broken implementation:</p>\n<blockquote>\n<p>4.5. Iterator Types</p>\n<p>[\u2026]</p>\n<p>Once an iterator\u2019s <tt>__next__()</tt> method raises StopIteration, it must\ncontinue to do so on subsequent calls. Implementations that do not\nobey this property are deemed broken.</p>\n</blockquote>\n<p><em>Irritables</em> are like iterables, but deliberately broken. The following\ntypes of brokenness are supported:</p>\n<ul>\n<li>after <tt>next()</tt> first raises <tt>StopIteration</tt>, subsequent calls will\nraise <tt>StopIrritation</tt> instead;</li>\n<li>if the irritator is instantiated with <tt>resume=True</tt>, calling\n<tt>next()</tt> may raise <tt>StopIteration</tt> when items remain still remain in\nthe container; subsequent calls to <tt>next()</tt> will return the remaining\nitems as usual until none remain;</li>\n<li>if the irritator is instantiated with <tt>repeat=True</tt>, after the\niterator has been exhausted and raises <tt>StopIteration</tt>, the iterator\nis reset and can be iterated over again ad infinitum; in this case\n<tt>next()</tt> will never raise <tt>StopIrritation</tt>;</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>The idea for irritators came during Trey Hunner\u2019s <a href=\"https://2017.pycon-au.org/schedule/presentation/55/\" rel=\"nofollow\">talk</a> \u201cLoop better:\na deeper look at iteration in Python\u201d at DjangoCon AU 2017.</p>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1.0 (2017-08-08)</span></h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3079857, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2c0af357020ad41f9f9fffcc97db8320", "sha256": "d6091be1967c32aab5b670d1917c32e6580e691a8078ba6906174c71eb4581b8"}, "downloads": -1, "filename": "irritable-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2c0af357020ad41f9f9fffcc97db8320", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5001, "upload_time": "2017-08-08T01:18:22", "upload_time_iso_8601": "2017-08-08T01:18:22.763561Z", "url": "https://files.pythonhosted.org/packages/79/61/0f1f7d94defca7c78a43282894d3dd11050926697e4a9b24020bfcd4ae0c/irritable-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5f2491e04da8c244fa19b665b4c9863", "sha256": "d0e4084e074b18042115aa6dac2e8bcec5612a1f6373d4d9194cd4894983311a"}, "downloads": -1, "filename": "irritable-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c5f2491e04da8c244fa19b665b4c9863", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12520, "upload_time": "2017-08-08T01:18:24", "upload_time_iso_8601": "2017-08-08T01:18:24.853217Z", "url": "https://files.pythonhosted.org/packages/0a/ff/a5acbdf26ff2edbe6d37fe9de7ec06d8c4ba0a84bbfb21492df00037a0e6/irritable-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2c0af357020ad41f9f9fffcc97db8320", "sha256": "d6091be1967c32aab5b670d1917c32e6580e691a8078ba6906174c71eb4581b8"}, "downloads": -1, "filename": "irritable-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2c0af357020ad41f9f9fffcc97db8320", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5001, "upload_time": "2017-08-08T01:18:22", "upload_time_iso_8601": "2017-08-08T01:18:22.763561Z", "url": "https://files.pythonhosted.org/packages/79/61/0f1f7d94defca7c78a43282894d3dd11050926697e4a9b24020bfcd4ae0c/irritable-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5f2491e04da8c244fa19b665b4c9863", "sha256": "d0e4084e074b18042115aa6dac2e8bcec5612a1f6373d4d9194cd4894983311a"}, "downloads": -1, "filename": "irritable-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c5f2491e04da8c244fa19b665b4c9863", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12520, "upload_time": "2017-08-08T01:18:24", "upload_time_iso_8601": "2017-08-08T01:18:24.853217Z", "url": "https://files.pythonhosted.org/packages/0a/ff/a5acbdf26ff2edbe6d37fe9de7ec06d8c4ba0a84bbfb21492df00037a0e6/irritable-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:11 2020"}