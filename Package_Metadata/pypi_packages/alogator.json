{"info": {"author": "arteria GmbH", "author_email": "admin@arteria.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Framework :: Django :: 1.4", "Framework :: Django :: 1.5", "Framework :: Django :: 1.6", "Framework :: Django :: 1.7", "Framework :: Django :: 1.8", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "Alogator\n============\n\nAlogator is an aggregated logging actor system.\n\n\n.. contents:: Table of Contents\n\n\nInstallation\n------------\n\nTo get the latest stable release from PyPi\n\n.. code-block:: bash\n\n    pip install alogator\n\nTo get the latest commit from GitHub\n\n.. code-block:: bash\n\n    pip install -e git+git://github.com/arteria/alogator.git#egg=alogator\n\n.. TODO: Describe further installation steps (edit / remove the examples below):\n\nAdd ``alogator`` to your ``INSTALLED_APPS`` and define a logger\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...,\n        'alogator',\n    )\n\n    LOGFILE_PATH = os.path.join(os.path.join(BASE_DIR, 'logs/'), \"alogator.log\")\n\n    LOGGING = {\n        'version': 1,\n        'disable_existing_loggers': False,\n        'filters': {\n            'require_debug_false': {\n                '()': 'django.utils.log.RequireDebugFalse'\n            }\n        },\n        'formatters': {\n            'standard': {\n                'format': \"[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s\",\n                'datefmt': \"%d/%b/%Y %H:%M:%S\"\n            },\n        },\n        'handlers': {\n            'logfile': {\n                'level': 'DEBUG',\n                'class': 'logging.handlers.RotatingFileHandler',\n                'filename': LOGFILE_PATH,\n                'maxBytes': 1000000,\n                'backupCount': 0,\n                'formatter': 'standard',\n            }\n        },\n        'loggers': {\n            'alogator': {\n                'handlers': ['logfile'],\n                'level': 'DEBUG',\n            },\n        }\n    }\n\n\n\n\nDon't forget to create the tables for your database\n\n.. code-block:: bash\n\n    ./manage.py syncdb alogator\n    # python manage.py migrate\n\n\nUsage\n-----\n\nSetup your logfiles, search patterns and actors in the admin backend.\n\nTo run one (scan all logfiles for patterns) just call the ``scanlogfiles`` management command.\n\n.. code-block:: bash\n    \n    python manage.py scanlogfiles\n\nYou can use ``alogator_cli`` to check the log files in a project. Simple add paths to settings files as arguments. Be aware that you have to run the project, so you need to first activate your virtualenv if you have one.\n\n.. code-block:: bash\n\n    # if you have a virtualenv\n    . /path/to/env/bin/activate\n\n    alogator_cli /path/to/project/settings.py\n\nTo run this continously you could setup a cronjob. For example, to run this every other minute use\n\n.. code-block:: bash\n\n    crontab -e\n    \nThan add \n\n.. code-block:: bash\n\n    */2 * * * * /path/to/your/manage.py scanlogfiles\n    \nYou may have to activate your virtualenv depending on your setup.\n\n\n\nTODO\n----\n\n* Customizable temporary working dir instead of /tmp\n* Customizable subject, eg. [Alogator] (to filter inbox)\n* Add \"To mute this actor, visit...\" in message/email.\n\nHistroy\n-------\n\nPlease refer to CHANGELOG.txt\n\n\nContribute\n----------\n\nIf you want to contribute to this project, simply send us a pull request. Thanks. :)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/arteria/alogator", "keywords": "django,app,logging,event,action,aggregator,alogator", "license": "The MIT License", "maintainer": null, "maintainer_email": null, "name": "alogator", "package_url": "https://pypi.org/project/alogator/", "platform": "OS Independent", "project_url": "https://pypi.org/project/alogator/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/arteria/alogator"}, "release_url": "https://pypi.org/project/alogator/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Alogator is an aggregated logging actor system.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Alogator is an aggregated logging actor system.</p>\n<div id=\"table-of-contents\">\n<p>Table of Contents</p>\n<ul>\n<li><a href=\"#installation\" id=\"id1\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" id=\"id2\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#todo\" id=\"id3\" rel=\"nofollow\">TODO</a></li>\n<li><a href=\"#histroy\" id=\"id4\" rel=\"nofollow\">Histroy</a></li>\n<li><a href=\"#contribute\" id=\"id5\" rel=\"nofollow\">Contribute</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Installation</a></h2>\n<p>To get the latest stable release from PyPi</p>\n<pre>pip install alogator\n</pre>\n<p>To get the latest commit from GitHub</p>\n<pre>pip install -e git+git://github.com/arteria/alogator.git#egg<span class=\"o\">=</span>alogator\n</pre>\n<p>Add <tt>alogator</tt> to your <tt>INSTALLED_APPS</tt> and define a logger</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'alogator'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">LOGFILE_PATH</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">BASE_DIR</span><span class=\"p\">,</span> <span class=\"s1\">'logs/'</span><span class=\"p\">),</span> <span class=\"s2\">\"alogator.log\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">LOGGING</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'disable_existing_loggers'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s1\">'filters'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'require_debug_false'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'()'</span><span class=\"p\">:</span> <span class=\"s1\">'django.utils.log.RequireDebugFalse'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'formatters'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'standard'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'format'</span><span class=\"p\">:</span> <span class=\"s2\">\"[</span><span class=\"si\">%(asctime)s</span><span class=\"s2\">] </span><span class=\"si\">%(levelname)s</span><span class=\"s2\"> [</span><span class=\"si\">%(name)s</span><span class=\"s2\">:</span><span class=\"si\">%(lineno)s</span><span class=\"s2\">] </span><span class=\"si\">%(message)s</span><span class=\"s2\">\"</span><span class=\"p\">,</span>\n            <span class=\"s1\">'datefmt'</span><span class=\"p\">:</span> <span class=\"s2\">\"</span><span class=\"si\">%d</span><span class=\"s2\">/%b/%Y %H:%M:%S\"</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'logfile'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'class'</span><span class=\"p\">:</span> <span class=\"s1\">'logging.handlers.RotatingFileHandler'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'filename'</span><span class=\"p\">:</span> <span class=\"n\">LOGFILE_PATH</span><span class=\"p\">,</span>\n            <span class=\"s1\">'maxBytes'</span><span class=\"p\">:</span> <span class=\"mi\">1000000</span><span class=\"p\">,</span>\n            <span class=\"s1\">'backupCount'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"s1\">'formatter'</span><span class=\"p\">:</span> <span class=\"s1\">'standard'</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'loggers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'alogator'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'logfile'</span><span class=\"p\">],</span>\n            <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Don\u2019t forget to create the tables for your database</p>\n<pre>./manage.py syncdb alogator\n<span class=\"c1\"># python manage.py migrate</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Usage</a></h2>\n<p>Setup your logfiles, search patterns and actors in the admin backend.</p>\n<p>To run one (scan all logfiles for patterns) just call the <tt>scanlogfiles</tt> management command.</p>\n<pre>python manage.py scanlogfiles\n</pre>\n<p>You can use <tt>alogator_cli</tt> to check the log files in a project. Simple add paths to settings files as arguments. Be aware that you have to run the project, so you need to first activate your virtualenv if you have one.</p>\n<pre><span class=\"c1\"># if you have a virtualenv\n</span>. /path/to/env/bin/activate\n\nalogator_cli /path/to/project/settings.py\n</pre>\n<p>To run this continously you could setup a cronjob. For example, to run this every other minute use</p>\n<pre>crontab -e\n</pre>\n<p>Than add</p>\n<pre>*/2 * * * * /path/to/your/manage.py scanlogfiles\n</pre>\n<p>You may have to activate your virtualenv depending on your setup.</p>\n</div>\n<div id=\"todo\">\n<h2><a href=\"#id3\" rel=\"nofollow\">TODO</a></h2>\n<ul>\n<li>Customizable temporary working dir instead of /tmp</li>\n<li>Customizable subject, eg. [Alogator] (to filter inbox)</li>\n<li>Add \u201cTo mute this actor, visit\u2026\u201d in message/email.</li>\n</ul>\n</div>\n<div id=\"histroy\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Histroy</a></h2>\n<p>Please refer to CHANGELOG.txt</p>\n</div>\n<div id=\"contribute\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Contribute</a></h2>\n<p>If you want to contribute to this project, simply send us a pull request. Thanks. :)</p>\n</div>\n\n          </div>"}, "last_serial": 1557965, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "4004df59835a81f30c64c781c26fcd7e", "sha256": "637feed01c796921a1a62dd67bd47ab046f4ddd55ac6206ccbbe58ac85365f00"}, "downloads": -1, "filename": "alogator-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4004df59835a81f30c64c781c26fcd7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10726, "upload_time": "2015-05-22T13:41:42", "upload_time_iso_8601": "2015-05-22T13:41:42.448358Z", "url": "https://files.pythonhosted.org/packages/ea/89/d4150b75dc6ed29933906508985dfd702a8ee91e8f00d62bdd0758c11b2b/alogator-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4004df59835a81f30c64c781c26fcd7e", "sha256": "637feed01c796921a1a62dd67bd47ab046f4ddd55ac6206ccbbe58ac85365f00"}, "downloads": -1, "filename": "alogator-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4004df59835a81f30c64c781c26fcd7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10726, "upload_time": "2015-05-22T13:41:42", "upload_time_iso_8601": "2015-05-22T13:41:42.448358Z", "url": "https://files.pythonhosted.org/packages/ea/89/d4150b75dc6ed29933906508985dfd702a8ee91e8f00d62bdd0758c11b2b/alogator-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:19:20 2020"}