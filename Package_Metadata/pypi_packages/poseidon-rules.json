{"info": {"author": "weaming", "author_email": "garden.yuen@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Poseidon Rules\n\nValidate complex json data against rules you defined.\n\n## Philosophy of this library\n\nBusiness code has complex logic, and they can be wrapped deeply, so we need a DSL to define these rules in one place.\n\nEvery logic can have two basci relation, `and` or `or`, but the `not` logic is left to the rule evaluation written by developer.\n\nOnce one rule is not satisfied, the whole logic rule will be falsy, call the help function `get_reason_stack` will find the deepest name of rule, aka the exception message wrapped in the `RuleFail`.\n\nRules is defined in dict format, which is bad compared to the Haskell lazy evaluation. So you can pass a closure function to the \"must\" or \"else_must\", which will be called when \"if\" is evaluated to true (\"must\") or false (\"else_must\") at runtime, instead of define-time. This feature make you free from caring about the exception in some situations.\n\n## Usage\n\nSee [test](poseidon_rules/test_statement.py)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/weaming/poseidon-rules", "keywords": "validate,json", "license": "", "maintainer": "", "maintainer_email": "", "name": "poseidon-rules", "package_url": "https://pypi.org/project/poseidon-rules/", "platform": "", "project_url": "https://pypi.org/project/poseidon-rules/", "project_urls": {"Bug Reports": "https://github.com/weaming/poseidon-rules", "Homepage": "https://github.com/weaming/poseidon-rules", "Source": "https://github.com/weaming/poseidon-rules"}, "release_url": "https://pypi.org/project/poseidon-rules/0.1.4/", "requires_dist": ["dictate (==0.2.0)"], "requires_python": "", "summary": "validate complex json data against rules you defined", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Poseidon Rules</h1>\n<p>Validate complex json data against rules you defined.</p>\n<h2>Philosophy of this library</h2>\n<p>Business code has complex logic, and they can be wrapped deeply, so we need a DSL to define these rules in one place.</p>\n<p>Every logic can have two basci relation, <code>and</code> or <code>or</code>, but the <code>not</code> logic is left to the rule evaluation written by developer.</p>\n<p>Once one rule is not satisfied, the whole logic rule will be falsy, call the help function <code>get_reason_stack</code> will find the deepest name of rule, aka the exception message wrapped in the <code>RuleFail</code>.</p>\n<p>Rules is defined in dict format, which is bad compared to the Haskell lazy evaluation. So you can pass a closure function to the \"must\" or \"else_must\", which will be called when \"if\" is evaluated to true (\"must\") or false (\"else_must\") at runtime, instead of define-time. This feature make you free from caring about the exception in some situations.</p>\n<h2>Usage</h2>\n<p>See <a href=\"poseidon_rules/test_statement.py\" rel=\"nofollow\">test</a></p>\n\n          </div>"}, "last_serial": 6338008, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "70ecc15da9a3af67e77df9d83de0abe3", "sha256": "c4e9cb0a10a3cfb58a9d463a3f27fd583e87aee6fdc0f3772e93e84f2f626a87"}, "downloads": -1, "filename": "poseidon_rules-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "70ecc15da9a3af67e77df9d83de0abe3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4787, "upload_time": "2019-09-11T06:24:40", "upload_time_iso_8601": "2019-09-11T06:24:40.172437Z", "url": "https://files.pythonhosted.org/packages/ec/6d/af2a7d8bdec1d791a3ac76465a4317848b73792f3f2b692ac8b57f993823/poseidon_rules-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "4ad4c06bd3e836ec74ae2e6cd045e06b", "sha256": "db51b818e2781b34c8495fce69e25abc7ac6f2437ba01f0234c79d6184c6ed5d"}, "downloads": -1, "filename": "poseidon_rules-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4ad4c06bd3e836ec74ae2e6cd045e06b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5660, "upload_time": "2019-12-20T09:29:30", "upload_time_iso_8601": "2019-12-20T09:29:30.973178Z", "url": "https://files.pythonhosted.org/packages/06/87/1c5af644c5105b0c167a7a8a7da8ab0e5b30aef9ba4385f2cc0678b88b3a/poseidon_rules-0.1.4-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4ad4c06bd3e836ec74ae2e6cd045e06b", "sha256": "db51b818e2781b34c8495fce69e25abc7ac6f2437ba01f0234c79d6184c6ed5d"}, "downloads": -1, "filename": "poseidon_rules-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4ad4c06bd3e836ec74ae2e6cd045e06b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5660, "upload_time": "2019-12-20T09:29:30", "upload_time_iso_8601": "2019-12-20T09:29:30.973178Z", "url": "https://files.pythonhosted.org/packages/06/87/1c5af644c5105b0c167a7a8a7da8ab0e5b30aef9ba4385f2cc0678b88b3a/poseidon_rules-0.1.4-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:51:25 2020"}