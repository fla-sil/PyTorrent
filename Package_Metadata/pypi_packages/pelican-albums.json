{"info": {"author": "Ingmar Steen", "author_email": "iksteen@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Plugins", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Pelican-Albums\n==============\n\nPelican-Albums is a plugin for Pelican that helps you to easily manage your\nphoto albums (or galleries).\n\nFeatures\n--------\n\n- Easily reference an image in your album path using {image}album/image.jpg.\n- Automatically create a thumbnail for an image in your album path using\n  ``{thumbnail}album/image.jpg`` or ``{thumbnail:NxN@Q}album/image.jpg``.\n- Automatically create album pages by adding a page to an album directory.\n\nInstallation\n------------\n\nTo install pelican-albums to your pelican installation use::\n\n    $ pip install pelican-albums\n\nThen, add 'pelican_albums' to the plugin list in your publishconf.py::\n\n    PLUGINS = ['pelican_albums']\n\nSettings\n--------\n\nPelican-albums provides a couple of settings:\n\n- ``ALBUM_PATH`` (*images*): What directory inside ``content`` contains your\n  albums.\n- ``THUMBNAIL_OUTPUT_PATH`` (*images/thumbnails*): What directory inside\n  the ``output`` directory will be used to store thumbnails.\n- ``THUMBNAIL_OUTPUT_FORMAT`` (*JPEG*): As what format the thumbnails should\n  be created (*JPEG* or *PNG*).\n- ``THUMBNAIL_DEFAULT_SIZE`` (*192x192*): What the default size of a\n  thumbnail should be.\n- ``THUMBNAIL_DEFAULT_QUALITY`` (*80*): What the default quality of a\n  JPEG thumbnail should be.\n- ``ALBUM_SAVE_AS`` (*albums/{slug}.html*): Where to store album indexes.\n- ``ALBUM_URL`` (*albums/{slug}.html*):  The URL scheme to reference an album.\n\nAlbums\n------\n\nTo create a new album, just create a new directory in the ``ALBUM_PATH`` (the\ndefault is *content/images*) and place the images inside it. Please note that\npelican-albums does not offer facilities to rotate or resize the images for\nyou (except for creating thumbnails) at this moment.\n\nThumbnails\n----------\n\nPelican-albums will automatically generate the requested thumbnails at the\nrequested sizes. It will check the ``mtime`` of the original file to that\nof the thumbnail to check if the thumbnail should be refreshed.\n\nYou can specify the size and quality of a thumbnail on different places:\n\n- Inside the {thumbnail} tag: {thumbnail:128x128@80}album/image.jpg\n- In the metadata of the content: Thumbnail-Size: 128x128@80\n- As a parameter to the ``album.thumbnail(spec=None)`` in your templates.\n- In the global pelican settings.\n\nA thumbnail size specifier can have a number of different forms:\n\n- *WIDTHxHEIGHT* -- Crop and resize an image until a thumbnail of these\n  exact dimensions is the result (f.e. 192x192).\n- *DIMENSION* -- Shorthand for *DIMENSIONxDIMENSION* (f.e. 192).\n- *WIDTHx* -- Create a thumbnail with the given width but keep the original\n  aspect ratio so the height might vary (f.e. 192x).\n- *xHEIGHT* -- Create a thumbnail with the given height but keep the original\n  aspect ratio so the width might vary (f.e. x192).\n\nYou can optionally add an *@nn* suffix to the size to indicate the thumbnail\nquality that should be used (f.e. 192@80 for a 192x192 thumbnail at 80%\nquality). This specifies the JPEG file quality and does not apply to PNG\nthumbnails.\n\nAlbum pages\n-----------\n\nBy creating a page inside an album folder, a page will be generated using the\n``album.html`` template. Both the ``album`` and the ``page`` will be available\ninside the template. The ``page`` object works exactly as the regular pelican\npage objects.\n\nThe ``album`` object has several properties:\n\n- ``images`` -- The images contained in this album.\n- ``albums`` -- A list of sub-albums (if any).\n- ``pages`` -- The album pages for this album (you can create multiple pages\n  for each album if you want).\n\nThe ``image`` objects returned by ``album.images`` have the following\nproperties:\n\n- ``album`` -- The album this image belongs to.\n- ``filename`` -- The filename of this image.\n- ``url`` -- The URL of this image relative to the site URL.\n- ``thumbnail(spec=None)`` -- A method that returns the URL of a thumbnail of\n  the given (or default) size and quality relative to the site URL.\n\nalbum.html\n----------\n\nAn example template for album pages (save this as *album.html* inside your\ntemplates directory)::\n\n    {% extends \"base.html\" %}\n    {% block title %}{{ page.title }}{%endblock%}\n    {% block content %}\n    <article class=\"page\">\n        <header>\n            <div class=\"title\">\n                {{ page.title }}\n            </div>\n        </header>\n\n        <div class=\"entry-content\">\n            {{ page.content }}\n        </div>\n\n        <div class=\"album\">\n            {% for image in album.images %}\n                <a href=\"{{ SITEURL }}/{{ image.url }}\">\n                    <img src=\"{{ SITEURL }}/{{ image.thumbnail(page.metadata.get('thumbnail-size')) }}\"\n                         title=\"{{ image.filename }}\" />\n                </a>\n            {% endfor %}\n        </div>\n    </article>\n    {% endblock %}\n\nRelease history\n###############\n\n0.6.1 (2019-02-23)\n==================\n\n* Add support for pelican 4.0.0.\n\n0.6.0 (2015-04-28)\n==================\n\n* Allow using PNG files as thumbnails instead of JPEG.\n* Allow specifying the thumbnail quality.\n* Increase default quality to 80%.\n\n0.5.1 (2015-04-13)\n==================\n\n* Automatically exclude the album path from the article and page generators.\n* Documentation improvements.\n\n0.5.0 (2015-04-12)\n==================\n\n* Initial release.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/iksteen/pelican-albums/tarball/v0.6.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/iksteen/pelican-albums/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pelican-albums", "package_url": "https://pypi.org/project/pelican-albums/", "platform": "", "project_url": "https://pypi.org/project/pelican-albums/", "project_urls": {"Download": "https://github.com/iksteen/pelican-albums/tarball/v0.6.1", "Homepage": "https://github.com/iksteen/pelican-albums/"}, "release_url": "https://pypi.org/project/pelican-albums/0.6.1/", "requires_dist": ["pillow"], "requires_python": "", "summary": "Automatic photo album generation and thumbnailing for Pelican.", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pelican-albums\">\n<h2>Pelican-Albums</h2>\n<p>Pelican-Albums is a plugin for Pelican that helps you to easily manage your\nphoto albums (or galleries).</p>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Easily reference an image in your album path using {image}album/image.jpg.</li>\n<li>Automatically create a thumbnail for an image in your album path using\n<tt>{thumbnail}album/image.jpg</tt> or <tt>{thumbnail:NxN@Q}album/image.jpg</tt>.</li>\n<li>Automatically create album pages by adding a page to an album directory.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>To install pelican-albums to your pelican installation use:</p>\n<pre>$ pip install pelican-albums\n</pre>\n<p>Then, add \u2018pelican_albums\u2019 to the plugin list in your publishconf.py:</p>\n<pre>PLUGINS = ['pelican_albums']\n</pre>\n</div>\n<div id=\"settings\">\n<h3>Settings</h3>\n<p>Pelican-albums provides a couple of settings:</p>\n<ul>\n<li><tt>ALBUM_PATH</tt> (<em>images</em>): What directory inside <tt>content</tt> contains your\nalbums.</li>\n<li><tt>THUMBNAIL_OUTPUT_PATH</tt> (<em>images/thumbnails</em>): What directory inside\nthe <tt>output</tt> directory will be used to store thumbnails.</li>\n<li><tt>THUMBNAIL_OUTPUT_FORMAT</tt> (<em>JPEG</em>): As what format the thumbnails should\nbe created (<em>JPEG</em> or <em>PNG</em>).</li>\n<li><tt>THUMBNAIL_DEFAULT_SIZE</tt> (<em>192x192</em>): What the default size of a\nthumbnail should be.</li>\n<li><tt>THUMBNAIL_DEFAULT_QUALITY</tt> (<em>80</em>): What the default quality of a\nJPEG thumbnail should be.</li>\n<li><tt>ALBUM_SAVE_AS</tt> (<em>albums/{slug}.html</em>): Where to store album indexes.</li>\n<li><tt>ALBUM_URL</tt> (<em>albums/{slug}.html</em>):  The URL scheme to reference an album.</li>\n</ul>\n</div>\n<div id=\"albums\">\n<h3>Albums</h3>\n<p>To create a new album, just create a new directory in the <tt>ALBUM_PATH</tt> (the\ndefault is <em>content/images</em>) and place the images inside it. Please note that\npelican-albums does not offer facilities to rotate or resize the images for\nyou (except for creating thumbnails) at this moment.</p>\n</div>\n<div id=\"thumbnails\">\n<h3>Thumbnails</h3>\n<p>Pelican-albums will automatically generate the requested thumbnails at the\nrequested sizes. It will check the <tt>mtime</tt> of the original file to that\nof the thumbnail to check if the thumbnail should be refreshed.</p>\n<p>You can specify the size and quality of a thumbnail on different places:</p>\n<ul>\n<li>Inside the {thumbnail} tag: {thumbnail:128x128@80}album/image.jpg</li>\n<li>In the metadata of the content: Thumbnail-Size: <a href=\"mailto:128x128%4080\">128x128<span>@</span>80</a></li>\n<li>As a parameter to the <tt>album.thumbnail(spec=None)</tt> in your templates.</li>\n<li>In the global pelican settings.</li>\n</ul>\n<p>A thumbnail size specifier can have a number of different forms:</p>\n<ul>\n<li><em>WIDTHxHEIGHT</em> \u2013 Crop and resize an image until a thumbnail of these\nexact dimensions is the result (f.e. 192x192).</li>\n<li><em>DIMENSION</em> \u2013 Shorthand for <em>DIMENSIONxDIMENSION</em> (f.e. 192).</li>\n<li><em>WIDTHx</em> \u2013 Create a thumbnail with the given width but keep the original\naspect ratio so the height might vary (f.e. 192x).</li>\n<li><em>xHEIGHT</em> \u2013 Create a thumbnail with the given height but keep the original\naspect ratio so the width might vary (f.e. x192).</li>\n</ul>\n<p>You can optionally add an <em>@nn</em> suffix to the size to indicate the thumbnail\nquality that should be used (f.e. <a href=\"mailto:192%4080\">192<span>@</span>80</a> for a 192x192 thumbnail at 80%\nquality). This specifies the JPEG file quality and does not apply to PNG\nthumbnails.</p>\n</div>\n<div id=\"album-pages\">\n<h3>Album pages</h3>\n<p>By creating a page inside an album folder, a page will be generated using the\n<tt>album.html</tt> template. Both the <tt>album</tt> and the <tt>page</tt> will be available\ninside the template. The <tt>page</tt> object works exactly as the regular pelican\npage objects.</p>\n<p>The <tt>album</tt> object has several properties:</p>\n<ul>\n<li><tt>images</tt> \u2013 The images contained in this album.</li>\n<li><tt>albums</tt> \u2013 A list of sub-albums (if any).</li>\n<li><tt>pages</tt> \u2013 The album pages for this album (you can create multiple pages\nfor each album if you want).</li>\n</ul>\n<p>The <tt>image</tt> objects returned by <tt>album.images</tt> have the following\nproperties:</p>\n<ul>\n<li><tt>album</tt> \u2013 The album this image belongs to.</li>\n<li><tt>filename</tt> \u2013 The filename of this image.</li>\n<li><tt>url</tt> \u2013 The URL of this image relative to the site URL.</li>\n<li><tt>thumbnail(spec=None)</tt> \u2013 A method that returns the URL of a thumbnail of\nthe given (or default) size and quality relative to the site URL.</li>\n</ul>\n</div>\n<div id=\"album-html\">\n<h3>album.html</h3>\n<p>An example template for album pages (save this as <em>album.html</em> inside your\ntemplates directory):</p>\n<pre>{% extends \"base.html\" %}\n{% block title %}{{ page.title }}{%endblock%}\n{% block content %}\n&lt;article class=\"page\"&gt;\n    &lt;header&gt;\n        &lt;div class=\"title\"&gt;\n            {{ page.title }}\n        &lt;/div&gt;\n    &lt;/header&gt;\n\n    &lt;div class=\"entry-content\"&gt;\n        {{ page.content }}\n    &lt;/div&gt;\n\n    &lt;div class=\"album\"&gt;\n        {% for image in album.images %}\n            &lt;a href=\"{{ SITEURL }}/{{ image.url }}\"&gt;\n                &lt;img src=\"{{ SITEURL }}/{{ image.thumbnail(page.metadata.get('thumbnail-size')) }}\"\n                     title=\"{{ image.filename }}\" /&gt;\n            &lt;/a&gt;\n        {% endfor %}\n    &lt;/div&gt;\n&lt;/article&gt;\n{% endblock %}\n</pre>\n<div id=\"release-history\">\n<h4>Release history</h4>\n</div>\n</div>\n</div>\n<div id=\"id1\">\n<h2>0.6.1 (2019-02-23)</h2>\n<ul>\n<li>Add support for pelican 4.0.0.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>0.6.0 (2015-04-28)</h2>\n<ul>\n<li>Allow using PNG files as thumbnails instead of JPEG.</li>\n<li>Allow specifying the thumbnail quality.</li>\n<li>Increase default quality to 80%.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>0.5.1 (2015-04-13)</h2>\n<ul>\n<li>Automatically exclude the album path from the article and page generators.</li>\n<li>Documentation improvements.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h2>0.5.0 (2015-04-12)</h2>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4859117, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "a832476bbdedd92f26cb9e749fb74376", "sha256": "6cba2132aefb20937d56d9ae3237272586891e77fc11b64978855abd7ba81afa"}, "downloads": -1, "filename": "pelican-albums-0.5.0.tar.gz", "has_sig": false, "md5_digest": "a832476bbdedd92f26cb9e749fb74376", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5659, "upload_time": "2015-04-12T09:45:31", "upload_time_iso_8601": "2015-04-12T09:45:31.674745Z", "url": "https://files.pythonhosted.org/packages/cd/bb/63fef0f6cb4c6a64ea5dc4f6ef865f301a3fe82ee6076cbc7f57858a86e5/pelican-albums-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "95b484595b2517ab8e6f9b75f322c52f", "sha256": "1bfdaee2e05954c7b9cc85f8638b0604a2905272ce1d6e58e4b25da07bee69d0"}, "downloads": -1, "filename": "pelican-albums-0.5.1.tar.gz", "has_sig": false, "md5_digest": "95b484595b2517ab8e6f9b75f322c52f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5942, "upload_time": "2015-04-13T10:12:00", "upload_time_iso_8601": "2015-04-13T10:12:00.058560Z", "url": "https://files.pythonhosted.org/packages/52/57/30e4ea4645a506d6b997282b815082179d593e0695f7b040e87a8b764cdb/pelican-albums-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "3e60c1c7cee2eac5d33052d26c69feaa", "sha256": "392784b3c435d928d695b36f894d3f9d249b11a1ea279fc2e6b9a5eaf1b140c0"}, "downloads": -1, "filename": "pelican-albums-0.6.0.tar.gz", "has_sig": false, "md5_digest": "3e60c1c7cee2eac5d33052d26c69feaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6479, "upload_time": "2015-04-28T18:57:25", "upload_time_iso_8601": "2015-04-28T18:57:25.575176Z", "url": "https://files.pythonhosted.org/packages/11/a8/dbb31fc4a8febb268da5dc3ae56d13c190e20c11b7ba9ca7d40e1698d15c/pelican-albums-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "5b2e75dcf178cd67b1160e18b0b0e3a3", "sha256": "372065129b86a8d100ecd5b6276ca330d8b859f0c37a983da9d8cf0134a82de5"}, "downloads": -1, "filename": "pelican_albums-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5b2e75dcf178cd67b1160e18b0b0e3a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7219, "upload_time": "2019-02-23T20:02:22", "upload_time_iso_8601": "2019-02-23T20:02:22.166706Z", "url": "https://files.pythonhosted.org/packages/8a/87/20e4345626bff85146bdea41af7cfecdf8e4007c5bf721f01025f3838331/pelican_albums-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c803cd042f3f0a7b7e2cd922589069f", "sha256": "3c8fb3bfb587221d8a99744b58a794940d87c8e56d02e8aa608eba7b09a02451"}, "downloads": -1, "filename": "pelican-albums-0.6.1.tar.gz", "has_sig": false, "md5_digest": "4c803cd042f3f0a7b7e2cd922589069f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6422, "upload_time": "2019-02-23T20:02:24", "upload_time_iso_8601": "2019-02-23T20:02:24.319517Z", "url": "https://files.pythonhosted.org/packages/bc/31/9aef64a7aa22a625a268426c061c8bc016f7f3fdbb187579e6056f3f8817/pelican-albums-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5b2e75dcf178cd67b1160e18b0b0e3a3", "sha256": "372065129b86a8d100ecd5b6276ca330d8b859f0c37a983da9d8cf0134a82de5"}, "downloads": -1, "filename": "pelican_albums-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5b2e75dcf178cd67b1160e18b0b0e3a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7219, "upload_time": "2019-02-23T20:02:22", "upload_time_iso_8601": "2019-02-23T20:02:22.166706Z", "url": "https://files.pythonhosted.org/packages/8a/87/20e4345626bff85146bdea41af7cfecdf8e4007c5bf721f01025f3838331/pelican_albums-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c803cd042f3f0a7b7e2cd922589069f", "sha256": "3c8fb3bfb587221d8a99744b58a794940d87c8e56d02e8aa608eba7b09a02451"}, "downloads": -1, "filename": "pelican-albums-0.6.1.tar.gz", "has_sig": false, "md5_digest": "4c803cd042f3f0a7b7e2cd922589069f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6422, "upload_time": "2019-02-23T20:02:24", "upload_time_iso_8601": "2019-02-23T20:02:24.319517Z", "url": "https://files.pythonhosted.org/packages/bc/31/9aef64a7aa22a625a268426c061c8bc016f7f3fdbb187579e6056f3f8817/pelican-albums-0.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:42 2020"}