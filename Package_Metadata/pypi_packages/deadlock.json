{"info": {"author": "Cathal Garvey", "author_email": "cathalgarvey@cathalgarvey.me", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Utilities"], "description": "Deadlock\n========\n\nDead-simple, Pythonic Encryption after `miniLock.io <https://minilock.io>`__\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nby Cathal Garvey, Copyright 2014, proudly licensed under the GNU Affero\nGeneral Public License\n\n-  Twitter: [@onetruecathal](https://twitter.com/onetruecathal)\n-  Email: cathalgarvey@cathalgarvey.me\n-  miniLock ID: JjmYYngs7akLZUjkvFkuYdsZ3PyPHSZRBKNm6qTYKZfAM\n-  Gittip: |gittip|\n-  Bitcoin:\n   `1QJQaR9C682HMGKHvEHWxmCvdX7SqdKzXe <bitcoin://1QJQaR9C682HMGKHvEHWxmCvdX7SqdKzXe>`__\n\n.. figure:: icons/deadlock_icon.png\n   :alt: Sorry for killing your avi, Nadim\n\nWhat's this?\n------------\n\nGo to `minilock.io <https://minilock.io>`__ to learn more about\nminiLock. *deadlock* is an implementation of the miniLock protocol, and\nas such it is compatible with miniLock. You can send and receive files\nfrom people using miniLock without having to install Chrome (closed\nsource, spyware-rich browser) or Chromium (technically open source but\nby-default-still-pretty-invasive browser).\n\nIn addition to the base function of sending and receiving miniLock'd\nfiles, which ought to be secure against snooping eyes on the wire and to\nprovide you and your loved/liked/other ones with a measure of deserved\nhuman privacy, *deadlock* comes with some other features you might like:\n\n-  Auto-zipping of directories when encrypting, making it easy to send\n   folders to friends.\n-  Fast underlying C implementations of core miniLock algorithms.\n-  Written for ease of use as a Python module, not only as a standalone\n   application.\n-  No browser, easily scripted, automated or pipelined.\n-  \"Petnames\" allowing you to save IDs as easily-memorable friend names\n   or emails\n-  *Highly insecure* private key storage, allowing trivial\n   encryption/decryption, including iterating through all local private\n   keys and attempting decryption with each.\n-  Early features for throwaway ultra-high-security addresses.\n-  Early features for \"vanity\" addresses starting or ending in a chosen\n   word (warning: may take until heat-death of the universe)\n\nHow do I install/use this?\n--------------------------\n\n*deadlock* is, at present, a Terminal only application, written in and\nfor Python 3 (may only work on versions 3.3 and above; poorly tested).\nThe best way to install it is to use pip:\n\n::\n\n    sudo pip install deadlock\n\n..provided that you have the necessary system-level dependencies (C\ncompiler and supporting libraries), this ought to pull in the required\ncryptographic modules from PyPI and build them, then install *deadlock*.\n\nOnce installed, *deadlock* will be available as a Python module and also\nas a script, ``deadlock``. Try ``deadlock --help`` for guidance on\nusage.\n\n*deadlock* will probably work on any platform with a C compiler for the\nrequired modules, but I have no interest in supporting closed,\nspyware-rich operating systems like WinMac, so don't ask. If it doesn't\nwork on those platforms, then you can always fix it and send me a pull\nrequest. I don't accept pull requests for legacy support (e.g. Python\nversions prior to 3.2), sorry; the code gets too messy.\n\nWho do I contact for support or to complain?\n--------------------------------------------\n\nNobody. This software is provided without warranty of any kind. It\nworks, for me, and I'm pretty sure it's secure, but I'm not going to\ncertify it as such and you shouldn't use it if you really need security\nto protect you from people with the means and motive to harm or imprison\nyou.\n\nDirections\n----------\n\nPlanned, desired or future features: \\* Test suite! \\* Tidier API for\nalternative uses of the miniLock encryption format, for P2P or mail\nclient tie-in, or for RPC message passing. \\* Cleaner code structure;\nbreak lots of functionality out of crypto.py/core.py into a new utils.py\nfile, make core.py \"dumb glue code\" only. \\* Fully integrate\nhigh-security keys and vanity keys, including multiprocessing for\nfacilitating vanity key generation on multi-core machines. Estimated\nprogress summaries for vanity key generation; time until statistically\nexpected result, etc. \\* Pure-Python fallbacks for some cryptographic\ndependencies for platforms that pose a challenge to native C\ncompilation; Android, embedded platforms, etc. - Starting with\ntweetnacl.c/.js -> tweetnacl.py - Pure Python Blake2 already exists -\nPure Python scrypt probably exists\n\nNot currently planned:\n\n-  Contemplated adding extensions to the fileInfo dictionary within\n   decryptInfo entries, but doing so would change the length of these\n   entries which are at present highly predictable; this would mean that\n   decryptInfo length could be used to infer which software was used to\n   create a miniLock file, whether miniLock or deadlock. So, don't\n   suggest such features, as they would partially compromise anonymity.\n-  Future versions of miniLock protocol ought to include a \"mimeType\"\n   fileInfo key to hint to recipients whether a miniLock file is a\n   plaintext item to be displayed, or a file to be saved; doing so would\n   facilitate email integration of miniLock as a potential PGP\n   successor. Again as above, such extensions would at present\n   compromise anonymity somewhat.\n\n.. |gittip| image:: https://img.shields.io/gittip/onetruecathal.svg\n   :target: https://www.gittip.com/onetruecathal/", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cathalgarvey/deadlock", "keywords": null, "license": "GNU Affero General Public License v3", "maintainer": null, "maintainer_email": null, "name": "deadlock", "package_url": "https://pypi.org/project/deadlock/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/deadlock/", "project_urls": {"Homepage": "https://github.com/cathalgarvey/deadlock"}, "release_url": "https://pypi.org/project/deadlock/0.1.12/", "requires_dist": null, "requires_python": null, "summary": "A Python implementation of minilock.io, plus some additional features.", "version": "0.1.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>by Cathal Garvey, Copyright 2014, proudly licensed under the GNU Affero\nGeneral Public License</p>\n<ul>\n<li>Twitter: [@onetruecathal](<a href=\"https://twitter.com/onetruecathal\" rel=\"nofollow\">https://twitter.com/onetruecathal</a>)</li>\n<li>Email: <a href=\"mailto:cathalgarvey%40cathalgarvey.me\">cathalgarvey<span>@</span>cathalgarvey<span>.</span>me</a></li>\n<li>miniLock ID: JjmYYngs7akLZUjkvFkuYdsZ3PyPHSZRBKNm6qTYKZfAM</li>\n<li>Gittip: <a href=\"https://www.gittip.com/onetruecathal/\" rel=\"nofollow\"><img alt=\"gittip\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec3cec85a3a3bba6a8e874f6c14c47dbfc788657/68747470733a2f2f696d672e736869656c64732e696f2f6769747469702f6f6e657472756563617468616c2e737667\"></a></li>\n<li>Bitcoin:\n<a>1QJQaR9C682HMGKHvEHWxmCvdX7SqdKzXe</a></li>\n</ul>\n<div>\n<img alt=\"Sorry for killing your avi, Nadim\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2570bfb534eaf75d0135c5516d667a92ca42f6ee/69636f6e732f646561646c6f636b5f69636f6e2e706e67\">\n</div>\n<div id=\"what-s-this\">\n<h2>What\u2019s this?</h2>\n<p>Go to <a href=\"https://minilock.io\" rel=\"nofollow\">minilock.io</a> to learn more about\nminiLock. <em>deadlock</em> is an implementation of the miniLock protocol, and\nas such it is compatible with miniLock. You can send and receive files\nfrom people using miniLock without having to install Chrome (closed\nsource, spyware-rich browser) or Chromium (technically open source but\nby-default-still-pretty-invasive browser).</p>\n<p>In addition to the base function of sending and receiving miniLock\u2019d\nfiles, which ought to be secure against snooping eyes on the wire and to\nprovide you and your loved/liked/other ones with a measure of deserved\nhuman privacy, <em>deadlock</em> comes with some other features you might like:</p>\n<ul>\n<li>Auto-zipping of directories when encrypting, making it easy to send\nfolders to friends.</li>\n<li>Fast underlying C implementations of core miniLock algorithms.</li>\n<li>Written for ease of use as a Python module, not only as a standalone\napplication.</li>\n<li>No browser, easily scripted, automated or pipelined.</li>\n<li>\u201cPetnames\u201d allowing you to save IDs as easily-memorable friend names\nor emails</li>\n<li><em>Highly insecure</em> private key storage, allowing trivial\nencryption/decryption, including iterating through all local private\nkeys and attempting decryption with each.</li>\n<li>Early features for throwaway ultra-high-security addresses.</li>\n<li>Early features for \u201cvanity\u201d addresses starting or ending in a chosen\nword (warning: may take until heat-death of the universe)</li>\n</ul>\n</div>\n<div id=\"how-do-i-install-use-this\">\n<h2>How do I install/use this?</h2>\n<p><em>deadlock</em> is, at present, a Terminal only application, written in and\nfor Python 3 (may only work on versions 3.3 and above; poorly tested).\nThe best way to install it is to use pip:</p>\n<pre>sudo pip install deadlock\n</pre>\n<p>..provided that you have the necessary system-level dependencies (C\ncompiler and supporting libraries), this ought to pull in the required\ncryptographic modules from PyPI and build them, then install <em>deadlock</em>.</p>\n<p>Once installed, <em>deadlock</em> will be available as a Python module and also\nas a script, <tt>deadlock</tt>. Try <tt>deadlock <span class=\"pre\">--help</span></tt> for guidance on\nusage.</p>\n<p><em>deadlock</em> will probably work on any platform with a C compiler for the\nrequired modules, but I have no interest in supporting closed,\nspyware-rich operating systems like WinMac, so don\u2019t ask. If it doesn\u2019t\nwork on those platforms, then you can always fix it and send me a pull\nrequest. I don\u2019t accept pull requests for legacy support (e.g. Python\nversions prior to 3.2), sorry; the code gets too messy.</p>\n</div>\n<div id=\"who-do-i-contact-for-support-or-to-complain\">\n<h2>Who do I contact for support or to complain?</h2>\n<p>Nobody. This software is provided without warranty of any kind. It\nworks, for me, and I\u2019m pretty sure it\u2019s secure, but I\u2019m not going to\ncertify it as such and you shouldn\u2019t use it if you really need security\nto protect you from people with the means and motive to harm or imprison\nyou.</p>\n</div>\n<div id=\"directions\">\n<h2>Directions</h2>\n<p>Planned, desired or future features: * Test suite! * Tidier API for\nalternative uses of the miniLock encryption format, for P2P or mail\nclient tie-in, or for RPC message passing. * Cleaner code structure;\nbreak lots of functionality out of crypto.py/core.py into a new utils.py\nfile, make core.py \u201cdumb glue code\u201d only. * Fully integrate\nhigh-security keys and vanity keys, including multiprocessing for\nfacilitating vanity key generation on multi-core machines. Estimated\nprogress summaries for vanity key generation; time until statistically\nexpected result, etc. * Pure-Python fallbacks for some cryptographic\ndependencies for platforms that pose a challenge to native C\ncompilation; Android, embedded platforms, etc. - Starting with\ntweetnacl.c/.js -&gt; tweetnacl.py - Pure Python Blake2 already exists -\nPure Python scrypt probably exists</p>\n<p>Not currently planned:</p>\n<ul>\n<li>Contemplated adding extensions to the fileInfo dictionary within\ndecryptInfo entries, but doing so would change the length of these\nentries which are at present highly predictable; this would mean that\ndecryptInfo length could be used to infer which software was used to\ncreate a miniLock file, whether miniLock or deadlock. So, don\u2019t\nsuggest such features, as they would partially compromise anonymity.</li>\n<li>Future versions of miniLock protocol ought to include a \u201cmimeType\u201d\nfileInfo key to hint to recipients whether a miniLock file is a\nplaintext item to be displayed, or a file to be saved; doing so would\nfacilitate email integration of miniLock as a potential PGP\nsuccessor. Again as above, such extensions would at present\ncompromise anonymity somewhat.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1198844, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "0a72535cfdce97584871905f68ed876a", "sha256": "2d22caa3f11caa73c3e912c25342c922aa998a4ad707b4feedaf79ec8ee8fdfe"}, "downloads": -1, "filename": "deadlock-0.1.tar.gz", "has_sig": false, "md5_digest": "0a72535cfdce97584871905f68ed876a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2844, "upload_time": "2014-08-12T16:05:30", "upload_time_iso_8601": "2014-08-12T16:05:30.336487Z", "url": "https://files.pythonhosted.org/packages/77/cf/ae73cd9b445909497415b59dfb2b7aa9863fd4cae54bab3a3c2be5451e21/deadlock-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "481c617cf443d82fedfcebacccb29f5d", "sha256": "e7fc9d97d60cf56ca5b1ce5b195fdc28d73da7502ab276aeb6595fea7edacd9c"}, "downloads": -1, "filename": "deadlock-0.1.1.tar.gz", "has_sig": false, "md5_digest": "481c617cf443d82fedfcebacccb29f5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2869, "upload_time": "2014-08-12T16:07:17", "upload_time_iso_8601": "2014-08-12T16:07:17.218011Z", "url": "https://files.pythonhosted.org/packages/4a/6b/11878bd53e12572036898dfa7fb94c701c0d5043e42078560bfab087c6c1/deadlock-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "f11c019e721e30e27873e2553923236e", "sha256": "709954061ab6651003c691d10e9ce119f68b979c9fe4d73213836550630e57bf"}, "downloads": -1, "filename": "deadlock-0.1.10.tar.gz", "has_sig": false, "md5_digest": "f11c019e721e30e27873e2553923236e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2117653, "upload_time": "2014-08-13T21:19:54", "upload_time_iso_8601": "2014-08-13T21:19:54.295220Z", "url": "https://files.pythonhosted.org/packages/1b/dc/017a6af01b989b0d4a41b8a8c88cc7224f9099b09fea9af8153ae1137e9d/deadlock-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "ba65e5bb2a60536240d685b42e4b27d6", "sha256": "64a15d914b0dad0cdd5a9857ffeb005c85360fda9793ae19998aa378fe942e7a"}, "downloads": -1, "filename": "deadlock-0.1.11.tar.gz", "has_sig": false, "md5_digest": "ba65e5bb2a60536240d685b42e4b27d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2122523, "upload_time": "2014-08-15T19:22:38", "upload_time_iso_8601": "2014-08-15T19:22:38.624144Z", "url": "https://files.pythonhosted.org/packages/13/86/05bcc5fa04957a7377b76a467ff6beeec670548c5706eb6a4263e11166ae/deadlock-0.1.11.tar.gz", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "31cd3b433da260030f80910b15a6b50f", "sha256": "fecc823dc08f5d5515a4f0f75a53ee4153cc4e0ff8cd6d2ca63df218e7ffdf2e"}, "downloads": -1, "filename": "deadlock-0.1.12.tar.gz", "has_sig": false, "md5_digest": "31cd3b433da260030f80910b15a6b50f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2122852, "upload_time": "2014-08-22T14:22:16", "upload_time_iso_8601": "2014-08-22T14:22:16.565720Z", "url": "https://files.pythonhosted.org/packages/71/02/92eb9b6bff6823446c88605ccbac2847787ef9aa4d9ed70d51a68af71932/deadlock-0.1.12.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c9719e43f870fd0f082b251c31ac377a", "sha256": "1ee9260248880cbdf5f67e4660ed8b7bf2989e3e078ef68e52fd76c97ab4e4c5"}, "downloads": -1, "filename": "deadlock-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c9719e43f870fd0f082b251c31ac377a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13764, "upload_time": "2014-08-12T16:56:14", "upload_time_iso_8601": "2014-08-12T16:56:14.611303Z", "url": "https://files.pythonhosted.org/packages/04/d5/8cf45d0cea3730da6b5e03c7c2eea0eea3bde86bfcce7ea669e8282026b4/deadlock-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "eabb8850c21b1da6a999a7c856c00212", "sha256": "015c26ee12e7bd1fe7cca3bc4085d7482017ab04658ae5ecacce6d27aae8ad4a"}, "downloads": -1, "filename": "deadlock-0.1.3.tar.gz", "has_sig": false, "md5_digest": "eabb8850c21b1da6a999a7c856c00212", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13748, "upload_time": "2014-08-12T17:00:57", "upload_time_iso_8601": "2014-08-12T17:00:57.482314Z", "url": "https://files.pythonhosted.org/packages/92/08/47bc353de8ca92e9cfbd888fcaad1f22df22d615fe22470aa2c2f814c3ce/deadlock-0.1.3.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "cbc614ed863b18886a16a2885123ba27", "sha256": "361d727598b176e275f58b7a1ebe0614f0139aa8e958f2fb113ea43946f88904"}, "downloads": -1, "filename": "deadlock-0.1.5.tar.gz", "has_sig": false, "md5_digest": "cbc614ed863b18886a16a2885123ba27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1771979, "upload_time": "2014-08-12T17:27:56", "upload_time_iso_8601": "2014-08-12T17:27:56.509850Z", "url": "https://files.pythonhosted.org/packages/df/ba/9e30d2a854a93eda207db457989faeb07c3450bccfea92236501d4b9205f/deadlock-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "884f1991a350749204594e078cf96499", "sha256": "dcf0d323ec3c9b4503b5607842e0b6e0f35784a846df36e9ee330e812234f15f"}, "downloads": -1, "filename": "deadlock-0.1.6.tar.gz", "has_sig": false, "md5_digest": "884f1991a350749204594e078cf96499", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1771985, "upload_time": "2014-08-12T17:29:46", "upload_time_iso_8601": "2014-08-12T17:29:46.468740Z", "url": "https://files.pythonhosted.org/packages/e8/a5/01995da7ea796f7d3f00870e774ae69a4717049898088274bd2d2b90c0b1/deadlock-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "d75a14d00ee343520e5a3f4a1d11438a", "sha256": "253ad9929f256eb1897fff14e760ea2b55564c0a4172ff2af109d9a11fb104af"}, "downloads": -1, "filename": "deadlock-0.1.7.tar.gz", "has_sig": false, "md5_digest": "d75a14d00ee343520e5a3f4a1d11438a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2115801, "upload_time": "2014-08-12T17:53:19", "upload_time_iso_8601": "2014-08-12T17:53:19.286665Z", "url": "https://files.pythonhosted.org/packages/a4/a3/faa866c4a3ac96ffd6786ab53b33220198a7b69d7cc4413f6b0da5fc29ef/deadlock-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "44e53e2019fe90cc223bf551abba5e40", "sha256": "14220c2c3a5d3977601a62578d9bf71429cea38de7e6f4ac4daa1e0fd7308c9b"}, "downloads": -1, "filename": "deadlock-0.1.8.tar.gz", "has_sig": false, "md5_digest": "44e53e2019fe90cc223bf551abba5e40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2115903, "upload_time": "2014-08-13T12:28:21", "upload_time_iso_8601": "2014-08-13T12:28:21.055699Z", "url": "https://files.pythonhosted.org/packages/ad/da/1b0baab481a405542116e88f73a4c1cee31d45265cdce7f0f478edd80033/deadlock-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "525e60dabb0d8da1b7981d65a16c0889", "sha256": "b38f784de09c50d4183263d842ed4dabd325ed746cd050463668d756cf36e1b8"}, "downloads": -1, "filename": "deadlock-0.1.9.tar.gz", "has_sig": false, "md5_digest": "525e60dabb0d8da1b7981d65a16c0889", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2117584, "upload_time": "2014-08-13T13:09:10", "upload_time_iso_8601": "2014-08-13T13:09:10.773468Z", "url": "https://files.pythonhosted.org/packages/8c/fc/f75399b6cac0e8c1da19e2b941c99d3737b66e33d44571e3b967fc214fe8/deadlock-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "31cd3b433da260030f80910b15a6b50f", "sha256": "fecc823dc08f5d5515a4f0f75a53ee4153cc4e0ff8cd6d2ca63df218e7ffdf2e"}, "downloads": -1, "filename": "deadlock-0.1.12.tar.gz", "has_sig": false, "md5_digest": "31cd3b433da260030f80910b15a6b50f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2122852, "upload_time": "2014-08-22T14:22:16", "upload_time_iso_8601": "2014-08-22T14:22:16.565720Z", "url": "https://files.pythonhosted.org/packages/71/02/92eb9b6bff6823446c88605ccbac2847787ef9aa4d9ed70d51a68af71932/deadlock-0.1.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:41 2020"}