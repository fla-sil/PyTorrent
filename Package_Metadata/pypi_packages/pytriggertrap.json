{"info": {"author": "R\u00e9my Sanchez", "author_email": "remy.sanchez@hyperthese.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Other Audience", "License :: Other/Proprietary License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "PyTriggerTrap\n=============\n\nControl a TriggerTrap device without the smartphone app.\n\nA TriggerTrap is (or\n`was <https://medium.com/triggertrap-playbook/triggertrap-going-out-of-business-faq-988112eebfef>`__)\na device that you can plug into your camera in order to control it with\nyour smartphone.\n\nHowever, in some cases you don't really want to actually control it with\nyour smartphone although it's nice to have a simple way to control it.\nThe sad thing is that isn't any documentation or API to do that. The\ngood thing is that the protocol is actually pretty simple and the aim of\nthis project is to provide a way for Python developers to control\nTriggerTrap devices.\n\nInstallation\n------------\n\nThrough pip:\n\n::\n\n    pip install pytriggertrap\n\nNon-python requirements\n~~~~~~~~~~~~~~~~~~~~~~~\n\nThis tool uses the ``ffmpeg`` binary, please make sure that it is\ninstalled and present in your ``PATH``.\n\nUsage\n-----\n\nThere is two ways to use this too:\n\n-  Using the ``pytt`` CLI tool, that allows to do most things from the\n   shell\n-  Using the ``TTController`` class, for developers\n\nIf you want to use the class, then read the code, it is documented via\ndocstrings.\n\nThe ``pytt`` tool\n~~~~~~~~~~~~~~~~~\n\nDifferent actions allow you to access the different features of the\ncontroller class.\n\n``timelapse_file``\n^^^^^^^^^^^^^^^^^^\n\nThis will generate a \"timelapse file\". Here's the idea: a TriggerTrap is\ncontrolled via an audio signal. So if a device can generate the\nappropriate audio, then it will be able to control the camera. In the\ncase of time lapses, it involves letting the thing running for a long\ntime, maybe while you're not even there. In this case, it is really\nannoying to have to leave your phone there.\n\nThe solution is the following: you just need to dig out an old MP3\nplayer (anything will do the job) and then to generate a MP3 file that\nwill be a pre-generated audio signal. You can generate it of the right\nsize if you want a precise duration or just generate a few iterations\nand then put the file on \"loop\" in your player.\n\nSo:\n\n1. Generate the timelapse MP3 file\n2. Put the file in your player\n3. Plug the TriggerTrap on your player\n4. Play the music\n5. Wait for your timelapse to be complete\n\nSuppose that I want to watch something for 6 hours (21600 seconds) in\norder to produce a 30 seconds timelapse video. Here's the command:\n\n::\n\n    pytt timelapse_file -i 21600 -o 30 -f timelapse.mp3\n\nSee the command's built-in help for the options.\n\n``trigger``\n^^^^^^^^^^^\n\nThis will simply send a trigger to the camera. Just make sure that the\nTriggerTrap is connected to your computer's audio.\n\nExample\n\n::\n\n    pytt trigger\n\nSee the command's built-in help for more options.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Xowap/PyTriggerTrap", "keywords": "", "license": "WTFPL", "maintainer": "", "maintainer_email": "", "name": "pytriggertrap", "package_url": "https://pypi.org/project/pytriggertrap/", "platform": "", "project_url": "https://pypi.org/project/pytriggertrap/", "project_urls": {"Homepage": "https://github.com/Xowap/PyTriggerTrap"}, "release_url": "https://pypi.org/project/pytriggertrap/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Control a TriggerTrap device without the smartphone app.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Control a TriggerTrap device without the smartphone app.</p>\n<p>A TriggerTrap is (or\n<a href=\"https://medium.com/triggertrap-playbook/triggertrap-going-out-of-business-faq-988112eebfef\" rel=\"nofollow\">was</a>)\na device that you can plug into your camera in order to control it with\nyour smartphone.</p>\n<p>However, in some cases you don\u2019t really want to actually control it with\nyour smartphone although it\u2019s nice to have a simple way to control it.\nThe sad thing is that isn\u2019t any documentation or API to do that. The\ngood thing is that the protocol is actually pretty simple and the aim of\nthis project is to provide a way for Python developers to control\nTriggerTrap devices.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Through pip:</p>\n<pre>pip install pytriggertrap\n</pre>\n<div id=\"non-python-requirements\">\n<h3>Non-python requirements</h3>\n<p>This tool uses the <tt>ffmpeg</tt> binary, please make sure that it is\ninstalled and present in your <tt>PATH</tt>.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>There is two ways to use this too:</p>\n<ul>\n<li>Using the <tt>pytt</tt> CLI tool, that allows to do most things from the\nshell</li>\n<li>Using the <tt>TTController</tt> class, for developers</li>\n</ul>\n<p>If you want to use the class, then read the code, it is documented via\ndocstrings.</p>\n<div id=\"the-pytt-tool\">\n<h3>The <tt>pytt</tt> tool</h3>\n<p>Different actions allow you to access the different features of the\ncontroller class.</p>\n<div id=\"timelapse-file\">\n<h4><tt>timelapse_file</tt></h4>\n<p>This will generate a \u201ctimelapse file\u201d. Here\u2019s the idea: a TriggerTrap is\ncontrolled via an audio signal. So if a device can generate the\nappropriate audio, then it will be able to control the camera. In the\ncase of time lapses, it involves letting the thing running for a long\ntime, maybe while you\u2019re not even there. In this case, it is really\nannoying to have to leave your phone there.</p>\n<p>The solution is the following: you just need to dig out an old MP3\nplayer (anything will do the job) and then to generate a MP3 file that\nwill be a pre-generated audio signal. You can generate it of the right\nsize if you want a precise duration or just generate a few iterations\nand then put the file on \u201cloop\u201d in your player.</p>\n<p>So:</p>\n<ol>\n<li>Generate the timelapse MP3 file</li>\n<li>Put the file in your player</li>\n<li>Plug the TriggerTrap on your player</li>\n<li>Play the music</li>\n<li>Wait for your timelapse to be complete</li>\n</ol>\n<p>Suppose that I want to watch something for 6 hours (21600 seconds) in\norder to produce a 30 seconds timelapse video. Here\u2019s the command:</p>\n<pre>pytt timelapse_file -i 21600 -o 30 -f timelapse.mp3\n</pre>\n<p>See the command\u2019s built-in help for the options.</p>\n</div>\n<div id=\"trigger\">\n<h4><tt>trigger</tt></h4>\n<p>This will simply send a trigger to the camera. Just make sure that the\nTriggerTrap is connected to your computer\u2019s audio.</p>\n<p>Example</p>\n<pre>pytt trigger\n</pre>\n<p>See the command\u2019s built-in help for more options.</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2806891, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "bca19d3049e460171d0a5eaf916e0aa3", "sha256": "757a060c47b8573b508dbaabc016d32b0ff74cc584166893f17286245c42a29d"}, "downloads": -1, "filename": "pytriggertrap-0.1.0.tar.gz", "has_sig": false, "md5_digest": "bca19d3049e460171d0a5eaf916e0aa3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6167, "upload_time": "2017-04-16T13:23:18", "upload_time_iso_8601": "2017-04-16T13:23:18.105994Z", "url": "https://files.pythonhosted.org/packages/aa/8d/5c666c2a85e8fdeb1d8dc79b242e1bc410b152a651c1764954f6494a2706/pytriggertrap-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bca19d3049e460171d0a5eaf916e0aa3", "sha256": "757a060c47b8573b508dbaabc016d32b0ff74cc584166893f17286245c42a29d"}, "downloads": -1, "filename": "pytriggertrap-0.1.0.tar.gz", "has_sig": false, "md5_digest": "bca19d3049e460171d0a5eaf916e0aa3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6167, "upload_time": "2017-04-16T13:23:18", "upload_time_iso_8601": "2017-04-16T13:23:18.105994Z", "url": "https://files.pythonhosted.org/packages/aa/8d/5c666c2a85e8fdeb1d8dc79b242e1bc410b152a651c1764954f6494a2706/pytriggertrap-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:15 2020"}