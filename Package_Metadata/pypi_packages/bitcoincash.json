{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Programming Language :: Python :: 3"], "description": "# python-bitcoincash\n\nThis Python3 library provides an easy interface to the bitcoin data\nstructures and protocol. The approach is low-level and \"ground up\", with a\nfocus on providing tools to manipulate the internals of how Bitcoin Cash works.\n\n**[Reference documentation](https://bitcoincash.network/python)**\n\n## Requirements\n\n    sudo apt-get install libssl-dev\n\nThe RPC interface, `bitcoincash.rpc`, is designed to work with Bitcoin Unlimited v1.7.0.\nOlder versions are out of consensus.\n\n\n## Structure\n\nEverything consensus critical is found in the modules under bitcoincash.core. This\nrule is followed pretty strictly, for instance chain parameters are split into\nconsensus critical and non-consensus-critical.\n\n    bitcoincash.core            - Basic core definitions, datastructures, and\n                                  (context-independent) validation\n    bitcoincash.core.key        - ECC pubkeys\n    bitcoincash.core.schnorr    - Schnorr signing/verification\n    bitcoincash.core.script     - Scripts and opcodes\n    bitcoincash.core.scripteval - Script evaluation/verification\n    bitcoincash.core.serialize  - Serialization\n\nNon-consensus critical modules include the following:\n\n    bitcoincash          - Chain selection\n    bitcoincash.base58   - Base58 encoding\n    bitcoincash.bloom    - Bloom filters (incomplete)\n    bitcoincash.cashaddr - Cashaddr encoding\n    bitcoincash.electrum - Bitcoin Electrum RPC interface support\n    bitcoincash.net      - Network communication (in flux)\n    bitcoincash.messages - Network messages (in flux)\n    bitcoincash.rpc      - Bitcoin Satoshi-client RPC interface support\n    bitcoincash.wallet   - Wallet-related code, currently Bitcoin address and\n                           private key support\n\nEffort has been made to follow the Satoshi source relatively closely, for\ninstance Python code and classes that duplicate the functionality of\ncorresponding Satoshi C++ code uses the same naming conventions: CTransaction,\nCBlockHeader, nValue etc. Otherwise Python naming conventions are followed.\n\n\n## Mutable vs. Immutable objects\n\nLike the Bitcoin Unlimited codebase CTransaction is immutable and\nCMutableTransaction is mutable; unlike the Bitcoin Core codebase this\ndistinction also applies to COutPoint, CTxIn, CTxOut, and CBlock.\n\n\n## Endianness Gotchas\n\nRather confusingly Bitcoin Unlimited shows transaction and block hashes as\nlittle-endian hex rather than the big-endian the rest of the world uses for\nSHA256. python-bitcoincashlib provides the convenience functions x() and lx() in\nbitcoin.core to convert from big-endian and little-endian hex to raw bytes to\naccomodate this. In addition see b2x() and b2lx() for conversion from bytes to\nbig/little-endian hex.\n\n\n## Module import style\n\nWhile not always good style, it's often convenient for quick scripts if\n`import *` can be used. To support that all the modules have `__all__` defined\nappropriately.\n\n\n# Example Code\n\nSee `examples/` directory. For instance this example creates a transaction\nspending a pay-to-script-hash transaction output:\n\n    $ PYTHONPATH=. examples/spend-pay-to-script-hash-txout.py\n    <hex-encoded transaction>\n\n\n## Selecting the chain to use\n\nDo the following:\n\n    import bitcoincash\n    bitcoincash.SelectParams(NAME)\n\nWhere NAME is one of 'testnet', 'mainnet', or 'regtest'. The chain currently\nselected is a global variable that changes behavior everywhere, just like in\nthe Satoshi codebase.\n\n\n## Unit tests\n\nUnder bitcoincash/tests using test data from Bitcoin Unlimited. To run them:\n\n    python3 -m unittest discover\n\nTo also enable electrum tests (these connect to a remote server), set the\n`ELECTRUM_TESTS` env variable\n\n    ELECTRUM_TESTS=1 python3 -m unittest discover\n\n\nAlternately, if Tox (see https://tox.readthedocs.org/) is available on your\nsystem, you can run unit tests for multiple Python versions:\n\n    ./runtests.sh\n\nHTML coverage reports can then be found in the htmlcov/ subdirectory.\n\n## Documentation\n\nSphinx documentation is in the \"doc\" subdirectory. Run \"make help\" from there\nto see how to build. You will need the Python \"sphinx\" package installed.\n\nCurrently this is just API documentation generated from the code and\ndocstrings. Higher level written docs would be useful, perhaps starting with\nmuch of this README. Pages are written in reStructuredText and linked from\nindex.rst.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitcoincash.network/python/", "keywords": "bitcoin cash bch bitcoincash", "license": "", "maintainer": "", "maintainer_email": "", "name": "bitcoincash", "package_url": "https://pypi.org/project/bitcoincash/", "platform": "", "project_url": "https://pypi.org/project/bitcoincash/", "project_urls": {"Homepage": "https://bitcoincash.network/python/"}, "release_url": "https://pypi.org/project/bitcoincash/0.1.5/", "requires_dist": null, "requires_python": ">3.6.7", "summary": "The Swiss Army Knife of the Bitcoin Cash protocol.", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>python-bitcoincash</h1>\n<p>This Python3 library provides an easy interface to the bitcoin data\nstructures and protocol. The approach is low-level and \"ground up\", with a\nfocus on providing tools to manipulate the internals of how Bitcoin Cash works.</p>\n<p><strong><a href=\"https://bitcoincash.network/python\" rel=\"nofollow\">Reference documentation</a></strong></p>\n<h2>Requirements</h2>\n<pre><code>sudo apt-get install libssl-dev\n</code></pre>\n<p>The RPC interface, <code>bitcoincash.rpc</code>, is designed to work with Bitcoin Unlimited v1.7.0.\nOlder versions are out of consensus.</p>\n<h2>Structure</h2>\n<p>Everything consensus critical is found in the modules under bitcoincash.core. This\nrule is followed pretty strictly, for instance chain parameters are split into\nconsensus critical and non-consensus-critical.</p>\n<pre><code>bitcoincash.core            - Basic core definitions, datastructures, and\n                              (context-independent) validation\nbitcoincash.core.key        - ECC pubkeys\nbitcoincash.core.schnorr    - Schnorr signing/verification\nbitcoincash.core.script     - Scripts and opcodes\nbitcoincash.core.scripteval - Script evaluation/verification\nbitcoincash.core.serialize  - Serialization\n</code></pre>\n<p>Non-consensus critical modules include the following:</p>\n<pre><code>bitcoincash          - Chain selection\nbitcoincash.base58   - Base58 encoding\nbitcoincash.bloom    - Bloom filters (incomplete)\nbitcoincash.cashaddr - Cashaddr encoding\nbitcoincash.electrum - Bitcoin Electrum RPC interface support\nbitcoincash.net      - Network communication (in flux)\nbitcoincash.messages - Network messages (in flux)\nbitcoincash.rpc      - Bitcoin Satoshi-client RPC interface support\nbitcoincash.wallet   - Wallet-related code, currently Bitcoin address and\n                       private key support\n</code></pre>\n<p>Effort has been made to follow the Satoshi source relatively closely, for\ninstance Python code and classes that duplicate the functionality of\ncorresponding Satoshi C++ code uses the same naming conventions: CTransaction,\nCBlockHeader, nValue etc. Otherwise Python naming conventions are followed.</p>\n<h2>Mutable vs. Immutable objects</h2>\n<p>Like the Bitcoin Unlimited codebase CTransaction is immutable and\nCMutableTransaction is mutable; unlike the Bitcoin Core codebase this\ndistinction also applies to COutPoint, CTxIn, CTxOut, and CBlock.</p>\n<h2>Endianness Gotchas</h2>\n<p>Rather confusingly Bitcoin Unlimited shows transaction and block hashes as\nlittle-endian hex rather than the big-endian the rest of the world uses for\nSHA256. python-bitcoincashlib provides the convenience functions x() and lx() in\nbitcoin.core to convert from big-endian and little-endian hex to raw bytes to\naccomodate this. In addition see b2x() and b2lx() for conversion from bytes to\nbig/little-endian hex.</p>\n<h2>Module import style</h2>\n<p>While not always good style, it's often convenient for quick scripts if\n<code>import *</code> can be used. To support that all the modules have <code>__all__</code> defined\nappropriately.</p>\n<h1>Example Code</h1>\n<p>See <code>examples/</code> directory. For instance this example creates a transaction\nspending a pay-to-script-hash transaction output:</p>\n<pre><code>$ PYTHONPATH=. examples/spend-pay-to-script-hash-txout.py\n&lt;hex-encoded transaction&gt;\n</code></pre>\n<h2>Selecting the chain to use</h2>\n<p>Do the following:</p>\n<pre><code>import bitcoincash\nbitcoincash.SelectParams(NAME)\n</code></pre>\n<p>Where NAME is one of 'testnet', 'mainnet', or 'regtest'. The chain currently\nselected is a global variable that changes behavior everywhere, just like in\nthe Satoshi codebase.</p>\n<h2>Unit tests</h2>\n<p>Under bitcoincash/tests using test data from Bitcoin Unlimited. To run them:</p>\n<pre><code>python3 -m unittest discover\n</code></pre>\n<p>To also enable electrum tests (these connect to a remote server), set the\n<code>ELECTRUM_TESTS</code> env variable</p>\n<pre><code>ELECTRUM_TESTS=1 python3 -m unittest discover\n</code></pre>\n<p>Alternately, if Tox (see <a href=\"https://tox.readthedocs.org/\" rel=\"nofollow\">https://tox.readthedocs.org/</a>) is available on your\nsystem, you can run unit tests for multiple Python versions:</p>\n<pre><code>./runtests.sh\n</code></pre>\n<p>HTML coverage reports can then be found in the htmlcov/ subdirectory.</p>\n<h2>Documentation</h2>\n<p>Sphinx documentation is in the \"doc\" subdirectory. Run \"make help\" from there\nto see how to build. You will need the Python \"sphinx\" package installed.</p>\n<p>Currently this is just API documentation generated from the code and\ndocstrings. Higher level written docs would be useful, perhaps starting with\nmuch of this README. Pages are written in reStructuredText and linked from\nindex.rst.</p>\n\n          </div>"}, "last_serial": 6385948, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0187aeb48971b93df79e3287bdf1430e", "sha256": "64848419d20bfce794500da6643d53e1b72f4df44cb11998d5d05ba41d10179c"}, "downloads": -1, "filename": "bitcoincash-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0187aeb48971b93df79e3287bdf1430e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 98050, "upload_time": "2019-11-21T09:40:17", "upload_time_iso_8601": "2019-11-21T09:40:17.796155Z", "url": "https://files.pythonhosted.org/packages/d2/17/ba4b9003fe04e3e86566ecfa7936c64e581bed06fc2b98b0e2ef0faca702/bitcoincash-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea09002d1314670791ca00a9d6bc8a07", "sha256": "bbbea56c4eb86ee6498e33562ce63d54756d1d1e116cf1773c4e28006bd60414"}, "downloads": -1, "filename": "bitcoincash-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ea09002d1314670791ca00a9d6bc8a07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80479, "upload_time": "2019-11-21T09:40:20", "upload_time_iso_8601": "2019-11-21T09:40:20.979996Z", "url": "https://files.pythonhosted.org/packages/d5/16/a06041dd6c8999fe1a27613a226a191d2e3fc8961b34612345f91e76ac50/bitcoincash-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "49603a48d25e71b194263d79d31ef296", "sha256": "16325e12955f26b31bd3efe3f7050c3e414d009b0e0df944f01ad45dc8419fa1"}, "downloads": -1, "filename": "bitcoincash-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "49603a48d25e71b194263d79d31ef296", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 98058, "upload_time": "2019-11-22T11:01:24", "upload_time_iso_8601": "2019-11-22T11:01:24.642077Z", "url": "https://files.pythonhosted.org/packages/71/58/52dae537014e9f4abc38f7a36fee0f9d5d0b36605e1413fddda2fc89fb1c/bitcoincash-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4618cff0cc12ac0bc11362e887946d9f", "sha256": "68b784393c5980d113a438f66e8d928f49486a300cebf3f95723de57626cf6ea"}, "downloads": -1, "filename": "bitcoincash-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4618cff0cc12ac0bc11362e887946d9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80517, "upload_time": "2019-11-22T11:01:26", "upload_time_iso_8601": "2019-11-22T11:01:26.699985Z", "url": "https://files.pythonhosted.org/packages/5a/47/65ba7c04d1bd8247a9f839700efdc17a67615ee3ad4ee532e4c715d1bc0c/bitcoincash-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d0296fd96ffa4e26014301a4459cb10f", "sha256": "467211b43fcd1e7ae83c76f05bf6fb343c166074130f3bbe75d3e0a8dce8473b"}, "downloads": -1, "filename": "bitcoincash-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d0296fd96ffa4e26014301a4459cb10f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 98122, "upload_time": "2019-12-13T12:18:35", "upload_time_iso_8601": "2019-12-13T12:18:35.076505Z", "url": "https://files.pythonhosted.org/packages/4f/a9/019f5baf0e6995c40cab08afa22ea1c89e3332dfe896deeb32320e5a5058/bitcoincash-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbcdbfe00e0c87bcd036f2c317ba58dc", "sha256": "a5e76dc47778f6806144c91d9aef9850f71c395cf69a75c385e0c0110978463c"}, "downloads": -1, "filename": "bitcoincash-0.1.2.tar.gz", "has_sig": false, "md5_digest": "cbcdbfe00e0c87bcd036f2c317ba58dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80640, "upload_time": "2019-12-13T12:18:36", "upload_time_iso_8601": "2019-12-13T12:18:36.860781Z", "url": "https://files.pythonhosted.org/packages/a9/20/85c6d71217ac5ff4214d0c93bd8c00f922ea68e2fe1f7577c9b57d4ecc71/bitcoincash-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "62804104c2aed55204cfb23d3fb9dca2", "sha256": "4f3dd7cb43e25400cebed8675b1ffcdb743ad9060f5a4c20ca91b57eb5a801b6"}, "downloads": -1, "filename": "bitcoincash-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "62804104c2aed55204cfb23d3fb9dca2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 107663, "upload_time": "2019-12-18T12:38:45", "upload_time_iso_8601": "2019-12-18T12:38:45.923076Z", "url": "https://files.pythonhosted.org/packages/8d/72/3c7352723b9e38f6fb9958a729d82b048c6122f88381069ae5aec9e928f0/bitcoincash-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5dd5901f1ae2251cbbd727f13e5b212", "sha256": "4c3674f994b4220668a2aca1ff6756cc686da0b1bfae01ef0202692a21f8206f"}, "downloads": -1, "filename": "bitcoincash-0.1.3.tar.gz", "has_sig": false, "md5_digest": "a5dd5901f1ae2251cbbd727f13e5b212", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88425, "upload_time": "2019-12-18T12:38:47", "upload_time_iso_8601": "2019-12-18T12:38:47.526554Z", "url": "https://files.pythonhosted.org/packages/f4/ee/05508d4ca96d8ddc95c167fae3871505b3ccfc5b28fb8aa9601fd155fccc/bitcoincash-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "2e63959a260c855215bec124901e53c8", "sha256": "27fde9da964c613c928cbfef354af6fc47c58a5342534252d909277fbb680a6d"}, "downloads": -1, "filename": "bitcoincash-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2e63959a260c855215bec124901e53c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 107666, "upload_time": "2019-12-18T13:11:42", "upload_time_iso_8601": "2019-12-18T13:11:42.818200Z", "url": "https://files.pythonhosted.org/packages/11/c7/e38ed5a011312c5b530ade7f6478a878082cc35bcbc990dd22ea609356c5/bitcoincash-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0cd319dd3899667ac2542e7eea28137", "sha256": "984dcf85f561586f911a3654b9a3a6705e7c460ed3da3ff4da448b37561d2eac"}, "downloads": -1, "filename": "bitcoincash-0.1.4.tar.gz", "has_sig": false, "md5_digest": "a0cd319dd3899667ac2542e7eea28137", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 88443, "upload_time": "2019-12-18T13:11:44", "upload_time_iso_8601": "2019-12-18T13:11:44.426259Z", "url": "https://files.pythonhosted.org/packages/af/66/c73a23af1efcf7c652be1f2ed03cb81902b5b4848af838ba922035f69024/bitcoincash-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "b711995c7c52cc9deceb3ff5c62471a3", "sha256": "b8aaccfa2b087812abf8dadcacd461e97ef5b05cfec8e84f3a5515e56dd1a6b2"}, "downloads": -1, "filename": "bitcoincash-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "b711995c7c52cc9deceb3ff5c62471a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.6.7", "size": 117398, "upload_time": "2020-01-02T13:17:11", "upload_time_iso_8601": "2020-01-02T13:17:11.153301Z", "url": "https://files.pythonhosted.org/packages/dc/33/feafd7c910edb33ad0d612f56fcd964c3309b8e7dd11361a9c1218794a82/bitcoincash-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66ec3b5922f4a4e8c3c9c5f49058d9a1", "sha256": "d5d55c0f9835259eea0c636a5980448f6a9a08b9d48fac44148910de8947d03d"}, "downloads": -1, "filename": "bitcoincash-0.1.5.tar.gz", "has_sig": false, "md5_digest": "66ec3b5922f4a4e8c3c9c5f49058d9a1", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.7", "size": 97053, "upload_time": "2020-01-02T13:17:13", "upload_time_iso_8601": "2020-01-02T13:17:13.114887Z", "url": "https://files.pythonhosted.org/packages/c6/18/db1de40b55834c0e3ab661a9be1260beacf48643790d9a9010b2329533c3/bitcoincash-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b711995c7c52cc9deceb3ff5c62471a3", "sha256": "b8aaccfa2b087812abf8dadcacd461e97ef5b05cfec8e84f3a5515e56dd1a6b2"}, "downloads": -1, "filename": "bitcoincash-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "b711995c7c52cc9deceb3ff5c62471a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.6.7", "size": 117398, "upload_time": "2020-01-02T13:17:11", "upload_time_iso_8601": "2020-01-02T13:17:11.153301Z", "url": "https://files.pythonhosted.org/packages/dc/33/feafd7c910edb33ad0d612f56fcd964c3309b8e7dd11361a9c1218794a82/bitcoincash-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66ec3b5922f4a4e8c3c9c5f49058d9a1", "sha256": "d5d55c0f9835259eea0c636a5980448f6a9a08b9d48fac44148910de8947d03d"}, "downloads": -1, "filename": "bitcoincash-0.1.5.tar.gz", "has_sig": false, "md5_digest": "66ec3b5922f4a4e8c3c9c5f49058d9a1", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.7", "size": 97053, "upload_time": "2020-01-02T13:17:13", "upload_time_iso_8601": "2020-01-02T13:17:13.114887Z", "url": "https://files.pythonhosted.org/packages/c6/18/db1de40b55834c0e3ab661a9be1260beacf48643790d9a9010b2329533c3/bitcoincash-0.1.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:18 2020"}