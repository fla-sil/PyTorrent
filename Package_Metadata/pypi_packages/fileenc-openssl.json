{"info": {"author": "(the author)", "author_email": "mdilligaf@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "fileenc-openssl\n---------------------------------------\n\nThis code allows one to easily encrypt and decrypt files symmetrically using openssl and python3.\n\n* Uses ``aes-256-cbc`` for file encryption (as implemented by openssl)\n* Uses a salt when encrypting (to avoid pre-computation or rainbow tables).\n* Uses ``sha256`` key stretching (with <0.1s) to make brute force prohibitively expensive.\n* Uses ``sha256`` checksum to check file integrity.\n\nInstallation\n---------------------------------------\n\nYou can install using\n\n.. code-block:: bash\n\n\tpip install fileenc-openssl\n\nIf you want ``fileenc`` and ``filedec`` available system-wide, use ``sudo`` or equivalent.\n\nUsage\n---------------------------------------\n\nFrom command line:\n\n.. code-block:: bash\n\n\tfileenc --key 'password123' --input '*.png' --check --overwrite\n\tfiledec --key 'password123' --input '*.png.enc' --check --overwrite --remove\n\t# the quotes around wildcards are important\n\nFrom python:\n\n.. code-block:: python\n\n\tfrom fileenc_openssl import stretch_key, encrypt_file, decrypt_file\n\tstretched_key = stretch_key('password123')\n\tenc_pth = encrypt_file(raw_pth, key=stretched_key)\n\tres_pth = decrypt_file(enc_pth, key=stretched_key)\n\nTesting (needs ``py.test``):\n\n.. code-block:: bash\n\n\tpy.test\n\nOptions\n---------------------------------------\n\nYou can find all options using ``fileenc --help``::\n\n\t-h, --help               show this help message and exit\n\t-k KEY, --key KEY        the key to use for encryption; you will be prompted for one if this is not provided (more secure)\n\t-i INP, --input INP      input file, directory or pattern (as a single string) (.enc will be appended)\n\t-o OUTP, --output OUTP   optionally, output file or directory (.enc will be stripped if available)\n\t-d, --decrypt            decrypt the input file(s) (as opposed to encrypt, which is the default)\n\t-f, --overwrite          overwrite existing files when decrypting (encrypting always overwrites)\n\t-r, --remove             remove the input file after en/decrypting (after --check)\n\t-c, --check              test the encryption by reversing it (abort on failure) (only for ENcryption due to salting)\n\t-1, --once               prompt for the key only once (when encrypting without -k)\n\t-j N, --process-count N  number of parallel processes to use for en/decryption; `0` for auto (default), `1` for serial\n\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -k KEY, --key KEY     the key to use for encryption; you will be prompted\n                        for one if this is not provided (more secure)\n  -i INP, --input INP   input file, directory or pattern as a single string\n                        (required for encrypting; defaults to *.enc when\n                        decrypting)\n  -o OUTP, --output OUTP\n                        optionally, output file or directory; .enc will be\n                        appended to each file\n  -d, --decrypt         decrypt the input file(s) (as opposed to encrypt,\n                        which is the default)\n  -f, --overwrite       overwrite existing files when decrypting (encrypting\n                        always overwrites)\n  -r, --remove          shred the input file after en/decrypting (after\n                        --check)\n  -c, --check           test the encryption by reversing it (abort on failure)\n                        (only for ENcryption due to salting)\n  -1, --once            prompt for the key only once (only applicable if --key\n                        and --decrypt are not set)\n  -j PROC_CNT, --process-count PROC_CNT\n                        number of parallel processes to use for en/decryption;\n                        `0` for auto (default), `1` for serial\n\n\nLicense\n---------------------------------------\n\nRevised BSD License; at your own risk, you can mostly do whatever you want with this code, just don't use my name for promotion and do keep the license file.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mverleg/fileenc_openssl", "keywords": "encryption", "license": "Revised BSD License (LICENSE.txt)", "maintainer": "", "maintainer_email": "", "name": "fileenc-openssl", "package_url": "https://pypi.org/project/fileenc-openssl/", "platform": "", "project_url": "https://pypi.org/project/fileenc-openssl/", "project_urls": {"Homepage": "https://github.com/mverleg/fileenc_openssl"}, "release_url": "https://pypi.org/project/fileenc-openssl/1.3.1/", "requires_dist": null, "requires_python": "", "summary": "allows one to easily encrypt and decrypt files symmetrically using openssl and python3", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            fileenc-openssl<br>---------------------------------------<br><br>This code allows one to easily encrypt and decrypt files symmetrically using openssl and python3.<br><br>* Uses ``aes-256-cbc`` for file encryption (as implemented by openssl)<br>* Uses a salt when encrypting (to avoid pre-computation or rainbow tables).<br>* Uses ``sha256`` key stretching (with &lt;0.1s) to make brute force prohibitively expensive.<br>* Uses ``sha256`` checksum to check file integrity.<br><br>Installation<br>---------------------------------------<br><br>You can install using<br><br>.. code-block:: bash<br><br>\tpip install fileenc-openssl<br><br>If you want ``fileenc`` and ``filedec`` available system-wide, use ``sudo`` or equivalent.<br><br>Usage<br>---------------------------------------<br><br>From command line:<br><br>.. code-block:: bash<br><br>\tfileenc --key 'password123' --input '*.png' --check --overwrite<br>\tfiledec --key 'password123' --input '*.png.enc' --check --overwrite --remove<br>\t# the quotes around wildcards are important<br><br>From python:<br><br>.. code-block:: python<br><br>\tfrom fileenc_openssl import stretch_key, encrypt_file, decrypt_file<br>\tstretched_key = stretch_key('password123')<br>\tenc_pth = encrypt_file(raw_pth, key=stretched_key)<br>\tres_pth = decrypt_file(enc_pth, key=stretched_key)<br><br>Testing (needs ``py.test``):<br><br>.. code-block:: bash<br><br>\tpy.test<br><br>Options<br>---------------------------------------<br><br>You can find all options using ``fileenc --help``::<br><br>\t-h, --help               show this help message and exit<br>\t-k KEY, --key KEY        the key to use for encryption; you will be prompted for one if this is not provided (more secure)<br>\t-i INP, --input INP      input file, directory or pattern (as a single string) (.enc will be appended)<br>\t-o OUTP, --output OUTP   optionally, output file or directory (.enc will be stripped if available)<br>\t-d, --decrypt            decrypt the input file(s) (as opposed to encrypt, which is the default)<br>\t-f, --overwrite          overwrite existing files when decrypting (encrypting always overwrites)<br>\t-r, --remove             remove the input file after en/decrypting (after --check)<br>\t-c, --check              test the encryption by reversing it (abort on failure) (only for ENcryption due to salting)<br>\t-1, --once               prompt for the key only once (when encrypting without -k)<br>\t-j N, --process-count N  number of parallel processes to use for en/decryption; `0` for auto (default), `1` for serial<br><br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  -k KEY, --key KEY     the key to use for encryption; you will be prompted<br>                        for one if this is not provided (more secure)<br>  -i INP, --input INP   input file, directory or pattern as a single string<br>                        (required for encrypting; defaults to *.enc when<br>                        decrypting)<br>  -o OUTP, --output OUTP<br>                        optionally, output file or directory; .enc will be<br>                        appended to each file<br>  -d, --decrypt         decrypt the input file(s) (as opposed to encrypt,<br>                        which is the default)<br>  -f, --overwrite       overwrite existing files when decrypting (encrypting<br>                        always overwrites)<br>  -r, --remove          shred the input file after en/decrypting (after<br>                        --check)<br>  -c, --check           test the encryption by reversing it (abort on failure)<br>                        (only for ENcryption due to salting)<br>  -1, --once            prompt for the key only once (only applicable if --key<br>                        and --decrypt are not set)<br>  -j PROC_CNT, --process-count PROC_CNT<br>                        number of parallel processes to use for en/decryption;<br>                        `0` for auto (default), `1` for serial<br><br><br>License<br>---------------------------------------<br><br>Revised BSD License; at your own risk, you can mostly do whatever you want with this code, just don't use my name for promotion and do keep the license file.<br><br><br>\n          </div>"}, "last_serial": 3509528, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "26a76d52c43f7ad6502aad468f41b8fc", "sha256": "ac55efffabfdd24547822bbb3927ebd10fdb211bb178dec45cfa4af6f3ef5952"}, "downloads": -1, "filename": "fileenc-openssl-1.0.tar.gz", "has_sig": false, "md5_digest": "26a76d52c43f7ad6502aad468f41b8fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4692, "upload_time": "2016-04-15T14:06:28", "upload_time_iso_8601": "2016-04-15T14:06:28.709463Z", "url": "https://files.pythonhosted.org/packages/8d/92/ae1ca4aa262d0cbef252767d9c01eca84fefc88e6ea8da72a03d22d03f23/fileenc-openssl-1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "d5e30def7f5095d87396f3a0e3b12d57", "sha256": "8b199b92ac5ea2b75cb642edc0ad8b4854c057920ab7d797384615c39bb7e715"}, "downloads": -1, "filename": "fileenc-openssl-1.1.1.tar.gz", "has_sig": false, "md5_digest": "d5e30def7f5095d87396f3a0e3b12d57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4846, "upload_time": "2016-04-15T15:34:29", "upload_time_iso_8601": "2016-04-15T15:34:29.683194Z", "url": "https://files.pythonhosted.org/packages/f8/6d/bf6626e429f92581ba217ec9bddb4db7372c2f559ad379944c304da9c800/fileenc-openssl-1.1.1.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "63de338eda39fad38bc6cc5af35c85b9", "sha256": "ec61a4becc85c27d54b99adc29f3bddea3653751c7ebe560ea0776afcc3ba2ed"}, "downloads": -1, "filename": "fileenc-openssl-1.2.1.tar.gz", "has_sig": false, "md5_digest": "63de338eda39fad38bc6cc5af35c85b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5388, "upload_time": "2016-04-15T19:40:27", "upload_time_iso_8601": "2016-04-15T19:40:27.801316Z", "url": "https://files.pythonhosted.org/packages/06/1d/b5e8e59d29b417e4e432a4edf5d085acfed4dbbb29918480cbfa81e8c411/fileenc-openssl-1.2.1.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "d00d1ab58037cf2f097013f30abeaccb", "sha256": "ccde67f80268d30a8000805dbe56a36e901857e1c59399bcda7c8c2c030b6a02"}, "downloads": -1, "filename": "fileenc-openssl-1.2.3.tar.gz", "has_sig": false, "md5_digest": "d00d1ab58037cf2f097013f30abeaccb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5450, "upload_time": "2016-04-15T19:52:42", "upload_time_iso_8601": "2016-04-15T19:52:42.009177Z", "url": "https://files.pythonhosted.org/packages/43/f8/b051d3300102369c2080a1ac9cf4678ace5d0ed3e183461efb4c31e2b990/fileenc-openssl-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "42b5f85e47f7bf03c927fa7a80739177", "sha256": "349262c62f045e27930d3782934aa50c81f72bcebcaaeac60456f7fc3b5f6834"}, "downloads": -1, "filename": "fileenc-openssl-1.2.4.tar.gz", "has_sig": false, "md5_digest": "42b5f85e47f7bf03c927fa7a80739177", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5460, "upload_time": "2016-04-15T19:54:07", "upload_time_iso_8601": "2016-04-15T19:54:07.624031Z", "url": "https://files.pythonhosted.org/packages/a2/b3/360a884f336c80093ccf30815b68c3650c99bf0717572d0956770301dce1/fileenc-openssl-1.2.4.tar.gz", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "3ba4bb0e2b8bc4d6931978df1276f998", "sha256": "431b5b23cff9a9e92601bee8e2a17c2708b56c4471c872b413683fe6321568eb"}, "downloads": -1, "filename": "fileenc-openssl-1.2.5.tar.gz", "has_sig": false, "md5_digest": "3ba4bb0e2b8bc4d6931978df1276f998", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5463, "upload_time": "2016-04-15T19:57:37", "upload_time_iso_8601": "2016-04-15T19:57:37.459840Z", "url": "https://files.pythonhosted.org/packages/a1/d3/aba4873a39dfe6091e3fe18ba39319b5581ff01a319b2247d7604d31982d/fileenc-openssl-1.2.5.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "fd79cfd196fe8246e5e67932989fcc19", "sha256": "3633698547afde365d71ee2d0ff6e359d117ad8d3607887e943939ed53303300"}, "downloads": -1, "filename": "fileenc_openssl-1.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fd79cfd196fe8246e5e67932989fcc19", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 9787, "upload_time": "2016-09-07T09:42:43", "upload_time_iso_8601": "2016-09-07T09:42:43.083175Z", "url": "https://files.pythonhosted.org/packages/0e/f6/6f6bac7b06067ec4d7c245d3dfa73ef068f771880ffdde7c2050a332484b/fileenc_openssl-1.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a417aa6fffd27282eb21f8bf1a680c8c", "sha256": "84b11f1ff8429046ba7966458a118e7dd58fbd5c9bd922ad347f93f6e657610c"}, "downloads": -1, "filename": "fileenc-openssl-1.3.0.tar.gz", "has_sig": false, "md5_digest": "a417aa6fffd27282eb21f8bf1a680c8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6122, "upload_time": "2016-09-07T09:42:40", "upload_time_iso_8601": "2016-09-07T09:42:40.779724Z", "url": "https://files.pythonhosted.org/packages/c0/74/58569884dfb15b9f5e44ac950ad60206d166805990548d84ec97318f474a/fileenc-openssl-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "7b47d64e578200f421aa30ab7a7fcb34", "sha256": "6d9ebbbfce64d61b50ac03f0eb463184c9f392d39c5b437690c46298b5c2e0a1"}, "downloads": -1, "filename": "fileenc-openssl-1.3.1.tar.gz", "has_sig": false, "md5_digest": "7b47d64e578200f421aa30ab7a7fcb34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6212, "upload_time": "2018-01-21T20:39:19", "upload_time_iso_8601": "2018-01-21T20:39:19.306218Z", "url": "https://files.pythonhosted.org/packages/82/96/55045409aaea0acdafe0915b57bd002b42b71b3ddace1f6be99dfd7a441e/fileenc-openssl-1.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7b47d64e578200f421aa30ab7a7fcb34", "sha256": "6d9ebbbfce64d61b50ac03f0eb463184c9f392d39c5b437690c46298b5c2e0a1"}, "downloads": -1, "filename": "fileenc-openssl-1.3.1.tar.gz", "has_sig": false, "md5_digest": "7b47d64e578200f421aa30ab7a7fcb34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6212, "upload_time": "2018-01-21T20:39:19", "upload_time_iso_8601": "2018-01-21T20:39:19.306218Z", "url": "https://files.pythonhosted.org/packages/82/96/55045409aaea0acdafe0915b57bd002b42b71b3ddace1f6be99dfd7a441e/fileenc-openssl-1.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:35 2020"}