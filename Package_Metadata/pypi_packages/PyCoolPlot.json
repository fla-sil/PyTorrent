{"info": {"author": "Atsushi Sakai", "author_email": "asakai.amsl@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Visualization"], "description": "PyCoolPlot\n==========\n\nA cool plotting module in Python\n\nWhat is this?\n=============\n\nThis is a plotting module in Python.\n\nRef:\n\n-  `\u30c7\u30fc\u30bf\u8996\u899a\u5316\u306e\u30c7\u30b6\u30a4\u30f3 #1\uff5cGo Ando / THE\n   GUILD\uff5cnote <https://note.mu/goando/n/neb6ea35f1da3>`__\n\n-  `\u300c\u30c7\u30fc\u30bf\u8996\u899a\u5316\u306e\u30c7\u30b6\u30a4\u30f3 #1\u300d\u3092matplotlib\u3067\u5b9f\u88c5\u3059\u308b -\n   Qiita <https://qiita.com/skotaro/items/cdb0732ad1ad2a4b6236>`__\n\nRequirements\n============\n\n-  Python 3.6.x or higher\n\n-  matplotlib\n\n-  numpy\n\n-  pandas\n\nDownload\n========\n\nUsing pip\n---------\n\n   $ pip install PyCoolPlot\n\nPyPI page:\n\n-  `PyCoolPlot \u00b7\n   PyPI <https://pypi.org/project/PyCoolPlot/#description>`__\n\nManual install\n--------------\n\n1. Install Python 3.6.x.\n\n2. Clone or download as zip this repository.\n\n3. import pycoolplot.py\n\nHow to use\n==========\n\nThe sample code might be helpful:\n\n-  `PyCoolPlot/sample.py <https://github.com/AtsushiSakai/PyCoolPlot/blob/master/sample.py>`__\n\nimport\n------\n\nIf you use pip to install PyCoolPlot, you can import it like:\n\n::\n\n   from pycoolplot import pycoolplot\n\nHorizontal bar plot\n-------------------\n\nYou can plot a beautiful horizontal bar plot like:\n\n::\n\n   data = [1000, 2000, 10000]\n   index = [\"A\", \"B\", \"C\"]\n   pycoolplot.horizontal_bar(index, data)\n   pycoolplot.plt.show()\n\nYou will see:\n\n.. figure:: https://github.com/AtsushiSakai/PyCoolPlot/raw/master/imgs/1.png\n   :alt: 1\n\n   1\n\nIf you want a rate bar plot, you can set rate_graph is True like:\n\n::\n\n   data = [1000, 2000, 10000]\n   index = [\"A\", \"B\", \"C\"]\n   pycoolplot.horizontal_bar(index, data, rate_graph=True)\n   pycoolplot.plt.show()\n\nYou will see:\n\n.. figure:: https://github.com/AtsushiSakai/PyCoolPlot/raw/master/imgs/2.png\n   :alt: 2\n\n   2\n\nLine graph\n----------\n\nYou can plot a beautiful line graph like:\n\n::\n\n   data2 = [[970, 1010, 1015, 1008],\n            [975, 1020, 1002, 1035],\n            [975, 985, 995, 999]]\n   index2 = ['Toyota', 'VW', 'GM']\n   columns = [2013, 2014, 2015, 2016]\n   ylabel = \"Number\"\n   xlabel = \"Year\"\n   pycoolplot.line_graph(data2, index2, columns, xlabel,\n                         ylabel, xtick=1, ytick=25)\n   pycoolplot.plt.show()\n\nYou can get:\n\n.. figure:: https://github.com/AtsushiSakai/PyCoolPlot/raw/master/imgs/3.png\n   :alt: 3\n\n   3\n\nIf you want to focus a line, you can set focus_id like:\n\n::\n\n   data2 = [[970, 1010, 1015, 1008],\n           [975, 1020, 1002, 1035],\n           [975, 985, 995, 999]]\n   index2 = ['Toyota', 'VW', 'GM']\n   columns = [2013, 2014, 2015, 2016]\n   ylabel = \"Number\"\n   xlabel = \"Year\"\n   focus_id = 1  # the index of focusing line, in this case Toyota=0, VW=1, GM=2\n   pycoolplot.line_graph(data2, index2, columns, xlabel,\n                         ylabel, xtick=1, ytick=25, focus_id=focus_id)\n   pycoolplot.plt.show()\n\n.. figure:: https://github.com/AtsushiSakai/PyCoolPlot/raw/master/imgs/4.png\n   :alt: 4\n\n   4\n\nTime bar chart\n--------------\n\nYou can plot a beautiful time series bar chart like:\n\n::\n\n   data = pycoolplot.np.linspace(450, 990, 12) + \\\n       pycoolplot.np.random.randint(-50, 50, 12)\n   time_index = pycoolplot.pd.date_range('2017/5', periods=12, freq='MS')\n   pycoolplot.time_vertical_bar(data, time_index, xlabel=\"time\", ylabel=\"MAU\")\n   pycoolplot.plt.show()\n\n.. figure:: https://github.com/AtsushiSakai/PyCoolPlot/raw/master/imgs/5.png\n   :alt: 5\n\n   5\n\nLicense\n=======\n\nMIT\n\nAuthor\n======\n\n-  `Atsushi Sakai <https://github.com/AtsushiSakai/>`__\n   ([@Atsushi_twi](https://twitter.com/Atsushi_twi))\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AtsushiSakai/PyCoolPlot", "keywords": "python plot matplotlib", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "PyCoolPlot", "package_url": "https://pypi.org/project/PyCoolPlot/", "platform": "", "project_url": "https://pypi.org/project/PyCoolPlot/", "project_urls": {"Homepage": "https://github.com/AtsushiSakai/PyCoolPlot"}, "release_url": "https://pypi.org/project/PyCoolPlot/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "A cool plotting module in Python", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pycoolplot\">\n<h2>PyCoolPlot</h2>\n<p>A cool plotting module in Python</p>\n</div>\n<div id=\"what-is-this\">\n<h2>What is this?</h2>\n<p>This is a plotting module in Python.</p>\n<p>Ref:</p>\n<ul>\n<li><a href=\"https://note.mu/goando/n/neb6ea35f1da3\" rel=\"nofollow\">\u30c7\u30fc\u30bf\u8996\u899a\u5316\u306e\u30c7\u30b6\u30a4\u30f3 #1\uff5cGo Ando / THE\nGUILD\uff5cnote</a></li>\n<li><a href=\"https://qiita.com/skotaro/items/cdb0732ad1ad2a4b6236\" rel=\"nofollow\">\u300c\u30c7\u30fc\u30bf\u8996\u899a\u5316\u306e\u30c7\u30b6\u30a4\u30f3 #1\u300d\u3092matplotlib\u3067\u5b9f\u88c5\u3059\u308b -\nQiita</a></li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.6.x or higher</li>\n<li>matplotlib</li>\n<li>numpy</li>\n<li>pandas</li>\n</ul>\n</div>\n<div id=\"download\">\n<h2>Download</h2>\n<div id=\"using-pip\">\n<h3>Using pip</h3>\n<blockquote>\n$ pip install PyCoolPlot</blockquote>\n<p>PyPI page:</p>\n<ul>\n<li><a href=\"https://pypi.org/project/PyCoolPlot/#description\" rel=\"nofollow\">PyCoolPlot \u00b7\nPyPI</a></li>\n</ul>\n</div>\n<div id=\"manual-install\">\n<h3>Manual install</h3>\n<ol>\n<li>Install Python 3.6.x.</li>\n<li>Clone or download as zip this repository.</li>\n<li>import pycoolplot.py</li>\n</ol>\n</div>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<p>The sample code might be helpful:</p>\n<ul>\n<li><a href=\"https://github.com/AtsushiSakai/PyCoolPlot/blob/master/sample.py\" rel=\"nofollow\">PyCoolPlot/sample.py</a></li>\n</ul>\n<div id=\"import\">\n<h3>import</h3>\n<p>If you use pip to install PyCoolPlot, you can import it like:</p>\n<pre>from pycoolplot import pycoolplot\n</pre>\n</div>\n<div id=\"horizontal-bar-plot\">\n<h3>Horizontal bar plot</h3>\n<p>You can plot a beautiful horizontal bar plot like:</p>\n<pre>data = [1000, 2000, 10000]\nindex = [\"A\", \"B\", \"C\"]\npycoolplot.horizontal_bar(index, data)\npycoolplot.plt.show()\n</pre>\n<p>You will see:</p>\n<div>\n<img alt=\"1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a73d3cac6fe8a5c41b91ed3e5eb7424254fc8d4b/68747470733a2f2f6769746875622e636f6d2f4174737573686953616b61692f5079436f6f6c506c6f742f7261772f6d61737465722f696d67732f312e706e67\">\n<p>1</p>\n</div>\n<p>If you want a rate bar plot, you can set rate_graph is True like:</p>\n<pre>data = [1000, 2000, 10000]\nindex = [\"A\", \"B\", \"C\"]\npycoolplot.horizontal_bar(index, data, rate_graph=True)\npycoolplot.plt.show()\n</pre>\n<p>You will see:</p>\n<div>\n<img alt=\"2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/36e56f4d4dec3a7e2e556d0f7e4d573a86ad9729/68747470733a2f2f6769746875622e636f6d2f4174737573686953616b61692f5079436f6f6c506c6f742f7261772f6d61737465722f696d67732f322e706e67\">\n<p>2</p>\n</div>\n</div>\n<div id=\"line-graph\">\n<h3>Line graph</h3>\n<p>You can plot a beautiful line graph like:</p>\n<pre>data2 = [[970, 1010, 1015, 1008],\n         [975, 1020, 1002, 1035],\n         [975, 985, 995, 999]]\nindex2 = ['Toyota', 'VW', 'GM']\ncolumns = [2013, 2014, 2015, 2016]\nylabel = \"Number\"\nxlabel = \"Year\"\npycoolplot.line_graph(data2, index2, columns, xlabel,\n                      ylabel, xtick=1, ytick=25)\npycoolplot.plt.show()\n</pre>\n<p>You can get:</p>\n<div>\n<img alt=\"3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8536454932e95402dd0ef5dd9b6052d0cadd8bdd/68747470733a2f2f6769746875622e636f6d2f4174737573686953616b61692f5079436f6f6c506c6f742f7261772f6d61737465722f696d67732f332e706e67\">\n<p>3</p>\n</div>\n<p>If you want to focus a line, you can set focus_id like:</p>\n<pre>data2 = [[970, 1010, 1015, 1008],\n        [975, 1020, 1002, 1035],\n        [975, 985, 995, 999]]\nindex2 = ['Toyota', 'VW', 'GM']\ncolumns = [2013, 2014, 2015, 2016]\nylabel = \"Number\"\nxlabel = \"Year\"\nfocus_id = 1  # the index of focusing line, in this case Toyota=0, VW=1, GM=2\npycoolplot.line_graph(data2, index2, columns, xlabel,\n                      ylabel, xtick=1, ytick=25, focus_id=focus_id)\npycoolplot.plt.show()\n</pre>\n<div>\n<img alt=\"4\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e79fbbec98683d529db06555226e1f8cf4f3946b/68747470733a2f2f6769746875622e636f6d2f4174737573686953616b61692f5079436f6f6c506c6f742f7261772f6d61737465722f696d67732f342e706e67\">\n<p>4</p>\n</div>\n</div>\n<div id=\"time-bar-chart\">\n<h3>Time bar chart</h3>\n<p>You can plot a beautiful time series bar chart like:</p>\n<pre>data = pycoolplot.np.linspace(450, 990, 12) + \\\n    pycoolplot.np.random.randint(-50, 50, 12)\ntime_index = pycoolplot.pd.date_range('2017/5', periods=12, freq='MS')\npycoolplot.time_vertical_bar(data, time_index, xlabel=\"time\", ylabel=\"MAU\")\npycoolplot.plt.show()\n</pre>\n<div>\n<img alt=\"5\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/13b7a4cc6925c67ca254ace299d463eb7f230704/68747470733a2f2f6769746875622e636f6d2f4174737573686953616b61692f5079436f6f6c506c6f742f7261772f6d61737465722f696d67732f352e706e67\">\n<p>5</p>\n</div>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<ul>\n<li><a href=\"https://github.com/AtsushiSakai/\" rel=\"nofollow\">Atsushi Sakai</a>\n([@Atsushi_twi](<a href=\"https://twitter.com/Atsushi_twi\" rel=\"nofollow\">https://twitter.com/Atsushi_twi</a>))</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4135038, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "b898546fb87c010800e6d076beef82e3", "sha256": "e9a7208bdebd4cd62808484e34d7a13f67ac7478367022a600de14b02bc65b69"}, "downloads": -1, "filename": "PyCoolPlot-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b898546fb87c010800e6d076beef82e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4369, "upload_time": "2018-08-04T07:45:21", "upload_time_iso_8601": "2018-08-04T07:45:21.626481Z", "url": "https://files.pythonhosted.org/packages/0f/23/58799d7bec63cfaeeec16fb2abda6c5c698a32b529323bc9568c2a7797a9/PyCoolPlot-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b898546fb87c010800e6d076beef82e3", "sha256": "e9a7208bdebd4cd62808484e34d7a13f67ac7478367022a600de14b02bc65b69"}, "downloads": -1, "filename": "PyCoolPlot-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b898546fb87c010800e6d076beef82e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4369, "upload_time": "2018-08-04T07:45:21", "upload_time_iso_8601": "2018-08-04T07:45:21.626481Z", "url": "https://files.pythonhosted.org/packages/0f/23/58799d7bec63cfaeeec16fb2abda6c5c698a32b529323bc9568c2a7797a9/PyCoolPlot-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:03 2020"}