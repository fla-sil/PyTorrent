{"info": {"author": "Scott Sherrill-Mix", "author_email": "shescott@upenn.edu", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License (GPL)", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "ampCountPy\n==========\n.. image:: https://travis-ci.org/sherrillmix/ampCountPy.svg?branch=master\n    :alt: Travis CI\n    :target: https://travis-ci.org/sherrillmix/ampCountPy\n.. image:: https://codecov.io/github/sherrillmix/ampCountPy/coverage.svg?branch=master\n    :alt: Codecov\n    :target: https://codecov.io/github/sherrillmix/ampCountPy?branch=master\n.. image:: https://badge.fury.io/py/ampcountpy.svg\n    :alt: PyPi version\n    :target: https://badge.fury.io/py/ampcountpy\n\n\nSome python functions to count the expected amplifications for genomic regions given a set of primer binding locations for a `multiple displacement amplification <http://en.wikipedia.org/wiki/Multiple_displacement_amplification>`_ reaction. See `ampCountR <https://github.com/sherrillmix/ampCountR>`_ for more details.\n \nInstallation\n------------\nEasy install\n~~~~~~~~~~~~\n\nThe easy way to install is to just do::\n\n  pip install ampcountpy\n\nGithub\n~~~~~~\n\nTo install the development version from github, clone the repository to a local directory using something like::\n\n    git clone https://github.com/sherrillmix/ampcountpy.git\n\nand run `setup.py` from the resulting directory (the `--user` installs it locally and doesn't require root access)::\n\n  cd ampcountpy\n  python setup.py install --user\n  python setup.py test\n\nRun directly\n------------\nThe module can be called directly using something like::\n\n  python -m ampcountpy -f forward.txt -r reverse.txt\n\nor::\n\n  ampcountpy -f forward.txt -r reverse.txt\n\nwhere `forward.txt` is a text file containing position of primer landing sites on the forward strand and `reverse.txt` is primer landing sites on the reverse strand. By default, amplification predictions are output to out.csv. The full details on options and arguments is available with::\n\n  ampcountpy --help\n\nUsing function in python\n------------------------\nThe main function is `predictAmplifications` which can be used like:\n\n..  code:: python\n\n  from ampcountpy import predictAmplifications\n    forwards=[1,2,3]\n    reverses=[5,6,7]\n    predictions=predictAmplifications(forwards,reverses)\n\nwhere `forwards` are the 5'-most base of primer landing sites on the forward strand and `reverses` are the 3'-most base of primers landing on the reverse strand.\n\n\nChangelog\n---------\n0.2.0 (2015-12-08)\n\n* Count non-overlapping primers correctly\n\n0.1.3 (2015-11-02)\n\n* Fix header\n\n0.1.2 (2015-11-02)\n\n* Fix changelog formatting\n\n0.1.1 (2015-11-02)\n\n* Pip install instructions\n\n0.1.0 (2015-11-02)\n\n* Initial public release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/sherrillmix/ampCountPy", "keywords": null, "license": "GPL 3", "maintainer": null, "maintainer_email": null, "name": "ampcountpy", "package_url": "https://pypi.org/project/ampcountpy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ampcountpy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/sherrillmix/ampCountPy"}, "release_url": "https://pypi.org/project/ampcountpy/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Some functions to count the expected amplifications for genomic regions given a set of primer binding locations for a multiple displacement amplification reaction.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/sherrillmix/ampCountPy\" rel=\"nofollow\"><img alt=\"Travis CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/799b646656b1e2d7061ce697a12e871dfa705617/68747470733a2f2f7472617669732d63692e6f72672f7368657272696c6c6d69782f616d70436f756e7450792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/github/sherrillmix/ampCountPy?branch=master\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/881294e7cdf0cd1bd7b441de46d390db4d6cdde7/68747470733a2f2f636f6465636f762e696f2f6769746875622f7368657272696c6c6d69782f616d70436f756e7450792f636f7665726167652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/ampcountpy\" rel=\"nofollow\"><img alt=\"PyPi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70cc4ba4eef6a9577bcfa33e2b9397c4b4000d35/68747470733a2f2f62616467652e667572792e696f2f70792f616d70636f756e7470792e737667\"></a>\n<p>Some python functions to count the expected amplifications for genomic regions given a set of primer binding locations for a <a href=\"http://en.wikipedia.org/wiki/Multiple_displacement_amplification\" rel=\"nofollow\">multiple displacement amplification</a> reaction. See <a href=\"https://github.com/sherrillmix/ampCountR\" rel=\"nofollow\">ampCountR</a> for more details.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"easy-install\">\n<h3>Easy install</h3>\n<p>The easy way to install is to just do:</p>\n<pre>pip install ampcountpy\n</pre>\n</div>\n<div id=\"github\">\n<h3>Github</h3>\n<p>To install the development version from github, clone the repository to a local directory using something like:</p>\n<pre>git clone https://github.com/sherrillmix/ampcountpy.git\n</pre>\n<p>and run <cite>setup.py</cite> from the resulting directory (the <cite>\u2013user</cite> installs it locally and doesn\u2019t require root access):</p>\n<pre>cd ampcountpy\npython setup.py install --user\npython setup.py test\n</pre>\n</div>\n</div>\n<div id=\"run-directly\">\n<h2>Run directly</h2>\n<p>The module can be called directly using something like:</p>\n<pre>python -m ampcountpy -f forward.txt -r reverse.txt\n</pre>\n<p>or:</p>\n<pre>ampcountpy -f forward.txt -r reverse.txt\n</pre>\n<p>where <cite>forward.txt</cite> is a text file containing position of primer landing sites on the forward strand and <cite>reverse.txt</cite> is primer landing sites on the reverse strand. By default, amplification predictions are output to out.csv. The full details on options and arguments is available with:</p>\n<pre>ampcountpy --help\n</pre>\n</div>\n<div id=\"using-function-in-python\">\n<h2>Using function in python</h2>\n<p>The main function is <cite>predictAmplifications</cite> which can be used like:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ampcountpy</span> <span class=\"kn\">import</span> <span class=\"n\">predictAmplifications</span>\n  <span class=\"n\">forwards</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n  <span class=\"n\">reverses</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">]</span>\n  <span class=\"n\">predictions</span><span class=\"o\">=</span><span class=\"n\">predictAmplifications</span><span class=\"p\">(</span><span class=\"n\">forwards</span><span class=\"p\">,</span><span class=\"n\">reverses</span><span class=\"p\">)</span>\n</pre>\n<p>where <cite>forwards</cite> are the 5\u2019-most base of primer landing sites on the forward strand and <cite>reverses</cite> are the 3\u2019-most base of primers landing on the reverse strand.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p>0.2.0 (2015-12-08)</p>\n<ul>\n<li>Count non-overlapping primers correctly</li>\n</ul>\n<p>0.1.3 (2015-11-02)</p>\n<ul>\n<li>Fix header</li>\n</ul>\n<p>0.1.2 (2015-11-02)</p>\n<ul>\n<li>Fix changelog formatting</li>\n</ul>\n<p>0.1.1 (2015-11-02)</p>\n<ul>\n<li>Pip install instructions</li>\n</ul>\n<p>0.1.0 (2015-11-02)</p>\n<ul>\n<li>Initial public release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1852681, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b9077d1dccc13bbf7cbed37af7c2cd97", "sha256": "0573bd6fc07293621cae46c5122cdb5c139ac208ce59ba3aca5afbc0d408619c"}, "downloads": -1, "filename": "ampcountpy-0.1.tar.gz", "has_sig": false, "md5_digest": "b9077d1dccc13bbf7cbed37af7c2cd97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5036, "upload_time": "2015-11-02T16:24:33", "upload_time_iso_8601": "2015-11-02T16:24:33.404453Z", "url": "https://files.pythonhosted.org/packages/28/7f/e91ce109dde7ca781e0f895bd8a44975893a8fe454162d5ec98d4ec9d42d/ampcountpy-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "26fd3d87dbd2e1311ee7fa5b98a86d1a", "sha256": "85c121321520e74addea1a247b15df4a565d3b9e17a9883cbd90cceee4ead665"}, "downloads": -1, "filename": "ampcountpy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "26fd3d87dbd2e1311ee7fa5b98a86d1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5189, "upload_time": "2015-11-02T16:42:39", "upload_time_iso_8601": "2015-11-02T16:42:39.392071Z", "url": "https://files.pythonhosted.org/packages/81/39/0d9e6672841c5069a4e336b3665f1777aa79dc138b5e197803afbc1d4f93/ampcountpy-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "fdd1794349eec08a1c971a6ec54a5d0f", "sha256": "06076aac8cc6d8e0ed595b3b09f7ab82ebb45043594fea777bdbd555fa3c7f73"}, "downloads": -1, "filename": "ampcountpy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fdd1794349eec08a1c971a6ec54a5d0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5221, "upload_time": "2015-11-02T16:47:21", "upload_time_iso_8601": "2015-11-02T16:47:21.117194Z", "url": "https://files.pythonhosted.org/packages/44/86/2cd01177f7ce6ee0cfafaf978dadc4008cacedf6e0e3b424670ef3ac8438/ampcountpy-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "6ae3328b6d501516767a1f67b9a5b9c7", "sha256": "3bd6ee4a05602db6037bd0f638459e8c75940e87f712099c53659df78dfe7c64"}, "downloads": -1, "filename": "ampcountpy-0.1.3.tar.gz", "has_sig": false, "md5_digest": "6ae3328b6d501516767a1f67b9a5b9c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5234, "upload_time": "2015-11-02T16:50:09", "upload_time_iso_8601": "2015-11-02T16:50:09.813201Z", "url": "https://files.pythonhosted.org/packages/cb/ce/47c222d6a5012eee489aa53f74a255cd9b99495128fff766cb67870e3bc3/ampcountpy-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "bfff555b3e1e69f9ce30cd3bc058778f", "sha256": "ab6032343abb133190fa12be4d66fa73086f223553acf5baf95f9cc33f196c98"}, "downloads": -1, "filename": "ampcountpy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "bfff555b3e1e69f9ce30cd3bc058778f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6180, "upload_time": "2015-12-08T19:13:37", "upload_time_iso_8601": "2015-12-08T19:13:37.342173Z", "url": "https://files.pythonhosted.org/packages/44/96/8697bd7926f80de43e4fa658d2a2415ee75e437cd073988d73fdbe473bfe/ampcountpy-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bfff555b3e1e69f9ce30cd3bc058778f", "sha256": "ab6032343abb133190fa12be4d66fa73086f223553acf5baf95f9cc33f196c98"}, "downloads": -1, "filename": "ampcountpy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "bfff555b3e1e69f9ce30cd3bc058778f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6180, "upload_time": "2015-12-08T19:13:37", "upload_time_iso_8601": "2015-12-08T19:13:37.342173Z", "url": "https://files.pythonhosted.org/packages/44/96/8697bd7926f80de43e4fa658d2a2415ee75e437cd073988d73fdbe473bfe/ampcountpy-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:20 2020"}