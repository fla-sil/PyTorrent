{"info": {"author": "David Tucker", "author_email": "david.michael.tucker@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries"], "description": "GeoJSON ToolKit\n===============\n\n``gjtk`` is a library for working with `GeoJSON`_. It aims to be as compliant with the specification (soon `standard`_, hopefully) as possible.\n\n|Build Status| |PyPI Version|\n\nInstallation\n------------\n\n``gjtk`` is available on `PyPI`_.\n\n.. code:: sh\n\n    pip install gjtk\n\nUsage\n-----\n\n.. code:: python\n\n    import gjtk\n\nModules\n-------\n\n``gjtk.extract``\n~~~~~~~~~~~~~~~~\n\n+------------------------------+-----------------------------------------------------------+\n| Method                       | Description                                               |\n+==============================+===========================================================+\n| ``positions_of(geojson)``    | returns all the Positions in a valid `GeoJSON object`_    |\n+------------------------------+-----------------------------------------------------------+\n| ``features_of(geojson)``     | returns all the Features in a valid `GeoJSON object`_     |\n+------------------------------+-----------------------------------------------------------+\n| ``geometries_of(geojson)``   | returns all the Geometries in a valid `GeoJSON object`_   |\n+------------------------------+-----------------------------------------------------------+\n\n``gjtk.generate``\n~~~~~~~~~~~~~~~~~\n\n+---------------------------------------+-----------------------------------------+\n| Method                                | Description                             |\n+=======================================+=========================================+\n| ``point(position)``                   | returns a valid `Point`_                |\n+---------------------------------------+-----------------------------------------+\n| ``multi_point(coordinates)``          | returns a valid `MultiPoint`_           |\n+---------------------------------------+-----------------------------------------+\n| ``line_string(coordinates)``          | returns a valid `LineString`_           |\n+---------------------------------------+-----------------------------------------+\n| ``multi_line_string(coordinates)``    | returns a valid `MultiLineString`_      |\n+---------------------------------------+-----------------------------------------+\n| ``polygon(coordinates)``              | returns a valid `Polygon`_              |\n+---------------------------------------+-----------------------------------------+\n| ``multi_polygon(coordinates)``        | returns a valid `MultiPolygon`_         |\n+---------------------------------------+-----------------------------------------+\n| ``geometry_collection(geometries)``   | returns a valid `GeometryCollection`_   |\n+---------------------------------------+-----------------------------------------+\n| ``feature(geometry, properties)``     | returns a valid `Feature`_              |\n+---------------------------------------+-----------------------------------------+\n| ``feature_collection(features)``      | returns a valid `FeatureCollection`_    |\n+---------------------------------------+-----------------------------------------+\n\n``gjtk.random``\n~~~~~~~~~~~~~~~\n\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| Method                                                                      | Description                                     |\n+=============================================================================+=================================================+\n| ``position(max_numbers=3, min_numbers=2)``                                  | returns a random `Position`_                    |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``point_coordinates()``                                                     | returns random `Point`_ coordinates             |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``multi_point_coordinates(max_positions=6, min_positions=0)``               | returns random `MultiPoint`_ coordinates        |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``line_string_coordinates(max_positions=6, min_positions=2)``               | returns random `LineString`_ coordinates        |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``linear_ring_coordinates()``                                               | returns random `LinearRing`_ coordinates        |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``multi_line_string_coordinates(max_line_strings=6, min_line_strings=1)``   | returns random `MultiLineString`_ coordinates   |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``polygon_coordinates()``                                                   | returns random `Polygon`_ coordinates           |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``multi_polygon_coordinates(max_polygons=6, min_polygons=1)``               | returns random `MultiPolygon`_ coordinates      |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``geometry()``                                                              | returns a random `Geometry`_                    |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``point()``                                                                 | returns a random `Point`_                       |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``multi_point()``                                                           | returns a random `MultiPoint`_                  |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``line_string()``                                                           | returns a random `LineString`_                  |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``multi_line_string()``                                                     | returns a random `MultiLineString`_             |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``polygon()``                                                               | returns a random `Polygon`_                     |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``multi_polygon()``                                                         | returns a random `MultiPolygon`_                |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``geometry_collection(max_geometries=3, min_geometries=0)``                 | returns a random `GeometryCollection`_          |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``feature()``                                                               | returns a random `Feature`_                     |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``feature_collection(max_features=3, min_features=0)``                      | returns a random `FeatureCollection`_           |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``crs()``                                                                   | returns a random `CRS`_                         |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``link()``                                                                  | returns a random `Link`_                        |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n| ``bbox(max_dimensions=4, min_dimensions=2)``                                | returns a random `Bbox`_                        |\n+-----------------------------------------------------------------------------+-------------------------------------------------+\n\n``gjtk.validate``\n~~~~~~~~~~~~~~~~~\n\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| Method                                                    | Description                                                                                              |\n+===========================================================+==========================================================================================================+\n| ``is_geojson(anything)``                                  | returns ``True`` when passed a valid `GeoJSON object`_, otherwise ``False``                              |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_geometry(anything)``                                 | returns ``True`` when passed a valid `Geometry`_, otherwise ``False``                                    |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_position(anything)``                                 | returns ``True`` when passed a valid `Position`_, otherwise ``False``                                    |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_point_coordinates(anything)``                        | returns ``True`` when passed valid `Point`_ coordinates, otherwise ``False``                             |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_multi_point_coordinates(anything)``                  | returns ``True`` when passed valid `MultiPoint`_ coordinates, otherwise ``False``                        |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_line_string_coordinates(anything)``                  | returns ``True`` when passed valid `LineString`_ coordinates, otherwise ``False``                        |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_linear_ring_coordinates(anything)``                  | returns ``True`` when passed valid `LinearRing`_ coordinates, otherwise ``False``                        |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_multi_line_string_coordinates(anything)``            | returns ``True`` when passed valid `MultiLineString`_ coordinates, otherwise ``False``                   |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_polygon_coordinates(anything)``                      | returns ``True`` when passed valid `Polygon`_ coordinates, otherwise ``False``                           |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_multi_polygon_coordinates(anything)``                | returns ``True`` when passed valid `MultiPolygon`_ coordinates, otherwise ``False``                      |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_point(anything)``                                    | returns ``True`` when passed a valid `Point`_, otherwise ``False``                                       |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_multi_point(anything)``                              | returns ``True`` when passed a valid `MultiPoint`_, otherwise ``False``                                  |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_line_string(anything)``                              | returns ``True`` when passed a valid `LineString`_, otherwise ``False``                                  |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_multi_line_string(anything)``                        | returns ``True`` when passed a valid `MultiLineString`_, otherwise ``False``                             |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_polygon(anything)``                                  | returns ``True`` when passed a valid `Polygon`_, otherwise ``False``                                     |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_multi_polygon(anything)``                            | returns ``True`` when passed a valid `MultiPolygon`_, otherwise ``False``                                |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_geometry_collection(anything)``                      | returns ``True`` when passed a valid `GeometryCollection`_, otherwise ``False``                          |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_feature(anything)``                                  | returns ``True`` when passed a valid `Feature`_, otherwise ``False``                                     |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_feature_collection(anything)``                       | returns ``True`` when passed a valid `Feature Collection`_, otherwise ``False``                          |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_crs(anything)``                                      | returns ``True`` when passed a valid `CRS`_, otherwise ``False``                                         |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``has_crs(anything)``                                     | returns ``True`` when passed a `GeoJSON object`_ that validly specifies a `CRS`_, otherwise ``False``    |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_link(anything)``                                     | returns ``True`` when passed a valid `Link`_, otherwise ``False``                                        |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``is_bbox(anything)``                                     | returns ``True`` when passed a valid `Bbox`_, otherwise ``False``                                        |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``has_bbox(anything)``                                    | returns ``True`` when passed a `GeoJSON object`_ that validly specifies a `Bbox`_, otherwise ``False``   |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``equal_positions(position1, position2)``                 | returns ``True`` when all parameters are identical `Positions`_, otherwise ``False``                     |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n| ``contained_polygon(innerLinearRing, outerLinearRing)``   | returns ``True`` when one `LinearRing`_ contains another, otherwise ``False``                            |\n+-----------------------------------------------------------+----------------------------------------------------------------------------------------------------------+\n\n.. _GeoJSON: http://geojson.org/\n.. _standard: https://github.com/geojson/draft-geojson\n.. _PyPI: https://pypi.python.org/pypi/gjtk\n.. _GeoJSON object: http://geojson.org/geojson-spec.html#geojson-objects\n.. _Point: http://geojson.org/geojson-spec.html#point\n.. _MultiPoint: http://geojson.org/geojson-spec.html#multipoint\n.. _LineString: http://geojson.org/geojson-spec.html#linestring\n.. _MultiLineString: http://geojson.org/geojson-spec.html#multilinestring\n.. _Polygon: http://geojson.org/geojson-spec.html#polygon\n.. _MultiPolygon: http://geojson.org/geojson-spec.html#multipolygon\n.. _GeometryCollection: http://geojson.org/geojson-spec.html#geometry-collection\n.. _Feature: http://geojson.org/geojson-spec.html#feature-objects\n.. _FeatureCollection: http://geojson.org/geojson-spec.html#feature-collection-objects\n.. _Position: http://geojson.org/geojson-spec.html#positions\n.. _LinearRing: http://geojson.org/geojson-spec.html#linestring\n.. _Geometry: http://geojson.org/geojson-spec.html#geometry-objects\n.. _CRS: http://geojson.org/geojson-spec.html#coordinate-reference-system-objects\n.. _Link: http://geojson.org/geojson-spec.html#link-objects\n.. _Bbox: http://geojson.org/geojson-spec.html#bounding-boxes\n.. _Feature Collection: http://geojson.org/geojson-spec.html#feature-collection-objects\n.. _Positions: http://geojson.org/geojson-spec.html#positions\n\nLicense\n-------\n\nCopyright (C) 2016 David Tucker\n\nThis library is free software; you can redistribute it and/or modify it\nunder the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation; either version 2.1 of the License, or (at\nyour option) any later version.\n\nThis library is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser\nGeneral Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with this library; if not, write to the Free Software Foundation,\nInc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n\n.. |Build Status| image:: https://img.shields.io/travis/dmtucker/gjtk-py.svg\n   :target: https://travis-ci.org/dmtucker/gjtk-py\n.. |PyPI Version| image:: https://img.shields.io/pypi/v/gjtk.svg\n   :target: https://pypi.python.org/pypi/gjtk", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dmtucker/gjtk-py", "keywords": "GeoJSON", "license": "LGPLv2+", "maintainer": null, "maintainer_email": null, "name": "gjtk", "package_url": "https://pypi.org/project/gjtk/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gjtk/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/dmtucker/gjtk-py"}, "release_url": "https://pypi.org/project/gjtk/3.0.0/", "requires_dist": null, "requires_python": null, "summary": "GeoJSON ToolKit", "version": "3.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>gjtk</tt> is a library for working with <a href=\"http://geojson.org/\" rel=\"nofollow\">GeoJSON</a>. It aims to be as compliant with the specification (soon <a href=\"https://github.com/geojson/draft-geojson\" rel=\"nofollow\">standard</a>, hopefully) as possible.</p>\n<p><a href=\"https://travis-ci.org/dmtucker/gjtk-py\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5093bb42bcc400d51c2136f30eaa37a74c925398/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f646d7475636b65722f676a746b2d70792e737667\"></a> <a href=\"https://pypi.python.org/pypi/gjtk\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a3c487c7db5d22617a0e5d978c4d45a2441419a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f676a746b2e737667\"></a></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>gjtk</tt> is available on <a href=\"https://pypi.python.org/pypi/gjtk\" rel=\"nofollow\">PyPI</a>.</p>\n<pre>pip install gjtk\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">gjtk</span>\n</pre>\n</div>\n<div id=\"modules\">\n<h2>Modules</h2>\n<div id=\"gjtk-extract\">\n<h3><tt>gjtk.extract</tt></h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>positions_of(geojson)</tt></td>\n<td>returns all the Positions in a valid <a href=\"http://geojson.org/geojson-spec.html#geojson-objects\" rel=\"nofollow\">GeoJSON object</a></td>\n</tr>\n<tr><td><tt>features_of(geojson)</tt></td>\n<td>returns all the Features in a valid <a href=\"http://geojson.org/geojson-spec.html#geojson-objects\" rel=\"nofollow\">GeoJSON object</a></td>\n</tr>\n<tr><td><tt>geometries_of(geojson)</tt></td>\n<td>returns all the Geometries in a valid <a href=\"http://geojson.org/geojson-spec.html#geojson-objects\" rel=\"nofollow\">GeoJSON object</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"gjtk-generate\">\n<h3><tt>gjtk.generate</tt></h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>point(position)</tt></td>\n<td>returns a valid <a href=\"http://geojson.org/geojson-spec.html#point\" rel=\"nofollow\">Point</a></td>\n</tr>\n<tr><td><tt>multi_point(coordinates)</tt></td>\n<td>returns a valid <a href=\"http://geojson.org/geojson-spec.html#multipoint\" rel=\"nofollow\">MultiPoint</a></td>\n</tr>\n<tr><td><tt>line_string(coordinates)</tt></td>\n<td>returns a valid <a href=\"http://geojson.org/geojson-spec.html#linestring\" rel=\"nofollow\">LineString</a></td>\n</tr>\n<tr><td><tt>multi_line_string(coordinates)</tt></td>\n<td>returns a valid <a href=\"http://geojson.org/geojson-spec.html#multilinestring\" rel=\"nofollow\">MultiLineString</a></td>\n</tr>\n<tr><td><tt>polygon(coordinates)</tt></td>\n<td>returns a valid <a href=\"http://geojson.org/geojson-spec.html#polygon\" rel=\"nofollow\">Polygon</a></td>\n</tr>\n<tr><td><tt>multi_polygon(coordinates)</tt></td>\n<td>returns a valid <a href=\"http://geojson.org/geojson-spec.html#multipolygon\" rel=\"nofollow\">MultiPolygon</a></td>\n</tr>\n<tr><td><tt>geometry_collection(geometries)</tt></td>\n<td>returns a valid <a href=\"http://geojson.org/geojson-spec.html#geometry-collection\" rel=\"nofollow\">GeometryCollection</a></td>\n</tr>\n<tr><td><tt>feature(geometry, properties)</tt></td>\n<td>returns a valid <a href=\"http://geojson.org/geojson-spec.html#feature-objects\" rel=\"nofollow\">Feature</a></td>\n</tr>\n<tr><td><tt>feature_collection(features)</tt></td>\n<td>returns a valid <a href=\"http://geojson.org/geojson-spec.html#feature-collection-objects\" rel=\"nofollow\">FeatureCollection</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"gjtk-random\">\n<h3><tt>gjtk.random</tt></h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>position(max_numbers=3, min_numbers=2)</tt></td>\n<td>returns a random <a href=\"http://geojson.org/geojson-spec.html#positions\" rel=\"nofollow\">Position</a></td>\n</tr>\n<tr><td><tt>point_coordinates()</tt></td>\n<td>returns random <a href=\"http://geojson.org/geojson-spec.html#point\" rel=\"nofollow\">Point</a> coordinates</td>\n</tr>\n<tr><td><tt>multi_point_coordinates(max_positions=6, min_positions=0)</tt></td>\n<td>returns random <a href=\"http://geojson.org/geojson-spec.html#multipoint\" rel=\"nofollow\">MultiPoint</a> coordinates</td>\n</tr>\n<tr><td><tt>line_string_coordinates(max_positions=6, min_positions=2)</tt></td>\n<td>returns random <a href=\"http://geojson.org/geojson-spec.html#linestring\" rel=\"nofollow\">LineString</a> coordinates</td>\n</tr>\n<tr><td><tt>linear_ring_coordinates()</tt></td>\n<td>returns random <a href=\"http://geojson.org/geojson-spec.html#linestring\" rel=\"nofollow\">LinearRing</a> coordinates</td>\n</tr>\n<tr><td><tt>multi_line_string_coordinates(max_line_strings=6, min_line_strings=1)</tt></td>\n<td>returns random <a href=\"http://geojson.org/geojson-spec.html#multilinestring\" rel=\"nofollow\">MultiLineString</a> coordinates</td>\n</tr>\n<tr><td><tt>polygon_coordinates()</tt></td>\n<td>returns random <a href=\"http://geojson.org/geojson-spec.html#polygon\" rel=\"nofollow\">Polygon</a> coordinates</td>\n</tr>\n<tr><td><tt>multi_polygon_coordinates(max_polygons=6, min_polygons=1)</tt></td>\n<td>returns random <a href=\"http://geojson.org/geojson-spec.html#multipolygon\" rel=\"nofollow\">MultiPolygon</a> coordinates</td>\n</tr>\n<tr><td><tt>geometry()</tt></td>\n<td>returns a random <a href=\"http://geojson.org/geojson-spec.html#geometry-objects\" rel=\"nofollow\">Geometry</a></td>\n</tr>\n<tr><td><tt>point()</tt></td>\n<td>returns a random <a href=\"http://geojson.org/geojson-spec.html#point\" rel=\"nofollow\">Point</a></td>\n</tr>\n<tr><td><tt>multi_point()</tt></td>\n<td>returns a random <a href=\"http://geojson.org/geojson-spec.html#multipoint\" rel=\"nofollow\">MultiPoint</a></td>\n</tr>\n<tr><td><tt>line_string()</tt></td>\n<td>returns a random <a href=\"http://geojson.org/geojson-spec.html#linestring\" rel=\"nofollow\">LineString</a></td>\n</tr>\n<tr><td><tt>multi_line_string()</tt></td>\n<td>returns a random <a href=\"http://geojson.org/geojson-spec.html#multilinestring\" rel=\"nofollow\">MultiLineString</a></td>\n</tr>\n<tr><td><tt>polygon()</tt></td>\n<td>returns a random <a href=\"http://geojson.org/geojson-spec.html#polygon\" rel=\"nofollow\">Polygon</a></td>\n</tr>\n<tr><td><tt>multi_polygon()</tt></td>\n<td>returns a random <a href=\"http://geojson.org/geojson-spec.html#multipolygon\" rel=\"nofollow\">MultiPolygon</a></td>\n</tr>\n<tr><td><tt>geometry_collection(max_geometries=3, min_geometries=0)</tt></td>\n<td>returns a random <a href=\"http://geojson.org/geojson-spec.html#geometry-collection\" rel=\"nofollow\">GeometryCollection</a></td>\n</tr>\n<tr><td><tt>feature()</tt></td>\n<td>returns a random <a href=\"http://geojson.org/geojson-spec.html#feature-objects\" rel=\"nofollow\">Feature</a></td>\n</tr>\n<tr><td><tt>feature_collection(max_features=3, min_features=0)</tt></td>\n<td>returns a random <a href=\"http://geojson.org/geojson-spec.html#feature-collection-objects\" rel=\"nofollow\">FeatureCollection</a></td>\n</tr>\n<tr><td><tt>crs()</tt></td>\n<td>returns a random <a href=\"http://geojson.org/geojson-spec.html#coordinate-reference-system-objects\" rel=\"nofollow\">CRS</a></td>\n</tr>\n<tr><td><tt>link()</tt></td>\n<td>returns a random <a href=\"http://geojson.org/geojson-spec.html#link-objects\" rel=\"nofollow\">Link</a></td>\n</tr>\n<tr><td><tt>bbox(max_dimensions=4, min_dimensions=2)</tt></td>\n<td>returns a random <a href=\"http://geojson.org/geojson-spec.html#bounding-boxes\" rel=\"nofollow\">Bbox</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"gjtk-validate\">\n<h3><tt>gjtk.validate</tt></h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>is_geojson(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a valid <a href=\"http://geojson.org/geojson-spec.html#geojson-objects\" rel=\"nofollow\">GeoJSON object</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_geometry(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a valid <a href=\"http://geojson.org/geojson-spec.html#geometry-objects\" rel=\"nofollow\">Geometry</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_position(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a valid <a href=\"http://geojson.org/geojson-spec.html#positions\" rel=\"nofollow\">Position</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_point_coordinates(anything)</tt></td>\n<td>returns <tt>True</tt> when passed valid <a href=\"http://geojson.org/geojson-spec.html#point\" rel=\"nofollow\">Point</a> coordinates, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_multi_point_coordinates(anything)</tt></td>\n<td>returns <tt>True</tt> when passed valid <a href=\"http://geojson.org/geojson-spec.html#multipoint\" rel=\"nofollow\">MultiPoint</a> coordinates, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_line_string_coordinates(anything)</tt></td>\n<td>returns <tt>True</tt> when passed valid <a href=\"http://geojson.org/geojson-spec.html#linestring\" rel=\"nofollow\">LineString</a> coordinates, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_linear_ring_coordinates(anything)</tt></td>\n<td>returns <tt>True</tt> when passed valid <a href=\"http://geojson.org/geojson-spec.html#linestring\" rel=\"nofollow\">LinearRing</a> coordinates, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_multi_line_string_coordinates(anything)</tt></td>\n<td>returns <tt>True</tt> when passed valid <a href=\"http://geojson.org/geojson-spec.html#multilinestring\" rel=\"nofollow\">MultiLineString</a> coordinates, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_polygon_coordinates(anything)</tt></td>\n<td>returns <tt>True</tt> when passed valid <a href=\"http://geojson.org/geojson-spec.html#polygon\" rel=\"nofollow\">Polygon</a> coordinates, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_multi_polygon_coordinates(anything)</tt></td>\n<td>returns <tt>True</tt> when passed valid <a href=\"http://geojson.org/geojson-spec.html#multipolygon\" rel=\"nofollow\">MultiPolygon</a> coordinates, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_point(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a valid <a href=\"http://geojson.org/geojson-spec.html#point\" rel=\"nofollow\">Point</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_multi_point(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a valid <a href=\"http://geojson.org/geojson-spec.html#multipoint\" rel=\"nofollow\">MultiPoint</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_line_string(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a valid <a href=\"http://geojson.org/geojson-spec.html#linestring\" rel=\"nofollow\">LineString</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_multi_line_string(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a valid <a href=\"http://geojson.org/geojson-spec.html#multilinestring\" rel=\"nofollow\">MultiLineString</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_polygon(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a valid <a href=\"http://geojson.org/geojson-spec.html#polygon\" rel=\"nofollow\">Polygon</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_multi_polygon(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a valid <a href=\"http://geojson.org/geojson-spec.html#multipolygon\" rel=\"nofollow\">MultiPolygon</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_geometry_collection(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a valid <a href=\"http://geojson.org/geojson-spec.html#geometry-collection\" rel=\"nofollow\">GeometryCollection</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_feature(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a valid <a href=\"http://geojson.org/geojson-spec.html#feature-objects\" rel=\"nofollow\">Feature</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_feature_collection(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a valid <a href=\"http://geojson.org/geojson-spec.html#feature-collection-objects\" rel=\"nofollow\">Feature Collection</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_crs(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a valid <a href=\"http://geojson.org/geojson-spec.html#coordinate-reference-system-objects\" rel=\"nofollow\">CRS</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>has_crs(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a <a href=\"http://geojson.org/geojson-spec.html#geojson-objects\" rel=\"nofollow\">GeoJSON object</a> that validly specifies a <a href=\"http://geojson.org/geojson-spec.html#coordinate-reference-system-objects\" rel=\"nofollow\">CRS</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_link(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a valid <a href=\"http://geojson.org/geojson-spec.html#link-objects\" rel=\"nofollow\">Link</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>is_bbox(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a valid <a href=\"http://geojson.org/geojson-spec.html#bounding-boxes\" rel=\"nofollow\">Bbox</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>has_bbox(anything)</tt></td>\n<td>returns <tt>True</tt> when passed a <a href=\"http://geojson.org/geojson-spec.html#geojson-objects\" rel=\"nofollow\">GeoJSON object</a> that validly specifies a <a href=\"http://geojson.org/geojson-spec.html#bounding-boxes\" rel=\"nofollow\">Bbox</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>equal_positions(position1, position2)</tt></td>\n<td>returns <tt>True</tt> when all parameters are identical <a href=\"http://geojson.org/geojson-spec.html#positions\" rel=\"nofollow\">Positions</a>, otherwise <tt>False</tt></td>\n</tr>\n<tr><td><tt>contained_polygon(innerLinearRing, outerLinearRing)</tt></td>\n<td>returns <tt>True</tt> when one <a href=\"http://geojson.org/geojson-spec.html#linestring\" rel=\"nofollow\">LinearRing</a> contains another, otherwise <tt>False</tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (C) 2016 David Tucker</p>\n<p>This library is free software; you can redistribute it and/or modify it\nunder the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation; either version 2.1 of the License, or (at\nyour option) any later version.</p>\n<p>This library is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser\nGeneral Public License for more details.</p>\n<p>You should have received a copy of the GNU Lesser General Public License\nalong with this library; if not, write to the Free Software Foundation,\nInc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA</p>\n</div>\n\n          </div>"}, "last_serial": 2128640, "releases": {"3.0.0": [{"comment_text": "", "digests": {"md5": "108899b72b9ecf091972eb5864f4b787", "sha256": "89303ea23f31530cc6bc3ddbbb16c51f5f45cb0c3879ad8a0151e0515feb7251"}, "downloads": -1, "filename": "gjtk-3.0.0.tar.gz", "has_sig": false, "md5_digest": "108899b72b9ecf091972eb5864f4b787", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23691, "upload_time": "2016-05-23T06:36:57", "upload_time_iso_8601": "2016-05-23T06:36:57.374757Z", "url": "https://files.pythonhosted.org/packages/c5/c0/229ea90fea074de6e624e2f4801849b0a1596e72039a06d9a06fd18393a1/gjtk-3.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "108899b72b9ecf091972eb5864f4b787", "sha256": "89303ea23f31530cc6bc3ddbbb16c51f5f45cb0c3879ad8a0151e0515feb7251"}, "downloads": -1, "filename": "gjtk-3.0.0.tar.gz", "has_sig": false, "md5_digest": "108899b72b9ecf091972eb5864f4b787", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23691, "upload_time": "2016-05-23T06:36:57", "upload_time_iso_8601": "2016-05-23T06:36:57.374757Z", "url": "https://files.pythonhosted.org/packages/c5/c0/229ea90fea074de6e624e2f4801849b0a1596e72039a06d9a06fd18393a1/gjtk-3.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:41 2020"}