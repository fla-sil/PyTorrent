{"info": {"author": "Gianni Saporiti", "author_email": "saporitigianni@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Internet", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Build Tools", "Topic :: System :: Networking"], "description": ".. -*-restructuredtext-*-\n\nmemorize: A caching package with options for timed caching and caching aware rate limiting\n==========================================================================================\n\n.. image:: https://img.shields.io/badge/Made%20with-Python-1f425f.svg\n    :target: https://www.python.org/\n\n.. image:: https://img.shields.io/pypi/v/memorize.svg\n    :target: https://pypi.org/project/memorize/\n\n.. image:: https://img.shields.io/pypi/l/memorize.svg\n    :target: https://pypi.org/project/memorize/\n\n.. image:: https://img.shields.io/pypi/pyversions/memorize.svg\n    :target: https://pypi.org/project/memorize/\n\nInstallation\n------------\n\nTo install memorize, simply use pip:\n\n.. code:: bash\n\n    $ pip install memorize\n\nor install directly from source to include latest changes:\n\n.. code:: bash\n\n    $ pip install git+https://github.com/saporitigianni/memorize.git\n\nor clone and then install:\n\n.. code:: bash\n\n    $ git clone https://github.com/saporitigianni/memorize.git\n    $ cd memorize\n    $ python3 setup.py install\n\nUsage\n-----\n\nThis class extends the functools.lru_cache functionality to add timed caching and caching aware rate limiting\n(e.g. if call results are returned from the cache then that particular call does not affect the rate limit)\n\n**Constraints:**\n - Since a dictionary is used to cache results, the positional and keyword arguments to the function must be hashable (NOT lists, dicts, sets, or any other object that does not define hash())\n - It is very important to use the parenthesis even if empty: **@memorize()** NOT **@memorize**\n - When rate limiting, both the **calls** and **period** arguments must be provided otherwise an error is raised\n\n**Default Settings:**\n - timeout = None (can be int or float)\n - maxsize = None (can be int)\n - typed = False (can be True)\n - calls = None (can be int)\n - period = None (can be int or float)\n - aware = False (can be True)\n\n.. code:: python\n\n    from memorize import memorize\n\n    # If you want to use all default settings\n    @memorize()\n    def fib(n):\n        if n < 2:\n            return n\n        else:\n            return fib(n-2) + fib(n-1)\n\n    # With memorization fib(20) will be run 21 times instead of 21891 times\n    # without memorization\n    fib(20)\n\n    # If you want to cache a maximum of 128 calls, cached by different types,\n    # each for 10 seconds use:\n    @memorize(timeout=10, maxsize=128, typed=True)\n\n    # If you want to implement caching aware rate limiting then use the following:\n    # This will limit to no more than 10 calls for every 5 second period and if a\n    # result is returned from the cache it does not count towards the 10 calls.\n    @memorize(calls=10, period=5, aware=True)\n\n\nContributing\n------------\n\nPlease read the `CONTRIBUTING <https://github.com/saporitigianni/memorize/blob/master/CONTRIBUTING.md>`_ document before making changes that you would like adopted in the code.\n\nCode of Conduct\n---------------\n\nEveryone interacting in the ``memorize`` project's codebase, issue\ntrackers, chat rooms, and mailing lists is expected to follow the\n`PyPA Code of Conduct <https://www.pypa.io/en/latest/code-of-conduct/>`_.:octocat:\n\n|\n|\n| ETH 0xaD1F09626b9B8e701D5f0F4a237193Df73d3C445\n| BTC 199zsVqCusefv8yjdYQhUQZmLCyh75dqNV\n| LTC LUBqs7VxC43ttPsQuM1jaZFmshKTAU1Rs9", "description_content_type": "", "docs_url": null, "download_url": "https://pypi.python.org/pypi/memorize", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/saporitigianni/memorize", "keywords": "cache,caching,decorator,rate-limit,timeout,timer", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "memorize", "package_url": "https://pypi.org/project/memorize/", "platform": "", "project_url": "https://pypi.org/project/memorize/", "project_urls": {"Download": "https://pypi.python.org/pypi/memorize", "Homepage": "https://github.com/saporitigianni/memorize"}, "release_url": "https://pypi.org/project/memorize/0.1.1/", "requires_dist": null, "requires_python": ">=3", "summary": "A caching package with options for timed caching and caching aware rate limiting", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://www.python.org/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Made%20with-Python-1f425f.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68a99107ffdf24c5fb2cc4bca38b7b662e501b97/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d616465253230776974682d507974686f6e2d3166343235662e737667\"></a>\n<a href=\"https://pypi.org/project/memorize/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/memorize.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/66ca9fb1ac5f61e91c891cbee8a2838da95a1bbb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d656d6f72697a652e737667\"></a>\n<a href=\"https://pypi.org/project/memorize/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/memorize.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b813c6577683f1f2b4d3c55398693540611cedb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6d656d6f72697a652e737667\"></a>\n<a href=\"https://pypi.org/project/memorize/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/memorize.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eaa054e46b1e83fe808d2f374fc78460857fa4ae/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6d656d6f72697a652e737667\"></a>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install memorize, simply use pip:</p>\n<pre>$ pip install memorize\n</pre>\n<p>or install directly from source to include latest changes:</p>\n<pre>$ pip install git+https://github.com/saporitigianni/memorize.git\n</pre>\n<p>or clone and then install:</p>\n<pre>$ git clone https://github.com/saporitigianni/memorize.git\n$ <span class=\"nb\">cd</span> memorize\n$ python3 setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>This class extends the functools.lru_cache functionality to add timed caching and caching aware rate limiting\n(e.g. if call results are returned from the cache then that particular call does not affect the rate limit)</p>\n<dl>\n<dt><strong>Constraints:</strong></dt>\n<dd><ul>\n<li>Since a dictionary is used to cache results, the positional and keyword arguments to the function must be hashable (NOT lists, dicts, sets, or any other object that does not define hash())</li>\n<li>It is very important to use the parenthesis even if empty: <strong>@memorize()</strong> NOT <strong>@memorize</strong></li>\n<li>When rate limiting, both the <strong>calls</strong> and <strong>period</strong> arguments must be provided otherwise an error is raised</li>\n</ul>\n</dd>\n<dt><strong>Default Settings:</strong></dt>\n<dd><ul>\n<li>timeout = None (can be int or float)</li>\n<li>maxsize = None (can be int)</li>\n<li>typed = False (can be True)</li>\n<li>calls = None (can be int)</li>\n<li>period = None (can be int or float)</li>\n<li>aware = False (can be True)</li>\n</ul>\n</dd>\n</dl>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">memorize</span> <span class=\"kn\">import</span> <span class=\"n\">memorize</span>\n\n<span class=\"c1\"># If you want to use all default settings</span>\n<span class=\"nd\">@memorize</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">n</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># With memorization fib(20) will be run 21 times instead of 21891 times</span>\n<span class=\"c1\"># without memorization</span>\n<span class=\"n\">fib</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If you want to cache a maximum of 128 calls, cached by different types,</span>\n<span class=\"c1\"># each for 10 seconds use:</span>\n<span class=\"nd\">@memorize</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">maxsize</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"n\">typed</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If you want to implement caching aware rate limiting then use the following:</span>\n<span class=\"c1\"># This will limit to no more than 10 calls for every 5 second period and if a</span>\n<span class=\"c1\"># result is returned from the cache it does not count towards the 10 calls.</span>\n<span class=\"nd\">@memorize</span><span class=\"p\">(</span><span class=\"n\">calls</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">period</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">aware</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Please read the <a href=\"https://github.com/saporitigianni/memorize/blob/master/CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING</a> document before making changes that you would like adopted in the code.</p>\n</div>\n<div id=\"code-of-conduct\">\n<h2>Code of Conduct</h2>\n<p>Everyone interacting in the <tt>memorize</tt> project\u2019s codebase, issue\ntrackers, chat rooms, and mailing lists is expected to follow the\n<a href=\"https://www.pypa.io/en/latest/code-of-conduct/\" rel=\"nofollow\">PyPA Code of Conduct</a>.:octocat:</p>\n<div>\n<div><br></div>\n<div><br></div>\n<div>ETH 0xaD1F09626b9B8e701D5f0F4a237193Df73d3C445</div>\n<div>BTC 199zsVqCusefv8yjdYQhUQZmLCyh75dqNV</div>\n<div>LTC LUBqs7VxC43ttPsQuM1jaZFmshKTAU1Rs9</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3907618, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "6301ea139f2c0b9f89071703991b2f38", "sha256": "89f64cac7790d4c979b67efe0a189b294439422c213109918e0a3b8ad9dcd6cd"}, "downloads": -1, "filename": "memorize-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6301ea139f2c0b9f89071703991b2f38", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 7202, "upload_time": "2018-05-29T04:58:22", "upload_time_iso_8601": "2018-05-29T04:58:22.159166Z", "url": "https://files.pythonhosted.org/packages/f4/74/13c9396b079b4992755e04900c906e8fc9f6d27f0fda55db02aaf9365518/memorize-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6301ea139f2c0b9f89071703991b2f38", "sha256": "89f64cac7790d4c979b67efe0a189b294439422c213109918e0a3b8ad9dcd6cd"}, "downloads": -1, "filename": "memorize-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6301ea139f2c0b9f89071703991b2f38", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 7202, "upload_time": "2018-05-29T04:58:22", "upload_time_iso_8601": "2018-05-29T04:58:22.159166Z", "url": "https://files.pythonhosted.org/packages/f4/74/13c9396b079b4992755e04900c906e8fc9f6d27f0fda55db02aaf9365518/memorize-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:19 2020"}