{"info": {"author": "Sadik Erisen", "author_email": "fserisen@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Office/Business :: Financial"], "description": "This package includes financial math calculations for actuarial calculations such as annuity calculations, amortization schedule, sinking fund calculations and constructing tables with those formulas.\n\nInstallation\n============\n\n- pip install actuarialCalculations\n\n\nAnnuity Calculations\n====================\n\nCalcuating present value:\nAssuming our user would like to know the downpayment amount with provided kwargs below;\n\nLogic:\nterms, period and interest amount rate. Price - (presentValue* _N _ Repay Amount ) = Down payment\n\nCalculating the future value:\nAssuming our user pays at the end of the given period, so our program should accumulate the value with gthe iven interest rate;\n\nLogic:\nAccumulated Down payment(1+i)**N = Accumulated Price(1+i)**N - (AccumulatedValue*_N _ Repay Amount)\n\nCalculating The Down Payment with Given Time Value:\nAssuming our user wants to calculate the downpayment with the given period of time\n\nLogic:\nAccumulated Down payment = Accumulated Price ** T -(presentValue * Repay Amount ) ** T- (AccumulatedValue * Repay Amount)**-(N+T) / (1+i)**T\n\nUSAGE\n=====\n\n.. code:: python\n\n    '''\n    Present Value method takes 5 parameters as intergers and returns downpayment amount\n    '''\n    presentValue = PresentValue(\n        InterestRate, effectiveInterestTerms, fixedPeriod, repayAmount, price)\n\n    '''\n    Accumulated Value method takes 5 parameters as intergers and returns downpayment amount (future value)\n    '''\n    accumulatedValue = AccumulatedValue(\n        InterestRate, effectiveInterestTerms, fixedPeriod, repayAmount, price)\n\n    '''\n    Calculate Given Time method takes 5 parameters as intergers and returns downpayment amount at any given time.\n    '''\n    calculateGivenTime = CalculateGivenTime(\n        InterestRate, effectiveInterestTerms, fixedPeriod, repayAmount, price)\n\n\n\nAmortization Schedule Calculation\n==================================\nmethod takes 4 parameters\n\nInterest rate\nYears\nFrequency of the interest that hits in that period of time\nLoan Amount\n\n\n\n\nUSAGE\n=====\n.. code:: python\n\n    '''Create an instance of CalctulateAmortization class and pass the parameters as intergers '''\n    calculate = CalctulateAmortization(interestRate, years, frequency, loanAmount)\n    '''To run the calculations we need to call execute funtion '''\n    calculate.execute()\n\n\n\nSinking Fund Calculation\n==================================\nmethod takes 4 parameters\n\nInterest rate\nYears\nFrequency of the interest that hits in that period of time\nAmount\n\n\nUSAGE\n=====\n.. code:: python\n\n    ''' Create an instance of CalculateSinkingFund class and pass the parameters as integers'''\n    calculate = CalculateSinkingFund(interestRate, years, frequency, amount)\n    '''To run the calculations we need to call execute funtion '''\n    calculate.execute()\n\n\nCONTACT\n=======\n\nThe package is created by Sadik Erisen. Please send email to fserisen@gmail.com if you have questions or comments.\n\nLICENCE\n=======\n\nMIT", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/francose/acturialcalculations/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/francose/acturialcalculations", "keywords": "finance,annuity calculations,actuarial math,financial math,amortization schedule,sinking fund,present value,accumulated value", "license": "", "maintainer": "", "maintainer_email": "", "name": "actuarialCalculations", "package_url": "https://pypi.org/project/actuarialCalculations/", "platform": "", "project_url": "https://pypi.org/project/actuarialCalculations/", "project_urls": {"Download": "https://github.com/francose/acturialcalculations/archive/master.zip", "Homepage": "https://github.com/francose/acturialcalculations"}, "release_url": "https://pypi.org/project/actuarialCalculations/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package includes financial math calculations for actuarial calculations such as annuity calculations, amortization schedule, sinking fund calculations and constructing tables with those formulas.</p>\n<h1>Installation</h1>\n<ul>\n<li>pip install actuarialCalculations</li>\n</ul>\n<h1>Annuity Calculations</h1>\n<p>Calcuating present value:\nAssuming our user would like to know the downpayment amount with provided kwargs below;</p>\n<p>Logic:\nterms, period and interest amount rate. Price - (presentValue* _N _ Repay Amount ) = Down payment</p>\n<p>Calculating the future value:\nAssuming our user pays at the end of the given period, so our program should accumulate the value with gthe iven interest rate;</p>\n<p>Logic:\nAccumulated Down payment(1+i)**N = Accumulated Price(1+i)*<em>N - (AccumulatedValue</em>_N _ Repay Amount)</p>\n<p>Calculating The Down Payment with Given Time Value:\nAssuming our user wants to calculate the downpayment with the given period of time</p>\n<p>Logic:\nAccumulated Down payment = Accumulated Price ** T -(presentValue * Repay Amount ) ** T- (AccumulatedValue * Repay Amount)**-(N+T) / (1+i)**T</p>\n<h1>USAGE</h1>\n<p>.. code:: python</p>\n<pre><code>'''\nPresent Value method takes 5 parameters as intergers and returns downpayment amount\n'''\npresentValue = PresentValue(\n    InterestRate, effectiveInterestTerms, fixedPeriod, repayAmount, price)\n\n'''\nAccumulated Value method takes 5 parameters as intergers and returns downpayment amount (future value)\n'''\naccumulatedValue = AccumulatedValue(\n    InterestRate, effectiveInterestTerms, fixedPeriod, repayAmount, price)\n\n'''\nCalculate Given Time method takes 5 parameters as intergers and returns downpayment amount at any given time.\n'''\ncalculateGivenTime = CalculateGivenTime(\n    InterestRate, effectiveInterestTerms, fixedPeriod, repayAmount, price)\n</code></pre>\n<h1>Amortization Schedule Calculation</h1>\n<p>method takes 4 parameters</p>\n<p>Interest rate\nYears\nFrequency of the interest that hits in that period of time\nLoan Amount</p>\n<h1>USAGE</h1>\n<p>.. code:: python</p>\n<pre><code>'''Create an instance of CalctulateAmortization class and pass the parameters as intergers '''\ncalculate = CalctulateAmortization(interestRate, years, frequency, loanAmount)\n'''To run the calculations we need to call execute funtion '''\ncalculate.execute()\n</code></pre>\n<h1>Sinking Fund Calculation</h1>\n<p>method takes 4 parameters</p>\n<p>Interest rate\nYears\nFrequency of the interest that hits in that period of time\nAmount</p>\n<h1>USAGE</h1>\n<p>.. code:: python</p>\n<pre><code>''' Create an instance of CalculateSinkingFund class and pass the parameters as integers'''\ncalculate = CalculateSinkingFund(interestRate, years, frequency, amount)\n'''To run the calculations we need to call execute funtion '''\ncalculate.execute()\n</code></pre>\n<h1>CONTACT</h1>\n<p>The package is created by Sadik Erisen. Please send email to <a href=\"mailto:fserisen@gmail.com\">fserisen@gmail.com</a> if you have questions or comments.</p>\n<h1>LICENCE</h1>\n<p>MIT</p>\n\n          </div>"}, "last_serial": 6399960, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0f279a292744c3ec6203c99793ebc010", "sha256": "bba75ff26bd61d229537095922cf3258f39515c726f52fc4de3cbd8e834f433a"}, "downloads": -1, "filename": "actuarialCalculations-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0f279a292744c3ec6203c99793ebc010", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3834, "upload_time": "2020-01-05T20:20:00", "upload_time_iso_8601": "2020-01-05T20:20:00.840743Z", "url": "https://files.pythonhosted.org/packages/e5/83/1cc4c1cb9f5d9fac4d5a1953e1c8576db5fe8a714f073e56a2ce7138b58a/actuarialCalculations-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "1fe6d8658ae1c77e547acf01a41fb562", "sha256": "47589c645701e6bc5a4c813f2d2a379bdedf9956aec93eed85ec272dddd2975d"}, "downloads": -1, "filename": "actuarialCalculations-1.0.1.tar.gz", "has_sig": false, "md5_digest": "1fe6d8658ae1c77e547acf01a41fb562", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3837, "upload_time": "2020-01-05T20:31:59", "upload_time_iso_8601": "2020-01-05T20:31:59.105050Z", "url": "https://files.pythonhosted.org/packages/48/07/3024b8ba4865db9ba817e6e1c38d7cda31fe4812bb21cc689d950d0a47cd/actuarialCalculations-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "027bb44a84c883806513f5569521e9b2", "sha256": "0b5209848297c39e80b29eb8ff8ed0ddd21828ac607aba96e96b08b4164361be"}, "downloads": -1, "filename": "actuarialCalculations-1.0.2.tar.gz", "has_sig": false, "md5_digest": "027bb44a84c883806513f5569521e9b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3834, "upload_time": "2020-01-05T23:52:40", "upload_time_iso_8601": "2020-01-05T23:52:40.137669Z", "url": "https://files.pythonhosted.org/packages/96/23/67335b6296f109349a25f8cccdfe07a735bc3fb40d2d5d6dc40f0b3146cd/actuarialCalculations-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "027bb44a84c883806513f5569521e9b2", "sha256": "0b5209848297c39e80b29eb8ff8ed0ddd21828ac607aba96e96b08b4164361be"}, "downloads": -1, "filename": "actuarialCalculations-1.0.2.tar.gz", "has_sig": false, "md5_digest": "027bb44a84c883806513f5569521e9b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3834, "upload_time": "2020-01-05T23:52:40", "upload_time_iso_8601": "2020-01-05T23:52:40.137669Z", "url": "https://files.pythonhosted.org/packages/96/23/67335b6296f109349a25f8cccdfe07a735bc3fb40d2d5d6dc40f0b3146cd/actuarialCalculations-1.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:14 2020"}