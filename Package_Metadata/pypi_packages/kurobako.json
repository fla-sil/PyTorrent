{"info": {"author": "Takeru Ohta", "author_email": "phjgt308@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "kurobako-py\n===========\n\n[![pypi](https://img.shields.io/pypi/v/kurobako.svg)](https://pypi.python.org/pypi/kurobako)\n[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/sile/kurobako-py)\n[![Actions Status](https://github.com/sile/kurobako-py/workflows/CI/badge.svg)](https://github.com/sile/kurobako-py/actions)\n\nA Python library to help implement [kurobako]'s solvers and problems.\n\n[kurobako]: https://github.com/sile/kurobako\n\n\nInstallation\n------------\n\n```console\n$ pip install kurobako\n```\n\nUsage Examples\n--------------\n\n### Define a solver based on random search\n\n```python\n# filename: random_solver.py\nimport numpy as np\n\nfrom kurobako import problem\nfrom kurobako import solver\n\n\nclass RandomSolverFactory(solver.SolverFactory):\n    def specification(self):\n        return solver.SolverSpec(name='Random Search')\n\n    def create_solver(self, seed, problem):\n        return RandomSolver(seed, problem)\n\n\nclass RandomSolver(solver.Solver):\n    def __init__(self, seed, problem):\n        self._rng = np.random.RandomState(seed)\n        self._problem = problem\n\n    def ask(self, idg):\n        params = []\n        for p in self._problem.params:\n            if p.distribution == problem.Distribution.UNIFORM:\n                params.append(self._rng.uniform(p.range.low, p.range.high))\n            else:\n                low = np.log(p.range.low)\n                high = np.log(p.range.high)\n                params.append(float(np.exp(self._rng.uniform(low, high))))\n\n        trial_id = idg.generate()\n        next_step = self._problem.last_step\n        return solver.NextTrial(trial_id, params, next_step)\n\n    def tell(self, trial):\n        pass\n\n\nif __name__ == '__main__':\n    runner = solver.SolverRunner(RandomSolverFactory())\n    runner.run()\n```\n\n### Define a problem that represents a quadratic function `x**2 + y`\n\n```python\n# filename: quadratic_problem.py\nfrom kurobako import problem\n\n\nclass QuadraticProblemFactory(problem.ProblemFactory):\n    def specification(self):\n        params = [\n            problem.Var('x', problem.ContinuousRange(-10, 10)),\n            problem.Var('y', problem.DiscreteRange(-3, 3))\n        ]\n        return problem.ProblemSpec(name='Quadratic Function',\n                                   params=params,\n                                   values=[problem.Var('x**2 + y')])\n\n    def create_problem(self, seed):\n        return QuadraticProblem()\n\n\nclass QuadraticProblem(problem.Problem):\n    def create_evaluator(self, params):\n        return QuadraticEvaluator(params)\n\n\nclass QuadraticEvaluator(problem.Evaluator):\n    def __init__(self, params):\n        self._x, self._y = params\n        self._current_step = 0\n\n    def current_step(self):\n        return self._current_step\n\n    def evaluate(self, next_step):\n        self._current_step = 1\n        return [self._x**2 + self._y]\n\n\nif __name__ == '__main__':\n    runner = problem.ProblemRunner(QuadraticProblemFactory())\n    runner.run()\n```\n\n### Run a benchmark that uses the above solver and problem\n\n```console\n$ SOLVER=$(kurobako solver command python3 random_solver.py)\n$ PROBLEM=$(kurobako problem command python3 quadratic_problem.py)\n$ kurobako studies --solvers $SOLVER --problems $PROBLEM | kurobako run > result.json\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sile/kurobako-py", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "kurobako", "package_url": "https://pypi.org/project/kurobako/", "platform": "", "project_url": "https://pypi.org/project/kurobako/", "project_urls": {"Homepage": "https://github.com/sile/kurobako-py"}, "release_url": "https://pypi.org/project/kurobako/0.1.5/", "requires_dist": null, "requires_python": "", "summary": "A Python library to help implementing kurobako's solvers and problems", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>kurobako-py</h1>\n<p><a href=\"https://pypi.python.org/pypi/kurobako\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/720bcc7291d71895f6666a059cf3eaa35cecdad9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6b75726f62616b6f2e737667\"></a>\n<a href=\"https://github.com/sile/kurobako-py\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c88fab50b4a1dc0cd91faeb7ba5654d56e380260/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667\"></a>\n<a href=\"https://github.com/sile/kurobako-py/actions\" rel=\"nofollow\"><img alt=\"Actions Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4429668fba8e30c09332a26e7501fd331aa2bdac/68747470733a2f2f6769746875622e636f6d2f73696c652f6b75726f62616b6f2d70792f776f726b666c6f77732f43492f62616467652e737667\"></a></p>\n<p>A Python library to help implement <a href=\"https://github.com/sile/kurobako\" rel=\"nofollow\">kurobako</a>'s solvers and problems.</p>\n<h2>Installation</h2>\n<pre><span class=\"gp\">$</span> pip install kurobako\n</pre>\n<h2>Usage Examples</h2>\n<h3>Define a solver based on random search</h3>\n<pre><span class=\"c1\"># filename: random_solver.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">kurobako</span> <span class=\"kn\">import</span> <span class=\"n\">problem</span>\n<span class=\"kn\">from</span> <span class=\"nn\">kurobako</span> <span class=\"kn\">import</span> <span class=\"n\">solver</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">RandomSolverFactory</span><span class=\"p\">(</span><span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">SolverFactory</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">specification</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">SolverSpec</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Random Search'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">create_solver</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"p\">,</span> <span class=\"n\">problem</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">RandomSolver</span><span class=\"p\">(</span><span class=\"n\">seed</span><span class=\"p\">,</span> <span class=\"n\">problem</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">RandomSolver</span><span class=\"p\">(</span><span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">Solver</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"p\">,</span> <span class=\"n\">problem</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_rng</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">RandomState</span><span class=\"p\">(</span><span class=\"n\">seed</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_problem</span> <span class=\"o\">=</span> <span class=\"n\">problem</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">ask</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">idg</span><span class=\"p\">):</span>\n        <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_problem</span><span class=\"o\">.</span><span class=\"n\">params</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">distribution</span> <span class=\"o\">==</span> <span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">Distribution</span><span class=\"o\">.</span><span class=\"n\">UNIFORM</span><span class=\"p\">:</span>\n                <span class=\"n\">params</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_rng</span><span class=\"o\">.</span><span class=\"n\">uniform</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">range</span><span class=\"o\">.</span><span class=\"n\">low</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">range</span><span class=\"o\">.</span><span class=\"n\">high</span><span class=\"p\">))</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">low</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">range</span><span class=\"o\">.</span><span class=\"n\">low</span><span class=\"p\">)</span>\n                <span class=\"n\">high</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">range</span><span class=\"o\">.</span><span class=\"n\">high</span><span class=\"p\">)</span>\n                <span class=\"n\">params</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_rng</span><span class=\"o\">.</span><span class=\"n\">uniform</span><span class=\"p\">(</span><span class=\"n\">low</span><span class=\"p\">,</span> <span class=\"n\">high</span><span class=\"p\">))))</span>\n\n        <span class=\"n\">trial_id</span> <span class=\"o\">=</span> <span class=\"n\">idg</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">()</span>\n        <span class=\"n\">next_step</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_problem</span><span class=\"o\">.</span><span class=\"n\">last_step</span>\n        <span class=\"k\">return</span> <span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">NextTrial</span><span class=\"p\">(</span><span class=\"n\">trial_id</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">next_step</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">tell</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">trial</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">SolverRunner</span><span class=\"p\">(</span><span class=\"n\">RandomSolverFactory</span><span class=\"p\">())</span>\n    <span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h3>Define a problem that represents a quadratic function <code>x**2 + y</code></h3>\n<pre><span class=\"c1\"># filename: quadratic_problem.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">kurobako</span> <span class=\"kn\">import</span> <span class=\"n\">problem</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">QuadraticProblemFactory</span><span class=\"p\">(</span><span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">ProblemFactory</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">specification</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">Var</span><span class=\"p\">(</span><span class=\"s1\">'x'</span><span class=\"p\">,</span> <span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">ContinuousRange</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)),</span>\n            <span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">Var</span><span class=\"p\">(</span><span class=\"s1\">'y'</span><span class=\"p\">,</span> <span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">DiscreteRange</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">ProblemSpec</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Quadratic Function'</span><span class=\"p\">,</span>\n                                   <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">params</span><span class=\"p\">,</span>\n                                   <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">Var</span><span class=\"p\">(</span><span class=\"s1\">'x**2 + y'</span><span class=\"p\">)])</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">create_problem</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">QuadraticProblem</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">QuadraticProblem</span><span class=\"p\">(</span><span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">Problem</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_evaluator</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">QuadraticEvaluator</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">QuadraticEvaluator</span><span class=\"p\">(</span><span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">Evaluator</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_x</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_y</span> <span class=\"o\">=</span> <span class=\"n\">params</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_current_step</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">current_step</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_current_step</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">evaluate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">next_step</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_current_step</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_x</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_y</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">ProblemRunner</span><span class=\"p\">(</span><span class=\"n\">QuadraticProblemFactory</span><span class=\"p\">())</span>\n    <span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h3>Run a benchmark that uses the above solver and problem</h3>\n<pre><span class=\"gp\">$</span> <span class=\"nv\">SOLVER</span><span class=\"o\">=</span><span class=\"k\">$(</span>kurobako solver <span class=\"nb\">command</span> python3 random_solver.py<span class=\"k\">)</span>\n<span class=\"gp\">$</span> <span class=\"nv\">PROBLEM</span><span class=\"o\">=</span><span class=\"k\">$(</span>kurobako problem <span class=\"nb\">command</span> python3 quadratic_problem.py<span class=\"k\">)</span>\n<span class=\"gp\">$</span> kurobako studies --solvers <span class=\"nv\">$SOLVER</span> --problems <span class=\"nv\">$PROBLEM</span> <span class=\"p\">|</span> kurobako run &gt; result.json\n</pre>\n\n          </div>"}, "last_serial": 7052874, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e338532602dcd2e78c6b43f1a27116fc", "sha256": "75d45f2cb1eea74cff4b2295bd9ce97ebddba57f8257c5c83736e79c52ad9933"}, "downloads": -1, "filename": "kurobako-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e338532602dcd2e78c6b43f1a27116fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6100, "upload_time": "2019-11-26T14:25:12", "upload_time_iso_8601": "2019-11-26T14:25:12.570848Z", "url": "https://files.pythonhosted.org/packages/7b/e3/609b49ac36aab52e8d7df6c96e8406fe8a9504b09f83bf173e5257b4fa86/kurobako-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "ab4b79f5ae6cae4c469ba61beea5c4e7", "sha256": "d55652e37cba8be6326a0c9e7c8bf8afd7a323c2be308560bce50f9752da49dc"}, "downloads": -1, "filename": "kurobako-0.0.2.tar.gz", "has_sig": false, "md5_digest": "ab4b79f5ae6cae4c469ba61beea5c4e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6482, "upload_time": "2019-11-27T12:02:06", "upload_time_iso_8601": "2019-11-27T12:02:06.786514Z", "url": "https://files.pythonhosted.org/packages/32/f3/d875d490c0c122626216e192e4f4ec0e5656828a433418bcd6efd81924eb/kurobako-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "78a3060123b8fcb9a52847030a18b8df", "sha256": "35de7947cb1491391789168b885f6e5f4c48c4c1facabc7b35e8a87610bae459"}, "downloads": -1, "filename": "kurobako-0.1.0.tar.gz", "has_sig": false, "md5_digest": "78a3060123b8fcb9a52847030a18b8df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8925, "upload_time": "2019-11-28T15:03:19", "upload_time_iso_8601": "2019-11-28T15:03:19.211566Z", "url": "https://files.pythonhosted.org/packages/6a/a7/7bafc56b2d778e11b477d19236142a745b73870a97e87825d7673ce4d19b/kurobako-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "44ecb200ff1df9bea054f3848f78279c", "sha256": "b1701036c0c9ac60bb2470c9d2e34d0a647ccfab1344912a43824a195eb6fe48"}, "downloads": -1, "filename": "kurobako-0.1.1.tar.gz", "has_sig": false, "md5_digest": "44ecb200ff1df9bea054f3848f78279c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8009, "upload_time": "2019-12-12T02:19:54", "upload_time_iso_8601": "2019-12-12T02:19:54.677369Z", "url": "https://files.pythonhosted.org/packages/e3/db/459d4a06a8777515fb2da34c657da92c386211670d2a0028ac31505ad63e/kurobako-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "6e3dcb1367f22b60d0605f07fbe39826", "sha256": "ab0619185caa2fb0e3daf47191dfd1e78e3e223f5fe5c730579a0356ea4b4f95"}, "downloads": -1, "filename": "kurobako-0.1.2.tar.gz", "has_sig": false, "md5_digest": "6e3dcb1367f22b60d0605f07fbe39826", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9063, "upload_time": "2020-02-16T11:47:01", "upload_time_iso_8601": "2020-02-16T11:47:01.755519Z", "url": "https://files.pythonhosted.org/packages/ed/f9/598e85cd6faf3a4175677756b0e9e6c28139b108257aea05defb74086e41/kurobako-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "981a5a15052864eb281871b1d32cbe0d", "sha256": "e386facecdde1ea7ad4ad00d13959dc63a4bf4a56658cbfb19b05329bd322f3c"}, "downloads": -1, "filename": "kurobako-0.1.3.tar.gz", "has_sig": false, "md5_digest": "981a5a15052864eb281871b1d32cbe0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9072, "upload_time": "2020-03-12T17:15:25", "upload_time_iso_8601": "2020-03-12T17:15:25.872241Z", "url": "https://files.pythonhosted.org/packages/72/15/a4cf26647a0601b3e960310a111ffe547321dfc51e74e14bece1ad50b918/kurobako-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "d53096a11d6d3a029df2f73f0ac0354f", "sha256": "3a0e0a87c1f2c1cc85932300a76bcefe5b4768bfad1f75f6d9d3192a6642577e"}, "downloads": -1, "filename": "kurobako-0.1.4.tar.gz", "has_sig": false, "md5_digest": "d53096a11d6d3a029df2f73f0ac0354f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9086, "upload_time": "2020-04-18T07:39:01", "upload_time_iso_8601": "2020-04-18T07:39:01.922606Z", "url": "https://files.pythonhosted.org/packages/f0/78/cdcd1558a60ec0ff062483a284e2c56b0e6342d43a2eac4e7fa52c5e7ad2/kurobako-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "e72bd1bbd1df4cbfb7768b2503a7c0ed", "sha256": "0c7c618aae4e02dc4becfac3d021eda4aae9796e8b7bd55c335edac773cb482f"}, "downloads": -1, "filename": "kurobako-0.1.5.tar.gz", "has_sig": false, "md5_digest": "e72bd1bbd1df4cbfb7768b2503a7c0ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9082, "upload_time": "2020-04-19T12:05:49", "upload_time_iso_8601": "2020-04-19T12:05:49.013456Z", "url": "https://files.pythonhosted.org/packages/5d/70/81c4755922dada8bafb5d31663159442fe850f6afa71742a3af02c34a64b/kurobako-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e72bd1bbd1df4cbfb7768b2503a7c0ed", "sha256": "0c7c618aae4e02dc4becfac3d021eda4aae9796e8b7bd55c335edac773cb482f"}, "downloads": -1, "filename": "kurobako-0.1.5.tar.gz", "has_sig": false, "md5_digest": "e72bd1bbd1df4cbfb7768b2503a7c0ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9082, "upload_time": "2020-04-19T12:05:49", "upload_time_iso_8601": "2020-04-19T12:05:49.013456Z", "url": "https://files.pythonhosted.org/packages/5d/70/81c4755922dada8bafb5d31663159442fe850f6afa71742a3af02c34a64b/kurobako-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:33 2020"}