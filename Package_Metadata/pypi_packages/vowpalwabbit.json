{"info": {"author": "Scott Graham", "author_email": "scott.d.graham@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Information Analysis"], "description": "Vowpal Wabbit Python Wrapper\n============================\n\n.. image:: https://badge.fury.io/py/vowpalwabbit.svg\n    :alt: PyPI Package\n    :target: https://pypi.python.org/pypi/vowpalwabbit\n.. image:: https://travis-ci.org/VowpalWabbit/vowpal_wabbit.svg?branch=master\n    :alt: Build Status\n    :target: https://travis-ci.org/VowpalWabbit/vowpal_wabbit\n.. image:: https://ci.appveyor.com/api/projects/status/6hqpd9e64h72gybr/branch/master?svg=true\n    :alt: Windows Build Status\n    :target: https://ci.appveyor.com/project/VowpalWabbit/vowpal-wabbit\n.. image:: https://coveralls.io/repos/github/VowpalWabbit/vowpal_wabbit/badge.svg\n    :alt: Coverage\n    :target: https://coveralls.io/r/VowpalWabbit/vowpal_wabbit\n\nVowpal Wabbit is a fast machine learning library for online learning, and this is the python wrapper for the project.\n\nInstalling this package builds Vowpal Wabbit locally for explicit use within python, it will not create the command-line version\nof the tool (or affect any previously existing command-line installations).\nTo install the command-line version see the main project page: https://github.com/VowpalWabbit/vowpal_wabbit\n\nThe version of the PyPI vowpalwabbit package corresponds to the tagged version of the code in the github repo that will be used\nduring building and installation.\nIf you need to make local changes to the code and rebuild the python binding be sure to pip uninstall vowpalwabbit then rebuild\nusing the local repo installation instructions below.\n\nInstallation\n------------\n\nFrom PyPI:\n\nLinux/Mac OSX:\n\n.. code-block:: bash\n\n    $ pip install vowpalwabbit\n\nWindows:\n\n.. code-block:: bat\n\n    > pip install --global-option=\"--vcpkg-root=path\\to\\vcpkg\" vowpalwabbit\n    \n\n\nFrom local repo (useful when making modifications):\n\n.. code-block:: bash\n\n    # Dependencies\n    $ sudo apt install libboost-dev libboost-program-options-dev libboost-system-dev libboost-thread-dev libboost-math-dev libboost-test-dev libboost-python-dev zlib1g-dev cmake \n    \n    # Build and install package\n    $ python setup.py install\n\n\nUsage\n-----\n\nYou can use the python wrapper directly like this:\n\n.. code-block:: python\n\n    >>> from vowpalwabbit import pyvw\n    >>> vw = pyvw.vw(quiet=True)\n    >>> ex = vw.example('1 | a b c')\n    >>> vw.learn(ex)\n    >>> vw.predict(ex)\n\nOr you can use the included scikit-learn interface like this:\n\n.. code-block:: python\n\n    >>> import numpy as np\n    >>> from sklearn import datasets\n    >>> from sklearn.model_selection import train_test_split\n    >>> from vowpalwabbit.sklearn_vw import VWClassifier\n    >>>\n    >>> # generate some data\n    >>> X, y = datasets.make_hastie_10_2(n_samples=10000, random_state=1)\n    >>> X = X.astype(np.float32)\n    >>>\n    >>> # split train and test set\n    >>> X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=256)\n    >>>\n    >>> # build model\n    >>> model = VWClassifier()\n    >>> model.fit(X_train, y_train)\n    >>>\n    >>> # predict model\n    >>> y_pred = model.predict(X_test)\n    >>>\n    >>> # evaluate model\n    >>> model.score(X_train, y_train)\n    >>> model.score(X_test, y_test)\n\nTroubleshooting\n---------------\n\nSome common causes of failure for installation are due to missing or mis-matched dependencies when Vowpal Wabbit builds.\nMake sure you have boost and boost-python installed on your system.\n\nFor Ubuntu/Debian/Mint\n\n.. code-block:: bash\n\n    $ apt install libboost-dev libboost-program-options-dev libboost-system-dev libboost-thread-dev libboost-math-dev libboost-test-dev libboost-python-dev zlib1g-dev cmake \n\nFor Mac OSX\n\n.. code-block:: bash\n\n    $ brew install cmake\n    $ brew install boost\n    #If you want to build with python 2 support\n    brew install boost-python\n    #If you want to build with python 3 support\n    brew install boost-python3\n    \nFor Windows\n\n    1. Install vcpkg_\n\n    2. Run\n\n.. code-block:: bat\n\n    > vcpkg --triplet x64-windows install zlib boost-system boost-program-options boost-test boost-align boost-foreach boost-python boost-math boost-thread python3 boost-python\n\n.. _vcpkg: https://github.com/microsoft/vcpkg\n\nInstalling Vowpal Wabbit under an Anaconda environment (on OSX or Linux) can be done using the following steps:\n\n.. code-block:: bash\n\n    $ git clone https://github.com/VowpalWabbit/vowpal_wabbit.git\n    # create conda environment if necessary\n    $ conda create -n vowpalwabbit\n    $ source activate vowpalwabbit\n    # install necessary boost dependencies\n    $ conda install -y -c anaconda boost\n    $ pip install -e vowpal_wabbit\n    \n**For python3 on Ubuntu 16.04 LTS**: Ubuntu 16.04 defaults to an old, custom-built version of boost. As such, the boost_python library names do not follow the standard naming convention adopted by offical boost releases for the boost_python libraries.\nYou may need to manually create the relevant symlinks in this case. Example commands for python 3.5 follows: \n\n.. code-block:: bash\n\n    $ cd /usr/lib/x86_64-linux-gnu/\n    $ sudo ln -s libboost_python-py35.so libboost_python3.so\n    $ sudo ln -s libboost_python-py35.a libboost_python3.a\n\nDevelopment\n-----------\n\nContributions are welcome for improving the python wrapper to Vowpal Wabbit.\n\n1. Check for open issues_ or create one to discuss a feature idea or bug.\n2. Fork the repo_ on Github and make changes to the master branch (or a new branch off of master).\n3. Write a test in the python/tests folder showing the bug was fixed or feature works (recommend using pytest_).\n4. Make sure package installs and tests pass under all supported environments (this calls tox_ automatically).\n5. Send the pull request.\n\nTests can be run using setup.py:\n\n.. code-block:: bash\n\n    $ python setup.py test\n\n\nDirectory Structure:\n\n* python : this is where the c++ extension lives\n* python/vowpalwabbit : this is then main directory for python wrapper code and utilities\n* python/examples : example python code and jupyter notebooks to demonstrate functionality\n* python/tests : contains all tests for python code\n\n**Note:** neither examples nor tests directories are included in the distributed package, they are only for development purposes.\n\n.. _issues: https://github.com/VowpalWabbit/vowpal_wabbit/issues\n.. _repo: https://github.com/VowpalWabbit/vowpal_wabbit\n.. _pytest: http://pytest.org/latest/getting-started.html\n.. _tox: https://tox.readthedocs.io/en/latest/index.html\n\nExperimental build for Windows\n------------------------------\n\nAn extension on the `experimental Windows CMake build`_ for the main project.\n\n**Note:** attempting to install boost-python in vcpkg while multiple python versions are installed in vcpkg will cause errors. Ensure only the relevant python version is installed in the environment before proceeding.\n\nPython3\n~~~~~~~\n\n1. install required vcpkgs\n\n.. code-block:: bat\n\n    > vcpkg install python3:x64-windows\n    > vcpkg install boost-python:x64-windows\n    \n2. Run\n\n.. code-block:: bat\n\n    > python setup.py --vcpkg-root=path\\to\\vcpkg install\n\nPython2\n~~~~~~~\n\nDue to limitations in the current version of boost-python, some manual changes must be made to the vcpkg tools\n\n1. Edit [vcpkg-root]\\\\ports\\\\boost-python\n2. Edit the file CONTROL\n    a. Change the Build-Depends entry for **python3** to **python2**\n3. install required vcpkgs\n\n.. code-block:: bat\n\n    > vcpkg install python2:x64-windows\n    > vcpkg install boost-python:x64-windows\n\n4. Run\n\n.. code-block:: bat\n\n    > python setup.py --vcpkg-root=path\\to\\vcpkg install\n    \n.. _experimental Windows CMake build: https://github.com/VowpalWabbit/vowpal_wabbit/wiki/Building#experimental-using-cmake-on-windows", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JohnLangford/vowpal_wabbit", "keywords": "fast machine learning online classification regression", "license": "BSD 3-Clause License", "maintainer": "", "maintainer_email": "", "name": "vowpalwabbit", "package_url": "https://pypi.org/project/vowpalwabbit/", "platform": "any", "project_url": "https://pypi.org/project/vowpalwabbit/", "project_urls": {"Homepage": "https://github.com/JohnLangford/vowpal_wabbit"}, "release_url": "https://pypi.org/project/vowpalwabbit/8.8.1/", "requires_dist": null, "requires_python": "", "summary": "Vowpal Wabbit Python package", "version": "8.8.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/vowpalwabbit\" rel=\"nofollow\"><img alt=\"PyPI Package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/48149af69e04a335c3dc32929cee67308efa5175/68747470733a2f2f62616467652e667572792e696f2f70792f766f7770616c7761626269742e737667\"></a>\n<a href=\"https://travis-ci.org/VowpalWabbit/vowpal_wabbit\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b3d3fc00c24a55b8f77defd42bf05b1128649aa/68747470733a2f2f7472617669732d63692e6f72672f566f7770616c5761626269742f766f7770616c5f7761626269742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/VowpalWabbit/vowpal-wabbit\" rel=\"nofollow\"><img alt=\"Windows Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e59a6f730a0fe8d9e7457eebf1dc436c810a53f7/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f366871706439653634683732677962722f6272616e63682f6d61737465723f7376673d74727565\"></a>\n<a href=\"https://coveralls.io/r/VowpalWabbit/vowpal_wabbit\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e91e7a6643e4e602d84a48124e736b9264cfcef2/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f566f7770616c5761626269742f766f7770616c5f7761626269742f62616467652e737667\"></a>\n<p>Vowpal Wabbit is a fast machine learning library for online learning, and this is the python wrapper for the project.</p>\n<p>Installing this package builds Vowpal Wabbit locally for explicit use within python, it will not create the command-line version\nof the tool (or affect any previously existing command-line installations).\nTo install the command-line version see the main project page: <a href=\"https://github.com/VowpalWabbit/vowpal_wabbit\" rel=\"nofollow\">https://github.com/VowpalWabbit/vowpal_wabbit</a></p>\n<p>The version of the PyPI vowpalwabbit package corresponds to the tagged version of the code in the github repo that will be used\nduring building and installation.\nIf you need to make local changes to the code and rebuild the python binding be sure to pip uninstall vowpalwabbit then rebuild\nusing the local repo installation instructions below.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>From PyPI:</p>\n<p>Linux/Mac OSX:</p>\n<pre>$ pip install vowpalwabbit\n</pre>\n<p>Windows:</p>\n<pre><span class=\"p\">&gt;</span> pip install --global-option=<span class=\"s2\">\"--vcpkg-root=path\\to\\vcpkg\"</span> vowpalwabbit\n</pre>\n<p>From local repo (useful when making modifications):</p>\n<pre><span class=\"c1\"># Dependencies\n</span>$ sudo apt install libboost-dev libboost-program-options-dev libboost-system-dev libboost-thread-dev libboost-math-dev libboost-test-dev libboost-python-dev zlib1g-dev cmake\n\n<span class=\"c1\"># Build and install package\n</span>$ python setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You can use the python wrapper directly like this:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">vowpalwabbit</span> <span class=\"kn\">import</span> <span class=\"n\">pyvw</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">vw</span> <span class=\"o\">=</span> <span class=\"n\">pyvw</span><span class=\"o\">.</span><span class=\"n\">vw</span><span class=\"p\">(</span><span class=\"n\">quiet</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ex</span> <span class=\"o\">=</span> <span class=\"n\">vw</span><span class=\"o\">.</span><span class=\"n\">example</span><span class=\"p\">(</span><span class=\"s1\">'1 | a b c'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">vw</span><span class=\"o\">.</span><span class=\"n\">learn</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">vw</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">)</span>\n</pre>\n<p>Or you can use the included scikit-learn interface like this:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">sklearn</span> <span class=\"kn\">import</span> <span class=\"n\">datasets</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">sklearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">train_test_split</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">vowpalwabbit.sklearn_vw</span> <span class=\"kn\">import</span> <span class=\"n\">VWClassifier</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># generate some data</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">make_hastie_10_2</span><span class=\"p\">(</span><span class=\"n\">n_samples</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">X</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># split train and test set</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">X_test</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">y_test</span> <span class=\"o\">=</span> <span class=\"n\">train_test_split</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">test_size</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># build model</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">VWClassifier</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># predict model</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">y_pred</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># evaluate model</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">,</span> <span class=\"n\">y_test</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"troubleshooting\">\n<h2>Troubleshooting</h2>\n<p>Some common causes of failure for installation are due to missing or mis-matched dependencies when Vowpal Wabbit builds.\nMake sure you have boost and boost-python installed on your system.</p>\n<p>For Ubuntu/Debian/Mint</p>\n<pre>$ apt install libboost-dev libboost-program-options-dev libboost-system-dev libboost-thread-dev libboost-math-dev libboost-test-dev libboost-python-dev zlib1g-dev cmake\n</pre>\n<p>For Mac OSX</p>\n<pre>$ brew install cmake\n$ brew install boost\n<span class=\"c1\">#If you want to build with python 2 support\n</span>brew install boost-python\n<span class=\"c1\">#If you want to build with python 3 support\n</span>brew install boost-python3\n</pre>\n<p>For Windows</p>\n<blockquote>\n<ol>\n<li>Install <a href=\"https://github.com/microsoft/vcpkg\" rel=\"nofollow\">vcpkg</a></li>\n<li>Run</li>\n</ol>\n</blockquote>\n<pre><span class=\"p\">&gt;</span> vcpkg --triplet x64-windows install zlib boost-system boost-program-options boost-test boost-align boost-foreach boost-python boost-math boost-thread python3 boost-python\n</pre>\n<p>Installing Vowpal Wabbit under an Anaconda environment (on OSX or Linux) can be done using the following steps:</p>\n<pre>$ git clone https://github.com/VowpalWabbit/vowpal_wabbit.git\n<span class=\"c1\"># create conda environment if necessary\n</span>$ conda create -n vowpalwabbit\n$ <span class=\"nb\">source</span> activate vowpalwabbit\n<span class=\"c1\"># install necessary boost dependencies\n</span>$ conda install -y -c anaconda boost\n$ pip install -e vowpal_wabbit\n</pre>\n<p><strong>For python3 on Ubuntu 16.04 LTS</strong>: Ubuntu 16.04 defaults to an old, custom-built version of boost. As such, the boost_python library names do not follow the standard naming convention adopted by offical boost releases for the boost_python libraries.\nYou may need to manually create the relevant symlinks in this case. Example commands for python 3.5 follows:</p>\n<pre>$ <span class=\"nb\">cd</span> /usr/lib/x86_64-linux-gnu/\n$ sudo ln -s libboost_python-py35.so libboost_python3.so\n$ sudo ln -s libboost_python-py35.a libboost_python3.a\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>Contributions are welcome for improving the python wrapper to Vowpal Wabbit.</p>\n<ol>\n<li>Check for open <a href=\"https://github.com/VowpalWabbit/vowpal_wabbit/issues\" rel=\"nofollow\">issues</a> or create one to discuss a feature idea or bug.</li>\n<li>Fork the <a href=\"https://github.com/VowpalWabbit/vowpal_wabbit\" rel=\"nofollow\">repo</a> on Github and make changes to the master branch (or a new branch off of master).</li>\n<li>Write a test in the python/tests folder showing the bug was fixed or feature works (recommend using <a href=\"http://pytest.org/latest/getting-started.html\" rel=\"nofollow\">pytest</a>).</li>\n<li>Make sure package installs and tests pass under all supported environments (this calls <a href=\"https://tox.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">tox</a> automatically).</li>\n<li>Send the pull request.</li>\n</ol>\n<p>Tests can be run using setup.py:</p>\n<pre>$ python setup.py <span class=\"nb\">test</span>\n</pre>\n<p>Directory Structure:</p>\n<ul>\n<li>python : this is where the c++ extension lives</li>\n<li>python/vowpalwabbit : this is then main directory for python wrapper code and utilities</li>\n<li>python/examples : example python code and jupyter notebooks to demonstrate functionality</li>\n<li>python/tests : contains all tests for python code</li>\n</ul>\n<p><strong>Note:</strong> neither examples nor tests directories are included in the distributed package, they are only for development purposes.</p>\n</div>\n<div id=\"experimental-build-for-windows\">\n<h2>Experimental build for Windows</h2>\n<p>An extension on the <a href=\"https://github.com/VowpalWabbit/vowpal_wabbit/wiki/Building#experimental-using-cmake-on-windows\" rel=\"nofollow\">experimental Windows CMake build</a> for the main project.</p>\n<p><strong>Note:</strong> attempting to install boost-python in vcpkg while multiple python versions are installed in vcpkg will cause errors. Ensure only the relevant python version is installed in the environment before proceeding.</p>\n<div id=\"python3\">\n<h3>Python3</h3>\n<ol>\n<li>install required vcpkgs</li>\n</ol>\n<pre><span class=\"p\">&gt;</span> vcpkg install python3:x64-windows\n<span class=\"p\">&gt;</span> vcpkg install boost-python:x64-windows\n</pre>\n<ol>\n<li>Run</li>\n</ol>\n<pre><span class=\"p\">&gt;</span> python setup.py --vcpkg-root=path\\to\\vcpkg install\n</pre>\n</div>\n<div id=\"python2\">\n<h3>Python2</h3>\n<p>Due to limitations in the current version of boost-python, some manual changes must be made to the vcpkg tools</p>\n<ol>\n<li>Edit [vcpkg-root]\\ports\\boost-python</li>\n<li><dl>\n<dt>Edit the file CONTROL</dt>\n<dd><ol>\n<li>Change the Build-Depends entry for <strong>python3</strong> to <strong>python2</strong></li>\n</ol>\n</dd>\n</dl>\n</li>\n<li>install required vcpkgs</li>\n</ol>\n<pre><span class=\"p\">&gt;</span> vcpkg install python2:x64-windows\n<span class=\"p\">&gt;</span> vcpkg install boost-python:x64-windows\n</pre>\n<ol>\n<li>Run</li>\n</ol>\n<pre><span class=\"p\">&gt;</span> python setup.py --vcpkg-root=path\\to\\vcpkg install\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6743167, "releases": {"8.2.0": [{"comment_text": "", "digests": {"md5": "e7b6335907201ca3e36673bfde98947c", "sha256": "0e41c9f240b0ff3b89c60a631519f80083f9191ced302e19d141229bf5e3d32e"}, "downloads": -1, "filename": "vowpalwabbit-8.2.0.tar.gz", "has_sig": false, "md5_digest": "e7b6335907201ca3e36673bfde98947c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 961165, "upload_time": "2016-06-21T19:31:30", "upload_time_iso_8601": "2016-06-21T19:31:30.607213Z", "url": "https://files.pythonhosted.org/packages/c4/37/1e372e7556e6f9097f97abb6fb7cc88a540b00d97bb796a908853e54f564/vowpalwabbit-8.2.0.tar.gz", "yanked": false}], "8.2.1": [{"comment_text": "", "digests": {"md5": "528c9140fe055476460794c3e69d40a1", "sha256": "d6d02dc40f7283c06678f07dfbffc9549e5d23fe67d54a970ca72340862870f8"}, "downloads": -1, "filename": "vowpalwabbit-8.2.1.tar.gz", "has_sig": false, "md5_digest": "528c9140fe055476460794c3e69d40a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1239077, "upload_time": "2016-08-31T01:05:00", "upload_time_iso_8601": "2016-08-31T01:05:00.391155Z", "url": "https://files.pythonhosted.org/packages/2e/f3/52f12472d32b1700f7298839aa0a0f12b52b8eb93edc69c4fadebc2a86c9/vowpalwabbit-8.2.1.tar.gz", "yanked": false}], "8.3.2": [{"comment_text": "", "digests": {"md5": "ad5fe921a3d5e7247a788c7faef8b3e0", "sha256": "678e8ac8c960417adaa2e1ce013d80efdfa9fa5594f46b7155cf3da133cda862"}, "downloads": -1, "filename": "vowpalwabbit-8.3.2.tar.gz", "has_sig": false, "md5_digest": "ad5fe921a3d5e7247a788c7faef8b3e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1396900, "upload_time": "2017-01-30T19:05:13", "upload_time_iso_8601": "2017-01-30T19:05:13.666922Z", "url": "https://files.pythonhosted.org/packages/10/f0/b445fd43e0746376e313421e0bdb5375ee02a5863cd1b4ee21bee2b44dea/vowpalwabbit-8.3.2.tar.gz", "yanked": false}], "8.4.0": [{"comment_text": "", "digests": {"md5": "6d40d1a562645cd33eb21c24eb8a6e43", "sha256": "abd22bfae99fb102cf8a6aec49e8c278cb7317d3a7eb60f70cd102be9c336fd5"}, "downloads": -1, "filename": "vowpalwabbit-8.4.0.tar.gz", "has_sig": false, "md5_digest": "6d40d1a562645cd33eb21c24eb8a6e43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10228464, "upload_time": "2017-12-02T02:25:20", "upload_time_iso_8601": "2017-12-02T02:25:20.738805Z", "url": "https://files.pythonhosted.org/packages/3a/99/4870ab38b6416dc28206c3aaf30036b39f772cd6a162bf60d7f96fcbd428/vowpalwabbit-8.4.0.tar.gz", "yanked": false}], "8.5.0": [{"comment_text": "", "digests": {"md5": "f08f9c762cb89c2e49ace0174bd56f27", "sha256": "0b517371fc64f1c728a0af42a31fa93def27306e9b4d25d6e5fd01bcff1b7304"}, "downloads": -1, "filename": "vowpalwabbit-8.5.0.tar.gz", "has_sig": false, "md5_digest": "f08f9c762cb89c2e49ace0174bd56f27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1463865, "upload_time": "2018-03-20T20:27:58", "upload_time_iso_8601": "2018-03-20T20:27:58.405225Z", "url": "https://files.pythonhosted.org/packages/56/45/278a8427aa859888b3fb3e3debeea086557df8def22a23561bfe45e1fb03/vowpalwabbit-8.5.0.tar.gz", "yanked": false}], "8.7.0": [{"comment_text": "", "digests": {"md5": "39ae59fcfc96c0c93ec9dd34615a266d", "sha256": "f3393221ae7fece65b457a1e2acdf5f4bf8c6e7e95af064017480f083fcb4a9f"}, "downloads": -1, "filename": "vowpalwabbit-8.7.0.tar.gz", "has_sig": false, "md5_digest": "39ae59fcfc96c0c93ec9dd34615a266d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3053424, "upload_time": "2019-07-10T15:47:48", "upload_time_iso_8601": "2019-07-10T15:47:48.017720Z", "url": "https://files.pythonhosted.org/packages/2f/fb/1dc86a73579f892762aabebf6fca3c492f77a1f5a6d1035e6e6b6ead89e6/vowpalwabbit-8.7.0.tar.gz", "yanked": false}], "8.7.0.post1": [{"comment_text": "", "digests": {"md5": "73ff52f3eb00dd1317888e232181c19e", "sha256": "2d920087c4fbc95eca61b3bc8e93362006205010676bd670ad7eaec40cfe469d"}, "downloads": -1, "filename": "vowpalwabbit-8.7.0.post1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "73ff52f3eb00dd1317888e232181c19e", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 2932058, "upload_time": "2019-07-16T13:38:31", "upload_time_iso_8601": "2019-07-16T13:38:31.540500Z", "url": "https://files.pythonhosted.org/packages/82/ab/a230de319cd4b721d1ed30fa432732279612a2b959488728a40367a24dd9/vowpalwabbit-8.7.0.post1-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ac13aefcaa6141d71afdf1fe1df5a35", "sha256": "978732b8eeb63ff5bc40c432b523e5a16c26f6b24915e3de1e465c8ef93f9fdb"}, "downloads": -1, "filename": "vowpalwabbit-8.7.0.post1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "3ac13aefcaa6141d71afdf1fe1df5a35", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 2962133, "upload_time": "2019-07-16T13:38:34", "upload_time_iso_8601": "2019-07-16T13:38:34.137852Z", "url": "https://files.pythonhosted.org/packages/bd/6d/228da743c5498405068f4f05040d75f96ed6a0665328ad8d59ff145a14c4/vowpalwabbit-8.7.0.post1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40b38cbf4cf2a0ea926275b98bce1243", "sha256": "de9529660858b380127b2bea335b41a29e8f264551315042300022eb4e6524ea"}, "downloads": -1, "filename": "vowpalwabbit-8.7.0.post1.tar.gz", "has_sig": false, "md5_digest": "40b38cbf4cf2a0ea926275b98bce1243", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3055374, "upload_time": "2019-07-11T21:14:44", "upload_time_iso_8601": "2019-07-11T21:14:44.089302Z", "url": "https://files.pythonhosted.org/packages/f4/09/50efc9630809fdd19056d2fff8e7b8e374063002b5a70b016854fe5e8492/vowpalwabbit-8.7.0.post1.tar.gz", "yanked": false}], "8.8.0": [{"comment_text": "", "digests": {"md5": "90321c5c6c3ac192b4dc213e39426464", "sha256": "cfca52b75c5b32470cad225a0c06beaf1d1e55515bb29866b795574f9539144d"}, "downloads": -1, "filename": "vowpalwabbit-8.8.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "90321c5c6c3ac192b4dc213e39426464", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 2976885, "upload_time": "2019-12-07T18:08:34", "upload_time_iso_8601": "2019-12-07T18:08:34.346211Z", "url": "https://files.pythonhosted.org/packages/ff/2a/297e2638c95201f34056a984414aa4e21479cd10e07931bb28bc1074383e/vowpalwabbit-8.8.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e781dfe7916deed90998df2b24aa481", "sha256": "af65b7e79d5d103fd77755d0ec8a779b4ba8671fe089dbefa35305372b9fdb47"}, "downloads": -1, "filename": "vowpalwabbit-8.8.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "5e781dfe7916deed90998df2b24aa481", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3006903, "upload_time": "2019-12-07T18:08:36", "upload_time_iso_8601": "2019-12-07T18:08:36.881822Z", "url": "https://files.pythonhosted.org/packages/d5/9d/3f2f7cde4a7a39209f462a73ef0ad11c828a86b75e9a77d3bb19cfa60eb3/vowpalwabbit-8.8.0-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c310185a59df7e646452cfeffbbedb8", "sha256": "bd4c7e49a6ddaa1afedf97b22b822c7322328d686d45151b47a5127fc409c2af"}, "downloads": -1, "filename": "vowpalwabbit-8.8.0.tar.gz", "has_sig": false, "md5_digest": "8c310185a59df7e646452cfeffbbedb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3080430, "upload_time": "2019-12-07T17:43:14", "upload_time_iso_8601": "2019-12-07T17:43:14.181793Z", "url": "https://files.pythonhosted.org/packages/d1/5a/9fcd64fd52ad22e2d1821b2ef871e8783c324b37e2103e7ddefa776c2ed7/vowpalwabbit-8.8.0.tar.gz", "yanked": false}], "8.8.1": [{"comment_text": "", "digests": {"md5": "063faba25ffc94950101832ba861d662", "sha256": "8b887d4eb26baed4fe42db4333b5ed64b763c079c0976637dd9512b407534309"}, "downloads": -1, "filename": "vowpalwabbit-8.8.1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "063faba25ffc94950101832ba861d662", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 2976569, "upload_time": "2020-03-03T20:00:50", "upload_time_iso_8601": "2020-03-03T20:00:50.791912Z", "url": "https://files.pythonhosted.org/packages/16/9c/6fd059dbb93983943cd949b2ebe8f1727701481b7e2f1f2656a0f1f191f0/vowpalwabbit-8.8.1-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "445d2425e0021c96a48ab7fccb6e79a5", "sha256": "7acae5ba084ae643f39e84dd4d8e693e33de4dd4cb012e09805cfd7066d06a50"}, "downloads": -1, "filename": "vowpalwabbit-8.8.1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "445d2425e0021c96a48ab7fccb6e79a5", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3006580, "upload_time": "2020-03-03T20:00:53", "upload_time_iso_8601": "2020-03-03T20:00:53.465383Z", "url": "https://files.pythonhosted.org/packages/b2/21/b3cd486c322f5dbe4d1aee159f76dbf8748c8d3327d9ed584e94d787139b/vowpalwabbit-8.8.1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24ffcccb939127e234283f546df7de56", "sha256": "46bddb560759b8d7df5b2b1cf66340102d71d74f83671d48bb572635c90bdc9d"}, "downloads": -1, "filename": "vowpalwabbit-8.8.1.tar.gz", "has_sig": false, "md5_digest": "24ffcccb939127e234283f546df7de56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3079832, "upload_time": "2020-03-03T19:53:40", "upload_time_iso_8601": "2020-03-03T19:53:40.541356Z", "url": "https://files.pythonhosted.org/packages/26/65/833b79b0e968dfe988e7cea5ff730004d3b6cf05786228e94cf0b6037cf5/vowpalwabbit-8.8.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "063faba25ffc94950101832ba861d662", "sha256": "8b887d4eb26baed4fe42db4333b5ed64b763c079c0976637dd9512b407534309"}, "downloads": -1, "filename": "vowpalwabbit-8.8.1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "063faba25ffc94950101832ba861d662", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 2976569, "upload_time": "2020-03-03T20:00:50", "upload_time_iso_8601": "2020-03-03T20:00:50.791912Z", "url": "https://files.pythonhosted.org/packages/16/9c/6fd059dbb93983943cd949b2ebe8f1727701481b7e2f1f2656a0f1f191f0/vowpalwabbit-8.8.1-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "445d2425e0021c96a48ab7fccb6e79a5", "sha256": "7acae5ba084ae643f39e84dd4d8e693e33de4dd4cb012e09805cfd7066d06a50"}, "downloads": -1, "filename": "vowpalwabbit-8.8.1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "445d2425e0021c96a48ab7fccb6e79a5", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3006580, "upload_time": "2020-03-03T20:00:53", "upload_time_iso_8601": "2020-03-03T20:00:53.465383Z", "url": "https://files.pythonhosted.org/packages/b2/21/b3cd486c322f5dbe4d1aee159f76dbf8748c8d3327d9ed584e94d787139b/vowpalwabbit-8.8.1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24ffcccb939127e234283f546df7de56", "sha256": "46bddb560759b8d7df5b2b1cf66340102d71d74f83671d48bb572635c90bdc9d"}, "downloads": -1, "filename": "vowpalwabbit-8.8.1.tar.gz", "has_sig": false, "md5_digest": "24ffcccb939127e234283f546df7de56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3079832, "upload_time": "2020-03-03T19:53:40", "upload_time_iso_8601": "2020-03-03T19:53:40.541356Z", "url": "https://files.pythonhosted.org/packages/26/65/833b79b0e968dfe988e7cea5ff730004d3b6cf05786228e94cf0b6037cf5/vowpalwabbit-8.8.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:34:17 2020"}