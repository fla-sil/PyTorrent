{"info": {"author": "django-pyodbc team", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": [], "description": "=============\r\ndjango-pyodbc\r\n=============\r\n\r\nA Django_ MS SQL Server external DB backend that uses ODBC by employing\r\nthe pyodbc_ library. It supports SQL Server 2000 and 2005.\r\n\r\n.. _Django: http://djangoproject.com/\r\n.. _pyodbc: http://pyodbc.sourceforge.net\r\n\r\nFeatures\r\n========\r\n\r\n* Supports LIMIT+OFFSET and offset w/o LIMIT emulation under SS2005.\r\n* Supports LIMIT+OFFSET under SS2000.\r\n* Transparently supports Django's TextField both under SS2000 and SS2005.\r\n* Passes most of the tests of the Django test suite.\r\n* Compatible with SQL Server and SQL Server Native Client from Microsoft\r\n  (Windows) and FreeTDS ODBC drivers (Linux).\r\n\r\nDependencies\r\n============\r\n\r\n* Django from SVN, revision 8328 or newer (1.0 is r8961.)\r\n* pyodbc 2.0.58 or newer\r\n\r\nInstallation\r\n============\r\n\r\n 1. Install pyodbc.\r\n\r\n 2. Add the directory where you have copied the project files to your Python\r\n    path. So, for example, if you have the following directory structure::\r\n\r\n        /home/user/src/django-pyodbc\r\n            |\r\n            +- sql_server\r\n                  |\r\n                  +- pyodbc\r\n\r\n    you should add ``/home/user/src/django-pyodbc`` to you Python module search\r\n    path. One way to do this is setting the ``PYTHONPATH`` environment\r\n    variable::\r\n\r\n       $ export PYTHONPATH=/home/user/src/django-pyodbc\r\n\r\n 3. Now you can point the ``DATABASE_ENGINE`` setting in the settings file used\r\n    by your Django application or project to the ``'sql_server.pyodbc'``\r\n    module path::\r\n\r\n        DATABASE_ENGINE='sql_server.pyodbc'\r\n\r\nConfiguration\r\n=============\r\n\r\nThe following settings control the behavior of the backend:\r\n\r\nStandard Django settings\r\n------------------------\r\n\r\n``DATABASE_NAME``\r\n    String. Database name. Required.\r\n\r\n``DATABASE_HOST``\r\n    String. SQL Server instance in ``\"server\\instance\"`` format.\r\n\r\n``DATABASE_PORT``\r\n    String. Server instance port.\r\n\r\n``DATABASE_USER``\r\n    String. Database user name. If not given then MS Integrated Security will\r\n    be used.\r\n\r\n``DATABASE_PASSWORD``\r\n    String. Database user password.\r\n\r\n``DATABASE_OPTIONS``\r\n    Dictionary. Current available keys are:\r\n\r\n    ``autocommit``\r\n        Boolean. Indicates if pyodbc should direct the the ODBC driver to\r\n        activate the autocommit feature. Default value is ``False``.\r\n\r\n    ``MARS_Connection``\r\n        Boolean. Only relevant when running on Windows and with SQL Server 2005\r\n        or later through MS *SQL Server Native client* driver (i.e. setting\r\n\t``DATABASE_ODBC_DRIVER`` to ``\"SQL Native Client\"``). See\r\n        http://msdn.microsoft.com/en-us/library/ms131686.aspx.\r\n        Default value is ``False``.\r\n\r\n    ``host_is_server``\r\n        Boolean. Only relevant if using the FreeTDS ODBC driver under\r\n        Unix/Linux.\r\n\r\n        By default, when using the FreeTDS ODBC driver the value specified in\r\n        the ``DATABASE_HOST`` setting is used in a ``SERVERNAME`` ODBC\r\n        connection string component instead of being used in a ``SERVER``\r\n        component; this means that this value should be the name of a\r\n        *dataserver* definition present in the ``freetds.conf`` FreeTDS\r\n        configuration file instead of a hostname or an IP address.\r\n\r\n        But if this option is present and it's value is True, this special\r\n        behavior is turned off.\r\n\r\n        See http://freetds.org/userguide/dsnless.htm for more information.\r\n\r\n``django-pyodbc``-specific settings\r\n-----------------------------------\r\n\r\n``DATABASE_ODBC_DSN``\r\n    String. A named DSN can be used instead of ``DATABASE_HOST``.\r\n\r\n``DATABASE_ODBC_DRIVER``\r\n    String. ODBC Driver to use. Default is ``\"SQL Server\"`` on Windows and\r\n    ``\"FreeTDS\"`` on other platforms.\r\n\r\n``DATABASE_EXTRA_PARAMS``\r\n    String. Additional parameters for the ODBC connection. The format is\r\n    ``\"param=value;param=value\"``.\r\n\r\n``DATABASE_COLLATION``\r\n    String. Name of the collation to use when performing text field lookups\r\n    against the database. Default value is ``\"Latin1_General_CI_AS\"``.\r\n    For Chinese language you can set it to ``\"Chinese_PRC_CI_AS\"``.\r\n\r\nLicense\r\n=======\r\n\r\nNew BSD LICENSE\r\n\r\nCredits\r\n=======\r\n\r\n* Ramiro Morales `<http://djangopeople.net/ramiro/>`_\r\n* Filip Wasilewski (http://code.djangoproject.com/ticket/5246)\r\n* Wei guangjing `<http://djangopeople.net/vcc/>`_\r\n* mamcx (http://code.djangoproject.com/ticket/5062)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://code.google.com/p/django-pyodbc", "keywords": "", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "sql_server.pyodbc", "package_url": "https://pypi.org/project/sql_server.pyodbc/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/sql_server.pyodbc/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://code.google.com/p/django-pyodbc"}, "release_url": "https://pypi.org/project/sql_server.pyodbc/1.0/", "requires_dist": null, "requires_python": null, "summary": "Django MS SQL Server backends using pyodbcNote, I did not write this package. If you are the package owner and want me to transfer ownership, just email us at hi@aurora.io. Thanks!", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A <a href=\"http://djangoproject.com/\" rel=\"nofollow\">Django</a> MS SQL Server external DB backend that uses ODBC by employing\nthe <a href=\"http://pyodbc.sourceforge.net\" rel=\"nofollow\">pyodbc</a> library. It supports SQL Server 2000 and 2005.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Supports LIMIT+OFFSET and offset w/o LIMIT emulation under SS2005.</li>\n<li>Supports LIMIT+OFFSET under SS2000.</li>\n<li>Transparently supports Django\u2019s TextField both under SS2000 and SS2005.</li>\n<li>Passes most of the tests of the Django test suite.</li>\n<li>Compatible with SQL Server and SQL Server Native Client from Microsoft\n(Windows) and FreeTDS ODBC drivers (Linux).</li>\n</ul>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>Django from SVN, revision 8328 or newer (1.0 is r8961.)</li>\n<li>pyodbc 2.0.58 or newer</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<blockquote>\n<ol>\n<li><p>Install pyodbc.</p>\n</li>\n<li><p>Add the directory where you have copied the project files to your Python\npath. So, for example, if you have the following directory structure:</p>\n<pre>/home/user/src/django-pyodbc\n    |\n    +- sql_server\n          |\n          +- pyodbc\n</pre>\n<p>you should add <tt><span class=\"pre\">/home/user/src/django-pyodbc</span></tt> to you Python module search\npath. One way to do this is setting the <tt>PYTHONPATH</tt> environment\nvariable:</p>\n<pre>$ export PYTHONPATH=/home/user/src/django-pyodbc\n</pre>\n</li>\n<li><p>Now you can point the <tt>DATABASE_ENGINE</tt> setting in the settings file used\nby your Django application or project to the <tt>'sql_server.pyodbc'</tt>\nmodule path:</p>\n<pre>DATABASE_ENGINE='sql_server.pyodbc'\n</pre>\n</li>\n</ol>\n</blockquote>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>The following settings control the behavior of the backend:</p>\n<div id=\"standard-django-settings\">\n<h3>Standard Django settings</h3>\n<dl>\n<dt><tt>DATABASE_NAME</tt></dt>\n<dd>String. Database name. Required.</dd>\n<dt><tt>DATABASE_HOST</tt></dt>\n<dd>String. SQL Server instance in <tt>\"server\\instance\"</tt> format.</dd>\n<dt><tt>DATABASE_PORT</tt></dt>\n<dd>String. Server instance port.</dd>\n<dt><tt>DATABASE_USER</tt></dt>\n<dd>String. Database user name. If not given then MS Integrated Security will\nbe used.</dd>\n<dt><tt>DATABASE_PASSWORD</tt></dt>\n<dd>String. Database user password.</dd>\n<dt><tt>DATABASE_OPTIONS</tt></dt>\n<dd><p>Dictionary. Current available keys are:</p>\n<dl>\n<dt><tt>autocommit</tt></dt>\n<dd>Boolean. Indicates if pyodbc should direct the the ODBC driver to\nactivate the autocommit feature. Default value is <tt>False</tt>.</dd>\n<dt><tt>MARS_Connection</tt></dt>\n<dd>Boolean. Only relevant when running on Windows and with SQL Server 2005\nor later through MS <em>SQL Server Native client</em> driver (i.e. setting\n<tt>DATABASE_ODBC_DRIVER</tt> to <tt>\"SQL Native Client\"</tt>). See\n<a href=\"http://msdn.microsoft.com/en-us/library/ms131686.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/ms131686.aspx</a>.\nDefault value is <tt>False</tt>.</dd>\n<dt><tt>host_is_server</tt></dt>\n<dd><p>Boolean. Only relevant if using the FreeTDS ODBC driver under\nUnix/Linux.</p>\n<p>By default, when using the FreeTDS ODBC driver the value specified in\nthe <tt>DATABASE_HOST</tt> setting is used in a <tt>SERVERNAME</tt> ODBC\nconnection string component instead of being used in a <tt>SERVER</tt>\ncomponent; this means that this value should be the name of a\n<em>dataserver</em> definition present in the <tt>freetds.conf</tt> FreeTDS\nconfiguration file instead of a hostname or an IP address.</p>\n<p>But if this option is present and it\u2019s value is True, this special\nbehavior is turned off.</p>\n<p>See <a href=\"http://freetds.org/userguide/dsnless.htm\" rel=\"nofollow\">http://freetds.org/userguide/dsnless.htm</a> for more information.</p>\n</dd>\n</dl>\n</dd>\n</dl>\n</div>\n<div id=\"django-pyodbc-specific-settings\">\n<h3><tt><span class=\"pre\">django-pyodbc</span></tt>-specific settings</h3>\n<dl>\n<dt><tt>DATABASE_ODBC_DSN</tt></dt>\n<dd>String. A named DSN can be used instead of <tt>DATABASE_HOST</tt>.</dd>\n<dt><tt>DATABASE_ODBC_DRIVER</tt></dt>\n<dd>String. ODBC Driver to use. Default is <tt>\"SQL Server\"</tt> on Windows and\n<tt>\"FreeTDS\"</tt> on other platforms.</dd>\n<dt><tt>DATABASE_EXTRA_PARAMS</tt></dt>\n<dd>String. Additional parameters for the ODBC connection. The format is\n<tt>\"param=value;param=value\"</tt>.</dd>\n<dt><tt>DATABASE_COLLATION</tt></dt>\n<dd>String. Name of the collation to use when performing text field lookups\nagainst the database. Default value is <tt>\"Latin1_General_CI_AS\"</tt>.\nFor Chinese language you can set it to <tt>\"Chinese_PRC_CI_AS\"</tt>.</dd>\n</dl>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>New BSD LICENSE</p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<ul>\n<li>Ramiro Morales <a href=\"http://djangopeople.net/ramiro/\" rel=\"nofollow\">http://djangopeople.net/ramiro/</a></li>\n<li>Filip Wasilewski (<a href=\"http://code.djangoproject.com/ticket/5246\" rel=\"nofollow\">http://code.djangoproject.com/ticket/5246</a>)</li>\n<li>Wei guangjing <a href=\"http://djangopeople.net/vcc/\" rel=\"nofollow\">http://djangopeople.net/vcc/</a></li>\n<li>mamcx (<a href=\"http://code.djangoproject.com/ticket/5062\" rel=\"nofollow\">http://code.djangoproject.com/ticket/5062</a>)</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 799999, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "f5c4e970aa049b6167d99c78622def9d", "sha256": "1ffa2624a514fca6ee29675761652b5f04b0a181c22e17ef4013c94f1bf1eead"}, "downloads": -1, "filename": "sql_server.pyodbc-1.0.tar.gz", "has_sig": true, "md5_digest": "f5c4e970aa049b6167d99c78622def9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21015, "upload_time": "2013-04-23T20:48:29", "upload_time_iso_8601": "2013-04-23T20:48:29.009649Z", "url": "https://files.pythonhosted.org/packages/ec/ed/df84c51b7dedd54951d51b95c8884d17066ab4a54d8acab7dc1b88897b8a/sql_server.pyodbc-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f5c4e970aa049b6167d99c78622def9d", "sha256": "1ffa2624a514fca6ee29675761652b5f04b0a181c22e17ef4013c94f1bf1eead"}, "downloads": -1, "filename": "sql_server.pyodbc-1.0.tar.gz", "has_sig": true, "md5_digest": "f5c4e970aa049b6167d99c78622def9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21015, "upload_time": "2013-04-23T20:48:29", "upload_time_iso_8601": "2013-04-23T20:48:29.009649Z", "url": "https://files.pythonhosted.org/packages/ec/ed/df84c51b7dedd54951d51b95c8884d17066ab4a54d8acab7dc1b88897b8a/sql_server.pyodbc-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:34 2020"}