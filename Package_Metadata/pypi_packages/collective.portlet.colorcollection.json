{"info": {"author": "RedTurtle Technology", "author_email": "sviluppoplone@redturtle.it", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Plone", "Framework :: Plone :: 3.3", "Framework :: Plone :: 4.0", "Framework :: Plone :: 4.1", "Framework :: Plone :: 4.2", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python"], "description": "Introduction\r\n============\r\n\r\nChange the renderer of your Plone collection portlet, trying to force a link color\r\nusing a ``style=\"color: ...\"`` attribute.\r\n\r\nHow to use\r\n==========\r\n\r\nThis product is for *developers*. It only add a catalog column (*color*) and change\r\nthe basic Collection Plone renderer to check for this color.\r\n\r\nInstalling this won't add any real new colors in collection portlets (and we don't want\r\n... normally color must came from site UI theme, not contents).\r\n\r\nHow support colors\r\n------------------\r\n\r\nYou can:\r\n\r\nSupport for a ``color`` property\r\n    Add to your content types a new ``color`` method or property.\r\nSupport for a ``color`` @indexer\r\n    Add an indexer that return the color you want:\r\n    \r\n    >>> from plone.indexer.decorator import indexer\r\n    >>> @indexer(IMyType)\r\n    >>>     def color(object, **kw):\r\n    ...     return 'red'\r\n\r\n    See `Custom indexing strategies`__ on Plone documentation section.\r\n\r\n__ http://plone.org/documentation/manual/developer-manual/indexing-and-searching/custom-indexing-strategies\r\n\r\nThe color format must be CSS valid. So: 'red', '#FF0000', '#F00' or 'rgb(255,0,0)' are\r\nall good values.\r\n\r\nIf you return a string that starts with 'class-' (like 'class-foo'), this doesn't apply the style attribute\r\nbut a ``class=\"foo\"`` attribute.\r\n\r\nCredits\r\n=======\r\n\r\nDeveloped with the support of `S. Anna Hospital, Ferrara`__; S. Anna Hospital supports the\r\n`PloneGov initiative`__.\r\n\r\n.. image:: http://www.ospfe.it/ospfe-logo.jpg\r\n   :alt: OspFE logo\r\n\r\n__ http://www.ospfe.it/\r\n__ http://www.plonegov.it/\r\n\r\nAuthors\r\n=======\r\n\r\nThis product was developed by RedTurtle Technology team.\r\n\r\n.. image:: http://www.redturtle.it/redturtle_banner.png\r\n   :alt: RedTurtle Technology Site\r\n   :target: http://www.redturtle.it/\r\n\r\n\r\nChangelog\r\n=========\r\n\r\n0.3.0 (2013-02-13)\r\n------------------\r\n\r\n- Added class attribute support [fdelia]\r\n- Portlet was looking for a non-existings attribute [fdelia]\r\n\r\n0.2.0 (2012-11-28)\r\n------------------\r\n* Fixed Plone 4 compatibility [micecchi]\r\n* Fixed portletRenderer customization. Now is registered with the class (Assignment) and not with the interface (ICollectionPortlet). In this way, the custom renderer is registered only for that class (base collection portlet) and not for all the portlets that implements ICollectionPortlet (for example a custom collection portlet). [micecchi]\r\n\r\n0.1.0 (2011-12-16)\r\n------------------\r\n\r\n* Initial release [keul]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://plone.org/products/collective.portlet.colorcollection", "keywords": "plone plonegov color collection portlet", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "collective.portlet.colorcollection", "package_url": "https://pypi.org/project/collective.portlet.colorcollection/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.portlet.colorcollection/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://plone.org/products/collective.portlet.colorcollection"}, "release_url": "https://pypi.org/project/collective.portlet.colorcollection/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "Replace some code of the Plone collection portlet to add links color", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Change the renderer of your Plone collection portlet, trying to force a link color\nusing a <tt><span class=\"pre\">style=\"color:</span> <span class=\"pre\">...\"</span></tt> attribute.</p>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<p>This product is for <em>developers</em>. It only add a catalog column (<em>color</em>) and change\nthe basic Collection Plone renderer to check for this color.</p>\n<p>Installing this won\u2019t add any real new colors in collection portlets (and we don\u2019t want\n\u2026 normally color must came from site UI theme, not contents).</p>\n<div id=\"how-support-colors\">\n<h3>How support colors</h3>\n<p>You can:</p>\n<dl>\n<dt>Support for a <tt>color</tt> property</dt>\n<dd>Add to your content types a new <tt>color</tt> method or property.</dd>\n<dt>Support for a <tt>color</tt> @indexer</dt>\n<dd><p>Add an indexer that return the color you want:</p>\n<pre>&gt;&gt;&gt; from plone.indexer.decorator import indexer\n&gt;&gt;&gt; @indexer(IMyType)\n&gt;&gt;&gt;     def color(object, **kw):\n...     return 'red'\n</pre>\n<p>See <a href=\"http://plone.org/documentation/manual/developer-manual/indexing-and-searching/custom-indexing-strategies\" rel=\"nofollow\">Custom indexing strategies</a> on Plone documentation section.</p>\n</dd>\n</dl>\n<p>The color format must be CSS valid. So: \u2018red\u2019, \u2018#FF0000\u2019, \u2018#F00\u2019 or \u2018rgb(255,0,0)\u2019 are\nall good values.</p>\n<p>If you return a string that starts with \u2018class-\u2018 (like \u2018class-foo\u2019), this doesn\u2019t apply the style attribute\nbut a <tt><span class=\"pre\">class=\"foo\"</span></tt> attribute.</p>\n</div>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Developed with the support of <a href=\"http://www.ospfe.it/\" rel=\"nofollow\">S. Anna Hospital, Ferrara</a>; S. Anna Hospital supports the\n<a href=\"http://www.plonegov.it/\" rel=\"nofollow\">PloneGov initiative</a>.</p>\n<img alt=\"OspFE logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/63d938d4a6c3524ff18f7f9883763f1a70492531/687474703a2f2f7777772e6f737066652e69742f6f737066652d6c6f676f2e6a7067\">\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>This product was developed by RedTurtle Technology team.</p>\n<a href=\"http://www.redturtle.it/\" rel=\"nofollow\"><img alt=\"RedTurtle Technology Site\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ea6aa086619f59e61ad184ae3739fda4ec31e20/687474703a2f2f7777772e726564747572746c652e69742f726564747572746c655f62616e6e65722e706e67\"></a>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id4\">\n<h3>0.3.0 (2013-02-13)</h3>\n<ul>\n<li>Added class attribute support [fdelia]</li>\n<li>Portlet was looking for a non-existings attribute [fdelia]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.2.0 (2012-11-28)</h3>\n<ul>\n<li>Fixed Plone 4 compatibility [micecchi]</li>\n<li>Fixed portletRenderer customization. Now is registered with the class (Assignment) and not with the interface (ICollectionPortlet). In this way, the custom renderer is registered only for that class (base collection portlet) and not for all the portlets that implements ICollectionPortlet (for example a custom collection portlet). [micecchi]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.1.0 (2011-12-16)</h3>\n<ul>\n<li>Initial release [keul]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 564753, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "1e4e878a34810095079e36bea66a2df9", "sha256": "a2fa5d11ea18ccadbfeb08e91db898349138dd6112308fc724000c3c224f1da5"}, "downloads": -1, "filename": "collective.portlet.colorcollection-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1e4e878a34810095079e36bea66a2df9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14264, "upload_time": "2011-12-16T16:03:56", "upload_time_iso_8601": "2011-12-16T16:03:56.343791Z", "url": "https://files.pythonhosted.org/packages/12/44/37841f37c978e63140f85ec2c0afcfc0a9dff2d4c68f22b9d07a5134e128/collective.portlet.colorcollection-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f150b5f8dc659ddb9ee5494473b01f71", "sha256": "9c88977475d5d40e9edbedd5e19726206614864bdc403ecb16fe0b9021c859c7"}, "downloads": -1, "filename": "collective.portlet.colorcollection-0.2.0.zip", "has_sig": false, "md5_digest": "f150b5f8dc659ddb9ee5494473b01f71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24541, "upload_time": "2012-11-28T08:38:31", "upload_time_iso_8601": "2012-11-28T08:38:31.314049Z", "url": "https://files.pythonhosted.org/packages/36/3a/980896e2b248ba9ba88e1a96410065f84a19b588ba951137a0a45032ffc6/collective.portlet.colorcollection-0.2.0.zip", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "8d55ff134dff8406b87d5e7a0039d8f2", "sha256": "d644c86a7631962e1e2eb10ef171baa7a65a744d98be2dae60a391f3a05ce9fd"}, "downloads": -1, "filename": "collective.portlet.colorcollection-0.3.0.zip", "has_sig": false, "md5_digest": "8d55ff134dff8406b87d5e7a0039d8f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24985, "upload_time": "2013-02-13T16:49:24", "upload_time_iso_8601": "2013-02-13T16:49:24.319487Z", "url": "https://files.pythonhosted.org/packages/1a/d6/4a62a9b7510a7ac7d80f6a973ba1b4b88248663632ceab4d8cb8ea1a667c/collective.portlet.colorcollection-0.3.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8d55ff134dff8406b87d5e7a0039d8f2", "sha256": "d644c86a7631962e1e2eb10ef171baa7a65a744d98be2dae60a391f3a05ce9fd"}, "downloads": -1, "filename": "collective.portlet.colorcollection-0.3.0.zip", "has_sig": false, "md5_digest": "8d55ff134dff8406b87d5e7a0039d8f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24985, "upload_time": "2013-02-13T16:49:24", "upload_time_iso_8601": "2013-02-13T16:49:24.319487Z", "url": "https://files.pythonhosted.org/packages/1a/d6/4a62a9b7510a7ac7d80f6a973ba1b4b88248663632ceab4d8cb8ea1a667c/collective.portlet.colorcollection-0.3.0.zip", "yanked": false}], "timestamp": "Fri May  8 00:45:01 2020"}