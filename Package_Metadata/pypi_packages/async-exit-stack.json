{"info": {"author": "Davide Rizzo", "author_email": "sorcio@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Python Software Foundation License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": ".. role:: python(code)\n   :language: python\n\n.. image:: https://img.shields.io/pypi/v/async_exit_stack.svg\n        :target: https://pypi.python.org/pypi/async_exit_stack\n\n.. image:: https://img.shields.io/travis/sorcio/async_exit_stack.svg\n        :target: https://travis-ci.org/sorcio/async_exit_stack\n\n\n=======================================\nAsyncExitStack backport for Python 3.5+\n=======================================\n\n\n* Free software: PSF license\n* Documentation: https://docs.python.org/3.7/library/contextlib.html#contextlib.AsyncExitStack\n\nThis package contains code from the CPython project.\n\n\nInstall\n-------\n\n::\n\n   pip install async_exit_stack\n\n\n\nUsage example\n-------------\n\n.. code:: python\n\n    from async_exit_stack import AsyncExitStack\n\n    async def some_async_function():\n        async with AsyncExitStack() as stack:\n            connections = [await stack.enter_async_context(get_connection())\n                for i in range(5)]\n            # All opened connections will automatically be released at the end of\n            # the async with statement, even if attempts to open a connection\n            # later in the list raise an exception.\n\n\nReference\n---------\n\nRefer to `Python 3.7 contextlib documentation\n<https://docs.python.org/3.7/library/contextlib.html#contextlib.AsyncExitStack>`_\nfor a complete reference and more context.\n\n`class AsyncExitStack`:python:\n  An asynchronous context manager, similar to ExitStack, that supports combining\n  both synchronous and asynchronous context managers, as well as having\n  coroutines for cleanup logic.\n\n  The close() method is not implemented, aclose() must be used instead.\n\n  `enter_async_context(cm)`:python:\n    Similar to enter_context() but expects an asynchronous context manager.\n\n  `push_async_exit(exit)`:python:\n    Similar to push() but expects either an asynchronous context manager or a coroutine.\n\n  `push_async_callback(callback, *args, **kwds)`:python:\n    Similar to callback() but expects a coroutine.\n\n  `aclose()`:python:\n    Similar to close() but properly handles awaitables.\n\n\n=======\nHistory\n=======\n\n1.0.0 (2018-05-07)\n------------------\n\n* First release based on Python 3.7b4.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sorcio/async_exit_stack", "keywords": "async_exit_stack", "license": "Python Software Foundation License", "maintainer": "", "maintainer_email": "", "name": "async-exit-stack", "package_url": "https://pypi.org/project/async-exit-stack/", "platform": "", "project_url": "https://pypi.org/project/async-exit-stack/", "project_urls": {"Homepage": "https://github.com/sorcio/async_exit_stack"}, "release_url": "https://pypi.org/project/async-exit-stack/1.0.1/", "requires_dist": null, "requires_python": ">=3.5", "summary": "AsyncExitStack backport for Python 3.5+", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/async_exit_stack\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/async_exit_stack.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed9ef2a4cbff2cf19302723ab234e68b8e81f50f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6173796e635f657869745f737461636b2e737667\"></a>\n<a href=\"https://travis-ci.org/sorcio/async_exit_stack\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/sorcio/async_exit_stack.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a9def46b7c7ea48fff2da72739679d80249dd88c/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f736f7263696f2f6173796e635f657869745f737461636b2e737667\"></a>\n<div id=\"asyncexitstack-backport-for-python-3-5\">\n<h2>AsyncExitStack backport for Python 3.5+</h2>\n<ul>\n<li>Free software: PSF license</li>\n<li>Documentation: <a href=\"https://docs.python.org/3.7/library/contextlib.html#contextlib.AsyncExitStack\" rel=\"nofollow\">https://docs.python.org/3.7/library/contextlib.html#contextlib.AsyncExitStack</a></li>\n</ul>\n<p>This package contains code from the CPython project.</p>\n<div id=\"install\">\n<h3>Install</h3>\n<pre>pip install async_exit_stack\n</pre>\n</div>\n<div id=\"usage-example\">\n<h3>Usage example</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">async_exit_stack</span> <span class=\"kn\">import</span> <span class=\"n\">AsyncExitStack</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">some_async_function</span><span class=\"p\">():</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">AsyncExitStack</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">stack</span><span class=\"p\">:</span>\n        <span class=\"n\">connections</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"k\">await</span> <span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">enter_async_context</span><span class=\"p\">(</span><span class=\"n\">get_connection</span><span class=\"p\">())</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)]</span>\n        <span class=\"c1\"># All opened connections will automatically be released at the end of</span>\n        <span class=\"c1\"># the async with statement, even if attempts to open a connection</span>\n        <span class=\"c1\"># later in the list raise an exception.</span>\n</pre>\n</div>\n<div id=\"reference\">\n<h3>Reference</h3>\n<p>Refer to <a href=\"https://docs.python.org/3.7/library/contextlib.html#contextlib.AsyncExitStack\" rel=\"nofollow\">Python 3.7 contextlib documentation</a>\nfor a complete reference and more context.</p>\n<dl>\n<dt><code class=\"python\"><span class=\"k\">class</span> <span class=\"nc\">AsyncExitStack</span></code></dt>\n<dd><p>An asynchronous context manager, similar to ExitStack, that supports combining\nboth synchronous and asynchronous context managers, as well as having\ncoroutines for cleanup logic.</p>\n<p>The close() method is not implemented, aclose() must be used instead.</p>\n<dl>\n<dt><code class=\"python\"><span class=\"n\">enter_async_context</span><span class=\"p\">(</span><span class=\"n\">cm</span><span class=\"p\">)</span></code></dt>\n<dd>Similar to enter_context() but expects an asynchronous context manager.</dd>\n<dt><code class=\"python\"><span class=\"n\">push_async_exit</span><span class=\"p\">(</span><span class=\"n\">exit</span><span class=\"p\">)</span></code></dt>\n<dd>Similar to push() but expects either an asynchronous context manager or a coroutine.</dd>\n<dt><code class=\"python\"><span class=\"n\">push_async_callback</span><span class=\"p\">(</span><span class=\"n\">callback</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwds</span><span class=\"p\">)</span></code></dt>\n<dd>Similar to callback() but expects a coroutine.</dd>\n<dt><code class=\"python\"><span class=\"n\">aclose</span><span class=\"p\">()</span></code></dt>\n<dd>Similar to close() but properly handles awaitables.</dd>\n</dl>\n</dd>\n</dl>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">1.0.0 (2018-05-07)</span></h2>\n<ul>\n<li>First release based on Python 3.7b4.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3841389, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "992cd0802def9ac79440268348a0387b", "sha256": "9b43b17683b3438f428ef3bbec20689f5abbb052aa4b564c643397330adfaa99"}, "downloads": -1, "filename": "async_exit_stack-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "992cd0802def9ac79440268348a0387b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4681, "upload_time": "2018-05-07T15:54:45", "upload_time_iso_8601": "2018-05-07T15:54:45.768173Z", "url": "https://files.pythonhosted.org/packages/77/ae/f5baabf02fe19c4015b0417e72e36220fb95ed3e7cf17e8a85004b964709/async_exit_stack-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c16d3ac6243ed086ab7a9c7266f013b", "sha256": "24de1ad6d0ff27be97c89d6709fa49bf20db179eaf1f4d2e6e9b4409b80e747d"}, "downloads": -1, "filename": "async_exit_stack-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4c16d3ac6243ed086ab7a9c7266f013b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10562, "upload_time": "2018-05-07T15:54:46", "upload_time_iso_8601": "2018-05-07T15:54:46.715973Z", "url": "https://files.pythonhosted.org/packages/33/9c/ecf37497cd8c4aa6d62de0a67deeb80d4407fd930a689362e588458aff81/async_exit_stack-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "992cd0802def9ac79440268348a0387b", "sha256": "9b43b17683b3438f428ef3bbec20689f5abbb052aa4b564c643397330adfaa99"}, "downloads": -1, "filename": "async_exit_stack-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "992cd0802def9ac79440268348a0387b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4681, "upload_time": "2018-05-07T15:54:45", "upload_time_iso_8601": "2018-05-07T15:54:45.768173Z", "url": "https://files.pythonhosted.org/packages/77/ae/f5baabf02fe19c4015b0417e72e36220fb95ed3e7cf17e8a85004b964709/async_exit_stack-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c16d3ac6243ed086ab7a9c7266f013b", "sha256": "24de1ad6d0ff27be97c89d6709fa49bf20db179eaf1f4d2e6e9b4409b80e747d"}, "downloads": -1, "filename": "async_exit_stack-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4c16d3ac6243ed086ab7a9c7266f013b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 10562, "upload_time": "2018-05-07T15:54:46", "upload_time_iso_8601": "2018-05-07T15:54:46.715973Z", "url": "https://files.pythonhosted.org/packages/33/9c/ecf37497cd8c4aa6d62de0a67deeb80d4407fd930a689362e588458aff81/async_exit_stack-1.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:45 2020"}