{"info": {"author": "Florian Wilhelm", "author_email": "florian.wilhelm@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python"], "description": "=======================\nZipline Poloniex Bundle\n=======================\n\nPoloniex data bundle for zipline_, the pythonic algorithmic trading library.\n\n\nDescription\n===========\n\nJust install the data bundle with pip::\n\n    pip install zipline-poloniex\n\nand create a file ``$HOME/.zipline/extension.py`` calling zipline's register_ function.\nThe ``create_bundle`` function returns the necessary ingest function for ``register``.\nUse the ``Pairs`` record for common US-Dollar to crypto-currency pairs.\n\n\nExample\n=======\n\n1) Add following content to ``$HOME/.zipline/extension.py``:\n\n.. code:: python\n\n    import pandas as pd\n    from zipline_poloniex import create_bundle, Pairs, register\n\n    # adjust the following lines to your needs\n    start_session = pd.Timestamp('2016-01-01', tz='utc')\n    end_session = pd.Timestamp('2016-12-31', tz='utc')\n    assets = [Pairs.usdt_eth]\n\n    register(\n        'poloniex',\n        create_bundle(\n            assets,\n            start_session,\n            end_session,\n        ),\n        calendar_name='POLONIEX',\n        minutes_per_day=24*60,\n        start_session=start_session,\n        end_session=end_session\n    )\n\n2) Ingest the data with::\n\n    zipline ingest -b poloniex\n\n3) Create your trading algorithm, e.g. ``my_algorithm.py`` with:\n\n.. code:: python\n\n    import logging\n\n    from zipline.api import order, record, symbol\n    from zipline_poloniex.utils import setup_logging\n\n    __author__ = \"Florian Wilhelm\"\n    __copyright__ = \"Florian Wilhelm\"\n    __license__ = \"new-bsd\"\n\n    # setup logging and all\n    setup_logging(logging.INFO)\n    _logger = logging.getLogger(__name__)\n    _logger.info(\"Dummy agent loaded\")\n\n\n    def initialize(context):\n        _logger.info(\"Initializing agent...\")\n        # There seems no \"nice\" way to set the emission rate to minute\n        context.sim_params._emission_rate = 'minute'\n\n\n    def handle_data(context, data):\n        _logger.debug(\"Handling data...\")\n        order(symbol('ETH'), 10)\n        record(ETH=data.current(symbol('ETH'), 'price'))\n\n4) Run your algorithm in ``my_algorithm.py`` with::\n\n    zipline run -f ./my_algorithm.py -s 2016-01-01 -e 2016-12-31 -o results.pickle --data-frequency minute -b poloniex\n\n5) Analyze the performance by reading ``results.pickle`` with the help of Pandas.\n\n\nNote\n====\n\nThis project has been set up using PyScaffold 2.5.7. For details and usage\ninformation on PyScaffold see http://pyscaffold.readthedocs.org/.\n\n.. _register: http://www.zipline.io/appendix.html?highlight=register#zipline.data.bundles.register\n.. _zipline: http://www.zipline.io/\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FlorianWilhelm/zipline-poloniex", "keywords": "", "license": "mit", "maintainer": "", "maintainer_email": "", "name": "zipline-poloniex", "package_url": "https://pypi.org/project/zipline-poloniex/", "platform": "", "project_url": "https://pypi.org/project/zipline-poloniex/", "project_urls": {"Homepage": "https://github.com/FlorianWilhelm/zipline-poloniex"}, "release_url": "https://pypi.org/project/zipline-poloniex/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Poloniex data bundle for zipline, the pythonic algorithmic trading library.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Poloniex data bundle for <a href=\"http://www.zipline.io/\" rel=\"nofollow\">zipline</a>, the pythonic algorithmic trading library.</p>\n<div id=\"description\">\n<h2>Description</h2>\n<p>Just install the data bundle with pip:</p>\n<pre>pip install zipline-poloniex\n</pre>\n<p>and create a file <tt><span class=\"pre\">$HOME/.zipline/extension.py</span></tt> calling zipline\u2019s <a href=\"http://www.zipline.io/appendix.html?highlight=register#zipline.data.bundles.register\" rel=\"nofollow\">register</a> function.\nThe <tt>create_bundle</tt> function returns the necessary ingest function for <tt>register</tt>.\nUse the <tt>Pairs</tt> record for common US-Dollar to crypto-currency pairs.</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<ol>\n<li>Add following content to <tt><span class=\"pre\">$HOME/.zipline/extension.py</span></tt>:</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zipline_poloniex</span> <span class=\"kn\">import</span> <span class=\"n\">create_bundle</span><span class=\"p\">,</span> <span class=\"n\">Pairs</span><span class=\"p\">,</span> <span class=\"n\">register</span>\n\n<span class=\"c1\"># adjust the following lines to your needs</span>\n<span class=\"n\">start_session</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Timestamp</span><span class=\"p\">(</span><span class=\"s1\">'2016-01-01'</span><span class=\"p\">,</span> <span class=\"n\">tz</span><span class=\"o\">=</span><span class=\"s1\">'utc'</span><span class=\"p\">)</span>\n<span class=\"n\">end_session</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Timestamp</span><span class=\"p\">(</span><span class=\"s1\">'2016-12-31'</span><span class=\"p\">,</span> <span class=\"n\">tz</span><span class=\"o\">=</span><span class=\"s1\">'utc'</span><span class=\"p\">)</span>\n<span class=\"n\">assets</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">Pairs</span><span class=\"o\">.</span><span class=\"n\">usdt_eth</span><span class=\"p\">]</span>\n\n<span class=\"n\">register</span><span class=\"p\">(</span>\n    <span class=\"s1\">'poloniex'</span><span class=\"p\">,</span>\n    <span class=\"n\">create_bundle</span><span class=\"p\">(</span>\n        <span class=\"n\">assets</span><span class=\"p\">,</span>\n        <span class=\"n\">start_session</span><span class=\"p\">,</span>\n        <span class=\"n\">end_session</span><span class=\"p\">,</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">calendar_name</span><span class=\"o\">=</span><span class=\"s1\">'POLONIEX'</span><span class=\"p\">,</span>\n    <span class=\"n\">minutes_per_day</span><span class=\"o\">=</span><span class=\"mi\">24</span><span class=\"o\">*</span><span class=\"mi\">60</span><span class=\"p\">,</span>\n    <span class=\"n\">start_session</span><span class=\"o\">=</span><span class=\"n\">start_session</span><span class=\"p\">,</span>\n    <span class=\"n\">end_session</span><span class=\"o\">=</span><span class=\"n\">end_session</span>\n<span class=\"p\">)</span>\n</pre>\n<ol>\n<li><p>Ingest the data with:</p>\n<pre>zipline ingest -b poloniex\n</pre>\n</li>\n<li><p>Create your trading algorithm, e.g. <tt>my_algorithm.py</tt> with:</p>\n</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">zipline.api</span> <span class=\"kn\">import</span> <span class=\"n\">order</span><span class=\"p\">,</span> <span class=\"n\">record</span><span class=\"p\">,</span> <span class=\"n\">symbol</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zipline_poloniex.utils</span> <span class=\"kn\">import</span> <span class=\"n\">setup_logging</span>\n\n<span class=\"n\">__author__</span> <span class=\"o\">=</span> <span class=\"s2\">\"Florian Wilhelm\"</span>\n<span class=\"n\">__copyright__</span> <span class=\"o\">=</span> <span class=\"s2\">\"Florian Wilhelm\"</span>\n<span class=\"n\">__license__</span> <span class=\"o\">=</span> <span class=\"s2\">\"new-bsd\"</span>\n\n<span class=\"c1\"># setup logging and all</span>\n<span class=\"n\">setup_logging</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">)</span>\n<span class=\"n\">_logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Dummy agent loaded\"</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">initialize</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Initializing agent...\"</span><span class=\"p\">)</span>\n    <span class=\"c1\"># There seems no \"nice\" way to set the emission rate to minute</span>\n    <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">sim_params</span><span class=\"o\">.</span><span class=\"n\">_emission_rate</span> <span class=\"o\">=</span> <span class=\"s1\">'minute'</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">handle_data</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n    <span class=\"n\">_logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s2\">\"Handling data...\"</span><span class=\"p\">)</span>\n    <span class=\"n\">order</span><span class=\"p\">(</span><span class=\"n\">symbol</span><span class=\"p\">(</span><span class=\"s1\">'ETH'</span><span class=\"p\">),</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"n\">record</span><span class=\"p\">(</span><span class=\"n\">ETH</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">current</span><span class=\"p\">(</span><span class=\"n\">symbol</span><span class=\"p\">(</span><span class=\"s1\">'ETH'</span><span class=\"p\">),</span> <span class=\"s1\">'price'</span><span class=\"p\">))</span>\n</pre>\n<ol>\n<li><p>Run your algorithm in <tt>my_algorithm.py</tt> with:</p>\n<pre>zipline run -f ./my_algorithm.py -s 2016-01-01 -e 2016-12-31 -o results.pickle --data-frequency minute -b poloniex\n</pre>\n</li>\n<li><p>Analyze the performance by reading <tt>results.pickle</tt> with the help of Pandas.</p>\n</li>\n</ol>\n</div>\n<div id=\"note\">\n<h2>Note</h2>\n<p>This project has been set up using PyScaffold 2.5.7. For details and usage\ninformation on PyScaffold see <a href=\"http://pyscaffold.readthedocs.org/\" rel=\"nofollow\">http://pyscaffold.readthedocs.org/</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 3295004, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "95a75952387d6aed8fa92e64dd3547ed", "sha256": "e1207bcb4a1b04f37461dd6573614e4c18cb1bc8e872ae297f349844bb4fedde"}, "downloads": -1, "filename": "zipline-poloniex-0.1.tar.gz", "has_sig": false, "md5_digest": "95a75952387d6aed8fa92e64dd3547ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45035, "upload_time": "2017-04-11T20:04:10", "upload_time_iso_8601": "2017-04-11T20:04:10.333212Z", "url": "https://files.pythonhosted.org/packages/c0/97/d1e0e90b31780e6e1bae6babf875c8d630c2471c3d3123940b70e7962361/zipline-poloniex-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "1a98f848554fc8a3cf59bc118cf62c0c", "sha256": "b8f839411b1ad5042d9c8663505675e08a498d96981cb2b62d63a5e96749af4d"}, "downloads": -1, "filename": "zipline-poloniex-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1a98f848554fc8a3cf59bc118cf62c0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45025, "upload_time": "2017-04-11T20:52:32", "upload_time_iso_8601": "2017-04-11T20:52:32.783126Z", "url": "https://files.pythonhosted.org/packages/65/33/f75e39efb84c1f651f2ea980d94c2b6cdc5cd1150a53e2cdf88d6841d174/zipline-poloniex-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "fdc494d65d5fcbd9b3cca9f7785843e9", "sha256": "27c4387b68ed9a7337c41e0243a92b9a4d680d21d0d2786d718df5a3da62b4f0"}, "downloads": -1, "filename": "zipline-poloniex-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fdc494d65d5fcbd9b3cca9f7785843e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45478, "upload_time": "2017-10-31T17:47:50", "upload_time_iso_8601": "2017-10-31T17:47:50.198012Z", "url": "https://files.pythonhosted.org/packages/74/70/2977296c4722e3d3ffc20ec720411a0ab39b79cd4a13e4df9e02eb87f6ba/zipline-poloniex-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fdc494d65d5fcbd9b3cca9f7785843e9", "sha256": "27c4387b68ed9a7337c41e0243a92b9a4d680d21d0d2786d718df5a3da62b4f0"}, "downloads": -1, "filename": "zipline-poloniex-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fdc494d65d5fcbd9b3cca9f7785843e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45478, "upload_time": "2017-10-31T17:47:50", "upload_time_iso_8601": "2017-10-31T17:47:50.198012Z", "url": "https://files.pythonhosted.org/packages/74/70/2977296c4722e3d3ffc20ec720411a0ab39b79cd4a13e4df9e02eb87f6ba/zipline-poloniex-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:57 2020"}