{"info": {"author": "BioCAT", "author_email": "biocat@lethocerus.biol.iit.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 2 :: Only"], "description": "Chiplot-analyze\n===============\n\nChiplot Analyze is a general purpose GUI application used to split chiplots from peak\nreflections, Subtract the background using a smoothed convex hull and analyze peaks\nusing the trapezoidal rule.\n\n----\n\nTo run the program start it from the command line as follows \"chiplot-analyze [-d -c\n<center error range in float format> -z <smallest zoom range in pixels> -b <base\nmovement per keystroke in float format> -s <width in pixels,height in pixels(no\nspaces)>\", follow the prompts below the graph display as shown below:\n\n.. image:: https://github.com/biocatiit/Chiplot-analyze/raw/master/chi.analyze.documentation.pages/Snapshot.tiff\n   :align: center\n\nAs describe above, there are three routines that this application can accomplish,\nthese are selectable from the buttons at the top of the window, these are available at all\ntimes, you can easily switch between any at all times. After selecting one of the\nfunctions you will be prompted for an input file to work with, there are conventions to\nfilenames, however this program will work any file correctly formatted. Each routine is\ndescribed below.\n\n1) **Splitter** (split):\n\n  This routine is used to split chiplots using pairs of reflection peaks within the chiplot.\n  The input for this program is a space delimitated set of evenly spaced points. The\n  program is preprimed and ready for input as soon as the user has selected a chiplot.\n  Following onscreen instructions the user is to set the number of reflections used in the\n  splitting routine, along with a checkbox marking it to have a valid center peak. Once\n  done, upper and lower bounds for each of the peaks are to be selected, the program\n  only uses the x coordinates of the clicks, so it is not necessary to accurately click. Once\n  the required peaks have been set, the routine will automagically split it and display the\n  peaks discovered and mark the center of the chiplot with a green line. The algorithm\n  checks for the range of centers calculated from the peaks for accuracy. This accuracyrange is\n  set when starting the program from the command line, see above for starting details. When\n  done, it will prompt the user to save the split chiplots using filenames specified. If the\n  graph is not split correctly, select redo and re-split the chiplot. When the center is\n  correctly identified, output the chiplots using standard or custom filenames. It is\n  convention to label the split files by adding \u02bbl.xy\u02bc and \u02bbr.xy\u02bc to the left and right split\n  files respectively.\n\n2) **Background Subtraction** (BGSub):\n\n  This routine is used to subtract the background from supplied chiplots using a\n  convex hull that is optionally smoothed by a variety of interpolating functions. The input\n  for this program is a space delimitated set of evenly spaced points. Following the\n  onscreen instructions the user will give left and right bounds on the region of the plot\n  that will be used to generate a background function. A vertical red line will appear on\n  the screen wherever the user clicks, indicating the cutoff points for the interpolation.\n  Once these have been successfully set the user has the option to ignore parts of the\n  graph that have large negative peaks which would mess up the convex hull algorithm.\n  By selecting eliminate peaks, the user then selects to the left and right of each peak,\n  order is important. These areas will be ignored by the convex hull algorithm. When all\n  such points have been marked, Select Convex Hull from the commands below the\n  prompt to run the convex hull algorithm. If the algorithm is not successful or a large\n  negative peak was missed, simply reset the current chiplot and try again. When the\n  Convex hull is correct, you can output these values into a non uniform chiplot, which is\n  usually denoted by a \u02bb.hull\u02bc. From here optionally smooth the convex hull points using a\n  variety of interpolating functions selected by radio buttons below the command buttons.\n  There are currently two options Spline fitting curves and Pchip Curves. When a\n  reasonable curve has been set, or the convex hull is what is wanted, run the subtraction\n  routine from the commands below the prompt. This will subtract the background and\n  output the data to the place you choose. It is convention to add .bak to these files as the\n  standard files indicate.\n\n3) **Peak Analysis** (Centroid):\n\n  This routine is used to analyze peaks from the supplied chiplots using a trapezoid\n  area integrating function and a determine the center of the peak by finding its centroid.\n  The input for this program is a space delimitated set of evenly spaced points. Following\n  the onscreen instructions the user is prompted to select a log file to output the peak\n  data to. The logfile is appended to so there is no worry about overwriting old data, and\n  you can simply select the same log file for the entire data set to make it work wonders.\n  This point is not clear from the onscreen instructions as it prompts you that it will\n  overwrite the old file, it is ok to output to more than one file, however unnecessary.\n  Once the output file has been selected, the user is left to pick a function to perform. A\n  zoom function or an analyzation function. The zoom function is acomplished by a\n  dragging a box on the screen, it is fairly laggy and may be changed soon, however it\n  works, thus two lines are drug across the screen to zoom into that region. Once done,\n  the user can select Analyze from the commands below the prompt. When selected, the\n  user moves the baseline which is provided (the green line on the picture) by the arrow\n  keys or manually setting it in the text box below the prompt. When the baseline hasbeen\n  set, the upper and lower bounds of the peak are determined by user input on\n  either side of the peak. When done, select run analyze from the commands to\n  determine the centroid and area of the peak, these are displayed on screen and written\n  to the log file. To run an analyzation on another peak from the same file, simply \u02bbreset\n  (analyze new peak)\u02bc the graph and repeat the above instructions.\n\n\n\n\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/biocatiit/Chiplot-analyze", "keywords": "chiplot analyze", "license": "", "maintainer": "", "maintainer_email": "", "name": "chiplot-analyze", "package_url": "https://pypi.org/project/chiplot-analyze/", "platform": "", "project_url": "https://pypi.org/project/chiplot-analyze/", "project_urls": {"Homepage": "https://github.com/biocatiit/Chiplot-analyze"}, "release_url": "https://pypi.org/project/chiplot-analyze/0.9.7/", "requires_dist": ["matplotlib"], "requires_python": "", "summary": "A general purpose GUI application used to analyze chiplots.", "version": "0.9.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Chiplot Analyze is a general purpose GUI application used to split chiplots from peak\nreflections, Subtract the background using a smoothed convex hull and analyze peaks\nusing the trapezoidal rule.</p>\n<hr class=\"docutils\">\n<p>To run the program start it from the command line as follows \u201cchiplot-analyze [-d -c\n&lt;center error range in float format&gt; -z &lt;smallest zoom range in pixels&gt; -b &lt;base\nmovement per keystroke in float format&gt; -s &lt;width in pixels,height in pixels(no\nspaces)&gt;\u201d, follow the prompts below the graph display as shown below:</p>\n<img alt=\"https://github.com/biocatiit/Chiplot-analyze/raw/master/chi.analyze.documentation.pages/Snapshot.tiff\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/520c5d64a1d4a4fff380ce9b9ea9e04731642702/68747470733a2f2f6769746875622e636f6d2f62696f6361746969742f436869706c6f742d616e616c797a652f7261772f6d61737465722f6368692e616e616c797a652e646f63756d656e746174696f6e2e70616765732f536e617073686f742e74696666\">\n<p>As describe above, there are three routines that this application can accomplish,\nthese are selectable from the buttons at the top of the window, these are available at all\ntimes, you can easily switch between any at all times. After selecting one of the\nfunctions you will be prompted for an input file to work with, there are conventions to\nfilenames, however this program will work any file correctly formatted. Each routine is\ndescribed below.</p>\n<ol>\n<li><strong>Splitter</strong> (split):</li>\n</ol>\n<blockquote>\nThis routine is used to split chiplots using pairs of reflection peaks within the chiplot.\nThe input for this program is a space delimitated set of evenly spaced points. The\nprogram is preprimed and ready for input as soon as the user has selected a chiplot.\nFollowing onscreen instructions the user is to set the number of reflections used in the\nsplitting routine, along with a checkbox marking it to have a valid center peak. Once\ndone, upper and lower bounds for each of the peaks are to be selected, the program\nonly uses the x coordinates of the clicks, so it is not necessary to accurately click. Once\nthe required peaks have been set, the routine will automagically split it and display the\npeaks discovered and mark the center of the chiplot with a green line. The algorithm\nchecks for the range of centers calculated from the peaks for accuracy. This accuracyrange is\nset when starting the program from the command line, see above for starting details. When\ndone, it will prompt the user to save the split chiplots using filenames specified. If the\ngraph is not split correctly, select redo and re-split the chiplot. When the center is\ncorrectly identified, output the chiplots using standard or custom filenames. It is\nconvention to label the split files by adding \u02bbl.xy\u02bc and \u02bbr.xy\u02bc to the left and right split\nfiles respectively.</blockquote>\n<ol>\n<li><strong>Background Subtraction</strong> (BGSub):</li>\n</ol>\n<blockquote>\nThis routine is used to subtract the background from supplied chiplots using a\nconvex hull that is optionally smoothed by a variety of interpolating functions. The input\nfor this program is a space delimitated set of evenly spaced points. Following the\nonscreen instructions the user will give left and right bounds on the region of the plot\nthat will be used to generate a background function. A vertical red line will appear on\nthe screen wherever the user clicks, indicating the cutoff points for the interpolation.\nOnce these have been successfully set the user has the option to ignore parts of the\ngraph that have large negative peaks which would mess up the convex hull algorithm.\nBy selecting eliminate peaks, the user then selects to the left and right of each peak,\norder is important. These areas will be ignored by the convex hull algorithm. When all\nsuch points have been marked, Select Convex Hull from the commands below the\nprompt to run the convex hull algorithm. If the algorithm is not successful or a large\nnegative peak was missed, simply reset the current chiplot and try again. When the\nConvex hull is correct, you can output these values into a non uniform chiplot, which is\nusually denoted by a \u02bb.hull\u02bc. From here optionally smooth the convex hull points using a\nvariety of interpolating functions selected by radio buttons below the command buttons.\nThere are currently two options Spline fitting curves and Pchip Curves. When a\nreasonable curve has been set, or the convex hull is what is wanted, run the subtraction\nroutine from the commands below the prompt. This will subtract the background and\noutput the data to the place you choose. It is convention to add .bak to these files as the\nstandard files indicate.</blockquote>\n<ol>\n<li><strong>Peak Analysis</strong> (Centroid):</li>\n</ol>\n<blockquote>\nThis routine is used to analyze peaks from the supplied chiplots using a trapezoid\narea integrating function and a determine the center of the peak by finding its centroid.\nThe input for this program is a space delimitated set of evenly spaced points. Following\nthe onscreen instructions the user is prompted to select a log file to output the peak\ndata to. The logfile is appended to so there is no worry about overwriting old data, and\nyou can simply select the same log file for the entire data set to make it work wonders.\nThis point is not clear from the onscreen instructions as it prompts you that it will\noverwrite the old file, it is ok to output to more than one file, however unnecessary.\nOnce the output file has been selected, the user is left to pick a function to perform. A\nzoom function or an analyzation function. The zoom function is acomplished by a\ndragging a box on the screen, it is fairly laggy and may be changed soon, however it\nworks, thus two lines are drug across the screen to zoom into that region. Once done,\nthe user can select Analyze from the commands below the prompt. When selected, the\nuser moves the baseline which is provided (the green line on the picture) by the arrow\nkeys or manually setting it in the text box below the prompt. When the baseline hasbeen\nset, the upper and lower bounds of the peak are determined by user input on\neither side of the peak. When done, select run analyze from the commands to\ndetermine the centroid and area of the peak, these are displayed on screen and written\nto the log file. To run an analyzation on another peak from the same file, simply \u02bbreset\n(analyze new peak)\u02bc the graph and repeat the above instructions.</blockquote>\n\n          </div>"}, "last_serial": 3658730, "releases": {"0.9.7": [{"comment_text": "", "digests": {"md5": "75b990b2909a81854f6d43a2bcc45a96", "sha256": "6d6aa902bf570635dc1831ecb1c602b8c2553dcf7c22b155fecbc065f2f1b5f5"}, "downloads": -1, "filename": "chiplot_analyze-0.9.7-py2-none-any.whl", "has_sig": false, "md5_digest": "75b990b2909a81854f6d43a2bcc45a96", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 43918, "upload_time": "2018-03-11T10:32:17", "upload_time_iso_8601": "2018-03-11T10:32:17.670400Z", "url": "https://files.pythonhosted.org/packages/df/5f/b52e1fc3dbdefbb074e4fd1fda4eeabf5d9b1057c5338779ea7882771ff0/chiplot_analyze-0.9.7-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0637c4acea114ab626eee4d52e436b95", "sha256": "187b8f7b021aec4f313960aadb68c1ab4470fd34d10a94f6697c770a0667fcf8"}, "downloads": -1, "filename": "chiplot-analyze-0.9.7.tar.gz", "has_sig": false, "md5_digest": "0637c4acea114ab626eee4d52e436b95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39941, "upload_time": "2018-03-11T10:32:19", "upload_time_iso_8601": "2018-03-11T10:32:19.801966Z", "url": "https://files.pythonhosted.org/packages/f8/ab/5c8695cd7436baee7e0566d9035f8eb02fc06aedc6b05968b370cca6e660/chiplot-analyze-0.9.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "75b990b2909a81854f6d43a2bcc45a96", "sha256": "6d6aa902bf570635dc1831ecb1c602b8c2553dcf7c22b155fecbc065f2f1b5f5"}, "downloads": -1, "filename": "chiplot_analyze-0.9.7-py2-none-any.whl", "has_sig": false, "md5_digest": "75b990b2909a81854f6d43a2bcc45a96", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 43918, "upload_time": "2018-03-11T10:32:17", "upload_time_iso_8601": "2018-03-11T10:32:17.670400Z", "url": "https://files.pythonhosted.org/packages/df/5f/b52e1fc3dbdefbb074e4fd1fda4eeabf5d9b1057c5338779ea7882771ff0/chiplot_analyze-0.9.7-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0637c4acea114ab626eee4d52e436b95", "sha256": "187b8f7b021aec4f313960aadb68c1ab4470fd34d10a94f6697c770a0667fcf8"}, "downloads": -1, "filename": "chiplot-analyze-0.9.7.tar.gz", "has_sig": false, "md5_digest": "0637c4acea114ab626eee4d52e436b95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39941, "upload_time": "2018-03-11T10:32:19", "upload_time_iso_8601": "2018-03-11T10:32:19.801966Z", "url": "https://files.pythonhosted.org/packages/f8/ab/5c8695cd7436baee7e0566d9035f8eb02fc06aedc6b05968b370cca6e660/chiplot-analyze-0.9.7.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:33 2020"}