{"info": {"author": "Joe Gasewicz", "author_email": "joegasewicz@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "![PyPI](https://img.shields.io/pypi/v/pymail-io)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pymail-io)\n![Read the Docs (version)](https://img.shields.io/readthedocs/pymail-io/en/latest)\n\n![PyMailIO](assets/pymail_io.png)\n\n An Asynchronous mail server that's built on CPython's AsyncIO library.\n \nRead the docs: [Documentation](https://pymail-io.readthedocs.io/en/latest/)\n\n\n```bash\npip install pymail-io\n\n# Install & run Redis\ndocker run redis\n```\n\n#### Quick Start\n\n\nRun PyMailIO as a complete emailing solution:\n\n```python\nfrom pymail_io.pymailio_task import Task\n\np = Task(\n    password=\"wizard\",\n    receiver_email=\"joe@blogs.com\", # Or a list of emails receiver_email=[\"joe@blogs.com\", ...],\n    sender_email=\"your_email@gmail.com\",\n    email_host=\"smtp.gmail.com\",\n)\n# if you are running PyMailIO within the life time of a long running process, such as\n# a web framework of rest API, then set `run_forever=True` as this will yield much\n# better performances.\n```\nCreate your email subject & body\n```python\nr = p.send_email(\n    subject=\"The subject...\",\n    body=\"The email body...\",\n)\n\n```\n\nThe response from calling `p.send_email`:\n```python\n\"\"\"\n\n{\n    \"metadata\": { # metadata... },\n        \"email\": {\n            \"subject\": subject,\n            \"body\": body,\n            \"email_init\": # time that PyMailIO sent your email,\n    }\n}\n\"\"\"\n```\n\nTo get the results of the email from the store, pass the metadata\nto `get_email_response`. For example:\n```python\n# r is the return value from calling p.send_email (see above)\nr = p.send_email(\n    subject=\"The subject...\",\n    body=\"The email body...\",\n)\n\nemail_meta = p.get_email_response(r)\n\n```\nThere are 2 datetime values that reference when PyMailIO executed the `send_email`\nmethod & also when the email was actually sent from the background queue:\nThe `datetime_exec` method will give you the datetime value that PyMailIO executed\nthe `send_email` method.\nFor example:\n```python\nr = p.send_email(\n    subject=\"The subject...\",\n    body=\"The email body...\",\n)\n\nself.datetime_exec()\n\n```\n\nThere are 2 datetime values that reference when PyMailIO executed the `send_email`\nmethod & also when the email was actually sent from the background queue:\nThe `exec_time` method will give you the datetime value that PyMailIO's **queue** executed\nthe `send_email` method.\nFor example:\n\n```python\nr = p.send_email(\n    subject=\"The subject...\",\n    body=\"The email body...\",\n)\n\n# Some time in the future...\nr = get_email_response(r)\ntime_email_sent = self.exec_time(r)\n\n```\n\n\nTo update the task queue & store settings, you can pass in extra values as kwargs to\nthe `Task` class. For example:\n\n```python\n\np = Task(\n   password=\"wizard\",\n   receiver_email=\"joe@blogs.com\",  # Or a list of emails receiver_email=[\"joe@blogs.com\", ...],\n   sender_email=\"your_email@gmail.com\",\n   email_host=\"smtp.gmail.com\",\n\n   # extra settings:\n    store_port=6379,\n    store_host=\"localhost\",\n    db=0,\n    workers=1,\n)\n\n```\n## Built With\n\n* [PyTaskIO](https://github.com/joegasewicz/pytask_io) - Asynchronous Tasks Library using asyncio\n\n\n## Authors\n\n* **Joe Gasewicz** - *Initial work* - [JoeGasewicz](https://github.com/joegasewicz/)\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n## Acknowledgments\n\nThis library is based on & influenced by [flask-mail](https://github.com/mattupstate/flask-mail).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/joegasewicz/pymail_io", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pymail-io", "package_url": "https://pypi.org/project/pymail-io/", "platform": "", "project_url": "https://pypi.org/project/pymail-io/", "project_urls": {"Homepage": "https://github.com/joegasewicz/pymail_io"}, "release_url": "https://pypi.org/project/pymail-io/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "An asynchronous mail server", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ad778b4a52322e76ac0306bee4cc0a579447bc2c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796d61696c2d696f\">\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2b5ff514e66d36b5facb5c044a79ecf8aa62113/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70796d61696c2d696f\">\n<img alt=\"Read the Docs (version)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/59faf6c096ab98ed9514414ab0f2f68ec0f5ed7f/68747470733a2f2f696d672e736869656c64732e696f2f72656164746865646f63732f70796d61696c2d696f2f656e2f6c6174657374\"></p>\n<p><img alt=\"PyMailIO\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be6f15dbe57c638a8f8d4a7c24d2f0b3fe6357a3/6173736574732f70796d61696c5f696f2e706e67\"></p>\n<p>An Asynchronous mail server that's built on CPython's AsyncIO library.</p>\n<p>Read the docs: <a href=\"https://pymail-io.readthedocs.io/en/latest/\" rel=\"nofollow\">Documentation</a></p>\n<pre>pip install pymail-io\n\n<span class=\"c1\"># Install &amp; run Redis</span>\ndocker run redis\n</pre>\n<h4>Quick Start</h4>\n<p>Run PyMailIO as a complete emailing solution:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pymail_io.pymailio_task</span> <span class=\"kn\">import</span> <span class=\"n\">Task</span>\n\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">Task</span><span class=\"p\">(</span>\n    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">\"wizard\"</span><span class=\"p\">,</span>\n    <span class=\"n\">receiver_email</span><span class=\"o\">=</span><span class=\"s2\">\"joe@blogs.com\"</span><span class=\"p\">,</span> <span class=\"c1\"># Or a list of emails receiver_email=[\"joe@blogs.com\", ...],</span>\n    <span class=\"n\">sender_email</span><span class=\"o\">=</span><span class=\"s2\">\"your_email@gmail.com\"</span><span class=\"p\">,</span>\n    <span class=\"n\">email_host</span><span class=\"o\">=</span><span class=\"s2\">\"smtp.gmail.com\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># if you are running PyMailIO within the life time of a long running process, such as</span>\n<span class=\"c1\"># a web framework of rest API, then set `run_forever=True` as this will yield much</span>\n<span class=\"c1\"># better performances.</span>\n</pre>\n<p>Create your email subject &amp; body</p>\n<pre><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">send_email</span><span class=\"p\">(</span>\n    <span class=\"n\">subject</span><span class=\"o\">=</span><span class=\"s2\">\"The subject...\"</span><span class=\"p\">,</span>\n    <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s2\">\"The email body...\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>The response from calling <code>p.send_email</code>:</p>\n<pre><span class=\"sd\">\"\"\"</span>\n\n<span class=\"sd\">{</span>\n<span class=\"sd\">    \"metadata\": { # metadata... },</span>\n<span class=\"sd\">        \"email\": {</span>\n<span class=\"sd\">            \"subject\": subject,</span>\n<span class=\"sd\">            \"body\": body,</span>\n<span class=\"sd\">            \"email_init\": # time that PyMailIO sent your email,</span>\n<span class=\"sd\">    }</span>\n<span class=\"sd\">}</span>\n<span class=\"sd\">\"\"\"</span>\n</pre>\n<p>To get the results of the email from the store, pass the metadata\nto <code>get_email_response</code>. For example:</p>\n<pre><span class=\"c1\"># r is the return value from calling p.send_email (see above)</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">send_email</span><span class=\"p\">(</span>\n    <span class=\"n\">subject</span><span class=\"o\">=</span><span class=\"s2\">\"The subject...\"</span><span class=\"p\">,</span>\n    <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s2\">\"The email body...\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">email_meta</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">get_email_response</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n</pre>\n<p>There are 2 datetime values that reference when PyMailIO executed the <code>send_email</code>\nmethod &amp; also when the email was actually sent from the background queue:\nThe <code>datetime_exec</code> method will give you the datetime value that PyMailIO executed\nthe <code>send_email</code> method.\nFor example:</p>\n<pre><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">send_email</span><span class=\"p\">(</span>\n    <span class=\"n\">subject</span><span class=\"o\">=</span><span class=\"s2\">\"The subject...\"</span><span class=\"p\">,</span>\n    <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s2\">\"The email body...\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">datetime_exec</span><span class=\"p\">()</span>\n</pre>\n<p>There are 2 datetime values that reference when PyMailIO executed the <code>send_email</code>\nmethod &amp; also when the email was actually sent from the background queue:\nThe <code>exec_time</code> method will give you the datetime value that PyMailIO's <strong>queue</strong> executed\nthe <code>send_email</code> method.\nFor example:</p>\n<pre><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">send_email</span><span class=\"p\">(</span>\n    <span class=\"n\">subject</span><span class=\"o\">=</span><span class=\"s2\">\"The subject...\"</span><span class=\"p\">,</span>\n    <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s2\">\"The email body...\"</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Some time in the future...</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">get_email_response</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n<span class=\"n\">time_email_sent</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">exec_time</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n</pre>\n<p>To update the task queue &amp; store settings, you can pass in extra values as kwargs to\nthe <code>Task</code> class. For example:</p>\n<pre><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">Task</span><span class=\"p\">(</span>\n   <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">\"wizard\"</span><span class=\"p\">,</span>\n   <span class=\"n\">receiver_email</span><span class=\"o\">=</span><span class=\"s2\">\"joe@blogs.com\"</span><span class=\"p\">,</span>  <span class=\"c1\"># Or a list of emails receiver_email=[\"joe@blogs.com\", ...],</span>\n   <span class=\"n\">sender_email</span><span class=\"o\">=</span><span class=\"s2\">\"your_email@gmail.com\"</span><span class=\"p\">,</span>\n   <span class=\"n\">email_host</span><span class=\"o\">=</span><span class=\"s2\">\"smtp.gmail.com\"</span><span class=\"p\">,</span>\n\n   <span class=\"c1\"># extra settings:</span>\n    <span class=\"n\">store_port</span><span class=\"o\">=</span><span class=\"mi\">6379</span><span class=\"p\">,</span>\n    <span class=\"n\">store_host</span><span class=\"o\">=</span><span class=\"s2\">\"localhost\"</span><span class=\"p\">,</span>\n    <span class=\"n\">db</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"n\">workers</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Built With</h2>\n<ul>\n<li><a href=\"https://github.com/joegasewicz/pytask_io\" rel=\"nofollow\">PyTaskIO</a> - Asynchronous Tasks Library using asyncio</li>\n</ul>\n<h2>Authors</h2>\n<ul>\n<li><strong>Joe Gasewicz</strong> - <em>Initial work</em> - <a href=\"https://github.com/joegasewicz/\" rel=\"nofollow\">JoeGasewicz</a></li>\n</ul>\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"LICENSE.md\" rel=\"nofollow\">LICENSE.md</a> file for details</p>\n<h2>Acknowledgments</h2>\n<p>This library is based on &amp; influenced by <a href=\"https://github.com/mattupstate/flask-mail\" rel=\"nofollow\">flask-mail</a>.</p>\n\n          </div>"}, "last_serial": 6817064, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "67312452cac6bd40d9cbc623b89b8b48", "sha256": "c4ae9083dfbaae4dfe52c3229ccb2304f07dbc0b4835e0183eba7fc5b8e6aa5b"}, "downloads": -1, "filename": "pymail_io-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "67312452cac6bd40d9cbc623b89b8b48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1569, "upload_time": "2019-12-31T21:09:02", "upload_time_iso_8601": "2019-12-31T21:09:02.207166Z", "url": "https://files.pythonhosted.org/packages/d9/98/0db8291186a6a410cca287a0869ea98b063d4f407d4a749833efb7e826b7/pymail_io-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd51c726a1b2a7c3651685db6b3b700e", "sha256": "ee62c8cfecadf881f885260cfc094a00929d3119284e96173af0313df458efb6"}, "downloads": -1, "filename": "pymail-io-0.0.1.tar.gz", "has_sig": false, "md5_digest": "bd51c726a1b2a7c3651685db6b3b700e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1283, "upload_time": "2019-12-31T21:09:04", "upload_time_iso_8601": "2019-12-31T21:09:04.079779Z", "url": "https://files.pythonhosted.org/packages/ce/bf/f235ba1cd14cb7ba62394fa3ee4b73330bb14a6c3b3d2906ffb6500f1b0f/pymail-io-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "ae9089c52784b2603ee95b11464f3225", "sha256": "9ca056f145b53115b16dcb6190baaa2150df860b6a027af0f7424b0bb98c470a"}, "downloads": -1, "filename": "pymail-io-0.0.2.tar.gz", "has_sig": false, "md5_digest": "ae9089c52784b2603ee95b11464f3225", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4258, "upload_time": "2020-03-10T21:24:26", "upload_time_iso_8601": "2020-03-10T21:24:26.743108Z", "url": "https://files.pythonhosted.org/packages/eb/d2/4c2fa7e5a8d1a22355cea188e11260c5b0324031a384dcda4db5ab935169/pymail-io-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "46e43651f43cc59a5136b5189d1cfdf6", "sha256": "37b8eb2d4bfd26a008b1279268729f4f3e956c5349b8943c47ccd07670fc33e6"}, "downloads": -1, "filename": "pymail-io-0.0.3.tar.gz", "has_sig": false, "md5_digest": "46e43651f43cc59a5136b5189d1cfdf6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6352, "upload_time": "2020-03-12T14:21:21", "upload_time_iso_8601": "2020-03-12T14:21:21.090683Z", "url": "https://files.pythonhosted.org/packages/d3/aa/d3b60be02332af9fdab35bd2b481afa4a8ebf0765961cee53b05a83a0555/pymail-io-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "0b7946dd47acf89a7282e783c3a85853", "sha256": "289670495fb2033dc8f33281acfef89dd363b9f6e2b335fc94124059cbde9f61"}, "downloads": -1, "filename": "pymail-io-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0b7946dd47acf89a7282e783c3a85853", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6405, "upload_time": "2020-03-15T20:53:27", "upload_time_iso_8601": "2020-03-15T20:53:27.440518Z", "url": "https://files.pythonhosted.org/packages/0d/cb/48d9b77c4ff49e3793b847f635bc3b83e1353138f96a517c032fd0962e56/pymail-io-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0b7946dd47acf89a7282e783c3a85853", "sha256": "289670495fb2033dc8f33281acfef89dd363b9f6e2b335fc94124059cbde9f61"}, "downloads": -1, "filename": "pymail-io-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0b7946dd47acf89a7282e783c3a85853", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6405, "upload_time": "2020-03-15T20:53:27", "upload_time_iso_8601": "2020-03-15T20:53:27.440518Z", "url": "https://files.pythonhosted.org/packages/0d/cb/48d9b77c4ff49e3793b847f635bc3b83e1353138f96a517c032fd0962e56/pymail-io-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:36 2020"}