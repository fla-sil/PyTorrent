{"info": {"author": "acbart,lukesg08", "author_email": "acbart@udel.edu", "bugtrack_url": null, "classifiers": ["Intended Audience :: Education", "Programming Language :: Python :: 3", "Topic :: Education"], "description": "Pedal\n=====\n\nA collection of tools to analyze student's work in a pipeline. Pedal not only provides some of these tools, but it provides a *framework* around those tools.\n\nInstallation\n============\n\nInstall from PyPi::\n\n    pip install pedal\n\nOr install from the https://github.com/acbart/pedal\n\nImportant Concepts\n==================\n\n.. image:: docs/html/_static/pedal-overview.png\n\n* *Report*: A collection of Feedback and a namespace for the results of Tools, accessible by the Tool name. Reports can be generated imperatively (using the default Report, similar to MatPlotLib) or by explicitly creating and passing Report objects.\n* *Tool*: A system that can read and write to a Report, building on the work of previous Tools.\n* *Resolver*: A system that can analyze a Report and create a relevant bit of output for another system (e.g., BlockPy, Web-CAT).\n* *Feedback*: A structured representation of content to be delivered to a student in response to their submission of work.\n\nWe base our idea of \"Feedback\" on concepts established by Narciss 2006. Our Feedback objects are composed of up to 7 components:\n\n* result (bool): Whether or not this feedback is associated with the learner completing the task (\"Success!\")\n* performance (float): A relative amount that this feedback contributes to the students' performance (think in terms of partial credit, like \"Triggering this feedback is worth 20%\").\n* misconceptions (Component): A description of the misconception that is believed to be in the student's mind, or perhaps the relevant concept from the material that should be associated with this. (\"Variables must be initialized before they are used.\")\n* mistakes (Component): A description of the error or bug that the student has created (\"NameError on line 5: sum has not been defined\")\n* hints (Component): A suggestion for what the student can do (\"Initialize the sum variable one line 1\")\n* constraints (Component): A description of the task requirements or task type that the student has violated (\"You used a for loop, but this question expected you to use recursion.\")\n* metacognitives (Component): A suggestion for more regulative strategies (\"You have been working for 5 hours, perhaps it is time to take a break?\")\n\nOne of these components is described by the following union type, where a Component is one of:\n\n* A str field representing renderable text for a student\n* An object with a \"message (str)\" field of renderable text for a student, along with whatever other fields are useful (e.g., the line number of the error)\n* A list of Components\n\nAdditionally, a given Feedback object has the following metadata:\n\n* label (str): An internal name for this specific piece of feedback. This is particularly useful for us for research purposes (we currently show it in italics as part of the message)\n* tool (str): An internal name for indicating the tool that created this feedback (e.g., \"tifa\" or \"source\")\n* category (str): A human-presentable name showable to a student (this is like the \"Analyzer Error\" message in the top left of our BlockPy boxes).\n* priority (str): An indication of how important this feedback is. Might be \"high/medium/low\" or the name of a category to supersede.\n\nTools\n=====\n\nSource\n------\n\n.. code:: python\n\n  from pedal.source import set_source\n  STUDENT_CODE = \"message='Hello World'\\nprint(message)\"\n  set_source(STUDENT_CODE)\n\nOne of the simplest tools, the Source tool provides a function for attaching source code to a Report. It is a requirement for any tool that wants to do code analysis. But notice that this tool is not required in general - you could find other ways to attach code (e.g., a History tool that attaches all previous code written) or other aspects of the students' performance (e.g., a Demographics tool to attach bio-data about the student).\n\nTIFA\n----\n\n.. code:: python\n\n    from pedal.tifa import tifa_analysis\n    tifa_analysis()\n\nTifa is a Type Inferencer and Flow Analyzer. Its goal is not to be a general purpose tool for doing so, but to be focused on simplistic code written in pedagogical settings. This means that it can make a lot of assumptions and forbid a lot of features. Further, it's primary job is not just to collect type information, but to detect issues in the code (e.g., a variable changes type, a variable is not read, a variable is defined in one scope then used in another).\n\nCAIT\n----\n\n.. code:: python\n\n    from pedal.cait import parse_program, find_matches\n    root = parse_program()\n    # ... or ...\n    matches = find_matches(\"_var_ = __expr__\")\n\nCapturer for AST Inclusion Trees. Its goal is to take a a desired AST and a target AST, and captures trees in the target ast that include the desired AST. A metaphor might be \"Regular Expressions for source code\".\n\nMistakes\n--------\n\n.. code:: python\n\n    from pedal.mistakes.instructor_iteration import *\n    missing_for_slot_empty()\n    # ...\n\nA collection of code configuration patterns that represent common mistakes for students. These mistakes are grouped together by topics.\n\nToolkit\n-------\n\n.. code:: python\n\n    from pedal.toolkit.utilities import *\n    prevent_operation('+')\n    ensure_literal(7)\n\n    from pedal.toolkit.functions import function_signature\n    function_signature('search', needle='str', haystack='list[str]',\n                       returns='bool')\n\nA collection of helper functions to analyze student code, such as detecting incorrectly closed files, preventing the use of certain operators or literals, checking function signatures, and rudimentary unit testing functionality.\n\nSandbox\n-------\n\n.. code:: python\n\n    from pedal.sandbox import run\n    student = run()\n    result_should_be_6 = student.call('add3', 1, 2, 3)\n\nA sophisticated system for executing students' code under different circumstances. Relies on the `exec` and `patch` tools of Python to prevent students from escaping their namespace.\n\nHowever, you should be aware that true sandboxing is impossible in a dynamic language like Python. Be sure that your environment has multiple lines of defense, such as proper file system permissions.\n\nResolvers\n=========\n\nSimple\n------\n\n.. code:: python\n\n    from pedal.resolvers import simple\n\n    print(simple.resolve())\n\nThis resolver finds the highest priority message to deliver to the student, depending on a pre-established bit of logic for tools.\n\nOthers\n------\n\nOther resolvers are possible - we could find the first, or deliver more than one (grouped using HTML formatting).\n\nPlugins\n=======\n\nPlugins can be used to better integration with external environments, or for utility scripts.\n\nVPL\n---\n\nStrips out HTML\n\nJupyter Notebooks\n-----------------\n\nGrade magic, tools for syncing problem with BlockPy\n\nBlockPy\n-------\n\nSee BlockPy for more information\n\nWeb-CAT\n-------\n\nNo special connections anymore!\n\nReference Checks\n----------------\n\nUnit testing harness for verifying instructor tests produce the expected output when given various student files.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pedal-edu.github.io/pedal", "keywords": "feedback education teaching program analysis tifa cait sandbox pedal grading grader grade", "license": "Creative Commons Attribution-Noncommercial-Share Alike license", "maintainer": "", "maintainer_email": "", "name": "pedal", "package_url": "https://pypi.org/project/pedal/", "platform": "", "project_url": "https://pypi.org/project/pedal/", "project_urls": {"Homepage": "https://pedal-edu.github.io/pedal"}, "release_url": "https://pypi.org/project/pedal/2.0.2/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Tools to provide feedback on student code.", "version": "2.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pedal\">\n<h2>Pedal</h2>\n<p>A collection of tools to analyze student\u2019s work in a pipeline. Pedal not only provides some of these tools, but it provides a <em>framework</em> around those tools.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install from PyPi:</p>\n<pre>pip install pedal\n</pre>\n<p>Or install from the <a href=\"https://github.com/acbart/pedal\" rel=\"nofollow\">https://github.com/acbart/pedal</a></p>\n</div>\n<div id=\"important-concepts\">\n<h2>Important Concepts</h2>\n<img alt=\"docs/html/_static/pedal-overview.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/141d0ba587c660a7c2101e6491607d3552d8f4e6/646f63732f68746d6c2f5f7374617469632f706564616c2d6f766572766965772e706e67\">\n<ul>\n<li><em>Report</em>: A collection of Feedback and a namespace for the results of Tools, accessible by the Tool name. Reports can be generated imperatively (using the default Report, similar to MatPlotLib) or by explicitly creating and passing Report objects.</li>\n<li><em>Tool</em>: A system that can read and write to a Report, building on the work of previous Tools.</li>\n<li><em>Resolver</em>: A system that can analyze a Report and create a relevant bit of output for another system (e.g., BlockPy, Web-CAT).</li>\n<li><em>Feedback</em>: A structured representation of content to be delivered to a student in response to their submission of work.</li>\n</ul>\n<p>We base our idea of \u201cFeedback\u201d on concepts established by Narciss 2006. Our Feedback objects are composed of up to 7 components:</p>\n<ul>\n<li>result (bool): Whether or not this feedback is associated with the learner completing the task (\u201cSuccess!\u201d)</li>\n<li>performance (float): A relative amount that this feedback contributes to the students\u2019 performance (think in terms of partial credit, like \u201cTriggering this feedback is worth 20%\u201d).</li>\n<li>misconceptions (Component): A description of the misconception that is believed to be in the student\u2019s mind, or perhaps the relevant concept from the material that should be associated with this. (\u201cVariables must be initialized before they are used.\u201d)</li>\n<li>mistakes (Component): A description of the error or bug that the student has created (\u201cNameError on line 5: sum has not been defined\u201d)</li>\n<li>hints (Component): A suggestion for what the student can do (\u201cInitialize the sum variable one line 1\u201d)</li>\n<li>constraints (Component): A description of the task requirements or task type that the student has violated (\u201cYou used a for loop, but this question expected you to use recursion.\u201d)</li>\n<li>metacognitives (Component): A suggestion for more regulative strategies (\u201cYou have been working for 5 hours, perhaps it is time to take a break?\u201d)</li>\n</ul>\n<p>One of these components is described by the following union type, where a Component is one of:</p>\n<ul>\n<li>A str field representing renderable text for a student</li>\n<li>An object with a \u201cmessage (str)\u201d field of renderable text for a student, along with whatever other fields are useful (e.g., the line number of the error)</li>\n<li>A list of Components</li>\n</ul>\n<p>Additionally, a given Feedback object has the following metadata:</p>\n<ul>\n<li>label (str): An internal name for this specific piece of feedback. This is particularly useful for us for research purposes (we currently show it in italics as part of the message)</li>\n<li>tool (str): An internal name for indicating the tool that created this feedback (e.g., \u201ctifa\u201d or \u201csource\u201d)</li>\n<li>category (str): A human-presentable name showable to a student (this is like the \u201cAnalyzer Error\u201d message in the top left of our BlockPy boxes).</li>\n<li>priority (str): An indication of how important this feedback is. Might be \u201chigh/medium/low\u201d or the name of a category to supersede.</li>\n</ul>\n</div>\n<div id=\"tools\">\n<h2>Tools</h2>\n<div id=\"source\">\n<h3>Source</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pedal.source</span> <span class=\"kn\">import</span> <span class=\"n\">set_source</span>\n<span class=\"n\">STUDENT_CODE</span> <span class=\"o\">=</span> <span class=\"s2\">\"message='Hello World'</span><span class=\"se\">\\n</span><span class=\"s2\">print(message)\"</span>\n<span class=\"n\">set_source</span><span class=\"p\">(</span><span class=\"n\">STUDENT_CODE</span><span class=\"p\">)</span>\n</pre>\n<p>One of the simplest tools, the Source tool provides a function for attaching source code to a Report. It is a requirement for any tool that wants to do code analysis. But notice that this tool is not required in general - you could find other ways to attach code (e.g., a History tool that attaches all previous code written) or other aspects of the students\u2019 performance (e.g., a Demographics tool to attach bio-data about the student).</p>\n</div>\n<div id=\"tifa\">\n<h3>TIFA</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pedal.tifa</span> <span class=\"kn\">import</span> <span class=\"n\">tifa_analysis</span>\n<span class=\"n\">tifa_analysis</span><span class=\"p\">()</span>\n</pre>\n<p>Tifa is a Type Inferencer and Flow Analyzer. Its goal is not to be a general purpose tool for doing so, but to be focused on simplistic code written in pedagogical settings. This means that it can make a lot of assumptions and forbid a lot of features. Further, it\u2019s primary job is not just to collect type information, but to detect issues in the code (e.g., a variable changes type, a variable is not read, a variable is defined in one scope then used in another).</p>\n</div>\n<div id=\"cait\">\n<h3>CAIT</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pedal.cait</span> <span class=\"kn\">import</span> <span class=\"n\">parse_program</span><span class=\"p\">,</span> <span class=\"n\">find_matches</span>\n<span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">parse_program</span><span class=\"p\">()</span>\n<span class=\"c1\"># ... or ...</span>\n<span class=\"n\">matches</span> <span class=\"o\">=</span> <span class=\"n\">find_matches</span><span class=\"p\">(</span><span class=\"s2\">\"_var_ = __expr__\"</span><span class=\"p\">)</span>\n</pre>\n<p>Capturer for AST Inclusion Trees. Its goal is to take a a desired AST and a target AST, and captures trees in the target ast that include the desired AST. A metaphor might be \u201cRegular Expressions for source code\u201d.</p>\n</div>\n<div id=\"mistakes\">\n<h3>Mistakes</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pedal.mistakes.instructor_iteration</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">missing_for_slot_empty</span><span class=\"p\">()</span>\n<span class=\"c1\"># ...</span>\n</pre>\n<p>A collection of code configuration patterns that represent common mistakes for students. These mistakes are grouped together by topics.</p>\n</div>\n<div id=\"toolkit\">\n<h3>Toolkit</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pedal.toolkit.utilities</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">prevent_operation</span><span class=\"p\">(</span><span class=\"s1\">'+'</span><span class=\"p\">)</span>\n<span class=\"n\">ensure_literal</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pedal.toolkit.functions</span> <span class=\"kn\">import</span> <span class=\"n\">function_signature</span>\n<span class=\"n\">function_signature</span><span class=\"p\">(</span><span class=\"s1\">'search'</span><span class=\"p\">,</span> <span class=\"n\">needle</span><span class=\"o\">=</span><span class=\"s1\">'str'</span><span class=\"p\">,</span> <span class=\"n\">haystack</span><span class=\"o\">=</span><span class=\"s1\">'list[str]'</span><span class=\"p\">,</span>\n                   <span class=\"n\">returns</span><span class=\"o\">=</span><span class=\"s1\">'bool'</span><span class=\"p\">)</span>\n</pre>\n<p>A collection of helper functions to analyze student code, such as detecting incorrectly closed files, preventing the use of certain operators or literals, checking function signatures, and rudimentary unit testing functionality.</p>\n</div>\n<div id=\"sandbox\">\n<h3>Sandbox</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pedal.sandbox</span> <span class=\"kn\">import</span> <span class=\"n\">run</span>\n<span class=\"n\">student</span> <span class=\"o\">=</span> <span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"n\">result_should_be_6</span> <span class=\"o\">=</span> <span class=\"n\">student</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"s1\">'add3'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<p>A sophisticated system for executing students\u2019 code under different circumstances. Relies on the <cite>exec</cite> and <cite>patch</cite> tools of Python to prevent students from escaping their namespace.</p>\n<p>However, you should be aware that true sandboxing is impossible in a dynamic language like Python. Be sure that your environment has multiple lines of defense, such as proper file system permissions.</p>\n</div>\n</div>\n<div id=\"resolvers\">\n<h2>Resolvers</h2>\n<div id=\"simple\">\n<h3>Simple</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pedal.resolvers</span> <span class=\"kn\">import</span> <span class=\"n\">simple</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">simple</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">())</span>\n</pre>\n<p>This resolver finds the highest priority message to deliver to the student, depending on a pre-established bit of logic for tools.</p>\n</div>\n<div id=\"others\">\n<h3>Others</h3>\n<p>Other resolvers are possible - we could find the first, or deliver more than one (grouped using HTML formatting).</p>\n</div>\n</div>\n<div id=\"plugins\">\n<h2>Plugins</h2>\n<p>Plugins can be used to better integration with external environments, or for utility scripts.</p>\n<div id=\"vpl\">\n<h3>VPL</h3>\n<p>Strips out HTML</p>\n</div>\n<div id=\"jupyter-notebooks\">\n<h3>Jupyter Notebooks</h3>\n<p>Grade magic, tools for syncing problem with BlockPy</p>\n</div>\n<div id=\"blockpy\">\n<h3>BlockPy</h3>\n<p>See BlockPy for more information</p>\n</div>\n<div id=\"web-cat\">\n<h3>Web-CAT</h3>\n<p>No special connections anymore!</p>\n</div>\n<div id=\"reference-checks\">\n<h3>Reference Checks</h3>\n<p>Unit testing harness for verifying instructor tests produce the expected output when given various student files.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7072533, "releases": {"0.1.1.dev0": [{"comment_text": "", "digests": {"md5": "5750c3db3afffef769c8a50cc1b1c226", "sha256": "8028f4ae021960dbc87b11140774f4c6f3d05c4cfd73982afbe5366118998ab5"}, "downloads": -1, "filename": "Pedal-0.1.1.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "5750c3db3afffef769c8a50cc1b1c226", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3543, "upload_time": "2018-07-15T18:04:38", "upload_time_iso_8601": "2018-07-15T18:04:38.633317Z", "url": "https://files.pythonhosted.org/packages/13/8e/1a943e73a54a1173848899693efc10ccda8221b919b1afe3ea154867293b/Pedal-0.1.1.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "641f08763bf8103f3f3b2b86a78ba6d0", "sha256": "5be9f84107e75dac0971c7b3fd3ba9e4c09d9466aeafc2e491470ec17d969966"}, "downloads": -1, "filename": "Pedal-0.1.1.dev0.tar.gz", "has_sig": false, "md5_digest": "641f08763bf8103f3f3b2b86a78ba6d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1922, "upload_time": "2018-07-15T18:08:21", "upload_time_iso_8601": "2018-07-15T18:08:21.346746Z", "url": "https://files.pythonhosted.org/packages/06/ce/3db1e5a53eb685a24e31da74dcd9c8c07254e6d5a9c16114f467ba2068f0/Pedal-0.1.1.dev0.tar.gz", "yanked": false}], "0.1.2.dev0": [{"comment_text": "", "digests": {"md5": "fb18558420c2dbe9d07419243abedb44", "sha256": "acfa553ccc443a58200908094b631cba75a8b451cec8ab3a56fc8f36f0208c18"}, "downloads": -1, "filename": "Pedal-0.1.2.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "fb18558420c2dbe9d07419243abedb44", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4693, "upload_time": "2018-07-26T05:21:38", "upload_time_iso_8601": "2018-07-26T05:21:38.117718Z", "url": "https://files.pythonhosted.org/packages/24/69/1a460096399e9a0ff9c92f8e5d0f0a16b9b250c046c11836af35ddbf2102/Pedal-0.1.2.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ba7142208cfb83d5c762807ccd9045a", "sha256": "e17b1b1610b380752c77770ecd112b010081dcfcf40e7f5821f57658134e8d63"}, "downloads": -1, "filename": "Pedal-0.1.2.dev0.tar.gz", "has_sig": false, "md5_digest": "4ba7142208cfb83d5c762807ccd9045a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2559, "upload_time": "2018-07-26T05:21:39", "upload_time_iso_8601": "2018-07-26T05:21:39.356521Z", "url": "https://files.pythonhosted.org/packages/73/39/5d4eb617d842a44221a70dc030647546f5d9ac544cd28dff1bf0e110da0b/Pedal-0.1.2.dev0.tar.gz", "yanked": false}], "0.1.3.dev0": [{"comment_text": "", "digests": {"md5": "c815817d35b748624588f1e6bc27480a", "sha256": "bf441e77baca042475e41649515d2c014830fc7d877a9f8c051de269ae606805"}, "downloads": -1, "filename": "Pedal-0.1.3.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "c815817d35b748624588f1e6bc27480a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 70731, "upload_time": "2018-07-26T05:42:02", "upload_time_iso_8601": "2018-07-26T05:42:02.935103Z", "url": "https://files.pythonhosted.org/packages/d7/db/55f76a9f9d4c896bb140c759d1985e4cc3eb99b16ef29e28af3db640b2a9/Pedal-0.1.3.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b55865cb9d9d26f334e1080b12eb8a8", "sha256": "5707bfbdffefbe659639251e16737977882a578a4934edd3058a5859763a2f05"}, "downloads": -1, "filename": "Pedal-0.1.3.dev0.tar.gz", "has_sig": false, "md5_digest": "7b55865cb9d9d26f334e1080b12eb8a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54457, "upload_time": "2018-07-26T05:42:04", "upload_time_iso_8601": "2018-07-26T05:42:04.222554Z", "url": "https://files.pythonhosted.org/packages/ab/fb/c23636e8cb70de5b08d7e1b8a60b4bb77abe3e01643794e80cc9e033859a/Pedal-0.1.3.dev0.tar.gz", "yanked": false}], "0.1.4.dev0": [{"comment_text": "", "digests": {"md5": "1829a448d986559cf48c434e8535966d", "sha256": "e2434d56780d455476c3700ae8f3fe0682ebc854e819623f78dfaa25374f9e1b"}, "downloads": -1, "filename": "Pedal-0.1.4.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "1829a448d986559cf48c434e8535966d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 93566, "upload_time": "2018-08-02T04:43:51", "upload_time_iso_8601": "2018-08-02T04:43:51.962955Z", "url": "https://files.pythonhosted.org/packages/e4/aa/b06e5e86ca3228d9b30c11080fbeef75f1b666e4e5a4ba939227ac785774/Pedal-0.1.4.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1530a206c8fc17c3fac4c0dd8c3455c", "sha256": "0dc6c47f6f067c9555e7feaa4d36e327ca934a926e4c35cdef59d6bc6ddf8a72"}, "downloads": -1, "filename": "Pedal-0.1.4.dev0.tar.gz", "has_sig": false, "md5_digest": "a1530a206c8fc17c3fac4c0dd8c3455c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62501, "upload_time": "2018-08-02T04:43:53", "upload_time_iso_8601": "2018-08-02T04:43:53.227198Z", "url": "https://files.pythonhosted.org/packages/8b/20/ffe270f43f0f77f3ea927763bc2ccf849dd3c5dc3f1b6ee9d04e63965889/Pedal-0.1.4.dev0.tar.gz", "yanked": false}], "0.1.5.dev0": [{"comment_text": "", "digests": {"md5": "dc068fbcd7c1b6c25d3998c31e01a81b", "sha256": "a817281f717426321fe728dda2b43ab5f15d92e11f17cac88b8026b843d10afc"}, "downloads": -1, "filename": "Pedal-0.1.5.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "dc068fbcd7c1b6c25d3998c31e01a81b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 109258, "upload_time": "2018-10-22T03:54:13", "upload_time_iso_8601": "2018-10-22T03:54:13.409373Z", "url": "https://files.pythonhosted.org/packages/70/5c/fad52b8a1e01e4803c14b608bcd3bf299c8ccf32ae9e984fa23348ec8cb2/Pedal-0.1.5.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4818634f43afedf394a0c683ab6b0c1", "sha256": "094359d4c10205ab102dec6ebeaee624fa4de5178aa621163cb0c57f9e399647"}, "downloads": -1, "filename": "Pedal-0.1.5.dev0.tar.gz", "has_sig": false, "md5_digest": "a4818634f43afedf394a0c683ab6b0c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72969, "upload_time": "2018-10-22T03:54:15", "upload_time_iso_8601": "2018-10-22T03:54:15.427495Z", "url": "https://files.pythonhosted.org/packages/0c/bb/5a23dace688f73a8ec45a58961e2d32f1aa85b1df8035160c7a99cb04658/Pedal-0.1.5.dev0.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "6e03d89b4c44613c89fb1f89771b21e3", "sha256": "37814565d75e81489c5b276842bd4afc77825a055c043af6357a108f7afc6fd4"}, "downloads": -1, "filename": "Pedal-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "6e03d89b4c44613c89fb1f89771b21e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 140124, "upload_time": "2019-01-27T23:00:21", "upload_time_iso_8601": "2019-01-27T23:00:21.816182Z", "url": "https://files.pythonhosted.org/packages/10/01/3440a5d6775b28c97bde7780982b8475ea379fa29bee50cfcde161c31bb5/Pedal-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed722cc38c3af7ac879d35c2b59c2b51", "sha256": "43172422aa076422e36e2bc87b36801b0f0c79354ff5066879980bc9c5b4b4ff"}, "downloads": -1, "filename": "Pedal-0.1.6.tar.gz", "has_sig": false, "md5_digest": "ed722cc38c3af7ac879d35c2b59c2b51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92986, "upload_time": "2019-01-27T23:00:23", "upload_time_iso_8601": "2019-01-27T23:00:23.615122Z", "url": "https://files.pythonhosted.org/packages/20/ff/47cdd498a08cf7b40d4bdd891a5798aee97611615a06e0ebf7767403b87d/Pedal-0.1.6.tar.gz", "yanked": false}], "0.1.dev0": [{"comment_text": "", "digests": {"md5": "b6a985934af3d403ec9251ef1f161888", "sha256": "a36f8a5e0ee07f3c5469aa59b4cd878caa146c0f85dc05f233b6b99bbff70d7c"}, "downloads": -1, "filename": "Pedal-0.1.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "b6a985934af3d403ec9251ef1f161888", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3488, "upload_time": "2018-07-15T18:00:35", "upload_time_iso_8601": "2018-07-15T18:00:35.371034Z", "url": "https://files.pythonhosted.org/packages/11/c0/b06981c3dadbfa52819724e6b9c48bae061e7afa294f85acff2cbd7d47c8/Pedal-0.1.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "506116e89a00d6ab8ebf8e8749cb59d0", "sha256": "28f9c882138e4dac85663f27c627d13e3aa482eb0f6eab90e382731612c5ede9"}, "downloads": -1, "filename": "Pedal-0.1.dev0.tar.gz", "has_sig": false, "md5_digest": "506116e89a00d6ab8ebf8e8749cb59d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1879, "upload_time": "2018-07-15T18:00:36", "upload_time_iso_8601": "2018-07-15T18:00:36.452679Z", "url": "https://files.pythonhosted.org/packages/78/54/121554eff332e009b51eb274b39ac4a23c3fc3160f0c29246b016a34f3ee/Pedal-0.1.dev0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "2177835e826b7b76b5fd6bbaa3613bad", "sha256": "35c1160c1f0461e98e9d1498b85113576f58e9a6e02b72a58df3ec212aaa1ba0"}, "downloads": -1, "filename": "pedal-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2177835e826b7b76b5fd6bbaa3613bad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 207955, "upload_time": "2020-03-10T21:46:19", "upload_time_iso_8601": "2020-03-10T21:46:19.533262Z", "url": "https://files.pythonhosted.org/packages/f5/35/58357fde9406af2822ebe95edaf4d3ef836001965fd81892b91489b563c5/pedal-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8eaa37310bc58860d45e1f9ea270aefb", "sha256": "15409fdec498d6ae07325b5c067a78249312f9c6713ff457b65c8555c411f872"}, "downloads": -1, "filename": "pedal-2.0.0.tar.gz", "has_sig": false, "md5_digest": "8eaa37310bc58860d45e1f9ea270aefb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 125250, "upload_time": "2020-03-10T21:46:21", "upload_time_iso_8601": "2020-03-10T21:46:21.695909Z", "url": "https://files.pythonhosted.org/packages/48/51/f2eb446ae2726d1307fedac1e7b8a11316f8459fad9f4b75823d1677fde2/pedal-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "c9092bb20a5184cd51bd7dc5caedd364", "sha256": "21162b734e442952ffabe3de2e578e50809fc4fa8da6a777a0d0a70096d9648a"}, "downloads": -1, "filename": "pedal-2.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c9092bb20a5184cd51bd7dc5caedd364", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 208309, "upload_time": "2020-03-12T14:15:21", "upload_time_iso_8601": "2020-03-12T14:15:21.629657Z", "url": "https://files.pythonhosted.org/packages/61/74/9c1c966269143b093556fe4c7958275ce21ee14914a4433c17c430cc58f0/pedal-2.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48afd0046470f6d2258d7dda785f2055", "sha256": "384ffda17371f405dd414ab334939a2d35ef367bcaf1c6d49f29f7c270faf219"}, "downloads": -1, "filename": "pedal-2.0.1.tar.gz", "has_sig": false, "md5_digest": "48afd0046470f6d2258d7dda785f2055", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 125437, "upload_time": "2020-03-12T14:15:23", "upload_time_iso_8601": "2020-03-12T14:15:23.439379Z", "url": "https://files.pythonhosted.org/packages/f0/7c/edac10a5bc7bd0bc17a92f6bfaaa38bb78fa39a5cf0d65e17ed4e80f2e9b/pedal-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "6504efbb2feee578a8e7f40e872352eb", "sha256": "392b27d0173003bf5d14b78f7511b2691020657309b7355b7c63b088fd69542d"}, "downloads": -1, "filename": "pedal-2.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6504efbb2feee578a8e7f40e872352eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 208893, "upload_time": "2020-04-22T00:35:47", "upload_time_iso_8601": "2020-04-22T00:35:47.740118Z", "url": "https://files.pythonhosted.org/packages/27/6a/8bd513225b28246cf1d4694f237a65b3a58e5cb7f16686be8ee66424f896/pedal-2.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3abd612645c19dfad8616012c3f8bf5a", "sha256": "a3a445845d65613b78466745b61f1226baaf69797bec4a7f4984d3526928bde7"}, "downloads": -1, "filename": "pedal-2.0.2.tar.gz", "has_sig": false, "md5_digest": "3abd612645c19dfad8616012c3f8bf5a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 126070, "upload_time": "2020-04-22T00:35:50", "upload_time_iso_8601": "2020-04-22T00:35:50.176294Z", "url": "https://files.pythonhosted.org/packages/93/48/3f8ae7df7110d89d54cd9ebd35012259b2f086fc1fd932856d8b10392c24/pedal-2.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6504efbb2feee578a8e7f40e872352eb", "sha256": "392b27d0173003bf5d14b78f7511b2691020657309b7355b7c63b088fd69542d"}, "downloads": -1, "filename": "pedal-2.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6504efbb2feee578a8e7f40e872352eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 208893, "upload_time": "2020-04-22T00:35:47", "upload_time_iso_8601": "2020-04-22T00:35:47.740118Z", "url": "https://files.pythonhosted.org/packages/27/6a/8bd513225b28246cf1d4694f237a65b3a58e5cb7f16686be8ee66424f896/pedal-2.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3abd612645c19dfad8616012c3f8bf5a", "sha256": "a3a445845d65613b78466745b61f1226baaf69797bec4a7f4984d3526928bde7"}, "downloads": -1, "filename": "pedal-2.0.2.tar.gz", "has_sig": false, "md5_digest": "3abd612645c19dfad8616012c3f8bf5a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 126070, "upload_time": "2020-04-22T00:35:50", "upload_time_iso_8601": "2020-04-22T00:35:50.176294Z", "url": "https://files.pythonhosted.org/packages/93/48/3f8ae7df7110d89d54cd9ebd35012259b2f086fc1fd932856d8b10392c24/pedal-2.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:54 2020"}