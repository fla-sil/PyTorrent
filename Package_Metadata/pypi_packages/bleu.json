{"info": {"author": "Zhijing Jin", "author_email": "zhijing.jin@connect.hku.hk", "bugtrack_url": null, "classifiers": [], "description": "# bleu (Python Package)\n[![Pypi](https://img.shields.io/pypi/v/bleu.svg)](https://pypi.org/project/bleu)\n[![Downloads](https://pepy.tech/badge/bleu)](https://pepy.tech/project/bleu)\n[![Month_Downloads](https://pepy.tech/badge/bleu/month)](https://pepy.tech/project/bleu/month)\n\nA Python Wrapper for the standard BLEU evaluation for Natural Language Generation (NLG). \n- GitHub project: [https://github.com/zhijing-jin/bleu](https://github.com/zhijing-jin/bleu).\n- PyPI package: `pip install`[`bleu`](https://pypi.org/project/bleu/) \n\n## Installation\nRequirement: Python 3\n\n**Option 1: Install pip package**\n```bash\npip install --upgrade bleu\n```\n**Option 2: Build from source**\n```bash\npip install --upgrade git+git://github.com/zhijing-jin/bleu.git\n```\n## How to Run\nThe most standard way to calculate BLEU is by [Moses' script for detokenized BLEU](https://raw.githubusercontent.com/moses-smt/mosesdecoder/master/scripts/generic/multi-bleu-detok.perl). This package provides easy calls to it. \n#### Function 1: Calculate the BLEU for lists\nIf you want to check only one hypothesis (a list of sentences):\n```python\n>>> from bleu import list_bleu\n>>> ref = ['it is a white cat .',\n             'wow , this dog is huge .']\n>>> ref1 = ['This cat is white .',\n             'wow , this is a huge dog .']\n>>> hyp = ['it is a white kitten .',\n            'wowww , the dog is huge !']\n>>> hyp1 = [\"it 's a white kitten .\",\n             'wow , this dog is huge !']\n>>> list_bleu([ref], hyp)\n34.99\n>>> list_bleu([ref, ref1], hyp1)\n57.91\n```\nIf you want to check multiple hypothesis (several lists of sentences):\n```python\n>>> from bleu import multi_list_bleu\n>>> multi_list_bleu([ref, ref1], [hyp, hyp1])\n[34.99, 57.91]\n```\n`detok=False`: It is not advisable to use tokenized bleu (by [multi-bleu.perl](https://raw.githubusercontent.com/moses-smt/mosesdecoder/master/scripts/generic/multi-bleu.perl)), but if you want to call it, just use `detok=False`:\n```python\n>>> list_bleu([ref], hyp, detok=False)\n39.76\n# or if you want to test multiple hypotheses\n>>> multi_list_bleu([ref, ref1], [hyp, hyp1], detok=False)\n[39.76, 47.47]\n```  \n`verbose=True`: If there are unexpected errors, you might want to check the intermediate steps by `verbose=True`. \n \n#### Function 2: Calculate the BLEU for files\nIf you want to check only one hypothesis file:\n```python\n# if you already have the following files\n>>> from bleu import file_bleu\n>>> hyp_file = 'data/hyp0.txt'\n>>> ref_files = ['data/ref0.txt', 'data/ref1.txt']\n>>> file_bleu(ref_files, hyp_file)\n34.99\n```\nIf you want to check multiple hypothesis files:\n```python\n>>> from bleu import multi_file_bleu\n>>> hyp_file1 = 'data/hyp1.txt'\n>>> bleus = multi_file_bleu(ref_files, [hyp_file, hyp_file1])\n[34.99, 57.91]\n```\n`detok=True`: Set it if you want to calculate the (not recommended) tokenized bleu.\n\n`verbose=True`: Set it if you want to inspect how the bleu calculations are made:\n```python\n>>> bleu = file_bleu(ref_files, hyp_file, verbose=True)\n[Info] Valid Reference Files: ['data/ref0.txt', 'data/ref1.txt']\n[Info] Valid Hypothesis Files: ['data/hyp0.txt']\n[Info] #lines in each file: 2\n[cmd] perl detokenizer.perl -l en < data/ref0.txt > data/ref0.detok.txt 2>/dev/null\n[cmd] perl detokenizer.perl -l en < data/ref1.txt > data/ref1.detok.txt 2>/dev/null\n[cmd] perl detokenizer.perl -l en < data/hyp0.txt > data/hyp0.detok.txt 2>/dev/null\n[cmd] perl multi-bleu-detok.perl data/ref0.detok.txt data/ref1.detok.txt < data/hyp0.detok.txt\n2-ref bleu for data/hyp0.detok.txt: 34.99\n>>> bleu\n34.99\n```\n#### Option 3: Detokenize files\n```python\n>>> from bleu import detok_files\n>>> detok_ref_files = detok_files(ref_files, tmp_dir='./data', file_prefix='ref_dtk', verbose=True)\n[cmd] perl ./TMP_DIR/detokenizer.perl -l en < data/ref0.txt > data/ref_dtk0.txt 2>/dev/null\n[cmd] perl ./TMP_DIR/detokenizer.perl -l en < data/ref1.txt > data/ref_dtk1.txt 2>/dev/null\n>>> detok_ref_files\n['data/ref_dtk0.txt', 'data/ref_dtk1.txt']\n```\n## In Case of Unexpected Outputs\nCheck the python file [bleu.py](https://github.com/zhijing-jin/bleu/blob/master/bleu/bleu.py) and adapt it.\n\n## Contact\nIf you have more questions, feel free to check out the common [Q&A](https://github.com/zhijing-jin/bleu/issues?utf8=%E2%9C%93&q=is%3Aissue), or raise a new GitHub issue.\n\nIn case of really urgent needs, contact the author [Zhijing Jin (Miss)](mailto:zhijing.jin@connect.hku.hk).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zhijing-jin/bleu", "keywords": "", "license": "BSD 3-Clause", "maintainer": "", "maintainer_email": "", "name": "bleu", "package_url": "https://pypi.org/project/bleu/", "platform": "", "project_url": "https://pypi.org/project/bleu/", "project_urls": {"Homepage": "https://github.com/zhijing-jin/bleu"}, "release_url": "https://pypi.org/project/bleu/0.3/", "requires_dist": null, "requires_python": "", "summary": "A Python Wrapper to calculate standard BLEU scores for NLP", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>bleu (Python Package)</h1>\n<p><a href=\"https://pypi.org/project/bleu\" rel=\"nofollow\"><img alt=\"Pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d246d1089d1e06aa923b84e81eecb98c4d8979d3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f626c65752e737667\"></a>\n<a href=\"https://pepy.tech/project/bleu\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/843d827d769a08fb7cfe56f4e35bedd6e3de8c44/68747470733a2f2f706570792e746563682f62616467652f626c6575\"></a>\n<a href=\"https://pepy.tech/project/bleu/month\" rel=\"nofollow\"><img alt=\"Month_Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1cdd76976f1b63baeb78f59e5e7b25f6c69c830/68747470733a2f2f706570792e746563682f62616467652f626c65752f6d6f6e7468\"></a></p>\n<p>A Python Wrapper for the standard BLEU evaluation for Natural Language Generation (NLG).</p>\n<ul>\n<li>GitHub project: <a href=\"https://github.com/zhijing-jin/bleu\" rel=\"nofollow\">https://github.com/zhijing-jin/bleu</a>.</li>\n<li>PyPI package: <code>pip install</code><a href=\"https://pypi.org/project/bleu/\" rel=\"nofollow\"><code>bleu</code></a></li>\n</ul>\n<h2>Installation</h2>\n<p>Requirement: Python 3</p>\n<p><strong>Option 1: Install pip package</strong></p>\n<pre>pip install --upgrade bleu\n</pre>\n<p><strong>Option 2: Build from source</strong></p>\n<pre>pip install --upgrade git+git://github.com/zhijing-jin/bleu.git\n</pre>\n<h2>How to Run</h2>\n<p>The most standard way to calculate BLEU is by <a href=\"https://raw.githubusercontent.com/moses-smt/mosesdecoder/master/scripts/generic/multi-bleu-detok.perl\" rel=\"nofollow\">Moses' script for detokenized BLEU</a>. This package provides easy calls to it.</p>\n<h4>Function 1: Calculate the BLEU for lists</h4>\n<p>If you want to check only one hypothesis (a list of sentences):</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">bleu</span> <span class=\"kn\">import</span> <span class=\"n\">list_bleu</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ref</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'it is a white cat .'</span><span class=\"p\">,</span>\n             <span class=\"s1\">'wow , this dog is huge .'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ref1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'This cat is white .'</span><span class=\"p\">,</span>\n             <span class=\"s1\">'wow , this is a huge dog .'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">hyp</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'it is a white kitten .'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'wowww , the dog is huge !'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">hyp1</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"it 's a white kitten .\"</span><span class=\"p\">,</span>\n             <span class=\"s1\">'wow , this dog is huge !'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">list_bleu</span><span class=\"p\">([</span><span class=\"n\">ref</span><span class=\"p\">],</span> <span class=\"n\">hyp</span><span class=\"p\">)</span>\n<span class=\"mf\">34.99</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">list_bleu</span><span class=\"p\">([</span><span class=\"n\">ref</span><span class=\"p\">,</span> <span class=\"n\">ref1</span><span class=\"p\">],</span> <span class=\"n\">hyp1</span><span class=\"p\">)</span>\n<span class=\"mf\">57.91</span>\n</pre>\n<p>If you want to check multiple hypothesis (several lists of sentences):</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">bleu</span> <span class=\"kn\">import</span> <span class=\"n\">multi_list_bleu</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">multi_list_bleu</span><span class=\"p\">([</span><span class=\"n\">ref</span><span class=\"p\">,</span> <span class=\"n\">ref1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">hyp</span><span class=\"p\">,</span> <span class=\"n\">hyp1</span><span class=\"p\">])</span>\n<span class=\"p\">[</span><span class=\"mf\">34.99</span><span class=\"p\">,</span> <span class=\"mf\">57.91</span><span class=\"p\">]</span>\n</pre>\n<p><code>detok=False</code>: It is not advisable to use tokenized bleu (by <a href=\"https://raw.githubusercontent.com/moses-smt/mosesdecoder/master/scripts/generic/multi-bleu.perl\" rel=\"nofollow\">multi-bleu.perl</a>), but if you want to call it, just use <code>detok=False</code>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">list_bleu</span><span class=\"p\">([</span><span class=\"n\">ref</span><span class=\"p\">],</span> <span class=\"n\">hyp</span><span class=\"p\">,</span> <span class=\"n\">detok</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"mf\">39.76</span>\n<span class=\"c1\"># or if you want to test multiple hypotheses</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">multi_list_bleu</span><span class=\"p\">([</span><span class=\"n\">ref</span><span class=\"p\">,</span> <span class=\"n\">ref1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">hyp</span><span class=\"p\">,</span> <span class=\"n\">hyp1</span><span class=\"p\">],</span> <span class=\"n\">detok</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"mf\">39.76</span><span class=\"p\">,</span> <span class=\"mf\">47.47</span><span class=\"p\">]</span>\n</pre>\n<p><code>verbose=True</code>: If there are unexpected errors, you might want to check the intermediate steps by <code>verbose=True</code>.</p>\n<h4>Function 2: Calculate the BLEU for files</h4>\n<p>If you want to check only one hypothesis file:</p>\n<pre><span class=\"c1\"># if you already have the following files</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">bleu</span> <span class=\"kn\">import</span> <span class=\"n\">file_bleu</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">hyp_file</span> <span class=\"o\">=</span> <span class=\"s1\">'data/hyp0.txt'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ref_files</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'data/ref0.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'data/ref1.txt'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">file_bleu</span><span class=\"p\">(</span><span class=\"n\">ref_files</span><span class=\"p\">,</span> <span class=\"n\">hyp_file</span><span class=\"p\">)</span>\n<span class=\"mf\">34.99</span>\n</pre>\n<p>If you want to check multiple hypothesis files:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">bleu</span> <span class=\"kn\">import</span> <span class=\"n\">multi_file_bleu</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">hyp_file1</span> <span class=\"o\">=</span> <span class=\"s1\">'data/hyp1.txt'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bleus</span> <span class=\"o\">=</span> <span class=\"n\">multi_file_bleu</span><span class=\"p\">(</span><span class=\"n\">ref_files</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">hyp_file</span><span class=\"p\">,</span> <span class=\"n\">hyp_file1</span><span class=\"p\">])</span>\n<span class=\"p\">[</span><span class=\"mf\">34.99</span><span class=\"p\">,</span> <span class=\"mf\">57.91</span><span class=\"p\">]</span>\n</pre>\n<p><code>detok=True</code>: Set it if you want to calculate the (not recommended) tokenized bleu.</p>\n<p><code>verbose=True</code>: Set it if you want to inspect how the bleu calculations are made:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bleu</span> <span class=\"o\">=</span> <span class=\"n\">file_bleu</span><span class=\"p\">(</span><span class=\"n\">ref_files</span><span class=\"p\">,</span> <span class=\"n\">hyp_file</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">Info</span><span class=\"p\">]</span> <span class=\"n\">Valid</span> <span class=\"n\">Reference</span> <span class=\"n\">Files</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'data/ref0.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'data/ref1.txt'</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">Info</span><span class=\"p\">]</span> <span class=\"n\">Valid</span> <span class=\"n\">Hypothesis</span> <span class=\"n\">Files</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'data/hyp0.txt'</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"n\">Info</span><span class=\"p\">]</span> <span class=\"c1\">#lines in each file: 2</span>\n<span class=\"p\">[</span><span class=\"n\">cmd</span><span class=\"p\">]</span> <span class=\"n\">perl</span> <span class=\"n\">detokenizer</span><span class=\"o\">.</span><span class=\"n\">perl</span> <span class=\"o\">-</span><span class=\"n\">l</span> <span class=\"n\">en</span> <span class=\"o\">&lt;</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">ref0</span><span class=\"o\">.</span><span class=\"n\">txt</span> <span class=\"o\">&gt;</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">ref0</span><span class=\"o\">.</span><span class=\"n\">detok</span><span class=\"o\">.</span><span class=\"n\">txt</span> <span class=\"mi\">2</span><span class=\"o\">&gt;/</span><span class=\"n\">dev</span><span class=\"o\">/</span><span class=\"n\">null</span>\n<span class=\"p\">[</span><span class=\"n\">cmd</span><span class=\"p\">]</span> <span class=\"n\">perl</span> <span class=\"n\">detokenizer</span><span class=\"o\">.</span><span class=\"n\">perl</span> <span class=\"o\">-</span><span class=\"n\">l</span> <span class=\"n\">en</span> <span class=\"o\">&lt;</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">ref1</span><span class=\"o\">.</span><span class=\"n\">txt</span> <span class=\"o\">&gt;</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">ref1</span><span class=\"o\">.</span><span class=\"n\">detok</span><span class=\"o\">.</span><span class=\"n\">txt</span> <span class=\"mi\">2</span><span class=\"o\">&gt;/</span><span class=\"n\">dev</span><span class=\"o\">/</span><span class=\"n\">null</span>\n<span class=\"p\">[</span><span class=\"n\">cmd</span><span class=\"p\">]</span> <span class=\"n\">perl</span> <span class=\"n\">detokenizer</span><span class=\"o\">.</span><span class=\"n\">perl</span> <span class=\"o\">-</span><span class=\"n\">l</span> <span class=\"n\">en</span> <span class=\"o\">&lt;</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">hyp0</span><span class=\"o\">.</span><span class=\"n\">txt</span> <span class=\"o\">&gt;</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">hyp0</span><span class=\"o\">.</span><span class=\"n\">detok</span><span class=\"o\">.</span><span class=\"n\">txt</span> <span class=\"mi\">2</span><span class=\"o\">&gt;/</span><span class=\"n\">dev</span><span class=\"o\">/</span><span class=\"n\">null</span>\n<span class=\"p\">[</span><span class=\"n\">cmd</span><span class=\"p\">]</span> <span class=\"n\">perl</span> <span class=\"n\">multi</span><span class=\"o\">-</span><span class=\"n\">bleu</span><span class=\"o\">-</span><span class=\"n\">detok</span><span class=\"o\">.</span><span class=\"n\">perl</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">ref0</span><span class=\"o\">.</span><span class=\"n\">detok</span><span class=\"o\">.</span><span class=\"n\">txt</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">ref1</span><span class=\"o\">.</span><span class=\"n\">detok</span><span class=\"o\">.</span><span class=\"n\">txt</span> <span class=\"o\">&lt;</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">hyp0</span><span class=\"o\">.</span><span class=\"n\">detok</span><span class=\"o\">.</span><span class=\"n\">txt</span>\n<span class=\"mi\">2</span><span class=\"o\">-</span><span class=\"n\">ref</span> <span class=\"n\">bleu</span> <span class=\"k\">for</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">hyp0</span><span class=\"o\">.</span><span class=\"n\">detok</span><span class=\"o\">.</span><span class=\"n\">txt</span><span class=\"p\">:</span> <span class=\"mf\">34.99</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">bleu</span>\n<span class=\"mf\">34.99</span>\n</pre>\n<h4>Option 3: Detokenize files</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">bleu</span> <span class=\"kn\">import</span> <span class=\"n\">detok_files</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">detok_ref_files</span> <span class=\"o\">=</span> <span class=\"n\">detok_files</span><span class=\"p\">(</span><span class=\"n\">ref_files</span><span class=\"p\">,</span> <span class=\"n\">tmp_dir</span><span class=\"o\">=</span><span class=\"s1\">'./data'</span><span class=\"p\">,</span> <span class=\"n\">file_prefix</span><span class=\"o\">=</span><span class=\"s1\">'ref_dtk'</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">cmd</span><span class=\"p\">]</span> <span class=\"n\">perl</span> <span class=\"o\">./</span><span class=\"n\">TMP_DIR</span><span class=\"o\">/</span><span class=\"n\">detokenizer</span><span class=\"o\">.</span><span class=\"n\">perl</span> <span class=\"o\">-</span><span class=\"n\">l</span> <span class=\"n\">en</span> <span class=\"o\">&lt;</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">ref0</span><span class=\"o\">.</span><span class=\"n\">txt</span> <span class=\"o\">&gt;</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">ref_dtk0</span><span class=\"o\">.</span><span class=\"n\">txt</span> <span class=\"mi\">2</span><span class=\"o\">&gt;/</span><span class=\"n\">dev</span><span class=\"o\">/</span><span class=\"n\">null</span>\n<span class=\"p\">[</span><span class=\"n\">cmd</span><span class=\"p\">]</span> <span class=\"n\">perl</span> <span class=\"o\">./</span><span class=\"n\">TMP_DIR</span><span class=\"o\">/</span><span class=\"n\">detokenizer</span><span class=\"o\">.</span><span class=\"n\">perl</span> <span class=\"o\">-</span><span class=\"n\">l</span> <span class=\"n\">en</span> <span class=\"o\">&lt;</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">ref1</span><span class=\"o\">.</span><span class=\"n\">txt</span> <span class=\"o\">&gt;</span> <span class=\"n\">data</span><span class=\"o\">/</span><span class=\"n\">ref_dtk1</span><span class=\"o\">.</span><span class=\"n\">txt</span> <span class=\"mi\">2</span><span class=\"o\">&gt;/</span><span class=\"n\">dev</span><span class=\"o\">/</span><span class=\"n\">null</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">detok_ref_files</span>\n<span class=\"p\">[</span><span class=\"s1\">'data/ref_dtk0.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'data/ref_dtk1.txt'</span><span class=\"p\">]</span>\n</pre>\n<h2>In Case of Unexpected Outputs</h2>\n<p>Check the python file <a href=\"https://github.com/zhijing-jin/bleu/blob/master/bleu/bleu.py\" rel=\"nofollow\">bleu.py</a> and adapt it.</p>\n<h2>Contact</h2>\n<p>If you have more questions, feel free to check out the common <a href=\"https://github.com/zhijing-jin/bleu/issues?utf8=%E2%9C%93&amp;q=is%3Aissue\" rel=\"nofollow\">Q&amp;A</a>, or raise a new GitHub issue.</p>\n<p>In case of really urgent needs, contact the author <a href=\"mailto:zhijing.jin@connect.hku.hk\">Zhijing Jin (Miss)</a>.</p>\n\n          </div>"}, "last_serial": 6601893, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6ce6940c6e64a1bc41b2592f2a3f09cc", "sha256": "7fe34b7c9ce30d60275a78fa5ab573a9249a79fe8d208012e6c47ef108f95c7e"}, "downloads": -1, "filename": "bleu-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6ce6940c6e64a1bc41b2592f2a3f09cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5122, "upload_time": "2019-12-26T07:04:54", "upload_time_iso_8601": "2019-12-26T07:04:54.867492Z", "url": "https://files.pythonhosted.org/packages/a5/41/e369cd2932bcea4eb10626ef1f369bda887a0a8857277d27b03054929fa1/bleu-0.1.0.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "0714ee0ffa6a2ea24c7b5c811cfa9ae8", "sha256": "6f6bbca2c2194003880a48f90bb6ac22e83cf078fa2ab83b6bb609895449fea6"}, "downloads": -1, "filename": "bleu-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0714ee0ffa6a2ea24c7b5c811cfa9ae8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6767, "upload_time": "2020-01-09T10:40:51", "upload_time_iso_8601": "2020-01-09T10:40:51.876976Z", "url": "https://files.pythonhosted.org/packages/66/cf/a5c3bdaf376ddf957cf846250d11b8b9f7ea02eb3624a53541e41c8610c5/bleu-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df597f46f7effb821d93ff65c0c12743", "sha256": "18d318e8ee6e64b2beeb5c5dd4a0d081b5217669af7edef84b5b48b9f919d364"}, "downloads": -1, "filename": "bleu-0.2.tar.gz", "has_sig": false, "md5_digest": "df597f46f7effb821d93ff65c0c12743", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5241, "upload_time": "2020-01-09T10:40:53", "upload_time_iso_8601": "2020-01-09T10:40:53.542739Z", "url": "https://files.pythonhosted.org/packages/1b/fb/c6907965d356fa6838bf18ffe7244e56b6542b1825ea18cfa5bfade4512b/bleu-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "b005e08282effc650705ae4eb0a2bf28", "sha256": "6edae73a588fe8b72678d3233da3be9e901a29d8313858347998910dc28baf80"}, "downloads": -1, "filename": "bleu-0.3.tar.gz", "has_sig": false, "md5_digest": "b005e08282effc650705ae4eb0a2bf28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5213, "upload_time": "2020-02-10T11:31:21", "upload_time_iso_8601": "2020-02-10T11:31:21.025440Z", "url": "https://files.pythonhosted.org/packages/ae/df/4fd9bfe6dc240a1760f8e95ca41aa31382e328e31de45145f528dab5c7f8/bleu-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b005e08282effc650705ae4eb0a2bf28", "sha256": "6edae73a588fe8b72678d3233da3be9e901a29d8313858347998910dc28baf80"}, "downloads": -1, "filename": "bleu-0.3.tar.gz", "has_sig": false, "md5_digest": "b005e08282effc650705ae4eb0a2bf28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5213, "upload_time": "2020-02-10T11:31:21", "upload_time_iso_8601": "2020-02-10T11:31:21.025440Z", "url": "https://files.pythonhosted.org/packages/ae/df/4fd9bfe6dc240a1760f8e95ca41aa31382e328e31de45145f528dab5c7f8/bleu-0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:06 2020"}