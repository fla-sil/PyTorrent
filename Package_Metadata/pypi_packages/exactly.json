{"info": {"author": "Emil Karlen", "author_email": "emil@member.fsf.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Testing", "Topic :: System :: Systems Administration"], "description": "Tests a command line program by executing it in a temporary sandbox directory and inspecting its result.\n\nOr tests properties of existing files, directories etc.\n\n\nSupports individual test cases and test suites.\n\nExactly has a `Wiki\n<https://github.com/emilkarlen/exactly/wiki>`_.\nIt also has a built in help system,\nwhich can, among other things,\ngenerate this `Reference manual\n<https://emilkarlen.github.io/exactly/reference-manual/0-12-0.html>`_.\n\n\n.. contents::\n\n\nTEST CASES\n========================================\n\nA test case is written as a plain text file.\n\n\nTesting stdin, stdout, stderr, exit code\n------------------------------------------------------------\n\nThe following checks that your new ``my-contacts-program`` reads a contact list from stdin,\nand is able to find the email of a person::\n\n    [setup]\n\n    stdin = -file some-test-contacts.txt\n\n    [act]\n\n    my-contacts-program get-email-of --name 'Pablo Gauss'\n\n    [assert]\n\n    exit-code == 0\n\n    stdout equals <<EOF\n    pablo@gauss.org\n    EOF\n\n    stderr empty\n\n\nIf the file 'contacts.case' contains this test case, then Exactly can execute it::\n\n\n    > exactly contacts.case\n    PASS\n\n\n\"PASS\" means that all assertions were satisfied.\n\nThis test assumes that\n\n * the system under test - ``my-contacts-program`` - is is found in the same directory as the test case file\n * the file \"some-test-contacts.txt\" (that is referenced from the test case) is found in the same directory as the test case file\n\nThe ``home`` and ``act-home`` instructions\ncan be used to change the directories where Exactly looks for files referenced from the test case.\n\n\nTesting side effects on files and directories\n------------------------------------------------------------\n\nWhen the execution of a test case starts,\nthe current directory is set to a temporary directory.\nThis gives the test case a sandbox where it can create and manipulate files.\n\nThe sandbox - and all files within it - are removed when the execution ends.\n\n\nThe following tests a program that classifies\nfiles as either good or bad, by moving them to the\nappropriate directory::\n\n    [setup]\n\n    dir input\n    dir output/good\n    dir output/bad\n\n    file input/a.txt = <<EOF\n    GOOD contents\n    EOF\n\n    file input/b.txt = <<EOF\n    bad contents\n    EOF\n\n    [act]\n\n    classify-files-by-moving-to-appropriate-dir GOOD input/ output/\n\n    [assert]\n\n    dir-contents input empty\n\n    exists       output/good/a.txt : type file\n    dir-contents output/good         num-files == 1\n\n    exists       output/bad/b.txt : type file\n    dir-contents output/bad         num-files == 1\n\n\n``file`` and ``dir`` makes files in the current directory (by default).\n\n\nUsing predefined source files\n------------------------------------------------------------\n\nThe *home directory structure* is directories containing\npredefined files involved in a test case:\n\n*act-home*\n Location of the program file being tested\n\n*home*\n  Location of arbitrary test resources\n\n\nBoth of them defaults to the directory\nthat contains the test case file,\nbut can be changed via ``[conf]``.\n\n\nThere are options for making paths relative to them,\nand also to the temporary sandbox directories.\n\n``-rel-home`` refers to the *home* directory,\nand ``-rel-act`` to the temporary directory\nthat is the current directory at the start of the execution::\n\n\n    [conf]\n\n    act-home = ../bin/\n\n    home     = data/\n\n    [setup]\n\n    copy  -rel-home input.txt  -rel-act actual.txt\n\n    [act]\n\n    my-grep-tool \"text to find\" actual.txt\n\n    [assert]\n\n    contents -rel-act actual.txt\n             equals\n             -file -rel-home expected.txt\n\n\nThese \"relativity\" options have defaults designed to minimize the\nneed for them.\nThe following case does the same thing as the one above::\n\n    [conf]\n\n    act-home = ../bin/\n\n    home     = data/\n\n    [setup]\n\n    copy input.txt actual.txt\n\n    [act]\n\n    my-grep-tool \"text to find\" actual.txt\n\n    [assert]\n\n    contents actual.txt\n             equals\n             -file expected.txt\n\n\nTesting and transforming the contents of files\n------------------------------------------------------------\n\nUse ``contents`` to test the contents of a file,\nor a transformed version of it,\nby applying a \"string transformer\".\n\nSuch a \"string transformer\" may be given a name\nusing the ``def`` instruction\nto make the test easier to read.\n\nThe following case\ntests that \"timing lines\" are output as part of a log file \"log.txt\".\n\nThe challenge is that the (fictive) log file contains\nnon-timing lines that the test is not interested in,\nand that timing lines contains a time stamp of the form\n\"NN:NN\", who's exact value also is not interesting.\n\nA \"string transformer\" is used to extract all timing lines\nand to replace \"NN:NN\" time stamps with the constant string ``TIMESTAMP``::\n\n\n    [setup]\n\n    def line-matcher       IS_TIMING_LINE     = matches ^timing\n\n    def string-transformer REPLACE_TIMESTAMPS = replace [0-9]{2}:[0-9]{2} TIMESTAMP\n\n    def string-transformer GET_TIMING_LINES   = filter IS_TIMING_LINE | REPLACE_TIMESTAMPS\n\n    [act]\n\n    program-that-writes-log-file\n\n    [assert]\n\n    contents log.txt\n             -transformed-by GET_TIMING_LINES\n             equals <<EOF\n    timing TIMESTAMP begin\n    timing TIMESTAMP preprocessing\n    timing TIMESTAMP validation\n    timing TIMESTAMP execution\n    timing TIMESTAMP end\n    EOF\n\n\nThe ``-transformed-by`` option does not modify the tested file,\nit just applies the assertion to a transformed version of it.\n\n\n\nUsing external helper programs\n------------------------------------------------------------\n\nExternal programs can help with setup and assertions etc.\n\nExactly can run executable files, shell commands  and programs in the OS PATH,\nusing ``run``, ``$``, ``%``.\n\nThe following case shows some examples, but doesn't make sense tough::\n\n    [setup]\n\n    run my-setup-helper-program first \"second arg\"\n\n    run % mysql -uu -pp -hlocalhost -Dd --batch --execute \"create table my_table(id int)\"\n\n    $ touch file\n\n    file root-files.txt = -stdout-from $ ls /\n\n    [act]\n\n    $ echo ${PATH}\n\n    [assert]\n\n    run my-assert-helper-program\n\n    $ test -f root-files.txt\n\n    stdout -from\n           % echo 'Interesting output'\n           equals\n    <<EOF\n    Interesting output\n    EOF\n\n    [cleanup]\n\n    run % mysql -uu -pp -hlocalhost -Dd --batch --execute \"drop table my_table\"\n\n\nA program executed in ``[assert]`` becomes an assertion that depends on the exit code.\n\n\nProgram values can be defined for reuse using ``def`` and run using ``@``::\n\n    [setup]\n\n    def program RUN_MYSQL   = % mysql -uu -pp -hlocalhost -Dd\n    def program EXECUTE_SQL = @ RUN_MYSQL --skip-column-names --batch --execute\n\n\n    run @ EXECUTE_SQL \"create table my_table(id int)\"\n\n    [act]\n\n    system-under-test\n\n    [assert]\n\n    stdout -from\n           @ EXECUTE_SQL \"select * from my_table\"\n           ! empty\n\n    [cleanup]\n\n    run @ EXECUTE_SQL \"drop table my_table\"\n\n\nTesting source code files\n-------------------------\n\nThe ``actor`` instruction can specify an interpreter to test a source code file::\n\n    [conf]\n\n    actor = -file python\n\n    [act]\n\n    my-python-program.py 'an argument' second third\n\n    [assert]\n\n    stdout equals\n    <<EOF\n    Argument: an argument\n    Argument: second\n    Argument: third\n    EOF\n\n\nPrint output from the tested program\n------------------------------------\n\n\nIf ``--act`` is used, the output of the \"act\" phase (the \"action to check\")\nwill become the output of ``exactly`` -\nstdout, stderr and exit code\n::\n\n\n    [setup]\n\n    dir  a-dir\n    file a-file\n\n    [act]\n\n    $ ls\n\n    [assert]\n\n    stdout num-lines == 314\n\n::\n\n    > exactly --act my-test.case\n    a-dir\n    a-file\n\n\nThe test case is executed in a temporary sandbox, as usual,\nbut assertions are ignored.\n\n\nTesting existing OS environment - tests without ``[act]``\n----------------------------------------------------------------------\n\nA test case does not need to have an ``[act]`` phase.\nThis way, Exactly can be used to check existing files and directories, for example.\n\nThe following case checks your hierarchy of software projects.\n\nThe projects are rooted at the directory 'my-projects'.\nEach 'project' sub directory contains a project,\nand must contain a 'Makefile' with a target 'all'::\n\n    [assert]\n\n    exists @[MY_PROJECTS_ROOT_DIR]@ : type dir && @[ALL_PROJECT_DIRS_ARE_VALID]@\n\n    [setup]\n\n    def path   MY_PROJECTS_ROOT_DIR = -rel-act-home 'my-projects'\n    def string MY_PROJECT_DIR_NAME  = 'project'\n\n    def file-matcher IS_VALID_MAKEFILE =\n\n        type file &&\n        contents\n          any line : matches '^all:$'\n\n\n    def file-matcher IS_VALID_PROJECT_DIR =\n\n        type dir &&\n        dir-contents\n           any file : name 'Makefile' && @[IS_VALID_MAKEFILE]@\n\n\n    def file-matcher ALL_PROJECT_DIRS_ARE_VALID =\n\n        dir-contents -recursive\n          -selection name @[MY_PROJECT_DIR_NAME]@\n            every file : @[IS_VALID_PROJECT_DIR]@\n\n\nTesting a git commit hook\n------------------------------------------------------------\n\nThe following tests a git commit hook (`prepare-commit-msg`).\n\nThe hook should add the issue id in the branch name,\nto commit messages::\n\n    [setup]\n\n\n    def string ISSUE_ID            = ABC-123\n    def string MESSAGE_WO_ISSUE_ID = \"commit message without issue id\"\n\n    def program GET_LOG_MESSAGE_OF_LAST_COMMIT = % git log -1 --format=%s\n\n\n    ## Setup a (non empty) git repo.\n\n    $ git init\n\n    file file-in-repo = \"A file in the repo\"\n\n    $ git add file-in-repo\n\n    $ git commit -m \"commit of file already in repo\"\n\n\n    ## Install the commit hook to test.\n\n    copy prepare-commit-msg .git/hooks\n\n\n    ## Setup a branch, with issue number in its name,\n    # and a file to commit.\n\n    $ git checkout -b \"@[ISSUE_ID]@-branch-with-issue-id\"\n\n    file file-to-add = \"A file to add on the branch\"\n\n    $ git add file-to-add\n\n\n    [act]\n\n\n    $ git commit -m \"@[MESSAGE_WO_ISSUE_ID]@\"\n\n\n    [assert]\n\n\n    stdout -from\n           @ GET_LOG_MESSAGE_OF_LAST_COMMIT\n           equals\n    <<-\n    @[ISSUE_ID]@ : @[MESSAGE_WO_ISSUE_ID]@\n    -\n\n\nNote: Since a test is executed in a sandbox directory, it is ok\nto create the git repo in CWD.\n\nNote: Since the test is rather long, it would increase readability\nto put part of it in external files, and including them using `including`.\nE.g.::\n\n    [setup]\n    ...\n    including repo-in-cwd-with-installed-commit-hook.setup\n\n\nORGANIZING TESTS\n========================================\n\nFile inclusion\n------------------------------------\n\nTest case contents can be included from external files::\n\n    [setup]\n\n    including my-dir-symbols.def\n\n    including my-common-setup-and-cleanup.xly\n\n\n\nTest suites\n------------------------------------\n\n\nTests can be grouped in suites::\n\n\n    first.case\n    second.case\n\nor::\n\n    [cases]\n\n    helloworld.case\n    *.case\n    **/*.case\n\n\n    [suites]\n\n    sub-suite.suite\n    *.suite\n    pkg/suite.suite\n    **/*.suite\n\n\n\nIf the file ``my-suite.suite`` contains this text, then Exactly can run it::\n\n    > exactly suite my-suite.suite\n    ...\n    OK\n\n\nThe result of a suite can be reported as\nsimple progress information,\nor JUnit XML.\n\n\nSuites can contain test case functionality that is common\nto all cases in the suite. For example::\n\n\n    [cases]\n\n    *.case\n\n    [conf]\n\n    act-home = ../bin/\n\n    [setup]\n\n    def string CONF_FILE = my.conf\n\n    file @[CONF_FILE]@ =\n    <<EOF\n    common = configuration\n    EOF\n\n\nThe common functionality is included in each test case.\n\n\nMORE EXAMPLES\n========================================\n\nThe ``examples/`` directory of the source distribution contains more examples.\n\n\nINSTALLING\n========================================\n\n\nExactly is written in Python and does not require any external libraries.\n\nExactly requires Python >= 3.5.4.\n\nUse ``pip`` or ``pip3`` to install::\n\n    > pip3 install exactly\n\nThe program can also be run from a source distribution::\n\n    > python3 src/default-main-program-runner.py\n\n\nDEVELOPMENT STATUS\n========================================\n\n\nCurrent version is fully functional, but some syntax and semantics is inconsistent:\n\n* Some instructions allow arguments to span multiple lines, some do not.\n* Support for escapes characters in strings is missing.\n\nIncompatible changes to syntax and semantics may occur in every 0.x release.\n\n\nComments are welcome!\n\n\nFuture development\n------------------------------------\n\nMore functionality is needed, smaller and larger.\nIncluding (but not limited to):\n\n* Improved string character escaping\n* More string transformers, matchers, etc\n* Possibility to use PROGRAM in more places,\n  e.g. in ``[act]``, as matchers and as a string-transformer\n* Type for REG-EX\n* Separate sets of environment variables for \"action to check\" and other processes\n* Possibility to set stdin for processes other than the \"action to check\"\n* ``dir-contents``: Add convenience matcher for containment of set of files\n* Symbol substitution in files\n* Dynamic symbol values - e.g. contents of dir, current date\n* Macros and functions\n* Ability to embed Python code in test cases\n* Python library for running cases and suites from within Python as a DSEL\n\n\nAUTHOR\n========================================\n\n\nEmil Karl\u00e9n\n\nemil@member.fsf.org\n\n\nTHANKS\n========================================\n\n\nThe Python IDE\n`PyCharm\n<https://www.jetbrains.com/pycharm/>`_\nfrom\n`JetBrains\n<https://www.jetbrains.com/>`_\nhas greatly helped the development of this software.\n\n\nThanks for the great\n\n* Python language\n* Linux\n* Emacs\n* Rembrandt Harmenszoon van Rijn's \"De Staalmeesters\"\n\n\nDEDICATION\n========================================\n\nProject dedications\n----------------------------------------\n\nAron Karl\u00e9n\n\nTommy Karlsson\n\nG\u00f6tabergsgatan 10, l\u00e4genhet 4\n\n\nRelease dedications\n----------------------------------------\n\nElizabeth Wulcan\n\nSven Karl\u00e9n\n\n\nRelease soundtrack\n----------------------------------------\n\n\"Reachy Prints\" by \"Plaid\"\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/emilkarlen/exactly/wiki", "keywords": "test case suite check assert script shell console command line program execute sandbox", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "exactly", "package_url": "https://pypi.org/project/exactly/", "platform": "", "project_url": "https://pypi.org/project/exactly/", "project_urls": {"Homepage": "https://github.com/emilkarlen/exactly/wiki"}, "release_url": "https://pypi.org/project/exactly/0.12.0/", "requires_dist": null, "requires_python": ">=3.5.4", "summary": "Tests a command line program by executing it in a temporary sandbox directory and inspecting its result.", "version": "0.12.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Tests a command line program by executing it in a temporary sandbox directory and inspecting its result.</p>\n<p>Or tests properties of existing files, directories etc.</p>\n<p>Supports individual test cases and test suites.</p>\n<p>Exactly has a <a href=\"https://github.com/emilkarlen/exactly/wiki\" rel=\"nofollow\">Wiki</a>.\nIt also has a built in help system,\nwhich can, among other things,\ngenerate this <a href=\"https://emilkarlen.github.io/exactly/reference-manual/0-12-0.html\" rel=\"nofollow\">Reference manual</a>.</p>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#test-cases\" id=\"id1\" rel=\"nofollow\">TEST CASES</a><ul>\n<li><a href=\"#testing-stdin-stdout-stderr-exit-code\" id=\"id2\" rel=\"nofollow\">Testing stdin, stdout, stderr, exit code</a></li>\n<li><a href=\"#testing-side-effects-on-files-and-directories\" id=\"id3\" rel=\"nofollow\">Testing side effects on files and directories</a></li>\n<li><a href=\"#using-predefined-source-files\" id=\"id4\" rel=\"nofollow\">Using predefined source files</a></li>\n<li><a href=\"#testing-and-transforming-the-contents-of-files\" id=\"id5\" rel=\"nofollow\">Testing and transforming the contents of files</a></li>\n<li><a href=\"#using-external-helper-programs\" id=\"id6\" rel=\"nofollow\">Using external helper programs</a></li>\n<li><a href=\"#testing-source-code-files\" id=\"id7\" rel=\"nofollow\">Testing source code files</a></li>\n<li><a href=\"#print-output-from-the-tested-program\" id=\"id8\" rel=\"nofollow\">Print output from the tested program</a></li>\n<li><a href=\"#testing-existing-os-environment-tests-without-act\" id=\"id9\" rel=\"nofollow\">Testing existing OS environment - tests without <tt>[act]</tt></a></li>\n<li><a href=\"#testing-a-git-commit-hook\" id=\"id10\" rel=\"nofollow\">Testing a git commit hook</a></li>\n</ul>\n</li>\n<li><a href=\"#organizing-tests\" id=\"id11\" rel=\"nofollow\">ORGANIZING TESTS</a><ul>\n<li><a href=\"#file-inclusion\" id=\"id12\" rel=\"nofollow\">File inclusion</a></li>\n<li><a href=\"#test-suites\" id=\"id13\" rel=\"nofollow\">Test suites</a></li>\n</ul>\n</li>\n<li><a href=\"#more-examples\" id=\"id14\" rel=\"nofollow\">MORE EXAMPLES</a></li>\n<li><a href=\"#installing\" id=\"id15\" rel=\"nofollow\">INSTALLING</a></li>\n<li><a href=\"#development-status\" id=\"id16\" rel=\"nofollow\">DEVELOPMENT STATUS</a><ul>\n<li><a href=\"#future-development\" id=\"id17\" rel=\"nofollow\">Future development</a></li>\n</ul>\n</li>\n<li><a href=\"#author\" id=\"id18\" rel=\"nofollow\">AUTHOR</a></li>\n<li><a href=\"#thanks\" id=\"id19\" rel=\"nofollow\">THANKS</a></li>\n<li><a href=\"#dedication\" id=\"id20\" rel=\"nofollow\">DEDICATION</a><ul>\n<li><a href=\"#project-dedications\" id=\"id21\" rel=\"nofollow\">Project dedications</a></li>\n<li><a href=\"#release-dedications\" id=\"id22\" rel=\"nofollow\">Release dedications</a></li>\n<li><a href=\"#release-soundtrack\" id=\"id23\" rel=\"nofollow\">Release soundtrack</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"test-cases\">\n<h2><a href=\"#id1\" rel=\"nofollow\">TEST CASES</a></h2>\n<p>A test case is written as a plain text file.</p>\n<div id=\"testing-stdin-stdout-stderr-exit-code\">\n<h3><a href=\"#id2\" rel=\"nofollow\">Testing stdin, stdout, stderr, exit code</a></h3>\n<p>The following checks that your new <tt><span class=\"pre\">my-contacts-program</span></tt> reads a contact list from stdin,\nand is able to find the email of a person:</p>\n<pre>[setup]\n\nstdin = -file some-test-contacts.txt\n\n[act]\n\nmy-contacts-program get-email-of --name 'Pablo Gauss'\n\n[assert]\n\nexit-code == 0\n\nstdout equals &lt;&lt;EOF\npablo@gauss.org\nEOF\n\nstderr empty\n</pre>\n<p>If the file \u2018contacts.case\u2019 contains this test case, then Exactly can execute it:</p>\n<pre>&gt; exactly contacts.case\nPASS\n</pre>\n<p>\u201cPASS\u201d means that all assertions were satisfied.</p>\n<p>This test assumes that</p>\n<blockquote>\n<ul>\n<li>the system under test - <tt><span class=\"pre\">my-contacts-program</span></tt> - is is found in the same directory as the test case file</li>\n<li>the file \u201csome-test-contacts.txt\u201d (that is referenced from the test case) is found in the same directory as the test case file</li>\n</ul>\n</blockquote>\n<p>The <tt>home</tt> and <tt><span class=\"pre\">act-home</span></tt> instructions\ncan be used to change the directories where Exactly looks for files referenced from the test case.</p>\n</div>\n<div id=\"testing-side-effects-on-files-and-directories\">\n<h3><a href=\"#id3\" rel=\"nofollow\">Testing side effects on files and directories</a></h3>\n<p>When the execution of a test case starts,\nthe current directory is set to a temporary directory.\nThis gives the test case a sandbox where it can create and manipulate files.</p>\n<p>The sandbox - and all files within it - are removed when the execution ends.</p>\n<p>The following tests a program that classifies\nfiles as either good or bad, by moving them to the\nappropriate directory:</p>\n<pre>[setup]\n\ndir input\ndir output/good\ndir output/bad\n\nfile input/a.txt = &lt;&lt;EOF\nGOOD contents\nEOF\n\nfile input/b.txt = &lt;&lt;EOF\nbad contents\nEOF\n\n[act]\n\nclassify-files-by-moving-to-appropriate-dir GOOD input/ output/\n\n[assert]\n\ndir-contents input empty\n\nexists       output/good/a.txt : type file\ndir-contents output/good         num-files == 1\n\nexists       output/bad/b.txt : type file\ndir-contents output/bad         num-files == 1\n</pre>\n<p><tt>file</tt> and <tt>dir</tt> makes files in the current directory (by default).</p>\n</div>\n<div id=\"using-predefined-source-files\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Using predefined source files</a></h3>\n<p>The <em>home directory structure</em> is directories containing\npredefined files involved in a test case:</p>\n<dl>\n<dt><em>act-home</em></dt>\n<dd>Location of the program file being tested</dd>\n<dt><em>home</em></dt>\n<dd>Location of arbitrary test resources</dd>\n</dl>\n<p>Both of them defaults to the directory\nthat contains the test case file,\nbut can be changed via <tt>[conf]</tt>.</p>\n<p>There are options for making paths relative to them,\nand also to the temporary sandbox directories.</p>\n<p><tt><span class=\"pre\">-rel-home</span></tt> refers to the <em>home</em> directory,\nand <tt><span class=\"pre\">-rel-act</span></tt> to the temporary directory\nthat is the current directory at the start of the execution:</p>\n<pre>[conf]\n\nact-home = ../bin/\n\nhome     = data/\n\n[setup]\n\ncopy  -rel-home input.txt  -rel-act actual.txt\n\n[act]\n\nmy-grep-tool \"text to find\" actual.txt\n\n[assert]\n\ncontents -rel-act actual.txt\n         equals\n         -file -rel-home expected.txt\n</pre>\n<p>These \u201crelativity\u201d options have defaults designed to minimize the\nneed for them.\nThe following case does the same thing as the one above:</p>\n<pre>[conf]\n\nact-home = ../bin/\n\nhome     = data/\n\n[setup]\n\ncopy input.txt actual.txt\n\n[act]\n\nmy-grep-tool \"text to find\" actual.txt\n\n[assert]\n\ncontents actual.txt\n         equals\n         -file expected.txt\n</pre>\n</div>\n<div id=\"testing-and-transforming-the-contents-of-files\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Testing and transforming the contents of files</a></h3>\n<p>Use <tt>contents</tt> to test the contents of a file,\nor a transformed version of it,\nby applying a \u201cstring transformer\u201d.</p>\n<p>Such a \u201cstring transformer\u201d may be given a name\nusing the <tt>def</tt> instruction\nto make the test easier to read.</p>\n<p>The following case\ntests that \u201ctiming lines\u201d are output as part of a log file \u201clog.txt\u201d.</p>\n<p>The challenge is that the (fictive) log file contains\nnon-timing lines that the test is not interested in,\nand that timing lines contains a time stamp of the form\n\u201cNN:NN\u201d, who\u2019s exact value also is not interesting.</p>\n<p>A \u201cstring transformer\u201d is used to extract all timing lines\nand to replace \u201cNN:NN\u201d time stamps with the constant string <tt>TIMESTAMP</tt>:</p>\n<pre>[setup]\n\ndef line-matcher       IS_TIMING_LINE     = matches ^timing\n\ndef string-transformer REPLACE_TIMESTAMPS = replace [0-9]{2}:[0-9]{2} TIMESTAMP\n\ndef string-transformer GET_TIMING_LINES   = filter IS_TIMING_LINE | REPLACE_TIMESTAMPS\n\n[act]\n\nprogram-that-writes-log-file\n\n[assert]\n\ncontents log.txt\n         -transformed-by GET_TIMING_LINES\n         equals &lt;&lt;EOF\ntiming TIMESTAMP begin\ntiming TIMESTAMP preprocessing\ntiming TIMESTAMP validation\ntiming TIMESTAMP execution\ntiming TIMESTAMP end\nEOF\n</pre>\n<p>The <tt><span class=\"pre\">-transformed-by</span></tt> option does not modify the tested file,\nit just applies the assertion to a transformed version of it.</p>\n</div>\n<div id=\"using-external-helper-programs\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Using external helper programs</a></h3>\n<p>External programs can help with setup and assertions etc.</p>\n<p>Exactly can run executable files, shell commands  and programs in the OS PATH,\nusing <tt>run</tt>, <tt>$</tt>, <tt>%</tt>.</p>\n<p>The following case shows some examples, but doesn\u2019t make sense tough:</p>\n<pre>[setup]\n\nrun my-setup-helper-program first \"second arg\"\n\nrun % mysql -uu -pp -hlocalhost -Dd --batch --execute \"create table my_table(id int)\"\n\n$ touch file\n\nfile root-files.txt = -stdout-from $ ls /\n\n[act]\n\n$ echo ${PATH}\n\n[assert]\n\nrun my-assert-helper-program\n\n$ test -f root-files.txt\n\nstdout -from\n       % echo 'Interesting output'\n       equals\n&lt;&lt;EOF\nInteresting output\nEOF\n\n[cleanup]\n\nrun % mysql -uu -pp -hlocalhost -Dd --batch --execute \"drop table my_table\"\n</pre>\n<p>A program executed in <tt>[assert]</tt> becomes an assertion that depends on the exit code.</p>\n<p>Program values can be defined for reuse using <tt>def</tt> and run using <tt>@</tt>:</p>\n<pre>[setup]\n\ndef program RUN_MYSQL   = % mysql -uu -pp -hlocalhost -Dd\ndef program EXECUTE_SQL = @ RUN_MYSQL --skip-column-names --batch --execute\n\n\nrun @ EXECUTE_SQL \"create table my_table(id int)\"\n\n[act]\n\nsystem-under-test\n\n[assert]\n\nstdout -from\n       @ EXECUTE_SQL \"select * from my_table\"\n       ! empty\n\n[cleanup]\n\nrun @ EXECUTE_SQL \"drop table my_table\"\n</pre>\n</div>\n<div id=\"testing-source-code-files\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Testing source code files</a></h3>\n<p>The <tt>actor</tt> instruction can specify an interpreter to test a source code file:</p>\n<pre>[conf]\n\nactor = -file python\n\n[act]\n\nmy-python-program.py 'an argument' second third\n\n[assert]\n\nstdout equals\n&lt;&lt;EOF\nArgument: an argument\nArgument: second\nArgument: third\nEOF\n</pre>\n</div>\n<div id=\"print-output-from-the-tested-program\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Print output from the tested program</a></h3>\n<p>If <tt><span class=\"pre\">--act</span></tt> is used, the output of the \u201cact\u201d phase (the \u201caction to check\u201d)\nwill become the output of <tt>exactly</tt> -\nstdout, stderr and exit code</p>\n<pre>[setup]\n\ndir  a-dir\nfile a-file\n\n[act]\n\n$ ls\n\n[assert]\n\nstdout num-lines == 314\n</pre>\n<pre>&gt; exactly --act my-test.case\na-dir\na-file\n</pre>\n<p>The test case is executed in a temporary sandbox, as usual,\nbut assertions are ignored.</p>\n</div>\n<div id=\"testing-existing-os-environment-tests-without-act\">\n<h3><a href=\"#id9\" rel=\"nofollow\">Testing existing OS environment - tests without <tt>[act]</tt></a></h3>\n<p>A test case does not need to have an <tt>[act]</tt> phase.\nThis way, Exactly can be used to check existing files and directories, for example.</p>\n<p>The following case checks your hierarchy of software projects.</p>\n<p>The projects are rooted at the directory \u2018my-projects\u2019.\nEach \u2018project\u2019 sub directory contains a project,\nand must contain a \u2018Makefile\u2019 with a target \u2018all\u2019:</p>\n<pre>[assert]\n\nexists @[MY_PROJECTS_ROOT_DIR]@ : type dir &amp;&amp; @[ALL_PROJECT_DIRS_ARE_VALID]@\n\n[setup]\n\ndef path   MY_PROJECTS_ROOT_DIR = -rel-act-home 'my-projects'\ndef string MY_PROJECT_DIR_NAME  = 'project'\n\ndef file-matcher IS_VALID_MAKEFILE =\n\n    type file &amp;&amp;\n    contents\n      any line : matches '^all:$'\n\n\ndef file-matcher IS_VALID_PROJECT_DIR =\n\n    type dir &amp;&amp;\n    dir-contents\n       any file : name 'Makefile' &amp;&amp; @[IS_VALID_MAKEFILE]@\n\n\ndef file-matcher ALL_PROJECT_DIRS_ARE_VALID =\n\n    dir-contents -recursive\n      -selection name @[MY_PROJECT_DIR_NAME]@\n        every file : @[IS_VALID_PROJECT_DIR]@\n</pre>\n</div>\n<div id=\"testing-a-git-commit-hook\">\n<h3><a href=\"#id10\" rel=\"nofollow\">Testing a git commit hook</a></h3>\n<p>The following tests a git commit hook (<cite>prepare-commit-msg</cite>).</p>\n<p>The hook should add the issue id in the branch name,\nto commit messages:</p>\n<pre>[setup]\n\n\ndef string ISSUE_ID            = ABC-123\ndef string MESSAGE_WO_ISSUE_ID = \"commit message without issue id\"\n\ndef program GET_LOG_MESSAGE_OF_LAST_COMMIT = % git log -1 --format=%s\n\n\n## Setup a (non empty) git repo.\n\n$ git init\n\nfile file-in-repo = \"A file in the repo\"\n\n$ git add file-in-repo\n\n$ git commit -m \"commit of file already in repo\"\n\n\n## Install the commit hook to test.\n\ncopy prepare-commit-msg .git/hooks\n\n\n## Setup a branch, with issue number in its name,\n# and a file to commit.\n\n$ git checkout -b \"@[ISSUE_ID]@-branch-with-issue-id\"\n\nfile file-to-add = \"A file to add on the branch\"\n\n$ git add file-to-add\n\n\n[act]\n\n\n$ git commit -m \"@[MESSAGE_WO_ISSUE_ID]@\"\n\n\n[assert]\n\n\nstdout -from\n       @ GET_LOG_MESSAGE_OF_LAST_COMMIT\n       equals\n&lt;&lt;-\n@[ISSUE_ID]@ : @[MESSAGE_WO_ISSUE_ID]@\n-\n</pre>\n<p>Note: Since a test is executed in a sandbox directory, it is ok\nto create the git repo in CWD.</p>\n<p>Note: Since the test is rather long, it would increase readability\nto put part of it in external files, and including them using <cite>including</cite>.\nE.g.:</p>\n<pre>[setup]\n...\nincluding repo-in-cwd-with-installed-commit-hook.setup\n</pre>\n</div>\n</div>\n<div id=\"organizing-tests\">\n<h2><a href=\"#id11\" rel=\"nofollow\">ORGANIZING TESTS</a></h2>\n<div id=\"file-inclusion\">\n<h3><a href=\"#id12\" rel=\"nofollow\">File inclusion</a></h3>\n<p>Test case contents can be included from external files:</p>\n<pre>[setup]\n\nincluding my-dir-symbols.def\n\nincluding my-common-setup-and-cleanup.xly\n</pre>\n</div>\n<div id=\"test-suites\">\n<h3><a href=\"#id13\" rel=\"nofollow\">Test suites</a></h3>\n<p>Tests can be grouped in suites:</p>\n<pre>first.case\nsecond.case\n</pre>\n<p>or:</p>\n<pre>[cases]\n\nhelloworld.case\n*.case\n**/*.case\n\n\n[suites]\n\nsub-suite.suite\n*.suite\npkg/suite.suite\n**/*.suite\n</pre>\n<p>If the file <tt><span class=\"pre\">my-suite.suite</span></tt> contains this text, then Exactly can run it:</p>\n<pre>&gt; exactly suite my-suite.suite\n...\nOK\n</pre>\n<p>The result of a suite can be reported as\nsimple progress information,\nor JUnit XML.</p>\n<p>Suites can contain test case functionality that is common\nto all cases in the suite. For example:</p>\n<pre>[cases]\n\n*.case\n\n[conf]\n\nact-home = ../bin/\n\n[setup]\n\ndef string CONF_FILE = my.conf\n\nfile @[CONF_FILE]@ =\n&lt;&lt;EOF\ncommon = configuration\nEOF\n</pre>\n<p>The common functionality is included in each test case.</p>\n</div>\n</div>\n<div id=\"more-examples\">\n<h2><a href=\"#id14\" rel=\"nofollow\">MORE EXAMPLES</a></h2>\n<p>The <tt>examples/</tt> directory of the source distribution contains more examples.</p>\n</div>\n<div id=\"installing\">\n<h2><a href=\"#id15\" rel=\"nofollow\">INSTALLING</a></h2>\n<p>Exactly is written in Python and does not require any external libraries.</p>\n<p>Exactly requires Python &gt;= 3.5.4.</p>\n<p>Use <tt>pip</tt> or <tt>pip3</tt> to install:</p>\n<pre>&gt; pip3 install exactly\n</pre>\n<p>The program can also be run from a source distribution:</p>\n<pre>&gt; python3 src/default-main-program-runner.py\n</pre>\n</div>\n<div id=\"development-status\">\n<h2><a href=\"#id16\" rel=\"nofollow\">DEVELOPMENT STATUS</a></h2>\n<p>Current version is fully functional, but some syntax and semantics is inconsistent:</p>\n<ul>\n<li>Some instructions allow arguments to span multiple lines, some do not.</li>\n<li>Support for escapes characters in strings is missing.</li>\n</ul>\n<p>Incompatible changes to syntax and semantics may occur in every 0.x release.</p>\n<p>Comments are welcome!</p>\n<div id=\"future-development\">\n<h3><a href=\"#id17\" rel=\"nofollow\">Future development</a></h3>\n<p>More functionality is needed, smaller and larger.\nIncluding (but not limited to):</p>\n<ul>\n<li>Improved string character escaping</li>\n<li>More string transformers, matchers, etc</li>\n<li>Possibility to use PROGRAM in more places,\ne.g. in <tt>[act]</tt>, as matchers and as a string-transformer</li>\n<li>Type for REG-EX</li>\n<li>Separate sets of environment variables for \u201caction to check\u201d and other processes</li>\n<li>Possibility to set stdin for processes other than the \u201caction to check\u201d</li>\n<li><tt><span class=\"pre\">dir-contents</span></tt>: Add convenience matcher for containment of set of files</li>\n<li>Symbol substitution in files</li>\n<li>Dynamic symbol values - e.g. contents of dir, current date</li>\n<li>Macros and functions</li>\n<li>Ability to embed Python code in test cases</li>\n<li>Python library for running cases and suites from within Python as a DSEL</li>\n</ul>\n</div>\n</div>\n<div id=\"author\">\n<h2><a href=\"#id18\" rel=\"nofollow\">AUTHOR</a></h2>\n<p>Emil Karl\u00e9n</p>\n<p><a href=\"mailto:emil%40member.fsf.org\">emil<span>@</span>member<span>.</span>fsf<span>.</span>org</a></p>\n</div>\n<div id=\"thanks\">\n<h2><a href=\"#id19\" rel=\"nofollow\">THANKS</a></h2>\n<p>The Python IDE\n<a href=\"https://www.jetbrains.com/pycharm/\" rel=\"nofollow\">PyCharm</a>\nfrom\n<a href=\"https://www.jetbrains.com/\" rel=\"nofollow\">JetBrains</a>\nhas greatly helped the development of this software.</p>\n<p>Thanks for the great</p>\n<ul>\n<li>Python language</li>\n<li>Linux</li>\n<li>Emacs</li>\n<li>Rembrandt Harmenszoon van Rijn\u2019s \u201cDe Staalmeesters\u201d</li>\n</ul>\n</div>\n<div id=\"dedication\">\n<h2><a href=\"#id20\" rel=\"nofollow\">DEDICATION</a></h2>\n<div id=\"project-dedications\">\n<h3><a href=\"#id21\" rel=\"nofollow\">Project dedications</a></h3>\n<p>Aron Karl\u00e9n</p>\n<p>Tommy Karlsson</p>\n<p>G\u00f6tabergsgatan 10, l\u00e4genhet 4</p>\n</div>\n<div id=\"release-dedications\">\n<h3><a href=\"#id22\" rel=\"nofollow\">Release dedications</a></h3>\n<p>Elizabeth Wulcan</p>\n<p>Sven Karl\u00e9n</p>\n</div>\n<div id=\"release-soundtrack\">\n<h3><a href=\"#id23\" rel=\"nofollow\">Release soundtrack</a></h3>\n<p>\u201cReachy Prints\u201d by \u201cPlaid\u201d</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6559671, "releases": {"0.10.0": [{"comment_text": "", "digests": {"md5": "76d31d6caac9535c6b92ca84801959ae", "sha256": "780b3b5d6b854db7d4560b3bb0fb37eb4906eef9629705b92e4ac1b046ccc1f7"}, "downloads": -1, "filename": "exactly-0.10.0-py3-none-any.whl", "has_sig": false, "md5_digest": "76d31d6caac9535c6b92ca84801959ae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 744287, "upload_time": "2019-02-05T22:38:37", "upload_time_iso_8601": "2019-02-05T22:38:37.104214Z", "url": "https://files.pythonhosted.org/packages/6d/a0/14cdce882e2333c5640b4f9e8ddca0a78cbd8319ff5dd57f76f4e94b08e5/exactly-0.10.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "25d83a143feadd181d7b65d2506f7502", "sha256": "78d89d48cd49f42b8de6feb22861311b0ccc6f1455785a9ae2280f748347ebc5"}, "downloads": -1, "filename": "exactly-0.10.0.tar.gz", "has_sig": false, "md5_digest": "25d83a143feadd181d7b65d2506f7502", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 470625, "upload_time": "2019-02-05T22:38:41", "upload_time_iso_8601": "2019-02-05T22:38:41.494928Z", "url": "https://files.pythonhosted.org/packages/ad/a6/8ee7bfe15a11c2238bf91b26fc732c9729fe9399778abba9d65eb553aaa4/exactly-0.10.0.tar.gz", "yanked": false}], "0.11.0.1": [{"comment_text": "", "digests": {"md5": "bf4c5f57dd67eda96620195522024b25", "sha256": "129ccb8a0ab8499f2cbd095eddc1115eacc220c997c2185379368692ee0b5111"}, "downloads": -1, "filename": "exactly-0.11.0.1-py3.5.egg", "has_sig": false, "md5_digest": "bf4c5f57dd67eda96620195522024b25", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 2013574, "upload_time": "2019-05-02T10:39:03", "upload_time_iso_8601": "2019-05-02T10:39:03.071899Z", "url": "https://files.pythonhosted.org/packages/9a/4c/c06a90d7967a64467710acd07072d2162dfec85a7ff16ba6cd11be3ef3d3/exactly-0.11.0.1-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "484d0e457e52d2527bdf2f6e2d8c5dba", "sha256": "eeecb9d5522438823c85a3feab2537eac961cf4f048e9bb6ca15ab3965c831c8"}, "downloads": -1, "filename": "exactly-0.11.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "484d0e457e52d2527bdf2f6e2d8c5dba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 751321, "upload_time": "2019-05-02T10:38:49", "upload_time_iso_8601": "2019-05-02T10:38:49.710925Z", "url": "https://files.pythonhosted.org/packages/56/28/96740cc38003041d18feca96e2d4aed3f8b8b296d461d3e4f79706aaf62a/exactly-0.11.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1361a8655ddaf37389e32724214bd490", "sha256": "d66a3842ac4c4c5855b2dbaa4cb7489369b4abcd9d6dd01255c9a5a3fbaf8ad5"}, "downloads": -1, "filename": "exactly-0.11.0.1.tar.gz", "has_sig": false, "md5_digest": "1361a8655ddaf37389e32724214bd490", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 477841, "upload_time": "2019-05-02T10:39:06", "upload_time_iso_8601": "2019-05-02T10:39:06.408009Z", "url": "https://files.pythonhosted.org/packages/2f/63/d3ba7842b9299f68d5167be855ec010c0c5ed615ca0bed77481a3decdd38/exactly-0.11.0.1.tar.gz", "yanked": false}], "0.11.1.0": [{"comment_text": "", "digests": {"md5": "84b478dcb23f5267f341decd804d5d3f", "sha256": "5d33dcd1a35ea25f91757c55867735674319e914e51410d7638139fd3736cfc7"}, "downloads": -1, "filename": "exactly-0.11.1.0-py3.7.egg", "has_sig": false, "md5_digest": "84b478dcb23f5267f341decd804d5d3f", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.5.4", "size": 2173923, "upload_time": "2019-12-31T13:14:55", "upload_time_iso_8601": "2019-12-31T13:14:55.224816Z", "url": "https://files.pythonhosted.org/packages/ab/47/51a5668f84afaf3533f39fd6c2276dfbbebcb5c72d27b43d250e02b156d6/exactly-0.11.1.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7fa15ae8570122af7abae85ebc5ee78", "sha256": "95d37cd62062b383c5ac3f53f78852b357d06fb6f426328850ff2cece3158de8"}, "downloads": -1, "filename": "exactly-0.11.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b7fa15ae8570122af7abae85ebc5ee78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.4", "size": 824743, "upload_time": "2019-12-31T13:14:41", "upload_time_iso_8601": "2019-12-31T13:14:41.389237Z", "url": "https://files.pythonhosted.org/packages/0a/1a/354f272af6d6baa1e3d42b5e9610aa0b2e1ea2134df2874398207478f42c/exactly-0.11.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b3adad2dfe93e0a9e9c7707c2cbda9c", "sha256": "c657ff9f5cd4d52848a7b737423627b81dc19b5664585006aa6d7c4a87a0ac08"}, "downloads": -1, "filename": "exactly-0.11.1.0.tar.gz", "has_sig": false, "md5_digest": "7b3adad2dfe93e0a9e9c7707c2cbda9c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.4", "size": 521965, "upload_time": "2019-12-31T13:15:01", "upload_time_iso_8601": "2019-12-31T13:15:01.928165Z", "url": "https://files.pythonhosted.org/packages/7c/41/1c07512915e60ad960c5966475c7fa5277057d673c7fd22e3be43156192b/exactly-0.11.1.0.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "8a505f85a6ad668c115b28403b44c687", "sha256": "e6230c75ffd9e687462d6f7f7f022a68f86b5b8c0022933975bdc61844e98be4"}, "downloads": -1, "filename": "exactly-0.12.0-py3.5.egg", "has_sig": false, "md5_digest": "8a505f85a6ad668c115b28403b44c687", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": ">=3.5.4", "size": 2246065, "upload_time": "2020-02-02T20:38:36", "upload_time_iso_8601": "2020-02-02T20:38:36.463961Z", "url": "https://files.pythonhosted.org/packages/22/d7/0db8fc84250e529780f7370ef3e4f417b43d11a0308159152838b0f74091/exactly-0.12.0-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cf9d21a226a6915345a8cfb794b3bff", "sha256": "9e97ad583cf3d11d61af4c4fcb4b91e00397832417f115f533a78cbab860a69b"}, "downloads": -1, "filename": "exactly-0.12.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0cf9d21a226a6915345a8cfb794b3bff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.4", "size": 840839, "upload_time": "2020-02-02T20:38:31", "upload_time_iso_8601": "2020-02-02T20:38:31.595159Z", "url": "https://files.pythonhosted.org/packages/dd/17/55d02c6467c4cfebc66fbc2946f5222a24b6e9b418d1da3da390b28f06b0/exactly-0.12.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6cfe0bebf79e1ac6279920e3f9d6e971", "sha256": "f3908b28335c7d16fec12361942d9df375fd4b5b068dae8636289048676e3a7c"}, "downloads": -1, "filename": "exactly-0.12.0.tar.gz", "has_sig": false, "md5_digest": "6cfe0bebf79e1ac6279920e3f9d6e971", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.4", "size": 495840, "upload_time": "2020-02-02T20:38:39", "upload_time_iso_8601": "2020-02-02T20:38:39.676099Z", "url": "https://files.pythonhosted.org/packages/48/47/3d02682324036547790d0a86b1d21a14038bb02815b06386619383f894aa/exactly-0.12.0.tar.gz", "yanked": false}], "0.8.6.1": [{"comment_text": "", "digests": {"md5": "6cd6115cc0ae24f40312561f4d31027e", "sha256": "0159eb2e4cc79c05228cf89abc150c82d0eab1578c74d52dc65e2d48eb1949bd"}, "downloads": -1, "filename": "exactly-0.8.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6cd6115cc0ae24f40312561f4d31027e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 566476, "upload_time": "2017-12-04T23:03:30", "upload_time_iso_8601": "2017-12-04T23:03:30.423191Z", "url": "https://files.pythonhosted.org/packages/0c/49/b78c53db127ebac3b15de7fdb8c6c09df33a6c7fb91841907fb61f579480/exactly-0.8.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a402c07b71c4ede8a1b8beec5fb78e6e", "sha256": "d3d8afc1d7983e45cc3b9ac58b7d9b7afb3835c09811b838bb517360c4240678"}, "downloads": -1, "filename": "exactly-0.8.6.1.tar.gz", "has_sig": false, "md5_digest": "a402c07b71c4ede8a1b8beec5fb78e6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 344658, "upload_time": "2017-12-04T23:03:32", "upload_time_iso_8601": "2017-12-04T23:03:32.576979Z", "url": "https://files.pythonhosted.org/packages/23/2d/f43b517663d653c19a83a011a496b74966ef6e3bffbfe5324b8017c6a366/exactly-0.8.6.1.tar.gz", "yanked": false}], "0.8.6.2": [{"comment_text": "", "digests": {"md5": "090c691ee8a34eadba7cd4f5fbb2a16a", "sha256": "653180469abe459417b8c41dfc2c5ea5ccb64cf24024c9de2ab8683436c749d4"}, "downloads": -1, "filename": "exactly-0.8.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "090c691ee8a34eadba7cd4f5fbb2a16a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 575410, "upload_time": "2017-12-26T15:53:29", "upload_time_iso_8601": "2017-12-26T15:53:29.847910Z", "url": "https://files.pythonhosted.org/packages/f1/87/c0300d11102986bfd4847c4dcd4a306a6a18cdbccd2d0ab2b1cda578261b/exactly-0.8.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a53deeb513c26be8b7c28e56bb3f7d49", "sha256": "d441d82b9dfc742bf6f30b5e3e3197cc69aabbf5ce8575f60c80e7a65ade08c4"}, "downloads": -1, "filename": "exactly-0.8.6.2.tar.gz", "has_sig": false, "md5_digest": "a53deeb513c26be8b7c28e56bb3f7d49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 361259, "upload_time": "2017-12-26T15:53:32", "upload_time_iso_8601": "2017-12-26T15:53:32.954649Z", "url": "https://files.pythonhosted.org/packages/53/ba/00d294ced40785fa710efb75c9b307be76dd77419d7ad4f5b2cb1033f6f2/exactly-0.8.6.2.tar.gz", "yanked": false}], "0.8.7": [{"comment_text": "", "digests": {"md5": "80dbf37b4102e889eac026c182e9c030", "sha256": "c42fce9a0d1fb901632a67b6056b7d68e53bc65df92244506d2e5dd5be6655f9"}, "downloads": -1, "filename": "exactly-0.8.7-py3-none-any.whl", "has_sig": false, "md5_digest": "80dbf37b4102e889eac026c182e9c030", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 584342, "upload_time": "2018-03-15T15:25:54", "upload_time_iso_8601": "2018-03-15T15:25:54.421724Z", "url": "https://files.pythonhosted.org/packages/f9/af/32d85fe207bd4413cab8f0094e445d8402a4448c466ad13325c901ecaf72/exactly-0.8.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4a3fc4275049d879be97705c2bea27b", "sha256": "d2eb067b6302d48bf1126d8e296276a57f0d8eb19ca1d25a8142f03ae6509b2f"}, "downloads": -1, "filename": "exactly-0.8.7.tar.gz", "has_sig": false, "md5_digest": "f4a3fc4275049d879be97705c2bea27b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 375226, "upload_time": "2018-03-15T15:26:04", "upload_time_iso_8601": "2018-03-15T15:26:04.553888Z", "url": "https://files.pythonhosted.org/packages/b7/1c/09be4c6b37665c5a8b1149f1eacf3d8ac63177d51c2d715ff1ffed23ae46/exactly-0.8.7.tar.gz", "yanked": false}], "0.8.7.1": [{"comment_text": "", "digests": {"md5": "07c8e15f94f81a14cf2bf4bdcebc361b", "sha256": "78a3c0e19b8783e48388cad537c6caabaaa3d973bfa43ac637849ec915686716"}, "downloads": -1, "filename": "exactly-0.8.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "07c8e15f94f81a14cf2bf4bdcebc361b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 584748, "upload_time": "2018-03-19T01:05:12", "upload_time_iso_8601": "2018-03-19T01:05:12.632654Z", "url": "https://files.pythonhosted.org/packages/d5/8e/8d0033bd89ab4c1fab5847a249c9a57b1920ba0070fbc9919a23333fce15/exactly-0.8.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae48b472b0cbd9620c9abaa0c7eac5d8", "sha256": "d253542f0179e63c81c9db5969f60a47d0eda91ed1070dbb61e076037faf6805"}, "downloads": -1, "filename": "exactly-0.8.7.1.tar.gz", "has_sig": false, "md5_digest": "ae48b472b0cbd9620c9abaa0c7eac5d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 376266, "upload_time": "2018-03-19T01:05:16", "upload_time_iso_8601": "2018-03-19T01:05:16.746647Z", "url": "https://files.pythonhosted.org/packages/03/b1/a67954a002e39904c677f329a26f91be554fc2643fccda99b93aa13f50d9/exactly-0.8.7.1.tar.gz", "yanked": false}], "0.8.8": [{"comment_text": "", "digests": {"md5": "a3ce4cb6911b27af7a8458bea78fc58c", "sha256": "6b93f0c43d3e2c539443b50bc072b7ae7a3abb4da513fdb2a7c7a6dc18c28dfd"}, "downloads": -1, "filename": "exactly-0.8.8-py3.6.egg", "has_sig": false, "md5_digest": "a3ce4cb6911b27af7a8458bea78fc58c", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 1638667, "upload_time": "2018-04-08T20:28:05", "upload_time_iso_8601": "2018-04-08T20:28:05.289207Z", "url": "https://files.pythonhosted.org/packages/05/cf/b4cfa0ca2ec6ca3f84a694c9f0ff79538fba80549cf5c75e35f168a0cd29/exactly-0.8.8-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "27c05636690c034b1db88c74c6d04064", "sha256": "57b83c9700094788ccb16be53df9b98072b6a48187eb9590fd9a4597f49286f5"}, "downloads": -1, "filename": "exactly-0.8.8-py3-none-any.whl", "has_sig": false, "md5_digest": "27c05636690c034b1db88c74c6d04064", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 623902, "upload_time": "2018-04-08T20:28:01", "upload_time_iso_8601": "2018-04-08T20:28:01.767536Z", "url": "https://files.pythonhosted.org/packages/4e/47/70da89e092c69afb1f1c99cd0aecf88c66f8c2d09c848ce114b658512ce5/exactly-0.8.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84dfb570534229703642d303cbb02cb7", "sha256": "fd2898cfc89f1e0980f1855a731e4414f716774cbd89e06b0f477efcfe567f39"}, "downloads": -1, "filename": "exactly-0.8.8.tar.gz", "has_sig": false, "md5_digest": "84dfb570534229703642d303cbb02cb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 397088, "upload_time": "2018-04-08T20:28:07", "upload_time_iso_8601": "2018-04-08T20:28:07.997116Z", "url": "https://files.pythonhosted.org/packages/f2/e6/734b799ce5dee2e0e1fac45ce0fae5fa3508e262f652cc2972e55bfba390/exactly-0.8.8.tar.gz", "yanked": false}], "0.8.8.2": [{"comment_text": "", "digests": {"md5": "c81df35f0cdeab65dc9b9227e95fc1f5", "sha256": "0b2e73acf4f3df0278fbfed07d7ece97979642cd41278b875c7059a7cbbc8d18"}, "downloads": -1, "filename": "exactly-0.8.8.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c81df35f0cdeab65dc9b9227e95fc1f5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 623999, "upload_time": "2018-04-10T00:00:16", "upload_time_iso_8601": "2018-04-10T00:00:16.077331Z", "url": "https://files.pythonhosted.org/packages/e3/76/e55fb411b450eb5bcc15aad8b60872069c2c36ed8de6bd34dba8e21f6923/exactly-0.8.8.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c3f585140085f09adb708d3767a68c7", "sha256": "ceaaf033c0dad7610f569bf8d7e85bc97f510c6c24de88ffb50da277a531a034"}, "downloads": -1, "filename": "exactly-0.8.8.2.tar.gz", "has_sig": false, "md5_digest": "2c3f585140085f09adb708d3767a68c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 398239, "upload_time": "2018-04-10T00:00:18", "upload_time_iso_8601": "2018-04-10T00:00:18.970968Z", "url": "https://files.pythonhosted.org/packages/24/5e/a1b7dece8c6e996564e0338a53967300ef0988486149f4db1934c0689de4/exactly-0.8.8.2.tar.gz", "yanked": false}], "0.8.9": [{"comment_text": "", "digests": {"md5": "629e8304d21d8299951f8ae46a4d245b", "sha256": "12b5a72c0496972d84abda2d62cdb00119b241303080d5d56e2b2288743c730b"}, "downloads": -1, "filename": "exactly-0.8.9-py3-none-any.whl", "has_sig": false, "md5_digest": "629e8304d21d8299951f8ae46a4d245b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 629121, "upload_time": "2018-04-15T20:59:23", "upload_time_iso_8601": "2018-04-15T20:59:23.742010Z", "url": "https://files.pythonhosted.org/packages/98/aa/6ae7a05ae79f1f129626ba57133c34ffb0c9c9687bacd5854b072acc6dff/exactly-0.8.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f24944e8ea419b12f3ccd8e25828428", "sha256": "4aa6b2ff3eb0b36e836885cf71e267e328c2267abe2600d6604b8dbe74fd24c2"}, "downloads": -1, "filename": "exactly-0.8.9.tar.gz", "has_sig": false, "md5_digest": "4f24944e8ea419b12f3ccd8e25828428", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 399788, "upload_time": "2018-04-15T20:59:26", "upload_time_iso_8601": "2018-04-15T20:59:26.424829Z", "url": "https://files.pythonhosted.org/packages/97/29/61c931cacda62e85af354c3670ee342cb5fdb00321d87ece679bdff2f9ea/exactly-0.8.9.tar.gz", "yanked": false}], "0.8.9.1": [{"comment_text": "", "digests": {"md5": "46325f6a435fbceeeb19f421e788385b", "sha256": "1d3d22362b11d279f65d970c33127a102c2d3c3451d55579d205afcc97117af5"}, "downloads": -1, "filename": "exactly-0.8.9.1-py3.5.egg", "has_sig": false, "md5_digest": "46325f6a435fbceeeb19f421e788385b", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 1684983, "upload_time": "2018-05-12T04:40:18", "upload_time_iso_8601": "2018-05-12T04:40:18.017996Z", "url": "https://files.pythonhosted.org/packages/0e/72/dca72c29a5ba57c0d8356505bf0e7abdced0e58ae5b882e411fbccc6e0a6/exactly-0.8.9.1-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb8636d9d2bf7c47e6cdc06a88303f13", "sha256": "104c3b04bc077febda330e9172b414c1890b3e740723095c978b27ab7f653cae"}, "downloads": -1, "filename": "exactly-0.8.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "eb8636d9d2bf7c47e6cdc06a88303f13", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 630344, "upload_time": "2018-05-12T04:40:12", "upload_time_iso_8601": "2018-05-12T04:40:12.813039Z", "url": "https://files.pythonhosted.org/packages/30/72/4e84a1e2f0082a7691af9c88b368081a60938b05b7a42a7c58abe9b6ac56/exactly-0.8.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d484371ef03b1af3a946cf384d6d3fe3", "sha256": "00b11f4bb09534ce74c44da37eff4d6135d05aac21154681dfb5076c2024b7c7"}, "downloads": -1, "filename": "exactly-0.8.9.1.tar.gz", "has_sig": false, "md5_digest": "d484371ef03b1af3a946cf384d6d3fe3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 401241, "upload_time": "2018-05-12T04:40:20", "upload_time_iso_8601": "2018-05-12T04:40:20.911175Z", "url": "https://files.pythonhosted.org/packages/3c/f9/926c508f23df32452b95250e345e5899e491ec4b7b6ca8849bcd7597aba0/exactly-0.8.9.1.tar.gz", "yanked": false}], "0.8.9.2": [{"comment_text": "", "digests": {"md5": "874a6f1aa15757205090dc4beb62d14f", "sha256": "2363146c75237292a4ae8f9deebb4e98bfa264b29ead46850c4a184412740ac1"}, "downloads": -1, "filename": "exactly-0.8.9.2-py3-none-any.whl", "has_sig": false, "md5_digest": "874a6f1aa15757205090dc4beb62d14f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 639106, "upload_time": "2018-06-24T20:51:23", "upload_time_iso_8601": "2018-06-24T20:51:23.771323Z", "url": "https://files.pythonhosted.org/packages/ec/50/37baaa305c4e3036e8f48ca19466e1ba741b9cb168068dfbe6f9628d53e5/exactly-0.8.9.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73ff18e7811a2908e5ef6e3aa8655688", "sha256": "1ff8bc8712dbe884743adf59ff7dea31601600116d3a365ef36fa74acce0292e"}, "downloads": -1, "filename": "exactly-0.8.9.2.tar.gz", "has_sig": false, "md5_digest": "73ff18e7811a2908e5ef6e3aa8655688", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 408169, "upload_time": "2018-06-24T20:51:27", "upload_time_iso_8601": "2018-06-24T20:51:27.405329Z", "url": "https://files.pythonhosted.org/packages/a1/43/0d92ed992194a13b5287dd5665b55e28963c3c69d733fad0e6009d532133/exactly-0.8.9.2.tar.gz", "yanked": false}], "0.8.9.4": [{"comment_text": "", "digests": {"md5": "598a007a0616ff7f073ef4a9f3e688ba", "sha256": "f7089effbf5217a4081265eda61735d003b28d8ad2c026b9edd636fa896b64b2"}, "downloads": -1, "filename": "exactly-0.8.9.4-py3.5.egg", "has_sig": false, "md5_digest": "598a007a0616ff7f073ef4a9f3e688ba", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 1731637, "upload_time": "2018-08-08T04:04:39", "upload_time_iso_8601": "2018-08-08T04:04:39.524829Z", "url": "https://files.pythonhosted.org/packages/7f/b2/57daf771d2b7bbb4516eb0a799d9706b342130f62dda2b26a1d05b5d2294/exactly-0.8.9.4-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "daa9b3364a2baeca6cb5a430c251a3c8", "sha256": "a4392c2dd4c84487bd42ef1a5a34d33b5141cbe88a3981186995b7d838c35195"}, "downloads": -1, "filename": "exactly-0.8.9.4-py3-none-any.whl", "has_sig": false, "md5_digest": "daa9b3364a2baeca6cb5a430c251a3c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 648038, "upload_time": "2018-08-08T04:04:35", "upload_time_iso_8601": "2018-08-08T04:04:35.388722Z", "url": "https://files.pythonhosted.org/packages/5f/ea/9b513a732d3af3e405281ffc10694ef83d2dcff8669668bf74d5067f873a/exactly-0.8.9.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a821b1877269f5a9f20ddbee526d38df", "sha256": "c4db617212aaec305fc6627b4f18bb98b97288e2f31cab3abcc81660931f4b91"}, "downloads": -1, "filename": "exactly-0.8.9.4.tar.gz", "has_sig": false, "md5_digest": "a821b1877269f5a9f20ddbee526d38df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 415862, "upload_time": "2018-08-08T04:04:42", "upload_time_iso_8601": "2018-08-08T04:04:42.297339Z", "url": "https://files.pythonhosted.org/packages/62/e7/410fe71272dedd5e32ab05881bc69cc844d45b8ac482bf0810569daa5e9c/exactly-0.8.9.4.tar.gz", "yanked": false}], "0.8.9.5": [{"comment_text": "", "digests": {"md5": "4321f46159563ced1ec75324460f2451", "sha256": "6639e65a32b76ce21a6e4cb6f28719d3b48b57661f566e8daf2018c4b6a37d7a"}, "downloads": -1, "filename": "exactly-0.8.9.5-py3-none-any.whl", "has_sig": false, "md5_digest": "4321f46159563ced1ec75324460f2451", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 679732, "upload_time": "2018-10-06T14:46:56", "upload_time_iso_8601": "2018-10-06T14:46:56.127654Z", "url": "https://files.pythonhosted.org/packages/39/6e/cd52ea0d1b2e688d65582a82aab4188fad0a45416fdf81d48f4ee3c4ec0a/exactly-0.8.9.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0315d4d88087656d78bc0a2c310f904", "sha256": "c9f42887d88eb1e3f1a12e892359970db50337132d702e64b0e196ae4bffb2f0"}, "downloads": -1, "filename": "exactly-0.8.9.5.tar.gz", "has_sig": false, "md5_digest": "e0315d4d88087656d78bc0a2c310f904", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 439417, "upload_time": "2018-10-06T14:46:58", "upload_time_iso_8601": "2018-10-06T14:46:58.719468Z", "url": "https://files.pythonhosted.org/packages/e7/38/21400619dad7d51d80bd99e60aaff33580b3a32c3e8b5e1bbf862e5b15ec/exactly-0.8.9.5.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "f7b07bd226007be100ab0c32c4192897", "sha256": "dfe3d86fdff0768d4da77a9dfbf16b76ab34e6916cc41dc327e063b843f78e72"}, "downloads": -1, "filename": "exactly-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f7b07bd226007be100ab0c32c4192897", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 724508, "upload_time": "2019-01-17T18:42:39", "upload_time_iso_8601": "2019-01-17T18:42:39.713128Z", "url": "https://files.pythonhosted.org/packages/7f/2c/5c6c9a8f0a839335dace4cde1c24455f4403040a27a887e7dad4eb4b6b7b/exactly-0.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ab3402d152eaa94cefe65c6039c5674", "sha256": "8c92f39ce4c7c5603cadee768c6b58f9f4d236a306e0e381b3fd75e51814758d"}, "downloads": -1, "filename": "exactly-0.9.1.tar.gz", "has_sig": false, "md5_digest": "6ab3402d152eaa94cefe65c6039c5674", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 461092, "upload_time": "2019-01-17T18:42:42", "upload_time_iso_8601": "2019-01-17T18:42:42.255369Z", "url": "https://files.pythonhosted.org/packages/0c/f8/68e90332f70a855567150d13ca3b92e25729c22a5f67fd8ec2703b862b84/exactly-0.9.1.tar.gz", "yanked": false}], "0.9.1.1": [{"comment_text": "", "digests": {"md5": "4f54dc938bc749c917bcea5af7a6d95c", "sha256": "ba548f4ef4e3e3a3ef8a5687b7a0ab0a0cbe3ca5c72dc1f63f45077843657c0f"}, "downloads": -1, "filename": "exactly-0.9.1.1-py3.6.egg", "has_sig": false, "md5_digest": "4f54dc938bc749c917bcea5af7a6d95c", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 1905181, "upload_time": "2019-01-26T22:40:26", "upload_time_iso_8601": "2019-01-26T22:40:26.784438Z", "url": "https://files.pythonhosted.org/packages/74/44/c14323812062ef690b9fbda1aef9b67e32bc95f66985c11ad0d4f2bc343c/exactly-0.9.1.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6c04fc27a4721ee71a711bedf9df372", "sha256": "04b1d8b2aca13688a4ac5deaebca96745ee072e73a9509664a813f8d3991d362"}, "downloads": -1, "filename": "exactly-0.9.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e6c04fc27a4721ee71a711bedf9df372", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 723921, "upload_time": "2019-01-26T22:40:20", "upload_time_iso_8601": "2019-01-26T22:40:20.087159Z", "url": "https://files.pythonhosted.org/packages/1c/e6/2dbafa09b2f39d830ee0f22580eeb02f7d3482832d4ffc4ad42f44738e97/exactly-0.9.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a98967e14d162763bcfc1eed8b9268fd", "sha256": "43dfd66a8571bea473acaa75ebdef9db1d8ff8ee22194a3bfb603a54e720a668"}, "downloads": -1, "filename": "exactly-0.9.1.1.tar.gz", "has_sig": false, "md5_digest": "a98967e14d162763bcfc1eed8b9268fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 462412, "upload_time": "2019-01-26T22:40:29", "upload_time_iso_8601": "2019-01-26T22:40:29.642779Z", "url": "https://files.pythonhosted.org/packages/a3/ea/dce43fd0896c6b8a78a00377f2a8dbdce4a54a84cb338c09390e4f4250cd/exactly-0.9.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8a505f85a6ad668c115b28403b44c687", "sha256": "e6230c75ffd9e687462d6f7f7f022a68f86b5b8c0022933975bdc61844e98be4"}, "downloads": -1, "filename": "exactly-0.12.0-py3.5.egg", "has_sig": false, "md5_digest": "8a505f85a6ad668c115b28403b44c687", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": ">=3.5.4", "size": 2246065, "upload_time": "2020-02-02T20:38:36", "upload_time_iso_8601": "2020-02-02T20:38:36.463961Z", "url": "https://files.pythonhosted.org/packages/22/d7/0db8fc84250e529780f7370ef3e4f417b43d11a0308159152838b0f74091/exactly-0.12.0-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cf9d21a226a6915345a8cfb794b3bff", "sha256": "9e97ad583cf3d11d61af4c4fcb4b91e00397832417f115f533a78cbab860a69b"}, "downloads": -1, "filename": "exactly-0.12.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0cf9d21a226a6915345a8cfb794b3bff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.4", "size": 840839, "upload_time": "2020-02-02T20:38:31", "upload_time_iso_8601": "2020-02-02T20:38:31.595159Z", "url": "https://files.pythonhosted.org/packages/dd/17/55d02c6467c4cfebc66fbc2946f5222a24b6e9b418d1da3da390b28f06b0/exactly-0.12.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6cfe0bebf79e1ac6279920e3f9d6e971", "sha256": "f3908b28335c7d16fec12361942d9df375fd4b5b068dae8636289048676e3a7c"}, "downloads": -1, "filename": "exactly-0.12.0.tar.gz", "has_sig": false, "md5_digest": "6cfe0bebf79e1ac6279920e3f9d6e971", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.4", "size": 495840, "upload_time": "2020-02-02T20:38:39", "upload_time_iso_8601": "2020-02-02T20:38:39.676099Z", "url": "https://files.pythonhosted.org/packages/48/47/3d02682324036547790d0a86b1d21a14038bb02815b06386619383f894aa/exactly-0.12.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:02 2020"}