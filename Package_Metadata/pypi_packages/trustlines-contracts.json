{"info": {"author": "Trustlines-Network", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "Trustlines Smart Contract Platform\n==================================\n\nThis documentation explains how to deploy Trustlines smart contracts,\nfor creating your own currency network and trustlines exchange. The\ncurrent documentation is written for an Ubuntu Linux system.\n\nPrerequisites\n-------------\n\n-  Python 3.6 or up and dev dependencies\n-  `pip <https://pip.pypa.io/en/stable/>`__\n-  git\n\nRun\n``apt install build-essential python3-dev python3-virtualenv virtualenv pkg-config libssl-dev automake autoconf libtool git``\n\nOne of the dependencies used is the secp256k1 library. If you're using\npython 3.5 on linux you can skip the following step, since pypi contains\nbinary packages for secp256k1. If not, you'll have to run the following\nto install the secp256k1 C library:\n\n::\n\n    git clone https://github.com/bitcoin-core/secp256k1.git\n    cd secp256k1\n    ./autogen.sh\n    ./configure --enable-module-recovery\n    make\n    sudo make install\n    sudo ldconfig\n\nDeployment tools\n----------------\n\nThis section runs through the tooling necessary for deploying the\ncontracts.\n\nEthereum client\n~~~~~~~~~~~~~~~\n\nTo deploy the Trustlines smart contracts, you need an ethereum client,\ne.g. geth or parity, which is synced to the chain you want to use. The\nclient needs to expose the JSON RPC endpoint. Additionally you need an\nunlocked account with enough ether to pay for the contract deployment.\n\nDeployment setup\n~~~~~~~~~~~~~~~~\n\n-  Download and install the solidity compiler solc into bin for\n   compiling the contracts\n   ``curl -L -o $HOME/bin/solc https://github.com/ethereum/solidity/releases/download/v0.4.21/solc-static-linux && chmod +x $HOME/bin/solc``\n\n-  Clone this repository with\n   ``git clone https://github.com/trustlines-network/contracts.git``\n   ``cd contracts``\n\n-  Install the deploy tool with ``pip install . -c constraints.txt``\n\ntl-deploy\n~~~~~~~~~\n\nThe tool ``tl-deploy`` allows you to deploy the relevant contracts.\n\nUse ``tl-deploy --help`` to find out about the relevant commands or read\nfurther in the `deploy documentation <https://github.com/trustlines-network/contracts/blob/develop/docs/deploy.md>`__\n\nDevelopment\n-----------\n\nTo start developing install the development dependencies into a venv\nwith ``pip install -c constraints.txt -r requirements.txt``\n\nCompiling\n~~~~~~~~~\n\nThe contracts can be compiled with ``populus compile``\n\nTesting\n~~~~~~~\n\nFor testing we use pytest with an ethereum tester plugin. The tests can\nbe run with ``python -m pytest tests``\n\nChange log\n----------\n\nSee `CHANGELOG <https://github.com/trustlines-network/contracts/blob/develop/CHANGELOG.rst>`_.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/trustlines-network/contracts", "keywords": "trustlines", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "trustlines-contracts", "package_url": "https://pypi.org/project/trustlines-contracts/", "platform": "", "project_url": "https://pypi.org/project/trustlines-contracts/", "project_urls": {"Homepage": "https://github.com/trustlines-network/contracts"}, "release_url": "https://pypi.org/project/trustlines-contracts/0.1.3/", "requires_dist": null, "requires_python": ">=3", "summary": "Smart Contracts for Trustlines-Network", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This documentation explains how to deploy Trustlines smart contracts,\nfor creating your own currency network and trustlines exchange. The\ncurrent documentation is written for an Ubuntu Linux system.</p>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<ul>\n<li>Python 3.6 or up and dev dependencies</li>\n<li><a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a></li>\n<li>git</li>\n</ul>\n<p>Run\n<tt>apt install <span class=\"pre\">build-essential</span> <span class=\"pre\">python3-dev</span> <span class=\"pre\">python3-virtualenv</span> virtualenv <span class=\"pre\">pkg-config</span> <span class=\"pre\">libssl-dev</span> automake autoconf libtool git</tt></p>\n<p>One of the dependencies used is the secp256k1 library. If you\u2019re using\npython 3.5 on linux you can skip the following step, since pypi contains\nbinary packages for secp256k1. If not, you\u2019ll have to run the following\nto install the secp256k1 C library:</p>\n<pre>git clone https://github.com/bitcoin-core/secp256k1.git\ncd secp256k1\n./autogen.sh\n./configure --enable-module-recovery\nmake\nsudo make install\nsudo ldconfig\n</pre>\n</div>\n<div id=\"deployment-tools\">\n<h2>Deployment tools</h2>\n<p>This section runs through the tooling necessary for deploying the\ncontracts.</p>\n<div id=\"ethereum-client\">\n<h3>Ethereum client</h3>\n<p>To deploy the Trustlines smart contracts, you need an ethereum client,\ne.g. geth or parity, which is synced to the chain you want to use. The\nclient needs to expose the JSON RPC endpoint. Additionally you need an\nunlocked account with enough ether to pay for the contract deployment.</p>\n</div>\n<div id=\"deployment-setup\">\n<h3>Deployment setup</h3>\n<ul>\n<li>Download and install the solidity compiler solc into bin for\ncompiling the contracts\n<tt>curl <span class=\"pre\">-L</span> <span class=\"pre\">-o</span> $HOME/bin/solc <span class=\"pre\">https://github.com/ethereum/solidity/releases/download/v0.4.21/solc-static-linux</span> &amp;&amp; chmod +x $HOME/bin/solc</tt></li>\n<li>Clone this repository with\n<tt>git clone <span class=\"pre\">https://github.com/trustlines-network/contracts.git</span></tt>\n<tt>cd contracts</tt></li>\n<li>Install the deploy tool with <tt>pip install . <span class=\"pre\">-c</span> constraints.txt</tt></li>\n</ul>\n</div>\n<div id=\"tl-deploy\">\n<h3>tl-deploy</h3>\n<p>The tool <tt><span class=\"pre\">tl-deploy</span></tt> allows you to deploy the relevant contracts.</p>\n<p>Use <tt><span class=\"pre\">tl-deploy</span> <span class=\"pre\">--help</span></tt> to find out about the relevant commands or read\nfurther in the <a href=\"https://github.com/trustlines-network/contracts/blob/develop/docs/deploy.md\" rel=\"nofollow\">deploy documentation</a></p>\n</div>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>To start developing install the development dependencies into a venv\nwith <tt>pip install <span class=\"pre\">-c</span> constraints.txt <span class=\"pre\">-r</span> requirements.txt</tt></p>\n<div id=\"compiling\">\n<h3>Compiling</h3>\n<p>The contracts can be compiled with <tt>populus compile</tt></p>\n</div>\n<div id=\"testing\">\n<h3>Testing</h3>\n<p>For testing we use pytest with an ethereum tester plugin. The tests can\nbe run with <tt>python <span class=\"pre\">-m</span> pytest tests</tt></p>\n</div>\n</div>\n<div id=\"change-log\">\n<h2>Change log</h2>\n<p>See <a href=\"https://github.com/trustlines-network/contracts/blob/develop/CHANGELOG.rst\" rel=\"nofollow\">CHANGELOG</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 4237678, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "21f00d08463e9e1d9f9dca0f07bdfde6", "sha256": "4274962b02f3f351457f4fbac3b56b233c5914162eb5879cae0dcade7c2d801e"}, "downloads": -1, "filename": "trustlines-contracts-0.1.2.tar.gz", "has_sig": false, "md5_digest": "21f00d08463e9e1d9f9dca0f07bdfde6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 47857, "upload_time": "2018-08-21T12:57:39", "upload_time_iso_8601": "2018-08-21T12:57:39.585523Z", "url": "https://files.pythonhosted.org/packages/33/ce/98d96de9ee904dfc4e6694fe793ce5e0eb7c97fdc47fe1043daa7b04fe8d/trustlines-contracts-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "272acd48f99156723201c60de8c94a8a", "sha256": "8b6efc717a5f90a308f26e4dd341d317f12d2cfc28826e6c43ef9aa33cc855bf"}, "downloads": -1, "filename": "trustlines-contracts-0.1.3.tar.gz", "has_sig": false, "md5_digest": "272acd48f99156723201c60de8c94a8a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 50799, "upload_time": "2018-09-04T13:40:46", "upload_time_iso_8601": "2018-09-04T13:40:46.059517Z", "url": "https://files.pythonhosted.org/packages/df/63/2d52296c8ff0b79d643e7d88bc61bc01fa00c5d7b3dd87c7f98affaa2c19/trustlines-contracts-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "272acd48f99156723201c60de8c94a8a", "sha256": "8b6efc717a5f90a308f26e4dd341d317f12d2cfc28826e6c43ef9aa33cc855bf"}, "downloads": -1, "filename": "trustlines-contracts-0.1.3.tar.gz", "has_sig": false, "md5_digest": "272acd48f99156723201c60de8c94a8a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 50799, "upload_time": "2018-09-04T13:40:46", "upload_time_iso_8601": "2018-09-04T13:40:46.059517Z", "url": "https://files.pythonhosted.org/packages/df/63/2d52296c8ff0b79d643e7d88bc61bc01fa00c5d7b3dd87c7f98affaa2c19/trustlines-contracts-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:46:34 2020"}