{"info": {"author": "Matthew Einhorn", "author_email": "moiein2000@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries"], "description": "ThorCam\n==========\n\n[![Github Build Status](https://github.com/matham/thorcam/workflows/Python%20application/badge.svg)](https://github.com/matham/thorcam/actions)\n\nPython interface for the Thor scientific Cameras using .Net.\n\nFor more information and to get started: https://matham.github.io/thorcam/index.html.\n\nTo install https://matham.github.io/thorcam/installation.html.\n\nBasic example\n-------------\n\nFirst create a subclass that prints the camera results:\n\n```python\nfrom thorcam.camera import ThorCam\nclass MyThorCam(ThorCam):\n    def received_camera_response(self, msg, value):\n        super(MyThorCam, self).received_camera_response(msg, value)\n        if msg == 'image':\n            return\n        print('Received \"{}\" with value \"{}\"'.format(msg, value))\n    def got_image(self, image, count, queued_count, t):\n        print('Received image \"{}\" with time \"{}\" and counts \"{}\", \"{}\"'\n              .format(image, t, count, queued_count))\n```\n\nThen use the camera:\n\n```python\n>>> # create camera\n>>> cam = MyThorCam()\n<__main__.MyThorCam at 0x25a72f6a748>\n>>> # start the server etc.\n>>> cam.start_cam_process()\n>>> # get list of attached cams\n>>> cam.refresh_cameras()\nReceived \"serials\" with value \"['05761']\"\n>>> # open the camera\n>>> cam.open_camera('05761')\nReceived \"settings\" with value \"{'binning_x': 1, 'binning_x_range': [1, 24], ...\"\nReceived \"cam_open\" with value \"None\"\n>>> cam.exposure_range\n[0.0, 1000000.0]\n>>> cam.exposure_ms\n241.948\n>>> # update the exposure value\n>>> cam.set_setting('exposure_ms', 150)\nReceived \"settings\" with value \"{'exposure_ms': 150.0}\"\n>>> cam.exposure_ms\n150.0\n>>> # now play the camera\n>>> cam.play_camera()\nReceived \"playing\" with value \"True\"\nReceived image \"<ffpyplayer.pic.Image object at 0x000001D1D8D67900>\" with time \"2e-07\" and counts \"1\", \"1\"\nReceived image \"<ffpyplayer.pic.Image object at 0x000001D1D8D67990>\" with time \"0.2310473\" and counts \"2\", \"1\"\nReceived image \"<ffpyplayer.pic.Image object at 0x000001D1D8D67A68>\" with time \"0.4735178\" and counts \"3\", \"1\"\nReceived image \"<ffpyplayer.pic.Image object at 0x000001D1D8D67B40>\" with time \"0.7157285\" and counts \"4\", \"1\"\nReceived image \"<ffpyplayer.pic.Image object at 0x000001D1D8D67C18>\" with time \"0.9583721\" and counts \"5\", \"1\"\n>>> # now stop playing\n>>> cam.stop_playing_camera()\nReceived \"playing\" with value \"False\"\n>>> # close the camera\n>>> cam.close_camera()\nReceived \"cam_closed\" with value \"None\"\n>>> # close the server and everything\n>>> cam.stop_cam_process(join=True)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/matham/thorcam", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "thorcam", "package_url": "https://pypi.org/project/thorcam/", "platform": "", "project_url": "https://pypi.org/project/thorcam/", "project_urls": {"Bug Reports": "https://github.com/matham/thorcam/issues", "Homepage": "https://github.com/matham/thorcam", "Source": "https://github.com/matham/thorcam"}, "release_url": "https://pypi.org/project/thorcam/0.1.1/", "requires_dist": ["ffpyplayer", "pythonnet", "numpy", "ruamel.yaml"], "requires_python": "", "summary": "Python interface to the .NET Thor cameras.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ThorCam</h1>\n<p><a href=\"https://github.com/matham/thorcam/actions\" rel=\"nofollow\"><img alt=\"Github Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a222467d42ba820f92a7461f0445a39efab30903/68747470733a2f2f6769746875622e636f6d2f6d617468616d2f74686f7263616d2f776f726b666c6f77732f507974686f6e2532306170706c69636174696f6e2f62616467652e737667\"></a></p>\n<p>Python interface for the Thor scientific Cameras using .Net.</p>\n<p>For more information and to get started: <a href=\"https://matham.github.io/thorcam/index.html\" rel=\"nofollow\">https://matham.github.io/thorcam/index.html</a>.</p>\n<p>To install <a href=\"https://matham.github.io/thorcam/installation.html\" rel=\"nofollow\">https://matham.github.io/thorcam/installation.html</a>.</p>\n<h2>Basic example</h2>\n<p>First create a subclass that prints the camera results:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">thorcam.camera</span> <span class=\"kn\">import</span> <span class=\"n\">ThorCam</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyThorCam</span><span class=\"p\">(</span><span class=\"n\">ThorCam</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">received_camera_response</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">MyThorCam</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">received_camera_response</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">msg</span> <span class=\"o\">==</span> <span class=\"s1\">'image'</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Received \"</span><span class=\"si\">{}</span><span class=\"s1\">\" with value \"</span><span class=\"si\">{}</span><span class=\"s1\">\"'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">))</span>\n    <span class=\"k\">def</span> <span class=\"nf\">got_image</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"p\">,</span> <span class=\"n\">queued_count</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Received image \"</span><span class=\"si\">{}</span><span class=\"s1\">\" with time \"</span><span class=\"si\">{}</span><span class=\"s1\">\" and counts \"</span><span class=\"si\">{}</span><span class=\"s1\">\", \"</span><span class=\"si\">{}</span><span class=\"s1\">\"'</span>\n              <span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"p\">,</span> <span class=\"n\">queued_count</span><span class=\"p\">))</span>\n</pre>\n<p>Then use the camera:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># create camera</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cam</span> <span class=\"o\">=</span> <span class=\"n\">MyThorCam</span><span class=\"p\">()</span>\n<span class=\"o\">&lt;</span><span class=\"n\">__main__</span><span class=\"o\">.</span><span class=\"n\">MyThorCam</span> <span class=\"n\">at</span> <span class=\"mh\">0x25a72f6a748</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># start the server etc.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">start_cam_process</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># get list of attached cams</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">refresh_cameras</span><span class=\"p\">()</span>\n<span class=\"n\">Received</span> <span class=\"s2\">\"serials\"</span> <span class=\"k\">with</span> <span class=\"n\">value</span> <span class=\"s2\">\"['05761']\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># open the camera</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">open_camera</span><span class=\"p\">(</span><span class=\"s1\">'05761'</span><span class=\"p\">)</span>\n<span class=\"n\">Received</span> <span class=\"s2\">\"settings\"</span> <span class=\"k\">with</span> <span class=\"n\">value</span> <span class=\"s2\">\"{'binning_x': 1, 'binning_x_range': [1, 24], ...\"</span>\n<span class=\"n\">Received</span> <span class=\"s2\">\"cam_open\"</span> <span class=\"k\">with</span> <span class=\"n\">value</span> <span class=\"s2\">\"None\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">exposure_range</span>\n<span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">1000000.0</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">exposure_ms</span>\n<span class=\"mf\">241.948</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># update the exposure value</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">set_setting</span><span class=\"p\">(</span><span class=\"s1\">'exposure_ms'</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">)</span>\n<span class=\"n\">Received</span> <span class=\"s2\">\"settings\"</span> <span class=\"k\">with</span> <span class=\"n\">value</span> <span class=\"s2\">\"{'exposure_ms': 150.0}\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">exposure_ms</span>\n<span class=\"mf\">150.0</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># now play the camera</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">play_camera</span><span class=\"p\">()</span>\n<span class=\"n\">Received</span> <span class=\"s2\">\"playing\"</span> <span class=\"k\">with</span> <span class=\"n\">value</span> <span class=\"s2\">\"True\"</span>\n<span class=\"n\">Received</span> <span class=\"n\">image</span> <span class=\"s2\">\"&lt;ffpyplayer.pic.Image object at 0x000001D1D8D67900&gt;\"</span> <span class=\"k\">with</span> <span class=\"n\">time</span> <span class=\"s2\">\"2e-07\"</span> <span class=\"ow\">and</span> <span class=\"n\">counts</span> <span class=\"s2\">\"1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"1\"</span>\n<span class=\"n\">Received</span> <span class=\"n\">image</span> <span class=\"s2\">\"&lt;ffpyplayer.pic.Image object at 0x000001D1D8D67990&gt;\"</span> <span class=\"k\">with</span> <span class=\"n\">time</span> <span class=\"s2\">\"0.2310473\"</span> <span class=\"ow\">and</span> <span class=\"n\">counts</span> <span class=\"s2\">\"2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"1\"</span>\n<span class=\"n\">Received</span> <span class=\"n\">image</span> <span class=\"s2\">\"&lt;ffpyplayer.pic.Image object at 0x000001D1D8D67A68&gt;\"</span> <span class=\"k\">with</span> <span class=\"n\">time</span> <span class=\"s2\">\"0.4735178\"</span> <span class=\"ow\">and</span> <span class=\"n\">counts</span> <span class=\"s2\">\"3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"1\"</span>\n<span class=\"n\">Received</span> <span class=\"n\">image</span> <span class=\"s2\">\"&lt;ffpyplayer.pic.Image object at 0x000001D1D8D67B40&gt;\"</span> <span class=\"k\">with</span> <span class=\"n\">time</span> <span class=\"s2\">\"0.7157285\"</span> <span class=\"ow\">and</span> <span class=\"n\">counts</span> <span class=\"s2\">\"4\"</span><span class=\"p\">,</span> <span class=\"s2\">\"1\"</span>\n<span class=\"n\">Received</span> <span class=\"n\">image</span> <span class=\"s2\">\"&lt;ffpyplayer.pic.Image object at 0x000001D1D8D67C18&gt;\"</span> <span class=\"k\">with</span> <span class=\"n\">time</span> <span class=\"s2\">\"0.9583721\"</span> <span class=\"ow\">and</span> <span class=\"n\">counts</span> <span class=\"s2\">\"5\"</span><span class=\"p\">,</span> <span class=\"s2\">\"1\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># now stop playing</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">stop_playing_camera</span><span class=\"p\">()</span>\n<span class=\"n\">Received</span> <span class=\"s2\">\"playing\"</span> <span class=\"k\">with</span> <span class=\"n\">value</span> <span class=\"s2\">\"False\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># close the camera</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">close_camera</span><span class=\"p\">()</span>\n<span class=\"n\">Received</span> <span class=\"s2\">\"cam_closed\"</span> <span class=\"k\">with</span> <span class=\"n\">value</span> <span class=\"s2\">\"None\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># close the server and everything</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cam</span><span class=\"o\">.</span><span class=\"n\">stop_cam_process</span><span class=\"p\">(</span><span class=\"n\">join</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6269741, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2322279a3c3034ddef62cd1d573dbf36", "sha256": "07c68168f6ead7c80a1d7f07b9e4bfcab1b78fd705f0799e2be38292e4b3756f"}, "downloads": -1, "filename": "thorcam-0.1.0-cp36-cp36m-win32.whl", "has_sig": false, "md5_digest": "2322279a3c3034ddef62cd1d573dbf36", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 12935233, "upload_time": "2019-11-14T23:58:23", "upload_time_iso_8601": "2019-11-14T23:58:23.182187Z", "url": "https://files.pythonhosted.org/packages/bb/71/986cfee2001135a3fd8cd525845d74fe7bf4cc2fadef6503cc1e47a232d4/thorcam-0.1.0-cp36-cp36m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "818a3745e907c5d7c4125033b1c2690d", "sha256": "639e570f057e496961ce273dc94bb2c1755150b71730c56a53ef2ac07e605d75"}, "downloads": -1, "filename": "thorcam-0.1.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "818a3745e907c5d7c4125033b1c2690d", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 15171794, "upload_time": "2019-11-14T23:58:19", "upload_time_iso_8601": "2019-11-14T23:58:19.140088Z", "url": "https://files.pythonhosted.org/packages/82/e2/e2192b00463bdad06db22cda56584b5f6b26f3f7fe15d572de61cfc390bc/thorcam-0.1.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ec6a742dea94a38968a401d8ebfbc5f", "sha256": "806c7a883ab377ac3c0f0365ebe13045a055fb039f73d7f15aa99e2e19a18f6f"}, "downloads": -1, "filename": "thorcam-0.1.0-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "0ec6a742dea94a38968a401d8ebfbc5f", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 12935233, "upload_time": "2019-11-14T23:58:30", "upload_time_iso_8601": "2019-11-14T23:58:30.782295Z", "url": "https://files.pythonhosted.org/packages/d6/19/17e4a3266194e1e2320ac280ec42a5a93876ced63e9e64444f3b14e6b696/thorcam-0.1.0-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a18f236fda5b2476c4b9d51db93f8961", "sha256": "8323f3fe0c8c99f8b826875d28148679d8707fedb5da81e185ad460582341f3a"}, "downloads": -1, "filename": "thorcam-0.1.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "a18f236fda5b2476c4b9d51db93f8961", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 15171795, "upload_time": "2019-11-14T23:58:27", "upload_time_iso_8601": "2019-11-14T23:58:27.358874Z", "url": "https://files.pythonhosted.org/packages/e1/22/cc6c8f13a0481c33a74429af6fe1e8f21069586ea04a87f26399804f42d8/thorcam-0.1.0-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e39667346896edcb6383355986f9c0c3", "sha256": "222155d4c60d03d70a0900b9b353287efbf548d04960015f6eb76de049a35b7d"}, "downloads": -1, "filename": "thorcam-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e39667346896edcb6383355986f9c0c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14558, "upload_time": "2019-11-15T01:56:31", "upload_time_iso_8601": "2019-11-15T01:56:31.739114Z", "url": "https://files.pythonhosted.org/packages/a0/dd/9f7ff243616ba84c434028f1d51f1f7c692a5282eea965f0d02d2d453683/thorcam-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e25820c47f0d3de334db608e5d2729cc", "sha256": "366a3132c116213198897e2d73b704140d7d7d1892c7222127823f516f78a7ea"}, "downloads": -1, "filename": "thorcam-0.1.1-cp36-cp36m-win32.whl", "has_sig": false, "md5_digest": "e25820c47f0d3de334db608e5d2729cc", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 12935421, "upload_time": "2019-12-09T22:53:59", "upload_time_iso_8601": "2019-12-09T22:53:59.573318Z", "url": "https://files.pythonhosted.org/packages/d3/8d/d5c89aa097ad882fe600efcd964c1f591e5691a15b77e9fb96897cf1bae5/thorcam-0.1.1-cp36-cp36m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b73f1567e10f9db1a6fb5d4aed375b95", "sha256": "d1970247bf9be2e9ecdb3dcc4b141b379e9534412dcdab857f064a1d512e73c6"}, "downloads": -1, "filename": "thorcam-0.1.1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "b73f1567e10f9db1a6fb5d4aed375b95", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 15171983, "upload_time": "2019-12-09T22:53:53", "upload_time_iso_8601": "2019-12-09T22:53:53.529475Z", "url": "https://files.pythonhosted.org/packages/29/3c/7ab12e6ba4d95a43ff262959e38719e245648f9ca20861d494e93a410013/thorcam-0.1.1-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1f0d79141ca8fefa6dd589906c73070", "sha256": "fb4f14dac723e9cfb66f6451a1ecf80914a7115d70b87b1e35494903ee649d16"}, "downloads": -1, "filename": "thorcam-0.1.1-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "c1f0d79141ca8fefa6dd589906c73070", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 12935421, "upload_time": "2019-12-09T22:54:11", "upload_time_iso_8601": "2019-12-09T22:54:11.762826Z", "url": "https://files.pythonhosted.org/packages/f9/32/4e8611e63c60496331854618a06a26ad3a2e8df011b17ecd57ff0d981d53/thorcam-0.1.1-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "64957008d97150d1e89f2d173d02805a", "sha256": "8567d61a3b9dfced1041c2ed475fb2c552aca53c5b472b37d3be582243205a6d"}, "downloads": -1, "filename": "thorcam-0.1.1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "64957008d97150d1e89f2d173d02805a", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 15171981, "upload_time": "2019-12-09T22:54:06", "upload_time_iso_8601": "2019-12-09T22:54:06.158318Z", "url": "https://files.pythonhosted.org/packages/98/ac/e7dfcde9eec0654180fbf6f46d963b91a34ddbcd83073a8cd6a8de073eeb/thorcam-0.1.1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4d65e9a9eba9c6665d496c09f9841d6", "sha256": "7b8ba1652a07a44ca63ed6f88d4ca9fe756872bfca7728720dfdb478567b3cec"}, "downloads": -1, "filename": "thorcam-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a4d65e9a9eba9c6665d496c09f9841d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14752, "upload_time": "2019-12-09T22:54:14", "upload_time_iso_8601": "2019-12-09T22:54:14.407076Z", "url": "https://files.pythonhosted.org/packages/1b/83/373609b060b76703545dbc3bfddb752c7a85863523cbc7cd455827640eab/thorcam-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e25820c47f0d3de334db608e5d2729cc", "sha256": "366a3132c116213198897e2d73b704140d7d7d1892c7222127823f516f78a7ea"}, "downloads": -1, "filename": "thorcam-0.1.1-cp36-cp36m-win32.whl", "has_sig": false, "md5_digest": "e25820c47f0d3de334db608e5d2729cc", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 12935421, "upload_time": "2019-12-09T22:53:59", "upload_time_iso_8601": "2019-12-09T22:53:59.573318Z", "url": "https://files.pythonhosted.org/packages/d3/8d/d5c89aa097ad882fe600efcd964c1f591e5691a15b77e9fb96897cf1bae5/thorcam-0.1.1-cp36-cp36m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b73f1567e10f9db1a6fb5d4aed375b95", "sha256": "d1970247bf9be2e9ecdb3dcc4b141b379e9534412dcdab857f064a1d512e73c6"}, "downloads": -1, "filename": "thorcam-0.1.1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "b73f1567e10f9db1a6fb5d4aed375b95", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 15171983, "upload_time": "2019-12-09T22:53:53", "upload_time_iso_8601": "2019-12-09T22:53:53.529475Z", "url": "https://files.pythonhosted.org/packages/29/3c/7ab12e6ba4d95a43ff262959e38719e245648f9ca20861d494e93a410013/thorcam-0.1.1-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1f0d79141ca8fefa6dd589906c73070", "sha256": "fb4f14dac723e9cfb66f6451a1ecf80914a7115d70b87b1e35494903ee649d16"}, "downloads": -1, "filename": "thorcam-0.1.1-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "c1f0d79141ca8fefa6dd589906c73070", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 12935421, "upload_time": "2019-12-09T22:54:11", "upload_time_iso_8601": "2019-12-09T22:54:11.762826Z", "url": "https://files.pythonhosted.org/packages/f9/32/4e8611e63c60496331854618a06a26ad3a2e8df011b17ecd57ff0d981d53/thorcam-0.1.1-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "64957008d97150d1e89f2d173d02805a", "sha256": "8567d61a3b9dfced1041c2ed475fb2c552aca53c5b472b37d3be582243205a6d"}, "downloads": -1, "filename": "thorcam-0.1.1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "64957008d97150d1e89f2d173d02805a", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 15171981, "upload_time": "2019-12-09T22:54:06", "upload_time_iso_8601": "2019-12-09T22:54:06.158318Z", "url": "https://files.pythonhosted.org/packages/98/ac/e7dfcde9eec0654180fbf6f46d963b91a34ddbcd83073a8cd6a8de073eeb/thorcam-0.1.1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4d65e9a9eba9c6665d496c09f9841d6", "sha256": "7b8ba1652a07a44ca63ed6f88d4ca9fe756872bfca7728720dfdb478567b3cec"}, "downloads": -1, "filename": "thorcam-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a4d65e9a9eba9c6665d496c09f9841d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14752, "upload_time": "2019-12-09T22:54:14", "upload_time_iso_8601": "2019-12-09T22:54:14.407076Z", "url": "https://files.pythonhosted.org/packages/1b/83/373609b060b76703545dbc3bfddb752c7a85863523cbc7cd455827640eab/thorcam-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:52 2020"}