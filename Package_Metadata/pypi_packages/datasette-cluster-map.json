{"info": {"author": "Simon Willison", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# datasette-cluster-map\n\n[![PyPI](https://img.shields.io/pypi/v/datasette-cluster-map.svg)](https://pypi.python.org/pypi/datasette-cluster-map)\n[![CircleCI](https://circleci.com/gh/simonw/datasette-cluster-map.svg?style=svg)](https://circleci.com/gh/simonw/datasette-cluster-map)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/simonw/datasette-cluster-map/blob/master/LICENSE)\n\n\nA [Datasette plugin](http://datasette.readthedocs.io/en/latest/plugins.html) that detects tables with `latitude` and `longitude` columns and then plots them on a map using [Leaflet.markercluster](https://github.com/Leaflet/Leaflet.markercluster).\n\nMore about this project: [Datasette plugins, and building a clustered map visualization](https://simonwillison.net/2018/Apr/20/datasette-plugins/)\n\n## Demo\n\n[global-power-plants.datasettes.com](https://global-power-plants.datasettes.com/global-power-plants/global-power-plants) hosts a demo of this plugin running against a database of 33,000 power plants around the world.\n\n![Cluster map demo](https://static.simonwillison.net/static/2020/global-power-plants.png)\n\n## Installation\n\nRun `pip install datasette-cluster-map` to add this plugin to your Datasette virtual environment. Datasette will automatically load the plugin if it is installed in this way.\n\nIf you are deploying using the `datasette publish` command you can use the `--install` option:\n\n    datasette publish cloudrun mydb.db --install=datasette-cluster-map\n\nIf any of your tables have a `latitude` and `longitude` column, a map will be automatically displayed.\n\nIf your columns are called something else you can configure the column names using [plugin configuration](https://datasette.readthedocs.io/en/stable/plugins.html#plugin-configuration) in a `metadata.json` file. For example, if all of your columns are called `xlat` and `xlng` you can create a `metadata.json` file like this:\n\n    {\n        \"title\": \"Regular metadata keys can go here too\",\n        \"plugins\": {\n            \"datasette-cluster-map\": {\n                \"latitude_column\": \"xlat\",\n                \"longitude_column\": \"xlng\"\n            }\n        }\n    }\n\nThen run Datasette like this:\n\n    datasette mydata.db -m metadata.json\n\nThis will configure the required column names for every database loaded by that Datasette instance.\n\nIf you want to customize the column names for just one table in one database, you can do something like this:\n\n    {\n        \"databases\": {\n            \"polar-bears\": {\n                \"tables\": {\n                    \"USGS_WC_eartag_deployments_2009-2011\": {\n                        \"plugins\": {\n                            \"datasette-cluster-map\": {\n                                \"latitude_column\": \"Capture Latitude\",\n                                \"longitude_column\": \"Capture Longitude\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\nYou can also use a custom SQL query to rename those columns to `latitude` and `longitude`, [for example](https://polar-bears.now.sh/polar-bears?sql=select+*%2C%0D%0A++++%22Capture+Latitude%22+as+latitude%2C%0D%0A++++%22Capture+Longitude%22+as+longitude%0D%0Afrom+%5BUSGS_WC_eartag_deployments_2009-2011%5D):\n\n    select *,\n        \"Capture Latitude\" as latitude,\n        \"Capture Longitude\" as longitude\n    from [USGS_WC_eartag_deployments_2009-2011]\n\n## How I deployed the demo\n\n    datasette publish cloudrun global-power-plants.db \\\n        --service global-power-plants \\\n        --metadata metadata.json \\\n        --install=datasette-cluster-map \\\n        --extra-options=\"--config facet_time_limit_ms:1000\"\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/simonw/datasette-cluster-map", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "datasette-cluster-map", "package_url": "https://pypi.org/project/datasette-cluster-map/", "platform": "", "project_url": "https://pypi.org/project/datasette-cluster-map/", "project_urls": {"Homepage": "https://github.com/simonw/datasette-cluster-map"}, "release_url": "https://pypi.org/project/datasette-cluster-map/0.9.1/", "requires_dist": ["datasette"], "requires_python": "", "summary": "Datasette plugin that shows a cluster map for any data with latitude/longitude columns", "version": "0.9.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>datasette-cluster-map</h1>\n<p><a href=\"https://pypi.python.org/pypi/datasette-cluster-map\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ec6cf5901e09fe901247d0cbb5632d8db850df9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6461746173657474652d636c75737465722d6d61702e737667\"></a>\n<a href=\"https://circleci.com/gh/simonw/datasette-cluster-map\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0db8aa26a409a30db096e44130772b426f677c8a/68747470733a2f2f636972636c6563692e636f6d2f67682f73696d6f6e772f6461746173657474652d636c75737465722d6d61702e7376673f7374796c653d737667\"></a>\n<a href=\"https://github.com/simonw/datasette-cluster-map/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bad0ad2a7195b40874e3a10488118122d89489fd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322e302d626c75652e737667\"></a></p>\n<p>A <a href=\"http://datasette.readthedocs.io/en/latest/plugins.html\" rel=\"nofollow\">Datasette plugin</a> that detects tables with <code>latitude</code> and <code>longitude</code> columns and then plots them on a map using <a href=\"https://github.com/Leaflet/Leaflet.markercluster\" rel=\"nofollow\">Leaflet.markercluster</a>.</p>\n<p>More about this project: <a href=\"https://simonwillison.net/2018/Apr/20/datasette-plugins/\" rel=\"nofollow\">Datasette plugins, and building a clustered map visualization</a></p>\n<h2>Demo</h2>\n<p><a href=\"https://global-power-plants.datasettes.com/global-power-plants/global-power-plants\" rel=\"nofollow\">global-power-plants.datasettes.com</a> hosts a demo of this plugin running against a database of 33,000 power plants around the world.</p>\n<p><img alt=\"Cluster map demo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8e48ad345250676af3ab9ddd4fa332469ca796fb/68747470733a2f2f7374617469632e73696d6f6e77696c6c69736f6e2e6e65742f7374617469632f323032302f676c6f62616c2d706f7765722d706c616e74732e706e67\"></p>\n<h2>Installation</h2>\n<p>Run <code>pip install datasette-cluster-map</code> to add this plugin to your Datasette virtual environment. Datasette will automatically load the plugin if it is installed in this way.</p>\n<p>If you are deploying using the <code>datasette publish</code> command you can use the <code>--install</code> option:</p>\n<pre><code>datasette publish cloudrun mydb.db --install=datasette-cluster-map\n</code></pre>\n<p>If any of your tables have a <code>latitude</code> and <code>longitude</code> column, a map will be automatically displayed.</p>\n<p>If your columns are called something else you can configure the column names using <a href=\"https://datasette.readthedocs.io/en/stable/plugins.html#plugin-configuration\" rel=\"nofollow\">plugin configuration</a> in a <code>metadata.json</code> file. For example, if all of your columns are called <code>xlat</code> and <code>xlng</code> you can create a <code>metadata.json</code> file like this:</p>\n<pre><code>{\n    \"title\": \"Regular metadata keys can go here too\",\n    \"plugins\": {\n        \"datasette-cluster-map\": {\n            \"latitude_column\": \"xlat\",\n            \"longitude_column\": \"xlng\"\n        }\n    }\n}\n</code></pre>\n<p>Then run Datasette like this:</p>\n<pre><code>datasette mydata.db -m metadata.json\n</code></pre>\n<p>This will configure the required column names for every database loaded by that Datasette instance.</p>\n<p>If you want to customize the column names for just one table in one database, you can do something like this:</p>\n<pre><code>{\n    \"databases\": {\n        \"polar-bears\": {\n            \"tables\": {\n                \"USGS_WC_eartag_deployments_2009-2011\": {\n                    \"plugins\": {\n                        \"datasette-cluster-map\": {\n                            \"latitude_column\": \"Capture Latitude\",\n                            \"longitude_column\": \"Capture Longitude\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre>\n<p>You can also use a custom SQL query to rename those columns to <code>latitude</code> and <code>longitude</code>, <a href=\"https://polar-bears.now.sh/polar-bears?sql=select+*%2C%0D%0A++++%22Capture+Latitude%22+as+latitude%2C%0D%0A++++%22Capture+Longitude%22+as+longitude%0D%0Afrom+%5BUSGS_WC_eartag_deployments_2009-2011%5D\" rel=\"nofollow\">for example</a>:</p>\n<pre><code>select *,\n    \"Capture Latitude\" as latitude,\n    \"Capture Longitude\" as longitude\nfrom [USGS_WC_eartag_deployments_2009-2011]\n</code></pre>\n<h2>How I deployed the demo</h2>\n<pre><code>datasette publish cloudrun global-power-plants.db \\\n    --service global-power-plants \\\n    --metadata metadata.json \\\n    --install=datasette-cluster-map \\\n    --extra-options=\"--config facet_time_limit_ms:1000\"\n</code></pre>\n\n          </div>"}, "last_serial": 6974653, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "8304978b5c631458237453ee01d5c052", "sha256": "ceb3c89c0dbdd141c1551780765274e0e691bc2a53ef9d0ffbadd47d9a5c39ee"}, "downloads": -1, "filename": "datasette-cluster-map-0.1.tar.gz", "has_sig": false, "md5_digest": "8304978b5c631458237453ee01d5c052", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2502, "upload_time": "2018-04-19T15:34:57", "upload_time_iso_8601": "2018-04-19T15:34:57.521614Z", "url": "https://files.pythonhosted.org/packages/a4/9b/22e06863695e1f903324f670c6521e41e9ec6ee0e32d2fbf08fdff070d78/datasette-cluster-map-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "fecb52f06cae95163ad4dee0667f9f91", "sha256": "7d1611176bee2860b318c7dcf24fdcb6bf3eb76ae3df89feed7d37b98ef8b8f5"}, "downloads": -1, "filename": "datasette-cluster-map-0.2.tar.gz", "has_sig": false, "md5_digest": "fecb52f06cae95163ad4dee0667f9f91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3869, "upload_time": "2018-04-20T13:05:06", "upload_time_iso_8601": "2018-04-20T13:05:06.144207Z", "url": "https://files.pythonhosted.org/packages/30/ec/6c4ca07edcb64db6f309500f10dcb3bc8b6d632c314e71ed2e355cd54b2a/datasette-cluster-map-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "42f316ab4e300e1ab649c3572c130f3a", "sha256": "895e623374c3c6f45791640a464229ada4e14033ab0dc0beadd64f5a5f9be9f0"}, "downloads": -1, "filename": "datasette-cluster-map-0.3.tar.gz", "has_sig": false, "md5_digest": "42f316ab4e300e1ab649c3572c130f3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4030, "upload_time": "2018-04-20T13:35:24", "upload_time_iso_8601": "2018-04-20T13:35:24.309180Z", "url": "https://files.pythonhosted.org/packages/f9/f7/7549196bcedd6b92b4201c07c263202bbaea4f8a944a41f722ab781b50bd/datasette-cluster-map-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "ba9fceeef2bb71f32a96af80762793cd", "sha256": "9a37d5abe6ccabee9a9ba283065a1e674b3921d12fbbc94297c05e5cb8eaa8fc"}, "downloads": -1, "filename": "datasette-cluster-map-0.4.tar.gz", "has_sig": false, "md5_digest": "ba9fceeef2bb71f32a96af80762793cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4166, "upload_time": "2018-04-20T13:49:24", "upload_time_iso_8601": "2018-04-20T13:49:24.386843Z", "url": "https://files.pythonhosted.org/packages/b3/98/a88b5d89ed5a20707f6b64f71fb47d6005b3824a61fb596ddd41de8385bd/datasette-cluster-map-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "40bb82a98106b0a65c0a0ca4b4abfefd", "sha256": "ef7d06094a39c5a8997f5dd822923c89cdcf806dd752c036ac5ebdee14c61cfd"}, "downloads": -1, "filename": "datasette_cluster_map-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "40bb82a98106b0a65c0a0ca4b4abfefd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9860, "upload_time": "2019-01-18T06:40:21", "upload_time_iso_8601": "2019-01-18T06:40:21.856363Z", "url": "https://files.pythonhosted.org/packages/3e/83/f4800037f89e264ccca40ed78647b7dfa178171f5401da74e92832e4d266/datasette_cluster_map-0.5-py3-none-any.whl", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "d24f9b2023f5fbfcd0748f59b372e1b6", "sha256": "e641a53714600afabc42d887d6aa835a259a08a8748a014674c8e2434290bf11"}, "downloads": -1, "filename": "datasette_cluster_map-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d24f9b2023f5fbfcd0748f59b372e1b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9798, "upload_time": "2019-05-09T17:07:23", "upload_time_iso_8601": "2019-05-09T17:07:23.285535Z", "url": "https://files.pythonhosted.org/packages/5d/7e/af8488642169081bc21e53ff151ea075dd41ea29545eb7e3a99e023637a2/datasette_cluster_map-0.6-py3-none-any.whl", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "cce5ab48938cebffe0c0e33ec5fe2127", "sha256": "8254cf4f74a60a4a2e6e67b8af950dca7024b9cb7fac20b610314af9dbd0ac51"}, "downloads": -1, "filename": "datasette_cluster_map-0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "cce5ab48938cebffe0c0e33ec5fe2127", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9828, "upload_time": "2019-11-02T03:35:40", "upload_time_iso_8601": "2019-11-02T03:35:40.426537Z", "url": "https://files.pythonhosted.org/packages/01/a3/b540d32a56adbf01eb9904fb3e5b6a89724b4e265f5aa800e101122acac1/datasette_cluster_map-0.7-py3-none-any.whl", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "061f1f77edbd251ed9ac19b846109730", "sha256": "3f2c5d2f25ccd71c9c8dbde67e0640abb08ffcc358f98abef2afc877d6a12473"}, "downloads": -1, "filename": "datasette_cluster_map-0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "061f1f77edbd251ed9ac19b846109730", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9836, "upload_time": "2019-11-18T22:41:33", "upload_time_iso_8601": "2019-11-18T22:41:33.924845Z", "url": "https://files.pythonhosted.org/packages/7f/06/154864c4a54a0a5ab8f64d35f02cd5e81d3c1fa16cb4d19612aa3ef63747/datasette_cluster_map-0.8-py3-none-any.whl", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "3f3f4a93f7ee762035e553103c6375dc", "sha256": "75383d068e6f6f2abd5ed15fc034ae011052795e7766f14beb7ba88576be0f31"}, "downloads": -1, "filename": "datasette_cluster_map-0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "3f3f4a93f7ee762035e553103c6375dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9882, "upload_time": "2020-02-21T20:04:03", "upload_time_iso_8601": "2020-02-21T20:04:03.066699Z", "url": "https://files.pythonhosted.org/packages/cd/53/d90355b7c3c0d43f4c1567f79d47d225149d9c8049baf39c1a421a91418a/datasette_cluster_map-0.9-py3-none-any.whl", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "5cf73a75634411b3a8c55ae0817a2ba9", "sha256": "555c5b317607a1562d21dc5a0400ed0ecfadb8baa59ba9b54487dd6430c491f1"}, "downloads": -1, "filename": "datasette_cluster_map-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5cf73a75634411b3a8c55ae0817a2ba9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9975, "upload_time": "2020-04-08T02:36:56", "upload_time_iso_8601": "2020-04-08T02:36:56.775570Z", "url": "https://files.pythonhosted.org/packages/cc/0a/b896ee4676066434885b1fe8e2431380a43d8e0d19b17e5f6af5cf989ce8/datasette_cluster_map-0.9.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5cf73a75634411b3a8c55ae0817a2ba9", "sha256": "555c5b317607a1562d21dc5a0400ed0ecfadb8baa59ba9b54487dd6430c491f1"}, "downloads": -1, "filename": "datasette_cluster_map-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5cf73a75634411b3a8c55ae0817a2ba9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9975, "upload_time": "2020-04-08T02:36:56", "upload_time_iso_8601": "2020-04-08T02:36:56.775570Z", "url": "https://files.pythonhosted.org/packages/cc/0a/b896ee4676066434885b1fe8e2431380a43d8e0d19b17e5f6af5cf989ce8/datasette_cluster_map-0.9.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:40:11 2020"}