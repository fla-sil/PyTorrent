{"info": {"author": "Ron Chang", "author_email": "ron.hsien.chang@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Web Develop Kits\n<a href=\"https://www.buymeacoffee.com/ronchang\" target=\"_blank\"><img src=\"https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\" alt=\"Buy Me A Coffee\" style=\"height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;\" align=\"right\"></a>\n`python_requires>=3.6`\n\n# dbkits\n##\n\n### Utils\n\n#### `snake2camel` and `camel2snake`\n> snake_case and CamelCase Converter, round way to convert style string\n\n```python\nfrom dbkits import Utils\nresult = Utils.snake2camel('my_model_name')\n# result:\n# MyModelName\n```\n\n```python\nfrom dbkits import Utils\nresult = Utils.camel2snake('MyModelName')\n# result:\n# 'my_model_name'\n```\n---\n\n## Slicer\n\n#### `split_list`, `split_dict` and `split_number`\n> Tow different ways to split a container or a number.\n\n#### 1. How to use \"split_list\"\n*`Note: \"slice_length\" or \"container_length\" is a control number either one of them is necessary`*\n\n```python\nfrom webdevkits import Slicer\n\nSlicer.split_list(\n    input_data,  # targets, required a list\n    slice_length=None,  # setting to make every slice as this number.\n    container_length=None,  # setting to be trying to lean on as a container number.\n    recurs=True  # dimension reduce as one dimension\n)\n```\n\n#### 2. How to use \"split_dict\"\n\n```python\nfrom webdevkits import Slicer\n\nSlicer.split_dict(\n    input_data,  # targets, required a dict\n    slice_length=None,  # setting to make every slice as this number.\n    container_length=None,  # setting to be trying to lean on as a container number.\n)\n```\n\n#### 3. How to use \"split_number\"\n\n```python\nfrom webdevkits import Slicer\n\nSlicer.split_number(\n    number,  # targets, required a number\n    slice_length=None,  # setting to make every slice as this number.\n    container_length=None,  # setting to be trying to lean on as a container number.\n)\n```\n\n```python\nSlicer.split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], slice_length=3)\n# result:\n# [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]\n```\n\n```python\nContainerKnife.split_list([[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]], slice_length=3)\n# result:\n# [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]\n```\n\n```python\nContainerKnife.split_list([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]], container_length=3)\n# result:\n# [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]\n```\n\n#### Demo\n```python\nfrom dbkits import Slicer\n\ndef demo(**kwargs):\n    if 'input_data' in kwargs and isinstance(kwargs['input_data'], list):\n        method = getattr(Slicer, 'split_list')\n        src = kwargs['input_data']\n    elif 'input_data' in kwargs and isinstance(kwargs['input_data'], dict):\n        method = getattr(Slicer, 'split_dict')\n        src = kwargs['input_data']\n    elif 'number' in kwargs and type(kwargs['number']) in [str, int]:\n        method = getattr(Slicer, 'split_number')\n        src = kwargs['number']\n    else:\n        raise ValueError(f'Invalid type or error input! {kwargs}')\n    results = method(**kwargs)\n    print(f'{\"\":=^90}')\n    print(f'Input:\\n\\t{src}')\n    print(f'Results:\\n\\t{results}')\n    print(f'Amount: {len(results)}')\n    print(f'{\"\":-^90}')\n    for index, result in enumerate(results):\n        print(f'slice {index} | len == {len(result)} | {result}')\n    print(f'{\"\":=^90}')\n\n## ################## Demo a: split list  ################## ##\ndemo(input_data=[[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]], slice_length=4)\n\n## ################## Demo b: split dict  ################## ##\ninput_data = {\n    '1': {'name': 'Ajax', 'age': 25},\n    '2': {'name': 'Roni', 'age': 29},\n    '3': {'name': 'Jeffrey', 'age': 34},\n    '4': {'name': 'Josh', 'age': 33},\n    '5': {'name': 'Kevin', 'age': 26},\n    '6': {'name': 'Jeque', 'age': 23},\n    '7': {'name': 'Amy', 'age': 32},\n    '8': {'name': 'May', 'age': 49},\n    '9': {'name': 'Ronnie', 'age': 22},\n}\ndemo(input_data=input_data, slice_length=2)\n\n## ################## Demo c: split a number ################## ##\ndemo(number=40, slice_length=7)\n```\n\n---\n## 1. Model Extractor\n>Aim to slice cache out models to the python container(list and dict)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Ron-Chang/webdevkits", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "webdevkits", "package_url": "https://pypi.org/project/webdevkits/", "platform": "", "project_url": "https://pypi.org/project/webdevkits/", "project_urls": {"Homepage": "https://github.com/Ron-Chang/webdevkits"}, "release_url": "https://pypi.org/project/webdevkits/0.0.9/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A package for web dev which is base on sqlalchemy and flask.", "version": "0.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Web Develop Kits</h1>\n<p><a href=\"https://www.buymeacoffee.com/ronchang\" rel=\"nofollow\"><img align=\"right\" alt=\"Buy Me A Coffee\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/320bf793359f29544369a3f1ecd7ec6a07a5dcd6/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67\"></a>\n<code>python_requires&gt;=3.6</code></p>\n<h1>dbkits</h1>\n<h2></h2>\n<h3>Utils</h3>\n<h4><code>snake2camel</code> and <code>camel2snake</code></h4>\n<blockquote>\n<p>snake_case and CamelCase Converter, round way to convert style string</p>\n</blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dbkits</span> <span class=\"kn\">import</span> <span class=\"n\">Utils</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">Utils</span><span class=\"o\">.</span><span class=\"n\">snake2camel</span><span class=\"p\">(</span><span class=\"s1\">'my_model_name'</span><span class=\"p\">)</span>\n<span class=\"c1\"># result:</span>\n<span class=\"c1\"># MyModelName</span>\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dbkits</span> <span class=\"kn\">import</span> <span class=\"n\">Utils</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">Utils</span><span class=\"o\">.</span><span class=\"n\">camel2snake</span><span class=\"p\">(</span><span class=\"s1\">'MyModelName'</span><span class=\"p\">)</span>\n<span class=\"c1\"># result:</span>\n<span class=\"c1\"># 'my_model_name'</span>\n</pre>\n<hr>\n<h2>Slicer</h2>\n<h4><code>split_list</code>, <code>split_dict</code> and <code>split_number</code></h4>\n<blockquote>\n<p>Tow different ways to split a container or a number.</p>\n</blockquote>\n<h4>1. How to use \"split_list\"</h4>\n<p><em><code>Note: \"slice_length\" or \"container_length\" is a control number either one of them is necessary</code></em></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">webdevkits</span> <span class=\"kn\">import</span> <span class=\"n\">Slicer</span>\n\n<span class=\"n\">Slicer</span><span class=\"o\">.</span><span class=\"n\">split_list</span><span class=\"p\">(</span>\n    <span class=\"n\">input_data</span><span class=\"p\">,</span>  <span class=\"c1\"># targets, required a list</span>\n    <span class=\"n\">slice_length</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># setting to make every slice as this number.</span>\n    <span class=\"n\">container_length</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># setting to be trying to lean on as a container number.</span>\n    <span class=\"n\">recurs</span><span class=\"o\">=</span><span class=\"kc\">True</span>  <span class=\"c1\"># dimension reduce as one dimension</span>\n<span class=\"p\">)</span>\n</pre>\n<h4>2. How to use \"split_dict\"</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">webdevkits</span> <span class=\"kn\">import</span> <span class=\"n\">Slicer</span>\n\n<span class=\"n\">Slicer</span><span class=\"o\">.</span><span class=\"n\">split_dict</span><span class=\"p\">(</span>\n    <span class=\"n\">input_data</span><span class=\"p\">,</span>  <span class=\"c1\"># targets, required a dict</span>\n    <span class=\"n\">slice_length</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># setting to make every slice as this number.</span>\n    <span class=\"n\">container_length</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># setting to be trying to lean on as a container number.</span>\n<span class=\"p\">)</span>\n</pre>\n<h4>3. How to use \"split_number\"</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">webdevkits</span> <span class=\"kn\">import</span> <span class=\"n\">Slicer</span>\n\n<span class=\"n\">Slicer</span><span class=\"o\">.</span><span class=\"n\">split_number</span><span class=\"p\">(</span>\n    <span class=\"n\">number</span><span class=\"p\">,</span>  <span class=\"c1\"># targets, required a number</span>\n    <span class=\"n\">slice_length</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># setting to make every slice as this number.</span>\n    <span class=\"n\">container_length</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># setting to be trying to lean on as a container number.</span>\n<span class=\"p\">)</span>\n</pre>\n<pre><span class=\"n\">Slicer</span><span class=\"o\">.</span><span class=\"n\">split_list</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"n\">slice_length</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"c1\"># result:</span>\n<span class=\"c1\"># [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]</span>\n</pre>\n<pre><span class=\"n\">ContainerKnife</span><span class=\"o\">.</span><span class=\"n\">split_list</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">]],</span> <span class=\"n\">slice_length</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"c1\"># result:</span>\n<span class=\"c1\"># [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]</span>\n</pre>\n<pre><span class=\"n\">ContainerKnife</span><span class=\"o\">.</span><span class=\"n\">split_list</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">]],</span> <span class=\"n\">container_length</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"c1\"># result:</span>\n<span class=\"c1\"># [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]</span>\n</pre>\n<h4>Demo</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">dbkits</span> <span class=\"kn\">import</span> <span class=\"n\">Slicer</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">demo</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"s1\">'input_data'</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s1\">'input_data'</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">):</span>\n        <span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">Slicer</span><span class=\"p\">,</span> <span class=\"s1\">'split_list'</span><span class=\"p\">)</span>\n        <span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s1\">'input_data'</span><span class=\"p\">]</span>\n    <span class=\"k\">elif</span> <span class=\"s1\">'input_data'</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s1\">'input_data'</span><span class=\"p\">],</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n        <span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">Slicer</span><span class=\"p\">,</span> <span class=\"s1\">'split_dict'</span><span class=\"p\">)</span>\n        <span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s1\">'input_data'</span><span class=\"p\">]</span>\n    <span class=\"k\">elif</span> <span class=\"s1\">'number'</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span> <span class=\"ow\">and</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s1\">'number'</span><span class=\"p\">])</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]:</span>\n        <span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">Slicer</span><span class=\"p\">,</span> <span class=\"s1\">'split_number'</span><span class=\"p\">)</span>\n        <span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s1\">'number'</span><span class=\"p\">]</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Invalid type or error input! </span><span class=\"si\">{</span><span class=\"n\">kwargs</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n    <span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">method</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"s2\">\"\"</span><span class=\"si\">:</span><span class=\"s1\">=^90</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Input:</span><span class=\"se\">\\n\\t</span><span class=\"si\">{</span><span class=\"n\">src</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Results:</span><span class=\"se\">\\n\\t</span><span class=\"si\">{</span><span class=\"n\">results</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Amount: </span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"s2\">\"\"</span><span class=\"si\">:</span><span class=\"s1\">-^90</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"n\">result</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'slice </span><span class=\"si\">{</span><span class=\"n\">index</span><span class=\"si\">}</span><span class=\"s1\"> | len == </span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s1\"> | </span><span class=\"si\">{</span><span class=\"n\">result</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"s2\">\"\"</span><span class=\"si\">:</span><span class=\"s1\">=^90</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## ################## Demo a: split list  ################## ##</span>\n<span class=\"n\">demo</span><span class=\"p\">(</span><span class=\"n\">input_data</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">]],</span> <span class=\"n\">slice_length</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## ################## Demo b: split dict  ################## ##</span>\n<span class=\"n\">input_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'1'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Ajax'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">25</span><span class=\"p\">},</span>\n    <span class=\"s1\">'2'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Roni'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">29</span><span class=\"p\">},</span>\n    <span class=\"s1\">'3'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jeffrey'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">34</span><span class=\"p\">},</span>\n    <span class=\"s1\">'4'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Josh'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">33</span><span class=\"p\">},</span>\n    <span class=\"s1\">'5'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Kevin'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">26</span><span class=\"p\">},</span>\n    <span class=\"s1\">'6'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jeque'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">23</span><span class=\"p\">},</span>\n    <span class=\"s1\">'7'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Amy'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">32</span><span class=\"p\">},</span>\n    <span class=\"s1\">'8'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'May'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">49</span><span class=\"p\">},</span>\n    <span class=\"s1\">'9'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Ronnie'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">22</span><span class=\"p\">},</span>\n<span class=\"p\">}</span>\n<span class=\"n\">demo</span><span class=\"p\">(</span><span class=\"n\">input_data</span><span class=\"o\">=</span><span class=\"n\">input_data</span><span class=\"p\">,</span> <span class=\"n\">slice_length</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"c1\">## ################## Demo c: split a number ################## ##</span>\n<span class=\"n\">demo</span><span class=\"p\">(</span><span class=\"n\">number</span><span class=\"o\">=</span><span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"n\">slice_length</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n</pre>\n<hr>\n<h2>1. Model Extractor</h2>\n<blockquote>\n<p>Aim to slice cache out models to the python container(list and dict)</p>\n</blockquote>\n\n          </div>"}, "last_serial": 6879888, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "4315f5fff7bdc3a2eb1e90d09a3ce56a", "sha256": "f12282583aa76bf827891cb84756f69eceed3f5e853aef6c9ab46e02b7d553f4"}, "downloads": -1, "filename": "webdevkits-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4315f5fff7bdc3a2eb1e90d09a3ce56a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11383, "upload_time": "2020-03-25T05:25:46", "upload_time_iso_8601": "2020-03-25T05:25:46.686006Z", "url": "https://files.pythonhosted.org/packages/05/9f/79f91f7a7a5ddfe1191102f7f7bfcc4f990b4b6c87c36b4520fb2e7aac48/webdevkits-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b7ad7d6446a99fb6d7ddf33b14b811f", "sha256": "08cbb7a5e5d6ae4e27e80fd1c2a9b1417b1bac84b376400f0298eb1714a155f2"}, "downloads": -1, "filename": "webdevkits-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4b7ad7d6446a99fb6d7ddf33b14b811f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8781, "upload_time": "2020-03-25T05:25:49", "upload_time_iso_8601": "2020-03-25T05:25:49.188386Z", "url": "https://files.pythonhosted.org/packages/ad/6d/cdf0b88ef0b366811aae8fd58dd2eb583ebc7b9fbe0e454dc19e9cdac99b/webdevkits-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "9f4ca8eba5970546cbacf9c41ce62343", "sha256": "c0fac8fa85523a738e6d70f9f808aa062873b6a44ee0b111d3a943786d955086"}, "downloads": -1, "filename": "webdevkits-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9f4ca8eba5970546cbacf9c41ce62343", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11383, "upload_time": "2020-03-25T05:29:08", "upload_time_iso_8601": "2020-03-25T05:29:08.317880Z", "url": "https://files.pythonhosted.org/packages/e5/33/4ac3285e751e0fac23ecb3668f32a6cf6de23ba7b840898c1f13b1115218/webdevkits-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bd307d4c951a93e9f1f094010d7d45a", "sha256": "b736878af7fd02b73b939205e244e226abb737a9f1326047b57d9c5fda148006"}, "downloads": -1, "filename": "webdevkits-0.0.3.tar.gz", "has_sig": false, "md5_digest": "9bd307d4c951a93e9f1f094010d7d45a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8785, "upload_time": "2020-03-25T05:29:09", "upload_time_iso_8601": "2020-03-25T05:29:09.994051Z", "url": "https://files.pythonhosted.org/packages/dc/b5/571570cc2283c3fb05a3f83ade6a3fe7b7595f2b4eda0d90d9f5042be40f/webdevkits-0.0.3.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "fbcf9edf72dc184438541b4e79a47858", "sha256": "5112a3085ada74c967dc191185551462e8fb8d0d39a3186887c4ad22bd90dd48"}, "downloads": -1, "filename": "webdevkits-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "fbcf9edf72dc184438541b4e79a47858", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11622, "upload_time": "2020-03-25T07:39:21", "upload_time_iso_8601": "2020-03-25T07:39:21.512211Z", "url": "https://files.pythonhosted.org/packages/fe/db/3e9917b6953c6548c39912cd98e83b5126b154e711d9f7da09822c4c3069/webdevkits-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ddbfaf2f233f21d1916da2eb0b60338", "sha256": "cc02741c2a4f209311d451ea3c39cdaeaaab9327ab489388378140c124d73af8"}, "downloads": -1, "filename": "webdevkits-0.0.6.tar.gz", "has_sig": false, "md5_digest": "3ddbfaf2f233f21d1916da2eb0b60338", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9615, "upload_time": "2020-03-25T07:39:27", "upload_time_iso_8601": "2020-03-25T07:39:27.910132Z", "url": "https://files.pythonhosted.org/packages/f7/4f/696e8e2c0f1037e52657b5427be4233274009382a5cbcfedb22fe0d63066/webdevkits-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "3172383a90c1b9be4ed61f3fbe46a148", "sha256": "43aedb418b10d72ffababbe5e09929c03af911a64b7aa0d507613eb894b0bcb8"}, "downloads": -1, "filename": "webdevkits-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "3172383a90c1b9be4ed61f3fbe46a148", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13675, "upload_time": "2020-03-25T07:48:38", "upload_time_iso_8601": "2020-03-25T07:48:38.742476Z", "url": "https://files.pythonhosted.org/packages/93/38/565b947db1f7e7c5b98320f11dab65ce41544e055402373a40b66b15bbcf/webdevkits-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e14133be9560d25d61a378a17cd4a4ee", "sha256": "326204aab81a92941f86a54672395933db8e1c83eb71be141c459e0ed608388b"}, "downloads": -1, "filename": "webdevkits-0.0.7.tar.gz", "has_sig": false, "md5_digest": "e14133be9560d25d61a378a17cd4a4ee", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9789, "upload_time": "2020-03-25T07:48:40", "upload_time_iso_8601": "2020-03-25T07:48:40.760481Z", "url": "https://files.pythonhosted.org/packages/b5/3d/c78b6685b0700fed0109b413527550cdce99d18af01190818e8a861e819e/webdevkits-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "9ea47e0e0e82dd3f322aac9af069e62f", "sha256": "92d17a7b61661562cd80b42790bfd8123e5999ab36812888ef936aa162c1b44c"}, "downloads": -1, "filename": "webdevkits-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "9ea47e0e0e82dd3f322aac9af069e62f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15507, "upload_time": "2020-03-25T07:52:19", "upload_time_iso_8601": "2020-03-25T07:52:19.722432Z", "url": "https://files.pythonhosted.org/packages/ab/0a/27d0023af5abc5faa97f36ae8e51518f2c4d9b68e292e26ef648b5f4bec8/webdevkits-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7152470172aea8be5dfbae5327d65d57", "sha256": "7399ce211e31ef984e953bdc4ead57d57dfc94d91f32001795887f4122043d0a"}, "downloads": -1, "filename": "webdevkits-0.0.8.tar.gz", "has_sig": false, "md5_digest": "7152470172aea8be5dfbae5327d65d57", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9874, "upload_time": "2020-03-25T07:52:21", "upload_time_iso_8601": "2020-03-25T07:52:21.835849Z", "url": "https://files.pythonhosted.org/packages/a1/11/9667674b932c71fb92635ed1f77d501a64b83fe5acad2bf1f2a110860f8f/webdevkits-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "16b9cc5f917425f8e20bffeb4501dfdf", "sha256": "eada56730884a54412b766dcf0f3822c63561002b562f3cf355180e8dfbd48b5"}, "downloads": -1, "filename": "webdevkits-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "16b9cc5f917425f8e20bffeb4501dfdf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20113, "upload_time": "2020-03-25T11:01:20", "upload_time_iso_8601": "2020-03-25T11:01:20.170140Z", "url": "https://files.pythonhosted.org/packages/9e/56/a2158c9c4acc0598a0d46bea928adbfcde7cb64d130eee0328f0ecd96bf0/webdevkits-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84ce678f2efd98b40b459fe64925eeec", "sha256": "a1c9b40f5a32f7c6dd30bb7aa433a93f4280e742c50de6ca5c73ca178d886dad"}, "downloads": -1, "filename": "webdevkits-0.0.9.tar.gz", "has_sig": false, "md5_digest": "84ce678f2efd98b40b459fe64925eeec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7054, "upload_time": "2020-03-25T11:01:21", "upload_time_iso_8601": "2020-03-25T11:01:21.338905Z", "url": "https://files.pythonhosted.org/packages/d2/9f/3b53a17484e2362ef3621ae742ed26962719eef30a815aa3497b2aaee6e1/webdevkits-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "16b9cc5f917425f8e20bffeb4501dfdf", "sha256": "eada56730884a54412b766dcf0f3822c63561002b562f3cf355180e8dfbd48b5"}, "downloads": -1, "filename": "webdevkits-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "16b9cc5f917425f8e20bffeb4501dfdf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20113, "upload_time": "2020-03-25T11:01:20", "upload_time_iso_8601": "2020-03-25T11:01:20.170140Z", "url": "https://files.pythonhosted.org/packages/9e/56/a2158c9c4acc0598a0d46bea928adbfcde7cb64d130eee0328f0ecd96bf0/webdevkits-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84ce678f2efd98b40b459fe64925eeec", "sha256": "a1c9b40f5a32f7c6dd30bb7aa433a93f4280e742c50de6ca5c73ca178d886dad"}, "downloads": -1, "filename": "webdevkits-0.0.9.tar.gz", "has_sig": false, "md5_digest": "84ce678f2efd98b40b459fe64925eeec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7054, "upload_time": "2020-03-25T11:01:21", "upload_time_iso_8601": "2020-03-25T11:01:21.338905Z", "url": "https://files.pythonhosted.org/packages/d2/9f/3b53a17484e2362ef3621ae742ed26962719eef30a815aa3497b2aaee6e1/webdevkits-0.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:31:18 2020"}