{"info": {"author": "Oleksii Ivanchuk", "author_email": "barjomet@barjomet.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python"], "description": "How to use::\n\n\n    from torcello import Tor\n    from threading import Thread\n  \n    def do_something():\n        tor = Tor()\n        for one in range(5):\n            response = tor.get('http://ip.barjomet.com')\n            print('Hooray, here is desired data: %s' %  response.text)\n            tor.new_ip()\n        tor.destroy()\n  \n    for incident in range(5):\n        Thread(target=do_something).start()\n\nalso try it as rotating proxy::\n\n\n    from time import sleep\n    from torcello import Tor\n    from threading import Thread\n    \n    for one in range(12):\n        Thread(target=Tor).start()\n    \n    while len(Tor.order) < 10:\n        print('Waiting for tor, %s tor instances is ready' % len(Tor.order))\n        sleep(5)\n    \n    \n    for incident in range(20):\n        response = Tor.first().get('http://ip.barjomet.com')\n        print('Hooray, here is desired data: %s' %  response.text)\n        while not Tor.next_tor():\n            sleep(1)\n  \n    # Delete all instances and close all Tor daemons\n    Tor.clean()", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/barjomet/torcello", "keywords": "tor,socks,proxy", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "Torcello", "package_url": "https://pypi.org/project/Torcello/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Torcello/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/barjomet/torcello"}, "release_url": "https://pypi.org/project/Torcello/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Just a Python module suitable to use multiple Tor circuits at the same time", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>How to use:</p>\n<pre>from torcello import Tor\nfrom threading import Thread\n\ndef do_something():\n    tor = Tor()\n    for one in range(5):\n        response = tor.get('http://ip.barjomet.com')\n        print('Hooray, here is desired data: %s' %  response.text)\n        tor.new_ip()\n    tor.destroy()\n\nfor incident in range(5):\n    Thread(target=do_something).start()\n</pre>\n<p>also try it as rotating proxy:</p>\n<pre>from time import sleep\nfrom torcello import Tor\nfrom threading import Thread\n\nfor one in range(12):\n    Thread(target=Tor).start()\n\nwhile len(Tor.order) &lt; 10:\n    print('Waiting for tor, %s tor instances is ready' % len(Tor.order))\n    sleep(5)\n\n\nfor incident in range(20):\n    response = Tor.first().get('http://ip.barjomet.com')\n    print('Hooray, here is desired data: %s' %  response.text)\n    while not Tor.next_tor():\n        sleep(1)\n\n# Delete all instances and close all Tor daemons\nTor.clean()\n</pre>\n\n          </div>"}, "last_serial": 2282092, "releases": {"0.1.15": [{"comment_text": "", "digests": {"md5": "ae28a6eef291540337689ee713be85ca", "sha256": "bd973b8174bb0fcce4777b87d61608e203cf462d3289ec499091b5c5e9aa156d"}, "downloads": -1, "filename": "Torcello-0.1.15.tar.gz", "has_sig": false, "md5_digest": "ae28a6eef291540337689ee713be85ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4454, "upload_time": "2016-06-02T11:23:59", "upload_time_iso_8601": "2016-06-02T11:23:59.933562Z", "url": "https://files.pythonhosted.org/packages/b1/38/233036c1cbd9ac283e5a66b71c6c1cdebeef618f1398504b56b20c897c9d/Torcello-0.1.15.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b4688c8ba9d17492d876661af14a2a09", "sha256": "237325018df70e698824c37a5ebe43750baa26b91e1e8bc24f8e5b9201d8c9c5"}, "downloads": -1, "filename": "Torcello-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b4688c8ba9d17492d876661af14a2a09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4468, "upload_time": "2016-08-15T12:47:35", "upload_time_iso_8601": "2016-08-15T12:47:35.031015Z", "url": "https://files.pythonhosted.org/packages/f2/fa/532675361e02dc2bc65468f03923e95ff3037c305c610a8e9d0d74ce1914/Torcello-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b4688c8ba9d17492d876661af14a2a09", "sha256": "237325018df70e698824c37a5ebe43750baa26b91e1e8bc24f8e5b9201d8c9c5"}, "downloads": -1, "filename": "Torcello-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b4688c8ba9d17492d876661af14a2a09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4468, "upload_time": "2016-08-15T12:47:35", "upload_time_iso_8601": "2016-08-15T12:47:35.031015Z", "url": "https://files.pythonhosted.org/packages/f2/fa/532675361e02dc2bc65468f03923e95ff3037c305c610a8e9d0d74ce1914/Torcello-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:50:39 2020"}