{"info": {"author": "Mohammad Hadi Azaddel", "author_email": "m.h.azaddel@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Application Frameworks"], "description": "=====================================================\nDjango Signal Notifier\n=====================================================\n\n|docs-badge| |pypi-badge|\n\n**DSN** or `django-signal-notifier <https://gitlab.com/hadiazaddel/django-signal-notifier>`_ is a Django package to send message or notification based on the Django's signals triggering. You can assign some backends to each signal(e.g., An In-Site notification app).\n\nThe major difference between ``django-signal-notifier`` and other Django's notification packages is that *DSN* isn't just a simple message delivering system.\nIt can act as a middleware between Django and every messenger client (Various clients like email, telegram, SMS and twitter).\n\nIt's working with event methodology, and it's based on `Django signal <https://docs.djangoproject.com/en/3.0/topics/signals/>`_. If a signal triggers, A messenger is called to send a message for specified users.\nTo understand how it works, We explain some main concepts at first.\n\nDocumentation, installation and getting started instructions are at `documentation`_\n\nConcepts (Summary)\n===========================\n\n**DSN**'s architecture :\n\n.. image:: images/DSN_Architecture.png\n    :alt: DSN Architecture\n\nIn a nutshell, we can say **DSN** is developed to *send message* :\n\n    * **When and Where** ? : When a Trigger Triggered (The associated signal's send function is called, and the trigger's specs match).\n    * **What** to send?: The message that is created to the message_template and other parameters like signal_kwargs.\n    * **Whom** to send? : Send the message to the registered receivers in the subscription or the dynamic user that can be specified in the messenger.\n\n.. note::\n\n    You should pay attention to these 3 questions when you want to assign a new trigger to a signal.\n\nSetup\n============\n\nRequirements\n------------\n\n- Python 2.7, 3.4, 3.5, 3.6, 3.7\n- Django 1.7, 1.8, 1.9, 1.10, 1.11, 2.0, 2.1, 2.2, 3.0\n\nInstallation\n------------\n\n1. Install ``django-signal-notifier`` by pip:\n::\n\n    $ pip install django-signal-notifier\n\nor use the source\n\n::\n\n    $ git clone https://gitlab.com/hadiazaddel/django-signal-notifier\n    $ cd django-signal-notifier\n    $ python setup.py sdist\n    $ pip install dist/django-signal-notifier*\n\n2. Add \"django_signal_notifier\" at the end of INSTALLED_APPS setting like this\n\n::\n\n    INSTALLED_APPS = [\n        'django.contrib.auth',\n        'django.contrib.contenttypes',\n        ...\n        'django_signal_notifier',\n    ]\n\n3. ``django-signal-notifier`` configure by admin panel by default(Can be configured by code, tough)\n\n4. Use ``python manage.py migrate`` for schema migration.\n\nUsage\n============\n\n4. Run the development server and visit http://127.0.0.1:8000/admin/\n   To create a trigger(signal), backends(messenger and message_template), and subscription (you'll need the Admin app enabled).\n\n5. You can test it like this:\n    5.1. Create a trigger (verb=pre_save and action_object=TestModel1)\n\n    5.2. Create a backend (messenger=SimplePrintMessengerTemplateBased and message_template=SimplePrintMessageTemplate)\n\n    5.3. Create a subscription that connects the trigger and the backend. Add admin to the receiver(user) list.\n\n    5.4. Run this command in manage.py shell:\n\n    .. code-block:: python\n\n        from django_signal_notifier.models import *\n        TestModel1_another_instance = TestModel1.objects.create(name=\"new_test_model2\", extra_field=\"extra\")\n\n    Now you should see a message when you create TestModel1. By Creating new TestModel1, Django calls the pre_save signal's send method. Then this signal call associated trigger handler.\n    In the Trigger handler, the associated backend is called. The message_template with some details are sent to the backend.\n    In our case, a simple message is printed. You can provide your messengers and message_templates.\n\n\n.. |docs-badge| image:: https://img.shields.io/badge/docs-latest-informational.svg\n   :target: `documentation`_\n   :alt: Documentation\n\n.. |pypi-badge| image:: https://img.shields.io/pypi/v/django_signal_notifier.svg\n   :target: https://pypi.org/project/django-signal-notifier/\n   :alt: Project on PyPI\n\n.. _documentation: http://django-signal-notifirer.readthedocs.io/\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/hadiazaddel/django-signal-notifier", "keywords": "django,notification,signal", "license": "BSD-3-Clause", "maintainer": "", "maintainer_email": "", "name": "django-signal-notifier", "package_url": "https://pypi.org/project/django-signal-notifier/", "platform": "", "project_url": "https://pypi.org/project/django-signal-notifier/", "project_urls": {"Documentation": "https://django-signal-notifier.readthedocs.io/", "Homepage": "https://gitlab.com/hadiazaddel/django-signal-notifier", "Source": "https://gitlab.com/hadiazaddel/django-signal-notifier", "Tracker": "https://gitlab.com/hadiazaddel/django-signal-notifier/issues"}, "release_url": "https://pypi.org/project/django-signal-notifier/0.1.2/", "requires_dist": ["Django (>=1.8)"], "requires_python": "", "summary": "DSN or django-signal-notifier is a Django package to send message or notification based on the Django's signals triggering", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"http://django-signal-notifirer.readthedocs.io/\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5a3e2b6a9c8fbd12fdde9299ec13c38bc85aa0b0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6c61746573742d696e666f726d6174696f6e616c2e737667\"></a> <a href=\"https://pypi.org/project/django-signal-notifier/\" rel=\"nofollow\"><img alt=\"Project on PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0fc755a71f9bdbb8949659569e5469ac7a66f09a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f5f7369676e616c5f6e6f7469666965722e737667\"></a></p>\n<p><strong>DSN</strong> or <a href=\"https://gitlab.com/hadiazaddel/django-signal-notifier\" rel=\"nofollow\">django-signal-notifier</a> is a Django package to send message or notification based on the Django\u2019s signals triggering. You can assign some backends to each signal(e.g., An In-Site notification app).</p>\n<p>The major difference between <tt><span class=\"pre\">django-signal-notifier</span></tt> and other Django\u2019s notification packages is that <em>DSN</em> isn\u2019t just a simple message delivering system.\nIt can act as a middleware between Django and every messenger client (Various clients like email, telegram, SMS and twitter).</p>\n<p>It\u2019s working with event methodology, and it\u2019s based on <a href=\"https://docs.djangoproject.com/en/3.0/topics/signals/\" rel=\"nofollow\">Django signal</a>. If a signal triggers, A messenger is called to send a message for specified users.\nTo understand how it works, We explain some main concepts at first.</p>\n<p>Documentation, installation and getting started instructions are at <a href=\"http://django-signal-notifirer.readthedocs.io/\" rel=\"nofollow\">documentation</a></p>\n<div id=\"concepts-summary\">\n<h2>Concepts (Summary)</h2>\n<p><strong>DSN</strong>\u2019s architecture :</p>\n<img alt=\"DSN Architecture\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3660a12ab6452ec0f5a463ef0c610d52e53bda8e/696d616765732f44534e5f4172636869746563747572652e706e67\">\n<p>In a nutshell, we can say <strong>DSN</strong> is developed to <em>send message</em> :</p>\n<blockquote>\n<ul>\n<li><strong>When and Where</strong> ? : When a Trigger Triggered (The associated signal\u2019s send function is called, and the trigger\u2019s specs match).</li>\n<li><strong>What</strong> to send?: The message that is created to the message_template and other parameters like signal_kwargs.</li>\n<li><strong>Whom</strong> to send? : Send the message to the registered receivers in the subscription or the dynamic user that can be specified in the messenger.</li>\n</ul>\n</blockquote>\n<div>\n<p>Note</p>\n<p>You should pay attention to these 3 questions when you want to assign a new trigger to a signal.</p>\n</div>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li>Python 2.7, 3.4, 3.5, 3.6, 3.7</li>\n<li>Django 1.7, 1.8, 1.9, 1.10, 1.11, 2.0, 2.1, 2.2, 3.0</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>1. Install <tt><span class=\"pre\">django-signal-notifier</span></tt> by pip:</p>\n<pre>$ pip install django-signal-notifier\n</pre>\n<p>or use the source</p>\n<pre>$ git clone https://gitlab.com/hadiazaddel/django-signal-notifier\n$ cd django-signal-notifier\n$ python setup.py sdist\n$ pip install dist/django-signal-notifier*\n</pre>\n<ol>\n<li>Add \u201cdjango_signal_notifier\u201d at the end of INSTALLED_APPS setting like this</li>\n</ol>\n<pre>INSTALLED_APPS = [\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    ...\n    'django_signal_notifier',\n]\n</pre>\n<ol>\n<li><tt><span class=\"pre\">django-signal-notifier</span></tt> configure by admin panel by default(Can be configured by code, tough)</li>\n<li>Use <tt>python manage.py migrate</tt> for schema migration.</li>\n</ol>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ol>\n<li><p>Run the development server and visit <a href=\"http://127.0.0.1:8000/admin/\" rel=\"nofollow\">http://127.0.0.1:8000/admin/</a>\nTo create a trigger(signal), backends(messenger and message_template), and subscription (you\u2019ll need the Admin app enabled).</p>\n</li>\n<li><dl>\n<dt>You can test it like this:</dt>\n<dd><p>5.1. Create a trigger (verb=pre_save and action_object=TestModel1)</p>\n<p>5.2. Create a backend (messenger=SimplePrintMessengerTemplateBased and message_template=SimplePrintMessageTemplate)</p>\n<p>5.3. Create a subscription that connects the trigger and the backend. Add admin to the receiver(user) list.</p>\n<p>5.4. Run this command in manage.py shell:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_signal_notifier.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">TestModel1_another_instance</span> <span class=\"o\">=</span> <span class=\"n\">TestModel1</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"new_test_model2\"</span><span class=\"p\">,</span> <span class=\"n\">extra_field</span><span class=\"o\">=</span><span class=\"s2\">\"extra\"</span><span class=\"p\">)</span>\n</pre>\n<p>Now you should see a message when you create TestModel1. By Creating new TestModel1, Django calls the pre_save signal\u2019s send method. Then this signal call associated trigger handler.\nIn the Trigger handler, the associated backend is called. The message_template with some details are sent to the backend.\nIn our case, a simple message is printed. You can provide your messengers and message_templates.</p>\n</dd>\n</dl>\n</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 6737341, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4a0bfbea14c74a46f080fe86d3d7f31e", "sha256": "baee4e6e9669c4f317629aebd0efb6c3db9338be872ae4e314a313a9af74da9b"}, "downloads": -1, "filename": "django_signal_notifier-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4a0bfbea14c74a46f080fe86d3d7f31e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28615, "upload_time": "2020-01-21T12:50:55", "upload_time_iso_8601": "2020-01-21T12:50:55.792107Z", "url": "https://files.pythonhosted.org/packages/1e/e7/f0d2cebf359f2a78e07a4248b16130b8693a6c9b041a1b53595b15fe69a8/django_signal_notifier-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21c841547f90c0ae1f0358f2af7d98c0", "sha256": "eaa5871eb73c3ff47e1d0e301737b3fa933dc92493a5820199f77487ee31ea35"}, "downloads": -1, "filename": "django-signal-notifier-0.1.0.tar.gz", "has_sig": false, "md5_digest": "21c841547f90c0ae1f0358f2af7d98c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6996620, "upload_time": "2020-01-21T12:51:12", "upload_time_iso_8601": "2020-01-21T12:51:12.281472Z", "url": "https://files.pythonhosted.org/packages/76/fe/7b0e726a8997f36431cfcc6ff5e6792deac2b3f40b76396a7bce615f6a3c/django-signal-notifier-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "790934672cf5610446f1f68d0de80940", "sha256": "1c93c23dfcb0d47ab9f9548ac7d2d21298b745d306590c96c2204c41b804c35e"}, "downloads": -1, "filename": "django_signal_notifier-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "790934672cf5610446f1f68d0de80940", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29844, "upload_time": "2020-03-03T00:16:27", "upload_time_iso_8601": "2020-03-03T00:16:27.280151Z", "url": "https://files.pythonhosted.org/packages/a8/56/4dca3388663a953e5858285bb72b2fed73ebea31979021ce03866769d3dc/django_signal_notifier-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "340a0e8de041737c9c491d12d9adb0fe", "sha256": "06ed8aeaede1093ebfd1ec0086413476574384c490b52f1684b6461003b15415"}, "downloads": -1, "filename": "django-signal-notifier-0.1.2.tar.gz", "has_sig": false, "md5_digest": "340a0e8de041737c9c491d12d9adb0fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 454346, "upload_time": "2020-03-03T00:20:15", "upload_time_iso_8601": "2020-03-03T00:20:15.058248Z", "url": "https://files.pythonhosted.org/packages/d5/60/15849c78a8b75cf82294abe3d1593361226a113008bffe7602eb142c3d3d/django-signal-notifier-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "790934672cf5610446f1f68d0de80940", "sha256": "1c93c23dfcb0d47ab9f9548ac7d2d21298b745d306590c96c2204c41b804c35e"}, "downloads": -1, "filename": "django_signal_notifier-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "790934672cf5610446f1f68d0de80940", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29844, "upload_time": "2020-03-03T00:16:27", "upload_time_iso_8601": "2020-03-03T00:16:27.280151Z", "url": "https://files.pythonhosted.org/packages/a8/56/4dca3388663a953e5858285bb72b2fed73ebea31979021ce03866769d3dc/django_signal_notifier-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "340a0e8de041737c9c491d12d9adb0fe", "sha256": "06ed8aeaede1093ebfd1ec0086413476574384c490b52f1684b6461003b15415"}, "downloads": -1, "filename": "django-signal-notifier-0.1.2.tar.gz", "has_sig": false, "md5_digest": "340a0e8de041737c9c491d12d9adb0fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 454346, "upload_time": "2020-03-03T00:20:15", "upload_time_iso_8601": "2020-03-03T00:20:15.058248Z", "url": "https://files.pythonhosted.org/packages/d5/60/15849c78a8b75cf82294abe3d1593361226a113008bffe7602eb142c3d3d/django-signal-notifier-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:28 2020"}