{"info": {"author": "Vincent Sarago", "author_email": "vincent.sarago@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# lambda-proxy\n\n[![Packaging status](https://badge.fury.io/py/lambda-proxy.svg)](https://badge.fury.io/py/lambda-proxy)\n[![CircleCI](https://circleci.com/gh/vincentsarago/lambda-proxy.svg?style=svg)](https://circleci.com/gh/vincentsarago/lambda-proxy)\n[![codecov](https://codecov.io/gh/vincentsarago/lambda-proxy/branch/master/graph/badge.svg)](https://codecov.io/gh/vincentsarago/lambda-proxy)\n\nA zero-requirement proxy linking AWS API Gateway `{proxy+}` requests and AWS Lambda.\n\n<img width=\"600\" alt=\"\" src=\"https://user-images.githubusercontent.com/10407788/58742966-6ff50480-83f7-11e9-81f7-3ba7aa2310bb.png\">\n\n## Install\n\n```bash\n$ pip install -U pip\n$ pip install lambda-proxy\n```\n\nOr install from source:\n\n```bash\n$ git clone https://github.com/vincentsarag/lambda-proxy.git\n$ cd lambda-proxy\n$ pip install -U pip\n$ pip install -e .\n```\n\n# Usage\n\nLambda proxy is designed to work well with both API Gateway's REST API and the\nnewer and cheaper HTTP API. If you have issues using with the HTTP API, please\nopen an issue.\n\nWith GET request\n\n```python\nfrom lambda_proxy.proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.route('/test/tests/<id>', methods=['GET'], cors=True)\ndef print_id(id):\n    return ('OK', 'plain/text', id)\n```\n\nWith POST request\n\n```python\nfrom lambda_proxy.proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.route('/test/tests/<id>', methods=['POST'], cors=True)\ndef print_id(id, body):\n    return ('OK', 'plain/text', id)\n```\n\n**Note**\n\nStarting in version 5.2.0, users can now add route using `@APP.get` and `@APP.post` removing the need to add `methods=[**]`\n\n## Binary body\n\nStarting from version 5.0.0, lambda-proxy will decode base64 encoded body on POST message.\n\nPre 5.0.0\n```python\nfrom lambda_proxy.proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.route('/test', methods=['POST']e)\ndef print_id(body):\n    body = json.loads(base64.b64decode(body).decode())\n```\n\nPost 5.0.0\n```python\nfrom lambda_proxy.proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.route('/test', methods=['POST']e)\ndef print_id(body):\n    body = json.loads(body)\n```\n\n# Routes\n\nRoute schema is simmilar to the one used in [Flask](http://flask.pocoo.org/docs/1.0/api/#url-route-registrations)\n\n> Variable parts in the route can be specified with angular brackets `/user/<username>`. By default a variable part in the URL accepts any string without a slash however a different converter can be specified as well by using `<converter:name>`.\n\nConverters:\n- `int`: integer\n- `string`: string\n- `float`: float number\n- `uuid`: UUID\n\nexample:\n- `/app/<user>/<id>` (`user` and `id` are variables)\n- `/app/<string:value>/<float:num>` (`value` will be a string, while `num` will be a float)\n\n## Regex\nYou can also add regex parameters descriptions using special converter `regex()`\n\nexample:\n```python\n@APP.get(\"/app/<regex([a-z]+):regularuser>\")\ndef print_user(regularuser):\n    return ('OK', 'plain/text', f\"regular {regularuser}\")\n\n@APP.get(\"/app/<regex([A-Z]+):capitaluser>\")\ndef print_user(capitaluser):\n    return ('OK', 'plain/text', f\"CAPITAL {capitaluser}\")\n```\n\n#### Warning\n\nwhen using **regex()** you must use different variable names or the route might not show up in the documentation.\n\n```python\n@APP.get(\"/app/<regex([a-z]+):user>\")\ndef print_user(user):\n    return ('OK', 'plain/text', f\"regular {user}\")\n\n@APP.get(\"/app/<regex([A-Z]+):user>\")\ndef print_user(user):\n    return ('OK', 'plain/text', f\"CAPITAL {user}\")\n```\nThis app will work but the documentation will only show the second route because in `openapi.json`, route names will be `/app/{user}` for both routes.\n\n# Route Options\n\n- **path**: the URL rule as string\n- **methods**: list of HTTP methods allowed, default: [\"GET\"]\n- **cors**: allow CORS, default: `False`\n- **token**: set `access_token` validation\n- **payload_compression_method**: Enable and select an output body compression\n- **binary_b64encode**: base64 encode the output body (API Gateway)\n- **ttl**: Cache Control setting (Time to Live) **(Deprecated in 6.0.0)**\n- **cache_control**: Cache Control setting\n- **description**: route description (for documentation)\n- **tag**: list of tags (for documentation)\n\n## Cache Control\n\nAdd a Cache Control header with a Time to Live (TTL) in seconds.\n\n```python\nfrom lambda_proxy.proxy import API\nAPP = API(app_name=\"app\")\n\n@APP.get('/test/tests/<id>', cors=True, cache_control=\"public,max-age=3600\")\ndef print_id(id):\n   return ('OK', 'plain/text', id)\n```\n\nNote: If function returns other then \"OK\", Cache-Control will be set to `no-cache`\n\n## Binary responses\n\nWhen working with binary on API-Gateway we must return a base64 encoded string\n\n```python\nfrom lambda_proxy.proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.get('/test/tests/<filename>.jpg', cors=True, binary_b64encode=True)\ndef print_id(filename):\n    with open(f\"{filename}.jpg\", \"rb\") as f:\n        return ('OK', 'image/jpeg', f.read())\n```\n\n## Compression\n\nEnable compression if \"Accept-Encoding\" if found in headers.\n\n```python\nfrom lambda_proxy.proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.get(\n   '/test/tests/<filename>.jpg',\n   cors=True,\n   binary_b64encode=True,\n   payload_compression_method=\"gzip\"\n)\ndef print_id(filename):\n    with open(f\"{filename}.jpg\", \"rb\") as f:\n       return ('OK', 'image/jpeg', f.read())\n```\n\n## Simple Auth token\n\nLambda-proxy provide a simple token validation system.\n\n-  a \"TOKEN\" variable must be set in the environment\n-  each request must provide a \"access_token\" params (e.g curl\n   http://myurl/test/tests/myid?access_token=blabla)\n\n```python\nfrom lambda_proxy.proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.get('/test/tests/<id>', cors=True, token=True)\ndef print_id(id):\n    return ('OK', 'plain/text', id)\n```\n\n## URL schema and request parameters\n\nQueryString parameters are passed as function's options.\n\n```python\nfrom lambda_proxy.proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.get('/<id>', cors=True)\ndef print_id(id, name=None):\n    return ('OK', 'plain/text', f\"{id}{name}\")\n```\n\nrequests:\n\n```bash\n$ curl /000001\n   0001\n\n$ curl /000001?name=vincent\n   0001vincent\n```\n\n## Multiple Routes\n\n```python\nfrom lambda_proxy.proxy import API\nAPP = API(name=\"app\")\n\n@APP.get('/<id>', cors=True)\n@APP.get('/<id>/<int:number>', cors=True)\ndef print_id(id, number=None, name=None):\n    return ('OK', 'plain/text', f\"{id}-{name}-{number}\")\n```\nrequests:\n\n```bash\n\n$ curl /000001\n   0001--\n\n$ curl /000001?name=vincent\n   0001-vincent-\n\n$ curl /000001/1?name=vincent\n   0001-vincent-1\n```\n\n# Advanced features\n\n## Context and Event passing\n\nPass event and context to the handler function.\n\n```python\nfrom lambda_proxy.proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.get(\"/<id>\", cors=True)\n@APP.pass_event\n@APP.pass_context\ndef print_id(ctx, evt, id):\n    print(ctx)\n    print(evt)\n    return ('OK', 'plain/text', f\"{id}\")\n```\n\n# Automatic OpenAPI documentation\n\nBy default the APP (`lambda_proxy.proxy.API`) is provided with three (3) routes:\n- `/openapi.json`: print OpenAPI JSON definition\n\n- `/docs`: swagger html UI\n![swagger](https://user-images.githubusercontent.com/10407788/58707335-9cbb0480-8382-11e9-927f-8d992cf2531a.jpg)\n\n- `/redoc`: Redoc html UI\n![redoc](https://user-images.githubusercontent.com/10407788/58707338-9dec3180-8382-11e9-8dec-18173e39258f.jpg)\n\n**Function annotations**\n\nTo be able to render full and precise API documentation, lambda_proxy uses python type hint and annotations [link](https://www.python.org/dev/peps/pep-3107/).\n\n```python\nfrom lambda_proxy.proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.route('/test/<int:id>', methods=['GET'], cors=True)\ndef print_id(id: int, num: float = 0.2) -> Tuple(str, str, str):\n    return ('OK', 'plain/text', id)\n```\n\nIn the example above, our route `/test/<int:id>` define an input `id` to be a `INT`, while we also add this hint to the function `print_id` we also specify the type (and default) of the `num` option.\n\n# Custom Domain and path mapping\n\nSince version 4.1.1, lambda-proxy support custom domain and path mapping (see https://github.com/vincentsarago/lambda-proxy/issues/16).\n\nNote: When using path mapping other than `root` (`/`), `/` route won't be available.\n\n```python\nfrom lambda_proxy.proxy import API\n\napi = API(name=\"api\", debug=True)\n\n\n# This route won't work when using path mapping\n@api.get(\"/\", cors=True)\n# This route will work only if the path mapping is set to /api\n@api.get(\"/api\", cors=True)\ndef index():\n    html = \"\"\"<!DOCTYPE html>\n    <html>\n        <header><title>This is title</title></header>\n        <body>\n            Hello world\n        </body>\n    </html>\"\"\"\n    return (\"OK\", \"text/html\", html)\n\n\n@api.get(\"/yo\", cors=True)\ndef yo():\n    return (\"OK\", \"text/plain\", \"YOOOOO\")\n```\n\n# Plugin\n\n- Add cache layer: https://github.com/vincentsarago/lambda-proxy-cache\n\n\n# Examples\n\n-  https://github.com/vincentsarago/lambda-proxy/tree/master/example\n-  https://github.com/RemotePixel/remotepixel-tiler\n\n\n# Contribution & Devellopement\n\nIssues and pull requests are more than welcome.\n\n**Dev install & Pull-Request**\n\n```bash\n$ git clone https://github.com/vincentsarago/lambda-proxy.git\n$ cd lambda-proxy\n$ pip install -e .[dev]\n```\n\n**Python3.7 only**\n\nThis repo is set to use pre-commit to run *mypy*, *flake8*, *pydocstring* and *black* (\"uncompromising Python code formatter\") when committing new code.\n\n```bash\n$ pre-commit install\n$ git add .\n$ git commit -m'my change'\n   black.........................Passed\n   Flake8........................Passed\n   Verifying PEP257 Compliance...Passed\n   mypy..........................Passed\n$ git push origin\n```\n\n### License\n\nSee [LICENSE.txt](/LICENSE.txt>).\n\n### Authors\n\nSee [AUTHORS.txt](/AUTHORS.txt>).\n\n### Changes\n\nSee [CHANGES.txt](/CHANGES.txt>).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vincentsarago/lambda-proxy", "keywords": "AWS-Lambda API-Gateway Request Proxy", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "lambda-proxy", "package_url": "https://pypi.org/project/lambda-proxy/", "platform": "", "project_url": "https://pypi.org/project/lambda-proxy/", "project_urls": {"Homepage": "https://github.com/vincentsarago/lambda-proxy"}, "release_url": "https://pypi.org/project/lambda-proxy/5.2.1/", "requires_dist": null, "requires_python": ">=3", "summary": "Simple AWS Lambda proxy to handle API Gateway request", "version": "5.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>lambda-proxy</h1>\n<p><a href=\"https://badge.fury.io/py/lambda-proxy\" rel=\"nofollow\"><img alt=\"Packaging status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bc579155bf7f272c14c1417f86b164633c5eeacf/68747470733a2f2f62616467652e667572792e696f2f70792f6c616d6264612d70726f78792e737667\"></a>\n<a href=\"https://circleci.com/gh/vincentsarago/lambda-proxy\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3dcbe792dca91b5577363266312c1a592cf5c4aa/68747470733a2f2f636972636c6563692e636f6d2f67682f76696e63656e7473617261676f2f6c616d6264612d70726f78792e7376673f7374796c653d737667\"></a>\n<a href=\"https://codecov.io/gh/vincentsarago/lambda-proxy\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d8cc611d2d15773e474675a0fcbd3650d31e7a0/68747470733a2f2f636f6465636f762e696f2f67682f76696e63656e7473617261676f2f6c616d6264612d70726f78792f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p>A zero-requirement proxy linking AWS API Gateway <code>{proxy+}</code> requests and AWS Lambda.</p>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d534ee3ca92e9b6dc7835a3186617c05da6cc792/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31303430373738382f35383734323936362d36666635303438302d383366372d313165392d383166372d3362613761613233313062622e706e67\" width=\"600\">\n<h2>Install</h2>\n<pre>$ pip install -U pip\n$ pip install lambda-proxy\n</pre>\n<p>Or install from source:</p>\n<pre>$ git clone https://github.com/vincentsarag/lambda-proxy.git\n$ <span class=\"nb\">cd</span> lambda-proxy\n$ pip install -U pip\n$ pip install -e .\n</pre>\n<h1>Usage</h1>\n<p>Lambda proxy is designed to work well with both API Gateway's REST API and the\nnewer and cheaper HTTP API. If you have issues using with the HTTP API, please\nopen an issue.</p>\n<p>With GET request</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambda_proxy.proxy</span> <span class=\"kn\">import</span> <span class=\"n\">API</span>\n\n<span class=\"n\">APP</span> <span class=\"o\">=</span> <span class=\"n\">API</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"app\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/test/tests/&lt;id&gt;'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">],</span> <span class=\"n\">cors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_id</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s1\">'OK'</span><span class=\"p\">,</span> <span class=\"s1\">'plain/text'</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">)</span>\n</pre>\n<p>With POST request</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambda_proxy.proxy</span> <span class=\"kn\">import</span> <span class=\"n\">API</span>\n\n<span class=\"n\">APP</span> <span class=\"o\">=</span> <span class=\"n\">API</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"app\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/test/tests/&lt;id&gt;'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">],</span> <span class=\"n\">cors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_id</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s1\">'OK'</span><span class=\"p\">,</span> <span class=\"s1\">'plain/text'</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Note</strong></p>\n<p>Starting in version 5.2.0, users can now add route using <code>@APP.get</code> and <code>@APP.post</code> removing the need to add <code>methods=[**]</code></p>\n<h2>Binary body</h2>\n<p>Starting from version 5.0.0, lambda-proxy will decode base64 encoded body on POST message.</p>\n<p>Pre 5.0.0</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambda_proxy.proxy</span> <span class=\"kn\">import</span> <span class=\"n\">API</span>\n\n<span class=\"n\">APP</span> <span class=\"o\">=</span> <span class=\"n\">API</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"app\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/test'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">]</span><span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_id</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">):</span>\n    <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">base64</span><span class=\"o\">.</span><span class=\"n\">b64decode</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">())</span>\n</pre>\n<p>Post 5.0.0</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambda_proxy.proxy</span> <span class=\"kn\">import</span> <span class=\"n\">API</span>\n\n<span class=\"n\">APP</span> <span class=\"o\">=</span> <span class=\"n\">API</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"app\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/test'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">]</span><span class=\"n\">e</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_id</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">):</span>\n    <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">)</span>\n</pre>\n<h1>Routes</h1>\n<p>Route schema is simmilar to the one used in <a href=\"http://flask.pocoo.org/docs/1.0/api/#url-route-registrations\" rel=\"nofollow\">Flask</a></p>\n<blockquote>\n<p>Variable parts in the route can be specified with angular brackets <code>/user/&lt;username&gt;</code>. By default a variable part in the URL accepts any string without a slash however a different converter can be specified as well by using <code>&lt;converter:name&gt;</code>.</p>\n</blockquote>\n<p>Converters:</p>\n<ul>\n<li><code>int</code>: integer</li>\n<li><code>string</code>: string</li>\n<li><code>float</code>: float number</li>\n<li><code>uuid</code>: UUID</li>\n</ul>\n<p>example:</p>\n<ul>\n<li><code>/app/&lt;user&gt;/&lt;id&gt;</code> (<code>user</code> and <code>id</code> are variables)</li>\n<li><code>/app/&lt;string:value&gt;/&lt;float:num&gt;</code> (<code>value</code> will be a string, while <code>num</code> will be a float)</li>\n</ul>\n<h2>Regex</h2>\n<p>You can also add regex parameters descriptions using special converter <code>regex()</code></p>\n<p>example:</p>\n<pre><span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/app/&lt;regex([a-z]+):regularuser&gt;\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_user</span><span class=\"p\">(</span><span class=\"n\">regularuser</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s1\">'OK'</span><span class=\"p\">,</span> <span class=\"s1\">'plain/text'</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s2\">\"regular </span><span class=\"si\">{</span><span class=\"n\">regularuser</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/app/&lt;regex([A-Z]+):capitaluser&gt;\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_user</span><span class=\"p\">(</span><span class=\"n\">capitaluser</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s1\">'OK'</span><span class=\"p\">,</span> <span class=\"s1\">'plain/text'</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s2\">\"CAPITAL </span><span class=\"si\">{</span><span class=\"n\">capitaluser</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<h4>Warning</h4>\n<p>when using <strong>regex()</strong> you must use different variable names or the route might not show up in the documentation.</p>\n<pre><span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/app/&lt;regex([a-z]+):user&gt;\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_user</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s1\">'OK'</span><span class=\"p\">,</span> <span class=\"s1\">'plain/text'</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s2\">\"regular </span><span class=\"si\">{</span><span class=\"n\">user</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/app/&lt;regex([A-Z]+):user&gt;\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_user</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s1\">'OK'</span><span class=\"p\">,</span> <span class=\"s1\">'plain/text'</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s2\">\"CAPITAL </span><span class=\"si\">{</span><span class=\"n\">user</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<p>This app will work but the documentation will only show the second route because in <code>openapi.json</code>, route names will be <code>/app/{user}</code> for both routes.</p>\n<h1>Route Options</h1>\n<ul>\n<li><strong>path</strong>: the URL rule as string</li>\n<li><strong>methods</strong>: list of HTTP methods allowed, default: [\"GET\"]</li>\n<li><strong>cors</strong>: allow CORS, default: <code>False</code></li>\n<li><strong>token</strong>: set <code>access_token</code> validation</li>\n<li><strong>payload_compression_method</strong>: Enable and select an output body compression</li>\n<li><strong>binary_b64encode</strong>: base64 encode the output body (API Gateway)</li>\n<li><strong>ttl</strong>: Cache Control setting (Time to Live) <strong>(Deprecated in 6.0.0)</strong></li>\n<li><strong>cache_control</strong>: Cache Control setting</li>\n<li><strong>description</strong>: route description (for documentation)</li>\n<li><strong>tag</strong>: list of tags (for documentation)</li>\n</ul>\n<h2>Cache Control</h2>\n<p>Add a Cache Control header with a Time to Live (TTL) in seconds.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambda_proxy.proxy</span> <span class=\"kn\">import</span> <span class=\"n\">API</span>\n<span class=\"n\">APP</span> <span class=\"o\">=</span> <span class=\"n\">API</span><span class=\"p\">(</span><span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"s2\">\"app\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/test/tests/&lt;id&gt;'</span><span class=\"p\">,</span> <span class=\"n\">cors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">cache_control</span><span class=\"o\">=</span><span class=\"s2\">\"public,max-age=3600\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_id</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">):</span>\n   <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s1\">'OK'</span><span class=\"p\">,</span> <span class=\"s1\">'plain/text'</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">)</span>\n</pre>\n<p>Note: If function returns other then \"OK\", Cache-Control will be set to <code>no-cache</code></p>\n<h2>Binary responses</h2>\n<p>When working with binary on API-Gateway we must return a base64 encoded string</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambda_proxy.proxy</span> <span class=\"kn\">import</span> <span class=\"n\">API</span>\n\n<span class=\"n\">APP</span> <span class=\"o\">=</span> <span class=\"n\">API</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"app\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/test/tests/&lt;filename&gt;.jpg'</span><span class=\"p\">,</span> <span class=\"n\">cors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">binary_b64encode</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_id</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">filename</span><span class=\"si\">}</span><span class=\"s2\">.jpg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"rb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s1\">'OK'</span><span class=\"p\">,</span> <span class=\"s1\">'image/jpeg'</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n</pre>\n<h2>Compression</h2>\n<p>Enable compression if \"Accept-Encoding\" if found in headers.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambda_proxy.proxy</span> <span class=\"kn\">import</span> <span class=\"n\">API</span>\n\n<span class=\"n\">APP</span> <span class=\"o\">=</span> <span class=\"n\">API</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"app\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n   <span class=\"s1\">'/test/tests/&lt;filename&gt;.jpg'</span><span class=\"p\">,</span>\n   <span class=\"n\">cors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n   <span class=\"n\">binary_b64encode</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n   <span class=\"n\">payload_compression_method</span><span class=\"o\">=</span><span class=\"s2\">\"gzip\"</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_id</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">filename</span><span class=\"si\">}</span><span class=\"s2\">.jpg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"rb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n       <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s1\">'OK'</span><span class=\"p\">,</span> <span class=\"s1\">'image/jpeg'</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n</pre>\n<h2>Simple Auth token</h2>\n<p>Lambda-proxy provide a simple token validation system.</p>\n<ul>\n<li>a \"TOKEN\" variable must be set in the environment</li>\n<li>each request must provide a \"access_token\" params (e.g curl\n<a href=\"http://myurl/test/tests/myid?access_token=blabla\" rel=\"nofollow\">http://myurl/test/tests/myid?access_token=blabla</a>)</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambda_proxy.proxy</span> <span class=\"kn\">import</span> <span class=\"n\">API</span>\n\n<span class=\"n\">APP</span> <span class=\"o\">=</span> <span class=\"n\">API</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"app\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/test/tests/&lt;id&gt;'</span><span class=\"p\">,</span> <span class=\"n\">cors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_id</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s1\">'OK'</span><span class=\"p\">,</span> <span class=\"s1\">'plain/text'</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">)</span>\n</pre>\n<h2>URL schema and request parameters</h2>\n<p>QueryString parameters are passed as function's options.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambda_proxy.proxy</span> <span class=\"kn\">import</span> <span class=\"n\">API</span>\n\n<span class=\"n\">APP</span> <span class=\"o\">=</span> <span class=\"n\">API</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"app\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/&lt;id&gt;'</span><span class=\"p\">,</span> <span class=\"n\">cors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_id</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s1\">'OK'</span><span class=\"p\">,</span> <span class=\"s1\">'plain/text'</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"nb\">id</span><span class=\"si\">}{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<p>requests:</p>\n<pre>$ curl /000001\n   <span class=\"m\">0001</span>\n\n$ curl /000001?name<span class=\"o\">=</span>vincent\n   0001vincent\n</pre>\n<h2>Multiple Routes</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambda_proxy.proxy</span> <span class=\"kn\">import</span> <span class=\"n\">API</span>\n<span class=\"n\">APP</span> <span class=\"o\">=</span> <span class=\"n\">API</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"app\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/&lt;id&gt;'</span><span class=\"p\">,</span> <span class=\"n\">cors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/&lt;id&gt;/&lt;int:number&gt;'</span><span class=\"p\">,</span> <span class=\"n\">cors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_id</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">number</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s1\">'OK'</span><span class=\"p\">,</span> <span class=\"s1\">'plain/text'</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"nb\">id</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">number</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<p>requests:</p>\n<pre>$ curl /000001\n   <span class=\"m\">0001</span>--\n\n$ curl /000001?name<span class=\"o\">=</span>vincent\n   <span class=\"m\">0001</span>-vincent-\n\n$ curl /000001/1?name<span class=\"o\">=</span>vincent\n   <span class=\"m\">0001</span>-vincent-1\n</pre>\n<h1>Advanced features</h1>\n<h2>Context and Event passing</h2>\n<p>Pass event and context to the handler function.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambda_proxy.proxy</span> <span class=\"kn\">import</span> <span class=\"n\">API</span>\n\n<span class=\"n\">APP</span> <span class=\"o\">=</span> <span class=\"n\">API</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"app\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/&lt;id&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">cors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">pass_event</span>\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">pass_context</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_id</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"n\">evt</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">evt</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s1\">'OK'</span><span class=\"p\">,</span> <span class=\"s1\">'plain/text'</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"nb\">id</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<h1>Automatic OpenAPI documentation</h1>\n<p>By default the APP (<code>lambda_proxy.proxy.API</code>) is provided with three (3) routes:</p>\n<ul>\n<li>\n<p><code>/openapi.json</code>: print OpenAPI JSON definition</p>\n</li>\n<li>\n<p><code>/docs</code>: swagger html UI\n<img alt=\"swagger\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b1f605c2cbc2ff9fdf5eaabac2256001b3a70f8/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31303430373738382f35383730373333352d39636262303438302d383338322d313165392d393237662d3864393932636632353331612e6a7067\"></p>\n</li>\n<li>\n<p><code>/redoc</code>: Redoc html UI\n<img alt=\"redoc\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/47f036f9fcf638207cb1a06592d4f8c7761b8d9e/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f31303430373738382f35383730373333382d39646563333138302d383338322d313165392d386465632d3138313733653339323538662e6a7067\"></p>\n</li>\n</ul>\n<p><strong>Function annotations</strong></p>\n<p>To be able to render full and precise API documentation, lambda_proxy uses python type hint and annotations <a href=\"https://www.python.org/dev/peps/pep-3107/\" rel=\"nofollow\">link</a>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambda_proxy.proxy</span> <span class=\"kn\">import</span> <span class=\"n\">API</span>\n\n<span class=\"n\">APP</span> <span class=\"o\">=</span> <span class=\"n\">API</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"app\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@APP</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/test/&lt;int:id&gt;'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">],</span> <span class=\"n\">cors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">print_id</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.2</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tuple</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s1\">'OK'</span><span class=\"p\">,</span> <span class=\"s1\">'plain/text'</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">)</span>\n</pre>\n<p>In the example above, our route <code>/test/&lt;int:id&gt;</code> define an input <code>id</code> to be a <code>INT</code>, while we also add this hint to the function <code>print_id</code> we also specify the type (and default) of the <code>num</code> option.</p>\n<h1>Custom Domain and path mapping</h1>\n<p>Since version 4.1.1, lambda-proxy support custom domain and path mapping (see <a href=\"https://github.com/vincentsarago/lambda-proxy/issues/16\" rel=\"nofollow\">https://github.com/vincentsarago/lambda-proxy/issues/16</a>).</p>\n<p>Note: When using path mapping other than <code>root</code> (<code>/</code>), <code>/</code> route won't be available.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lambda_proxy.proxy</span> <span class=\"kn\">import</span> <span class=\"n\">API</span>\n\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">API</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"api\"</span><span class=\"p\">,</span> <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># This route won't work when using path mapping</span>\n<span class=\"nd\">@api</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"n\">cors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># This route will work only if the path mapping is set to /api</span>\n<span class=\"nd\">@api</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/api\"</span><span class=\"p\">,</span> <span class=\"n\">cors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">():</span>\n    <span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"&lt;!DOCTYPE html&gt;</span>\n<span class=\"s2\">    &lt;html&gt;</span>\n<span class=\"s2\">        &lt;header&gt;&lt;title&gt;This is title&lt;/title&gt;&lt;/header&gt;</span>\n<span class=\"s2\">        &lt;body&gt;</span>\n<span class=\"s2\">            Hello world</span>\n<span class=\"s2\">        &lt;/body&gt;</span>\n<span class=\"s2\">    &lt;/html&gt;\"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s2\">\"OK\"</span><span class=\"p\">,</span> <span class=\"s2\">\"text/html\"</span><span class=\"p\">,</span> <span class=\"n\">html</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@api</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"/yo\"</span><span class=\"p\">,</span> <span class=\"n\">cors</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">yo</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"s2\">\"OK\"</span><span class=\"p\">,</span> <span class=\"s2\">\"text/plain\"</span><span class=\"p\">,</span> <span class=\"s2\">\"YOOOOO\"</span><span class=\"p\">)</span>\n</pre>\n<h1>Plugin</h1>\n<ul>\n<li>Add cache layer: <a href=\"https://github.com/vincentsarago/lambda-proxy-cache\" rel=\"nofollow\">https://github.com/vincentsarago/lambda-proxy-cache</a></li>\n</ul>\n<h1>Examples</h1>\n<ul>\n<li><a href=\"https://github.com/vincentsarago/lambda-proxy/tree/master/example\" rel=\"nofollow\">https://github.com/vincentsarago/lambda-proxy/tree/master/example</a></li>\n<li><a href=\"https://github.com/RemotePixel/remotepixel-tiler\" rel=\"nofollow\">https://github.com/RemotePixel/remotepixel-tiler</a></li>\n</ul>\n<h1>Contribution &amp; Devellopement</h1>\n<p>Issues and pull requests are more than welcome.</p>\n<p><strong>Dev install &amp; Pull-Request</strong></p>\n<pre>$ git clone https://github.com/vincentsarago/lambda-proxy.git\n$ <span class=\"nb\">cd</span> lambda-proxy\n$ pip install -e .<span class=\"o\">[</span>dev<span class=\"o\">]</span>\n</pre>\n<p><strong>Python3.7 only</strong></p>\n<p>This repo is set to use pre-commit to run <em>mypy</em>, <em>flake8</em>, <em>pydocstring</em> and <em>black</em> (\"uncompromising Python code formatter\") when committing new code.</p>\n<pre>$ pre-commit install\n$ git add .\n$ git commit -m<span class=\"s1\">'my change'</span>\n   black.........................Passed\n   Flake8........................Passed\n   Verifying PEP257 Compliance...Passed\n   mypy..........................Passed\n$ git push origin\n</pre>\n<h3>License</h3>\n<p>See <a href=\"/LICENSE.txt%3E\" rel=\"nofollow\">LICENSE.txt</a>.</p>\n<h3>Authors</h3>\n<p>See <a href=\"/AUTHORS.txt%3E\" rel=\"nofollow\">AUTHORS.txt</a>.</p>\n<h3>Changes</h3>\n<p>See <a href=\"/CHANGES.txt%3E\" rel=\"nofollow\">CHANGES.txt</a>.</p>\n\n          </div>"}, "last_serial": 7166534, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "854a1f37ec0714e027e0641a2448ad76", "sha256": "061578c0f7ba4b6fecf1a748565af990ef69a513ab9347ef4c6074ace4a85754"}, "downloads": -1, "filename": "lambda_proxy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "854a1f37ec0714e027e0641a2448ad76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4872, "upload_time": "2017-11-26T18:50:35", "upload_time_iso_8601": "2017-11-26T18:50:35.108026Z", "url": "https://files.pythonhosted.org/packages/63/33/eb03307cc158e7322991b61bef05afe1e70971ac355d013a225c883d47df/lambda_proxy-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "c8c0e1684be14ea5e0084ffc47f3f70e", "sha256": "d12933f37cb2bf279bc51e91281d92d637ab24d7ff7f111170c961aee203c830"}, "downloads": -1, "filename": "lambda_proxy-0.0.2.tar.gz", "has_sig": false, "md5_digest": "c8c0e1684be14ea5e0084ffc47f3f70e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4882, "upload_time": "2017-12-24T18:35:50", "upload_time_iso_8601": "2017-12-24T18:35:50.872775Z", "url": "https://files.pythonhosted.org/packages/8a/ff/54cd09a8c34a60a16cb8672f597aaf2ad8a101005f12cc466e932e14bc6a/lambda_proxy-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "66ff52472eacd481a82e5b505ede9c3c", "sha256": "855251ca4ac715c6a2718b6a131fa10faf0b1c03b3dae23af6d098735d1998ef"}, "downloads": -1, "filename": "lambda_proxy-0.0.3.tar.gz", "has_sig": false, "md5_digest": "66ff52472eacd481a82e5b505ede9c3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4913, "upload_time": "2018-02-02T17:44:05", "upload_time_iso_8601": "2018-02-02T17:44:05.451904Z", "url": "https://files.pythonhosted.org/packages/5e/d0/7ceee1b12fe7732ee56d4e1c9133d5cabec4dbe64f33a825e0f3b895252c/lambda_proxy-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "36b2360fd6e23814f6d0e32a3e97d25b", "sha256": "5b807287df2e081a7285947f08bd2bd8bd426ad04a81eac7ec2105eb3f696664"}, "downloads": -1, "filename": "lambda_proxy-0.0.4.tar.gz", "has_sig": false, "md5_digest": "36b2360fd6e23814f6d0e32a3e97d25b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4966, "upload_time": "2018-03-30T14:09:57", "upload_time_iso_8601": "2018-03-30T14:09:57.516238Z", "url": "https://files.pythonhosted.org/packages/18/36/8e7609d4c363e0cb21ecf361ddced9ad9e4fb37b83153a2e770a54442759/lambda_proxy-0.0.4.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "925c414c82e9103d2f937609d738497b", "sha256": "51b40b67d17fe7460ac0a75e50747e6047d817a3523850221cfce4a40a4031e5"}, "downloads": -1, "filename": "lambda_proxy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "925c414c82e9103d2f937609d738497b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5837, "upload_time": "2018-09-05T15:40:22", "upload_time_iso_8601": "2018-09-05T15:40:22.356919Z", "url": "https://files.pythonhosted.org/packages/b8/22/863c7c9ee8f92945cb95e5d27524af6335e3b81a886fff9f001c6513365d/lambda_proxy-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "6f4384ee0627a9055ba44c0f26180f99", "sha256": "4b1e58df1f41b7a3edca95cd77cb5f356f167bb79abc474d532132653928a714"}, "downloads": -1, "filename": "lambda_proxy-1.1.0.tar.gz", "has_sig": false, "md5_digest": "6f4384ee0627a9055ba44c0f26180f99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6011, "upload_time": "2018-09-06T06:55:01", "upload_time_iso_8601": "2018-09-06T06:55:01.513191Z", "url": "https://files.pythonhosted.org/packages/c6/ef/2df48356d7a1d2b659cc984397df1e91889e316c932a9638175bb23b38ae/lambda_proxy-1.1.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "56929f9311ef34cd3749c9a69644668a", "sha256": "259a502348bef14d8c32c92bf2af0a0981e41c375e5ef2f7e43fff5d7cf6e810"}, "downloads": -1, "filename": "lambda_proxy-2.0.0.tar.gz", "has_sig": false, "md5_digest": "56929f9311ef34cd3749c9a69644668a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 6954, "upload_time": "2019-01-29T19:20:28", "upload_time_iso_8601": "2019-01-29T19:20:28.627720Z", "url": "https://files.pythonhosted.org/packages/bc/d5/bf67c5c3006811d9890cec95003ceceaf79d5434aea67555c9d9caa10f83/lambda_proxy-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "c277d474783d86d3e8f2819aa403f15c", "sha256": "bbe6faf40c44d658fc4500ddabbef342c82e7900346686878585d812ad081135"}, "downloads": -1, "filename": "lambda_proxy-2.0.1.tar.gz", "has_sig": false, "md5_digest": "c277d474783d86d3e8f2819aa403f15c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8106, "upload_time": "2019-02-03T06:24:10", "upload_time_iso_8601": "2019-02-03T06:24:10.142024Z", "url": "https://files.pythonhosted.org/packages/6e/06/e9cfcfba7455595add4397fedb5460a5bc69483092befcd400d9b7ada949/lambda_proxy-2.0.1.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "8f8eb3d01a462fc146ba59e1ebd3074a", "sha256": "6a2ab92bd3ef807fb21d1d8fc660706ea60aaf5d6c8ac7ca6848bda54894f57f"}, "downloads": -1, "filename": "lambda_proxy-2.0.3.tar.gz", "has_sig": false, "md5_digest": "8f8eb3d01a462fc146ba59e1ebd3074a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8095, "upload_time": "2019-02-21T20:26:19", "upload_time_iso_8601": "2019-02-21T20:26:19.220376Z", "url": "https://files.pythonhosted.org/packages/5a/61/ad127a845bc615de7146ad42fcf44a51c3392ef99e2a7c5cfeead07f003b/lambda_proxy-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "42d0af67eb7cf7eabe0e77f9e39a2120", "sha256": "65e476312dc11e4b75a49344c468572a88875aa2faa771a2b5ab37cf235aea0b"}, "downloads": -1, "filename": "lambda_proxy-2.0.4.tar.gz", "has_sig": false, "md5_digest": "42d0af67eb7cf7eabe0e77f9e39a2120", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8983, "upload_time": "2019-02-26T19:57:56", "upload_time_iso_8601": "2019-02-26T19:57:56.503055Z", "url": "https://files.pythonhosted.org/packages/1b/16/e2d16d982216ceec42cfdd1ec523d42d208005f047941cd792a22936cceb/lambda_proxy-2.0.4.tar.gz", "yanked": false}], "2.0b1": [{"comment_text": "", "digests": {"md5": "a4af118dfb8e006f647fff62671ccd8c", "sha256": "87dbe0e5b3333790f108c296f928b4c7362e4ab19219717a8f628d2905bde114"}, "downloads": -1, "filename": "lambda_proxy-2.0b1.tar.gz", "has_sig": false, "md5_digest": "a4af118dfb8e006f647fff62671ccd8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6478, "upload_time": "2019-01-28T03:39:17", "upload_time_iso_8601": "2019-01-28T03:39:17.972668Z", "url": "https://files.pythonhosted.org/packages/64/0e/c46454aae3f39f8483bdec241fd045381fab99ebac0d814d6b20affc0373/lambda_proxy-2.0b1.tar.gz", "yanked": false}], "2.0b2": [{"comment_text": "", "digests": {"md5": "d29448aa936d9245a28fa459cfddb791", "sha256": "1eed4e4f3a0fa127dfe3fd1e0324bd5d3fe96db8e76aef30ed5ff4a6fea0a2c9"}, "downloads": -1, "filename": "lambda_proxy-2.0b2.tar.gz", "has_sig": false, "md5_digest": "d29448aa936d9245a28fa459cfddb791", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6633, "upload_time": "2019-01-28T05:25:07", "upload_time_iso_8601": "2019-01-28T05:25:07.122241Z", "url": "https://files.pythonhosted.org/packages/dc/1f/422738229b6f90d59e113174083fb81b0f3662b290351add4639cb3507e2/lambda_proxy-2.0b2.tar.gz", "yanked": false}], "2.0b3": [{"comment_text": "", "digests": {"md5": "ff8e9573bffb26a10705bd51996c8693", "sha256": "d5b8950b369977d7427673115e6ef81d72dace51d61cd27661d3bc5da959a273"}, "downloads": -1, "filename": "lambda_proxy-2.0b3.tar.gz", "has_sig": false, "md5_digest": "ff8e9573bffb26a10705bd51996c8693", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6658, "upload_time": "2019-01-28T14:36:34", "upload_time_iso_8601": "2019-01-28T14:36:34.981208Z", "url": "https://files.pythonhosted.org/packages/8e/93/bcf581bf02410dba858679d525b6ad865360b0dbd4355a2b03a3dc83e406/lambda_proxy-2.0b3.tar.gz", "yanked": false}], "2.0b4": [{"comment_text": "", "digests": {"md5": "d15d97713d49023e5884a7d0b4e5e139", "sha256": "10d33e0ddac86c056e27a5d842705a1d769ba8d2dc83f886529bd68625713cb4"}, "downloads": -1, "filename": "lambda_proxy-2.0b4.tar.gz", "has_sig": false, "md5_digest": "d15d97713d49023e5884a7d0b4e5e139", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 6731, "upload_time": "2019-01-28T21:33:39", "upload_time_iso_8601": "2019-01-28T21:33:39.200355Z", "url": "https://files.pythonhosted.org/packages/b0/2e/9551fb198e8f3463a02c6825a1b5685e15a13c2b174573c3a55a16a9db2d/lambda_proxy-2.0b4.tar.gz", "yanked": false}], "2.0b5": [{"comment_text": "", "digests": {"md5": "00c97188b750111b040ddabe0821b308", "sha256": "a117248923bc5fcfe2cb2513a4863899ef2a0a81f86d635154dbacc940ebdf7f"}, "downloads": -1, "filename": "lambda_proxy-2.0b5.tar.gz", "has_sig": false, "md5_digest": "00c97188b750111b040ddabe0821b308", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 6765, "upload_time": "2019-01-28T22:21:50", "upload_time_iso_8601": "2019-01-28T22:21:50.542175Z", "url": "https://files.pythonhosted.org/packages/50/96/dc6f19aa59076315bff82e88cc5d1381166a1e292f96767f47253a642e0d/lambda_proxy-2.0b5.tar.gz", "yanked": false}], "2.0b6": [{"comment_text": "", "digests": {"md5": "2e08be1084a6471bd0696da382af817e", "sha256": "b63db64ed9cb4a165f5879e28ef8dc017691ecf37215b55d8d159649190381ca"}, "downloads": -1, "filename": "lambda_proxy-2.0b6.tar.gz", "has_sig": false, "md5_digest": "2e08be1084a6471bd0696da382af817e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 6768, "upload_time": "2019-01-28T22:35:53", "upload_time_iso_8601": "2019-01-28T22:35:53.431599Z", "url": "https://files.pythonhosted.org/packages/dd/9a/1259ae596b5bb920847f0f9fb82fe5c4b1d48db6b7b98ee3bdf16395f46a/lambda_proxy-2.0b6.tar.gz", "yanked": false}], "2.0b8": [{"comment_text": "", "digests": {"md5": "db438762d1783366d54092fe7f6ede5b", "sha256": "696835581a608738916a52d0bc5f5ae4517f8d75bee34a1ac4b5ec4204b29504"}, "downloads": -1, "filename": "lambda_proxy-2.0b8.tar.gz", "has_sig": false, "md5_digest": "db438762d1783366d54092fe7f6ede5b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 6950, "upload_time": "2019-01-29T03:42:49", "upload_time_iso_8601": "2019-01-29T03:42:49.727467Z", "url": "https://files.pythonhosted.org/packages/99/3e/5e703cd56a4eaf5fca8cd9089825947be2696fcab3c68d7a896249dfabf9/lambda_proxy-2.0b8.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "922b48608de7ed16fa61f831f9cb576f", "sha256": "73f86178cfdebe4b9c82b11ffe9d81239168873884482005ee1592e8a7200650"}, "downloads": -1, "filename": "lambda_proxy-3.0.0.tar.gz", "has_sig": false, "md5_digest": "922b48608de7ed16fa61f831f9cb576f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 7714, "upload_time": "2019-03-06T00:42:50", "upload_time_iso_8601": "2019-03-06T00:42:50.552433Z", "url": "https://files.pythonhosted.org/packages/8e/f5/0afd9555a7343a6e65a2fad941b9cac84bb72729edd7f7edba2b385238ac/lambda_proxy-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "edf53ac0f90044b645a05312084de045", "sha256": "8241f9abec73d899ee3deac161747b8ec7b2ddc26ea1ae7d81a99adea29643d7"}, "downloads": -1, "filename": "lambda_proxy-3.0.1.tar.gz", "has_sig": false, "md5_digest": "edf53ac0f90044b645a05312084de045", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 7899, "upload_time": "2019-04-25T17:13:41", "upload_time_iso_8601": "2019-04-25T17:13:41.446542Z", "url": "https://files.pythonhosted.org/packages/34/f0/3d9495e63d8484a4de8d97eff413867b850ca9ab671888187a84d174b60e/lambda_proxy-3.0.1.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "42efe90bb2f578cb3e52b11af867f08e", "sha256": "196f9fc040582b7842f62257bc85e1bd4b6e1aa60413eeff0b2c2fdf9c8863ea"}, "downloads": -1, "filename": "lambda-proxy-4.0.0.tar.gz", "has_sig": false, "md5_digest": "42efe90bb2f578cb3e52b11af867f08e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 14066, "upload_time": "2019-06-03T17:27:58", "upload_time_iso_8601": "2019-06-03T17:27:58.776305Z", "url": "https://files.pythonhosted.org/packages/aa/85/90cec88c03f2836904bf7e19c248c975d4c3e6d89338736a096327733995/lambda-proxy-4.0.0.tar.gz", "yanked": false}], "4.0rc0": [{"comment_text": "", "digests": {"md5": "d7a7bc578b78f1b22458e3feed4114bc", "sha256": "439f7702ed76b426060f65d6e505c50c288246f737b8be2b8430c95ef5f42179"}, "downloads": -1, "filename": "lambda_proxy-4.0rc0.tar.gz", "has_sig": false, "md5_digest": "d7a7bc578b78f1b22458e3feed4114bc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 12298, "upload_time": "2019-05-31T14:34:59", "upload_time_iso_8601": "2019-05-31T14:34:59.935880Z", "url": "https://files.pythonhosted.org/packages/2a/6f/1c310b20d98c3ef3010418bf0ac184c6ef64bee5540ace88ab87dfa6d93b/lambda_proxy-4.0rc0.tar.gz", "yanked": false}], "4.0rc1": [{"comment_text": "", "digests": {"md5": "da6c3ff144dbbab20380c8a39642c0b1", "sha256": "6a5a985e330ba296bcc3ec04977132724f17f63c6bda698b1f20fd056b745a84"}, "downloads": -1, "filename": "lambda_proxy-4.0rc1.tar.gz", "has_sig": false, "md5_digest": "da6c3ff144dbbab20380c8a39642c0b1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 12302, "upload_time": "2019-05-31T15:00:29", "upload_time_iso_8601": "2019-05-31T15:00:29.962542Z", "url": "https://files.pythonhosted.org/packages/d9/39/060617f6456276bad6424e281633cbd075ed7d494ad020f8b9d240f10bf8/lambda_proxy-4.0rc1.tar.gz", "yanked": false}], "4.0rc2": [{"comment_text": "", "digests": {"md5": "bb53007f9736b0f2d62e89c80b9badfe", "sha256": "890a9b64b89d7b14443ae427afbfb76fb18857bc1c806b8147e998c2265d0913"}, "downloads": -1, "filename": "lambda_proxy-4.0rc2.tar.gz", "has_sig": false, "md5_digest": "bb53007f9736b0f2d62e89c80b9badfe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 12309, "upload_time": "2019-05-31T18:02:59", "upload_time_iso_8601": "2019-05-31T18:02:59.003128Z", "url": "https://files.pythonhosted.org/packages/b7/6f/a04b1768eb8811eb4a8ea5cf76c6f44ede25c15479f4d34e6b12277760e1/lambda_proxy-4.0rc2.tar.gz", "yanked": false}], "4.0rc3": [{"comment_text": "", "digests": {"md5": "90f433580502a1e9e7ed1ff55e08918e", "sha256": "73f870bf4ae83544952a5ff1f27a93a4dc26836c630e1bc8ec56fee0be98aee2"}, "downloads": -1, "filename": "lambda_proxy-4.0rc3.tar.gz", "has_sig": false, "md5_digest": "90f433580502a1e9e7ed1ff55e08918e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 14067, "upload_time": "2019-06-01T03:06:22", "upload_time_iso_8601": "2019-06-01T03:06:22.102479Z", "url": "https://files.pythonhosted.org/packages/7c/d2/24b56f98b31a1e09c5765df97d38dfd77fdd8e07b61e5c7f63adf12f737b/lambda_proxy-4.0rc3.tar.gz", "yanked": false}], "4.1.0": [{"comment_text": "", "digests": {"md5": "ee86bf18e56784323a95f06ee0967d08", "sha256": "cb66c362d9e69244b2f113e34ecf9c80d7044601264fca4982881f3b3b486586"}, "downloads": -1, "filename": "lambda-proxy-4.1.0.tar.gz", "has_sig": false, "md5_digest": "ee86bf18e56784323a95f06ee0967d08", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 14886, "upload_time": "2019-06-21T01:46:25", "upload_time_iso_8601": "2019-06-21T01:46:25.662878Z", "url": "https://files.pythonhosted.org/packages/76/19/90fa893ae194370929c9ed075d9b5d08fdf1c325433fcfa3071275f1e533/lambda-proxy-4.1.0.tar.gz", "yanked": false}], "4.1.1": [{"comment_text": "", "digests": {"md5": "401e1874c655de6c4dbed9e727fcd683", "sha256": "4b2b2adfe73da803cedb80f3b3dde4a886c7a34daf360b012ae004149dd578ca"}, "downloads": -1, "filename": "lambda-proxy-4.1.1.tar.gz", "has_sig": false, "md5_digest": "401e1874c655de6c4dbed9e727fcd683", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 15709, "upload_time": "2019-08-01T06:51:25", "upload_time_iso_8601": "2019-08-01T06:51:25.736210Z", "url": "https://files.pythonhosted.org/packages/19/4f/7739780123de02f30f54a7df4387d7f45d7d5c16b0dfacb1bdf724c3f978/lambda-proxy-4.1.1.tar.gz", "yanked": false}], "4.1.2": [{"comment_text": "", "digests": {"md5": "11c5d49f5591bd7b2b40c5b949cb90c1", "sha256": "68d43aaf41daa54d351e862557f054f018cf0897dad57d3e008b4cc6fa4d36f1"}, "downloads": -1, "filename": "lambda-proxy-4.1.2.tar.gz", "has_sig": false, "md5_digest": "11c5d49f5591bd7b2b40c5b949cb90c1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 15730, "upload_time": "2019-08-01T09:27:46", "upload_time_iso_8601": "2019-08-01T09:27:46.533502Z", "url": "https://files.pythonhosted.org/packages/e2/1a/0974f895058f48865885f9f7b9f75bb12c1312863c7317e6be7c19e466b0/lambda-proxy-4.1.2.tar.gz", "yanked": false}], "4.1.3": [{"comment_text": "", "digests": {"md5": "9fb87e97f40ae6602b33200fbef325a5", "sha256": "f91924fdcc173cc1eadaf1ebf06307869df9ce866260d7920dda1c53756d72c9"}, "downloads": -1, "filename": "lambda-proxy-4.1.3.tar.gz", "has_sig": false, "md5_digest": "9fb87e97f40ae6602b33200fbef325a5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 16017, "upload_time": "2019-08-01T22:59:26", "upload_time_iso_8601": "2019-08-01T22:59:26.643696Z", "url": "https://files.pythonhosted.org/packages/1a/79/f3d0f40a4562d7933cfc9a55e1b188e401897a9a654153c5dc3a6b3fb1f4/lambda-proxy-4.1.3.tar.gz", "yanked": false}], "4.1.4": [{"comment_text": "", "digests": {"md5": "7aa5e21a8faa89d24a58c170bea21a0f", "sha256": "4d1a710175f20d39bce33e99ba069a6a037649eb99351b2b5c4f4bd2f3b27d76"}, "downloads": -1, "filename": "lambda-proxy-4.1.4.tar.gz", "has_sig": false, "md5_digest": "7aa5e21a8faa89d24a58c170bea21a0f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 16222, "upload_time": "2019-08-19T13:16:07", "upload_time_iso_8601": "2019-08-19T13:16:07.283436Z", "url": "https://files.pythonhosted.org/packages/27/e0/beae2f668296c7730776ab83da7a6afd249e570f3636ec4af85cf13fb82f/lambda-proxy-4.1.4.tar.gz", "yanked": false}], "5.0.0": [{"comment_text": "", "digests": {"md5": "d2f4d4f177ac3a6fbf46a278f233d696", "sha256": "2ba3bbce874022882d722571d2e6c4e0d9f69216a43a4140493dd9d1ab8e088d"}, "downloads": -1, "filename": "lambda-proxy-5.0.0.tar.gz", "has_sig": false, "md5_digest": "d2f4d4f177ac3a6fbf46a278f233d696", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 16581, "upload_time": "2019-09-27T20:06:48", "upload_time_iso_8601": "2019-09-27T20:06:48.882377Z", "url": "https://files.pythonhosted.org/packages/c8/1e/2868a9b7e707304b9f8c00287f82c4a50336c4f68c87e60b39c931f9d50e/lambda-proxy-5.0.0.tar.gz", "yanked": false}], "5.0.1": [{"comment_text": "", "digests": {"md5": "019d8376839f27960d44d32d2fdfab87", "sha256": "23b9e0d8cb126ce82675a62ec979bc78b9a7d59f103368ab0633e8a85d04a66e"}, "downloads": -1, "filename": "lambda-proxy-5.0.1.tar.gz", "has_sig": false, "md5_digest": "019d8376839f27960d44d32d2fdfab87", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 16512, "upload_time": "2019-10-11T13:29:55", "upload_time_iso_8601": "2019-10-11T13:29:55.618867Z", "url": "https://files.pythonhosted.org/packages/af/be/84e1e18107e0648d4ff785fe14cb1717eb1b99f37701db17fb4cadd2b72e/lambda-proxy-5.0.1.tar.gz", "yanked": false}], "5.0.2": [{"comment_text": "", "digests": {"md5": "ec7e200c3c1318f37cab92c79192b477", "sha256": "c0fa0c748e0e1f023d97766d308276378022670b2b82bfc708d5d29d8612bb6c"}, "downloads": -1, "filename": "lambda-proxy-5.0.2.tar.gz", "has_sig": false, "md5_digest": "ec7e200c3c1318f37cab92c79192b477", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 16516, "upload_time": "2019-11-20T21:55:52", "upload_time_iso_8601": "2019-11-20T21:55:52.359947Z", "url": "https://files.pythonhosted.org/packages/bf/fe/365e9c33fc6ac7845ed4e866b74af3a2e5ac3ae1d388fa695125b3fbb448/lambda-proxy-5.0.2.tar.gz", "yanked": false}], "5.1.0": [{"comment_text": "", "digests": {"md5": "e71e1079a0ccf1ee2e4460ff7e80b166", "sha256": "cdd2a8f6918cb0619b0597f93c64ea29ff137a2d6c52f32f2a62d6d2ff295ecc"}, "downloads": -1, "filename": "lambda-proxy-5.1.0.tar.gz", "has_sig": false, "md5_digest": "e71e1079a0ccf1ee2e4460ff7e80b166", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 16794, "upload_time": "2020-03-23T19:49:00", "upload_time_iso_8601": "2020-03-23T19:49:00.412371Z", "url": "https://files.pythonhosted.org/packages/86/bf/2eb0a776f62f3fa99b8612e040ba734ef8e6ad6a898b5f2641ef2df3e138/lambda-proxy-5.1.0.tar.gz", "yanked": false}], "5.1.1": [{"comment_text": "", "digests": {"md5": "45ed87dbff3979086372b21226203d87", "sha256": "5254ef33c9c6107c59d225727bad1ad4c62c74ac6a122f30492772b8103e96b4"}, "downloads": -1, "filename": "lambda-proxy-5.1.1.tar.gz", "has_sig": false, "md5_digest": "45ed87dbff3979086372b21226203d87", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 17026, "upload_time": "2020-04-04T02:44:27", "upload_time_iso_8601": "2020-04-04T02:44:27.711396Z", "url": "https://files.pythonhosted.org/packages/71/6c/df4e34dcffb158842fd0445a20bed95309a59b37b09baddde117c7ce94f0/lambda-proxy-5.1.1.tar.gz", "yanked": false}], "5.2.0": [{"comment_text": "", "digests": {"md5": "388881df802048972bf4e6edfb46e042", "sha256": "e84109b0d63f8e8d5ab908d6b407d932d38190a84a90875bc7e16098b7926caf"}, "downloads": -1, "filename": "lambda-proxy-5.2.0.tar.gz", "has_sig": false, "md5_digest": "388881df802048972bf4e6edfb46e042", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 17339, "upload_time": "2020-04-09T20:14:09", "upload_time_iso_8601": "2020-04-09T20:14:09.345095Z", "url": "https://files.pythonhosted.org/packages/e9/4c/6e4ec7da687906311ee5708477a507554e9a3b1e6f65576ab87d6ba29952/lambda-proxy-5.2.0.tar.gz", "yanked": false}], "5.2.1": [{"comment_text": "", "digests": {"md5": "ad05428e3cce7620ddeb24f4b1f57099", "sha256": "6d4a1323c2fdd59d97a57338efe8b9db4283ac7c51d295c9b4f55cfe1b055634"}, "downloads": -1, "filename": "lambda-proxy-5.2.1.tar.gz", "has_sig": false, "md5_digest": "ad05428e3cce7620ddeb24f4b1f57099", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 17379, "upload_time": "2020-05-04T18:39:30", "upload_time_iso_8601": "2020-05-04T18:39:30.101075Z", "url": "https://files.pythonhosted.org/packages/57/79/58a6927147afd1ce541c0c4ea950479cbb4224624ee2b641990a90f01359/lambda-proxy-5.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ad05428e3cce7620ddeb24f4b1f57099", "sha256": "6d4a1323c2fdd59d97a57338efe8b9db4283ac7c51d295c9b4f55cfe1b055634"}, "downloads": -1, "filename": "lambda-proxy-5.2.1.tar.gz", "has_sig": false, "md5_digest": "ad05428e3cce7620ddeb24f4b1f57099", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 17379, "upload_time": "2020-05-04T18:39:30", "upload_time_iso_8601": "2020-05-04T18:39:30.101075Z", "url": "https://files.pythonhosted.org/packages/57/79/58a6927147afd1ce541c0c4ea950479cbb4224624ee2b641990a90f01359/lambda-proxy-5.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:04 2020"}