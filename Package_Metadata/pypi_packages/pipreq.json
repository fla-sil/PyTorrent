{"info": {"author": "Jessamyn Smith", "author_email": "jessamyn.smith@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Software Development", "Topic :: Utilities"], "description": "pipreq\n======\n\n***THIS PROJECT IS NOW DEFUNCT!***\n\nPlease use pipwrap instead: https://pypi.python.org/pypi/pipwrap\n\n|Build Status| |Coverage Status| |PyPI Version| |Supported Python Versions| |Downloads|\n\npipreq simplifies handling Python project requirements across multiple\nenvironments. pip freeze > requirements.txt gets your project started,\nbut do you really want mock, coverage, etc. installed on your production\nserver? Maybe you want to upgrade all your test requirements, but not your\nproduction requirements. If you've ever found yourself sifting through the\noutput of pip freeze trying to figure out what packages you've installed\nbut didn't yet add to one of your requirements files, then pipreq is the\ntool for you.\n\nFeatures\n--------\n\n-  Inspect a list of packages and create or update a requirements rc file\n-  Generate a set of requirements files from an rc file\n-  Upgrade all specified packages to the latest versions\n-  Remove stray packages in virtualenv\n\nInstallation\n------------\n\nYou can get pipreq from PyPI with:\n\n::\n\n    pip install pipreq\n\nThe development version can be installed with:\n\n::\n\n    pip install -e git://github.com/jessamynsmith/pipreq.git#egg=pipreq\n\nIf you are developing locally, your version can be installed from the\nworking directory with:\n\n::\n\n    python setup.py.install\n\nUsage\n-----\n\npipreq uses an rc file to track requirements. You create a section for\neach requirements file, and (if desired) select one section to be\nshared. The default configuration is as follows:\n\n::\n\n    # .requirementsrc\n    [metadata]\n    shared = common\n\n    [common]\n\n    [development]\n\n    [production]\n\nThis would result in the following requirements directory structure:\n\n::\n\n    requirements/\n        common.txt\n        development.txt\n        production.txt\n\nwhere development.txt and production.txt both include the line \"-r\ncommon.txt\"\n\n**Getting Started with pipreq**\n\n1. (Optional) Create an empty .requirementsrc file with your desired\n   metadata and sections\n\n2. Interactively populate .requirementsrc file from currently installed\n   packages:\n\n   pip freeze \\| pipreq -c\n\n3. Generate requirements files from .requirementsrc file:\n\n   pipreq -g\n\n4. Create a top-level requirements.txt file that points to your\n   production requirements, e.g. \"-r production.txt\"\n\n**Keeping requirements up to date with pipreq**\n\n1. Interactively update .requirementsrc file from currently installed\n   packages:\n\n   pip freeze \\| pipreq -c\n\n2. Re-generate requirements files from .requirementsrc file:\n\n   pipreq -g\n\n3. Upgrade all packages to latest available versions:\n\n   cat requirements/development.txt | pipreq -U\n\n3. Remove stray packages in virtualenv:\n\n   cat requirements/\\*.txt | pipreq -x\n\nDevelopment\n-----------\n\nFork the project on github and git clone your fork, e.g.:\n\n::\n\n    git clone https://github.com/<username>/pipreq.git\n\nCreate a virtualenv and install dependencies:\n\n::\n\n    mkvirtualenv pipreq\n    pip install -r requirements/package.txt -r requirements/test.txt\n\nRun tests with coverage (should be 99%) and check code style:\n\n::\n\n    coverage run -m nose\n    coverage report -m\n    flake8\n\nVerify all supported Python versions:\n\n::\n\n    pip install tox\n    tox\n\nInstall your local copy:\n\n::\n\n    python setup.py.install\n\n.. |Build Status| image:: https://img.shields.io/circleci/project/github/jessamynsmith/pipreq.svg\n   :target: https://circleci.com/gh/jessamynsmith/pipreq\n   :alt: Build status\n.. |Coverage Status| image:: https://img.shields.io/coveralls/jessamynsmith/pipreq.svg\n   :target: https://coveralls.io/r/jessamynsmith/pipreq?branch=master\n   :alt: Coverage status\n.. |PyPI Version| image:: https://img.shields.io/pypi/v/pipreq.svg\n   :target: https://pypi.python.org/pypi/pipreq\n   :alt: Latest PyPI version\n.. |Supported Python Versions| image:: https://img.shields.io/pypi/pyversions/pipreq.svg\n   :target: https://pypi.python.org/pypi/pipreq\n   :alt: Supported Python versions\n.. |Downloads| image:: https://img.shields.io/pypi/dm/pipreq.svg\n   :target: https://pypi.python.org/pypi/pipreq\n   :alt: Number of PyPI downloads", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/jessamynsmith/pipreq/archive/v0.4.4.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jessamynsmith/pipreq", "keywords": "pip,upgrade,requirements,heroku,development,production", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pipreq", "package_url": "https://pypi.org/project/pipreq/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pipreq/", "project_urls": {"Download": "https://github.com/jessamynsmith/pipreq/archive/v0.4.4.tar.gz", "Homepage": "https://github.com/jessamynsmith/pipreq"}, "release_url": "https://pypi.org/project/pipreq/0.4.4/", "requires_dist": null, "requires_python": null, "summary": "Manages pip requirements files for multiple environments, e.g. production and development", "version": "0.4.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>*THIS PROJECT IS NOW DEFUNCT!*</strong></p>\n<p>Please use pipwrap instead: <a href=\"https://pypi.python.org/pypi/pipwrap\" rel=\"nofollow\">https://pypi.python.org/pypi/pipwrap</a></p>\n<p><a href=\"https://circleci.com/gh/jessamynsmith/pipreq\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/182a46584b5bda743359eb16fc8e434cfd9a8e06/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f6a657373616d796e736d6974682f7069707265712e737667\"></a> <a href=\"https://coveralls.io/r/jessamynsmith/pipreq?branch=master\" rel=\"nofollow\"><img alt=\"Coverage status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b19e2dc8767a6cd268b762edc0fc6e2c25ec9ae/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6a657373616d796e736d6974682f7069707265712e737667\"></a> <a href=\"https://pypi.python.org/pypi/pipreq\" rel=\"nofollow\"><img alt=\"Latest PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f50db4c024fcd6289810c257bfc44e89994eb86e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7069707265712e737667\"></a> <a href=\"https://pypi.python.org/pypi/pipreq\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/374b0b5a3be960493406ee126fc76b296859c571/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7069707265712e737667\"></a> <a href=\"https://pypi.python.org/pypi/pipreq\" rel=\"nofollow\"><img alt=\"Number of PyPI downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e3de8c4440b9eee790c25300f75865316fa84780/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7069707265712e737667\"></a></p>\n<p>pipreq simplifies handling Python project requirements across multiple\nenvironments. pip freeze &gt; requirements.txt gets your project started,\nbut do you really want mock, coverage, etc. installed on your production\nserver? Maybe you want to upgrade all your test requirements, but not your\nproduction requirements. If you\u2019ve ever found yourself sifting through the\noutput of pip freeze trying to figure out what packages you\u2019ve installed\nbut didn\u2019t yet add to one of your requirements files, then pipreq is the\ntool for you.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Inspect a list of packages and create or update a requirements rc file</li>\n<li>Generate a set of requirements files from an rc file</li>\n<li>Upgrade all specified packages to the latest versions</li>\n<li>Remove stray packages in virtualenv</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can get pipreq from PyPI with:</p>\n<pre>pip install pipreq\n</pre>\n<p>The development version can be installed with:</p>\n<pre>pip install -e git://github.com/jessamynsmith/pipreq.git#egg=pipreq\n</pre>\n<p>If you are developing locally, your version can be installed from the\nworking directory with:</p>\n<pre>python setup.py.install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>pipreq uses an rc file to track requirements. You create a section for\neach requirements file, and (if desired) select one section to be\nshared. The default configuration is as follows:</p>\n<pre># .requirementsrc\n[metadata]\nshared = common\n\n[common]\n\n[development]\n\n[production]\n</pre>\n<p>This would result in the following requirements directory structure:</p>\n<pre>requirements/\n    common.txt\n    development.txt\n    production.txt\n</pre>\n<p>where development.txt and production.txt both include the line \u201c-r\ncommon.txt\u201d</p>\n<p><strong>Getting Started with pipreq</strong></p>\n<ol>\n<li><p>(Optional) Create an empty .requirementsrc file with your desired\nmetadata and sections</p>\n</li>\n<li><p>Interactively populate .requirementsrc file from currently installed\npackages:</p>\n<p>pip freeze | pipreq -c</p>\n</li>\n<li><p>Generate requirements files from .requirementsrc file:</p>\n<p>pipreq -g</p>\n</li>\n<li><p>Create a top-level requirements.txt file that points to your\nproduction requirements, e.g. \u201c-r production.txt\u201d</p>\n</li>\n</ol>\n<p><strong>Keeping requirements up to date with pipreq</strong></p>\n<ol>\n<li><p>Interactively update .requirementsrc file from currently installed\npackages:</p>\n<p>pip freeze | pipreq -c</p>\n</li>\n<li><p>Re-generate requirements files from .requirementsrc file:</p>\n<p>pipreq -g</p>\n</li>\n<li><p>Upgrade all packages to latest available versions:</p>\n<p>cat requirements/development.txt | pipreq -U</p>\n</li>\n</ol>\n<ol>\n<li><p>Remove stray packages in virtualenv:</p>\n<p>cat requirements/*.txt | pipreq -x</p>\n</li>\n</ol>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>Fork the project on github and git clone your fork, e.g.:</p>\n<pre>git clone https://github.com/&lt;username&gt;/pipreq.git\n</pre>\n<p>Create a virtualenv and install dependencies:</p>\n<pre>mkvirtualenv pipreq\npip install -r requirements/package.txt -r requirements/test.txt\n</pre>\n<p>Run tests with coverage (should be 99%) and check code style:</p>\n<pre>coverage run -m nose\ncoverage report -m\nflake8\n</pre>\n<p>Verify all supported Python versions:</p>\n<pre>pip install tox\ntox\n</pre>\n<p>Install your local copy:</p>\n<pre>python setup.py.install\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2418506, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "996bba371dec8cb6d1d0850a8eb9d1cb", "sha256": "30dc3d7f119452a1fcb257092467fbbcdb3a274a81bfff7e8379eb1f5b0cf1a8"}, "downloads": -1, "filename": "pipreq-0.1.tar.gz", "has_sig": false, "md5_digest": "996bba371dec8cb6d1d0850a8eb9d1cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3577, "upload_time": "2015-02-02T04:56:38", "upload_time_iso_8601": "2015-02-02T04:56:38.112072Z", "url": "https://files.pythonhosted.org/packages/9a/6b/a015268d19025925bdc06f3fe69f003b0c39a5cd2f5774fd54e8fa0fc010/pipreq-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "e5db17738411485757c61deefd32fe6a", "sha256": "d2be2733492be21e01edc9bf75e9298cf2f532155a0b8c95f3ee4f1913dc4c20"}, "downloads": -1, "filename": "pipreq-0.2.tar.gz", "has_sig": false, "md5_digest": "e5db17738411485757c61deefd32fe6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3675, "upload_time": "2015-02-02T05:23:57", "upload_time_iso_8601": "2015-02-02T05:23:57.919592Z", "url": "https://files.pythonhosted.org/packages/ef/14/d9b45d879debc00ec7bfe3cc3b0502369c3fffac2ca080bc9b9f13c492b7/pipreq-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "f7b2c50fc2e6963ab860987c6a7fb651", "sha256": "842f7e8759515bf180fa67a8f0104c7116f45cea3c602fbbd569b22abba1f00b"}, "downloads": -1, "filename": "pipreq-0.3.tar.gz", "has_sig": false, "md5_digest": "f7b2c50fc2e6963ab860987c6a7fb651", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5703, "upload_time": "2015-02-04T01:56:52", "upload_time_iso_8601": "2015-02-04T01:56:52.884510Z", "url": "https://files.pythonhosted.org/packages/ef/90/b6c83f02aefb05c446af0046dfc11c2bf7f42eb7f0377986eed412dc513f/pipreq-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "401e644322cbbeb1b024e281db7711c2", "sha256": "db525b0ba8443abc977aa0a83d0966f83ac3735ebc6a1c5986fa24a40ee08e2c"}, "downloads": -1, "filename": "pipreq-0.4.tar.gz", "has_sig": false, "md5_digest": "401e644322cbbeb1b024e281db7711c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8154, "upload_time": "2015-02-08T21:11:35", "upload_time_iso_8601": "2015-02-08T21:11:35.384604Z", "url": "https://files.pythonhosted.org/packages/56/5f/9023338d4dc894afbc6d5c8e13384462aa30609973bf571ec5813cc8ba03/pipreq-0.4.tar.gz", "yanked": false}], "0.4.4": []}, "urls": [], "timestamp": "Fri May  8 02:54:09 2020"}