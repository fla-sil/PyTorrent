{"info": {"author": "bitromortac", "author_email": "bitromortac@protonmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "lnregtest - Lightning Networks on Bitcoin regtest\n=================================================\n\nImplements functioning lightning networks for (Python) integration testing \noperating on a Bitcoin regtest network by running several lightning node \ninstances.\n\nThe simulated lightning networks can have different shapes as defined\n in the `network_definitions` folder.\n\nAn example of a graph (`star_ring`) with 7 nodes and 12 channels is shown \nhere (for initial channel balance details, have a look at \n`network_definitions/star_ring.py`):\n\n```\nStar-like component with channels (where A is the master node):\nA -> B, A -> C, A -> D, A -> E, A -> F, A -> G,\nRing-like component with channels (which surrounds the master node):\nB -> C, C -> D, D -> E, E -> F, F -> G, G -> B\n```\nThis star and ring-like lightning network can then be used to test interactions\nwith the network from the master node's perspective, like rebalancing channels,\nrouting payments, sending payments and so on.\n\nFeatures\n--------\n* No external python dependencies\n* Arbitrary lightning network graphs with up to number of nodes on the order of\n10 (depends on your resources)\n* LND support\n* Lightning graph state comparison\n* Restarting from already created networks\n* Abstraction of random identifiers (public keys, channel ids) to human readable\n  identifiers\n* Library and command-line execution\n* Automatic sanity check of user defined networks\n\nPlanned features\n----------------\n* Arbitrary lightning daemon binary detection (lnd, clightning, ...)\n* Time-dependent transaction series\n\nCreating your own network topology\n----------------------------------\nNetworks of arbitrary shape can be defined as a python dictionary in the\n`network_definitions` folder. See the examples for a general structure.\n\nThe requirements are:\n* Node A is the master node\n* Nodes are uniquely named by subsequent characters A, B, C, ...\n* Channels are uniquely numbered by integers 1, 2, 3, ...\n* Ports must be set uniquely\n\nTesting other (python) projects\n-----------------------------\nTest examples can be found in the `test` folder and more information on how\nlnregtest is used for lightning network integration testing can be found in \n[TEST](./test/TEST.md).\n\nThis package is also used in production in \n[lndmanage](https://github.com/bitromortac/lndmanage).\n\nSetup\n-----\nThe binaries bitcoind, bitcoin-cli, lnd, and lncli are expected to be found in \n`$PATH`.\n\nYou can use the tool in two different standalone modes:\n\n**Git repository mode**:\n```\n$ git clone https://github.com/bitromortac/lnregtest\n$ cd lnregtest\n```\nRun network:\n```\n$ python3 lnregtest.py -h\n```\n\n**Package mode**:\n```\n$ python3 -m venv venv\n$ source venv/bin/activate\n$ python3 -m pip install lnregtest\n```\nRun network:\n```\n$ lnregtest -h\n```\n\nTest if lnregest works\n-------------------------\nTo run all tests, run `python3 -m unittest discover test` from the root folder.\n\n\nTroubleshooting\n---------------\n* `all SubConns are in TransientFailure`:\n  Typically, here it happens that lnd is not given enough time to start. **The \n  simulation of a lightning network is memory and CPU intensive.** Each LN\n  node needs some time to get up and running and consumes resources.\n  Currently, the startup of each lnd node is delayed to distribute CPU load.\n  The settings were tested on a quadcore processor and 8 GB of RAM.\n* bitcoind and lnd processes are not terminated:\n  Sometimes it happens that the processes are not terminated correctly, so\n  before you start new tests, make sure to do so manually.\n\nRelated Projects\n----------------\n* Medium article on how regtest lightning networks can be set up: [bitstein-medium](https://medium.com/@bitstein/setting-up-a-bitcoin-lightning-network-test-environment-ab967167594a)\n* Dockerized lightning networks: [simverse](https://github.com/darwin/simverse)\n* Dockerized version for the medium article: [bitstein-test-env](https://github.com/JeffVandrewJr/bitstein-test-env)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bitromortac/lnregtest", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "lnregtest", "package_url": "https://pypi.org/project/lnregtest/", "platform": "", "project_url": "https://pypi.org/project/lnregtest/", "project_urls": {"Homepage": "https://github.com/bitromortac/lnregtest"}, "release_url": "https://pypi.org/project/lnregtest/0.1.4/", "requires_dist": ["wheel"], "requires_python": "", "summary": "Bitcoin regtest Lightning Network for integration testing.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>lnregtest - Lightning Networks on Bitcoin regtest</h1>\n<p>Implements functioning lightning networks for (Python) integration testing\noperating on a Bitcoin regtest network by running several lightning node\ninstances.</p>\n<p>The simulated lightning networks can have different shapes as defined\nin the <code>network_definitions</code> folder.</p>\n<p>An example of a graph (<code>star_ring</code>) with 7 nodes and 12 channels is shown\nhere (for initial channel balance details, have a look at\n<code>network_definitions/star_ring.py</code>):</p>\n<pre><code>Star-like component with channels (where A is the master node):\nA -&gt; B, A -&gt; C, A -&gt; D, A -&gt; E, A -&gt; F, A -&gt; G,\nRing-like component with channels (which surrounds the master node):\nB -&gt; C, C -&gt; D, D -&gt; E, E -&gt; F, F -&gt; G, G -&gt; B\n</code></pre>\n<p>This star and ring-like lightning network can then be used to test interactions\nwith the network from the master node's perspective, like rebalancing channels,\nrouting payments, sending payments and so on.</p>\n<h2>Features</h2>\n<ul>\n<li>No external python dependencies</li>\n<li>Arbitrary lightning network graphs with up to number of nodes on the order of\n10 (depends on your resources)</li>\n<li>LND support</li>\n<li>Lightning graph state comparison</li>\n<li>Restarting from already created networks</li>\n<li>Abstraction of random identifiers (public keys, channel ids) to human readable\nidentifiers</li>\n<li>Library and command-line execution</li>\n<li>Automatic sanity check of user defined networks</li>\n</ul>\n<h2>Planned features</h2>\n<ul>\n<li>Arbitrary lightning daemon binary detection (lnd, clightning, ...)</li>\n<li>Time-dependent transaction series</li>\n</ul>\n<h2>Creating your own network topology</h2>\n<p>Networks of arbitrary shape can be defined as a python dictionary in the\n<code>network_definitions</code> folder. See the examples for a general structure.</p>\n<p>The requirements are:</p>\n<ul>\n<li>Node A is the master node</li>\n<li>Nodes are uniquely named by subsequent characters A, B, C, ...</li>\n<li>Channels are uniquely numbered by integers 1, 2, 3, ...</li>\n<li>Ports must be set uniquely</li>\n</ul>\n<h2>Testing other (python) projects</h2>\n<p>Test examples can be found in the <code>test</code> folder and more information on how\nlnregtest is used for lightning network integration testing can be found in\n<a href=\"./test/TEST.md\" rel=\"nofollow\">TEST</a>.</p>\n<p>This package is also used in production in\n<a href=\"https://github.com/bitromortac/lndmanage\" rel=\"nofollow\">lndmanage</a>.</p>\n<h2>Setup</h2>\n<p>The binaries bitcoind, bitcoin-cli, lnd, and lncli are expected to be found in\n<code>$PATH</code>.</p>\n<p>You can use the tool in two different standalone modes:</p>\n<p><strong>Git repository mode</strong>:</p>\n<pre><code>$ git clone https://github.com/bitromortac/lnregtest\n$ cd lnregtest\n</code></pre>\n<p>Run network:</p>\n<pre><code>$ python3 lnregtest.py -h\n</code></pre>\n<p><strong>Package mode</strong>:</p>\n<pre><code>$ python3 -m venv venv\n$ source venv/bin/activate\n$ python3 -m pip install lnregtest\n</code></pre>\n<p>Run network:</p>\n<pre><code>$ lnregtest -h\n</code></pre>\n<h2>Test if lnregest works</h2>\n<p>To run all tests, run <code>python3 -m unittest discover test</code> from the root folder.</p>\n<h2>Troubleshooting</h2>\n<ul>\n<li><code>all SubConns are in TransientFailure</code>:\nTypically, here it happens that lnd is not given enough time to start. <strong>The\nsimulation of a lightning network is memory and CPU intensive.</strong> Each LN\nnode needs some time to get up and running and consumes resources.\nCurrently, the startup of each lnd node is delayed to distribute CPU load.\nThe settings were tested on a quadcore processor and 8 GB of RAM.</li>\n<li>bitcoind and lnd processes are not terminated:\nSometimes it happens that the processes are not terminated correctly, so\nbefore you start new tests, make sure to do so manually.</li>\n</ul>\n<h2>Related Projects</h2>\n<ul>\n<li>Medium article on how regtest lightning networks can be set up: <a href=\"https://medium.com/@bitstein/setting-up-a-bitcoin-lightning-network-test-environment-ab967167594a\" rel=\"nofollow\">bitstein-medium</a></li>\n<li>Dockerized lightning networks: <a href=\"https://github.com/darwin/simverse\" rel=\"nofollow\">simverse</a></li>\n<li>Dockerized version for the medium article: <a href=\"https://github.com/JeffVandrewJr/bitstein-test-env\" rel=\"nofollow\">bitstein-test-env</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7161462, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ee7128d288467f76fe75ed2171269dda", "sha256": "4b8a6932343ae9e2131df717bb95f38c02bde105ba2988bde74e0fd16c491ca1"}, "downloads": -1, "filename": "lnregtest-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ee7128d288467f76fe75ed2171269dda", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16840, "upload_time": "2019-08-28T05:48:14", "upload_time_iso_8601": "2019-08-28T05:48:14.672504Z", "url": "https://files.pythonhosted.org/packages/f4/42/c32553509e4e85ef910037eb2048ebea00973b347328cb884adcc64ede7b/lnregtest-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d7f4c089008f343295fba2bd6fd053e", "sha256": "c01275db3a923ac530d75b13e6be21a19f386aef101b2d1b59e3237083545684"}, "downloads": -1, "filename": "lnregtest-0.1.tar.gz", "has_sig": false, "md5_digest": "3d7f4c089008f343295fba2bd6fd053e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15032, "upload_time": "2019-08-28T05:48:17", "upload_time_iso_8601": "2019-08-28T05:48:17.120221Z", "url": "https://files.pythonhosted.org/packages/26/59/dfb543b30230614c0142e7dcd847bafd53d831fe00a0565295ec60c4de94/lnregtest-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c28520034e989b72686af79d9b28ca5a", "sha256": "bd77278b14fb218c36268e6c1796847df2bcd525e8ef98b28d097f3a10eb44bb"}, "downloads": -1, "filename": "lnregtest-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c28520034e989b72686af79d9b28ca5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17193, "upload_time": "2019-09-07T06:56:52", "upload_time_iso_8601": "2019-09-07T06:56:52.630129Z", "url": "https://files.pythonhosted.org/packages/89/cd/7cd0c9375b9c34f6c8a3f7b1591aca1ce1b695ee8cc8cd5cab29ee1e7f9c/lnregtest-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bad4be1985d023a72abfaafad7cc6f19", "sha256": "b8951da6c7360895f8f95bc3ff9d65cd98427ae1ee54433720d8e623e7b8b33a"}, "downloads": -1, "filename": "lnregtest-0.1.1.tar.gz", "has_sig": false, "md5_digest": "bad4be1985d023a72abfaafad7cc6f19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15459, "upload_time": "2019-09-07T06:56:55", "upload_time_iso_8601": "2019-09-07T06:56:55.536002Z", "url": "https://files.pythonhosted.org/packages/02/14/efd7da447900671eadf39ee2fe7d30072b91e2dbf9ebc689f54cfd8c0308/lnregtest-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "00f3daf677f7497c241cd3170ce70228", "sha256": "e5277b027accde28066d2636e8e7b9cd61d084bef8de7f0d1fd795bda79a20af"}, "downloads": -1, "filename": "lnregtest-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "00f3daf677f7497c241cd3170ce70228", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18195, "upload_time": "2019-09-30T05:08:24", "upload_time_iso_8601": "2019-09-30T05:08:24.719122Z", "url": "https://files.pythonhosted.org/packages/33/3f/4844ca8db9d0eebe01529c83c659699817e521c1259ae7479e9f158144b3/lnregtest-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4eabb5e780ddb2bab724ae8bd04a70d8", "sha256": "6085a9892e08ee3018a08e495d7c2b7f65c5852e5d09d52b1827aefc990988a9"}, "downloads": -1, "filename": "lnregtest-0.1.2.tar.gz", "has_sig": false, "md5_digest": "4eabb5e780ddb2bab724ae8bd04a70d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16375, "upload_time": "2019-09-30T05:08:29", "upload_time_iso_8601": "2019-09-30T05:08:29.546785Z", "url": "https://files.pythonhosted.org/packages/c0/e6/107f2cfd6d3b6a3f829b211fc4b8ead1ce9cf6505042d318d3924bfefb8d/lnregtest-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "c291f63e3ea644d222fa507c130aa4e1", "sha256": "459fcd3028415d6c6e226173fb9cf778b3ed87829ca7164b8fbad3af3260f8d1"}, "downloads": -1, "filename": "lnregtest-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c291f63e3ea644d222fa507c130aa4e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18883, "upload_time": "2020-02-03T06:18:27", "upload_time_iso_8601": "2020-02-03T06:18:27.128477Z", "url": "https://files.pythonhosted.org/packages/65/c6/81aeca4107f13f6adfb4a9be419e0841d85ab881d9b00990fe4c4c3bb21f/lnregtest-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "940a69544c18b63bc811768db99ade29", "sha256": "9a83abf0d8f924247433709a3087dbcbf4903cc080440d5da38916904d980a7b"}, "downloads": -1, "filename": "lnregtest-0.1.3.tar.gz", "has_sig": false, "md5_digest": "940a69544c18b63bc811768db99ade29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17094, "upload_time": "2020-02-03T06:18:28", "upload_time_iso_8601": "2020-02-03T06:18:28.732594Z", "url": "https://files.pythonhosted.org/packages/e5/35/f351d0b1993bf4876e5de654b092de249d576b14ab54a7d76b6bd24081d4/lnregtest-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "c0e58dcbd90c31383fac0105d99aafa0", "sha256": "7caacd2321344436e8018daf406be9912600680b00a2a234bc5dc81dacc39a2c"}, "downloads": -1, "filename": "lnregtest-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c0e58dcbd90c31383fac0105d99aafa0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18814, "upload_time": "2020-05-04T05:09:59", "upload_time_iso_8601": "2020-05-04T05:09:59.192112Z", "url": "https://files.pythonhosted.org/packages/a2/9b/3b8c01472e39654e44a6b3bc9346648ff2f2c79ac5c4eefb76f7e0bb2e76/lnregtest-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e44f870304fd14beb46c950429df65f", "sha256": "4fdb4b99bdc951ae863e9c9b3e6310d93431b88fdf841773226b6371d8c0eb59"}, "downloads": -1, "filename": "lnregtest-0.1.4.tar.gz", "has_sig": false, "md5_digest": "7e44f870304fd14beb46c950429df65f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17032, "upload_time": "2020-05-04T05:10:00", "upload_time_iso_8601": "2020-05-04T05:10:00.326488Z", "url": "https://files.pythonhosted.org/packages/57/c0/93e8f4221613e3268d077bd0c925e090205ed52ed54c17fc5c334c49b793/lnregtest-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c0e58dcbd90c31383fac0105d99aafa0", "sha256": "7caacd2321344436e8018daf406be9912600680b00a2a234bc5dc81dacc39a2c"}, "downloads": -1, "filename": "lnregtest-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c0e58dcbd90c31383fac0105d99aafa0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18814, "upload_time": "2020-05-04T05:09:59", "upload_time_iso_8601": "2020-05-04T05:09:59.192112Z", "url": "https://files.pythonhosted.org/packages/a2/9b/3b8c01472e39654e44a6b3bc9346648ff2f2c79ac5c4eefb76f7e0bb2e76/lnregtest-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e44f870304fd14beb46c950429df65f", "sha256": "4fdb4b99bdc951ae863e9c9b3e6310d93431b88fdf841773226b6371d8c0eb59"}, "downloads": -1, "filename": "lnregtest-0.1.4.tar.gz", "has_sig": false, "md5_digest": "7e44f870304fd14beb46c950429df65f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17032, "upload_time": "2020-05-04T05:10:00", "upload_time_iso_8601": "2020-05-04T05:10:00.326488Z", "url": "https://files.pythonhosted.org/packages/57/c0/93e8f4221613e3268d077bd0c925e090205ed52ed54c17fc5c334c49b793/lnregtest-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:43 2020"}