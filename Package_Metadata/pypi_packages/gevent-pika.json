{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: Jython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Communications", "Topic :: Internet", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Networking"], "description": "Pika\n====\nPika is a RabbitMQ (AMQP-0-9-1) client library for Python.\n\n|Version| |Status| |Coverage| |License| |Docs|\n\nIntroduction\n-------------\nPika is a pure-Python implementation of the AMQP 0-9-1 protocol including RabbitMQ's\nextensions.\n\n- Python 2.6+ and 3.3+ are supported.\n\n- Since threads aren't appropriate to every situation, it doesn't\n  require threads. It takes care not to forbid them, either. The same\n  goes for greenlets, callbacks, continuations and generators. It is\n  not necessarily thread-safe however, and your mileage will vary.\n\n- People may be using direct sockets, plain old `select()`,\n  or any of the wide variety of ways of getting network events to and from a\n  python application. Pika tries to stay compatible with all of these, and to\n  make adapting it to a new environment as simple as possible.\n\nDocumentation\n-------------\nPika's documentation can be found at `https://pika.readthedocs.io <https://pika.readthedocs.io>`_\n\nExample\n-------\nHere is the most simple example of use, sending a message with the BlockingConnection adapter:\n\n.. code :: python\n\n    import pika\n    connection = pika.BlockingConnection()\n    channel = connection.channel()\n    channel.basic_publish(exchange='example',\n                          routing_key='test',\n                          body='Test Message')\n    connection.close()\n\nAnd an example of writing a blocking consumer:\n\n.. code :: python\n\n    import pika\n    connection = pika.BlockingConnection()\n    channel = connection.channel()\n\n    for method_frame, properties, body in channel.consume('test'):\n\n        # Display the message parts and ack the message\n        print(method_frame, properties, body)\n        channel.basic_ack(method_frame.delivery_tag)\n\n        # Escape out of the loop after 10 messages\n        if method_frame.delivery_tag == 10:\n            break\n\n    # Cancel the consumer and return any pending messages\n    requeued_messages = channel.cancel()\n    print('Requeued %i messages' % requeued_messages)\n    connection.close()\n\nPika provides the following adapters\n------------------------------------\n\n- AsyncioConnection  - adapter for the Python3 AsyncIO event loop\n- BlockingConnection - enables blocking, synchronous operation on top of library for simple uses\n- LibevConnection    - adapter for use with the libev event loop http://libev.schmorp.de\n- SelectConnection   - fast asynchronous adapter\n- TornadoConnection  - adapter for use with the Tornado IO Loop http://tornadoweb.org\n- TwistedConnection  - adapter for use with the Twisted asynchronous package http://twistedmatrix.com/\n\nContributing\n------------\nTo contribute to pika, please make sure that any new features or changes\nto existing functionality **include test coverage**.\n\n*Pull requests that add or change code without coverage will most likely be rejected.*\n\nAdditionally, please format your code using `yapf <http://pypi.python.org/pypi/yapf>`_\nwith ``google`` style prior to issuing your pull request.\n\n.. |Version| image:: https://img.shields.io/pypi/v/pika.svg?\n   :target: http://badge.fury.io/py/pika\n\n.. |Status| image:: https://img.shields.io/travis/pika/pika.svg?\n   :target: https://travis-ci.org/pika/pika\n\n.. |Coverage| image:: https://img.shields.io/codecov/c/github/pika/pika.svg?\n   :target: https://codecov.io/github/pika/pika?branch=master\n\n.. |License| image:: https://img.shields.io/pypi/l/pika.svg?\n   :target: https://pika.readthedocs.io\n\n.. |Docs| image:: https://readthedocs.org/projects/pika/badge/?version=stable\n   :target: https://pika.readthedocs.io\n   :alt: Documentation Status", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pika.readthedocs.io", "keywords": "", "license": "BSD", "maintainer": "Gavin M. Roy", "maintainer_email": "gavinmroy@gmail.com", "name": "gevent-pika", "package_url": "https://pypi.org/project/gevent-pika/", "platform": "", "project_url": "https://pypi.org/project/gevent-pika/", "project_urls": {"Homepage": "https://pika.readthedocs.io"}, "release_url": "https://pypi.org/project/gevent-pika/0.3/", "requires_dist": null, "requires_python": "", "summary": "Pika Python AMQP Client Library", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Pika is a RabbitMQ (AMQP-0-9-1) client library for Python.</p>\n<p><a href=\"http://badge.fury.io/py/pika\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/09882911c1bd240810ade027a5842fe3e84231cd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70696b612e7376673f\"></a> <a href=\"https://travis-ci.org/pika/pika\" rel=\"nofollow\"><img alt=\"Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64ae94af3d13c26edf0a7e12ed289b83e3c48729/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f70696b612f70696b612e7376673f\"></a> <a href=\"https://codecov.io/github/pika/pika?branch=master\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/54fd8b4503528b84a90f2f1e8e429fd414b05352/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f70696b612f70696b612e7376673f\"></a> <a href=\"https://pika.readthedocs.io\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/13cce814cf681a7f7239d0a5c96fd4723ca06795/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f70696b612e7376673f\"></a> <a href=\"https://pika.readthedocs.io\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b8c4c0e86628645a623843ac9b34e95608abd80e/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70696b612f62616467652f3f76657273696f6e3d737461626c65\"></a></p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Pika is a pure-Python implementation of the AMQP 0-9-1 protocol including RabbitMQ\u2019s\nextensions.</p>\n<ul>\n<li>Python 2.6+ and 3.3+ are supported.</li>\n<li>Since threads aren\u2019t appropriate to every situation, it doesn\u2019t\nrequire threads. It takes care not to forbid them, either. The same\ngoes for greenlets, callbacks, continuations and generators. It is\nnot necessarily thread-safe however, and your mileage will vary.</li>\n<li>People may be using direct sockets, plain old <cite>select()</cite>,\nor any of the wide variety of ways of getting network events to and from a\npython application. Pika tries to stay compatible with all of these, and to\nmake adapting it to a new environment as simple as possible.</li>\n</ul>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Pika\u2019s documentation can be found at <a href=\"https://pika.readthedocs.io\" rel=\"nofollow\">https://pika.readthedocs.io</a></p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>Here is the most simple example of use, sending a message with the BlockingConnection adapter:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pika</span>\n<span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"n\">pika</span><span class=\"o\">.</span><span class=\"n\">BlockingConnection</span><span class=\"p\">()</span>\n<span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">()</span>\n<span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_publish</span><span class=\"p\">(</span><span class=\"n\">exchange</span><span class=\"o\">=</span><span class=\"s1\">'example'</span><span class=\"p\">,</span>\n                      <span class=\"n\">routing_key</span><span class=\"o\">=</span><span class=\"s1\">'test'</span><span class=\"p\">,</span>\n                      <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s1\">'Test Message'</span><span class=\"p\">)</span>\n<span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<p>And an example of writing a blocking consumer:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pika</span>\n<span class=\"n\">connection</span> <span class=\"o\">=</span> <span class=\"n\">pika</span><span class=\"o\">.</span><span class=\"n\">BlockingConnection</span><span class=\"p\">()</span>\n<span class=\"n\">channel</span> <span class=\"o\">=</span> <span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">channel</span><span class=\"p\">()</span>\n\n<span class=\"k\">for</span> <span class=\"n\">method_frame</span><span class=\"p\">,</span> <span class=\"n\">properties</span><span class=\"p\">,</span> <span class=\"n\">body</span> <span class=\"ow\">in</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">consume</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">):</span>\n\n    <span class=\"c1\"># Display the message parts and ack the message</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">method_frame</span><span class=\"p\">,</span> <span class=\"n\">properties</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"p\">)</span>\n    <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">basic_ack</span><span class=\"p\">(</span><span class=\"n\">method_frame</span><span class=\"o\">.</span><span class=\"n\">delivery_tag</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Escape out of the loop after 10 messages</span>\n    <span class=\"k\">if</span> <span class=\"n\">method_frame</span><span class=\"o\">.</span><span class=\"n\">delivery_tag</span> <span class=\"o\">==</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n        <span class=\"k\">break</span>\n\n<span class=\"c1\"># Cancel the consumer and return any pending messages</span>\n<span class=\"n\">requeued_messages</span> <span class=\"o\">=</span> <span class=\"n\">channel</span><span class=\"o\">.</span><span class=\"n\">cancel</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Requeued </span><span class=\"si\">%i</span><span class=\"s1\"> messages'</span> <span class=\"o\">%</span> <span class=\"n\">requeued_messages</span><span class=\"p\">)</span>\n<span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"pika-provides-the-following-adapters\">\n<h2>Pika provides the following adapters</h2>\n<ul>\n<li>AsyncioConnection  - adapter for the Python3 AsyncIO event loop</li>\n<li>BlockingConnection - enables blocking, synchronous operation on top of library for simple uses</li>\n<li>LibevConnection    - adapter for use with the libev event loop <a href=\"http://libev.schmorp.de\" rel=\"nofollow\">http://libev.schmorp.de</a></li>\n<li>SelectConnection   - fast asynchronous adapter</li>\n<li>TornadoConnection  - adapter for use with the Tornado IO Loop <a href=\"http://tornadoweb.org\" rel=\"nofollow\">http://tornadoweb.org</a></li>\n<li>TwistedConnection  - adapter for use with the Twisted asynchronous package <a href=\"http://twistedmatrix.com/\" rel=\"nofollow\">http://twistedmatrix.com/</a></li>\n</ul>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>To contribute to pika, please make sure that any new features or changes\nto existing functionality <strong>include test coverage</strong>.</p>\n<p><em>Pull requests that add or change code without coverage will most likely be rejected.</em></p>\n<p>Additionally, please format your code using <a href=\"http://pypi.python.org/pypi/yapf\" rel=\"nofollow\">yapf</a>\nwith <tt>google</tt> style prior to issuing your pull request.</p>\n</div>\n\n          </div>"}, "last_serial": 6419485, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "f740b3a60c0cb9dfeac6c0867109e999", "sha256": "bef4cb80a8c3ea5510be5cdaa3ca31dae9626a9fe65f8b224ce39dfbfdee92b7"}, "downloads": -1, "filename": "gevent_pika-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f740b3a60c0cb9dfeac6c0867109e999", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 106772, "upload_time": "2019-06-05T21:33:54", "upload_time_iso_8601": "2019-06-05T21:33:54.369296Z", "url": "https://files.pythonhosted.org/packages/a1/e8/439468505f8763cabcd13e4d2766d769796612728175af2b313b2a6023c1/gevent_pika-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7635ff081108b7c96f3a5dd2a0b98bfa", "sha256": "564a4e8dae2a21545955d65fb8f09a2ec9732fe85a6848ad99f175bf8b38dae6"}, "downloads": -1, "filename": "gevent_pika-0.2.tar.gz", "has_sig": false, "md5_digest": "7635ff081108b7c96f3a5dd2a0b98bfa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96212, "upload_time": "2019-06-05T21:33:56", "upload_time_iso_8601": "2019-06-05T21:33:56.257931Z", "url": "https://files.pythonhosted.org/packages/72/38/9076e38ececd3dc58b0fa5f8c52f0f38ad954c670bb2a03121475e5a4b62/gevent_pika-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "724b1f40caadede2f2c57fcbc0057acd", "sha256": "d74250f80e9fdafd088d661be90ea29728e086d9eb4b4b28d6dd5cdded63b99f"}, "downloads": -1, "filename": "gevent-pika-0.3.tar.gz", "has_sig": false, "md5_digest": "724b1f40caadede2f2c57fcbc0057acd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97108, "upload_time": "2020-01-09T00:53:36", "upload_time_iso_8601": "2020-01-09T00:53:36.676995Z", "url": "https://files.pythonhosted.org/packages/76/4e/56fb9f7755eb98b89da247256e5231675ddf539514a79505b5af19e9331c/gevent-pika-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "724b1f40caadede2f2c57fcbc0057acd", "sha256": "d74250f80e9fdafd088d661be90ea29728e086d9eb4b4b28d6dd5cdded63b99f"}, "downloads": -1, "filename": "gevent-pika-0.3.tar.gz", "has_sig": false, "md5_digest": "724b1f40caadede2f2c57fcbc0057acd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97108, "upload_time": "2020-01-09T00:53:36", "upload_time_iso_8601": "2020-01-09T00:53:36.676995Z", "url": "https://files.pythonhosted.org/packages/76/4e/56fb9f7755eb98b89da247256e5231675ddf539514a79505b5af19e9331c/gevent-pika-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:39 2020"}