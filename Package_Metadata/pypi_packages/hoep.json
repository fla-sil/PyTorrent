{"info": {"author": "Andrew Fricke", "author_email": "andrew@uhnomoli.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: C", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Internet", "Topic :: Internet :: WWW/HTTP", "Topic :: Text Processing", "Topic :: Utilities"], "description": "Hoep\n====\n\nHoep is a Python binding for the `Hoedown`_ Markdown library.\n\n\nInstall\n-------\n\nHoep is available on PyPI so installation is only a quick ``pip`` away.\n\n::\n\n    $ pip install hoep\n\n\nUnicode\n-------\n\nHoep only accepts and returns ``unicode`` objects in Python 2 and ``str`` objects in Python 3. This goes for custom renderers as well. All callbacks receive and must return ``unicode`` or ``str`` objects, respective to the Python version.\n\n\nBasic Usage\n-----------\n\nUsing Hoep is pretty straightforward. You can either use the ``render`` module function or the ``Hoep`` module class. The latter is more efficient if you are rendering multiple documents in a single go.\n\n.. code:: python\n\n    # -*- coding: utf-8 -*-\n\n    from __future__ import unicode_literals\n\n    import hoep as h\n\n\n    extensions = h.EXT_STRIKETHROUGH\n    render_flags = h.HTML_SMARTYPANTS\n\n\n    # Method form.\n    html = h.render('Some ~~bold~~ __\"strong\"__ text.', extensions, render_flags)\n\n\n    # Class form.\n    md = h.Hoep(extensions, render_flags)\n\n    html = md.render('Some ~~bold~~ __\"strong\"__ text.')\n\nExtensions\n~~~~~~~~~~\n\nYou can enable multiple extensions by bitwise ORing them.\n\n-  ``EXT_AUTOLINK``: Automatically parse URLs into links.\n-  ``EXT_DISABLE_INDENTED_CODE``: Disables indented code blocks.\n-  ``EXT_FENCED_CODE``: Enables fenced code blocks.\n-  ``EXT_FOOTNOTES``: Enables `Markdown Extra style footnotes`_.\n-  ``EXT_HIGHLIGHT``: Enables ==marking== text.\n-  ``EXT_LAX_SPACING``: Removes the need for an empty line between Markdown and raw HTML.\n-  ``EXT_NO_INTRA_EMPHASIS``: Disables emphasis\\_between\\_words.\n-  ``EXT_QUOTE``: \"Quotes\" are translated into ``<q>`` tags.\n-  ``EXT_SPACE_HEADERS``: ATX style headers require a space after the opening number sign(s).\n-  ``EXT_STRIKETHROUGH``: Enables ~~striking~~ text.\n-  ``EXT_SUPERSCRIPT``: Enables super^script.\n-  ``EXT_TABLES``: Enables `Markdown Extra style tables`_.\n-  ``EXT_UNDERLINE``: Translates ``<em>`` tags into ``<u>`` tags.\n\nRender flags\n~~~~~~~~~~~~\n\nYou can enable multiple render flags by bitwise ORing them.\n\n-  ``HTML_ESCAPE``: All HTML is escaped.\n-  ``HTML_EXPAND_TABS``: Tabs are expanded to spaces.\n-  ``HTML_HARD_WRAP``: Line breaks are translated into ``<br>`` tags.\n-  ``HTML_SAFELINK``: Only links to safe protocols are allowed.\n-  ``HTML_SKIP_HTML``: All HTML tags are stripped.\n-  ``HTML_SKIP_IMAGES``: Images are ignored.\n-  ``HTML_SKIP_LINKS``: Links are ignored.\n-  ``HTML_SKIP_STYLE``: ``<style>`` tags are stripped.\n-  ``HTML_SMARTYPANTS``: Enables SmartyPants.\n-  ``HTML_TOC``: Anchors are added to headers.\n-  ``HTML_USE_XHTML``: Renders XHTML instead of HTML.\n\n\nCustom renderer\n---------------\n\nBy subclassing the ``Hoep`` class, you can create a custom renderer overriding various callbacks.\n\n.. code:: python\n\n    # -*- coding: utf-8 -*-\n\n    from __future__ import unicode_literals\n\n    import hoep as h\n\n\n    class MyRenderer(h.Hoep):\n        def __init__(self, extensions = 0, render_flags = 0):\n            # If you override the `__init__` function, you must call\n            # the parent class's or bad things will happen.\n            super(MyRenderer, self).__init__(extensions, render_flags)\n            \n            self.replace = '[redacted]'\n        \n        \n        def strikethrough(self, text):\n            return self.replace\n\n\n    md = MyRenderer(h.EXT_STRIKETHROUGH)\n\n    html = md.render('Some ~~bold~~ __\"strong\"__ text.')\n\nCallbacks\n~~~~~~~~~\n\nDocument level\n^^^^^^^^^^^^^^\n\n+  ``preprocess(str markdown)``\n+  ``doc_header()``\n+  ``doc_footer()``\n+  ``postprocess(str html)``\n\nBlock level\n^^^^^^^^^^^\n\n+  ``block_code(str text, str language)``\n+  ``block_html(str text)``\n+  ``block_quote(str text)``\n+  ``footnotes(str text)``\n+  ``footnote_def(str text, int number)``\n+  ``header(str text, int level)``\n+  ``hrule()``\n+  ``list(str text, bool ordered)``\n+  ``list_item(str text, bool ordered)``\n+  ``paragraph(str text)``\n+  ``table(str header, str body)``\n+  ``table_row(str text)``\n+  ``table_cell(str text, int flags)``\n\nSpan level\n^^^^^^^^^^\n\n+  ``autolink(str link, bool is_email)``\n+  ``codespan(str text)``\n+  ``double_emphasis(str text)``\n+  ``emphasis(str text)``\n+  ``footnote_ref(int number)``\n+  ``highlight(str text)``\n+  ``image(str link, mixed title, str alt)``\n+  ``line_break()``\n+  ``link(str link, mixed title, str content)``\n+  ``quote(str text)``\n+  ``raw_html_tag(str tag)``\n+  ``strikethrough(str text)``\n+  ``superscript(str text)``\n+  ``triple_emphasis(str text)``\n+  ``underline(str text)``\n\nLow-level\n^^^^^^^^^\n\n+  ``entity(str entity)``\n+  ``normal_text(str text)``\n\nSupport\n-------\n\nIf you run into any issues or have any questions, either open an `issue`_ or hop in `#mynt`_ on irc.freenode.net.\n\n\n.. _#mynt: http://webchat.freenode.net/?channels=mynt\n.. _Hoedown: https://github.com/hoedown/hoedown\n.. _issue: https://github.com/Anomareh/Hoep/issues\n.. _Markdown Extra style footnotes: http://michelf.ca/projects/php-markdown/extra/#footnotes\n.. _Markdown Extra style tables: http://michelf.ca/projects/php-markdown/extra/#table", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Anomareh/Hoep", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "hoep", "package_url": "https://pypi.org/project/hoep/", "platform": "any", "project_url": "https://pypi.org/project/hoep/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Anomareh/Hoep"}, "release_url": "https://pypi.org/project/hoep/1.0.2/", "requires_dist": null, "requires_python": null, "summary": "A Python binding for the Hoedown Markdown library.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Hoep is a Python binding for the <a href=\"https://github.com/hoedown/hoedown\" rel=\"nofollow\">Hoedown</a> Markdown library.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Hoep is available on PyPI so installation is only a quick <tt>pip</tt> away.</p>\n<pre>$ pip install hoep\n</pre>\n</div>\n<div id=\"unicode\">\n<h2>Unicode</h2>\n<p>Hoep only accepts and returns <tt>unicode</tt> objects in Python 2 and <tt>str</tt> objects in Python 3. This goes for custom renderers as well. All callbacks receive and must return <tt>unicode</tt> or <tt>str</tt> objects, respective to the Python version.</p>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<p>Using Hoep is pretty straightforward. You can either use the <tt>render</tt> module function or the <tt>Hoep</tt> module class. The latter is more efficient if you are rendering multiple documents in a single go.</p>\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">unicode_literals</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">hoep</span> <span class=\"k\">as</span> <span class=\"nn\">h</span>\n\n\n<span class=\"n\">extensions</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">EXT_STRIKETHROUGH</span>\n<span class=\"n\">render_flags</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">HTML_SMARTYPANTS</span>\n\n\n<span class=\"c1\"># Method form.</span>\n<span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"s1\">'Some ~~bold~~ __\"strong\"__ text.'</span><span class=\"p\">,</span> <span class=\"n\">extensions</span><span class=\"p\">,</span> <span class=\"n\">render_flags</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Class form.</span>\n<span class=\"n\">md</span> <span class=\"o\">=</span> <span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">Hoep</span><span class=\"p\">(</span><span class=\"n\">extensions</span><span class=\"p\">,</span> <span class=\"n\">render_flags</span><span class=\"p\">)</span>\n\n<span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"n\">md</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"s1\">'Some ~~bold~~ __\"strong\"__ text.'</span><span class=\"p\">)</span>\n</pre>\n<div id=\"extensions\">\n<h3>Extensions</h3>\n<p>You can enable multiple extensions by bitwise ORing them.</p>\n<ul>\n<li><tt>EXT_AUTOLINK</tt>: Automatically parse URLs into links.</li>\n<li><tt>EXT_DISABLE_INDENTED_CODE</tt>: Disables indented code blocks.</li>\n<li><tt>EXT_FENCED_CODE</tt>: Enables fenced code blocks.</li>\n<li><tt>EXT_FOOTNOTES</tt>: Enables <a href=\"http://michelf.ca/projects/php-markdown/extra/#footnotes\" rel=\"nofollow\">Markdown Extra style footnotes</a>.</li>\n<li><tt>EXT_HIGHLIGHT</tt>: Enables ==marking== text.</li>\n<li><tt>EXT_LAX_SPACING</tt>: Removes the need for an empty line between Markdown and raw HTML.</li>\n<li><tt>EXT_NO_INTRA_EMPHASIS</tt>: Disables emphasis_between_words.</li>\n<li><tt>EXT_QUOTE</tt>: \u201cQuotes\u201d are translated into <tt>&lt;q&gt;</tt> tags.</li>\n<li><tt>EXT_SPACE_HEADERS</tt>: ATX style headers require a space after the opening number sign(s).</li>\n<li><tt>EXT_STRIKETHROUGH</tt>: Enables ~~striking~~ text.</li>\n<li><tt>EXT_SUPERSCRIPT</tt>: Enables super^script.</li>\n<li><tt>EXT_TABLES</tt>: Enables <a href=\"http://michelf.ca/projects/php-markdown/extra/#table\" rel=\"nofollow\">Markdown Extra style tables</a>.</li>\n<li><tt>EXT_UNDERLINE</tt>: Translates <tt>&lt;em&gt;</tt> tags into <tt>&lt;u&gt;</tt> tags.</li>\n</ul>\n</div>\n<div id=\"render-flags\">\n<h3>Render flags</h3>\n<p>You can enable multiple render flags by bitwise ORing them.</p>\n<ul>\n<li><tt>HTML_ESCAPE</tt>: All HTML is escaped.</li>\n<li><tt>HTML_EXPAND_TABS</tt>: Tabs are expanded to spaces.</li>\n<li><tt>HTML_HARD_WRAP</tt>: Line breaks are translated into <tt>&lt;br&gt;</tt> tags.</li>\n<li><tt>HTML_SAFELINK</tt>: Only links to safe protocols are allowed.</li>\n<li><tt>HTML_SKIP_HTML</tt>: All HTML tags are stripped.</li>\n<li><tt>HTML_SKIP_IMAGES</tt>: Images are ignored.</li>\n<li><tt>HTML_SKIP_LINKS</tt>: Links are ignored.</li>\n<li><tt>HTML_SKIP_STYLE</tt>: <tt>&lt;style&gt;</tt> tags are stripped.</li>\n<li><tt>HTML_SMARTYPANTS</tt>: Enables SmartyPants.</li>\n<li><tt>HTML_TOC</tt>: Anchors are added to headers.</li>\n<li><tt>HTML_USE_XHTML</tt>: Renders XHTML instead of HTML.</li>\n</ul>\n</div>\n</div>\n<div id=\"custom-renderer\">\n<h2>Custom renderer</h2>\n<p>By subclassing the <tt>Hoep</tt> class, you can create a custom renderer overriding various callbacks.</p>\n<pre><span class=\"c1\"># -*- coding: utf-8 -*-</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">unicode_literals</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">hoep</span> <span class=\"k\">as</span> <span class=\"nn\">h</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyRenderer</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">Hoep</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">extensions</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">render_flags</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">):</span>\n        <span class=\"c1\"># If you override the `__init__` function, you must call</span>\n        <span class=\"c1\"># the parent class's or bad things will happen.</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">MyRenderer</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">extensions</span><span class=\"p\">,</span> <span class=\"n\">render_flags</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">replace</span> <span class=\"o\">=</span> <span class=\"s1\">'[redacted]'</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">strikethrough</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">replace</span>\n\n\n<span class=\"n\">md</span> <span class=\"o\">=</span> <span class=\"n\">MyRenderer</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">EXT_STRIKETHROUGH</span><span class=\"p\">)</span>\n\n<span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"n\">md</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"s1\">'Some ~~bold~~ __\"strong\"__ text.'</span><span class=\"p\">)</span>\n</pre>\n<div id=\"callbacks\">\n<h3>Callbacks</h3>\n<div id=\"document-level\">\n<h4>Document level</h4>\n<ul>\n<li><tt>preprocess(str markdown)</tt></li>\n<li><tt>doc_header()</tt></li>\n<li><tt>doc_footer()</tt></li>\n<li><tt>postprocess(str html)</tt></li>\n</ul>\n</div>\n<div id=\"block-level\">\n<h4>Block level</h4>\n<ul>\n<li><tt>block_code(str text, str language)</tt></li>\n<li><tt>block_html(str text)</tt></li>\n<li><tt>block_quote(str text)</tt></li>\n<li><tt>footnotes(str text)</tt></li>\n<li><tt>footnote_def(str text, int number)</tt></li>\n<li><tt>header(str text, int level)</tt></li>\n<li><tt>hrule()</tt></li>\n<li><tt>list(str text, bool ordered)</tt></li>\n<li><tt>list_item(str text, bool ordered)</tt></li>\n<li><tt>paragraph(str text)</tt></li>\n<li><tt>table(str header, str body)</tt></li>\n<li><tt>table_row(str text)</tt></li>\n<li><tt>table_cell(str text, int flags)</tt></li>\n</ul>\n</div>\n<div id=\"span-level\">\n<h4>Span level</h4>\n<ul>\n<li><tt>autolink(str link, bool is_email)</tt></li>\n<li><tt>codespan(str text)</tt></li>\n<li><tt>double_emphasis(str text)</tt></li>\n<li><tt>emphasis(str text)</tt></li>\n<li><tt>footnote_ref(int number)</tt></li>\n<li><tt>highlight(str text)</tt></li>\n<li><tt>image(str link, mixed title, str alt)</tt></li>\n<li><tt>line_break()</tt></li>\n<li><tt>link(str link, mixed title, str content)</tt></li>\n<li><tt>quote(str text)</tt></li>\n<li><tt>raw_html_tag(str tag)</tt></li>\n<li><tt>strikethrough(str text)</tt></li>\n<li><tt>superscript(str text)</tt></li>\n<li><tt>triple_emphasis(str text)</tt></li>\n<li><tt>underline(str text)</tt></li>\n</ul>\n</div>\n<div id=\"low-level\">\n<h4>Low-level</h4>\n<ul>\n<li><tt>entity(str entity)</tt></li>\n<li><tt>normal_text(str text)</tt></li>\n</ul>\n</div>\n</div>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>If you run into any issues or have any questions, either open an <a href=\"https://github.com/Anomareh/Hoep/issues\" rel=\"nofollow\">issue</a> or hop in <a href=\"http://webchat.freenode.net/?channels=mynt\" rel=\"nofollow\">#mynt</a> on irc.freenode.net.</p>\n</div>\n\n          </div>"}, "last_serial": 1152992, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "e30718aabbc05087fbb3c79a3ffd21b9", "sha256": "dd166ea5dd2be22ed383a232922b5fe8f509348c6f0cb00c8d2c2a352cf96835"}, "downloads": -1, "filename": "hoep-1.0.tar.gz", "has_sig": false, "md5_digest": "e30718aabbc05087fbb3c79a3ffd21b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94574, "upload_time": "2014-04-01T00:45:54", "upload_time_iso_8601": "2014-04-01T00:45:54.128996Z", "url": "https://files.pythonhosted.org/packages/5e/a1/9ce0e16dfbe62dfed6d209256d7a59e904381632460cfc1bf5e95042b4e9/hoep-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "547ce646493ab8722721a7606153f3bd", "sha256": "22e7ff53794952a587cca5a352989f8d13763acb7e801a0881ec817266e6184b"}, "downloads": -1, "filename": "hoep-1.0.1.tar.gz", "has_sig": false, "md5_digest": "547ce646493ab8722721a7606153f3bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94775, "upload_time": "2014-04-08T20:34:51", "upload_time_iso_8601": "2014-04-08T20:34:51.113863Z", "url": "https://files.pythonhosted.org/packages/73/76/ec07711fa69ce22cc96dce709fcf3a486273418ef2dd43644ab9c866258d/hoep-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "674488367b8b77bef9257b687dc58757", "sha256": "712d6f890138e4f785bcfa8147f7e8eac802ae5543f533edbd810c5beabf7c7a"}, "downloads": -1, "filename": "hoep-1.0.2.tar.gz", "has_sig": false, "md5_digest": "674488367b8b77bef9257b687dc58757", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94813, "upload_time": "2014-07-10T04:39:59", "upload_time_iso_8601": "2014-07-10T04:39:59.086565Z", "url": "https://files.pythonhosted.org/packages/f5/ef/fcfd4f9fba12d89bcef8bf4ce51ae7c628a7f25c95fe35443473d39beb94/hoep-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "674488367b8b77bef9257b687dc58757", "sha256": "712d6f890138e4f785bcfa8147f7e8eac802ae5543f533edbd810c5beabf7c7a"}, "downloads": -1, "filename": "hoep-1.0.2.tar.gz", "has_sig": false, "md5_digest": "674488367b8b77bef9257b687dc58757", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94813, "upload_time": "2014-07-10T04:39:59", "upload_time_iso_8601": "2014-07-10T04:39:59.086565Z", "url": "https://files.pythonhosted.org/packages/f5/ef/fcfd4f9fba12d89bcef8bf4ce51ae7c628a7f25c95fe35443473d39beb94/hoep-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:51 2020"}