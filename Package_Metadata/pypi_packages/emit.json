{"info": {"author": "Brian Hicks", "author_email": "brian@brianthicks.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Emit\n====\n\nEmit is a Python library for realtime data processing. It can distribute work\nwith `Celery\n<https://emit.readthedocs.org/en/latest/distributing-work/celery.html>`_ or `RQ\n<https://emit.readthedocs.org/en/latest/distributing-work/rq.html>`_,\n`coordinate execution in other languages\n<https://emit.readthedocs.org/en/latest/multilang.html>`_, and let you swing\nfrom the trees of your graph with Tarzan-like precision.\n\nA taste:\n\n.. code:: python\n\n    from emit import router\n\n    router = Router()\n\n    @router.node(['word'], entry_point=True)\n    def parse_document(msg):\n        for word in msg.document.strip().split(' '):\n            yield word\n\n    @router.node(['word', 'count'], 'parse_document')\n    def count_word(msg):\n        return msg.word, redis.zincrby('word_counts', msg.word, 1)\n\n    import random\n    document = 'the words in this document will be counted and emitted by count_word'.split(' ')\n    router(document=' '.join(random.choice(document) for i in range(20)))\n\nSo how do you get it? On PyPI!\n\n::\n\n    pip install emit\n\nSome Links:\n\n-  `Project Documentation <http://emit.readthedocs.org/en/latest/>`__\n-  `Travis <https://travis-ci.org/BrianHicks/emit>`__ (|Build Status|)\n-  `Github <https://github.com/BrianHicks/emit>`__\n-  `Apache\n   License <https://github.com/BrianHicks/emit/blob/master/LICENSE.md>`__\n\nSupported Pythons:\n\n- CPython 2.6\n- CPython 2.7\n- CPython 3.2\n- CPython 3.3 (except for Celery, currently)\n- PyPy 1.9\n\n.. |Build Status| image:: https://travis-ci.org/BrianHicks/emit.png?branch=master\n   :target: https://travis-ci.org/BrianHicks/emit\n\nInstalling from source/development branch:\n\nEmit's releases are fairly frequent, so you should be good to use a released\nversion. However, if you need something currently not in a version, try the\n``develop`` branch::\n\n    pip install git+git://github.com/BrianHicks/emit.git@develop\n\nJust do be warned that things will break. And be sure to check `Travis\n<https://travis-ci.org/BrianHicks/emit>`__ to see if the platform you want is\ncurrently passing. It should be, but maybe not.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brianhicks/emit", "keywords": "stream processing", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "emit", "package_url": "https://pypi.org/project/emit/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/emit/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/brianhicks/emit"}, "release_url": "https://pypi.org/project/emit/0.4.0/", "requires_dist": null, "requires_python": null, "summary": "Build a graph to process streams", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Emit is a Python library for realtime data processing. It can distribute work\nwith <a href=\"https://emit.readthedocs.org/en/latest/distributing-work/celery.html\" rel=\"nofollow\">Celery</a> or <a href=\"https://emit.readthedocs.org/en/latest/distributing-work/rq.html\" rel=\"nofollow\">RQ</a>,\n<a href=\"https://emit.readthedocs.org/en/latest/multilang.html\" rel=\"nofollow\">coordinate execution in other languages</a>, and let you swing\nfrom the trees of your graph with Tarzan-like precision.</p>\n<p>A taste:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">emit</span> <span class=\"kn\">import</span> <span class=\"n\">router</span>\n\n<span class=\"n\">router</span> <span class=\"o\">=</span> <span class=\"n\">Router</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@router</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">([</span><span class=\"s1\">'word'</span><span class=\"p\">],</span> <span class=\"n\">entry_point</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">parse_document</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">word</span> <span class=\"ow\">in</span> <span class=\"n\">msg</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">):</span>\n        <span class=\"k\">yield</span> <span class=\"n\">word</span>\n\n<span class=\"nd\">@router</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">([</span><span class=\"s1\">'word'</span><span class=\"p\">,</span> <span class=\"s1\">'count'</span><span class=\"p\">],</span> <span class=\"s1\">'parse_document'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">count_word</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">msg</span><span class=\"o\">.</span><span class=\"n\">word</span><span class=\"p\">,</span> <span class=\"n\">redis</span><span class=\"o\">.</span><span class=\"n\">zincrby</span><span class=\"p\">(</span><span class=\"s1\">'word_counts'</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"o\">.</span><span class=\"n\">word</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"n\">document</span> <span class=\"o\">=</span> <span class=\"s1\">'the words in this document will be counted and emitted by count_word'</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)</span>\n<span class=\"n\">router</span><span class=\"p\">(</span><span class=\"n\">document</span><span class=\"o\">=</span><span class=\"s1\">' '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">(</span><span class=\"n\">document</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">)))</span>\n</pre>\n<p>So how do you get it? On PyPI!</p>\n<pre>pip install emit\n</pre>\n<p>Some Links:</p>\n<ul>\n<li><a href=\"http://emit.readthedocs.org/en/latest/\" rel=\"nofollow\">Project Documentation</a></li>\n<li><a href=\"https://travis-ci.org/BrianHicks/emit\" rel=\"nofollow\">Travis</a> (<a href=\"https://travis-ci.org/BrianHicks/emit\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/336be6a00355dee24c83f7c06f2c5d2d5810c0e6/68747470733a2f2f7472617669732d63692e6f72672f427269616e4869636b732f656d69742e706e673f6272616e63683d6d6173746572\"></a>)</li>\n<li><a href=\"https://github.com/BrianHicks/emit\" rel=\"nofollow\">Github</a></li>\n<li><a href=\"https://github.com/BrianHicks/emit/blob/master/LICENSE.md\" rel=\"nofollow\">Apache\nLicense</a></li>\n</ul>\n<p>Supported Pythons:</p>\n<ul>\n<li>CPython 2.6</li>\n<li>CPython 2.7</li>\n<li>CPython 3.2</li>\n<li>CPython 3.3 (except for Celery, currently)</li>\n<li>PyPy 1.9</li>\n</ul>\n<p>Installing from source/development branch:</p>\n<p>Emit\u2019s releases are fairly frequent, so you should be good to use a released\nversion. However, if you need something currently not in a version, try the\n<tt>develop</tt> branch:</p>\n<pre>pip install git+git://github.com/BrianHicks/emit.git@develop\n</pre>\n<p>Just do be warned that things will break. And be sure to check <a href=\"https://travis-ci.org/BrianHicks/emit\" rel=\"nofollow\">Travis</a> to see if the platform you want is\ncurrently passing. It should be, but maybe not.</p>\n\n          </div>"}, "last_serial": 705113, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "9a1c32ed5e6263aeac9c70946a9d12dd", "sha256": "65f6a067c815fd252ac184c970c7756c141fdc9e12c3b31b6d4298abf1a1f5bc"}, "downloads": -1, "filename": "emit-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9a1c32ed5e6263aeac9c70946a9d12dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6826, "upload_time": "2013-01-11T23:17:32", "upload_time_iso_8601": "2013-01-11T23:17:32.129952Z", "url": "https://files.pythonhosted.org/packages/61/c6/5e7779ea50e96af48543bd53ee664bf3427d5c4aa218827295d699f93cc0/emit-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8ebf82183a9aedeee80cff7624c24ee2", "sha256": "fa6891f3f89c6e8bdaacbd33978dce466c0490dabc5be2571dd24acaff9baffe"}, "downloads": -1, "filename": "emit-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8ebf82183a9aedeee80cff7624c24ee2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6580, "upload_time": "2013-01-17T16:36:31", "upload_time_iso_8601": "2013-01-17T16:36:31.632097Z", "url": "https://files.pythonhosted.org/packages/48/1c/6c1290e523b6927297e106988abfcffb63aa2df0acc563ab8f2ab4758aba/emit-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "8acc35be87f7188901a43bc0dda0889c", "sha256": "f159d124d122a7f226a01289963f5ee08e63e9a12b589aa1e8c347a4d213d82c"}, "downloads": -1, "filename": "emit-0.3.0.tar.gz", "has_sig": false, "md5_digest": "8acc35be87f7188901a43bc0dda0889c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7139, "upload_time": "2013-01-29T01:22:26", "upload_time_iso_8601": "2013-01-29T01:22:26.145251Z", "url": "https://files.pythonhosted.org/packages/10/a2/87fc6a20a4fcd35f4ea0af49d5964361b11b8f982947367475cdc9a5c71f/emit-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "80d7571d6368b1a01571cf6570520738", "sha256": "ec43c757dbc95294913a1cc10a351c3c8be7932ff84b6c6abaac75d1ec097aba"}, "downloads": -1, "filename": "emit-0.4.0.tar.gz", "has_sig": false, "md5_digest": "80d7571d6368b1a01571cf6570520738", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13545, "upload_time": "2013-01-31T23:25:03", "upload_time_iso_8601": "2013-01-31T23:25:03.473520Z", "url": "https://files.pythonhosted.org/packages/71/52/b9cbac9b3e5fb2557ffe4d6d5024278349abd3ebc42b9923fca9c094fd18/emit-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "80d7571d6368b1a01571cf6570520738", "sha256": "ec43c757dbc95294913a1cc10a351c3c8be7932ff84b6c6abaac75d1ec097aba"}, "downloads": -1, "filename": "emit-0.4.0.tar.gz", "has_sig": false, "md5_digest": "80d7571d6368b1a01571cf6570520738", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13545, "upload_time": "2013-01-31T23:25:03", "upload_time_iso_8601": "2013-01-31T23:25:03.473520Z", "url": "https://files.pythonhosted.org/packages/71/52/b9cbac9b3e5fb2557ffe4d6d5024278349abd3ebc42b9923fca9c094fd18/emit-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:36 2020"}