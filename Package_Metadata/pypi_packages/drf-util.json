{"info": {"author": "EBS Integrator", "author_email": "office@ebs-integrator.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Utilities"], "description": "# Django Rest Framework - Utils\n\nA set of util functions used in EBS Projects\n\n### Install:\n```bash\npip install drf_util\n```\n\n### Functions\n\n#### Get value from an object by path\n\nDefinition:\n\n```python\ngt(obj, path, default=None,sep='.')\n```\n\nUsage:\n\n```python\n>>> data = {\"a\":{\"b\": 1}}\n>>> print(gt(data, 'a.b'))\n1\n```\n\n#### Get recursive values from a dict by keys\n\nDefinition:\n```python\nget_object_labels(obj, path, default=None)\n```\n\nUsage:\n```python\n>>> data = {\"a\":{\"b\": 'title'}, \"c\": 'test'}\n>>> print(get_object_labels(data))\n['title', 'test']\n\n\n>>> data = {\"a\":{\"b\": 'title'}, \"c\": 'test'}\n>>> print(get_object_labels(data, ['c']))\n['test']\n```\n\n#### map() alternative with chunk select\n\nDefinition:\n```python\nfetch_objects(instance, function, select=50)\n```\n\nUsage:\n```python\n>>> def print_name(obj):\n        print obj.name\n>>>\n>>> fetch_objects(UserBigList.objects.order_by('id'), print_name, 500)\n```\n\n#### Select a first true value\n\nDefinition:\n```python\nany_value(items: list)\n```\n\nUsage:\n```python\n>>> print(any_value('', None, 0, \"Some text\", 50000))\nSome text\n```\n\n#### Recursive merge two dict\n\nDefinition:\n```python\ndict_merge(a, b, path=None)\n```\n\nUsage:\n```python\n>>> a = {'a': {'c': 1, 'd': {'x': 1}}}\n>>> b = {'a': {'e': 1, 'd': {'y': 1}}}\n>>> print(dict_merge(a, b))\n{'a': {'c': 1, 'e': 1, 'd': {'x': 1, 'y': 1}}}\n```\n\n### Decorators\n\n##### serialize_decorator\n\nDefinition:\n```python\nserialize_decorator(serializer_method, preview_function=None, read_params=False)\n```\n\nUsage:\n\n```python\nclass RestoreUserPassword(GenericAPIView):\n    @serialize_decorator(RestoreUserSerializer)\n    def post(self, request, *args, **kwargs):\n        return Response({\"valid\": True})\n```\n##### await_process_decorator\nDecorator for creating a queue for using a function, it is needed to adjust the call of a function from different processes (\u0421elery, Threads).\nFor example, this decorator can be used to limit the number of requests in the parser. \n  \nDefinition:\n```python\n# rate : count of usage some function, by default it's 20 times\n# period : period of usage some function,  by default it's 1 minute\nawait_process_decorator(rate=20, period=60)\n```\n\nUsage:\n\n```python\n@await_process_decorator(rate=10, period=5)  # 10 times per 5 seconds \ndef simple_print(text):\n    print(text)\n```\n\n### Managers\n\n- NoDeleteManager\n\n### Models\n\n- CommonModel - with date_created and date_updated\n- NoDeleteModel - with date_deleted\n- AbstractJsonModel - with languages\n\n### Validators\n\n- ObjectExistValidator - check if object exists\n- ObjectUniqueValidator - check if object not exists\n- PhoneValidator - check phone\n\n### Serializers\n\n#### ElasticFilterSerializer - make easy conversion between serializer data and elastic filters\n\n```python\nclass TenderFilterSerializer(PaginatorSerializer, ElasticFilterSerializer):\n    sort_criteria = [{\"date_updated\": {\"order\": \"desc\"}}, \"_score\"]\n\n    status = StringListField(required=False)\n    date_start = serializers.DateField(required=False)\n    date_end = serializers.DateField(required=False)\n\n    def filter_status(self, value):\n        return {'terms': {\n            'search_status.keyword': value\n        }}\n\n    def filter_date_start(self, value):\n        return {\n            \"range\": {\n                \"tenderPeriod.startDate\": {'gte': value}\n            }\n        }\n\n    def filter_date_end(self, value):\n        return {\n            \"range\": {\n                \"tenderPeriod.startDate\": {'lte': value}\n            }\n        }\n\nclass TenderListView(GenericAPIView):\n    @serialize_decorator(TenderFilterSerializer)\n    def get(self, request, *args, **kwargs):\n        return Response(es_app.search_response(request.serializer, 'tenders_index'))\n```\n\n#### FilterSerializer - filter queryset by serializer fields\n\n```python\nclass ServiceListQuerySerializer(FilterSerializer):\n    name = CharField(required=False)\n    tag_id = CharField(required=False)\n    type = CharField(required=False)\n    status = CharField(required=False)\n\n    def filter_name(self, value, queryset):\n        return queryset.filter(name__icontains=value)\n\n    def filter_tag_id(self, value, queryset):\n        return queryset.filter(tags__contains=value)\n\n    def filter_type(self, value, queryset):\n        return queryset.filter(type=value)\n\n    def filter_status(self, value, queryset):\n        return queryset.filter(status=value)\n\n\nclass ServiceListView(ListAPIView):\n    serializer_class = ServiceListQuerySerializer\n\n    @swagger_auto_schema(query_serializer=ServiceListQuerySerializer)\n    @serialize_decorator(ServiceListQuerySerializer)\n    def get(self, request):\n        services = request.serializer.get_filter(request.valid, Service.objects.all())\n        return Response(ServiceSerializer(instance=services, many=True).data)\n```\n\n\n#### ChangebleSerializer - metamorphic serializer\n\n```python\nclass ContractNoticeCancelView(GenericAPIView):\n    def put(self, request):\n        serializer_meta = {\n            'id': PrimaryKeyRelatedField(queryset=Tender.objects.all(), required=True),\n            'info': {\n                'rationale': CharField(required=True),\n                'description': CharField(required=True),\n            },\n            'documents': DocumentFileSerializer(required=True, many=True)\n        }\n        serializer = ChangebleSerializer(data=request.data)\n        serializer.update_properties(serializer_meta)\n        serializer.is_valid(raise_exception=True)\n\n        return Response({\"valid\": True})\n```\n\n#### PaginatorSerializer - serializer for paginating\n\n```python\nclass ListUserNotification(GenericAPIView):\n    @serialize_decorator(PaginatorSerializer)\n    def get(self, request):\n        notifications = NotificationEvent.objects.filter(user=request.user)\n        return request.serializer.response(notifications, serializer=ListNotificationSerializer)\n```\n\n#### Another serializers\n\n- StringListField - simple string list of chars\n- EmptySerializer - simple empty serializer\n- IdSerializer - simple id serializer", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/EnterpriseBusinessSolutions/drf-util", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "drf-util", "package_url": "https://pypi.org/project/drf-util/", "platform": "", "project_url": "https://pypi.org/project/drf-util/", "project_urls": {"Homepage": "https://github.com/EnterpriseBusinessSolutions/drf-util"}, "release_url": "https://pypi.org/project/drf-util/0.0.25/", "requires_dist": null, "requires_python": ">=3.4", "summary": "Django Rest Framework Utils", "version": "0.0.25", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django Rest Framework - Utils</h1>\n<p>A set of util functions used in EBS Projects</p>\n<h3>Install:</h3>\n<pre>pip install drf_util\n</pre>\n<h3>Functions</h3>\n<h4>Get value from an object by path</h4>\n<p>Definition:</p>\n<pre><span class=\"n\">gt</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span><span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">'.'</span><span class=\"p\">)</span>\n</pre>\n<p>Usage:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"a\"</span><span class=\"p\">:{</span><span class=\"s2\">\"b\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">gt</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"s1\">'a.b'</span><span class=\"p\">))</span>\n<span class=\"mi\">1</span>\n</pre>\n<h4>Get recursive values from a dict by keys</h4>\n<p>Definition:</p>\n<pre><span class=\"n\">get_object_labels</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>Usage:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"a\"</span><span class=\"p\">:{</span><span class=\"s2\">\"b\"</span><span class=\"p\">:</span> <span class=\"s1\">'title'</span><span class=\"p\">},</span> <span class=\"s2\">\"c\"</span><span class=\"p\">:</span> <span class=\"s1\">'test'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">get_object_labels</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">))</span>\n<span class=\"p\">[</span><span class=\"s1\">'title'</span><span class=\"p\">,</span> <span class=\"s1\">'test'</span><span class=\"p\">]</span>\n\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"a\"</span><span class=\"p\">:{</span><span class=\"s2\">\"b\"</span><span class=\"p\">:</span> <span class=\"s1\">'title'</span><span class=\"p\">},</span> <span class=\"s2\">\"c\"</span><span class=\"p\">:</span> <span class=\"s1\">'test'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">get_object_labels</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'c'</span><span class=\"p\">]))</span>\n<span class=\"p\">[</span><span class=\"s1\">'test'</span><span class=\"p\">]</span>\n</pre>\n<h4>map() alternative with chunk select</h4>\n<p>Definition:</p>\n<pre><span class=\"n\">fetch_objects</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">function</span><span class=\"p\">,</span> <span class=\"n\">select</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n</pre>\n<p>Usage:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">print_name</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">name</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">fetch_objects</span><span class=\"p\">(</span><span class=\"n\">UserBigList</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">),</span> <span class=\"n\">print_name</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">)</span>\n</pre>\n<h4>Select a first true value</h4>\n<p>Definition:</p>\n<pre><span class=\"n\">any_value</span><span class=\"p\">(</span><span class=\"n\">items</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">)</span>\n</pre>\n<p>Usage:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">any_value</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">\"Some text\"</span><span class=\"p\">,</span> <span class=\"mi\">50000</span><span class=\"p\">))</span>\n<span class=\"n\">Some</span> <span class=\"n\">text</span>\n</pre>\n<h4>Recursive merge two dict</h4>\n<p>Definition:</p>\n<pre><span class=\"n\">dict_merge</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>Usage:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'c'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'d'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}}}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'e'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'d'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}}}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">dict_merge</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">))</span>\n<span class=\"p\">{</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'c'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'e'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'d'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}}}</span>\n</pre>\n<h3>Decorators</h3>\n<h5>serialize_decorator</h5>\n<p>Definition:</p>\n<pre><span class=\"n\">serialize_decorator</span><span class=\"p\">(</span><span class=\"n\">serializer_method</span><span class=\"p\">,</span> <span class=\"n\">preview_function</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">read_params</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>Usage:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">RestoreUserPassword</span><span class=\"p\">(</span><span class=\"n\">GenericAPIView</span><span class=\"p\">):</span>\n    <span class=\"nd\">@serialize_decorator</span><span class=\"p\">(</span><span class=\"n\">RestoreUserSerializer</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">post</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">Response</span><span class=\"p\">({</span><span class=\"s2\">\"valid\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">})</span>\n</pre>\n<h5>await_process_decorator</h5>\n<p>Decorator for creating a queue for using a function, it is needed to adjust the call of a function from different processes (\u0421elery, Threads).\nFor example, this decorator can be used to limit the number of requests in the parser.</p>\n<p>Definition:</p>\n<pre><span class=\"c1\"># rate : count of usage some function, by default it's 20 times</span>\n<span class=\"c1\"># period : period of usage some function,  by default it's 1 minute</span>\n<span class=\"n\">await_process_decorator</span><span class=\"p\">(</span><span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">period</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n</pre>\n<p>Usage:</p>\n<pre><span class=\"nd\">@await_process_decorator</span><span class=\"p\">(</span><span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">period</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>  <span class=\"c1\"># 10 times per 5 seconds </span>\n<span class=\"k\">def</span> <span class=\"nf\">simple_print</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n</pre>\n<h3>Managers</h3>\n<ul>\n<li>NoDeleteManager</li>\n</ul>\n<h3>Models</h3>\n<ul>\n<li>CommonModel - with date_created and date_updated</li>\n<li>NoDeleteModel - with date_deleted</li>\n<li>AbstractJsonModel - with languages</li>\n</ul>\n<h3>Validators</h3>\n<ul>\n<li>ObjectExistValidator - check if object exists</li>\n<li>ObjectUniqueValidator - check if object not exists</li>\n<li>PhoneValidator - check phone</li>\n</ul>\n<h3>Serializers</h3>\n<h4>ElasticFilterSerializer - make easy conversion between serializer data and elastic filters</h4>\n<pre><span class=\"k\">class</span> <span class=\"nc\">TenderFilterSerializer</span><span class=\"p\">(</span><span class=\"n\">PaginatorSerializer</span><span class=\"p\">,</span> <span class=\"n\">ElasticFilterSerializer</span><span class=\"p\">):</span>\n    <span class=\"n\">sort_criteria</span> <span class=\"o\">=</span> <span class=\"p\">[{</span><span class=\"s2\">\"date_updated\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"order\"</span><span class=\"p\">:</span> <span class=\"s2\">\"desc\"</span><span class=\"p\">}},</span> <span class=\"s2\">\"_score\"</span><span class=\"p\">]</span>\n\n    <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">StringListField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">date_start</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">date_end</span> <span class=\"o\">=</span> <span class=\"n\">serializers</span><span class=\"o\">.</span><span class=\"n\">DateField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">filter_status</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'terms'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'search_status.keyword'</span><span class=\"p\">:</span> <span class=\"n\">value</span>\n        <span class=\"p\">}}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">filter_date_start</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"range\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"tenderPeriod.startDate\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'gte'</span><span class=\"p\">:</span> <span class=\"n\">value</span><span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">filter_date_end</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"range\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s2\">\"tenderPeriod.startDate\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'lte'</span><span class=\"p\">:</span> <span class=\"n\">value</span><span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TenderListView</span><span class=\"p\">(</span><span class=\"n\">GenericAPIView</span><span class=\"p\">):</span>\n    <span class=\"nd\">@serialize_decorator</span><span class=\"p\">(</span><span class=\"n\">TenderFilterSerializer</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">Response</span><span class=\"p\">(</span><span class=\"n\">es_app</span><span class=\"o\">.</span><span class=\"n\">search_response</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">serializer</span><span class=\"p\">,</span> <span class=\"s1\">'tenders_index'</span><span class=\"p\">))</span>\n</pre>\n<h4>FilterSerializer - filter queryset by serializer fields</h4>\n<pre><span class=\"k\">class</span> <span class=\"nc\">ServiceListQuerySerializer</span><span class=\"p\">(</span><span class=\"n\">FilterSerializer</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">tag_id</span> <span class=\"o\">=</span> <span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">filter_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">queryset</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">queryset</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">name__icontains</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">filter_tag_id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">queryset</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">queryset</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">tags__contains</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">filter_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">queryset</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">queryset</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">filter_status</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">queryset</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">queryset</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ServiceListView</span><span class=\"p\">(</span><span class=\"n\">ListAPIView</span><span class=\"p\">):</span>\n    <span class=\"n\">serializer_class</span> <span class=\"o\">=</span> <span class=\"n\">ServiceListQuerySerializer</span>\n\n    <span class=\"nd\">@swagger_auto_schema</span><span class=\"p\">(</span><span class=\"n\">query_serializer</span><span class=\"o\">=</span><span class=\"n\">ServiceListQuerySerializer</span><span class=\"p\">)</span>\n    <span class=\"nd\">@serialize_decorator</span><span class=\"p\">(</span><span class=\"n\">ServiceListQuerySerializer</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"n\">services</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">serializer</span><span class=\"o\">.</span><span class=\"n\">get_filter</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">valid</span><span class=\"p\">,</span> <span class=\"n\">Service</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">())</span>\n        <span class=\"k\">return</span> <span class=\"n\">Response</span><span class=\"p\">(</span><span class=\"n\">ServiceSerializer</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"o\">=</span><span class=\"n\">services</span><span class=\"p\">,</span> <span class=\"n\">many</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<h4>ChangebleSerializer - metamorphic serializer</h4>\n<pre><span class=\"k\">class</span> <span class=\"nc\">ContractNoticeCancelView</span><span class=\"p\">(</span><span class=\"n\">GenericAPIView</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">put</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"n\">serializer_meta</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"n\">PrimaryKeyRelatedField</span><span class=\"p\">(</span><span class=\"n\">queryset</span><span class=\"o\">=</span><span class=\"n\">Tender</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(),</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n            <span class=\"s1\">'info'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'rationale'</span><span class=\"p\">:</span> <span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n                <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span>\n            <span class=\"p\">},</span>\n            <span class=\"s1\">'documents'</span><span class=\"p\">:</span> <span class=\"n\">DocumentFileSerializer</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">many</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"p\">}</span>\n        <span class=\"n\">serializer</span> <span class=\"o\">=</span> <span class=\"n\">ChangebleSerializer</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n        <span class=\"n\">serializer</span><span class=\"o\">.</span><span class=\"n\">update_properties</span><span class=\"p\">(</span><span class=\"n\">serializer_meta</span><span class=\"p\">)</span>\n        <span class=\"n\">serializer</span><span class=\"o\">.</span><span class=\"n\">is_valid</span><span class=\"p\">(</span><span class=\"n\">raise_exception</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">Response</span><span class=\"p\">({</span><span class=\"s2\">\"valid\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">})</span>\n</pre>\n<h4>PaginatorSerializer - serializer for paginating</h4>\n<pre><span class=\"k\">class</span> <span class=\"nc\">ListUserNotification</span><span class=\"p\">(</span><span class=\"n\">GenericAPIView</span><span class=\"p\">):</span>\n    <span class=\"nd\">@serialize_decorator</span><span class=\"p\">(</span><span class=\"n\">PaginatorSerializer</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"n\">notifications</span> <span class=\"o\">=</span> <span class=\"n\">NotificationEvent</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">serializer</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"p\">(</span><span class=\"n\">notifications</span><span class=\"p\">,</span> <span class=\"n\">serializer</span><span class=\"o\">=</span><span class=\"n\">ListNotificationSerializer</span><span class=\"p\">)</span>\n</pre>\n<h4>Another serializers</h4>\n<ul>\n<li>StringListField - simple string list of chars</li>\n<li>EmptySerializer - simple empty serializer</li>\n<li>IdSerializer - simple id serializer</li>\n</ul>\n\n          </div>"}, "last_serial": 7179828, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "58a03a826a15781a1aac1847b4391512", "sha256": "e9974cf672cda13406730d1d407baf22cc094b3b68bfae2d69a7d09fff0e4458"}, "downloads": -1, "filename": "drf_util-0.0.10.tar.gz", "has_sig": false, "md5_digest": "58a03a826a15781a1aac1847b4391512", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 8170, "upload_time": "2019-03-28T12:15:11", "upload_time_iso_8601": "2019-03-28T12:15:11.141183Z", "url": "https://files.pythonhosted.org/packages/ff/ef/25ec45b9f31080f4a297a7bf62907a8e690fe73b7b296168db4e6676bd20/drf_util-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "4fb229674142c125acadb7ca7a43ad12", "sha256": "f91bb3b428d2c41aacee914c35dc21541bf1523edddca9c8fbf38ee28f346de8"}, "downloads": -1, "filename": "drf_util-0.0.11.tar.gz", "has_sig": false, "md5_digest": "4fb229674142c125acadb7ca7a43ad12", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 8181, "upload_time": "2019-04-15T09:35:10", "upload_time_iso_8601": "2019-04-15T09:35:10.312989Z", "url": "https://files.pythonhosted.org/packages/f8/45/8d657d72200229a5105b668102467552eede8cc5ff451fab8b22a4939a87/drf_util-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "5f1240560688a3ba9004063c1915f5a3", "sha256": "14832d9a9ba97e351bec4d15ce52203d666807a60337d8594ae992c8c468c9d1"}, "downloads": -1, "filename": "drf_util-0.0.12.tar.gz", "has_sig": false, "md5_digest": "5f1240560688a3ba9004063c1915f5a3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 8191, "upload_time": "2019-05-07T08:39:14", "upload_time_iso_8601": "2019-05-07T08:39:14.370753Z", "url": "https://files.pythonhosted.org/packages/34/7e/88456c2d59c9bd46b85cb25e3b16d0049af126f7e729ff104025d4175e9d/drf_util-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "9bca0ca18d61d5ca953e65c57e93a665", "sha256": "479fd1eff965c52512d05e9708653abc00ce81b8d5d859411744835873648e0f"}, "downloads": -1, "filename": "drf_util-0.0.13.tar.gz", "has_sig": false, "md5_digest": "9bca0ca18d61d5ca953e65c57e93a665", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 8208, "upload_time": "2019-08-02T14:34:16", "upload_time_iso_8601": "2019-08-02T14:34:16.170837Z", "url": "https://files.pythonhosted.org/packages/4e/7a/b18543eb05d6ca03bc0c868ea1666b3a2b74a0b5541b6170a9018a9620b7/drf_util-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "049560628e56ea7a9b2dcd121cc2c5f1", "sha256": "15a3423f09b5a3a332b7c4aa218d9b08a7b105e30a0d9c27fb0b0bad7aff334b"}, "downloads": -1, "filename": "drf_util-0.0.14.tar.gz", "has_sig": false, "md5_digest": "049560628e56ea7a9b2dcd121cc2c5f1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 8618, "upload_time": "2019-08-03T09:36:15", "upload_time_iso_8601": "2019-08-03T09:36:15.243337Z", "url": "https://files.pythonhosted.org/packages/b4/96/6e107c0c0d833a856fce9dfd577f0663b7f7a95fcf1784cc7ec496c8602b/drf_util-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "1d7e7c7b21ce28333a5815bbc028f8b6", "sha256": "4d744d857f38217171b541982a4105091505aa72085a246c7b9e54662cc4a56e"}, "downloads": -1, "filename": "drf_util-0.0.15.tar.gz", "has_sig": false, "md5_digest": "1d7e7c7b21ce28333a5815bbc028f8b6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 8626, "upload_time": "2019-09-03T08:42:34", "upload_time_iso_8601": "2019-09-03T08:42:34.226366Z", "url": "https://files.pythonhosted.org/packages/32/40/7feded87564097fe0bcd5884ebd8e55ead271af0c32f740d132e89efa4ac/drf_util-0.0.15.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "33cdf6b92411045e3b697a87961448c0", "sha256": "17c18ac6da0b67723b91d09ff5acf2c1c8f1fb46c9bab5e3a40e9033c1848d00"}, "downloads": -1, "filename": "drf_util-0.0.16.tar.gz", "has_sig": false, "md5_digest": "33cdf6b92411045e3b697a87961448c0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 10074, "upload_time": "2019-09-26T15:22:04", "upload_time_iso_8601": "2019-09-26T15:22:04.040457Z", "url": "https://files.pythonhosted.org/packages/68/f0/7a911ac8251964a732ae0f009e88bd41f8197f2280f611b45dcaca6c953f/drf_util-0.0.16.tar.gz", "yanked": false}], "0.0.17": [{"comment_text": "", "digests": {"md5": "5b6ab4e46a528fa29892385e80868310", "sha256": "55a2c5ae2d7eb88e70577d8c9542309e0c6b474def464730984d40dbf35304b8"}, "downloads": -1, "filename": "drf_util-0.0.17.tar.gz", "has_sig": false, "md5_digest": "5b6ab4e46a528fa29892385e80868310", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 8645, "upload_time": "2019-10-21T08:47:12", "upload_time_iso_8601": "2019-10-21T08:47:12.006998Z", "url": "https://files.pythonhosted.org/packages/65/40/457fcb50797e9334944ca52727f94f277dc2bba6b0e7ac998c0fb31b4c74/drf_util-0.0.17.tar.gz", "yanked": false}], "0.0.18": [{"comment_text": "", "digests": {"md5": "6594af9e6ca60511466c5674fb1cf8ad", "sha256": "da2d760b0c7827dce5575f97adfe2bd6c5084f2c73cee8900ecabe78496edd71"}, "downloads": -1, "filename": "drf_util-0.0.18.tar.gz", "has_sig": false, "md5_digest": "6594af9e6ca60511466c5674fb1cf8ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 10696, "upload_time": "2019-11-30T13:36:32", "upload_time_iso_8601": "2019-11-30T13:36:32.166933Z", "url": "https://files.pythonhosted.org/packages/4e/4f/429edf5690990de761a9a1df9bf249b6239a8c6c8e32c706fff069c339a2/drf_util-0.0.18.tar.gz", "yanked": false}], "0.0.19": [{"comment_text": "", "digests": {"md5": "9dc594bb6f74c82e09ba511b1e0f4ffd", "sha256": "bf2c0e4941479218ba0b0b784c617cdeacc627ce7fb2d7b3fdcbd11998eb5e68"}, "downloads": -1, "filename": "drf_util-0.0.19.tar.gz", "has_sig": false, "md5_digest": "9dc594bb6f74c82e09ba511b1e0f4ffd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 11916, "upload_time": "2019-12-26T08:53:30", "upload_time_iso_8601": "2019-12-26T08:53:30.272529Z", "url": "https://files.pythonhosted.org/packages/3d/e7/7e234cc4ea9bb7c7c141adc3183fcaa8d3aec177b46e49907874653d8f4a/drf_util-0.0.19.tar.gz", "yanked": false}], "0.0.20": [{"comment_text": "", "digests": {"md5": "fd9bd874af26e5774aa12e1b12ed561a", "sha256": "447d2b15ac65d11448d975fced4d8b7e1191a14b400c226cc19229e55ac26ddb"}, "downloads": -1, "filename": "drf_util-0.0.20.tar.gz", "has_sig": false, "md5_digest": "fd9bd874af26e5774aa12e1b12ed561a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 12005, "upload_time": "2019-12-26T15:18:50", "upload_time_iso_8601": "2019-12-26T15:18:50.132892Z", "url": "https://files.pythonhosted.org/packages/00/97/9aaf471aebf9c76ad76f5473d75db5845792711ad2b31513fb6f9b89a31a/drf_util-0.0.20.tar.gz", "yanked": false}], "0.0.21": [{"comment_text": "", "digests": {"md5": "e36ea87465c3084924232fde6ee6fbcb", "sha256": "840b08b56a7e13d900767b4df690ec7243896bcf7660ddf0d0524882ae77e943"}, "downloads": -1, "filename": "drf_util-0.0.21.tar.gz", "has_sig": false, "md5_digest": "e36ea87465c3084924232fde6ee6fbcb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 13480, "upload_time": "2020-01-14T11:54:39", "upload_time_iso_8601": "2020-01-14T11:54:39.089545Z", "url": "https://files.pythonhosted.org/packages/5e/28/73a3ebe5fc6b7942d9dbb852fd7500f7b452a3a4c0583ab250ae52ef3c33/drf_util-0.0.21.tar.gz", "yanked": false}], "0.0.22": [{"comment_text": "", "digests": {"md5": "fadb4013f6dc1c1478436ff106179e19", "sha256": "82d664496d2a5d3905b89ea522d4020ca0e33bd041363fd1fe6c9434503555af"}, "downloads": -1, "filename": "drf_util-0.0.22.tar.gz", "has_sig": false, "md5_digest": "fadb4013f6dc1c1478436ff106179e19", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 13481, "upload_time": "2020-01-14T15:36:57", "upload_time_iso_8601": "2020-01-14T15:36:57.673225Z", "url": "https://files.pythonhosted.org/packages/ff/27/1a9f32225ee37d863ed62ca09db8677ccda38d5b3176d19906d7e4ece766/drf_util-0.0.22.tar.gz", "yanked": false}], "0.0.23": [{"comment_text": "", "digests": {"md5": "6cf83da7bf863d6004fdb1f9d0a48866", "sha256": "6dbb8306b155f2d435c1c7d18a3be0d05193a444cfbbd35d5d329212b7e6c9d3"}, "downloads": -1, "filename": "drf_util-0.0.23.tar.gz", "has_sig": false, "md5_digest": "6cf83da7bf863d6004fdb1f9d0a48866", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 13499, "upload_time": "2020-01-27T08:55:06", "upload_time_iso_8601": "2020-01-27T08:55:06.519990Z", "url": "https://files.pythonhosted.org/packages/25/8f/19be4f1b224a3f953ddec317864399ce1ad2efe63eb1384cab385d8c2ef5/drf_util-0.0.23.tar.gz", "yanked": false}], "0.0.24": [{"comment_text": "", "digests": {"md5": "ae404e168a7af4982aa99dfda61e4c36", "sha256": "172acdc13cc9e8de1b6a9fc4a1219e27763d8227dfea827ecb266ac23f26a22c"}, "downloads": -1, "filename": "drf_util-0.0.24.tar.gz", "has_sig": false, "md5_digest": "ae404e168a7af4982aa99dfda61e4c36", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 13492, "upload_time": "2020-04-02T13:09:45", "upload_time_iso_8601": "2020-04-02T13:09:45.221764Z", "url": "https://files.pythonhosted.org/packages/ba/9b/54bc875ccb978fb1f919da261ddd0f83f0477db10cf793d32141a6f3724e/drf_util-0.0.24.tar.gz", "yanked": false}], "0.0.25": [{"comment_text": "", "digests": {"md5": "7fc45f06fd51ae8faf987072474ef61e", "sha256": "f5d8d51fc3ad01bc9ce6e1321eb45f8dccce081829cb20c80c33c7fd2124f452"}, "downloads": -1, "filename": "drf_util-0.0.25.tar.gz", "has_sig": false, "md5_digest": "7fc45f06fd51ae8faf987072474ef61e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 13507, "upload_time": "2020-05-06T12:09:08", "upload_time_iso_8601": "2020-05-06T12:09:08.122179Z", "url": "https://files.pythonhosted.org/packages/1d/4a/cdfb811070a0798dae2871459474289d470af95950762c410f593080e031/drf_util-0.0.25.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "d59f9391c3463986c7c07978e99012cd", "sha256": "d8d896ad896f469d542d6faa826d668b66860fc9cb387ab3b5ab8ae9f5425175"}, "downloads": -1, "filename": "drf_util-0.0.7.tar.gz", "has_sig": false, "md5_digest": "d59f9391c3463986c7c07978e99012cd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 7994, "upload_time": "2019-03-26T18:37:34", "upload_time_iso_8601": "2019-03-26T18:37:34.449742Z", "url": "https://files.pythonhosted.org/packages/6b/bd/ed4d5bd72edbf076a1767f516ce02d9dbbaac3d46d1cfa25894cff86136a/drf_util-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "3ae1675b9f3e73bfcc6a2ef74ddb3086", "sha256": "65ff685d7116e1d7c61cb7be98f96b3fdedf04893b8aacbf5e180ee0a3f1be0d"}, "downloads": -1, "filename": "drf_util-0.0.8.tar.gz", "has_sig": false, "md5_digest": "3ae1675b9f3e73bfcc6a2ef74ddb3086", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 8103, "upload_time": "2019-03-27T14:20:34", "upload_time_iso_8601": "2019-03-27T14:20:34.138255Z", "url": "https://files.pythonhosted.org/packages/54/3e/346687be08a97d807d0086592923b75633676562f08cb7dc154511187f53/drf_util-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "794c0920f760638cafe6010a7b850f32", "sha256": "d4106f410c77c7067f1902330b7ff48b2e988adf169db70df860a7fc8e065333"}, "downloads": -1, "filename": "drf_util-0.0.9.tar.gz", "has_sig": false, "md5_digest": "794c0920f760638cafe6010a7b850f32", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 8155, "upload_time": "2019-03-27T19:24:08", "upload_time_iso_8601": "2019-03-27T19:24:08.064678Z", "url": "https://files.pythonhosted.org/packages/2e/c4/c1d93c9ed78c8a424634fe9d6dac9283b9a73a772b4916f983e2f11cfacc/drf_util-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7fc45f06fd51ae8faf987072474ef61e", "sha256": "f5d8d51fc3ad01bc9ce6e1321eb45f8dccce081829cb20c80c33c7fd2124f452"}, "downloads": -1, "filename": "drf_util-0.0.25.tar.gz", "has_sig": false, "md5_digest": "7fc45f06fd51ae8faf987072474ef61e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 13507, "upload_time": "2020-05-06T12:09:08", "upload_time_iso_8601": "2020-05-06T12:09:08.122179Z", "url": "https://files.pythonhosted.org/packages/1d/4a/cdfb811070a0798dae2871459474289d470af95950762c410f593080e031/drf_util-0.0.25.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:38 2020"}