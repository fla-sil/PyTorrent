{"info": {"author": "Rackspace Developers for Operational Tooling", "author_email": "dot@rackspace.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Flask\\_OsloLog\n==============\n\n|Build Status| |Coverage Status|\n\nFlask Oslo Log is a WSGI Middleware and Flask Extension intended to\nprovide logging via the Oslo-Log package inside Flask.\n\nInstallation\n============\n\n1. ``git clone {thisrepo}``\n2. ``python setup.py install``\n\nGetting Started with Flask Oslo Log\n===================================\n\nFlask Oslo Log is a Flask Extension which adds request logging via\noslo.log, as well as exposing an arbitrary logger to oslo.log similarly\nto the standard app logger.\n\nConfiguring the Extension\n-------------------------\n\nflask\\_oslolog requires no configuration of it's own, but you may wish\nto utilize the upstream configuration options of oslo.log to configure\nlog file location, etc.\n\nA basic configuration might look like this:\n\n.. code:: ini\n\n    [DEFAULT]\n    debug=True\n    log_file=/var/log/yourapp/flask.log\n\nInitializing the Extension\n--------------------------\n\nSimply wrap the application object during instantiation:\n\n.. code:: python\n\n    from flask import Flask\n\n    from flask_oslolog import OsloLog\n\n    app = Flask(__name__)\n    log = OsloLog(app)\n\n    if __name__ == \"__main__\":  # pragma: nocover\n        app = create_app(app_name=__name__)\n        app.run(host=\"0.0.0.0\", port=5000\n\nAccessing the extension\n-----------------------\n\nOnce the extension is intialized, you will notice that, by default,\nrequest logging has been enabled. In your log file you will begin to see\nmessages like this:\n\n::\n\n    2017-01-19 18:30:26.654 2082 INFO flask\\_oslog.middleware \\[-\\] 1.2.3.4 my_user Confirmed \"GET /resource/1\" status: 200 len: 8317\n\nAdditionally, arbitrary logging will become available:\n\n.. code:: python\n\n    from flask import Flask\n\n    from flask_oslolog import OsloLog\n\n    app = Flask(__name__)\n    log = OsloLog(app)\n\n    @app.route(\"/\")\n    log.logger.warn(\"Someone is accessing the root!\")\n    return \"access granted\"\n\n    if __name__ == \"__main__\":  # pragma: nocover\n        app = create_app(app_name=__name__)\n        app.run(host=\"0.0.0.0\", port=5000\n\nInitializing the Extension in an Application Factory app\n--------------------------------------------------------\n\nAs with all flask extensions, it is also accessible in an application\nFactory setting by initializing the extension separately from it's\ninstantiation:\n\n.. code:: python\n\n    from flask import Flask\n\n    from flask_oslolog import OsloLog\n\n    log = OsloLog()\n\n    def create_app(app_name):\n        app = Flask(app_name)\n        log.init_app(app)\n\n        return app\n\n\n    if __name__ == \"__main__\":  # pragma: nocover\n        app = create_app(app_name=__name__)\n        app.run(host=\"0.0.0.0\", port=5000)\n\n.. |Build Status| image:: https://travis-ci.org/Rackspace-DOT/flask_oslolog.svg?branch=staging\n   :target: https://travis-ci.org/Rackspace-DOT/flask_oslolog\n.. |Coverage Status| image:: https://coveralls.io/repos/github/Rackspace-DOT/flask_oslolog/badge.svg?branch=master\n   :target: https://coveralls.io/github/Rackspace-DOT/flask_oslolog?branch=master", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Rackspace-DOT/flask_oslolog", "keywords": "flask,identity,auth", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "flask-oslolog", "package_url": "https://pypi.org/project/flask-oslolog/", "platform": "any", "project_url": "https://pypi.org/project/flask-oslolog/", "project_urls": {"Homepage": "https://github.com/Rackspace-DOT/flask_oslolog"}, "release_url": "https://pypi.org/project/flask-oslolog/0.1/", "requires_dist": null, "requires_python": null, "summary": "This project wraps the existing oslo.log library to providerequest logging and logger access within flask..", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"flask-oslolog\">\n<h2>Flask_OsloLog</h2>\n<p><a href=\"https://travis-ci.org/Rackspace-DOT/flask_oslolog\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0bf13a5cb75fb9700e3dddfafc62020ba999f2b3/68747470733a2f2f7472617669732d63692e6f72672f5261636b73706163652d444f542f666c61736b5f6f736c6f6c6f672e7376673f6272616e63683d73746167696e67\"></a> <a href=\"https://coveralls.io/github/Rackspace-DOT/flask_oslolog?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a1b9c7e81f82923242acc22ad863f3e012f63a1/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f5261636b73706163652d444f542f666c61736b5f6f736c6f6c6f672f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Flask Oslo Log is a WSGI Middleware and Flask Extension intended to\nprovide logging via the Oslo-Log package inside Flask.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li><tt>git clone {thisrepo}</tt></li>\n<li><tt>python setup.py install</tt></li>\n</ol>\n</div>\n<div id=\"getting-started-with-flask-oslo-log\">\n<h2>Getting Started with Flask Oslo Log</h2>\n<p>Flask Oslo Log is a Flask Extension which adds request logging via\noslo.log, as well as exposing an arbitrary logger to oslo.log similarly\nto the standard app logger.</p>\n<div id=\"configuring-the-extension\">\n<h3>Configuring the Extension</h3>\n<p>flask_oslolog requires no configuration of it\u2019s own, but you may wish\nto utilize the upstream configuration options of oslo.log to configure\nlog file location, etc.</p>\n<p>A basic configuration might look like this:</p>\n<pre><span class=\"k\">[DEFAULT]</span>\n<span class=\"na\">debug</span><span class=\"o\">=</span><span class=\"s\">True</span>\n<span class=\"na\">log_file</span><span class=\"o\">=</span><span class=\"s\">/var/log/yourapp/flask.log</span>\n</pre>\n</div>\n<div id=\"initializing-the-extension\">\n<h3>Initializing the Extension</h3>\n<p>Simply wrap the application object during instantiation:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">flask_oslolog</span> <span class=\"kn\">import</span> <span class=\"n\">OsloLog</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">OsloLog</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: nocover</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">create_app</span><span class=\"p\">(</span><span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"0.0.0.0\"</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5000</span>\n</pre>\n</div>\n<div id=\"accessing-the-extension\">\n<h3>Accessing the extension</h3>\n<p>Once the extension is intialized, you will notice that, by default,\nrequest logging has been enabled. In your log file you will begin to see\nmessages like this:</p>\n<pre>2017-01-19 18:30:26.654 2082 INFO flask\\_oslog.middleware \\[-\\] 1.2.3.4 my_user Confirmed \"GET /resource/1\" status: 200 len: 8317\n</pre>\n<p>Additionally, arbitrary logging will become available:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">flask_oslolog</span> <span class=\"kn\">import</span> <span class=\"n\">OsloLog</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">OsloLog</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">)</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">\"Someone is accessing the root!\"</span><span class=\"p\">)</span>\n<span class=\"k\">return</span> <span class=\"s2\">\"access granted\"</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: nocover</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">create_app</span><span class=\"p\">(</span><span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"0.0.0.0\"</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5000</span>\n</pre>\n</div>\n<div id=\"initializing-the-extension-in-an-application-factory-app\">\n<h3>Initializing the Extension in an Application Factory app</h3>\n<p>As with all flask extensions, it is also accessible in an application\nFactory setting by initializing the extension separately from it\u2019s\ninstantiation:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">flask_oslolog</span> <span class=\"kn\">import</span> <span class=\"n\">OsloLog</span>\n\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">OsloLog</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">create_app</span><span class=\"p\">(</span><span class=\"n\">app_name</span><span class=\"p\">):</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"n\">app_name</span><span class=\"p\">)</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">init_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">app</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>  <span class=\"c1\"># pragma: nocover</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">create_app</span><span class=\"p\">(</span><span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"0.0.0.0\"</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2766208, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1efb87ae7c724b80e22870d612244086", "sha256": "724c55bd74b3e7fa2bc31d16eb8a6e6d866fae9ff3b9d9bc08480466ebc5a5f2"}, "downloads": -1, "filename": "flask_oslolog-0.1.tar.gz", "has_sig": false, "md5_digest": "1efb87ae7c724b80e22870d612244086", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5691, "upload_time": "2017-04-10T13:34:06", "upload_time_iso_8601": "2017-04-10T13:34:06.609369Z", "url": "https://files.pythonhosted.org/packages/a7/62/fec02ce761b548b1289680bb1be1aa0bce2b2c4017d5b31bd6c67c78aef9/flask_oslolog-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1efb87ae7c724b80e22870d612244086", "sha256": "724c55bd74b3e7fa2bc31d16eb8a6e6d866fae9ff3b9d9bc08480466ebc5a5f2"}, "downloads": -1, "filename": "flask_oslolog-0.1.tar.gz", "has_sig": false, "md5_digest": "1efb87ae7c724b80e22870d612244086", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5691, "upload_time": "2017-04-10T13:34:06", "upload_time_iso_8601": "2017-04-10T13:34:06.609369Z", "url": "https://files.pythonhosted.org/packages/a7/62/fec02ce761b548b1289680bb1be1aa0bce2b2c4017d5b31bd6c67c78aef9/flask_oslolog-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:33 2020"}