{"info": {"author": "Carl Meyer", "author_email": "carl@oddbird.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "==============\ndjango-icanhaz\n==============\n\nA templatetag for easier integration of `ICanHaz.js`_ JavaScript templates with\nDjango templates.\n\n.. _ICanHaz.js: http://icanhazjs.com\n\nQuickstart\n==========\n\nDependencies\n------------\n\nTested with `Django`_ 1.3 through trunk, and `Python`_ 2.6 and 2.7. Almost\ncertainly works with older versions of both.\n\n.. _Django: http://www.djangoproject.com/\n.. _Python: http://www.python.org/\n\nInstallation\n------------\n\nInstall from PyPI with ``pip``::\n\n    pip install django-icanhaz\n\nor get the `in-development version`_::\n\n    pip install django-icanhaz==dev\n\n.. _in-development version: https://github.com/carljm/django-icanhaz/tarball/master#egg=django_secure-dev\n\nUsage\n-----\n\n* Add ``\"icanhaz\"`` to your ``INSTALLED_APPS`` setting.\n\n* Set the ``ICANHAZ_DIRS`` setting to a list of full (absolute) path to\n  directories where you will store your ICanHaz templates.\n\n* ``{% load icanhaz %}`` and use ``{% icanhaz \"templatename\" %}`` in your\n  Django templates to safely embed the ICanHaz.js template at\n  ``<ICANHAZ_DIRS-entry>/templatename.html`` into your Django template,\n  automatically wrapped in ``<script id=\"templatename\" type=\"text/html\">``,\n  ready for ``ich.templatename({...})`` in your JavaScript.\n\n``django-icanhaz`` does not bundle `ICanHaz.js`_ or provide any JavaScript\nutilities; it just helps you easily embed the templates in your HTML. Include\n`ICanHaz.js`_ in your project's static assets and use it in your JS as usual.\n\n\nAdvanced usage\n--------------\n\nYou can also bundle ICanHaz templates with Django reusable apps; by default\n``django-icanhaz`` will look for templates in a ``jstemplates`` subdirectory of\neach app in ``INSTALLED_APPS``. The app subdirectory name(s) to check can be\nconfigured via the ``ICANHAZ_APP_DIRNAMES`` setting, which defaults to\n``[\"jstemplates\"]``.\n\nThe finding of templates can be fully controlled via the ``ICANHAZ_FINDERS``\nsetting, which is a list of dotted paths to finder classes. A finder class\nshould be instantiable with no arguments, and have a ``find(name)`` method\nwhich returns the full absolute path to a template file, given a base-name.\n\nBy default, ``ICANHAZ_FINDERS`` contains ``\"icanhaz.finders.FilesystemFinder\"``\n(which searches directories listed in ``ICANHAZ_DIRS``) and\n``\"icanhaz.finders.AppFinder\"`` (which searches subdirectories named in\n``ICANHAZ_APP_DIRNAMES`` of each app in ``INSTALLED_APPS``), in that order --\nthus templates found in ``ICANHAZ_DIRS`` take precedence over templates in\napps.\n\n\nRationale\n---------\n\nThe collision between Django templates' use of ``{{`` and ``}}`` as template\nvariable markers and `ICanHaz.js`_' use of same has spawned a variety of\nsolutions. `One solution`_ simply replaces ``[[`` and ``]]`` with ``{{`` and\n``}}`` inside an ``icanhaz`` template tag; `another`_ makes a valiant attempt\nto reconstruct verbatim text within a chunk of a Django template after it has\nalready been mangled by the Django template tokenizer.\n\nI prefer to keep my JavaScript templates in separate files in a dedicated\ndirectory anyway, to avoid confusion between server-side and client-side\ntemplating. So my contribution to the array of solutions is essentially just an\n\"include\" tag that avoids parsing the included file as a Django template (and\nfor convenience, automatically wraps it in the script tag that `ICanHaz.js`_\nexpects to find it in).\n\nEnjoy!\n\n.. _one solution: https://gist.github.com/975505\n.. _another: https://gist.github.com/629508\n\n\nCHANGES\n=======\n\n0.2.1 (2012.01.09)\n------------------\n\n* Fixed template reading to explicitly decode template file contents using\n  Django's ``FILE_CHARSET`` setting. Thanks Eduard Iskandarov.\n\n* Fixed template-finding failure with non-normalized directories in\n  ``ICANHAZ_DIRS``. Thanks Eduard Iskandarov for report and patch.\n\n\n0.2.0 (2011.06.26)\n------------------\n\n* Made template-finding more flexible: ``ICANHAZ_DIR`` is now ``ICANHAZ_DIRS``\n  (a list); added ``ICANHAZ_FINDERS``, ``ICANHAZ_APP_DIRNAMES``, and finding of\n  templates in installed apps.\n\n\n0.1.0 (2011.06.22)\n------------------\n\n* Initial release.\n\n\n\nTODO\n====", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/carljm/django-icanhaz/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-icanhaz", "package_url": "https://pypi.org/project/django-icanhaz/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-icanhaz/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/carljm/django-icanhaz/"}, "release_url": "https://pypi.org/project/django-icanhaz/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "A Django template tag for embedding ICanHaz.js templates safely.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A templatetag for easier integration of <a href=\"http://icanhazjs.com\" rel=\"nofollow\">ICanHaz.js</a> JavaScript templates with\nDjango templates.</p>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<p>Tested with <a href=\"http://www.djangoproject.com/\" rel=\"nofollow\">Django</a> 1.3 through trunk, and <a href=\"http://www.python.org/\" rel=\"nofollow\">Python</a> 2.6 and 2.7. Almost\ncertainly works with older versions of both.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install from PyPI with <tt>pip</tt>:</p>\n<pre>pip install django-icanhaz\n</pre>\n<p>or get the <a href=\"https://github.com/carljm/django-icanhaz/tarball/master#egg=django_secure-dev\" rel=\"nofollow\">in-development version</a>:</p>\n<pre>pip install django-icanhaz==dev\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<ul>\n<li>Add <tt>\"icanhaz\"</tt> to your <tt>INSTALLED_APPS</tt> setting.</li>\n<li>Set the <tt>ICANHAZ_DIRS</tt> setting to a list of full (absolute) path to\ndirectories where you will store your ICanHaz templates.</li>\n<li><tt>{% load icanhaz %}</tt> and use <tt>{% icanhaz \"templatename\" %}</tt> in your\nDjango templates to safely embed the ICanHaz.js template at\n<tt><span class=\"pre\">&lt;ICANHAZ_DIRS-entry&gt;/templatename.html</span></tt> into your Django template,\nautomatically wrapped in <tt>&lt;script <span class=\"pre\">id=\"templatename\"</span> <span class=\"pre\">type=\"text/html\"&gt;</span></tt>,\nready for <tt><span class=\"pre\">ich.templatename({...})</span></tt> in your JavaScript.</li>\n</ul>\n<p><tt><span class=\"pre\">django-icanhaz</span></tt> does not bundle <a href=\"http://icanhazjs.com\" rel=\"nofollow\">ICanHaz.js</a> or provide any JavaScript\nutilities; it just helps you easily embed the templates in your HTML. Include\n<a href=\"http://icanhazjs.com\" rel=\"nofollow\">ICanHaz.js</a> in your project\u2019s static assets and use it in your JS as usual.</p>\n</div>\n<div id=\"advanced-usage\">\n<h3>Advanced usage</h3>\n<p>You can also bundle ICanHaz templates with Django reusable apps; by default\n<tt><span class=\"pre\">django-icanhaz</span></tt> will look for templates in a <tt>jstemplates</tt> subdirectory of\neach app in <tt>INSTALLED_APPS</tt>. The app subdirectory name(s) to check can be\nconfigured via the <tt>ICANHAZ_APP_DIRNAMES</tt> setting, which defaults to\n<tt>[\"jstemplates\"]</tt>.</p>\n<p>The finding of templates can be fully controlled via the <tt>ICANHAZ_FINDERS</tt>\nsetting, which is a list of dotted paths to finder classes. A finder class\nshould be instantiable with no arguments, and have a <tt>find(name)</tt> method\nwhich returns the full absolute path to a template file, given a base-name.</p>\n<p>By default, <tt>ICANHAZ_FINDERS</tt> contains <tt>\"icanhaz.finders.FilesystemFinder\"</tt>\n(which searches directories listed in <tt>ICANHAZ_DIRS</tt>) and\n<tt>\"icanhaz.finders.AppFinder\"</tt> (which searches subdirectories named in\n<tt>ICANHAZ_APP_DIRNAMES</tt> of each app in <tt>INSTALLED_APPS</tt>), in that order \u2013\nthus templates found in <tt>ICANHAZ_DIRS</tt> take precedence over templates in\napps.</p>\n</div>\n<div id=\"rationale\">\n<h3>Rationale</h3>\n<p>The collision between Django templates\u2019 use of <tt>{{</tt> and <tt>}}</tt> as template\nvariable markers and <a href=\"http://icanhazjs.com\" rel=\"nofollow\">ICanHaz.js</a>\u2019 use of same has spawned a variety of\nsolutions. <a href=\"https://gist.github.com/975505\" rel=\"nofollow\">One solution</a> simply replaces <tt>[[</tt> and <tt>]]</tt> with <tt>{{</tt> and\n<tt>}}</tt> inside an <tt>icanhaz</tt> template tag; <a href=\"https://gist.github.com/629508\" rel=\"nofollow\">another</a> makes a valiant attempt\nto reconstruct verbatim text within a chunk of a Django template after it has\nalready been mangled by the Django template tokenizer.</p>\n<p>I prefer to keep my JavaScript templates in separate files in a dedicated\ndirectory anyway, to avoid confusion between server-side and client-side\ntemplating. So my contribution to the array of solutions is essentially just an\n\u201cinclude\u201d tag that avoids parsing the included file as a Django template (and\nfor convenience, automatically wraps it in the script tag that <a href=\"http://icanhazjs.com\" rel=\"nofollow\">ICanHaz.js</a>\nexpects to find it in).</p>\n<p>Enjoy!</p>\n</div>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<div id=\"id1\">\n<h3>0.2.1 (2012.01.09)</h3>\n<ul>\n<li>Fixed template reading to explicitly decode template file contents using\nDjango\u2019s <tt>FILE_CHARSET</tt> setting. Thanks Eduard Iskandarov.</li>\n<li>Fixed template-finding failure with non-normalized directories in\n<tt>ICANHAZ_DIRS</tt>. Thanks Eduard Iskandarov for report and patch.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2.0 (2011.06.26)</h3>\n<ul>\n<li>Made template-finding more flexible: <tt>ICANHAZ_DIR</tt> is now <tt>ICANHAZ_DIRS</tt>\n(a list); added <tt>ICANHAZ_FINDERS</tt>, <tt>ICANHAZ_APP_DIRNAMES</tt>, and finding of\ntemplates in installed apps.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.0 (2011.06.22)</h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n</div>\n\n          </div>"}, "last_serial": 707262, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "525bc915484bf96c58b511baea6f8424", "sha256": "bea46d55e68a42cc48dbac3639cedb7748fb4a35b84db1c872367b9b8164821c"}, "downloads": -1, "filename": "django-icanhaz-0.1.0.tar.gz", "has_sig": false, "md5_digest": "525bc915484bf96c58b511baea6f8424", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5626, "upload_time": "2011-06-23T02:35:02", "upload_time_iso_8601": "2011-06-23T02:35:02.335581Z", "url": "https://files.pythonhosted.org/packages/2c/b6/047c2c0f70b9c995af7a3a5a51ee4d2973dc4559bd0e13d222acbd9ee651/django-icanhaz-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ee848de3237052b2bdc3d96c259bc9e0", "sha256": "2008c7201ecb9a43895a9a8cf7746d8978eedd56a2c6dedfebd8f67b7c90cd92"}, "downloads": -1, "filename": "django-icanhaz-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ee848de3237052b2bdc3d96c259bc9e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7654, "upload_time": "2011-06-27T03:14:59", "upload_time_iso_8601": "2011-06-27T03:14:59.951871Z", "url": "https://files.pythonhosted.org/packages/58/97/61b27eb2ee9dacda9a059c1e213d2f33a13dd5dce84bb228bd6cdf6efaa4/django-icanhaz-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "13f49eac67418895f4461e57aa4469d4", "sha256": "947de2503c9c03f22db4ebab22664ddba1a9cec67fed482596b348d8f4561536"}, "downloads": -1, "filename": "django-icanhaz-0.2.1.tar.gz", "has_sig": false, "md5_digest": "13f49eac67418895f4461e57aa4469d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7875, "upload_time": "2012-01-09T17:08:05", "upload_time_iso_8601": "2012-01-09T17:08:05.595391Z", "url": "https://files.pythonhosted.org/packages/bc/0f/7d4e08a8e3cf47b5fc48160d91a5ab883381307d4c19819f52ac6e67ed56/django-icanhaz-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "13f49eac67418895f4461e57aa4469d4", "sha256": "947de2503c9c03f22db4ebab22664ddba1a9cec67fed482596b348d8f4561536"}, "downloads": -1, "filename": "django-icanhaz-0.2.1.tar.gz", "has_sig": false, "md5_digest": "13f49eac67418895f4461e57aa4469d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7875, "upload_time": "2012-01-09T17:08:05", "upload_time_iso_8601": "2012-01-09T17:08:05.595391Z", "url": "https://files.pythonhosted.org/packages/bc/0f/7d4e08a8e3cf47b5fc48160d91a5ab883381307d4c19819f52ac6e67ed56/django-icanhaz-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:39 2020"}