{"info": {"author": "Chao Li", "author_email": "lichao19870617@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: Chinese (Simplified)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# easylearn   \nEasylearn is designed for machine learning in resting-state fMRI field.   \n- Our mission is to enable everyone who wants to apply machine learning to their research field to apply machine learning in the simplest way.  \n- Our goal is to develop a graphical interface so that researchers who are not familiar with programming can easily apply machine learning to their fields.  \n\n# Core Dependencies \nThe follows will be automatically install if you use \"pip install -U easylearn\" command    \n\n- sklearn\n- numpy\n- pandas\n- python-dateutil\n- pytz\n- scikit-learn\n- scipy\n- six\n- nibabel\n- imbalanced-learn\n- skrebate\n- matplotlib\n\n# Install  \n```\npip install -U easylearn\n```\n\n# Development   \nAt present, the project is in the development stage  \nWe hope you can join us!\n\n# Supervisor   \n##### Ke Xu\n>kexu@vip.sina.com  \n>The First Affiliated Hospital, China Medical University. \n##### Yong He  \n>yong.he@bnu.edu.cn  \n>1 National Key Laboratory of Cognitive Neuroscience and Learning, Beijing Normal University, Beijing 100875, China  \n>2 Beijing Key Laboratory of Brain Imaging and Connectomics, Beijing Normal University, Beijing 100875, China  \n>3 IDG/McGovern Institute for Brain Research, Beijing Normal University, Beijing 100875, China \n##### Tang Yanqing  \n>yanqingtang@163.com  \n>The First Affiliated Hospital, China Medical University.        \n##### Fei Wang  \n>fei.wang@yale.edu  \n>The First Affiliated Hospital, China Medical University.   \n\n# Maintainer    \n##### Chao Li; \n>lichao19870617@gmail.com   \n>The First Affiliated Hospital, China Medical University.      \n##### Mengshi Dong  \n>dongmengshi1990@163.com  \n>The First Affiliated Hospital, China Medical University.    \n##### Shaoqiang Han\n>867727390@qq.com  \n>The First Affiliated Hospital of ZhengZhou University\n##### Lili Tang\n>lilyseyo@gmail.com  \n>The First Affiliated Hospital, China Medical University.    \n##### Ning Yang  \n>1157663200@qq.com  \n>Guangdong Second Provincial General Hospital  \n##### Peng Zhang\n>1597403028@qq.com  \n>South China Normal University \n##### Weixiang Liu  \n>wxliu@szu.edu.cn  \n>Shenzhen University        \n\n\n# Demo\nThe simplest demo is in the eslearn/examples.  \nBelow is a demo of training a model to classify insomnia patients using weighted functional connectivity strength as features (You can easily use other voxel-wise metrics as features, such as ReHo, ALFF).\nThis demo use svc as classifier, Principal Component Analysis (PCA) as dimension reduction method and Recursive feature elimination (RFE) as feature selection method (inner cross-validation).\nIn each fold, this program will uper-sampling the training dataset to balance the cases with +1 labels and 0 labels.\n\n```\nimport numpy as np\nimport eslearn.machine_learning.classfication.pca_rfe_svc_cv as pca_rfe_svc\n\n# =============================================================================\n# All inputs\npath_patients = r'D:\\WorkStation_2018\\Workstation_Old\\WorkStation_2018-05_MVPA_insomnia_FCS\\Degree\\degree_gray_matter\\Zdegree\\Z_degree_patient\\Weighted'  # All patients' image files, .nii format\npath_HC = r'D:\\WorkStation_2018\\Workstation_Old\\WorkStation_2018-05_MVPA_insomnia_FCS\\Degree\\degree_gray_matter\\Zdegree\\Z_degree_control\\Weighted'  # All HCs' image files, .nii format\npath_mask = r'G:\\Softer_DataProcessing\\spm12\\spm12\\tpm\\Reslice3_TPM_greaterThan0.2.nii'  # Mask file for filter image\npath_out = r'D:\\WorkStation_2018\\Workstation_Old\\WorkStation_2018-05_MVPA_insomnia_FCS\\Degree\\degree_gray_matter\\Zdegree'  # Directory for saving results\ndata_preprocess_method='StandardScaler'\ndata_preprocess_level='group'  # In which level to preprocess data 'subject' or 'group'\nnum_of_fold_outer=5  # How many folds to perform cross validation\nis_dim_reduction=1  # Whether to perform dimension reduction, default is using PCA to reduce the dimension.\ncomponents=0.95   # How many percentages of the cumulatively explained variance to be retained. This is used to select the top principal components.\nstep=0.1  # RFE parameter: percentages or number of features removed each iteration.\nnum_fold_of_inner_rfeCV=5  # RFE parameter:  how many folds to perform inner RFE loop.\nn_jobs=-1  # RFE parameter:  how many jobs (parallel works) to perform inner RFE loop.\nis_showfig_finally=True  # Whether show results figure finally.\nis_showfig_in_each_fold=False  # Whether show results in each fold.\n# =============================================================================\n\nclf = pca_rfe_svc.PcaRfeSvcCV(\n        path_patients=path_patients,\n        path_HC=path_HC,\n        path_mask=path_mask,\n        path_out=path_out,\n        data_preprocess_method=data_preprocess_method,\n        data_preprocess_level=data_preprocess_level,\n        num_of_fold_outer=num_of_fold_outer,  # How many folds to perform cross validation (Default: 5-fold cross validation)\n        is_dim_reduction=is_dim_reduction,  # Default is using PCA to reduce the dimension.\n        components=components, \n        step=step,\n        num_fold_of_inner_rfeCV=num_fold_of_inner_rfeCV,\n        n_jobs=n_jobs,\n        is_showfig_finally=is_showfig_finally,  # Whether show results figure finally.\n        is_showfig_in_each_fold=is_showfig_in_each_fold  # Whether show results in each fold.\n    )\n\nresults = clf.main_function()\nresults = results.__dict__\n\nprint(f\"mean accuracy = {np.mean(results['accuracy'])}\")\nprint(f\"std of accuracy = {np.std(results['accuracy'])}\")\nprint(f\"mean sensitivity = {np.mean(results['sensitivity'])}\")\nprint(f\"std of sensitivity = {np.std(results['sensitivity'])}\")\nprint(f\"mean specificity = {np.mean(results['specificity'])}\")\nprint(f\"std of specificity = {np.std(results['specificity'])}\")\nprint(f\"mean AUC = {np.mean(results['AUC'])}\")\nprint(f\"std of AUC = {np.std(results['AUC'])}\")\n```\n<br> <br />\nWhen the program runs successfully, some results file will be generated under the results folder (path_out), as follows:\n#### <center> Classification performances </center>\n![Classification performances](./img/results.png)  \n<br> <br />\n#### <center>Classification performances (text, each row are results of one fold of the 5-fold cross-validation)</center>\n![wei](./img/perf.png)  \n<br> <br />\n#### <center>Classfication weights (top 1%, BrainNet Viewer) </center>\n![Top classfication weights](./img/wei.jpg) \n<br> <br />\n#### <center>Predicted decision, predicted label and real label</center>\n![Predicted decision, predicted label and real label](./img/dec_label.png)  \n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/easylearn-fmri/", "keywords": "", "license": "MIT License", "maintainer": "Chao Li; Mengshi Dong; Shaoqiang Han; Lili Tang; Ning Yang; Peng Zhang", "maintainer_email": "lichao19870617@gmail.com", "name": "easylearn", "package_url": "https://pypi.org/project/easylearn/", "platform": "all", "project_url": "https://pypi.org/project/easylearn/", "project_urls": {"Homepage": "https://github.com/easylearn-fmri/"}, "release_url": "https://pypi.org/project/easylearn/0.1.12a0/", "requires_dist": ["joblib", "numpy", "pandas", "python-dateutil", "pytz", "scikit-learn", "scipy", "six", "nibabel", "imbalanced-learn", "skrebate", "matplotlib"], "requires_python": ">=3.5", "summary": "This project is designed for machine learning in resting-state fMRI field", "version": "0.1.12a0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>easylearn</h1>\n<p>Easylearn is designed for machine learning in resting-state fMRI field.</p>\n<ul>\n<li>Our mission is to enable everyone who wants to apply machine learning to their research field to apply machine learning in the simplest way.</li>\n<li>Our goal is to develop a graphical interface so that researchers who are not familiar with programming can easily apply machine learning to their fields.</li>\n</ul>\n<h1>Core Dependencies</h1>\n<p>The follows will be automatically install if you use \"pip install -U easylearn\" command</p>\n<ul>\n<li>sklearn</li>\n<li>numpy</li>\n<li>pandas</li>\n<li>python-dateutil</li>\n<li>pytz</li>\n<li>scikit-learn</li>\n<li>scipy</li>\n<li>six</li>\n<li>nibabel</li>\n<li>imbalanced-learn</li>\n<li>skrebate</li>\n<li>matplotlib</li>\n</ul>\n<h1>Install</h1>\n<pre><code>pip install -U easylearn\n</code></pre>\n<h1>Development</h1>\n<p>At present, the project is in the development stage<br>\nWe hope you can join us!</p>\n<h1>Supervisor</h1>\n<h5>Ke Xu</h5>\n<blockquote>\n<p><a href=\"mailto:kexu@vip.sina.com\">kexu@vip.sina.com</a><br>\nThe First Affiliated Hospital, China Medical University.</p>\n</blockquote>\n<h5>Yong He</h5>\n<blockquote>\n<p><a href=\"mailto:yong.he@bnu.edu.cn\">yong.he@bnu.edu.cn</a><br>\n1 National Key Laboratory of Cognitive Neuroscience and Learning, Beijing Normal University, Beijing 100875, China<br>\n2 Beijing Key Laboratory of Brain Imaging and Connectomics, Beijing Normal University, Beijing 100875, China<br>\n3 IDG/McGovern Institute for Brain Research, Beijing Normal University, Beijing 100875, China</p>\n</blockquote>\n<h5>Tang Yanqing</h5>\n<blockquote>\n<p><a href=\"mailto:yanqingtang@163.com\">yanqingtang@163.com</a><br>\nThe First Affiliated Hospital, China Medical University.</p>\n</blockquote>\n<h5>Fei Wang</h5>\n<blockquote>\n<p><a href=\"mailto:fei.wang@yale.edu\">fei.wang@yale.edu</a><br>\nThe First Affiliated Hospital, China Medical University.</p>\n</blockquote>\n<h1>Maintainer</h1>\n<h5>Chao Li;</h5>\n<blockquote>\n<p><a href=\"mailto:lichao19870617@gmail.com\">lichao19870617@gmail.com</a><br>\nThe First Affiliated Hospital, China Medical University.</p>\n</blockquote>\n<h5>Mengshi Dong</h5>\n<blockquote>\n<p><a href=\"mailto:dongmengshi1990@163.com\">dongmengshi1990@163.com</a><br>\nThe First Affiliated Hospital, China Medical University.</p>\n</blockquote>\n<h5>Shaoqiang Han</h5>\n<blockquote>\n<p><a href=\"mailto:867727390@qq.com\">867727390@qq.com</a><br>\nThe First Affiliated Hospital of ZhengZhou University</p>\n</blockquote>\n<h5>Lili Tang</h5>\n<blockquote>\n<p><a href=\"mailto:lilyseyo@gmail.com\">lilyseyo@gmail.com</a><br>\nThe First Affiliated Hospital, China Medical University.</p>\n</blockquote>\n<h5>Ning Yang</h5>\n<blockquote>\n<p><a href=\"mailto:1157663200@qq.com\">1157663200@qq.com</a><br>\nGuangdong Second Provincial General Hospital</p>\n</blockquote>\n<h5>Peng Zhang</h5>\n<blockquote>\n<p><a href=\"mailto:1597403028@qq.com\">1597403028@qq.com</a><br>\nSouth China Normal University</p>\n</blockquote>\n<h5>Weixiang Liu</h5>\n<blockquote>\n<p><a href=\"mailto:wxliu@szu.edu.cn\">wxliu@szu.edu.cn</a><br>\nShenzhen University</p>\n</blockquote>\n<h1>Demo</h1>\n<p>The simplest demo is in the eslearn/examples.<br>\nBelow is a demo of training a model to classify insomnia patients using weighted functional connectivity strength as features (You can easily use other voxel-wise metrics as features, such as ReHo, ALFF).\nThis demo use svc as classifier, Principal Component Analysis (PCA) as dimension reduction method and Recursive feature elimination (RFE) as feature selection method (inner cross-validation).\nIn each fold, this program will uper-sampling the training dataset to balance the cases with +1 labels and 0 labels.</p>\n<pre><code>import numpy as np\nimport eslearn.machine_learning.classfication.pca_rfe_svc_cv as pca_rfe_svc\n\n# =============================================================================\n# All inputs\npath_patients = r'D:\\WorkStation_2018\\Workstation_Old\\WorkStation_2018-05_MVPA_insomnia_FCS\\Degree\\degree_gray_matter\\Zdegree\\Z_degree_patient\\Weighted'  # All patients' image files, .nii format\npath_HC = r'D:\\WorkStation_2018\\Workstation_Old\\WorkStation_2018-05_MVPA_insomnia_FCS\\Degree\\degree_gray_matter\\Zdegree\\Z_degree_control\\Weighted'  # All HCs' image files, .nii format\npath_mask = r'G:\\Softer_DataProcessing\\spm12\\spm12\\tpm\\Reslice3_TPM_greaterThan0.2.nii'  # Mask file for filter image\npath_out = r'D:\\WorkStation_2018\\Workstation_Old\\WorkStation_2018-05_MVPA_insomnia_FCS\\Degree\\degree_gray_matter\\Zdegree'  # Directory for saving results\ndata_preprocess_method='StandardScaler'\ndata_preprocess_level='group'  # In which level to preprocess data 'subject' or 'group'\nnum_of_fold_outer=5  # How many folds to perform cross validation\nis_dim_reduction=1  # Whether to perform dimension reduction, default is using PCA to reduce the dimension.\ncomponents=0.95   # How many percentages of the cumulatively explained variance to be retained. This is used to select the top principal components.\nstep=0.1  # RFE parameter: percentages or number of features removed each iteration.\nnum_fold_of_inner_rfeCV=5  # RFE parameter:  how many folds to perform inner RFE loop.\nn_jobs=-1  # RFE parameter:  how many jobs (parallel works) to perform inner RFE loop.\nis_showfig_finally=True  # Whether show results figure finally.\nis_showfig_in_each_fold=False  # Whether show results in each fold.\n# =============================================================================\n\nclf = pca_rfe_svc.PcaRfeSvcCV(\n        path_patients=path_patients,\n        path_HC=path_HC,\n        path_mask=path_mask,\n        path_out=path_out,\n        data_preprocess_method=data_preprocess_method,\n        data_preprocess_level=data_preprocess_level,\n        num_of_fold_outer=num_of_fold_outer,  # How many folds to perform cross validation (Default: 5-fold cross validation)\n        is_dim_reduction=is_dim_reduction,  # Default is using PCA to reduce the dimension.\n        components=components, \n        step=step,\n        num_fold_of_inner_rfeCV=num_fold_of_inner_rfeCV,\n        n_jobs=n_jobs,\n        is_showfig_finally=is_showfig_finally,  # Whether show results figure finally.\n        is_showfig_in_each_fold=is_showfig_in_each_fold  # Whether show results in each fold.\n    )\n\nresults = clf.main_function()\nresults = results.__dict__\n\nprint(f\"mean accuracy = {np.mean(results['accuracy'])}\")\nprint(f\"std of accuracy = {np.std(results['accuracy'])}\")\nprint(f\"mean sensitivity = {np.mean(results['sensitivity'])}\")\nprint(f\"std of sensitivity = {np.std(results['sensitivity'])}\")\nprint(f\"mean specificity = {np.mean(results['specificity'])}\")\nprint(f\"std of specificity = {np.std(results['specificity'])}\")\nprint(f\"mean AUC = {np.mean(results['AUC'])}\")\nprint(f\"std of AUC = {np.std(results['AUC'])}\")\n</code></pre>\n<p><br> <br>\nWhen the program runs successfully, some results file will be generated under the results folder (path_out), as follows:</p>\n<h4>&lt;center&gt; Classification performances &lt;/center&gt;</h4>\n<p><img alt=\"Classification performances\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/15cc3681089fda1a5bb049a6f76e37f2512a330d/2e2f696d672f726573756c74732e706e67\"><br>\n<br> <br></p>\n<h4>&lt;center&gt;Classification performances (text, each row are results of one fold of the 5-fold cross-validation)&lt;/center&gt;</h4>\n<p><img alt=\"wei\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6b0d3323daec0aeb415d2c6b3a623c221c256f7b/2e2f696d672f706572662e706e67\"><br>\n<br> <br></p>\n<h4>&lt;center&gt;Classfication weights (top 1%, BrainNet Viewer) &lt;/center&gt;</h4>\n<p><img alt=\"Top classfication weights\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/75e91bee99a7aaf63606a37e1d709e202ae7be34/2e2f696d672f7765692e6a7067\">\n<br> <br></p>\n<h4>&lt;center&gt;Predicted decision, predicted label and real label&lt;/center&gt;</h4>\n<p><img alt=\"Predicted decision, predicted label and real label\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94ba3f71e3defad729443d0f9d1a89aa8000603b/2e2f696d672f6465635f6c6162656c2e706e67\"></p>\n\n          </div>"}, "last_serial": 6860356, "releases": {"0.1.10a0": [{"comment_text": "", "digests": {"md5": "a8afafae6c66c41c0e87bb8dac66d14b", "sha256": "0d34cc1ff2c371acd8d330c88e38efa8a841532146f199a90ff5e5a5731c28a0"}, "downloads": -1, "filename": "easylearn-0.1.10a0-py3-none-any.whl", "has_sig": false, "md5_digest": "a8afafae6c66c41c0e87bb8dac66d14b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 211956, "upload_time": "2020-03-03T09:09:54", "upload_time_iso_8601": "2020-03-03T09:09:54.994776Z", "url": "https://files.pythonhosted.org/packages/0b/dd/b376530acb6797e49619a7573f2a6803392831e99ad696c0abce1e58ce6a/easylearn-0.1.10a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49e4b0526cac17a311858a2385482c3f", "sha256": "60768b0656c68c60333ca1b192b79e309c5ca6de716874247d9f76b0c24e2c9b"}, "downloads": -1, "filename": "easylearn-0.1.10a0.tar.gz", "has_sig": false, "md5_digest": "49e4b0526cac17a311858a2385482c3f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 126451, "upload_time": "2020-03-03T09:09:56", "upload_time_iso_8601": "2020-03-03T09:09:56.728819Z", "url": "https://files.pythonhosted.org/packages/05/72/03afb00dcd696166cfe060e1bb0cd8717d01dac4a20d01e2153eaf6286f3/easylearn-0.1.10a0.tar.gz", "yanked": false}], "0.1.11a0": [{"comment_text": "", "digests": {"md5": "fb7e38861464bb75b1db57c72ef5b18a", "sha256": "0a11ad04fa08bc4737b6f589318a24ac43c07bcfdc847d0ea616dcae5f9962f9"}, "downloads": -1, "filename": "easylearn-0.1.11a0-py3-none-any.whl", "has_sig": false, "md5_digest": "fb7e38861464bb75b1db57c72ef5b18a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 232229, "upload_time": "2020-03-22T12:53:31", "upload_time_iso_8601": "2020-03-22T12:53:31.617127Z", "url": "https://files.pythonhosted.org/packages/ff/4e/63858f0fb5d68e8547ea3d4feef012f48793f881aa47d00c27268a71ea17/easylearn-0.1.11a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c361272f4c2fab76cbe8497664b508a", "sha256": "387a394987ebb36b2c1b5f0a16976877134f332a01c7b35165d131e21dc4a00d"}, "downloads": -1, "filename": "easylearn-0.1.11a0.tar.gz", "has_sig": false, "md5_digest": "3c361272f4c2fab76cbe8497664b508a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 139455, "upload_time": "2020-03-22T12:53:33", "upload_time_iso_8601": "2020-03-22T12:53:33.734337Z", "url": "https://files.pythonhosted.org/packages/6a/20/5df9c41e882683b7d5b130a2b14da9fcba015512972d44d10d14043f0e9d/easylearn-0.1.11a0.tar.gz", "yanked": false}], "0.1.12a0": [{"comment_text": "", "digests": {"md5": "8c5150efd27ce61cf8fd0f937b647ed2", "sha256": "5fc6c6f02e2a83e5c433de7009f758da9d170848720888472b9e6611cf551e27"}, "downloads": -1, "filename": "easylearn-0.1.12a0-py3-none-any.whl", "has_sig": false, "md5_digest": "8c5150efd27ce61cf8fd0f937b647ed2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 230251, "upload_time": "2020-03-22T15:12:40", "upload_time_iso_8601": "2020-03-22T15:12:40.378390Z", "url": "https://files.pythonhosted.org/packages/98/ec/6b8fe462880cf4bc3a951d2f8cd91d1314411ea71f863aab713de9b6e34e/easylearn-0.1.12a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a01468eb48ed9677ac43732bd2f28323", "sha256": "04be32bc416728607995c52217f6c11dd336cc25051c8b043b0270b3a4f761e7"}, "downloads": -1, "filename": "easylearn-0.1.12a0.tar.gz", "has_sig": false, "md5_digest": "a01468eb48ed9677ac43732bd2f28323", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 139349, "upload_time": "2020-03-22T15:12:42", "upload_time_iso_8601": "2020-03-22T15:12:42.336302Z", "url": "https://files.pythonhosted.org/packages/c7/73/809c24cf7e6a7f58fad45e3c37ad94111e5e93fd7aff2e05e6e4ef5006d0/easylearn-0.1.12a0.tar.gz", "yanked": false}], "0.1.2.20200229a0": [{"comment_text": "", "digests": {"md5": "fab1cf748ec1014829d32a22f2ed9e90", "sha256": "ae33052f3e213b309b785f4b7a3248f9b3ef9c5aa0a7e0730e178b944c0e0f09"}, "downloads": -1, "filename": "easylearn-0.1.2.20200229a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fab1cf748ec1014829d32a22f2ed9e90", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 243144, "upload_time": "2020-02-29T03:12:38", "upload_time_iso_8601": "2020-02-29T03:12:38.677211Z", "url": "https://files.pythonhosted.org/packages/eb/c4/2eca97ea82c2007122d66eae6e1f9bc436be5f00a8154010c28bec1a62d3/easylearn-0.1.2.20200229a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e098af55376f7aad9cc4e4cb727a92d0", "sha256": "ae4a2c0394fa4a4c41aa49916225670b020087c83944255761d1bf5e69031caf"}, "downloads": -1, "filename": "easylearn-0.1.2.20200229a0.tar.gz", "has_sig": false, "md5_digest": "e098af55376f7aad9cc4e4cb727a92d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 144565, "upload_time": "2020-02-29T03:12:40", "upload_time_iso_8601": "2020-02-29T03:12:40.329586Z", "url": "https://files.pythonhosted.org/packages/70/a6/752daf0bfe705227341b693d944447162647ffe68f298d9c0eccbe3b3331/easylearn-0.1.2.20200229a0.tar.gz", "yanked": false}], "0.1.3.20200229a0": [{"comment_text": "", "digests": {"md5": "02a0ee32aea47c9ae6dbab9f9a6b722a", "sha256": "483ebac1b1e8c34b5e95cdc5b57b4fa15316a1b9a4951505d83234bf66a8e872"}, "downloads": -1, "filename": "easylearn-0.1.3.20200229a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "02a0ee32aea47c9ae6dbab9f9a6b722a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 243062, "upload_time": "2020-02-29T03:26:06", "upload_time_iso_8601": "2020-02-29T03:26:06.535110Z", "url": "https://files.pythonhosted.org/packages/35/81/de454feb36f65b1f5996f85d4a66849dfc862e05e9be913d8f65741283d0/easylearn-0.1.3.20200229a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b084d6be80d558a6dd4ccf89e4301e46", "sha256": "38d84b637076497dba7850c642580a78be5987af7762e4357fa1f6fcb707de9d"}, "downloads": -1, "filename": "easylearn-0.1.3.20200229a0.tar.gz", "has_sig": false, "md5_digest": "b084d6be80d558a6dd4ccf89e4301e46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 144391, "upload_time": "2020-02-29T03:26:16", "upload_time_iso_8601": "2020-02-29T03:26:16.370514Z", "url": "https://files.pythonhosted.org/packages/d2/d7/c6b289bd39a48efd9cd77bdc3e00c73aa35629a67fb6fd09aa4d61666dde/easylearn-0.1.3.20200229a0.tar.gz", "yanked": false}], "0.1.4a0": [{"comment_text": "", "digests": {"md5": "79d9b94fd67d3d9fd5f61454b83e7429", "sha256": "80b0d9662276017d7c840da91433d87591bb00324f7df857caf299ce34eb5413"}, "downloads": -1, "filename": "easylearn-0.1.4a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "79d9b94fd67d3d9fd5f61454b83e7429", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 241639, "upload_time": "2020-02-29T05:08:47", "upload_time_iso_8601": "2020-02-29T05:08:47.786075Z", "url": "https://files.pythonhosted.org/packages/28/c1/cc775cd82e45577e4d58b66b91d2d3630a99690abe1bad96bcf05ad8eeb9/easylearn-0.1.4a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7fcb1d5d2a72aefe2e3a908ba36004b3", "sha256": "25255043796693dc83e8aef803f5e5a8f826f4b10313af0aee593dec5dcc5867"}, "downloads": -1, "filename": "easylearn-0.1.4a0.tar.gz", "has_sig": false, "md5_digest": "7fcb1d5d2a72aefe2e3a908ba36004b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 142438, "upload_time": "2020-02-29T05:08:50", "upload_time_iso_8601": "2020-02-29T05:08:50.676087Z", "url": "https://files.pythonhosted.org/packages/70/c9/cab916efca37fd6a80e29d28d25b36e36c321cf0efe59da478c575dda8f0/easylearn-0.1.4a0.tar.gz", "yanked": false}], "0.1.5a0": [{"comment_text": "", "digests": {"md5": "8bab96cc9151c20e684ae864f1251683", "sha256": "90172d73338e5c548a3f4c735641607eb5fc494a8264b04dd6a7eec31a8f684e"}, "downloads": -1, "filename": "easylearn-0.1.5a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8bab96cc9151c20e684ae864f1251683", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 241428, "upload_time": "2020-02-29T08:48:10", "upload_time_iso_8601": "2020-02-29T08:48:10.306297Z", "url": "https://files.pythonhosted.org/packages/33/21/26544259b7859cce0fafd1dd2d9f35d1320c1c217e30f08534a158d72f22/easylearn-0.1.5a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc6a7d6d9cae54f2c563b79950a0900c", "sha256": "9832bf3f2c8ed56e02b81adcfa3358d2348fccead7576d358aa3e4cb250cf0c5"}, "downloads": -1, "filename": "easylearn-0.1.5a0.tar.gz", "has_sig": false, "md5_digest": "dc6a7d6d9cae54f2c563b79950a0900c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 142897, "upload_time": "2020-02-29T08:48:37", "upload_time_iso_8601": "2020-02-29T08:48:37.531037Z", "url": "https://files.pythonhosted.org/packages/0c/e5/edf6d575c18066a5dc086f2d4f5844c26e1b62026dfcd7601eeb68c70a79/easylearn-0.1.5a0.tar.gz", "yanked": false}], "0.1.6a0": [{"comment_text": "", "digests": {"md5": "d61ca3ad94d144f4e163cae3b69b9224", "sha256": "d88e0b7dc5cd7edd1f87cb9c35314baea460957ccd3100c02ca0ec977de2f064"}, "downloads": -1, "filename": "easylearn-0.1.6a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d61ca3ad94d144f4e163cae3b69b9224", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 241428, "upload_time": "2020-02-29T09:50:11", "upload_time_iso_8601": "2020-02-29T09:50:11.032703Z", "url": "https://files.pythonhosted.org/packages/29/b9/e2a715c7f248202ecc0b410f7132932d85d73bd045622810111e1279ba79/easylearn-0.1.6a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f26759a57d8ecc37015cc415b94f5fc", "sha256": "4db2521ee92d130b4833fd9cc0ef8c66dfa18892796bfbb2f51ce1d4a25145ca"}, "downloads": -1, "filename": "easylearn-0.1.6a0.tar.gz", "has_sig": false, "md5_digest": "0f26759a57d8ecc37015cc415b94f5fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 142913, "upload_time": "2020-02-29T09:50:13", "upload_time_iso_8601": "2020-02-29T09:50:13.094899Z", "url": "https://files.pythonhosted.org/packages/fd/12/ac58e412fd75a71d2fc052829dd02bec2b7e9717175207c0cc000a00c2ed/easylearn-0.1.6a0.tar.gz", "yanked": false}], "0.1.7a0": [{"comment_text": "", "digests": {"md5": "7cd15248d29289bcbbf57d25fbcd4b57", "sha256": "5bcae34da4c1c89f63f7f361aa978bdd6d393f3d7c5a6d3265ac9c778a573653"}, "downloads": -1, "filename": "easylearn-0.1.7a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7cd15248d29289bcbbf57d25fbcd4b57", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 203180, "upload_time": "2020-02-29T13:15:51", "upload_time_iso_8601": "2020-02-29T13:15:51.730781Z", "url": "https://files.pythonhosted.org/packages/ae/73/5e6531309e515260bee31d0c9d7a4fb790acfba539dcf5d9856d65172bb0/easylearn-0.1.7a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef6e1706f3bbba16c43143fd8d8736dd", "sha256": "1e86626574f014ae9ebdb5f783a6fa5e300dc97725d84f3faa0241bd04d3d095"}, "downloads": -1, "filename": "easylearn-0.1.7a0.tar.gz", "has_sig": false, "md5_digest": "ef6e1706f3bbba16c43143fd8d8736dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 123129, "upload_time": "2020-02-29T13:15:59", "upload_time_iso_8601": "2020-02-29T13:15:59.896486Z", "url": "https://files.pythonhosted.org/packages/a7/f9/0936f77447b4bd0477f48338d47afe73ef1b9c63d3df87bd759bc421ec53/easylearn-0.1.7a0.tar.gz", "yanked": false}], "0.1.8a0": [{"comment_text": "", "digests": {"md5": "58874d7f9d43eaee06ef1a0b80cff0fc", "sha256": "26a78d1f6f13727c2c7db44797b5ee7fffb1c9af4181344ee78bc98e203c82a1"}, "downloads": -1, "filename": "easylearn-0.1.8a0-py3-none-any.whl", "has_sig": false, "md5_digest": "58874d7f9d43eaee06ef1a0b80cff0fc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 203535, "upload_time": "2020-03-02T03:34:20", "upload_time_iso_8601": "2020-03-02T03:34:20.445455Z", "url": "https://files.pythonhosted.org/packages/01/29/06ba5720b66f79d5cdf7d7df14356078ed4f0b594ae978b3fd10e97b6d6f/easylearn-0.1.8a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4a50a6e8c5f48afc9fd5db312548912", "sha256": "c022b253768cd07fa5763a1a563f5a92813b85eba83950772f9700162ab6ae22"}, "downloads": -1, "filename": "easylearn-0.1.8a0.tar.gz", "has_sig": false, "md5_digest": "c4a50a6e8c5f48afc9fd5db312548912", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 123748, "upload_time": "2020-03-02T03:34:22", "upload_time_iso_8601": "2020-03-02T03:34:22.235478Z", "url": "https://files.pythonhosted.org/packages/17/0d/0152a0a67e6528da44a47808352b3e589800db7b70589e5662ddb194cf56/easylearn-0.1.8a0.tar.gz", "yanked": false}], "0.1.9a0": [{"comment_text": "", "digests": {"md5": "cfd2cc22a323011ec505f344ae5ac694", "sha256": "fb621cd533bc77db80a8c3459969ea1a44169266f675f453dc0fc3c097942044"}, "downloads": -1, "filename": "easylearn-0.1.9a0-py3-none-any.whl", "has_sig": false, "md5_digest": "cfd2cc22a323011ec505f344ae5ac694", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 211877, "upload_time": "2020-03-02T10:02:14", "upload_time_iso_8601": "2020-03-02T10:02:14.444434Z", "url": "https://files.pythonhosted.org/packages/b5/c5/c210dbd043ba69d10d0781fe288b04822e3f91f422b39da650bb99ead66d/easylearn-0.1.9a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f29e6694f4c5b064fb1b666def7def0", "sha256": "e77b3c9ffb8d036a65aad2f5cd11b4127185b488dde22e06ab009ea1a6b9dcfc"}, "downloads": -1, "filename": "easylearn-0.1.9a0.tar.gz", "has_sig": false, "md5_digest": "4f29e6694f4c5b064fb1b666def7def0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 126252, "upload_time": "2020-03-02T10:02:30", "upload_time_iso_8601": "2020-03-02T10:02:30.156027Z", "url": "https://files.pythonhosted.org/packages/db/27/a8456082467230d5c33c8e64a1496567f3d0303c52ffc904c68c3b959453/easylearn-0.1.9a0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8c5150efd27ce61cf8fd0f937b647ed2", "sha256": "5fc6c6f02e2a83e5c433de7009f758da9d170848720888472b9e6611cf551e27"}, "downloads": -1, "filename": "easylearn-0.1.12a0-py3-none-any.whl", "has_sig": false, "md5_digest": "8c5150efd27ce61cf8fd0f937b647ed2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 230251, "upload_time": "2020-03-22T15:12:40", "upload_time_iso_8601": "2020-03-22T15:12:40.378390Z", "url": "https://files.pythonhosted.org/packages/98/ec/6b8fe462880cf4bc3a951d2f8cd91d1314411ea71f863aab713de9b6e34e/easylearn-0.1.12a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a01468eb48ed9677ac43732bd2f28323", "sha256": "04be32bc416728607995c52217f6c11dd336cc25051c8b043b0270b3a4f761e7"}, "downloads": -1, "filename": "easylearn-0.1.12a0.tar.gz", "has_sig": false, "md5_digest": "a01468eb48ed9677ac43732bd2f28323", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 139349, "upload_time": "2020-03-22T15:12:42", "upload_time_iso_8601": "2020-03-22T15:12:42.336302Z", "url": "https://files.pythonhosted.org/packages/c7/73/809c24cf7e6a7f58fad45e3c37ad94111e5e93fd7aff2e05e6e4ef5006d0/easylearn-0.1.12a0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:20 2020"}