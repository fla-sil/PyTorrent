{"info": {"author": "Jonathan J. Helmus", "author_email": "jjhelmus@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Atmospheric Science"], "description": "arm_archive.py is a Python module for accessing data from the\n`ARM archive <http://www.archive.arm.gov>`_.\n\nRequirements\n------------\n\n* Python 2.7, 3.3, 3.4.\n* `Suds <https://pypi.python.org/pypi/suds>`_ with Python 2.7.\n* `Suds-jurko <https://pypi.python.org/pypi/suds-jurko>`_ with Python 3.3/3.4.\n\nInstall\n-------\n\nTo install using pip use::\n\n    pip install arm_archive\n\nTo install from source in your home directory, use::\n    \n    python setup.py install --user\n\nTo install for all users on Unix/Linux::\n\n    python setup.py install\n\nUse\n---\nThe functions in the module can be used in Python after importing the module.\n\nThe module can also be used from the command line using::\n\n    python -m arm_archive\n\nThis can be aliased in bash using::\n\n    alias apu='python -m arm_archive'\n\n\nCommand line examples\n---------------------\n\nThese examples assume that the above alias has been created so that\n'python -m arm_archive' can be executed using 'apu'. Addition help for each\ncommand can be obtained using 'apu command -h', for example 'apu list -h'.\n\nList available datastreams which match a regular expression::\n\n    $ apu datastreams sgpceil\n    sgpceilB1.b1\n    sgpceilB4.b1\n    sgpceilB5.b1\n    sgpceilB6.b1\n    sgpceilC1.b1\n    sgpceilpblhtC1.a0\n\nList available files for a specific time period::\n\n    $ apu list sgpceilC1.b1 20141001 20141005\n    sgpceilC1.b1.20141001.000010.nc\n    sgpceilC1.b1.20141002.000008.nc\n    sgpceilC1.b1.20141003.000004.nc\n    sgpceilC1.b1.20141004.000002.nc\n    sgpceilC1.b1.20141005.000000.nc\n\nLeaving off the end date will find file for only a single day::\n\n    $ apu list sgpceilC1.b1 20141015\n    sgpceilC1.b1.20141015.000009.nc\n\nOrdering data for a specific datastream and time period::\n\n    $ apu order -d sgpceilC1.b1 20141001 20141005 username\n    Success 5 file(s) ordered, order_id: 123456\n\nOrdering data by supplying a list of filenames::\n\n    $ apu order username sgpceilC1.b1.20141015.000009.nc\n    Success 1 file(s) ordered, order_id: 123456\n\nCheck that status of an order::\n\n    $ apu status 123456\n    processing\n\nList files in a complete order::\n\n    $ apu files username 123456\n    AAA.files_not_found\n    sgpceilC1.b1.20141005.000000.nc\n    sgpceilC1.b1.20141015.000009.nc\n\nDownload file from a complete order to the current directory::\n\n    $ apu download username 168977\n    Retrieving: AAA.files_not_found\n    Retrieving: sgpceilC1.b1.20141005.000000.nc\n    Retrieving: sgpceilC1.b1.20141015.000009.nc\n\nDownload a single file from a complete order::\n\n    $ apu download username 168977 sgpceilC1.b1.20141005.000000.nc\n    Retrieving: sgpceilC1.b1.20141005.000000.nc\n\nCanceling an order::\n\n    $ apu cancel username 123456\n    True\n\nList all orders with some files ready to download for a given user::\n\n    $ apu ready username\n    123456\n    123457", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jjhelmus/arm_archive", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "arm_archive", "package_url": "https://pypi.org/project/arm_archive/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/arm_archive/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/jjhelmus/arm_archive"}, "release_url": "https://pypi.org/project/arm_archive/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "A module for accessing data from the ARM Archive", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>arm_archive.py is a Python module for accessing data from the\n<a href=\"http://www.archive.arm.gov\" rel=\"nofollow\">ARM archive</a>.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 2.7, 3.3, 3.4.</li>\n<li><a href=\"https://pypi.python.org/pypi/suds\" rel=\"nofollow\">Suds</a> with Python 2.7.</li>\n<li><a href=\"https://pypi.python.org/pypi/suds-jurko\" rel=\"nofollow\">Suds-jurko</a> with Python 3.3/3.4.</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>To install using pip use:</p>\n<pre>pip install arm_archive\n</pre>\n<p>To install from source in your home directory, use:</p>\n<pre>python setup.py install --user\n</pre>\n<p>To install for all users on Unix/Linux:</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"use\">\n<h2>Use</h2>\n<p>The functions in the module can be used in Python after importing the module.</p>\n<p>The module can also be used from the command line using:</p>\n<pre>python -m arm_archive\n</pre>\n<p>This can be aliased in bash using:</p>\n<pre>alias apu='python -m arm_archive'\n</pre>\n</div>\n<div id=\"command-line-examples\">\n<h2>Command line examples</h2>\n<p>These examples assume that the above alias has been created so that\n\u2018python -m arm_archive\u2019 can be executed using \u2018apu\u2019. Addition help for each\ncommand can be obtained using \u2018apu command -h\u2019, for example \u2018apu list -h\u2019.</p>\n<p>List available datastreams which match a regular expression:</p>\n<pre>$ apu datastreams sgpceil\nsgpceilB1.b1\nsgpceilB4.b1\nsgpceilB5.b1\nsgpceilB6.b1\nsgpceilC1.b1\nsgpceilpblhtC1.a0\n</pre>\n<p>List available files for a specific time period:</p>\n<pre>$ apu list sgpceilC1.b1 20141001 20141005\nsgpceilC1.b1.20141001.000010.nc\nsgpceilC1.b1.20141002.000008.nc\nsgpceilC1.b1.20141003.000004.nc\nsgpceilC1.b1.20141004.000002.nc\nsgpceilC1.b1.20141005.000000.nc\n</pre>\n<p>Leaving off the end date will find file for only a single day:</p>\n<pre>$ apu list sgpceilC1.b1 20141015\nsgpceilC1.b1.20141015.000009.nc\n</pre>\n<p>Ordering data for a specific datastream and time period:</p>\n<pre>$ apu order -d sgpceilC1.b1 20141001 20141005 username\nSuccess 5 file(s) ordered, order_id: 123456\n</pre>\n<p>Ordering data by supplying a list of filenames:</p>\n<pre>$ apu order username sgpceilC1.b1.20141015.000009.nc\nSuccess 1 file(s) ordered, order_id: 123456\n</pre>\n<p>Check that status of an order:</p>\n<pre>$ apu status 123456\nprocessing\n</pre>\n<p>List files in a complete order:</p>\n<pre>$ apu files username 123456\nAAA.files_not_found\nsgpceilC1.b1.20141005.000000.nc\nsgpceilC1.b1.20141015.000009.nc\n</pre>\n<p>Download file from a complete order to the current directory:</p>\n<pre>$ apu download username 168977\nRetrieving: AAA.files_not_found\nRetrieving: sgpceilC1.b1.20141005.000000.nc\nRetrieving: sgpceilC1.b1.20141015.000009.nc\n</pre>\n<p>Download a single file from a complete order:</p>\n<pre>$ apu download username 168977 sgpceilC1.b1.20141005.000000.nc\nRetrieving: sgpceilC1.b1.20141005.000000.nc\n</pre>\n<p>Canceling an order:</p>\n<pre>$ apu cancel username 123456\nTrue\n</pre>\n<p>List all orders with some files ready to download for a given user:</p>\n<pre>$ apu ready username\n123456\n123457\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1608335, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "41ce5749bd8b00ad5065eca3e81292e1", "sha256": "60a67dda6248007b84e9e92f1faa6a0d7db32f05b5007657513e89bdab34a055"}, "downloads": -1, "filename": "arm_archive-0.1.0.tar.gz", "has_sig": false, "md5_digest": "41ce5749bd8b00ad5065eca3e81292e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6348, "upload_time": "2015-06-26T18:52:56", "upload_time_iso_8601": "2015-06-26T18:52:56.710467Z", "url": "https://files.pythonhosted.org/packages/87/53/73c29f8d41c70b3b4e56e291369ade0f35278844bf66f93e51c146549638/arm_archive-0.1.0.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "c250e6ac514ce53eacb8040400e50a3f", "sha256": "b14717214a6bbfe0414d4397c6b123a56501b30f43ec16f56050ac62d91fa7df"}, "downloads": -1, "filename": "arm_archive-0.1.0.zip", "has_sig": false, "md5_digest": "c250e6ac514ce53eacb8040400e50a3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7781, "upload_time": "2015-06-26T18:52:59", "upload_time_iso_8601": "2015-06-26T18:52:59.914459Z", "url": "https://files.pythonhosted.org/packages/79/e7/7107cb6e3e80e5e71f9f347dba21965d50837877a8f5eb5cd3dd1626febe/arm_archive-0.1.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "41ce5749bd8b00ad5065eca3e81292e1", "sha256": "60a67dda6248007b84e9e92f1faa6a0d7db32f05b5007657513e89bdab34a055"}, "downloads": -1, "filename": "arm_archive-0.1.0.tar.gz", "has_sig": false, "md5_digest": "41ce5749bd8b00ad5065eca3e81292e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6348, "upload_time": "2015-06-26T18:52:56", "upload_time_iso_8601": "2015-06-26T18:52:56.710467Z", "url": "https://files.pythonhosted.org/packages/87/53/73c29f8d41c70b3b4e56e291369ade0f35278844bf66f93e51c146549638/arm_archive-0.1.0.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "c250e6ac514ce53eacb8040400e50a3f", "sha256": "b14717214a6bbfe0414d4397c6b123a56501b30f43ec16f56050ac62d91fa7df"}, "downloads": -1, "filename": "arm_archive-0.1.0.zip", "has_sig": false, "md5_digest": "c250e6ac514ce53eacb8040400e50a3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7781, "upload_time": "2015-06-26T18:52:59", "upload_time_iso_8601": "2015-06-26T18:52:59.914459Z", "url": "https://files.pythonhosted.org/packages/79/e7/7107cb6e3e80e5e71f9f347dba21965d50837877a8f5eb5cd3dd1626febe/arm_archive-0.1.0.zip", "yanked": false}], "timestamp": "Thu May  7 18:17:13 2020"}