{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "xarray-simlab: xarray extension for computer model simulations\n==============================================================\n\n|Build Status| |Coverage| |Doc Status| |Zenodo|\n\nxarray-simlab is a Python library that provides both a generic\nframework for building computational models in a modular fashion and a\nxarray_ extension for setting and running simulations using the\nxarray's ``Dataset`` structure. It is designed for fast, interactive\nand exploratory modeling.\n\nxarray-simlab is well integrated with other libraries of the PyData\necosystem such as `dask <https://docs.dask.org>`_ and `zarr\n<https://zarr.readthedocs.io>`_.\n\n.. _xarray: http://xarray.pydata.org\n.. |Build Status| image:: https://github.com/benbovy/xarray-simlab/workflows/test/badge.svg?branch=master\n   :target: https://github.com/benbovy/xarray-simlab/actions?workflow=test\n   :alt: Build Status\n.. |Coverage| image:: https://codecov.io/gh/benbovy/xarray-simlab/branch/master/graphs/badge.svg?branch=master\n   :target: https://codecov.io/github/benbovy/xarray-simlab?branch=master\n   :alt: Coverage Status\n.. |Doc Status| image:: http://readthedocs.org/projects/xarray-simlab/badge/?version=latest\n   :target: http://xarray-simlab.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n.. |Zenodo| image:: https://zenodo.org/badge/93938479.svg\n   :target: https://zenodo.org/badge/latestdoi/93938479\n   :alt: Citation\n\nIn a nutshell\n-------------\n\nThe Conway's Game of Life example shown below is adapted from this\n`blog post <https://jakevdp.github.io/blog/2013/08/07/conways-game-of-life/>`_\nby Jake VanderPlas.\n\n1. Create new model components by writing compact Python classes,\n   i.e., very much like dataclasses_:\n\n.. code-block:: python\n\n    import numpy as np\n    import xsimlab as xs\n\n    @xs.process\n    class GameOfLife:\n        world = xs.variable(dims=('x', 'y'), intent='inout')\n\n        def run_step(self):\n            nbrs_count = sum(\n                np.roll(np.roll(self.world, i, 0), j, 1)\n                for i in (-1, 0, 1) for j in (-1, 0, 1)\n                if (i != 0 or j != 0)\n            )\n            self._world_next = (nbrs_count == 3) | (self.world & (nbrs_count == 2))\n\n        def finalize_step(self):\n            self.world[:] = self._world_next\n\n\n    @xs.process\n    class Glider:\n        pos = xs.variable(dims='point_xy', description='glider position')\n        world = xs.foreign(GameOfLife, 'world', intent='out')\n\n        def initialize(self):\n            x, y = self.pos\n\n            kernel = [[1, 0, 0],\n                      [0, 1, 1],\n                      [1, 1, 0]]\n\n            self.world = np.zeros((10, 10), dtype=bool)\n            self.world[x:x+3, y:y+3] = kernel\n\n2. Create a new model just by providing a dictionary of model components:\n\n.. code-block:: python\n\n    model = xs.Model({'gol': GameOfLife,\n                      'init': Glider})\n\n3. Create an input ``xarray.Dataset``, run the model and get an output\n   ``xarray.Dataset``:\n\n.. code-block:: python\n\n    input_dataset = xs.create_setup(\n        model=model,\n        clocks={'step': np.arange(9)},\n        input_vars={'init__pos': ('point_xy', [4, 5])},\n        output_vars={'gol__world': 'step'}\n    )\n\n    output_dataset = input_dataset.xsimlab.run(model=model)\n\n.. code-block:: python\n\n    >>> output_dataset\n    <xarray.Dataset>\n    Dimensions:     (point_xy: 2, step: 9, x: 10, y: 10)\n    Coordinates:\n      * step        (step) int64 0 1 2 3 4 5 6 7 8\n    Dimensions without coordinates: point_xy, x, y\n    Data variables:\n        init__pos   (point_xy) int64 4 5\n        gol__world  (step, x, y) bool False False False False ... False False False\n\n4. Perform model setup, pre-processing, run, post-processing and\n   visualization in a functional style, using method chaining:\n\n.. code-block:: python\n\n    import matplotlib.pyplot as plt\n\n    with model:\n        (input_dataset\n         .xsimlab.update_vars(\n             input_vars={'init__pos': ('point_xy', [2, 2])}\n         )\n         .xsimlab.run()\n         .gol__world.plot.imshow(\n             col='step', col_wrap=3, figsize=(5, 5),\n             xticks=[], yticks=[],\n             add_colorbar=False, cmap=plt.cm.binary)\n        )\n\n.. image:: doc/_static/gol.png\n   :width: 400px\n\n.. _dataclasses: https://docs.python.org/3/library/dataclasses.html\n\nDocumentation\n-------------\n\nDocumentation is hosted on ReadTheDocs:\nhttp://xarray-simlab.readthedocs.io\n\nLicense\n-------\n\n3-clause (\"Modified\" or \"New\") BSD license,\nsee `License file <https://github.com/benbovy/xarray-simlab/blob/master/LICENSE>`__.\n\nxarray-simlab uses short parts of the code of the xarray_, pandas_ and\ndask_ libraries. Their licenses are reproduced in the \"licenses\"\ndirectory.\n\n.. _pandas: http://pandas.pydata.org/\n\nAcknowledgment\n--------------\n\nThis project is supported by the `Earth Surface Process Modelling`_\ngroup of the GFZ Helmholtz Centre Potsdam.\n\n.. _`Earth Surface Process Modelling`: http://www.gfz-potsdam.de/en/section/earth-surface-process-modelling/\n\nCitation\n--------\n\nIf you use xarray-simlab in a scientific publication, we would\nappreciate a `citation`_.\n\n.. _`citation`: http://xarray-simlab.readthedocs.io/en/latest/citation.html\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/benbovy/xarray-simlab", "keywords": "python xarray modelling simulation framework", "license": "BSD-Clause3", "maintainer": "Benoit Bovy", "maintainer_email": "benbovy@gmail.com", "name": "xarray-simlab", "package_url": "https://pypi.org/project/xarray-simlab/", "platform": "", "project_url": "https://pypi.org/project/xarray-simlab/", "project_urls": {"Homepage": "http://github.com/benbovy/xarray-simlab"}, "release_url": "https://pypi.org/project/xarray-simlab/0.4.1/", "requires_dist": ["attrs (>=18.1.0)", "dask", "numpy", "xarray (>=0.10.0)", "zarr (>=2.3.0)"], "requires_python": ">=3.5", "summary": "generic framework and xarray extension for computer model simulations", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/benbovy/xarray-simlab/actions?workflow=test\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6287bec008806094f6d183e52d6aea2d61090ec/68747470733a2f2f6769746875622e636f6d2f62656e626f76792f7861727261792d73696d6c61622f776f726b666c6f77732f746573742f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/github/benbovy/xarray-simlab?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e348fdd4ceb612dade6b902670f50bdf9d6ac2c6/68747470733a2f2f636f6465636f762e696f2f67682f62656e626f76792f7861727261792d73696d6c61622f6272616e63682f6d61737465722f6772617068732f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"http://xarray-simlab.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d17eaa66316510e5d2590ee95028084b2b1216c6/687474703a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7861727261792d73696d6c61622f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://zenodo.org/badge/latestdoi/93938479\" rel=\"nofollow\"><img alt=\"Citation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/338bd3d5b7f82185f65d52a88c1a2def663b2c7d/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f39333933383437392e737667\"></a></p>\n<p>xarray-simlab is a Python library that provides both a generic\nframework for building computational models in a modular fashion and a\n<a href=\"http://xarray.pydata.org\" rel=\"nofollow\">xarray</a> extension for setting and running simulations using the\nxarray\u2019s <tt>Dataset</tt> structure. It is designed for fast, interactive\nand exploratory modeling.</p>\n<p>xarray-simlab is well integrated with other libraries of the PyData\necosystem such as <a href=\"https://docs.dask.org\" rel=\"nofollow\">dask</a> and <a href=\"https://zarr.readthedocs.io\" rel=\"nofollow\">zarr</a>.</p>\n<div id=\"in-a-nutshell\">\n<h2>In a nutshell</h2>\n<p>The Conway\u2019s Game of Life example shown below is adapted from this\n<a href=\"https://jakevdp.github.io/blog/2013/08/07/conways-game-of-life/\" rel=\"nofollow\">blog post</a>\nby Jake VanderPlas.</p>\n<ol>\n<li>Create new model components by writing compact Python classes,\ni.e., very much like <a href=\"https://docs.python.org/3/library/dataclasses.html\" rel=\"nofollow\">dataclasses</a>:</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">xsimlab</span> <span class=\"k\">as</span> <span class=\"nn\">xs</span>\n\n<span class=\"nd\">@xs</span><span class=\"o\">.</span><span class=\"n\">process</span>\n<span class=\"k\">class</span> <span class=\"nc\">GameOfLife</span><span class=\"p\">:</span>\n    <span class=\"n\">world</span> <span class=\"o\">=</span> <span class=\"n\">xs</span><span class=\"o\">.</span><span class=\"n\">variable</span><span class=\"p\">(</span><span class=\"n\">dims</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'x'</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">),</span> <span class=\"n\">intent</span><span class=\"o\">=</span><span class=\"s1\">'inout'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">run_step</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">nbrs_count</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span>\n            <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">roll</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">roll</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">world</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span> <span class=\"ow\">or</span> <span class=\"n\">j</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_world_next</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">nbrs_count</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">world</span> <span class=\"o\">&amp;</span> <span class=\"p\">(</span><span class=\"n\">nbrs_count</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">finalize_step</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">world</span><span class=\"p\">[:]</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_world_next</span>\n\n\n<span class=\"nd\">@xs</span><span class=\"o\">.</span><span class=\"n\">process</span>\n<span class=\"k\">class</span> <span class=\"nc\">Glider</span><span class=\"p\">:</span>\n    <span class=\"n\">pos</span> <span class=\"o\">=</span> <span class=\"n\">xs</span><span class=\"o\">.</span><span class=\"n\">variable</span><span class=\"p\">(</span><span class=\"n\">dims</span><span class=\"o\">=</span><span class=\"s1\">'point_xy'</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'glider position'</span><span class=\"p\">)</span>\n    <span class=\"n\">world</span> <span class=\"o\">=</span> <span class=\"n\">xs</span><span class=\"o\">.</span><span class=\"n\">foreign</span><span class=\"p\">(</span><span class=\"n\">GameOfLife</span><span class=\"p\">,</span> <span class=\"s1\">'world'</span><span class=\"p\">,</span> <span class=\"n\">intent</span><span class=\"o\">=</span><span class=\"s1\">'out'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">initialize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pos</span>\n\n        <span class=\"n\">kernel</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span>\n                  <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n                  <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]]</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">world</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">bool</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">world</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">:</span><span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span><span class=\"n\">y</span><span class=\"o\">+</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">kernel</span>\n</pre>\n<ol>\n<li>Create a new model just by providing a dictionary of model components:</li>\n</ol>\n<pre><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">xs</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">({</span><span class=\"s1\">'gol'</span><span class=\"p\">:</span> <span class=\"n\">GameOfLife</span><span class=\"p\">,</span>\n                  <span class=\"s1\">'init'</span><span class=\"p\">:</span> <span class=\"n\">Glider</span><span class=\"p\">})</span>\n</pre>\n<ol>\n<li>Create an input <tt>xarray.Dataset</tt>, run the model and get an output\n<tt>xarray.Dataset</tt>:</li>\n</ol>\n<pre><span class=\"n\">input_dataset</span> <span class=\"o\">=</span> <span class=\"n\">xs</span><span class=\"o\">.</span><span class=\"n\">create_setup</span><span class=\"p\">(</span>\n    <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">,</span>\n    <span class=\"n\">clocks</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'step'</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">)},</span>\n    <span class=\"n\">input_vars</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'init__pos'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s1\">'point_xy'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">])},</span>\n    <span class=\"n\">output_vars</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'gol__world'</span><span class=\"p\">:</span> <span class=\"s1\">'step'</span><span class=\"p\">}</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">output_dataset</span> <span class=\"o\">=</span> <span class=\"n\">input_dataset</span><span class=\"o\">.</span><span class=\"n\">xsimlab</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">output_dataset</span>\n<span class=\"o\">&lt;</span><span class=\"n\">xarray</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"o\">&gt;</span>\n<span class=\"n\">Dimensions</span><span class=\"p\">:</span>     <span class=\"p\">(</span><span class=\"n\">point_xy</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">:</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">Coordinates</span><span class=\"p\">:</span>\n  <span class=\"o\">*</span> <span class=\"n\">step</span>        <span class=\"p\">(</span><span class=\"n\">step</span><span class=\"p\">)</span> <span class=\"n\">int64</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"mi\">2</span> <span class=\"mi\">3</span> <span class=\"mi\">4</span> <span class=\"mi\">5</span> <span class=\"mi\">6</span> <span class=\"mi\">7</span> <span class=\"mi\">8</span>\n<span class=\"n\">Dimensions</span> <span class=\"n\">without</span> <span class=\"n\">coordinates</span><span class=\"p\">:</span> <span class=\"n\">point_xy</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span>\n<span class=\"n\">Data</span> <span class=\"n\">variables</span><span class=\"p\">:</span>\n    <span class=\"n\">init__pos</span>   <span class=\"p\">(</span><span class=\"n\">point_xy</span><span class=\"p\">)</span> <span class=\"n\">int64</span> <span class=\"mi\">4</span> <span class=\"mi\">5</span>\n    <span class=\"n\">gol__world</span>  <span class=\"p\">(</span><span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"nb\">bool</span> <span class=\"kc\">False</span> <span class=\"kc\">False</span> <span class=\"kc\">False</span> <span class=\"kc\">False</span> <span class=\"o\">...</span> <span class=\"kc\">False</span> <span class=\"kc\">False</span> <span class=\"kc\">False</span>\n</pre>\n<ol>\n<li>Perform model setup, pre-processing, run, post-processing and\nvisualization in a functional style, using method chaining:</li>\n</ol>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"k\">with</span> <span class=\"n\">model</span><span class=\"p\">:</span>\n    <span class=\"p\">(</span><span class=\"n\">input_dataset</span>\n     <span class=\"o\">.</span><span class=\"n\">xsimlab</span><span class=\"o\">.</span><span class=\"n\">update_vars</span><span class=\"p\">(</span>\n         <span class=\"n\">input_vars</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'init__pos'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"s1\">'point_xy'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])}</span>\n     <span class=\"p\">)</span>\n     <span class=\"o\">.</span><span class=\"n\">xsimlab</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n     <span class=\"o\">.</span><span class=\"n\">gol__world</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span>\n         <span class=\"n\">col</span><span class=\"o\">=</span><span class=\"s1\">'step'</span><span class=\"p\">,</span> <span class=\"n\">col_wrap</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">),</span>\n         <span class=\"n\">xticks</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">yticks</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n         <span class=\"n\">add_colorbar</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">cm</span><span class=\"o\">.</span><span class=\"n\">binary</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n</pre>\n<img alt=\"doc/_static/gol.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/47a42123d17fa55684750449d9d39d99814af120/646f632f5f7374617469632f676f6c2e706e67\" width=\"400px\">\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Documentation is hosted on ReadTheDocs:\n<a href=\"http://xarray-simlab.readthedocs.io\" rel=\"nofollow\">http://xarray-simlab.readthedocs.io</a></p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>3-clause (\u201cModified\u201d or \u201cNew\u201d) BSD license,\nsee <a href=\"https://github.com/benbovy/xarray-simlab/blob/master/LICENSE\" rel=\"nofollow\">License file</a>.</p>\n<p>xarray-simlab uses short parts of the code of the <a href=\"http://xarray.pydata.org\" rel=\"nofollow\">xarray</a>, <a href=\"http://pandas.pydata.org/\" rel=\"nofollow\">pandas</a> and\n<a href=\"https://docs.dask.org\" rel=\"nofollow\">dask</a> libraries. Their licenses are reproduced in the \u201clicenses\u201d\ndirectory.</p>\n</div>\n<div id=\"acknowledgment\">\n<h2>Acknowledgment</h2>\n<p>This project is supported by the <a href=\"http://www.gfz-potsdam.de/en/section/earth-surface-process-modelling/\" rel=\"nofollow\">Earth Surface Process Modelling</a>\ngroup of the GFZ Helmholtz Centre Potsdam.</p>\n</div>\n<div id=\"citation\">\n<h2>Citation</h2>\n<p>If you use xarray-simlab in a scientific publication, we would\nappreciate a <a href=\"http://xarray-simlab.readthedocs.io/en/latest/citation.html\" rel=\"nofollow\">citation</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 7042590, "releases": {"0.0.9": [{"comment_text": "", "digests": {"md5": "a32f4264791889212592639ae75fa02d", "sha256": "856ceedb16ce0df8a51ad58fd08a3a0f3fb101d71932df8ef0d0d11a38f6726b"}, "downloads": -1, "filename": "xarray_simlab-0.0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a32f4264791889212592639ae75fa02d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.4", "size": 52579, "upload_time": "2017-06-19T21:37:48", "upload_time_iso_8601": "2017-06-19T21:37:48.767519Z", "url": "https://files.pythonhosted.org/packages/5c/81/dd3ffd6b6ade81446bb0c3318bfd22acec71bd47cc702db6f45b80cfc7b3/xarray_simlab-0.0.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8023bc39bd21717c8f937b6d3c655248", "sha256": "0ca6b6deed64d2b81df3796808cd28b29434116f328672dd416ef8e0a2651ec3"}, "downloads": -1, "filename": "xarray-simlab-0.0.9.tar.gz", "has_sig": false, "md5_digest": "8023bc39bd21717c8f937b6d3c655248", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 37966, "upload_time": "2017-06-19T21:26:26", "upload_time_iso_8601": "2017-06-19T21:26:26.496435Z", "url": "https://files.pythonhosted.org/packages/1f/b9/96446f0b08d0299bb6671b46b2240422ae74a773d4c9c3e9d4b03b54b601/xarray-simlab-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "7c2fb8b39475556f5d70c5e12daeda0e", "sha256": "615ebf90f360782ab27f045cdc2e2d8ff663c8758f7e30432e43e80458b2e0f8"}, "downloads": -1, "filename": "xarray_simlab-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7c2fb8b39475556f5d70c5e12daeda0e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 30103, "upload_time": "2017-10-08T16:07:55", "upload_time_iso_8601": "2017-10-08T16:07:55.750283Z", "url": "https://files.pythonhosted.org/packages/6a/18/2ba21aef5a3f9d6b4b1c8aea316120a51fd1a4721d214113d77b03c95eb4/xarray_simlab-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3a4a121951b6d45bf093434255172be", "sha256": "cb9187e2eee21ef2fb61f0a691609b9ba9527f8145fb05f4dee1a0935c44ba76"}, "downloads": -1, "filename": "xarray-simlab-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f3a4a121951b6d45bf093434255172be", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 39773, "upload_time": "2017-10-08T16:08:01", "upload_time_iso_8601": "2017-10-08T16:08:01.108252Z", "url": "https://files.pythonhosted.org/packages/71/6a/e9033406011f60a05894e52d738a5973e5046b295236ad043fa71e30df13/xarray-simlab-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "0e7751d4ca025293c6b3ecf4ad89ae94", "sha256": "f68e894619126734d1e06e663027bd4809a0f8bda337e5e871696962ffd5184a"}, "downloads": -1, "filename": "xarray_simlab-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0e7751d4ca025293c6b3ecf4ad89ae94", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 30154, "upload_time": "2017-11-20T12:54:53", "upload_time_iso_8601": "2017-11-20T12:54:53.335208Z", "url": "https://files.pythonhosted.org/packages/c0/36/c3b5760dc5c6448d3c80954c8a1c6ce82a58ae9e32e1014b505a7c2726cd/xarray_simlab-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81ecfc28d99e3f027f9918054e61db4d", "sha256": "94a36493a592bc745e6365ef66a5d8bb62a42ed3c4c22a454d41bdb1140b5770"}, "downloads": -1, "filename": "xarray-simlab-0.1.1.tar.gz", "has_sig": false, "md5_digest": "81ecfc28d99e3f027f9918054e61db4d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 39816, "upload_time": "2017-11-20T12:54:54", "upload_time_iso_8601": "2017-11-20T12:54:54.486456Z", "url": "https://files.pythonhosted.org/packages/50/96/f066f8f230e254361d9207a82bd1fce0f02b228bc93f6ddc71cac271a8f9/xarray-simlab-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "25a74be349c82764d1143733f77d1f80", "sha256": "f242d6d36fb011e587d84873e70a50be1e5d024f39d0bc89c1072820c203fc2a"}, "downloads": -1, "filename": "xarray-simlab-0.2.0.tar.gz", "has_sig": false, "md5_digest": "25a74be349c82764d1143733f77d1f80", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3350092, "upload_time": "2018-05-09T09:54:42", "upload_time_iso_8601": "2018-05-09T09:54:42.428370Z", "url": "https://files.pythonhosted.org/packages/7e/4f/d56c303067e9d73cb5619a4b10228512c577811fe55632b7371705899aff/xarray-simlab-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "64ed804cdae4577c67bb6b9d2cfec702", "sha256": "d99c7e5ecffcc1a57a8bb5741f3962514db6f4122c1f8c13c635f5f0237ba890"}, "downloads": -1, "filename": "xarray-simlab-0.2.1.tar.gz", "has_sig": false, "md5_digest": "64ed804cdae4577c67bb6b9d2cfec702", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3349749, "upload_time": "2018-11-07T11:45:11", "upload_time_iso_8601": "2018-11-07T11:45:11.428948Z", "url": "https://files.pythonhosted.org/packages/54/bb/3adefe08a917904b17286d74c9a8cbf1403225ce70abf7df65ee4a17ee7d/xarray-simlab-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "916b9645553e74cbb55dde8e6f6a43b6", "sha256": "0487609506639426180ca70fbe27e17d812976c6100f37a2acb9e34853766bdb"}, "downloads": -1, "filename": "xarray_simlab-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "916b9645553e74cbb55dde8e6f6a43b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 49259, "upload_time": "2019-09-30T15:20:49", "upload_time_iso_8601": "2019-09-30T15:20:49.632065Z", "url": "https://files.pythonhosted.org/packages/2b/da/5c573f0e8dcb093002bf1de80242af26f73d702a3c5f432cdbf7e44c57f2/xarray_simlab-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c5a3950115fd2f2a70b642cbc100cdd", "sha256": "b1bef295a9c4bb0eb92e6fee0f0d196d702b9f50cfdd9a51706179282c345f2a"}, "downloads": -1, "filename": "xarray-simlab-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0c5a3950115fd2f2a70b642cbc100cdd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3365396, "upload_time": "2019-09-30T15:21:00", "upload_time_iso_8601": "2019-09-30T15:21:00.547395Z", "url": "https://files.pythonhosted.org/packages/7a/27/2ecb44b87f6b8b56406e34e6c638963da541dd46143e62c32a1b30d96b2d/xarray-simlab-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "6d4a63c091728c493d66f03d69914bde", "sha256": "e615d468c5c5b50115aea6fb9073f1ec909cfbd9b918603c3f3e0325c82ae62c"}, "downloads": -1, "filename": "xarray_simlab-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6d4a63c091728c493d66f03d69914bde", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 73494, "upload_time": "2020-04-07T20:54:08", "upload_time_iso_8601": "2020-04-07T20:54:08.986213Z", "url": "https://files.pythonhosted.org/packages/06/9b/021912ab11288aa007132f7a1b7db4c1aea1567a0b1718c6b928eb89fae1/xarray_simlab-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00f0a5269b10b7fd02b77272001d730e", "sha256": "483411665b3a2fba55800d672d82f8d22304581ff94fb0c2ebdc9386ba5d3747"}, "downloads": -1, "filename": "xarray-simlab-v0.4.0.tar.gz", "has_sig": false, "md5_digest": "00f0a5269b10b7fd02b77272001d730e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 130028, "upload_time": "2020-04-07T20:54:10", "upload_time_iso_8601": "2020-04-07T20:54:10.853647Z", "url": "https://files.pythonhosted.org/packages/f9/44/bb6eaec775c3247816a0ff39c2ae48f8535ef318d630a3f28b5c8a842460/xarray-simlab-v0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "a8196cbc1b8dcc8418b68ec79a699f24", "sha256": "06b52ae1bbe035dee273a7aa45e1ef11622ff8c549f7678e4111efcf795776b4"}, "downloads": -1, "filename": "xarray_simlab-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a8196cbc1b8dcc8418b68ec79a699f24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 75888, "upload_time": "2020-04-17T19:02:43", "upload_time_iso_8601": "2020-04-17T19:02:43.213336Z", "url": "https://files.pythonhosted.org/packages/02/a3/4e92e7b1014e6287fbf5b1af4359c7807e0bf640e98056c5365f9cc4e2d0/xarray_simlab-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc5ba94ddd1e113a7a92d077cd037708", "sha256": "5ad9f93b53ab27c4084d50ad5deda8c7044a9911af7735384b5c3da2c054bc15"}, "downloads": -1, "filename": "xarray-simlab-0.4.1.tar.gz", "has_sig": false, "md5_digest": "fc5ba94ddd1e113a7a92d077cd037708", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 132874, "upload_time": "2020-04-17T19:02:45", "upload_time_iso_8601": "2020-04-17T19:02:45.608231Z", "url": "https://files.pythonhosted.org/packages/58/dd/341d4a7225d27fd2b9e80e0e97c92d23226396990979aafe2b60bcfba631/xarray-simlab-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a8196cbc1b8dcc8418b68ec79a699f24", "sha256": "06b52ae1bbe035dee273a7aa45e1ef11622ff8c549f7678e4111efcf795776b4"}, "downloads": -1, "filename": "xarray_simlab-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a8196cbc1b8dcc8418b68ec79a699f24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 75888, "upload_time": "2020-04-17T19:02:43", "upload_time_iso_8601": "2020-04-17T19:02:43.213336Z", "url": "https://files.pythonhosted.org/packages/02/a3/4e92e7b1014e6287fbf5b1af4359c7807e0bf640e98056c5365f9cc4e2d0/xarray_simlab-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc5ba94ddd1e113a7a92d077cd037708", "sha256": "5ad9f93b53ab27c4084d50ad5deda8c7044a9911af7735384b5c3da2c054bc15"}, "downloads": -1, "filename": "xarray-simlab-0.4.1.tar.gz", "has_sig": false, "md5_digest": "fc5ba94ddd1e113a7a92d077cd037708", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 132874, "upload_time": "2020-04-17T19:02:45", "upload_time_iso_8601": "2020-04-17T19:02:45.608231Z", "url": "https://files.pythonhosted.org/packages/58/dd/341d4a7225d27fd2b9e80e0e97c92d23226396990979aafe2b60bcfba631/xarray-simlab-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:26:21 2020"}