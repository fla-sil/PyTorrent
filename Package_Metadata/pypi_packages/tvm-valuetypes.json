{"info": {"author": "Emelyanenko Kirill", "author_email": "emelyanenko.kirill@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: Other/Proprietary License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries"], "description": "# TVM value types\nTelegram Open Network Virtual Machine has 7 value types:\n1. Integer\n2. Cell\n3. Tuple\n4. Null\n5. Slice\n6. Builder\n7. Continuation\n\nThis library is collection of utilits for handling those types.\n\n# Cell and Slice\n`tvm_valuetypes.cell` has class `Cell` and functions to work with cells:\n`deserialize_boc`, `cell.serialize_boc`, `cell.serialize_to_object`, `cell.serialize_to_json`, `deserialize_cell_from_json`\n```\nfrom tvm_valuertypes.cell import Cell, deserialize_boc\nserialized_cell = bytes.fromhex(\"B5EE9C72410102010007000102000100024995C5FE15\")\ncell1 = deserialize_boc(serialized_c1)\ncell1\nserialization_with_index = cell1.serialize_boc(has_idx=True, hash_crc32=True, has_cache_bits=False, flags=0 )\nserialization_with_index\ncell2 = deserialize_boc(serialized_c2)\ncell2 == cell1\ncell2.serialize_to_object()\n```\n## HashMaps (Dictionaries)\nCell may represent special 'virtual' value type, HashMap, which can be used for storing key-value container in the Cell.\n\n`tvm_valuetypes.dict_utils` has special method `parse_hashmap` for dealing with hashmaps. Note the difference between `Hashmap` and `HashmapE`.\n\n```\nfrom tvm_valuertypes.cell import Cell\nfrom tvm_valuertypes.dict_utils import parse_hashmap\ntest_dict = bytes.fromhex(\"B5EE9C7241010A01002D00020120010202014803040003FC0202014805060003F5FE02014807080003DB24020120090900035FF800030020CB8CA892\")\ndict_cell = deserialize_boc(test_dict)\nparsed_dict = {}\nparse_hashmap(dict_cell, 8, parsed_dict)\nparsed_dict\n```\n\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/EmelyanenkoK/tvm_valuetypes", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tvm-valuetypes", "package_url": "https://pypi.org/project/tvm-valuetypes/", "platform": "", "project_url": "https://pypi.org/project/tvm-valuetypes/", "project_urls": {"Homepage": "https://github.com/EmelyanenkoK/tvm_valuetypes"}, "release_url": "https://pypi.org/project/tvm-valuetypes/0.0.3/", "requires_dist": ["bitarray", "crc32c"], "requires_python": "", "summary": "Collection of utils for handling Telegram Open Network Virtual Machine value types", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TVM value types</h1>\n<p>Telegram Open Network Virtual Machine has 7 value types:</p>\n<ol>\n<li>Integer</li>\n<li>Cell</li>\n<li>Tuple</li>\n<li>Null</li>\n<li>Slice</li>\n<li>Builder</li>\n<li>Continuation</li>\n</ol>\n<p>This library is collection of utilits for handling those types.</p>\n<h1>Cell and Slice</h1>\n<p><code>tvm_valuetypes.cell</code> has class <code>Cell</code> and functions to work with cells:\n<code>deserialize_boc</code>, <code>cell.serialize_boc</code>, <code>cell.serialize_to_object</code>, <code>cell.serialize_to_json</code>, <code>deserialize_cell_from_json</code></p>\n<pre><code>from tvm_valuertypes.cell import Cell, deserialize_boc\nserialized_cell = bytes.fromhex(\"B5EE9C72410102010007000102000100024995C5FE15\")\ncell1 = deserialize_boc(serialized_c1)\ncell1\nserialization_with_index = cell1.serialize_boc(has_idx=True, hash_crc32=True, has_cache_bits=False, flags=0 )\nserialization_with_index\ncell2 = deserialize_boc(serialized_c2)\ncell2 == cell1\ncell2.serialize_to_object()\n</code></pre>\n<h2>HashMaps (Dictionaries)</h2>\n<p>Cell may represent special 'virtual' value type, HashMap, which can be used for storing key-value container in the Cell.</p>\n<p><code>tvm_valuetypes.dict_utils</code> has special method <code>parse_hashmap</code> for dealing with hashmaps. Note the difference between <code>Hashmap</code> and <code>HashmapE</code>.</p>\n<pre><code>from tvm_valuertypes.cell import Cell\nfrom tvm_valuertypes.dict_utils import parse_hashmap\ntest_dict = bytes.fromhex(\"B5EE9C7241010A01002D00020120010202014803040003FC0202014805060003F5FE02014807080003DB24020120090900035FF800030020CB8CA892\")\ndict_cell = deserialize_boc(test_dict)\nparsed_dict = {}\nparse_hashmap(dict_cell, 8, parsed_dict)\nparsed_dict\n</code></pre>\n\n          </div>"}, "last_serial": 6366505, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "2f077d35e32bff3fd5e387a20e5b823d", "sha256": "ca61749ba98985f281142e44c8cc57794165eba54b8f8a9a63edc9daa226fda0"}, "downloads": -1, "filename": "tvm_valuetypes-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2f077d35e32bff3fd5e387a20e5b823d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8768, "upload_time": "2019-12-21T21:15:50", "upload_time_iso_8601": "2019-12-21T21:15:50.770393Z", "url": "https://files.pythonhosted.org/packages/8e/9e/5edc48228417ab3ad1c85ad7e08595fb929346cc6eb37a1b5a959c3cc27e/tvm_valuetypes-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c3d70ac0e2736066d2b0186321ba7be", "sha256": "8a7388ddbc3f2d1d6856cca0b52bfd24de2315c65f64f18cdd13b65c52f255ce"}, "downloads": -1, "filename": "tvm_valuetypes-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5c3d70ac0e2736066d2b0186321ba7be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6700, "upload_time": "2019-12-21T21:15:53", "upload_time_iso_8601": "2019-12-21T21:15:53.040780Z", "url": "https://files.pythonhosted.org/packages/08/f0/5162ffa6e9061f161500462b829ac66bd3a2e1c9a736213fa7a4cf1bde9c/tvm_valuetypes-0.0.1.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "e5bba64daa2a7aef3b987b5e36867077", "sha256": "5fced6597402f8a52b0790d6ed96abea38175852d1075795b618311fbf5b5a53"}, "downloads": -1, "filename": "tvm_valuetypes-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e5bba64daa2a7aef3b987b5e36867077", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8802, "upload_time": "2019-12-27T19:20:14", "upload_time_iso_8601": "2019-12-27T19:20:14.268965Z", "url": "https://files.pythonhosted.org/packages/36/6c/c06eb03c9464c05659bb86b27a0e3b83da8f878aa3f8696893645318ee95/tvm_valuetypes-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9792d0bcf4e4d5402f7913cf8e03ef03", "sha256": "e998f12b01078154ba1a64c3cee4f6987147f5608497dabb7de67f89fcd15886"}, "downloads": -1, "filename": "tvm_valuetypes-0.0.3.tar.gz", "has_sig": false, "md5_digest": "9792d0bcf4e4d5402f7913cf8e03ef03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6738, "upload_time": "2019-12-27T19:20:15", "upload_time_iso_8601": "2019-12-27T19:20:15.697105Z", "url": "https://files.pythonhosted.org/packages/7c/5e/31662150db4a6ce8924166e82b08de25a2fd48ae5278982107ad7d7030c5/tvm_valuetypes-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e5bba64daa2a7aef3b987b5e36867077", "sha256": "5fced6597402f8a52b0790d6ed96abea38175852d1075795b618311fbf5b5a53"}, "downloads": -1, "filename": "tvm_valuetypes-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e5bba64daa2a7aef3b987b5e36867077", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8802, "upload_time": "2019-12-27T19:20:14", "upload_time_iso_8601": "2019-12-27T19:20:14.268965Z", "url": "https://files.pythonhosted.org/packages/36/6c/c06eb03c9464c05659bb86b27a0e3b83da8f878aa3f8696893645318ee95/tvm_valuetypes-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9792d0bcf4e4d5402f7913cf8e03ef03", "sha256": "e998f12b01078154ba1a64c3cee4f6987147f5608497dabb7de67f89fcd15886"}, "downloads": -1, "filename": "tvm_valuetypes-0.0.3.tar.gz", "has_sig": false, "md5_digest": "9792d0bcf4e4d5402f7913cf8e03ef03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6738, "upload_time": "2019-12-27T19:20:15", "upload_time_iso_8601": "2019-12-27T19:20:15.697105Z", "url": "https://files.pythonhosted.org/packages/7c/5e/31662150db4a6ce8924166e82b08de25a2fd48ae5278982107ad7d7030c5/tvm_valuetypes-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:44:20 2020"}