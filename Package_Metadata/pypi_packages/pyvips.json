{"info": {"author": "John Cupitt", "author_email": "jcupitt@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Multimedia :: Graphics", "Topic :: Multimedia :: Graphics :: Graphics Conversion"], "description": "README\n======\n\n.. image:: https://travis-ci.org/libvips/pyvips.svg?branch=master\n    :alt: Build Status\n    :target: https://travis-ci.org/libvips/pyvips\n\nPyPI package:\n\nhttps://pypi.python.org/pypi/pyvips\n\nconda package:\n\nhttps://anaconda.org/conda-forge/pyvips\n\nWe have formatted docs online here:\n\nhttps://libvips.github.io/pyvips/\n\nThis module wraps the libvips image processing library:\n\nhttps://libvips.github.io/libvips/\n\nThe libvips docs are also very useful:\n\nhttps://libvips.github.io/libvips/API/current/\n\nIf you have the development headers for libvips installed and have a working C\ncompiler, this module will use cffi API mode to try to build a libvips \nbinary extension for your Python. \n\nIf it is unable to build a binary extension, it will use cffi ABI mode\ninstead and only needs the libvips shared library. This takes longer to\nstart up and is typically ~20% slower in execution.  You can find out how\npyvips installed with ``pip show pyvips``.\n\nThis binding passes the vips test suite cleanly and with no leaks under\npython2.7 - python3.6, pypy and pypy3 on Windows, macOS and Linux. \n\nHow it works\n------------\n\nPrograms that use ``pyvips`` don't manipulate images directly, instead\nthey create pipelines of image processing operations building on a source\nimage. When the end of the pipe is connected to a destination, the whole\npipeline executes at once, streaming the image in parallel from source to\ndestination a section at a time.\n\nBecause ``pyvips`` is parallel, it's quick, and because it doesn't need to\nkeep entire images in memory, it's light.  For example, the libvips \nspeed and memory use benchmark:\n\nhttps://github.com/libvips/libvips/wiki/Speed-and-memory-use\n\nLoads a large tiff image, shrinks by 10%, sharpens, and saves again. On this\ntest ``pyvips`` is typically 3x faster than ImageMagick and needs 5x less\nmemory. \n\nThere's a handy chapter in the docs explaining how libvips opens files,\nwhich gives some more background.\n\nhttp://libvips.github.io/libvips/API/current/How-it-opens-files.md.html\n\nconda Install\n-------------\n\nThe conda package includes a matching libvips binary, so just enter:\n\n.. code-block:: shell\n\n    $ conda install --channel conda-forge pyvips\n\nNon-conda install\n-----------------\n\nFirst, you need the libvips shared library on your library search path, version\n8.2 or later. On Linux and macOS, you can just install via your package\nmanager; on Windows you can download a pre-compiled binary from the libvips\nwebsite.\n\nhttps://libvips.github.io/libvips/install.html\n\nNext, install this package, perhaps:\n\n.. code-block:: shell\n\n    $ pip install --user pyvips\n\nOn Windows, you'll need a 64-bit Python. The official one works well. \nYou will also need to add ``vips-dev-x.y\\bin`` to your ``PATH`` so\nthat pyvips can find all the DLLs it needs. You can either do this in the\n**Advanced System Settings** control panel, or you can just change\n``PATH`` in your Python program.\n\nIf you set the PATH environment variable in the control panel, you can use\nthe ``vips`` command-line tools, which I find useful. However, this will add\na lot of extra DLLs to your search path and they might conflict with other\nprograms, so it's usually safer just to set ``PATH`` in your program.\n\nTo set ``PATH`` from within Python, you need something like this at the start:\n\n.. code-block:: python\n\n    import os\n    vipshome = 'c:\\\\vips-dev-8.7\\\\bin'\n    os.environ['PATH'] = vipshome + ';' + os.environ['PATH']\n\nNow when you import pyvips, it should be able to find the DLLs.\n\nExample\n-------\n\nThis sample program loads a JPG image, doubles the value of every green pixel,\nsharpens, and then writes the image back to the filesystem again:\n\n.. code-block:: python\n\n    import pyvips\n\n    image = pyvips.Image.new_from_file('some-image.jpg', access='sequential')\n    image *= [1, 2, 1]\n    mask = pyvips.Image.new_from_array([[-1, -1, -1],\n                                        [-1, 16, -1],\n                                        [-1, -1, -1]\n                                       ], scale=8)\n    image = image.conv(mask, precision='integer')\n    image.write_to_file('x.jpg')\n\n\nNotes\n-----\n\nLocal user install:\n\n.. code-block:: shell\n\n    $ pip3 install -e .\n    $ pypy -m pip --user -e .\n\nRun all tests:\n\n.. code-block:: shell\n\n    $ tox \n\nRun test suite:\n\n.. code-block:: shell\n\n    $ tox test\n\nRun a specific test:\n\n.. code-block:: shell\n\n    $ pytest-3 tests/test_saveload.py\n\nRun perf tests:\n\n.. code-block:: shell\n\n   $ cd tests/perf\n   $ ./run.sh\n\nStylecheck:\n\n.. code-block:: shell\n\n    $ tox qa\n\nGenerate HTML docs in ``doc/build/html``:\n\n.. code-block:: shell\n\n    $ cd doc; sphinx-build -bhtml . build/html\n\nRegenerate autodocs:\n\n.. code-block:: shell\n\n    $ cd doc; \\\n      python3 -c \"import pyvips; pyvips.Operation.generate_sphinx_all()\" > x \n\nAnd copy-paste ``x`` into the obvious place in ``doc/vimage.rst``.\n\nUpdate version number:\n\n.. code-block:: shell\n\n    $ vi pyvips/version.py\n    $ vi doc/conf.py\n\nUpdate pypi package:\n\n.. code-block:: shell\n\n    $ python3 setup.py sdist\n    $ git tag -a v2.1.12\n    $ git push origin v2.1.12\n    $ twine upload dist/*", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/libvips/pyvips", "keywords": "image processing", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyvips", "package_url": "https://pypi.org/project/pyvips/", "platform": "", "project_url": "https://pypi.org/project/pyvips/", "project_urls": {"Homepage": "https://github.com/libvips/pyvips"}, "release_url": "https://pypi.org/project/pyvips/2.1.12/", "requires_dist": null, "requires_python": "", "summary": "binding for the libvips image processing library, API mode", "version": "2.1.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/libvips/pyvips\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/abe50229255008059a2c14f321ddbd25fd0fc7b5/68747470733a2f2f7472617669732d63692e6f72672f6c6962766970732f7079766970732e7376673f6272616e63683d6d6173746572\"></a>\n<p>PyPI package:</p>\n<p><a href=\"https://pypi.python.org/pypi/pyvips\" rel=\"nofollow\">https://pypi.python.org/pypi/pyvips</a></p>\n<p>conda package:</p>\n<p><a href=\"https://anaconda.org/conda-forge/pyvips\" rel=\"nofollow\">https://anaconda.org/conda-forge/pyvips</a></p>\n<p>We have formatted docs online here:</p>\n<p><a href=\"https://libvips.github.io/pyvips/\" rel=\"nofollow\">https://libvips.github.io/pyvips/</a></p>\n<p>This module wraps the libvips image processing library:</p>\n<p><a href=\"https://libvips.github.io/libvips/\" rel=\"nofollow\">https://libvips.github.io/libvips/</a></p>\n<p>The libvips docs are also very useful:</p>\n<p><a href=\"https://libvips.github.io/libvips/API/current/\" rel=\"nofollow\">https://libvips.github.io/libvips/API/current/</a></p>\n<p>If you have the development headers for libvips installed and have a working C\ncompiler, this module will use cffi API mode to try to build a libvips\nbinary extension for your Python.</p>\n<p>If it is unable to build a binary extension, it will use cffi ABI mode\ninstead and only needs the libvips shared library. This takes longer to\nstart up and is typically ~20% slower in execution.  You can find out how\npyvips installed with <tt>pip show pyvips</tt>.</p>\n<p>This binding passes the vips test suite cleanly and with no leaks under\npython2.7 - python3.6, pypy and pypy3 on Windows, macOS and Linux.</p>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p>Programs that use <tt>pyvips</tt> don\u2019t manipulate images directly, instead\nthey create pipelines of image processing operations building on a source\nimage. When the end of the pipe is connected to a destination, the whole\npipeline executes at once, streaming the image in parallel from source to\ndestination a section at a time.</p>\n<p>Because <tt>pyvips</tt> is parallel, it\u2019s quick, and because it doesn\u2019t need to\nkeep entire images in memory, it\u2019s light.  For example, the libvips\nspeed and memory use benchmark:</p>\n<p><a href=\"https://github.com/libvips/libvips/wiki/Speed-and-memory-use\" rel=\"nofollow\">https://github.com/libvips/libvips/wiki/Speed-and-memory-use</a></p>\n<p>Loads a large tiff image, shrinks by 10%, sharpens, and saves again. On this\ntest <tt>pyvips</tt> is typically 3x faster than ImageMagick and needs 5x less\nmemory.</p>\n<p>There\u2019s a handy chapter in the docs explaining how libvips opens files,\nwhich gives some more background.</p>\n<p><a href=\"http://libvips.github.io/libvips/API/current/How-it-opens-files.md.html\" rel=\"nofollow\">http://libvips.github.io/libvips/API/current/How-it-opens-files.md.html</a></p>\n</div>\n<div id=\"conda-install\">\n<h2>conda Install</h2>\n<p>The conda package includes a matching libvips binary, so just enter:</p>\n<pre>$ conda install --channel conda-forge pyvips\n</pre>\n</div>\n<div id=\"non-conda-install\">\n<h2>Non-conda install</h2>\n<p>First, you need the libvips shared library on your library search path, version\n8.2 or later. On Linux and macOS, you can just install via your package\nmanager; on Windows you can download a pre-compiled binary from the libvips\nwebsite.</p>\n<p><a href=\"https://libvips.github.io/libvips/install.html\" rel=\"nofollow\">https://libvips.github.io/libvips/install.html</a></p>\n<p>Next, install this package, perhaps:</p>\n<pre>$ pip install --user pyvips\n</pre>\n<p>On Windows, you\u2019ll need a 64-bit Python. The official one works well.\nYou will also need to add <tt><span class=\"pre\">vips-dev-x.y\\bin</span></tt> to your <tt>PATH</tt> so\nthat pyvips can find all the DLLs it needs. You can either do this in the\n<strong>Advanced System Settings</strong> control panel, or you can just change\n<tt>PATH</tt> in your Python program.</p>\n<p>If you set the PATH environment variable in the control panel, you can use\nthe <tt>vips</tt> command-line tools, which I find useful. However, this will add\na lot of extra DLLs to your search path and they might conflict with other\nprograms, so it\u2019s usually safer just to set <tt>PATH</tt> in your program.</p>\n<p>To set <tt>PATH</tt> from within Python, you need something like this at the start:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"n\">vipshome</span> <span class=\"o\">=</span> <span class=\"s1\">'c:</span><span class=\"se\">\\\\</span><span class=\"s1\">vips-dev-8.7</span><span class=\"se\">\\\\</span><span class=\"s1\">bin'</span>\n<span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">'PATH'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">vipshome</span> <span class=\"o\">+</span> <span class=\"s1\">';'</span> <span class=\"o\">+</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">'PATH'</span><span class=\"p\">]</span>\n</pre>\n<p>Now when you import pyvips, it should be able to find the DLLs.</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>This sample program loads a JPG image, doubles the value of every green pixel,\nsharpens, and then writes the image back to the filesystem again:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyvips</span>\n\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">pyvips</span><span class=\"o\">.</span><span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">new_from_file</span><span class=\"p\">(</span><span class=\"s1\">'some-image.jpg'</span><span class=\"p\">,</span> <span class=\"n\">access</span><span class=\"o\">=</span><span class=\"s1\">'sequential'</span><span class=\"p\">)</span>\n<span class=\"n\">image</span> <span class=\"o\">*=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">mask</span> <span class=\"o\">=</span> <span class=\"n\">pyvips</span><span class=\"o\">.</span><span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">new_from_array</span><span class=\"p\">([[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n                                    <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n                                    <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n                                   <span class=\"p\">],</span> <span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">conv</span><span class=\"p\">(</span><span class=\"n\">mask</span><span class=\"p\">,</span> <span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"s1\">'integer'</span><span class=\"p\">)</span>\n<span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">write_to_file</span><span class=\"p\">(</span><span class=\"s1\">'x.jpg'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<p>Local user install:</p>\n<pre>$ pip3 install -e .\n$ pypy -m pip --user -e .\n</pre>\n<p>Run all tests:</p>\n<pre>$ tox\n</pre>\n<p>Run test suite:</p>\n<pre>$ tox <span class=\"nb\">test</span>\n</pre>\n<p>Run a specific test:</p>\n<pre>$ pytest-3 tests/test_saveload.py\n</pre>\n<p>Run perf tests:</p>\n<pre>$ <span class=\"nb\">cd</span> tests/perf\n$ ./run.sh\n</pre>\n<p>Stylecheck:</p>\n<pre>$ tox qa\n</pre>\n<p>Generate HTML docs in <tt>doc/build/html</tt>:</p>\n<pre>$ <span class=\"nb\">cd</span> doc<span class=\"p\">;</span> sphinx-build -bhtml . build/html\n</pre>\n<p>Regenerate autodocs:</p>\n<pre>$ <span class=\"nb\">cd</span> doc<span class=\"p\">;</span> <span class=\"se\">\\\n</span>  python3 -c <span class=\"s2\">\"import pyvips; pyvips.Operation.generate_sphinx_all()\"</span> &gt; x\n</pre>\n<p>And copy-paste <tt>x</tt> into the obvious place in <tt>doc/vimage.rst</tt>.</p>\n<p>Update version number:</p>\n<pre>$ vi pyvips/version.py\n$ vi doc/conf.py\n</pre>\n<p>Update pypi package:</p>\n<pre>$ python3 setup.py sdist\n$ git tag -a v2.1.12\n$ git push origin v2.1.12\n$ twine upload dist/*\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7173035, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "da3a980e702b834e76349922d93020bf", "sha256": "c99590364cfc620af0db004aa9c6e6830a3c337d0db074d0a61da74dd4b91071"}, "downloads": -1, "filename": "pyvips-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "da3a980e702b834e76349922d93020bf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 55947, "upload_time": "2017-08-19T14:29:05", "upload_time_iso_8601": "2017-08-19T14:29:05.726007Z", "url": "https://files.pythonhosted.org/packages/6a/2d/5ca1ee5077f733335c208b7a3f3d62f964aaab87731ab3e2850e404df7f1/pyvips-2.0.0-py2.py3-none-any.whl", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "de8d2d8de6410441109a8b246805fccd", "sha256": "bf74b25a91bed8d9a96be8d457ce26ee487bf8b72c48f2c56aa643e233e341b2"}, "downloads": -1, "filename": "pyvips-2.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "de8d2d8de6410441109a8b246805fccd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 56493, "upload_time": "2017-08-23T17:53:13", "upload_time_iso_8601": "2017-08-23T17:53:13.166406Z", "url": "https://files.pythonhosted.org/packages/40/99/2d9991eff005de6674f155808423e8aac934ba50b5c8858abef5e148c51f/pyvips-2.0.1-py2.py3-none-any.whl", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "e7e9ae205e49065fb283a16c210c8a9d", "sha256": "e6a6541672c6eab62ab8442738742b021c624a7b51b49c1ba9ab9aa99935692f"}, "downloads": -1, "filename": "pyvips-2.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e7e9ae205e49065fb283a16c210c8a9d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 57433, "upload_time": "2017-08-31T14:20:45", "upload_time_iso_8601": "2017-08-31T14:20:45.630730Z", "url": "https://files.pythonhosted.org/packages/b6/3a/261808544f6832f6e00b6ee26435210d6293cc022b9c51e2b48543575dc5/pyvips-2.0.2-py2.py3-none-any.whl", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "15673d6469881cc718b385e8d849c9f8", "sha256": "0939c390af4584d2a48d488630f0f249d234e6087b188f7e8a70418479b66488"}, "downloads": -1, "filename": "pyvips-2.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "15673d6469881cc718b385e8d849c9f8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 57910, "upload_time": "2017-09-02T14:43:45", "upload_time_iso_8601": "2017-09-02T14:43:45.623869Z", "url": "https://files.pythonhosted.org/packages/62/32/bd01d86b81fdd84c0699cda1c40b0334f63e4deb981d22f468b3ef681513/pyvips-2.0.3-py2.py3-none-any.whl", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "868a4d41517c8c18d80a856931485caa", "sha256": "f1b502e20d3b12abf295a2eb57387061b3285b6f93a228a1c0beada01a2e435d"}, "downloads": -1, "filename": "pyvips-2.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "868a4d41517c8c18d80a856931485caa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 58200, "upload_time": "2017-09-07T21:16:48", "upload_time_iso_8601": "2017-09-07T21:16:48.095797Z", "url": "https://files.pythonhosted.org/packages/47/1f/a646ed24baab8404d7ce485e088bd58ec2ec4e9108089dffa6acf42b6347/pyvips-2.0.4-py2.py3-none-any.whl", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "5cef1fdb50a7621069eae86d965a5200", "sha256": "684a459452b1b1968c7c8dbd636cdb669f780e9927291dc469a25c751e9337be"}, "downloads": -1, "filename": "pyvips-2.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5cef1fdb50a7621069eae86d965a5200", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 31412, "upload_time": "2018-02-01T14:12:38", "upload_time_iso_8601": "2018-02-01T14:12:38.143994Z", "url": "https://files.pythonhosted.org/packages/17/08/9314ee0082c56aeac9dbbc23f5948e1e884ac9679cf6032197d5be34fa56/pyvips-2.0.5-py2.py3-none-any.whl", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "69cbe9cfe11f439754ba44ad6bca4248", "sha256": "eec805bba1de3bcaedf855a5696c85ca550896785e1fdf96ef7021248850b618"}, "downloads": -1, "filename": "pyvips-2.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "69cbe9cfe11f439754ba44ad6bca4248", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 34213, "upload_time": "2018-02-23T12:23:12", "upload_time_iso_8601": "2018-02-23T12:23:12.674361Z", "url": "https://files.pythonhosted.org/packages/b5/74/5c963d0dcc76fb467902e18aab55500158f5c9acdc86235061a878c16376/pyvips-2.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3032d613f6bd1f96fd2ad9428c40d487", "sha256": "4196e80ef03ca7efff21f00866e1302c5e90d45a8d9d87f3e5b122a1ba04ced2"}, "downloads": -1, "filename": "pyvips-2.1.0.tar.gz", "has_sig": false, "md5_digest": "3032d613f6bd1f96fd2ad9428c40d487", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30589, "upload_time": "2018-02-25T10:32:56", "upload_time_iso_8601": "2018-02-25T10:32:56.451003Z", "url": "https://files.pythonhosted.org/packages/a0/32/f819aa0de7394b4d714fece744bde53ee82df5e545e4c5affb17563bdfcd/pyvips-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "889dbf8dcd4f4e505ff06504a1960619", "sha256": "034210a7bfdbe574e07f71c96ca8cca3cc6072a5460032dad2794d8e75bd43dc"}, "downloads": -1, "filename": "pyvips-2.1.1.tar.gz", "has_sig": false, "md5_digest": "889dbf8dcd4f4e505ff06504a1960619", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30738, "upload_time": "2018-02-25T10:44:38", "upload_time_iso_8601": "2018-02-25T10:44:38.170913Z", "url": "https://files.pythonhosted.org/packages/c2/42/dbb88d6049ec0cdd5aa62070019d50a9381cb390dd5e68ab3c062b0a5260/pyvips-2.1.1.tar.gz", "yanked": false}], "2.1.10": [{"comment_text": "", "digests": {"md5": "330ce5f8dbdc2a91544b67e5f753087e", "sha256": "66268514e0361227471274610f09e02ce458df9c9b68114f59bd1e4d3fe0f76f"}, "downloads": -1, "filename": "pyvips-2.1.10.tar.gz", "has_sig": false, "md5_digest": "330ce5f8dbdc2a91544b67e5f753087e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37560, "upload_time": "2020-01-07T15:14:46", "upload_time_iso_8601": "2020-01-07T15:14:46.846922Z", "url": "https://files.pythonhosted.org/packages/a5/ad/3e467b2f81dfc84887922f50f104a4bb4a730b3643f4cda159af43c5bb06/pyvips-2.1.10.tar.gz", "yanked": false}], "2.1.11": [{"comment_text": "", "digests": {"md5": "1f735a12c71f17eec83521480c67d3e4", "sha256": "5e90526d177c7373d64d050bc9e5864a8d764ec83d83bb855c496ed06dba76ce"}, "downloads": -1, "filename": "pyvips-2.1.11.tar.gz", "has_sig": false, "md5_digest": "1f735a12c71f17eec83521480c67d3e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37620, "upload_time": "2020-01-07T15:18:59", "upload_time_iso_8601": "2020-01-07T15:18:59.141863Z", "url": "https://files.pythonhosted.org/packages/f2/1d/69450110de9295f6fb4a9cb03602d954c05ca55618d9c88e6dc88d333050/pyvips-2.1.11.tar.gz", "yanked": false}], "2.1.12": [{"comment_text": "", "digests": {"md5": "1d9a3a38bf49e84c7d258e1420f54325", "sha256": "84c2f7e31525c2d56813dcfc15344771d90753bfbcc455d63a55c4d7616fe05d"}, "downloads": -1, "filename": "pyvips-2.1.12.tar.gz", "has_sig": false, "md5_digest": "1d9a3a38bf49e84c7d258e1420f54325", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43722, "upload_time": "2020-05-05T16:06:55", "upload_time_iso_8601": "2020-05-05T16:06:55.880027Z", "url": "https://files.pythonhosted.org/packages/b2/72/7aae89781d37f3c20bc9d54bc8154bad700d18760768b2d40b7ff30cc887/pyvips-2.1.12.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "cb5867a3116d28e325586c551f21275f", "sha256": "c9de58aa073194e85ea0b8e90cb6b6a22905293c5c53d030424bec40dbe281ad"}, "downloads": -1, "filename": "pyvips-2.1.2.tar.gz", "has_sig": false, "md5_digest": "cb5867a3116d28e325586c551f21275f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31235, "upload_time": "2018-03-02T07:19:40", "upload_time_iso_8601": "2018-03-02T07:19:40.993633Z", "url": "https://files.pythonhosted.org/packages/5c/6e/df4a34a9c8b349e40d6400bd4ac40558b3497732795fa0399596155b18b1/pyvips-2.1.2.tar.gz", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "765c112395294520b5701e6bcacf68dd", "sha256": "223bb78753866c604a9918d89b53b5dd7b6102c5302c6672f0c4cb047c4c15f2"}, "downloads": -1, "filename": "pyvips-2.1.3.tar.gz", "has_sig": false, "md5_digest": "765c112395294520b5701e6bcacf68dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29358, "upload_time": "2018-08-06T15:44:18", "upload_time_iso_8601": "2018-08-06T15:44:18.243734Z", "url": "https://files.pythonhosted.org/packages/60/fb/820d471aa27cea5c11e752579cf11308adcfbd18558f509e7a7a5d7f229b/pyvips-2.1.3.tar.gz", "yanked": false}], "2.1.4": [{"comment_text": "", "digests": {"md5": "6f2b99601178a533866a3fc3ce815ef4", "sha256": "4fb56ab9f30baa1d1103e488e368e60387a936dc9682b2456327bbfa2dc00a55"}, "downloads": -1, "filename": "pyvips-2.1.4.tar.gz", "has_sig": false, "md5_digest": "6f2b99601178a533866a3fc3ce815ef4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29238, "upload_time": "2018-10-03T13:39:56", "upload_time_iso_8601": "2018-10-03T13:39:56.326732Z", "url": "https://files.pythonhosted.org/packages/b3/55/abb37dfddb4907b00b0e55b85cda090aa0704f9a587d62b925b0238e898c/pyvips-2.1.4.tar.gz", "yanked": false}], "2.1.5": [{"comment_text": "", "digests": {"md5": "e73021d71dad7fa304f5f4041c83b88c", "sha256": "42dfbf14f19374bef7db89f3943758deec3dc055c026ff9ae5fbd09a7cb1c0e3"}, "downloads": -1, "filename": "pyvips-2.1.5.tar.gz", "has_sig": false, "md5_digest": "e73021d71dad7fa304f5f4041c83b88c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30236, "upload_time": "2018-12-18T17:02:30", "upload_time_iso_8601": "2018-12-18T17:02:30.128875Z", "url": "https://files.pythonhosted.org/packages/39/1e/b1df477d78bba37d3b9f83258e9a44bb505355e2e56a82e8398bfe699096/pyvips-2.1.5.tar.gz", "yanked": false}], "2.1.6": [{"comment_text": "", "digests": {"md5": "e7766b35ee6e54b98fa92448c0d214c7", "sha256": "36d41051da83a87ff0becf98c34f6e72921f64f0c3a6e0f180bae267e4d87a73"}, "downloads": -1, "filename": "pyvips-2.1.6.tar.gz", "has_sig": false, "md5_digest": "e7766b35ee6e54b98fa92448c0d214c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34372, "upload_time": "2019-05-18T09:02:33", "upload_time_iso_8601": "2019-05-18T09:02:33.491957Z", "url": "https://files.pythonhosted.org/packages/ae/dd/8a223ac12ed4cc5bfe85b81503683bcf4c49804f176cebe13ff28ee88ce3/pyvips-2.1.6.tar.gz", "yanked": false}], "2.1.7": [{"comment_text": "", "digests": {"md5": "aa73cb6b45ab7971295d9f814cd6c04e", "sha256": "41e7c514ab4458b385ff5d4e15b5954ea260d58b6e5773e639ed7187d5a15f58"}, "downloads": -1, "filename": "pyvips-2.1.7.tar.gz", "has_sig": false, "md5_digest": "aa73cb6b45ab7971295d9f814cd6c04e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34367, "upload_time": "2019-07-01T17:30:24", "upload_time_iso_8601": "2019-07-01T17:30:24.518465Z", "url": "https://files.pythonhosted.org/packages/fe/dd/49b514c7a05343677946999b7ab1c63947b68546a12ca62d0d15d1473945/pyvips-2.1.7.tar.gz", "yanked": false}], "2.1.8": [{"comment_text": "", "digests": {"md5": "c18976f5fa6587f940dce0772cd7caa1", "sha256": "8992acde85331c08bf4cd0b8213d99bc65c523fc67eade93820d600de138ad04"}, "downloads": -1, "filename": "pyvips-2.1.8.tar.gz", "has_sig": false, "md5_digest": "c18976f5fa6587f940dce0772cd7caa1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34356, "upload_time": "2019-07-01T19:52:56", "upload_time_iso_8601": "2019-07-01T19:52:56.772671Z", "url": "https://files.pythonhosted.org/packages/07/b1/16e181d3c2d5fa0d009fb73e332a5c5ed2340d48af3ef060edcbd2992f46/pyvips-2.1.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1d9a3a38bf49e84c7d258e1420f54325", "sha256": "84c2f7e31525c2d56813dcfc15344771d90753bfbcc455d63a55c4d7616fe05d"}, "downloads": -1, "filename": "pyvips-2.1.12.tar.gz", "has_sig": false, "md5_digest": "1d9a3a38bf49e84c7d258e1420f54325", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43722, "upload_time": "2020-05-05T16:06:55", "upload_time_iso_8601": "2020-05-05T16:06:55.880027Z", "url": "https://files.pythonhosted.org/packages/b2/72/7aae89781d37f3c20bc9d54bc8154bad700d18760768b2d40b7ff30cc887/pyvips-2.1.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:57 2020"}