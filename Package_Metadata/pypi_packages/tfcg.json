{"info": {"author": "Koji Ono", "author_email": "kbu94982@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.6"], "description": "[![Build Status](https://travis-ci.com/0h-n0/tf_conceptual_graph.svg?token=fnVzZYoHYzREzRx4L8BP&branch=master)](https://travis-ci.com/0h-n0/tf_conceptual_graph)\n# tf_conceptual_graph\n\nCreate tensorflow(1.x) conceptual graph. Conceputual graph is not aimed to reconstruct a neural network. The main purpose of this conceputual graph is for treating a neural network as a heterogeneous graph. Once we can treat neural networks as heterogeneous graphs, we can apply graph neural network methods for them to predict inference results from trained neural networks. From the view point, we can optimize neural network structures.\n\n## Installtion\n\n```shell\n$ pip install tfcg\n```\n## Usage\n\nread a graph_def object from object api(`sess.graph_def`)\n\n```python\nimport numpy as np\nimport tensorflow as tf\n\nimport tfcg\n\nwith tf.Graph().as_default() as graph:\n    model = tf.keras.Sequential()\n    x = np.random.rand(128, 28, 28, 3)\n    model.add(tf.keras.layers.Conv2D(16, 3, input_shape=[28, 28, 3], name='conv1'))\n    model.add(tf.keras.layers.Conv2D(32, 1, name='conv2'))\n    model.add(tf.keras.layers.Conv2D(64, 2, name='conv3'))\n    model.add(tf.keras.layers.Conv2D(128, 2, name='conv4'))\n    model.add(tf.keras.layers.Flatten())\n    model.add(tf.keras.layers.Dense(32, name='dense1'))\n    model.add(tf.keras.layers.ReLU())\n    model.add(tf.keras.layers.Dense(16, name='dense2'))\n    x_p = tf.placeholder(tf.float32, [None, 28, 28, 3], name='input')\n    out_p = model(x_p)\n\n    with tf.Session() as sess:\n        sess.run(tf.global_variables_initializer())\n        o = sess.run(out_p, feed_dict={x_p: x})\n        _ = tf.identity(o, name=\"output\")\n        tf.io.write_graph(sess.graph, './', 'train.pbtxt')\n        parser = tfcg.from_graph_def(sess.graph_def)\n        parser.dump_json(\"conceptual_graph.json\")\n        parser.dump_img(\"output.png\")\n```\n\nread a graph from a file, After dumpping a tensorflow graph file.\n\n```python\nimport tfcg\n\nparser = tfcg.from_file(\"./train.pbtxt\")\nparser.dump_json(\"conceptual_graph.json\")\nmparser.dump_img(\"output.png\")\n```\n\n## [Examples](https://github.com/0h-n0/tf_conceptual_graph/tree/master/examples)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/0h-n0/tf_conceptual_graph", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tfcg", "package_url": "https://pypi.org/project/tfcg/", "platform": "", "project_url": "https://pypi.org/project/tfcg/", "project_urls": {"Homepage": "https://github.com/0h-n0/tf_conceptual_graph"}, "release_url": "https://pypi.org/project/tfcg/0.1.4/", "requires_dist": ["networkx", "google", "sphinx (>=1.4) ; extra == 'docs'", "sphinx-rtd-theme ; extra == 'docs'"], "requires_python": ">3.5", "summary": "tf_conceptual_graph", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.com/0h-n0/tf_conceptual_graph\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a3f2258b15b79989b458e2078b6f44ff3cf97abe/68747470733a2f2f7472617669732d63692e636f6d2f30682d6e302f74665f636f6e6365707475616c5f67726170682e7376673f746f6b656e3d666e567a5a596f48597a52457a5278344c384250266272616e63683d6d6173746572\"></a></p>\n<h1>tf_conceptual_graph</h1>\n<p>Create tensorflow(1.x) conceptual graph. Conceputual graph is not aimed to reconstruct a neural network. The main purpose of this conceputual graph is for treating a neural network as a heterogeneous graph. Once we can treat neural networks as heterogeneous graphs, we can apply graph neural network methods for them to predict inference results from trained neural networks. From the view point, we can optimize neural network structures.</p>\n<h2>Installtion</h2>\n<pre>$ pip install tfcg\n</pre>\n<h2>Usage</h2>\n<p>read a graph_def object from object api(<code>sess.graph_def</code>)</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">tfcg</span>\n\n<span class=\"k\">with</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Graph</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">as_default</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">graph</span><span class=\"p\">:</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">()</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Conv2D</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">input_shape</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'conv1'</span><span class=\"p\">))</span>\n    <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Conv2D</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'conv2'</span><span class=\"p\">))</span>\n    <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Conv2D</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'conv3'</span><span class=\"p\">))</span>\n    <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Conv2D</span><span class=\"p\">(</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'conv4'</span><span class=\"p\">))</span>\n    <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Flatten</span><span class=\"p\">())</span>\n    <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Dense</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'dense1'</span><span class=\"p\">))</span>\n    <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">ReLU</span><span class=\"p\">())</span>\n    <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">keras</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">Dense</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'dense2'</span><span class=\"p\">))</span>\n    <span class=\"n\">x_p</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">placeholder</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'input'</span><span class=\"p\">)</span>\n    <span class=\"n\">out_p</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">x_p</span><span class=\"p\">)</span>\n\n    <span class=\"k\">with</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">sess</span><span class=\"p\">:</span>\n        <span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">global_variables_initializer</span><span class=\"p\">())</span>\n        <span class=\"n\">o</span> <span class=\"o\">=</span> <span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">out_p</span><span class=\"p\">,</span> <span class=\"n\">feed_dict</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">x_p</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">})</span>\n        <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">identity</span><span class=\"p\">(</span><span class=\"n\">o</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"output\"</span><span class=\"p\">)</span>\n        <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">write_graph</span><span class=\"p\">(</span><span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">graph</span><span class=\"p\">,</span> <span class=\"s1\">'./'</span><span class=\"p\">,</span> <span class=\"s1\">'train.pbtxt'</span><span class=\"p\">)</span>\n        <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">tfcg</span><span class=\"o\">.</span><span class=\"n\">from_graph_def</span><span class=\"p\">(</span><span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">graph_def</span><span class=\"p\">)</span>\n        <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">dump_json</span><span class=\"p\">(</span><span class=\"s2\">\"conceptual_graph.json\"</span><span class=\"p\">)</span>\n        <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">dump_img</span><span class=\"p\">(</span><span class=\"s2\">\"output.png\"</span><span class=\"p\">)</span>\n</pre>\n<p>read a graph from a file, After dumpping a tensorflow graph file.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tfcg</span>\n\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">tfcg</span><span class=\"o\">.</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"s2\">\"./train.pbtxt\"</span><span class=\"p\">)</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">dump_json</span><span class=\"p\">(</span><span class=\"s2\">\"conceptual_graph.json\"</span><span class=\"p\">)</span>\n<span class=\"n\">mparser</span><span class=\"o\">.</span><span class=\"n\">dump_img</span><span class=\"p\">(</span><span class=\"s2\">\"output.png\"</span><span class=\"p\">)</span>\n</pre>\n<h2><a href=\"https://github.com/0h-n0/tf_conceptual_graph/tree/master/examples\" rel=\"nofollow\">Examples</a></h2>\n\n          </div>"}, "last_serial": 6644319, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f14a352ddcf176725586fe7b2acc9c2a", "sha256": "97a7e3247ae81ddf6c1f52fb16513c09ca3aa746dd7c7c07c60aaa8bff96f17b"}, "downloads": -1, "filename": "tfcg-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f14a352ddcf176725586fe7b2acc9c2a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">3.5", "size": 3715, "upload_time": "2020-02-16T03:52:35", "upload_time_iso_8601": "2020-02-16T03:52:35.323071Z", "url": "https://files.pythonhosted.org/packages/04/87/ee698fcb0253d2ddf419ece42c256096ef09b68edd98c1ec58d5478ab689/tfcg-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0fd2eb27b2d3638ea21a39727df90be", "sha256": "1aaa76bf478043e4e7097d4985c1f99197873f72e841be8e851d8df51155cb2a"}, "downloads": -1, "filename": "tfcg-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a0fd2eb27b2d3638ea21a39727df90be", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5", "size": 3838, "upload_time": "2020-02-16T03:52:37", "upload_time_iso_8601": "2020-02-16T03:52:37.670687Z", "url": "https://files.pythonhosted.org/packages/16/22/4cf20a5e9b6b06464a3702b219cdf1282f5fa189b3af1456798f3c0f1ef2/tfcg-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "94a981f07962d42da3dc4b5baeb2fed5", "sha256": "7d278867d18b0f76f7d12691f3e5af105546adc0e9573cac9b2b335dbc8be0e4"}, "downloads": -1, "filename": "tfcg-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "94a981f07962d42da3dc4b5baeb2fed5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">3.5", "size": 4094, "upload_time": "2020-02-16T07:13:59", "upload_time_iso_8601": "2020-02-16T07:13:59.309049Z", "url": "https://files.pythonhosted.org/packages/74/15/5d1b1a51201f1f2c867bfbd7e258bdc99cf2567e430479ffb01a362f46cc/tfcg-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54564439951970cfb661c14a6205d517", "sha256": "f9a5aeaf88740947315183352623901d64611a80d7fa0c20f3938358ffd18e9c"}, "downloads": -1, "filename": "tfcg-0.1.1.tar.gz", "has_sig": false, "md5_digest": "54564439951970cfb661c14a6205d517", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5", "size": 4196, "upload_time": "2020-02-16T07:14:00", "upload_time_iso_8601": "2020-02-16T07:14:00.745534Z", "url": "https://files.pythonhosted.org/packages/5c/b0/f4444419b1e26c584fb33d15b446392c3cd84abc5e2038c943e7c80fcdcd/tfcg-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "26dfcd2c0fa8027f6b97c73c3897a679", "sha256": "706fd3dd838a5bffd3e77cab7dcdcc8cf4b1fcc1a72cadeb93928f38e536fa6f"}, "downloads": -1, "filename": "tfcg-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "26dfcd2c0fa8027f6b97c73c3897a679", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">3.5", "size": 4105, "upload_time": "2020-02-17T04:46:29", "upload_time_iso_8601": "2020-02-17T04:46:29.939045Z", "url": "https://files.pythonhosted.org/packages/67/94/657d09c166b361fa454320db851dea7bd781190384265c02bd4f93d7b6de/tfcg-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99a902257ff03c9a0d5ec385917e6ee9", "sha256": "4f1ad3b6264b67fe6e5b3f01f3efb8771681b933a04ba05f10c52aa20cb4dbb4"}, "downloads": -1, "filename": "tfcg-0.1.2.tar.gz", "has_sig": false, "md5_digest": "99a902257ff03c9a0d5ec385917e6ee9", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5", "size": 4196, "upload_time": "2020-02-17T04:46:31", "upload_time_iso_8601": "2020-02-17T04:46:31.364555Z", "url": "https://files.pythonhosted.org/packages/77/1d/d15534a65433cae704d7f658f57cc972f92fc03da9cd10608bcc960917bb/tfcg-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "8973714328814b5cc6572dfb2b1b641f", "sha256": "708a4bff6b69600cd2d4c313b4c4d17fa579cd79b7b98c16f50e4a874a7cd44a"}, "downloads": -1, "filename": "tfcg-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8973714328814b5cc6572dfb2b1b641f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">3.5", "size": 4108, "upload_time": "2020-02-17T04:52:56", "upload_time_iso_8601": "2020-02-17T04:52:56.398169Z", "url": "https://files.pythonhosted.org/packages/6c/c1/d24bf46e50e486bb172b547118be30ff77b1e00d6453e4e37b4c44a930f0/tfcg-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7911988460cce1fe77b745a26fbe204b", "sha256": "49d78a4ca3d2dd34ddec4697ccc8c28fbefcddcf0d6ac20bfc7d744a80a445de"}, "downloads": -1, "filename": "tfcg-0.1.3.tar.gz", "has_sig": false, "md5_digest": "7911988460cce1fe77b745a26fbe204b", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5", "size": 4213, "upload_time": "2020-02-17T04:52:57", "upload_time_iso_8601": "2020-02-17T04:52:57.810065Z", "url": "https://files.pythonhosted.org/packages/c2/7c/60a8daeae1d95b6a1799cf9b313ab394bbcdecd55ffcb07b3dda697bd53f/tfcg-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "60d350a8255c24cb989a1a654ee20e47", "sha256": "00209ee871219c5fb4e9386fa8286e0fe1d07fb312a39cb7594183f3f8025528"}, "downloads": -1, "filename": "tfcg-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "60d350a8255c24cb989a1a654ee20e47", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">3.5", "size": 5121, "upload_time": "2020-02-17T06:45:05", "upload_time_iso_8601": "2020-02-17T06:45:05.593618Z", "url": "https://files.pythonhosted.org/packages/3b/9c/beff8051b75e86ffe1474b2f5f5cd3ebd8fdaca9099f77ec1a01d4de798a/tfcg-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef6ae1a3c7313f120e195861aad79f03", "sha256": "0e477996074b3bc509651eb0d98a37b82846eca016887c4012fa71fb6242c3c3"}, "downloads": -1, "filename": "tfcg-0.1.4.tar.gz", "has_sig": false, "md5_digest": "ef6ae1a3c7313f120e195861aad79f03", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5", "size": 4612, "upload_time": "2020-02-17T06:45:07", "upload_time_iso_8601": "2020-02-17T06:45:07.087489Z", "url": "https://files.pythonhosted.org/packages/ac/7d/17ae7771d1b0b626bc7507794b7b9258d6c12330513e2edecffa0f808ebf/tfcg-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "60d350a8255c24cb989a1a654ee20e47", "sha256": "00209ee871219c5fb4e9386fa8286e0fe1d07fb312a39cb7594183f3f8025528"}, "downloads": -1, "filename": "tfcg-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "60d350a8255c24cb989a1a654ee20e47", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">3.5", "size": 5121, "upload_time": "2020-02-17T06:45:05", "upload_time_iso_8601": "2020-02-17T06:45:05.593618Z", "url": "https://files.pythonhosted.org/packages/3b/9c/beff8051b75e86ffe1474b2f5f5cd3ebd8fdaca9099f77ec1a01d4de798a/tfcg-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef6ae1a3c7313f120e195861aad79f03", "sha256": "0e477996074b3bc509651eb0d98a37b82846eca016887c4012fa71fb6242c3c3"}, "downloads": -1, "filename": "tfcg-0.1.4.tar.gz", "has_sig": false, "md5_digest": "ef6ae1a3c7313f120e195861aad79f03", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5", "size": 4612, "upload_time": "2020-02-17T06:45:07", "upload_time_iso_8601": "2020-02-17T06:45:07.087489Z", "url": "https://files.pythonhosted.org/packages/ac/7d/17ae7771d1b0b626bc7507794b7b9258d6c12330513e2edecffa0f808ebf/tfcg-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:41 2020"}