{"info": {"author": "Pradeep Kumar Rajasekaran", "author_email": "prajasekaran@godaddy.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.11", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "django-snow\n=================\n\n.. image:: https://img.shields.io/pypi/v/django-snow.svg\n   :target: https://pypi.python.org/pypi/django-snow\n   :alt: Latest Version\n\n.. image:: https://travis-ci.org/godaddy/django-snow.svg?branch=master\n   :target: https://travis-ci.org/godaddy/django-snow\n   :alt: Test/build status\n\n.. image:: https://codecov.io/gh/godaddy/django-snow/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/godaddy/django-snow\n   :alt: Code coverage\n\n**django-snow** is a django app to manage ServiceNow tickets from within a django project.\n\nInstallation\n============\n\n::\n\n    pip install django-snow\n\nConfiguration\n=============\n**django-snow** requires the following settings to be set in your Django settings:\n\n* ``SNOW_INSTANCE`` - The ServiceNow instance where the tickets should be created\n* ``SNOW_API_USER`` - The ServiceNow API User\n* ``SNOW_API_PASS`` - The ServiceNow API User's Password\n* ``SNOW_ASSIGNMENT_GROUP`` (Optional) - The group to which the tickets should be assigned.\n  If this is not provided, each call to create the tickets should be provided with an `assignment_group` argument.\n  See the API documentation for more details\n* ``SNOW_DEFAULT_CHANGE_TYPE`` (Optional) - Default Change Request Type. If not provided,\n  `standard` will considered as the default type.\n\nUsage\n=====\n\nCreation\n--------\n``ChangeRequestHandler.create_change_request`` has the following parameters and return value:\n\n**Parameters**\n\n* ``title`` - The title of the change request\n* ``description`` - The description of the change request\n* ``assignment_group`` - The group to which the change request is to be assigned.\n  This is **optional** if ``SNOW_ASSIGNMENT_GROUP`` django settings is available, else, it is **mandatory**\n* ``payload`` (Optional) - The payload for creating the Change Request.\n\n**Returns**\n\n``ChangeRequest`` model - The model created from the created Change Order.\n\n**Example**\n\n.. code-block:: python\n\n    from django_snow.helpers import ChangeRequestHandler\n\n    def change_data(self):\n        co_handler = ChangeRequestHandler()\n        change_request = co_handler.create_change_request('Title', 'Description', 'assignment_group')\n\n\nUpdating\n--------\n``ChangeRequestHandler.update_change_request`` method signature:\n\n**Parameters**\n\n* ``change_request`` - The ``ChangeRequest`` Model\n* ``payload`` - The payload to pass to the ServiceNow REST API.\n\n**Example**\n\n.. code-block:: python\n\n    from django_snow.models import ChangeRequest\n    from django_snow.helpers import ChangeRequestHandler\n\n    def change_data(self):\n        change_request = ChangeRequest.objects.filter(...)\n        co_handler = ChangeRequestHandler()\n\n        payload = {\n                    'description': 'updated description',\n                    'state': ChangeRequest.TICKET_STATE_IN_PROGRESS\n                  }\n\n        co_handler.update_change_request(change_request, payload)\n\n\nClosing\n-------\n``ChangeRequestHandler.close_change_request`` has the following signature:\n\n**Parameters**\n\n* ``change_request`` - The ``ChangeRequest`` Model representing the Change Order to be closed.\n\n**Example**\n\n.. code-block:: python\n\n    from django_snow.models import ChangeRequest\n    from django_snow.helpers import ChangeRequestHandler\n\n    def change_data(self):\n        change_request = ChangeRequest.objects.filter(...)\n        co_handler = ChangeRequestHandler()\n\n        co_handler.close_change_request(change_request)\n\nClosing with error\n------------------\n``ChangeRequestHandler.close_change_request_with_error`` method signature:\n\n**Parameters**\n\n* ``change_request`` - The ``ChangeRequest`` Model representing the Change Order to be closed with error\n* ``payload`` - The payload to pass to the ServiceNow REST API.\n\n**Example**\n\n.. code-block:: python\n\n    from django_snow.models import ChangeRequest\n    from django_snow.helpers import ChangeRequestHandler\n\n    def change_data(self):\n        change_request = ChangeRequest.objects.filter(...)\n        co_handler = ChangeRequestHandler()\n\n        payload = {\n                    'description': 'updated description',\n                    'title': 'foo'\n                  }\n\n        co_handler.close_change_request_with_error(change_request, payload)\n\nModels\n======\n\nChangeRequest\n-------------\nThe ``ChangeRequest`` model has the following attributes:\n\n* ``sys_id`` - The sys_id of the Change Request.\n* ``number`` - Change Request Number.\n* ``title`` - The title of the Change Request a.k.a short_description.\n* ``description`` - Description for the change request\n* ``assignment_group_guid`` - The GUID of the group to which the Change Request is assigned to\n* ``state`` - The State of the Change Request. Can be any one of the following ``ChangeRequest``'s constants:\n\n  * ``TICKET_STATE_OPEN`` - '1'\n  * ``TICKET_STATE_IN_PROGRESS`` - '2'\n  * ``TICKET_STATE_COMPLETE`` - '3'\n  * ``TICKET_STATE_COMPLETE_WITH_ERRORS`` - '4'\n\n\nSupported Ticket Types\n======================\n* Change Requests", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/godaddy/django-snow/archive/master.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/godaddy/django-snow", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-snow", "package_url": "https://pypi.org/project/django-snow/", "platform": "", "project_url": "https://pypi.org/project/django-snow/", "project_urls": {"Download": "https://github.com/godaddy/django-snow/archive/master.tar.gz", "Homepage": "https://github.com/godaddy/django-snow"}, "release_url": "https://pypi.org/project/django-snow/1.2.0/", "requires_dist": null, "requires_python": "", "summary": "Django package for creation of ServiceNow Tickets", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-snow\">\n<h2>django-snow</h2>\n<a href=\"https://pypi.python.org/pypi/django-snow\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf6681de4874934518b6a2c913369ab4edde16e7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d736e6f772e737667\"></a>\n<a href=\"https://travis-ci.org/godaddy/django-snow\" rel=\"nofollow\"><img alt=\"Test/build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df5c6ff6fcb1bedeecccaadaa5f46947dd1b7680/68747470733a2f2f7472617669732d63692e6f72672f676f64616464792f646a616e676f2d736e6f772e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/godaddy/django-snow\" rel=\"nofollow\"><img alt=\"Code coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a82872077cca2319f3ed8c5a8e9b210bf5f16459/68747470733a2f2f636f6465636f762e696f2f67682f676f64616464792f646a616e676f2d736e6f772f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p><strong>django-snow</strong> is a django app to manage ServiceNow tickets from within a django project.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install django-snow\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p><strong>django-snow</strong> requires the following settings to be set in your Django settings:</p>\n<ul>\n<li><tt>SNOW_INSTANCE</tt> - The ServiceNow instance where the tickets should be created</li>\n<li><tt>SNOW_API_USER</tt> - The ServiceNow API User</li>\n<li><tt>SNOW_API_PASS</tt> - The ServiceNow API User\u2019s Password</li>\n<li><tt>SNOW_ASSIGNMENT_GROUP</tt> (Optional) - The group to which the tickets should be assigned.\nIf this is not provided, each call to create the tickets should be provided with an <cite>assignment_group</cite> argument.\nSee the API documentation for more details</li>\n<li><tt>SNOW_DEFAULT_CHANGE_TYPE</tt> (Optional) - Default Change Request Type. If not provided,\n<cite>standard</cite> will considered as the default type.</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"creation\">\n<h3>Creation</h3>\n<p><tt>ChangeRequestHandler.create_change_request</tt> has the following parameters and return value:</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><tt>title</tt> - The title of the change request</li>\n<li><tt>description</tt> - The description of the change request</li>\n<li><tt>assignment_group</tt> - The group to which the change request is to be assigned.\nThis is <strong>optional</strong> if <tt>SNOW_ASSIGNMENT_GROUP</tt> django settings is available, else, it is <strong>mandatory</strong></li>\n<li><tt>payload</tt> (Optional) - The payload for creating the Change Request.</li>\n</ul>\n<p><strong>Returns</strong></p>\n<p><tt>ChangeRequest</tt> model - The model created from the created Change Order.</p>\n<p><strong>Example</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_snow.helpers</span> <span class=\"kn\">import</span> <span class=\"n\">ChangeRequestHandler</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">change_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">co_handler</span> <span class=\"o\">=</span> <span class=\"n\">ChangeRequestHandler</span><span class=\"p\">()</span>\n    <span class=\"n\">change_request</span> <span class=\"o\">=</span> <span class=\"n\">co_handler</span><span class=\"o\">.</span><span class=\"n\">create_change_request</span><span class=\"p\">(</span><span class=\"s1\">'Title'</span><span class=\"p\">,</span> <span class=\"s1\">'Description'</span><span class=\"p\">,</span> <span class=\"s1\">'assignment_group'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"updating\">\n<h3>Updating</h3>\n<p><tt>ChangeRequestHandler.update_change_request</tt> method signature:</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><tt>change_request</tt> - The <tt>ChangeRequest</tt> Model</li>\n<li><tt>payload</tt> - The payload to pass to the ServiceNow REST API.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_snow.models</span> <span class=\"kn\">import</span> <span class=\"n\">ChangeRequest</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_snow.helpers</span> <span class=\"kn\">import</span> <span class=\"n\">ChangeRequestHandler</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">change_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">change_request</span> <span class=\"o\">=</span> <span class=\"n\">ChangeRequest</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n    <span class=\"n\">co_handler</span> <span class=\"o\">=</span> <span class=\"n\">ChangeRequestHandler</span><span class=\"p\">()</span>\n\n    <span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'updated description'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'state'</span><span class=\"p\">:</span> <span class=\"n\">ChangeRequest</span><span class=\"o\">.</span><span class=\"n\">TICKET_STATE_IN_PROGRESS</span>\n              <span class=\"p\">}</span>\n\n    <span class=\"n\">co_handler</span><span class=\"o\">.</span><span class=\"n\">update_change_request</span><span class=\"p\">(</span><span class=\"n\">change_request</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"closing\">\n<h3>Closing</h3>\n<p><tt>ChangeRequestHandler.close_change_request</tt> has the following signature:</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><tt>change_request</tt> - The <tt>ChangeRequest</tt> Model representing the Change Order to be closed.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_snow.models</span> <span class=\"kn\">import</span> <span class=\"n\">ChangeRequest</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_snow.helpers</span> <span class=\"kn\">import</span> <span class=\"n\">ChangeRequestHandler</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">change_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">change_request</span> <span class=\"o\">=</span> <span class=\"n\">ChangeRequest</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n    <span class=\"n\">co_handler</span> <span class=\"o\">=</span> <span class=\"n\">ChangeRequestHandler</span><span class=\"p\">()</span>\n\n    <span class=\"n\">co_handler</span><span class=\"o\">.</span><span class=\"n\">close_change_request</span><span class=\"p\">(</span><span class=\"n\">change_request</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"closing-with-error\">\n<h3>Closing with error</h3>\n<p><tt>ChangeRequestHandler.close_change_request_with_error</tt> method signature:</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><tt>change_request</tt> - The <tt>ChangeRequest</tt> Model representing the Change Order to be closed with error</li>\n<li><tt>payload</tt> - The payload to pass to the ServiceNow REST API.</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_snow.models</span> <span class=\"kn\">import</span> <span class=\"n\">ChangeRequest</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_snow.helpers</span> <span class=\"kn\">import</span> <span class=\"n\">ChangeRequestHandler</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">change_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n    <span class=\"n\">change_request</span> <span class=\"o\">=</span> <span class=\"n\">ChangeRequest</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n    <span class=\"n\">co_handler</span> <span class=\"o\">=</span> <span class=\"n\">ChangeRequestHandler</span><span class=\"p\">()</span>\n\n    <span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"s1\">'updated description'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'foo'</span>\n              <span class=\"p\">}</span>\n\n    <span class=\"n\">co_handler</span><span class=\"o\">.</span><span class=\"n\">close_change_request_with_error</span><span class=\"p\">(</span><span class=\"n\">change_request</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"models\">\n<h2>Models</h2>\n<h2 id=\"changerequest\"><span class=\"section-subtitle\">ChangeRequest</span></h2>\n<p>The <tt>ChangeRequest</tt> model has the following attributes:</p>\n<ul>\n<li><tt>sys_id</tt> - The sys_id of the Change Request.</li>\n<li><tt>number</tt> - Change Request Number.</li>\n<li><tt>title</tt> - The title of the Change Request a.k.a short_description.</li>\n<li><tt>description</tt> - Description for the change request</li>\n<li><tt>assignment_group_guid</tt> - The GUID of the group to which the Change Request is assigned to</li>\n<li><tt>state</tt> - The State of the Change Request. Can be any one of the following <tt>ChangeRequest</tt>\u2019s constants:<ul>\n<li><tt>TICKET_STATE_OPEN</tt> - \u20181\u2019</li>\n<li><tt>TICKET_STATE_IN_PROGRESS</tt> - \u20182\u2019</li>\n<li><tt>TICKET_STATE_COMPLETE</tt> - \u20183\u2019</li>\n<li><tt>TICKET_STATE_COMPLETE_WITH_ERRORS</tt> - \u20184\u2019</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"supported-ticket-types\">\n<h2>Supported Ticket Types</h2>\n<ul>\n<li>Change Requests</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6238068, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "99767e09fbd1796ea784ca9ec564394c", "sha256": "a35f476e8e17670998c042346243c0b21eebdf20741a15ad29614d4e0f4c72c9"}, "downloads": -1, "filename": "django_snow-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "99767e09fbd1796ea784ca9ec564394c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6253, "upload_time": "2017-08-31T21:33:54", "upload_time_iso_8601": "2017-08-31T21:33:54.615224Z", "url": "https://files.pythonhosted.org/packages/c7/23/0c95d15a543e611be46eb28f617ae8fb0fcbab05f8ecfe04d42f24e34d9b/django_snow-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23348534e03c5bebdb9e3e4bf57c665e", "sha256": "330166236d53bb7b2f8d562b31c0a1a0e05de2e80ffcfe1351f8bffc7c00ac41"}, "downloads": -1, "filename": "django-snow-1.0.0.tar.gz", "has_sig": false, "md5_digest": "23348534e03c5bebdb9e3e4bf57c665e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4610, "upload_time": "2017-08-31T21:34:01", "upload_time_iso_8601": "2017-08-31T21:34:01.512022Z", "url": "https://files.pythonhosted.org/packages/d9/03/2f62bb97eb11281d7a00f3ae8b29821b9753ce7f26953daea21e6dda80e4/django-snow-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "307d586670da036d18a9e267e0a5a96d", "sha256": "5e4bddf0578b36a93640fc1d701f17391f5c2676dd9bc9a73f29d15770e555c4"}, "downloads": -1, "filename": "django_snow-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "307d586670da036d18a9e267e0a5a96d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10791, "upload_time": "2017-09-07T23:00:24", "upload_time_iso_8601": "2017-09-07T23:00:24.984267Z", "url": "https://files.pythonhosted.org/packages/31/cb/32d7753214bc01d0a95f5f9e2702f47aaff1e00fcd31945ab2e1e44b84dd/django_snow-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69e8436fc4b2f23fcb43142af8f7de3f", "sha256": "89642a35c5c1e20016f78ccfd2e4011cdaf1fa5195b5696fc4dacc9e7bcff2f8"}, "downloads": -1, "filename": "django-snow-1.0.1.tar.gz", "has_sig": false, "md5_digest": "69e8436fc4b2f23fcb43142af8f7de3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7292, "upload_time": "2017-09-07T23:00:26", "upload_time_iso_8601": "2017-09-07T23:00:26.215513Z", "url": "https://files.pythonhosted.org/packages/cf/ab/15b9974e9e7d9057c2cee50022f6bffe348b5c3e8b508212513656a21552/django-snow-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "7d51250863b9e5aa78fef77a0b53308d", "sha256": "cb6c7a6204a3923d9aee0519baa1c34c088f312f955ae40c5765a217ec52097b"}, "downloads": -1, "filename": "django-snow-1.1.0.tar.gz", "has_sig": false, "md5_digest": "7d51250863b9e5aa78fef77a0b53308d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8097, "upload_time": "2017-11-16T19:19:34", "upload_time_iso_8601": "2017-11-16T19:19:34.700369Z", "url": "https://files.pythonhosted.org/packages/cc/c2/29b4b407e7a6fc597c28c9f39748aec5425eadf739b3f2b98ec445e507e8/django-snow-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "654ea72537410daf3bc5fb3eef2ede5f", "sha256": "13f2dc78469e013b08a12ccba863990e673f7d25d839e88a628df63c3d673138"}, "downloads": -1, "filename": "django-snow-1.2.0.tar.gz", "has_sig": false, "md5_digest": "654ea72537410daf3bc5fb3eef2ede5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9424, "upload_time": "2018-01-30T00:17:12", "upload_time_iso_8601": "2018-01-30T00:17:12.900907Z", "url": "https://files.pythonhosted.org/packages/a8/95/920ad8d7903bcdaa5e6bf11bec6f3d1b6ec1b7989dde36a358d8fee4901b/django-snow-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "654ea72537410daf3bc5fb3eef2ede5f", "sha256": "13f2dc78469e013b08a12ccba863990e673f7d25d839e88a628df63c3d673138"}, "downloads": -1, "filename": "django-snow-1.2.0.tar.gz", "has_sig": false, "md5_digest": "654ea72537410daf3bc5fb3eef2ede5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9424, "upload_time": "2018-01-30T00:17:12", "upload_time_iso_8601": "2018-01-30T00:17:12.900907Z", "url": "https://files.pythonhosted.org/packages/a8/95/920ad8d7903bcdaa5e6bf11bec6f3d1b6ec1b7989dde36a358d8fee4901b/django-snow-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:08 2020"}