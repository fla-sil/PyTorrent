{"info": {"author": "John Carr", "author_email": "john.carr@isotoma.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: System :: Systems Administration"], "description": "===\nYay\n===\n\n.. image:: https://travis-ci.org/yaybu/yay.png\n   :target: https://travis-ci.org/#!/yaybu/yay\n\n.. image:: https://coveralls.io/repos/yaybu/yay/badge.png?branch=master\n    :target: https://coveralls.io/r/yaybu/yay\n\n.. image:: https://pypip.in/v/yay/badge.png\n    :target: https://crate.io/packages/yay/\n\nYay is a non-strict lazily evaluated configuration language. It combines\nYAML-like data declarations with lazy python expressions. We really hope you\nlike this, please let us know if it's useful.\n\nIt works with python 2.6+, 3.2+ and pypy 1.9.\n\nYay is very new software, and although we have tested it a lot it is\ncertainly full of bugs. Please subscribe to the yaybu-dev mailing list, which\nyou can find on http://lists.yaybu.com.\n\nAll documentation can be found at http://yay.readthedocs.org/en/latest/ which\nincludes a tour of the language and an explanation of the grammar.\n\nIf you are interested in this project, you should probably check out Yaybu,\nwhich uses Yay to drive a complete system deployment and management system.\nYou can find Yaybu at http://yaybu.com.\n\nChangelog for yay\n=================\n\n3.1.1 (2013-11-06)\n------------------\n\n- Nothing changed yet.\n\n\n3.1.0 (2013-11-06)\n------------------\n\n- Now supported on python 3.2 and python 3.3 (in addition to 2.6, 2.7 and\n  pypy).\n\n- Many fixes to YAML multiline block mode\n\n- Lots of test coverage improvements\n\n- Remove unnecessary support for Extended Slices\n\n- Command line output is prettier\n\n3.0.1 (2013-09-04)\n------------------\n\n- Nothing changed yet.\n\n\n3.0 (2013-09-04)\n----------------\n\n- This is a full rewrite on top of the ply parsing framework.\n\n\n0.0.62 (2012-09-27)\n-------------------\n\n- Try importing first as it might yield a hit and save checking the internets\n  for things.\n\n\n0.0.61 (2012-09-15)\n-------------------\n\n- An earlier version added validation to stop you replacing lists with mappings\n  or vice versa. However the implementation didn't consider that you might\n  extend a mapping that comes from a lookup.\n\n\n0.0.60 (2012-09-15)\n-------------------\n\n- Fix filter node. It was previously unaware of its parent when expanded and\n  this stopped its children from being able to look up values in the global\n  namespace.\n\n\n0.0.59 (2012-09-01)\n-------------------\n\n- Fix setting GPG_TTY.\n\n\n0.0.58 (2012-08-15)\n-------------------\n\n- Capture GPG failures and throw exceptions. Unfortunately without talking to\n  GPG over the status fd we can't get much information about what went wrong.\n\n- Run in batch mode. This stops GPG from ignoring the stdout/stderr redirection\n  but means you now *MUST* use a GPG agent as it can no longer prompt for a\n  passphrase.\n\n- GPG_TTY is set - this means gpg-agent can actually prompt now.\n\n- Fix ``Config.add`` when using nested dictionaries.\n\n\n0.0.57 (2012-08-02)\n-------------------\n\n- Add new lazy lookup method to the root config object. This is useful if you\n  are building a lazy iterator over a dictionary key::\n\n      def example_iterator(self, expression):\n          try:\n              for item in expression.expand():\n                  resolved = item.resolve()\n                  create_obj_from_settings(resolved)\n          except CreateObjectError:\n              # You can get line and column from the item object!\n          except yay.errors.Error:\n              # Ideal place to wrap Yay errors in your apps exceptions\n\n      example_iterator(config.lookup(\"somekey\"))\n\n  You can see here that the API lets you defer any messy \"key not found\"\n  exceptions until the iterator needs to access they key - and the iterator\n  already has apropriate exception handling.\n\n- Add additional test cases for backwards compatibility\n\n\n0.0.56 (2012-07-31)\n-------------------\n\n- Code paths are now decorated with tracing context. This ``__context__``\n  metadata gives a sense of what yay was doing when it went off the handle.\n\n\n0.0.55 (2012-07-25)\n-------------------\n\n- Fix PackageIndex to not warn() on missing package - we capture this\n  ourselves!\n\n\n0.0.54 (2012-07-22)\n-------------------\n\n- Line number and file information should be available for nodes that have been\n  cloned leading to much more useful error output.\n\n- Index errors on Sequence nodes will be properly dealt with\n\n- Treating a sequence as a mapping node will trigger an appropriate Yay error.\n\n\n0.0.53 (2012-07-21)\n-------------------\n\n- Allow python code using yay to set default configuration for openers\n\n\n0.0.52 (2012-07-21)\n-------------------\n\n- Fix regression in ``package://`` for existing users..\n\n\n0.0.51 (2012-07-19)\n-------------------\n\n- Introduce a lazily evaluated mechanism for expanding the search path::\n\n      .search:\n        - package://some.egg/\n        - http://raw.github.com/isotoma/yay/\n\n  Any subsequent ``.import`` statements will use the modified search path.\n\n- If a package specified either as part of a .include or as part of a .search\n  is not available on sys.path then an attempt will be made to install it.\n\n- Can pass config to opener backends using ``.config``. For example, you might\n  want to have the ``package://`` opener to use your internal package\n  repository::\n\n      .config:\n          openers:\n              packages:\n                  index: https://my-python-mirror/simple/\n                  username: joe\n                  password: penguin55\n\n  You can use variable subsitution and to define the password in a GPG\n  encrypted yay file or to push the variable from application that is using\n  Yay.\n\n- Yay openers support basic auth in the url. If used with .include then use of\n  secrets to concatenate to hide the password is suggsted::\n\n      #\u00a0Define ${password} in a GPG armored file\n      .include: home://.credentials.yay.gpg\n\n      .search:\n        - https://username:${password}@svn.yourcompany.org/svn/cookbook/trunk\n\n- ``.include`` and ``.search`` may be a single scalar value rather than a list\n  if you desire.\n\n\n0.0.50 (2012-07-10)\n-------------------\n\n- Allow expressions to return an empty dictionary::\n\n      result: ${site.vhosts else {}}\n\n\n0.0.49 (2012-06-27)\n-------------------\n\n- Added a string replacement function allowing people to do things like::\n\n      something: jolly good show\n      slug: ${replace(something, \" \", \"-\")}\n\n  thereafter the value of ``slug`` will be ``jolly-good-show``.\n\n\n0.0.48 (2012-04-07)\n-------------------\n\n- Support in operator during foreach::\n\n      result.foreach v in somevalues if v in somelist: ${v}.\n\n\n0.0.47 (2012-04-06)\n-------------------\n\n- Allow expressions to contain literal strings and floats::\n\n      result: ${site.description else \"No description\"}\n      result2: ${3.212121}\n\n- Allow expressions to return an empty list::\n\n      result: ${site.vhosts else []}\n\n- Allow equality checks of undefined keys to pass or fail appropriately without\n  raising a NoMatching exception::\n\n      data:\n        part1:\n          a: 1\n        part2:\n          c: 2\n\n      res1.foreach p in data if data[p].a = 2: ${p}\n      res2.foreach p in data if data[p].c != 1: ${p}\n\n  res1 will be empty as neither part1 nor part2 have an a field with a value of\n  2, and res2 will contain part1 and part2 as neither have a c field wth a\n  value of 1.\n\n- Add an ``undefined`` that raises a NoMatch exception when resolved. This\n  allows one to filter by whether or not a key is present in a mapping.\n\n      data:\n        part1:\n          a: 1\n        part2:\n          c: 2\n\n      res.foreach p in data if data[p].c = undefined: ${p}\n\n  res will contain part1 as part1 doesn't have a c field.\n\n\n0.0.46 (2012-04-04)\n-------------------\n\n- Fix ``else`` expression inside an ``.include``\n\n\n0.0.45 (2012-03-22)\n-------------------\n\n- You can now pass an etag to the open method of ``Openers``. This will throw a\n  NotModified exception if etag matching shows the request URI is unchanged.\n  This can be used to implement caching strategies and reduce the amount of data\n  that yay pulls over network connections::\n\n      >>> from yay.openers import Openers\n      >>> fp = Openers().open(\"/tmp/somefile, etag=\"1234535462356456fa\")\n      NotModified: File '/tmp/somefile' not modified\n\n- All openers will now have an etag property. This property can be None if a\n  suitable etag cannot be provided. Otherwise it should be some hash that\n  guarantees the state of the file so that later requests can just ask \"has it\n  changed since it was in this state\". To get an etag::\n\n        >>> from yay.openers import Openers\n        >>> fp = Openers().open(\"/tmp/somefile\")\n        >>> print fp.etag\n        1234535462356456fa\n\n\n0.0.44 (2012-03-17)\n-------------------\n\n- Fix .select when value that is resolved is a complicated expression.\n\n- Better validation when you accidentally mix up list and mapping types.\n\n\n0.0.43 (2012-02-12)\n-------------------\n\n- Fix handling of paths on searchpath without a scheme.\n\n\n0.0.42 (2012-01-01)\n-------------------\n\n- Change how Django boxing works so that a .bind isn't required for the\n  boxing mechanism to work. This allows raw Django mdoels to be pushed\n  into Yay using the ``.add`` API from 0.0.41.\n\n\n0.0.41 (2011-12-21)\n-------------------\n\n- You can inject Python objects into the Yay Config object, as long as Yay\n  knows how to box them. If you had a Yay file like this::\n\n      hello: abc\n      result: ${hello}\n\n  And the following python code::\n\n      from yay.config import Config\n      c = Config()\n      c.load_uri(example_file)\n      c.add(dict(hello=\"xyx\"))\n\n  Then the following assertion is true::\n\n      c.get() == dict(hello=\"xyz\", result=\"xyz\")\n\n\n0.0.40 (2011-12-13)\n-------------------\n\n- Fixes calling macros defined in other files.\n\n\n0.0.39 (2011-11-30)\n-------------------\n\n- Fix string builder so that configs containing secrets can be pickled.\n\n\n0.0.38 (2011-11-22)\n-------------------\n\n- This is a bugfix release to improve existing features, especially boxing of\n  foreign data.\n\n- Move more code away from direct use of ``Boxed`` to ``BoxingFactory.box``\n\n- Wrap any dictionary objects in a Mapping object so they can be merged with\n  other mappings that come from within Yay.\n\n\n0.0.37 (2011-11-20)\n-------------------\n\n- Brown paper bag release to remove stray print.\n\n\n0.0.36 (2011-11-20)\n-------------------\n\n- There is now a ``home://`` URL handler. For my laptop this means::\n\n      import yay\n      yay.load_uri(\"home://foo/bar.yay\")\n\n  Is equivalent to::\n\n      import yay\n      yay.load_uri(\"/home/john/foo/bar.yay\")\n\n- Improve searchpath handling to better cope with URIs.\n\n- Add support for ``else`` keyword in expressions as per YEP2::\n\n      foo:\n          bar: ${foo.baz else 52}\n\n  This is useful for providing sensible defaults in your recipes.\n\n- The loop block is now autoflattening. This means that constructs that yield\n  lists of lists will be turned into 1-dimensional lists by ``.foreach``. For\n  example::\n\n      somelist:\n        - - - a\n            - b\n          - c\n        - d\n\n      someotherlist.foreach var in somelist: ${var}\n\n  The list ``someotherlist`` would now contain::\n\n      somelist:\n       - a\n       - b\n       - c\n       - d\n\n  The previous behaviour can be obtained with the ``chain`` modifier::\n\n      somelist.foreach var in somelist chain: ${var}\n\n- Add a simple macro language. This is highly EXPERIMENTAL and subject to\n  frequent syntax tweaks. You can define a reusable block of configuration\n  using the .define statement. An example of this in Yaybu to create a reusable\n  virtualenv step::\n\n    .define Virtualenv:\n      - Directory:\n          name: ${venv.location}\n          owner: ${venv.owner}\n      - Execute:\n          name: create-virtualenv-${venv.location}\n          command: virtualenv --no-site-packages ${venv.location}\n          creates: ${venv.location}/bin/pip\n      - Execute:\n          name: install-requirements-${venv.location}\n          command: ${venv.location}/bin/pip install -r ${venv.requirements}\n\n  The macro is callable inline as part of an expression. For example::\n\n    resources.append:\n      .foreach venv in virtualenvs: ${Virtualenv!}\n\n  Equally you can do this::\n\n    .define Virtualenv:\n      - Directory:\n          name: ${location}\n          owner: ${owner}\n    # SNIP\n\n    resources.append:\n        Virtualenv!:\n          location: /tmp/example\n          owner: dave\n          requirements: /tmp/requirements.txt\n\n\n0.0.35 (2011-11-12)\n-------------------\n\n- This release refactors ProtectedString to make it more useful outside Yay.\n  Instead of importing ``yay.protectedstring.ProtectedString`` you should\n  import ``yay.String``\n\n- You can now pass strings to the constructor and they will automatically be\n  wrapped. Previously you had to pass StringPart's to the constructor. That is\n  now an internal implementation detail.\n\n- There is now an extend() function. This accepts lists that contains a mixture\n  of raw strings and other ``String`` objects::\n\n      s = String(\"echo\")\n      y = String(\"supersekritpassword\", secret=True)\n      s.extend([\"a\", \"b\", y, \"d\"])\n\n- There is now an as_list() function. This returns all the parts you have added\n  to a string. This is useful if you are building a command line to pass to\n  subprocess::\n\n      s.String([\"someprogram\", \"--pasword\"])\n      s.add_secret(\"password\")\n\n      # Log the obfuscated version but execute with the real password\n      log.info(s.protected)\n      p = subprocess.Popen(s.as_list(secret=False), cwd=\"/\")\n\n- There is now a ``secret`` call in Yay for exercising secret Yay without\n  needing to use GPG. This is mainly for test purposes, but might be useful if\n  you have strings which arent closely guarded secrets yet you dont want them\n  show in logs. To use it you do something like this::\n\n      resources.append:\n        - Checkout:\n            name: /checkouts/mycode\n            repository: http://github.com/whatever\n            scm_password.secret: mypassword\n\n  This example is from Yaybu and would stop Yaybu from logging your SVN\n  password.\n\n\n0.0.34 (2011-11-10)\n-------------------\n\n- Compose now reuses Opener() rather than creating a new one for each stream\n  loaded.\n\n\n0.0.33 (2011-11-10)\n-------------------\n\n- You can now pass ``searchpath`` to the ``Config`` object.\n\n\n0.0.32 (2011-11-10)\n-------------------\n\n- Working package:// imports\n\n\n0.0.31 (2011-11-10)\n-------------------\n\n- Better absolute path handling\n\n\n0.0.30 (2011-11-10)\n-------------------\n\n- Any stream objects returned by the ``Openers()`` API now have a ``len`` property.\n\n- The internal ``Openers()`` API can now load from any package on the Python path::\n\n    fp = Openers().open(\"package://some.egg/hello.txt\")\n\n\n0.0.29 (2011-11-10)\n-------------------\n\n- The internal ``Openers()`` API now has support for a search path::\n\n    fp = Openers(searchpath=['file:///home/john', 'http://google.com']).open(\"foo.txt\")\n\n- The ``Openers()`` API now supports https://\n\n\n0.0.28 (2011-11-07)\n-------------------\n\n- Fully remove all Mapping default crud\n\n\n0.0.27 (2011-11-03)\n-------------------\n\n- Fix ${django.SomeModel} to properly resolve\n\n\n0.0.26 (2011-11-03)\n-------------------\n\n- Add support for a Django DataStore\n- Allow objects exposed from Python, including simple method calls\n\n\n0.0.25 (2011-10-28)\n-------------------\n\n- Fix regression in .append\n\n\n0.0.24 (2011-10-22)\n-------------------\n\n- Can now foreach over a mapping\n- Add ``.foreach x in y if x.z = a``\n- Add '.with expression as foo:'\n- Add chain and nochain mode to foreach. chain is the default.\n- Major refactoring, context variable is no longer needed to resolve the graph\n- The 'semi_resolve' API is now more correctly named 'expand'\n\n\n0.0.23 (2011-07-26)\n-------------------\n\n- $$ escapes $ - so $${foo} is treated as a string, not a variable lookup\n\n\n0.0.22 (2011-07-19)\n-------------------\n\n- Remove spurious debug messages\n- Fix .import on a .foreach\n\n\n0.0.21 (2011-07-19)\n-------------------\n\n- New .include directive that can use variables and appear anywhere in file\n\n\n0.0.20 (2011-06-29)\n-------------------\n\n- Change ProtectedString to inherit from basestring\n\n\n0.0.19 (2011-06-29)\n-------------------\n\n- Concept of a protected yay file, where any strings that end up containing\n  secrets will be obscured\n- ProtectedString that handles concatenation of protected and unprocted strings\n- GPG used to decrypt .yay.gpg files, any variables they spawn are protected\n\n0.0.18 (2011-06-10)\n-------------------\n\n- Brown paper bag to remove stray debugging scaffold\n\n\n0.0.17 (2011-06-10)\n-------------------\n\n- Fix appending to None\n- Fix list access where list has already been partially resolved\n\n0.0.16 (2011-06-10)\n-------------------\n\n- Add range tests, fixed range() as a ${} expansion\n- Added sum() (but no syntax sugar)\n- Allow index operations against filters\n- Fix iterating over Flatten() nodes\n- Fix iterating over ForEach() nodes\n- Add test for empty documents that got away\n\n0.0.15 (2011-05-18)\n-------------------\n\n- Raise an error if field access is invalid\n- Add a LanguageError for displaying helpful messages when yay files\n  are wrong\n- It is now a bug if we raise an error that doesn't descend from\n  yay.errors.Error\n\n\n0.0.14 (2011-05-12)\n-------------------\n\n- Don't break on empty (e.g. {})\n\n\n0.0.13 (2011-03-06)\n-------------------\n\n- Fix Append nodes\n\n\n0.0.12 (2011-03-03)\n-------------------\n\n- Export that method ;)\n\n\n0.0.11 (2011-03-03)\n-------------------\n\n- Don't be unicode unless needed\n- Add a dump() method\n\n\n0.0.10 (2011-02-22)\n-------------------\n\n- Don't chomp whitespace in bracketed_expression\n\n\n0.0.9 (2011-02-22)\n------------------\n\n- Don't chomp whitespace in templated_string\n\n\n0.0.8 (2011-02-18)\n------------------\n\n- Replace 'foreach bar as foo' with 'foreach foo in bar'\n\n\n0.0.7 (2011-02-16)\n------------------\n\n- Numbers starting 0 are treated as base 8.\n\n\n0.0.6 (2011-02-13)\n------------------\n\n- Avoid unicode mapping keys where possible - they break kwargs in Py2.x\n\n\n0.0.5 (2011-02-09)\n------------------\n\n- Add support for nested foreach\n\n- At least for now, support a ruby style .flatten\n\n\n0.0.4 (2011-02-04)\n------------------\n\n- {foo} can be interpreted as a map by YAML. For now, we will use ${foo} to avoid this\n\n- Function calls to python are implemented - there is now range()\n\n- There is now a foo.select key so switch statements can be used\n\n0.0.3 (2011-01-24)\n------------------\n\n- Egg packaging fixes\n\n\n0.0.2 (2011-01-24)\n------------------\n\n- Lots more unittests for expression evaluation and expression parsing\n\n- Drop dependency on OrderedDict\n\n0.0.1\n-----\n\n- This is still pre-release, no API or language stability guarantees\n\n- Variable resolving is now done in expression tree without a seperate resolve stage\n\n- Uses pyparsing to parse {foo[bar][@.baz > 5]} type syntax\n\n0.0.0\n-----\n\n- This is a pre-alpha release to experiment with what we can and can't do.\n\n- New PyYAML Loader subclass for getting ordered maps without ugly !!omap markup\n\n- Resolves {} markup within YAML nodes\n\n- Lazily evaluates .copy, .append and .remove instructions", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/yay", "keywords": null, "license": "Apache Software License", "maintainer": null, "maintainer_email": null, "name": "yay", "package_url": "https://pypi.org/project/yay/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/yay/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/yay"}, "release_url": "https://pypi.org/project/yay/3.1.1/", "requires_dist": null, "requires_python": null, "summary": "An extensible config file format", "version": "3.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/#!/yaybu/yay\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/yaybu/yay.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb9fd8b49a118340255d23f7f62e6a2e9070fb02/68747470733a2f2f7472617669732d63692e6f72672f79617962752f7961792e706e67\"></a>\n<a href=\"https://coveralls.io/r/yaybu/yay\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/yaybu/yay/badge.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/730d010a4f3e525d8f4dc6f0974c24fa3cfeb922/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f79617962752f7961792f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://crate.io/packages/yay/\" rel=\"nofollow\"><img alt=\"https://pypip.in/v/yay/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d1e88b192b4de40fed751695a150e78f2cdb1ad0/68747470733a2f2f70797069702e696e2f762f7961792f62616467652e706e67\"></a>\n<p>Yay is a non-strict lazily evaluated configuration language. It combines\nYAML-like data declarations with lazy python expressions. We really hope you\nlike this, please let us know if it\u2019s useful.</p>\n<p>It works with python 2.6+, 3.2+ and pypy 1.9.</p>\n<p>Yay is very new software, and although we have tested it a lot it is\ncertainly full of bugs. Please subscribe to the yaybu-dev mailing list, which\nyou can find on <a href=\"http://lists.yaybu.com\" rel=\"nofollow\">http://lists.yaybu.com</a>.</p>\n<p>All documentation can be found at <a href=\"http://yay.readthedocs.org/en/latest/\" rel=\"nofollow\">http://yay.readthedocs.org/en/latest/</a> which\nincludes a tour of the language and an explanation of the grammar.</p>\n<p>If you are interested in this project, you should probably check out Yaybu,\nwhich uses Yay to drive a complete system deployment and management system.\nYou can find Yaybu at <a href=\"http://yaybu.com\" rel=\"nofollow\">http://yaybu.com</a>.</p>\n<div id=\"changelog-for-yay\">\n<h2>Changelog for yay</h2>\n<div id=\"id1\">\n<h3>3.1.1 (2013-11-06)</h3>\n<ul>\n<li>Nothing changed yet.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>3.1.0 (2013-11-06)</h3>\n<ul>\n<li>Now supported on python 3.2 and python 3.3 (in addition to 2.6, 2.7 and\npypy).</li>\n<li>Many fixes to YAML multiline block mode</li>\n<li>Lots of test coverage improvements</li>\n<li>Remove unnecessary support for Extended Slices</li>\n<li>Command line output is prettier</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>3.0.1 (2013-09-04)</h3>\n<ul>\n<li>Nothing changed yet.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>3.0 (2013-09-04)</h3>\n<ul>\n<li>This is a full rewrite on top of the ply parsing framework.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.0.62 (2012-09-27)</h3>\n<ul>\n<li>Try importing first as it might yield a hit and save checking the internets\nfor things.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.0.61 (2012-09-15)</h3>\n<ul>\n<li>An earlier version added validation to stop you replacing lists with mappings\nor vice versa. However the implementation didn\u2019t consider that you might\nextend a mapping that comes from a lookup.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.0.60 (2012-09-15)</h3>\n<ul>\n<li>Fix filter node. It was previously unaware of its parent when expanded and\nthis stopped its children from being able to look up values in the global\nnamespace.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.0.59 (2012-09-01)</h3>\n<ul>\n<li>Fix setting GPG_TTY.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.0.58 (2012-08-15)</h3>\n<ul>\n<li>Capture GPG failures and throw exceptions. Unfortunately without talking to\nGPG over the status fd we can\u2019t get much information about what went wrong.</li>\n<li>Run in batch mode. This stops GPG from ignoring the stdout/stderr redirection\nbut means you now <em>MUST</em> use a GPG agent as it can no longer prompt for a\npassphrase.</li>\n<li>GPG_TTY is set - this means gpg-agent can actually prompt now.</li>\n<li>Fix <tt>Config.add</tt> when using nested dictionaries.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.0.57 (2012-08-02)</h3>\n<ul>\n<li><p>Add new lazy lookup method to the root config object. This is useful if you\nare building a lazy iterator over a dictionary key:</p>\n<pre>def example_iterator(self, expression):\n    try:\n        for item in expression.expand():\n            resolved = item.resolve()\n            create_obj_from_settings(resolved)\n    except CreateObjectError:\n        # You can get line and column from the item object!\n    except yay.errors.Error:\n        # Ideal place to wrap Yay errors in your apps exceptions\n\nexample_iterator(config.lookup(\"somekey\"))\n</pre>\n<p>You can see here that the API lets you defer any messy \u201ckey not found\u201d\nexceptions until the iterator needs to access they key - and the iterator\nalready has apropriate exception handling.</p>\n</li>\n<li><p>Add additional test cases for backwards compatibility</p>\n</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.0.56 (2012-07-31)</h3>\n<ul>\n<li>Code paths are now decorated with tracing context. This <tt>__context__</tt>\nmetadata gives a sense of what yay was doing when it went off the handle.</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.0.55 (2012-07-25)</h3>\n<ul>\n<li>Fix PackageIndex to not warn() on missing package - we capture this\nourselves!</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.0.54 (2012-07-22)</h3>\n<ul>\n<li>Line number and file information should be available for nodes that have been\ncloned leading to much more useful error output.</li>\n<li>Index errors on Sequence nodes will be properly dealt with</li>\n<li>Treating a sequence as a mapping node will trigger an appropriate Yay error.</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.0.53 (2012-07-21)</h3>\n<ul>\n<li>Allow python code using yay to set default configuration for openers</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.0.52 (2012-07-21)</h3>\n<ul>\n<li>Fix regression in <tt><span class=\"pre\">package://</span></tt> for existing users..</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>0.0.51 (2012-07-19)</h3>\n<ul>\n<li><p>Introduce a lazily evaluated mechanism for expanding the search path:</p>\n<pre>.search:\n  - package://some.egg/\n  - http://raw.github.com/isotoma/yay/\n</pre>\n<p>Any subsequent <tt>.import</tt> statements will use the modified search path.</p>\n</li>\n<li><p>If a package specified either as part of a .include or as part of a .search\nis not available on sys.path then an attempt will be made to install it.</p>\n</li>\n<li><p>Can pass config to opener backends using <tt>.config</tt>. For example, you might\nwant to have the <tt><span class=\"pre\">package://</span></tt> opener to use your internal package\nrepository:</p>\n<pre>.config:\n    openers:\n        packages:\n            index: https://my-python-mirror/simple/\n            username: joe\n            password: penguin55\n</pre>\n<p>You can use variable subsitution and to define the password in a GPG\nencrypted yay file or to push the variable from application that is using\nYay.</p>\n</li>\n<li><p>Yay openers support basic auth in the url. If used with .include then use of\nsecrets to concatenate to hide the password is suggsted:</p>\n<pre>#\u00a0Define ${password} in a GPG armored file\n.include: home://.credentials.yay.gpg\n\n.search:\n  - https://username:${password}@svn.yourcompany.org/svn/cookbook/trunk\n</pre>\n</li>\n<li><p><tt>.include</tt> and <tt>.search</tt> may be a single scalar value rather than a list\nif you desire.</p>\n</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>0.0.50 (2012-07-10)</h3>\n<ul>\n<li><p>Allow expressions to return an empty dictionary:</p>\n<pre>result: ${site.vhosts else {}}\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>0.0.49 (2012-06-27)</h3>\n<ul>\n<li><p>Added a string replacement function allowing people to do things like:</p>\n<pre>something: jolly good show\nslug: ${replace(something, \" \", \"-\")}\n</pre>\n<p>thereafter the value of <tt>slug</tt> will be <tt><span class=\"pre\">jolly-good-show</span></tt>.</p>\n</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>0.0.48 (2012-04-07)</h3>\n<ul>\n<li><p>Support in operator during foreach:</p>\n<pre>result.foreach v in somevalues if v in somelist: ${v}.\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3>0.0.47 (2012-04-06)</h3>\n<ul>\n<li><p>Allow expressions to contain literal strings and floats:</p>\n<pre>result: ${site.description else \"No description\"}\nresult2: ${3.212121}\n</pre>\n</li>\n<li><p>Allow expressions to return an empty list:</p>\n<pre>result: ${site.vhosts else []}\n</pre>\n</li>\n<li><p>Allow equality checks of undefined keys to pass or fail appropriately without\nraising a NoMatching exception:</p>\n<pre>data:\n  part1:\n    a: 1\n  part2:\n    c: 2\n\nres1.foreach p in data if data[p].a = 2: ${p}\nres2.foreach p in data if data[p].c != 1: ${p}\n</pre>\n<p>res1 will be empty as neither part1 nor part2 have an a field with a value of\n2, and res2 will contain part1 and part2 as neither have a c field wth a\nvalue of 1.</p>\n</li>\n<li><p>Add an <tt>undefined</tt> that raises a NoMatch exception when resolved. This\nallows one to filter by whether or not a key is present in a mapping.</p>\n<blockquote>\n<dl>\n<dt>data:</dt>\n<dd><dl>\n<dt>part1:</dt>\n<dd><p>a: 1</p>\n</dd>\n<dt>part2:</dt>\n<dd><p>c: 2</p>\n</dd>\n</dl>\n</dd>\n</dl>\n<p>res.foreach p in data if data[p].c = undefined: ${p}</p>\n</blockquote>\n<p>res will contain part1 as part1 doesn\u2019t have a c field.</p>\n</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3>0.0.46 (2012-04-04)</h3>\n<ul>\n<li>Fix <tt>else</tt> expression inside an <tt>.include</tt></li>\n</ul>\n</div>\n<div id=\"id22\">\n<h3>0.0.45 (2012-03-22)</h3>\n<ul>\n<li><p>You can now pass an etag to the open method of <tt>Openers</tt>. This will throw a\nNotModified exception if etag matching shows the request URI is unchanged.\nThis can be used to implement caching strategies and reduce the amount of data\nthat yay pulls over network connections:</p>\n<pre>&gt;&gt;&gt; from yay.openers import Openers\n&gt;&gt;&gt; fp = Openers().open(\"/tmp/somefile, etag=\"1234535462356456fa\")\nNotModified: File '/tmp/somefile' not modified\n</pre>\n</li>\n<li><p>All openers will now have an etag property. This property can be None if a\nsuitable etag cannot be provided. Otherwise it should be some hash that\nguarantees the state of the file so that later requests can just ask \u201chas it\nchanged since it was in this state\u201d. To get an etag:</p>\n<pre>&gt;&gt;&gt; from yay.openers import Openers\n&gt;&gt;&gt; fp = Openers().open(\"/tmp/somefile\")\n&gt;&gt;&gt; print fp.etag\n1234535462356456fa\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3>0.0.44 (2012-03-17)</h3>\n<ul>\n<li>Fix .select when value that is resolved is a complicated expression.</li>\n<li>Better validation when you accidentally mix up list and mapping types.</li>\n</ul>\n</div>\n<div id=\"id24\">\n<h3>0.0.43 (2012-02-12)</h3>\n<ul>\n<li>Fix handling of paths on searchpath without a scheme.</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h3>0.0.42 (2012-01-01)</h3>\n<ul>\n<li>Change how Django boxing works so that a .bind isn\u2019t required for the\nboxing mechanism to work. This allows raw Django mdoels to be pushed\ninto Yay using the <tt>.add</tt> API from 0.0.41.</li>\n</ul>\n</div>\n<div id=\"id26\">\n<h3>0.0.41 (2011-12-21)</h3>\n<ul>\n<li><p>You can inject Python objects into the Yay Config object, as long as Yay\nknows how to box them. If you had a Yay file like this:</p>\n<pre>hello: abc\nresult: ${hello}\n</pre>\n<p>And the following python code:</p>\n<pre>from yay.config import Config\nc = Config()\nc.load_uri(example_file)\nc.add(dict(hello=\"xyx\"))\n</pre>\n<p>Then the following assertion is true:</p>\n<pre>c.get() == dict(hello=\"xyz\", result=\"xyz\")\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"id27\">\n<h3>0.0.40 (2011-12-13)</h3>\n<ul>\n<li>Fixes calling macros defined in other files.</li>\n</ul>\n</div>\n<div id=\"id28\">\n<h3>0.0.39 (2011-11-30)</h3>\n<ul>\n<li>Fix string builder so that configs containing secrets can be pickled.</li>\n</ul>\n</div>\n<div id=\"id29\">\n<h3>0.0.38 (2011-11-22)</h3>\n<ul>\n<li>This is a bugfix release to improve existing features, especially boxing of\nforeign data.</li>\n<li>Move more code away from direct use of <tt>Boxed</tt> to <tt>BoxingFactory.box</tt></li>\n<li>Wrap any dictionary objects in a Mapping object so they can be merged with\nother mappings that come from within Yay.</li>\n</ul>\n</div>\n<div id=\"id30\">\n<h3>0.0.37 (2011-11-20)</h3>\n<ul>\n<li>Brown paper bag release to remove stray print.</li>\n</ul>\n</div>\n<div id=\"id31\">\n<h3>0.0.36 (2011-11-20)</h3>\n<ul>\n<li><p>There is now a <tt><span class=\"pre\">home://</span></tt> URL handler. For my laptop this means:</p>\n<pre>import yay\nyay.load_uri(\"home://foo/bar.yay\")\n</pre>\n<p>Is equivalent to:</p>\n<pre>import yay\nyay.load_uri(\"/home/john/foo/bar.yay\")\n</pre>\n</li>\n<li><p>Improve searchpath handling to better cope with URIs.</p>\n</li>\n<li><p>Add support for <tt>else</tt> keyword in expressions as per YEP2:</p>\n<pre>foo:\n    bar: ${foo.baz else 52}\n</pre>\n<p>This is useful for providing sensible defaults in your recipes.</p>\n</li>\n<li><p>The loop block is now autoflattening. This means that constructs that yield\nlists of lists will be turned into 1-dimensional lists by <tt>.foreach</tt>. For\nexample:</p>\n<pre>somelist:\n  - - - a\n      - b\n    - c\n  - d\n\nsomeotherlist.foreach var in somelist: ${var}\n</pre>\n<p>The list <tt>someotherlist</tt> would now contain:</p>\n<pre>somelist:\n - a\n - b\n - c\n - d\n</pre>\n<p>The previous behaviour can be obtained with the <tt>chain</tt> modifier:</p>\n<pre>somelist.foreach var in somelist chain: ${var}\n</pre>\n</li>\n<li><p>Add a simple macro language. This is highly EXPERIMENTAL and subject to\nfrequent syntax tweaks. You can define a reusable block of configuration\nusing the .define statement. An example of this in Yaybu to create a reusable\nvirtualenv step:</p>\n<pre>.define Virtualenv:\n  - Directory:\n      name: ${venv.location}\n      owner: ${venv.owner}\n  - Execute:\n      name: create-virtualenv-${venv.location}\n      command: virtualenv --no-site-packages ${venv.location}\n      creates: ${venv.location}/bin/pip\n  - Execute:\n      name: install-requirements-${venv.location}\n      command: ${venv.location}/bin/pip install -r ${venv.requirements}\n</pre>\n<p>The macro is callable inline as part of an expression. For example:</p>\n<pre>resources.append:\n  .foreach venv in virtualenvs: ${Virtualenv!}\n</pre>\n<p>Equally you can do this:</p>\n<pre>.define Virtualenv:\n  - Directory:\n      name: ${location}\n      owner: ${owner}\n# SNIP\n\nresources.append:\n    Virtualenv!:\n      location: /tmp/example\n      owner: dave\n      requirements: /tmp/requirements.txt\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"id32\">\n<h3>0.0.35 (2011-11-12)</h3>\n<ul>\n<li><p>This release refactors ProtectedString to make it more useful outside Yay.\nInstead of importing <tt>yay.protectedstring.ProtectedString</tt> you should\nimport <tt>yay.String</tt></p>\n</li>\n<li><p>You can now pass strings to the constructor and they will automatically be\nwrapped. Previously you had to pass StringPart\u2019s to the constructor. That is\nnow an internal implementation detail.</p>\n</li>\n<li><p>There is now an extend() function. This accepts lists that contains a mixture\nof raw strings and other <tt>String</tt> objects:</p>\n<pre>s = String(\"echo\")\ny = String(\"supersekritpassword\", secret=True)\ns.extend([\"a\", \"b\", y, \"d\"])\n</pre>\n</li>\n<li><p>There is now an as_list() function. This returns all the parts you have added\nto a string. This is useful if you are building a command line to pass to\nsubprocess:</p>\n<pre>s.String([\"someprogram\", \"--pasword\"])\ns.add_secret(\"password\")\n\n# Log the obfuscated version but execute with the real password\nlog.info(s.protected)\np = subprocess.Popen(s.as_list(secret=False), cwd=\"/\")\n</pre>\n</li>\n<li><p>There is now a <tt>secret</tt> call in Yay for exercising secret Yay without\nneeding to use GPG. This is mainly for test purposes, but might be useful if\nyou have strings which arent closely guarded secrets yet you dont want them\nshow in logs. To use it you do something like this:</p>\n<pre>resources.append:\n  - Checkout:\n      name: /checkouts/mycode\n      repository: http://github.com/whatever\n      scm_password.secret: mypassword\n</pre>\n<p>This example is from Yaybu and would stop Yaybu from logging your SVN\npassword.</p>\n</li>\n</ul>\n</div>\n<div id=\"id33\">\n<h3>0.0.34 (2011-11-10)</h3>\n<ul>\n<li>Compose now reuses Opener() rather than creating a new one for each stream\nloaded.</li>\n</ul>\n</div>\n<div id=\"id34\">\n<h3>0.0.33 (2011-11-10)</h3>\n<ul>\n<li>You can now pass <tt>searchpath</tt> to the <tt>Config</tt> object.</li>\n</ul>\n</div>\n<div id=\"id35\">\n<h3>0.0.32 (2011-11-10)</h3>\n<ul>\n<li>Working package:// imports</li>\n</ul>\n</div>\n<div id=\"id36\">\n<h3>0.0.31 (2011-11-10)</h3>\n<ul>\n<li>Better absolute path handling</li>\n</ul>\n</div>\n<div id=\"id37\">\n<h3>0.0.30 (2011-11-10)</h3>\n<ul>\n<li><p>Any stream objects returned by the <tt>Openers()</tt> API now have a <tt>len</tt> property.</p>\n</li>\n<li><p>The internal <tt>Openers()</tt> API can now load from any package on the Python path:</p>\n<pre>fp = Openers().open(\"package://some.egg/hello.txt\")\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"id38\">\n<h3>0.0.29 (2011-11-10)</h3>\n<ul>\n<li><p>The internal <tt>Openers()</tt> API now has support for a search path:</p>\n<pre>fp = Openers(searchpath=['file:///home/john', 'http://google.com']).open(\"foo.txt\")\n</pre>\n</li>\n<li><p>The <tt>Openers()</tt> API now supports <a href=\"https://\" rel=\"nofollow\">https://</a></p>\n</li>\n</ul>\n</div>\n<div id=\"id39\">\n<h3>0.0.28 (2011-11-07)</h3>\n<ul>\n<li>Fully remove all Mapping default crud</li>\n</ul>\n</div>\n<div id=\"id40\">\n<h3>0.0.27 (2011-11-03)</h3>\n<ul>\n<li>Fix ${django.SomeModel} to properly resolve</li>\n</ul>\n</div>\n<div id=\"id41\">\n<h3>0.0.26 (2011-11-03)</h3>\n<ul>\n<li>Add support for a Django DataStore</li>\n<li>Allow objects exposed from Python, including simple method calls</li>\n</ul>\n</div>\n<div id=\"id42\">\n<h3>0.0.25 (2011-10-28)</h3>\n<ul>\n<li>Fix regression in .append</li>\n</ul>\n</div>\n<div id=\"id43\">\n<h3>0.0.24 (2011-10-22)</h3>\n<ul>\n<li>Can now foreach over a mapping</li>\n<li>Add <tt>.foreach x in y if x.z = a</tt></li>\n<li>Add \u2018.with expression as foo:\u2019</li>\n<li>Add chain and nochain mode to foreach. chain is the default.</li>\n<li>Major refactoring, context variable is no longer needed to resolve the graph</li>\n<li>The \u2018semi_resolve\u2019 API is now more correctly named \u2018expand\u2019</li>\n</ul>\n</div>\n<div id=\"id44\">\n<h3>0.0.23 (2011-07-26)</h3>\n<ul>\n<li>$$ escapes $ - so $${foo} is treated as a string, not a variable lookup</li>\n</ul>\n</div>\n<div id=\"id45\">\n<h3>0.0.22 (2011-07-19)</h3>\n<ul>\n<li>Remove spurious debug messages</li>\n<li>Fix .import on a .foreach</li>\n</ul>\n</div>\n<div id=\"id46\">\n<h3>0.0.21 (2011-07-19)</h3>\n<ul>\n<li>New .include directive that can use variables and appear anywhere in file</li>\n</ul>\n</div>\n<div id=\"id47\">\n<h3>0.0.20 (2011-06-29)</h3>\n<ul>\n<li>Change ProtectedString to inherit from basestring</li>\n</ul>\n</div>\n<div id=\"id48\">\n<h3>0.0.19 (2011-06-29)</h3>\n<ul>\n<li>Concept of a protected yay file, where any strings that end up containing\nsecrets will be obscured</li>\n<li>ProtectedString that handles concatenation of protected and unprocted strings</li>\n<li>GPG used to decrypt .yay.gpg files, any variables they spawn are protected</li>\n</ul>\n</div>\n<div id=\"id49\">\n<h3>0.0.18 (2011-06-10)</h3>\n<ul>\n<li>Brown paper bag to remove stray debugging scaffold</li>\n</ul>\n</div>\n<div id=\"id50\">\n<h3>0.0.17 (2011-06-10)</h3>\n<ul>\n<li>Fix appending to None</li>\n<li>Fix list access where list has already been partially resolved</li>\n</ul>\n</div>\n<div id=\"id51\">\n<h3>0.0.16 (2011-06-10)</h3>\n<ul>\n<li>Add range tests, fixed range() as a ${} expansion</li>\n<li>Added sum() (but no syntax sugar)</li>\n<li>Allow index operations against filters</li>\n<li>Fix iterating over Flatten() nodes</li>\n<li>Fix iterating over ForEach() nodes</li>\n<li>Add test for empty documents that got away</li>\n</ul>\n</div>\n<div id=\"id52\">\n<h3>0.0.15 (2011-05-18)</h3>\n<ul>\n<li>Raise an error if field access is invalid</li>\n<li>Add a LanguageError for displaying helpful messages when yay files\nare wrong</li>\n<li>It is now a bug if we raise an error that doesn\u2019t descend from\nyay.errors.Error</li>\n</ul>\n</div>\n<div id=\"id53\">\n<h3>0.0.14 (2011-05-12)</h3>\n<ul>\n<li>Don\u2019t break on empty (e.g. {})</li>\n</ul>\n</div>\n<div id=\"id54\">\n<h3>0.0.13 (2011-03-06)</h3>\n<ul>\n<li>Fix Append nodes</li>\n</ul>\n</div>\n<div id=\"id55\">\n<h3>0.0.12 (2011-03-03)</h3>\n<ul>\n<li>Export that method ;)</li>\n</ul>\n</div>\n<div id=\"id56\">\n<h3>0.0.11 (2011-03-03)</h3>\n<ul>\n<li>Don\u2019t be unicode unless needed</li>\n<li>Add a dump() method</li>\n</ul>\n</div>\n<div id=\"id57\">\n<h3>0.0.10 (2011-02-22)</h3>\n<ul>\n<li>Don\u2019t chomp whitespace in bracketed_expression</li>\n</ul>\n</div>\n<div id=\"id58\">\n<h3>0.0.9 (2011-02-22)</h3>\n<ul>\n<li>Don\u2019t chomp whitespace in templated_string</li>\n</ul>\n</div>\n<div id=\"id59\">\n<h3>0.0.8 (2011-02-18)</h3>\n<ul>\n<li>Replace \u2018foreach bar as foo\u2019 with \u2018foreach foo in bar\u2019</li>\n</ul>\n</div>\n<div id=\"id60\">\n<h3>0.0.7 (2011-02-16)</h3>\n<ul>\n<li>Numbers starting 0 are treated as base 8.</li>\n</ul>\n</div>\n<div id=\"id61\">\n<h3>0.0.6 (2011-02-13)</h3>\n<ul>\n<li>Avoid unicode mapping keys where possible - they break kwargs in Py2.x</li>\n</ul>\n</div>\n<div id=\"id62\">\n<h3>0.0.5 (2011-02-09)</h3>\n<ul>\n<li>Add support for nested foreach</li>\n<li>At least for now, support a ruby style .flatten</li>\n</ul>\n</div>\n<div id=\"id63\">\n<h3>0.0.4 (2011-02-04)</h3>\n<ul>\n<li>{foo} can be interpreted as a map by YAML. For now, we will use ${foo} to avoid this</li>\n<li>Function calls to python are implemented - there is now range()</li>\n<li>There is now a foo.select key so switch statements can be used</li>\n</ul>\n</div>\n<div id=\"id64\">\n<h3>0.0.3 (2011-01-24)</h3>\n<ul>\n<li>Egg packaging fixes</li>\n</ul>\n</div>\n<div id=\"id65\">\n<h3>0.0.2 (2011-01-24)</h3>\n<ul>\n<li>Lots more unittests for expression evaluation and expression parsing</li>\n<li>Drop dependency on OrderedDict</li>\n</ul>\n</div>\n<div id=\"id66\">\n<h3>0.0.1</h3>\n<ul>\n<li>This is still pre-release, no API or language stability guarantees</li>\n<li>Variable resolving is now done in expression tree without a seperate resolve stage</li>\n<li>Uses pyparsing to parse {foo[bar][@.baz &gt; 5]} type syntax</li>\n</ul>\n</div>\n<div id=\"id67\">\n<h3>0.0.0</h3>\n<ul>\n<li>This is a pre-alpha release to experiment with what we can and can\u2019t do.</li>\n<li>New PyYAML Loader subclass for getting ordered maps without ugly !!omap markup</li>\n<li>Resolves {} markup within YAML nodes</li>\n<li>Lazily evaluates .copy, .append and .remove instructions</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 912348, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "3d8480f0575369ba7b8f3f576ee62259", "sha256": "2edfa4d1da70f6047a4a615c922e7fc82c424dd197cd6fcc3588012240b91f92"}, "downloads": -1, "filename": "yay-0.0.0.tar.gz", "has_sig": false, "md5_digest": "3d8480f0575369ba7b8f3f576ee62259", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7167, "upload_time": "2011-01-05T15:29:09", "upload_time_iso_8601": "2011-01-05T15:29:09.152097Z", "url": "https://files.pythonhosted.org/packages/3f/6a/727190444cbb15d5b50d2ad4224f2df38c250db0f216805811ac463b6e07/yay-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "6c6fe3dcc9ec59974ea2df5c8d79ab11", "sha256": "59b97e386fa1f1ce0982ef1aa7a153e6685e5ad33b50212b6cc707a18efe1159"}, "downloads": -1, "filename": "yay-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6c6fe3dcc9ec59974ea2df5c8d79ab11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43287, "upload_time": "2011-01-20T23:27:18", "upload_time_iso_8601": "2011-01-20T23:27:18.055986Z", "url": "https://files.pythonhosted.org/packages/66/0b/95952c790532538a9435bc0b67e5160170a271b859d65312a90691cf54ca/yay-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "bdae0b46f90503392a023b805aba83a4", "sha256": "1bf6d331e879b291b31d973517ec89dde37a05f831fce489c8ae312547ce05fd"}, "downloads": -1, "filename": "yay-0.0.10.tar.gz", "has_sig": false, "md5_digest": "bdae0b46f90503392a023b805aba83a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48622, "upload_time": "2011-02-22T19:01:04", "upload_time_iso_8601": "2011-02-22T19:01:04.332367Z", "url": "https://files.pythonhosted.org/packages/5d/f5/e5f76f614459e56dd047b9105c2e0c66de8567a4ae2e74c807621eb0e8fc/yay-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "c05844f793d5176df36b6a81e6e55cdf", "sha256": "71eb4368060dc5342bc1e0db952cae0bd385037eb7093ad4e80bde286c79a47f"}, "downloads": -1, "filename": "yay-0.0.11.tar.gz", "has_sig": false, "md5_digest": "c05844f793d5176df36b6a81e6e55cdf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49303, "upload_time": "2011-03-03T01:26:36", "upload_time_iso_8601": "2011-03-03T01:26:36.040509Z", "url": "https://files.pythonhosted.org/packages/f8/d6/e298e36214fd66d2c347076f857ae69358f958a675ed69077ad113e7d213/yay-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "0dafc4d56e26161ce8459cb8f8c3ad3f", "sha256": "d7be4d5acacf4e37929c4d2406f3b9aba0c5e1fc999f839b21b7bd67463161c0"}, "downloads": -1, "filename": "yay-0.0.12.tar.gz", "has_sig": false, "md5_digest": "0dafc4d56e26161ce8459cb8f8c3ad3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49354, "upload_time": "2011-03-03T01:29:19", "upload_time_iso_8601": "2011-03-03T01:29:19.882662Z", "url": "https://files.pythonhosted.org/packages/b9/42/c71749068581774ec40d300b4043a187f80549e7d3cf98a8025eb5a0a4fa/yay-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "4f2d022dd9847a00ba7807d1f3a9bd89", "sha256": "d1f8379d58e3de40414b7782a2a9acaa65f3ae0bb4d477e2f00e350017168366"}, "downloads": -1, "filename": "yay-0.0.13.tar.gz", "has_sig": false, "md5_digest": "4f2d022dd9847a00ba7807d1f3a9bd89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49072, "upload_time": "2011-03-06T14:31:19", "upload_time_iso_8601": "2011-03-06T14:31:19.455878Z", "url": "https://files.pythonhosted.org/packages/a8/c7/012d9dc097dc8d0d3c3e734944c3c345f37e6e81ce9ec77809d99e526aa6/yay-0.0.13.tar.gz", "yanked": false}], "0.0.13dev": [], "0.0.14": [{"comment_text": "", "digests": {"md5": "5ddc785b36e2b0ede2b65dab0f233656", "sha256": "44e29af5145b55ab449c272192a8dd80fee9d9fd774cea5a4cea6d3ff0d48264"}, "downloads": -1, "filename": "yay-0.0.14.tar.gz", "has_sig": false, "md5_digest": "5ddc785b36e2b0ede2b65dab0f233656", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49139, "upload_time": "2011-05-12T09:48:34", "upload_time_iso_8601": "2011-05-12T09:48:34.787337Z", "url": "https://files.pythonhosted.org/packages/a2/89/15344f67b5465974025b5d8e7954a1f189f9cb1c23e006e8090b9390eb5a/yay-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "0516e632f8bff87658569e3e397dec7f", "sha256": "eece2028945c60fc786bb5f3ca111d700d0725517c557f2afc03f3ce3e5d69e8"}, "downloads": -1, "filename": "yay-0.0.15.tar.gz", "has_sig": false, "md5_digest": "0516e632f8bff87658569e3e397dec7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49213, "upload_time": "2011-05-18T22:28:12", "upload_time_iso_8601": "2011-05-18T22:28:12.425454Z", "url": "https://files.pythonhosted.org/packages/91/9d/de7860fdf3f339d2663e0568d6bb71cfb80e3f276021c346515e0c9871e0/yay-0.0.15.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "97555468cd0dccbe01080ed083a83a79", "sha256": "ff1c328c7610b04724f6d762fe69b533b8724878358cc1bd8e01d68afb3866ac"}, "downloads": -1, "filename": "yay-0.0.16.zip", "has_sig": false, "md5_digest": "97555468cd0dccbe01080ed083a83a79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75960, "upload_time": "2011-06-10T12:05:23", "upload_time_iso_8601": "2011-06-10T12:05:23.829232Z", "url": "https://files.pythonhosted.org/packages/01/27/e2dce6f2eae10627139bea21b390400bbd8ec0c91b6e751d2efa1097633a/yay-0.0.16.zip", "yanked": false}], "0.0.17": [{"comment_text": "", "digests": {"md5": "ecd0321ac654d201db317f34b8c76b4f", "sha256": "6af30092250ba27fb831b8371ce653e6abe8256070d1a5edbf97b86413d289a0"}, "downloads": -1, "filename": "yay-0.0.17.zip", "has_sig": false, "md5_digest": "ecd0321ac654d201db317f34b8c76b4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77043, "upload_time": "2011-06-10T13:15:28", "upload_time_iso_8601": "2011-06-10T13:15:28.509830Z", "url": "https://files.pythonhosted.org/packages/41/78/e7153ba50fff7a63d62d66b6c52b089326c9f3703fe60e1b89cd6867219d/yay-0.0.17.zip", "yanked": false}], "0.0.18": [{"comment_text": "", "digests": {"md5": "d574803cb23d5d852966f767581e5adb", "sha256": "14772c2eece5e02bc0567e1f8de597ef4c8749927145295801cf3169d6fa902f"}, "downloads": -1, "filename": "yay-0.0.18.zip", "has_sig": false, "md5_digest": "d574803cb23d5d852966f767581e5adb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77143, "upload_time": "2011-06-10T15:08:55", "upload_time_iso_8601": "2011-06-10T15:08:55.508764Z", "url": "https://files.pythonhosted.org/packages/c1/7c/8b312b0c33c9be307540b8737af80ddf0356c3d7aa92a5813e11b219e19b/yay-0.0.18.zip", "yanked": false}], "0.0.19": [{"comment_text": "", "digests": {"md5": "30e0831bbff0a376a40aac0a79e600a1", "sha256": "472f71aeb84988f975ad53e698d568093ef8d17d38a8e9ccd0ac3cea203e2b64"}, "downloads": -1, "filename": "yay-0.0.19.zip", "has_sig": false, "md5_digest": "30e0831bbff0a376a40aac0a79e600a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79659, "upload_time": "2011-06-29T15:08:42", "upload_time_iso_8601": "2011-06-29T15:08:42.114666Z", "url": "https://files.pythonhosted.org/packages/c9/df/0654ded3fb077ffdc4175158ae98c043d9ce737bc7b0b85d61ce1d22f14b/yay-0.0.19.zip", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "99558a31527f2c688a74ae81e05484aa", "sha256": "b327bd0679264354af5184d7b223a8351cca7f6de30e16772c58db90b0207dac"}, "downloads": -1, "filename": "yay-0.0.2.tar.gz", "has_sig": false, "md5_digest": "99558a31527f2c688a74ae81e05484aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43766, "upload_time": "2011-01-24T20:58:12", "upload_time_iso_8601": "2011-01-24T20:58:12.509763Z", "url": "https://files.pythonhosted.org/packages/10/6b/3fd7aeb792f96f60ccceef1d2d51b635e42fd598b7a4cfce34972f8ccfaf/yay-0.0.2.tar.gz", "yanked": false}], "0.0.20": [{"comment_text": "", "digests": {"md5": "5cfe00e35a2b05da0a95532131b1684d", "sha256": "133d89f65162d2bb20c2de01f9095db21b050d8e7333849bdc57c4a798562df7"}, "downloads": -1, "filename": "yay-0.0.20.zip", "has_sig": false, "md5_digest": "5cfe00e35a2b05da0a95532131b1684d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79765, "upload_time": "2011-06-29T23:40:50", "upload_time_iso_8601": "2011-06-29T23:40:50.136408Z", "url": "https://files.pythonhosted.org/packages/dc/86/bff1fa00e1268e349377f0b51521c8547da886305b17785bbf4bafe15ac5/yay-0.0.20.zip", "yanked": false}], "0.0.21": [{"comment_text": "", "digests": {"md5": "77380ab164b024e0d1d4a1fd04edc1de", "sha256": "f2f8eac715d71a5e69b8679c631a33022a8c6d463d61f0ce0cb39ce0a0038ebb"}, "downloads": -1, "filename": "yay-0.0.21.tar.gz", "has_sig": false, "md5_digest": "77380ab164b024e0d1d4a1fd04edc1de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53927, "upload_time": "2011-07-19T12:52:10", "upload_time_iso_8601": "2011-07-19T12:52:10.812348Z", "url": "https://files.pythonhosted.org/packages/d0/18/4d2777ecf160b2a27fd00c209bb7fad0c8e3dd4994763655147ae9664b7d/yay-0.0.21.tar.gz", "yanked": false}], "0.0.22": [{"comment_text": "", "digests": {"md5": "4316f0c4fef04ae9d34c91c8f06ab78a", "sha256": "9a4423ae9eceb1cd1e9fa1f8a147129f0a655dd27e8bcb0bca946be88d20d8fd"}, "downloads": -1, "filename": "yay-0.0.22.zip", "has_sig": false, "md5_digest": "4316f0c4fef04ae9d34c91c8f06ab78a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80835, "upload_time": "2011-07-19T14:47:48", "upload_time_iso_8601": "2011-07-19T14:47:48.023050Z", "url": "https://files.pythonhosted.org/packages/04/fa/4efe36355341bab65dc05945b86379c5f5a7c6a785edc041cdedc6af421a/yay-0.0.22.zip", "yanked": false}], "0.0.23": [{"comment_text": "", "digests": {"md5": "bc216902d523804317b11e3afd47be5a", "sha256": "ec01fd9a439e08bee8538614ea2be433a58dedae18a384f642abb235b76d332c"}, "downloads": -1, "filename": "yay-0.0.23.zip", "has_sig": false, "md5_digest": "bc216902d523804317b11e3afd47be5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81367, "upload_time": "2011-07-26T23:44:31", "upload_time_iso_8601": "2011-07-26T23:44:31.585684Z", "url": "https://files.pythonhosted.org/packages/fd/da/6a4e67347d5860db818e27b2ad24a13c61ad2c2a0131673a046921400082/yay-0.0.23.zip", "yanked": false}], "0.0.24": [{"comment_text": "", "digests": {"md5": "59511f312914544421e81af31f9d411f", "sha256": "987105d876119b90244f3b012cfcef8514ea11b06fe9d65338bf2c20aeb478c5"}, "downloads": -1, "filename": "yay-0.0.24.zip", "has_sig": false, "md5_digest": "59511f312914544421e81af31f9d411f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91935, "upload_time": "2011-10-22T12:14:31", "upload_time_iso_8601": "2011-10-22T12:14:31.918991Z", "url": "https://files.pythonhosted.org/packages/22/c8/9e019bff380b90ba7fe1e2b63788545b2e9c6a7947bb38f7c0b753776ed2/yay-0.0.24.zip", "yanked": false}], "0.0.25": [{"comment_text": "", "digests": {"md5": "4dd6bfdd7257403735dce92862e32ef8", "sha256": "1020762308174388ae6c11038f806b9a431104db02bcd121a301301eb7e7d955"}, "downloads": -1, "filename": "yay-0.0.25.tar.gz", "has_sig": false, "md5_digest": "4dd6bfdd7257403735dce92862e32ef8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60494, "upload_time": "2011-10-29T00:16:53", "upload_time_iso_8601": "2011-10-29T00:16:53.948998Z", "url": "https://files.pythonhosted.org/packages/17/56/629bf757e082d5499b88fc2901d87bc5789b0c8aa5f8560fde7593eb0e47/yay-0.0.25.tar.gz", "yanked": false}], "0.0.26": [{"comment_text": "", "digests": {"md5": "690426dece79dc0efaf69e659aded2e5", "sha256": "1e4eb275eccf6f5b791b6eff11b04f2ab8dba7b123a0ccf771d326870409d2d1"}, "downloads": -1, "filename": "yay-0.0.26.tar.gz", "has_sig": false, "md5_digest": "690426dece79dc0efaf69e659aded2e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62468, "upload_time": "2011-11-02T21:12:33", "upload_time_iso_8601": "2011-11-02T21:12:33.323884Z", "url": "https://files.pythonhosted.org/packages/d3/92/8c9551ed61ea969651f07967536a0f61d9841986f69bc152a100f3898713/yay-0.0.26.tar.gz", "yanked": false}], "0.0.27": [{"comment_text": "", "digests": {"md5": "6b1073236492e308db278627bacd7c86", "sha256": "37a73698a08843e5f376ab166a04068650bf8265a217b2263146df77746360f7"}, "downloads": -1, "filename": "yay-0.0.27.zip", "has_sig": false, "md5_digest": "6b1073236492e308db278627bacd7c86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98448, "upload_time": "2011-11-03T16:39:51", "upload_time_iso_8601": "2011-11-03T16:39:51.084748Z", "url": "https://files.pythonhosted.org/packages/b9/c8/370c9afaa3402a44e56f3a226f105af52054f71e046408135a8a6ce85a25/yay-0.0.27.zip", "yanked": false}], "0.0.28": [{"comment_text": "", "digests": {"md5": "09751d7c542c8d2f296417f163962baf", "sha256": "063b4bd582592c443c7af086c811b91d7fe4211a28f19a6cd0ddbe4f47395036"}, "downloads": -1, "filename": "yay-0.0.28.zip", "has_sig": false, "md5_digest": "09751d7c542c8d2f296417f163962baf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98560, "upload_time": "2011-11-07T14:50:56", "upload_time_iso_8601": "2011-11-07T14:50:56.133246Z", "url": "https://files.pythonhosted.org/packages/b5/50/622d6be3144c5ca205f727387a6076889b513e2e932575594fb5e1f3abb8/yay-0.0.28.zip", "yanked": false}], "0.0.29": [{"comment_text": "", "digests": {"md5": "1561de4f618fc6f1e4cb7730d01010ff", "sha256": "1214ac5aad43fc5cea0dd591537a0fdb23b9277d61fb4f5beacf68887ff661a9"}, "downloads": -1, "filename": "yay-0.0.29.tar.gz", "has_sig": false, "md5_digest": "1561de4f618fc6f1e4cb7730d01010ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63151, "upload_time": "2011-11-10T01:16:21", "upload_time_iso_8601": "2011-11-10T01:16:21.068049Z", "url": "https://files.pythonhosted.org/packages/26/5b/2b80addb21a468fa0095b9a19a7d5afcc5157b3a9dfb09ef8ffde3f10aae/yay-0.0.29.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "b289d0aba7fe17fb2981faccc8a29d99", "sha256": "fcfee8ac171ce14ed151e118a877e8a15828462d80672ffda227f8a5c4377fdd"}, "downloads": -1, "filename": "yay-0.0.3.tar.gz", "has_sig": false, "md5_digest": "b289d0aba7fe17fb2981faccc8a29d99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47083, "upload_time": "2011-01-24T21:45:24", "upload_time_iso_8601": "2011-01-24T21:45:24.346967Z", "url": "https://files.pythonhosted.org/packages/5f/2b/0a72d2a43a1309813d6f0f0914a51ebb5a3e8cf7b8a962fa98fda3a4a92f/yay-0.0.3.tar.gz", "yanked": false}], "0.0.30": [{"comment_text": "", "digests": {"md5": "06cc22a974f0b6c163395b31adc882fb", "sha256": "08aef5febcb14afd90d77472d380ac9c495511d9a317db4c97bbd8f908ee7308"}, "downloads": -1, "filename": "yay-0.0.30.tar.gz", "has_sig": false, "md5_digest": "06cc22a974f0b6c163395b31adc882fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63584, "upload_time": "2011-11-10T01:58:33", "upload_time_iso_8601": "2011-11-10T01:58:33.171831Z", "url": "https://files.pythonhosted.org/packages/d2/6c/429aa8a2c471d11c344cbb5aea51920f5b4cc6df5c52ded1fda8fd09d71b/yay-0.0.30.tar.gz", "yanked": false}], "0.0.31": [{"comment_text": "", "digests": {"md5": "072d25f5d29b956a95e40e5cb3ab5ef1", "sha256": "22516bb7678bb17d58e8ee147e9574cb645cabc27ad7bdf8a21351c3f9670093"}, "downloads": -1, "filename": "yay-0.0.31.tar.gz", "has_sig": false, "md5_digest": "072d25f5d29b956a95e40e5cb3ab5ef1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63637, "upload_time": "2011-11-10T02:27:59", "upload_time_iso_8601": "2011-11-10T02:27:59.144670Z", "url": "https://files.pythonhosted.org/packages/5d/9b/71c528eb9f2bfb051a4da1e305a593b95edb18ea3fb357ccba033804c210/yay-0.0.31.tar.gz", "yanked": false}], "0.0.32": [{"comment_text": "", "digests": {"md5": "89edd084117acce0e386ad56bc251e27", "sha256": "65c1d20a5bf88ca1298d4b8869eb6cdad99d3b53842cf671c2b710c308feaedb"}, "downloads": -1, "filename": "yay-0.0.32.tar.gz", "has_sig": false, "md5_digest": "89edd084117acce0e386ad56bc251e27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63681, "upload_time": "2011-11-10T03:32:48", "upload_time_iso_8601": "2011-11-10T03:32:48.007269Z", "url": "https://files.pythonhosted.org/packages/5d/7a/97a1ed845c040e877fecf68af778e3b1f399308ec8bd28d13072a1556713/yay-0.0.32.tar.gz", "yanked": false}], "0.0.33": [{"comment_text": "", "digests": {"md5": "c7c9026a92b401d98321864c9dc84d13", "sha256": "f99acd13fbdca9a27580d1ee2584c6f650cf6075df10b37f36eeb56a5840d6cd"}, "downloads": -1, "filename": "yay-0.0.33.zip", "has_sig": false, "md5_digest": "c7c9026a92b401d98321864c9dc84d13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 99934, "upload_time": "2011-11-10T16:16:58", "upload_time_iso_8601": "2011-11-10T16:16:58.110420Z", "url": "https://files.pythonhosted.org/packages/36/24/f9446194189b37a8172add59abbd1389a629d9946e6a6fe3331627872b7c/yay-0.0.33.zip", "yanked": false}], "0.0.34": [{"comment_text": "", "digests": {"md5": "49f1775c8b40bdc7fc4b995b55994126", "sha256": "b00c4cc4acf661581a434fa26915cefff0e689280c08da3df6fe85d06690bf4e"}, "downloads": -1, "filename": "yay-0.0.34.zip", "has_sig": false, "md5_digest": "49f1775c8b40bdc7fc4b995b55994126", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100104, "upload_time": "2011-11-10T21:54:15", "upload_time_iso_8601": "2011-11-10T21:54:15.347112Z", "url": "https://files.pythonhosted.org/packages/9e/1a/4548424f588fca49c800c95cb0aa2a57ca921eb0dba2cf4aa5883c03a662/yay-0.0.34.zip", "yanked": false}], "0.0.35": [{"comment_text": "", "digests": {"md5": "e268418e824d721a1522dd2f23a196f8", "sha256": "c1e9cfb63a6443239f20023e85a41fc447ce3ac45bdc651ed0058596b85fbf65"}, "downloads": -1, "filename": "yay-0.0.35.tar.gz", "has_sig": false, "md5_digest": "e268418e824d721a1522dd2f23a196f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65767, "upload_time": "2011-11-12T13:01:39", "upload_time_iso_8601": "2011-11-12T13:01:39.749961Z", "url": "https://files.pythonhosted.org/packages/bf/0f/66275b969a529012a82d4bc685ae8bab0e47405cd61f0f71ce8d56471c85/yay-0.0.35.tar.gz", "yanked": false}], "0.0.36": [{"comment_text": "", "digests": {"md5": "1e8f4c8eb51412ec1374eda31f2c67bb", "sha256": "0b08d47fc3dab3cdc8197217b154860ca2494339885adf2743fa868d526d2146"}, "downloads": -1, "filename": "yay-0.0.36.tar.gz", "has_sig": false, "md5_digest": "1e8f4c8eb51412ec1374eda31f2c67bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65309, "upload_time": "2011-11-20T18:27:24", "upload_time_iso_8601": "2011-11-20T18:27:24.805699Z", "url": "https://files.pythonhosted.org/packages/06/94/be8bd484ee441114404f1603f72d48601afd60e1d962e72007db9537b924/yay-0.0.36.tar.gz", "yanked": false}], "0.0.37": [{"comment_text": "", "digests": {"md5": "8fa3b7ebecc7fd233eb6c5453b57fd5d", "sha256": "1b2bf050496a69c44e5b6c830f9615a2a259cce550fd4bf18f29b95fdee3df10"}, "downloads": -1, "filename": "yay-0.0.37.tar.gz", "has_sig": false, "md5_digest": "8fa3b7ebecc7fd233eb6c5453b57fd5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65381, "upload_time": "2011-11-20T18:32:35", "upload_time_iso_8601": "2011-11-20T18:32:35.441574Z", "url": "https://files.pythonhosted.org/packages/02/15/c928136343b8bb545f73b4ff126866b2de14367609c43adf634748188dd7/yay-0.0.37.tar.gz", "yanked": false}], "0.0.38": [{"comment_text": "", "digests": {"md5": "00cedbaa59a071521d403d3d289c7740", "sha256": "8bf157848f5b452bdcd99bcccc5dca1eae0855988403b042a51a938bf4dc7a2f"}, "downloads": -1, "filename": "yay-0.0.38.tar.gz", "has_sig": false, "md5_digest": "00cedbaa59a071521d403d3d289c7740", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65671, "upload_time": "2011-11-22T03:48:28", "upload_time_iso_8601": "2011-11-22T03:48:28.125019Z", "url": "https://files.pythonhosted.org/packages/e4/6a/39f494c8b402db9a67e7dba470f0c0f219353816b671a2afc18618895cda/yay-0.0.38.tar.gz", "yanked": false}], "0.0.39": [{"comment_text": "", "digests": {"md5": "103a98a18a38ba0708e157327fc7e9fd", "sha256": "1f6ea10aaa7fa0d459e120855a53dbeaed7b5451496fe9ee15bacf1292ef4902"}, "downloads": -1, "filename": "yay-0.0.39.zip", "has_sig": false, "md5_digest": "103a98a18a38ba0708e157327fc7e9fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110124, "upload_time": "2011-11-30T11:23:04", "upload_time_iso_8601": "2011-11-30T11:23:04.462267Z", "url": "https://files.pythonhosted.org/packages/05/07/dde05374f35b4e9eda338fb942e628aad4ca6807171fe0fef9be04727716/yay-0.0.39.zip", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "23b1b3111f3c50a88e4da4e853e9c69e", "sha256": "30e37d6e9b43a8d6188e909cb2256ce354cfc60b844f82c4c561b189fe3d0008"}, "downloads": -1, "filename": "yay-0.0.4.tar.gz", "has_sig": false, "md5_digest": "23b1b3111f3c50a88e4da4e853e9c69e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48081, "upload_time": "2011-02-04T01:16:06", "upload_time_iso_8601": "2011-02-04T01:16:06.410606Z", "url": "https://files.pythonhosted.org/packages/11/bb/b92533d2f72249fcec50a65b2596c77811f52b1f69860f6a0f8b2da9e4bb/yay-0.0.4.tar.gz", "yanked": false}], "0.0.40": [{"comment_text": "", "digests": {"md5": "d2e43b012547d66d7877a23c63dd038a", "sha256": "125712b5dd5c4faa67b46211f4dc96abf737526cd3ba776abdf789fb967af24d"}, "downloads": -1, "filename": "yay-0.0.40.tar.gz", "has_sig": false, "md5_digest": "d2e43b012547d66d7877a23c63dd038a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65946, "upload_time": "2011-12-14T00:22:36", "upload_time_iso_8601": "2011-12-14T00:22:36.350387Z", "url": "https://files.pythonhosted.org/packages/73/a8/7b538556b76765bf3972b0e343e7b73ac7c9928df0a47bf0a9253d3ac6ff/yay-0.0.40.tar.gz", "yanked": false}], "0.0.41": [{"comment_text": "", "digests": {"md5": "d64206e5c24dc9d0b76ba788205cc5e5", "sha256": "78eccd518d869c0d3723536550474755ce7c2a13acb7228358363785cb8f01f9"}, "downloads": -1, "filename": "yay-0.0.41.zip", "has_sig": false, "md5_digest": "d64206e5c24dc9d0b76ba788205cc5e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 112575, "upload_time": "2011-12-21T18:33:12", "upload_time_iso_8601": "2011-12-21T18:33:12.772401Z", "url": "https://files.pythonhosted.org/packages/ce/3c/f0f341e26e4316b1c7e800bd7c42388c2b8014f2117528e12b2e8c8e6fed/yay-0.0.41.zip", "yanked": false}], "0.0.42": [{"comment_text": "", "digests": {"md5": "51bf239fbe78efa55e3c3f2e1278e6f9", "sha256": "7f8a5e1b5a03857fd2cd21e3422cedc76fff081e498b124f5f26315127adb003"}, "downloads": -1, "filename": "yay-0.0.42.tar.gz", "has_sig": false, "md5_digest": "51bf239fbe78efa55e3c3f2e1278e6f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66718, "upload_time": "2012-01-01T01:31:58", "upload_time_iso_8601": "2012-01-01T01:31:58.004639Z", "url": "https://files.pythonhosted.org/packages/a8/d1/a9bd719231e7f78bb1e39306fa5c95deb798a687376ebf1f0a7eacb414e0/yay-0.0.42.tar.gz", "yanked": false}], "0.0.43": [{"comment_text": "", "digests": {"md5": "a971103db2f61d5d438b6bfc6a55490c", "sha256": "4d23ea06ac10c3bb79363518255856e0892b4d0ea2a6f2d1f0a64bc7304ee6b7"}, "downloads": -1, "filename": "yay-0.0.43.tar.gz", "has_sig": false, "md5_digest": "a971103db2f61d5d438b6bfc6a55490c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70535, "upload_time": "2012-02-12T13:43:55", "upload_time_iso_8601": "2012-02-12T13:43:55.501589Z", "url": "https://files.pythonhosted.org/packages/2b/7a/a08e09bd6fe7bbb89a72e76a76031ef4c926b9ccc5313a2ed0fbaabb3cdc/yay-0.0.43.tar.gz", "yanked": false}], "0.0.44": [{"comment_text": "", "digests": {"md5": "bd32d0d5a37ed781b08865701851d8cd", "sha256": "7a84f345205634c9889e848a8d8afebc54b121d3deb6b4ef9de059149816e809"}, "downloads": -1, "filename": "yay-0.0.44.tar.gz", "has_sig": false, "md5_digest": "bd32d0d5a37ed781b08865701851d8cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71155, "upload_time": "2012-03-17T08:27:30", "upload_time_iso_8601": "2012-03-17T08:27:30.432994Z", "url": "https://files.pythonhosted.org/packages/26/4e/bb616d1a251425635aa135697ab81b2eebfc6022d67736cdbe7948835ed2/yay-0.0.44.tar.gz", "yanked": false}], "0.0.45": [{"comment_text": "", "digests": {"md5": "4d4502ae8e7f6eb44a5dbaa4429923cf", "sha256": "14ac77b70e1fd25d8f736840a7fc7058bf8590516b468ddefef607b666437bed"}, "downloads": -1, "filename": "yay-0.0.45.tar.gz", "has_sig": false, "md5_digest": "4d4502ae8e7f6eb44a5dbaa4429923cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72797, "upload_time": "2012-03-22T16:27:22", "upload_time_iso_8601": "2012-03-22T16:27:22.992136Z", "url": "https://files.pythonhosted.org/packages/5f/53/4bb1ae4188480ce2ef8ad1dacd1a3ad2b778e7ed701e41c10ea2d075ab3a/yay-0.0.45.tar.gz", "yanked": false}], "0.0.46": [{"comment_text": "", "digests": {"md5": "fc8017272a62135e571166a1afe6e655", "sha256": "1c7e0ad8941c60d88da231ec27af5c05005da56efb65f4adfadc6cfbcce46874"}, "downloads": -1, "filename": "yay-0.0.46.tar.gz", "has_sig": false, "md5_digest": "fc8017272a62135e571166a1afe6e655", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73010, "upload_time": "2012-04-04T13:37:04", "upload_time_iso_8601": "2012-04-04T13:37:04.038852Z", "url": "https://files.pythonhosted.org/packages/19/9e/a97f724884dd9861466d77b2b99ffd4782a49379deee10ef79911dc8715a/yay-0.0.46.tar.gz", "yanked": false}], "0.0.47": [{"comment_text": "", "digests": {"md5": "df49e72dd50e67d87993fdf1b86f7d05", "sha256": "1c55356db35d8fb94eca3da147a93537dd1d515745ee2356bcac6fed25d6d0f0"}, "downloads": -1, "filename": "yay-0.0.47.tar.gz", "has_sig": false, "md5_digest": "df49e72dd50e67d87993fdf1b86f7d05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74920, "upload_time": "2012-04-07T00:54:57", "upload_time_iso_8601": "2012-04-07T00:54:57.566550Z", "url": "https://files.pythonhosted.org/packages/25/35/5a18259d03a0dface51de1a162687ce17060359d3052b5030fc45911d0c1/yay-0.0.47.tar.gz", "yanked": false}], "0.0.48": [{"comment_text": "", "digests": {"md5": "f29c472f4ec468bed3491008723d7dfe", "sha256": "0f4d5638000481a50e8af03047780aed49526ee776fe9e218b7d75df682af137"}, "downloads": -1, "filename": "yay-0.0.48.tar.gz", "has_sig": false, "md5_digest": "f29c472f4ec468bed3491008723d7dfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75309, "upload_time": "2012-04-07T22:49:25", "upload_time_iso_8601": "2012-04-07T22:49:25.505887Z", "url": "https://files.pythonhosted.org/packages/e7/18/bbf4eb184568c53e1d5808109aca6116beaf6a2b66a61bbb0d0940ad8e6c/yay-0.0.48.tar.gz", "yanked": false}], "0.0.49": [{"comment_text": "", "digests": {"md5": "9149cfa3fc50898f76d4ad49d8f94092", "sha256": "8c15ec0b17a2e362871f716fdf66ee72a383ef375c9a13eedff75ef5b8928506"}, "downloads": -1, "filename": "yay-0.0.49.tar.gz", "has_sig": false, "md5_digest": "9149cfa3fc50898f76d4ad49d8f94092", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75752, "upload_time": "2012-06-27T18:36:49", "upload_time_iso_8601": "2012-06-27T18:36:49.958842Z", "url": "https://files.pythonhosted.org/packages/a7/0b/235e82a48dad7aa826d783d5bb242a16f50a1f6804ba0f7481454ce50894/yay-0.0.49.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "bf2b7dc66200fcf1a322e5668c03bce2", "sha256": "3b6c2f06c12e129048f99b3b49b9213b41b82b8196b9ce0d0e0cdc55f4dbf89d"}, "downloads": -1, "filename": "yay-0.0.5.tar.gz", "has_sig": false, "md5_digest": "bf2b7dc66200fcf1a322e5668c03bce2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48733, "upload_time": "2011-02-09T23:59:59", "upload_time_iso_8601": "2011-02-09T23:59:59.580958Z", "url": "https://files.pythonhosted.org/packages/50/a2/7a51a3f52ec4d9c02b60474062da4733236f362c4b3794cd7dab1714c80e/yay-0.0.5.tar.gz", "yanked": false}], "0.0.50": [{"comment_text": "", "digests": {"md5": "27d328b852bf1f2196d525355f66bb13", "sha256": "923846857d0a7a7087f655c7b4928dc6de18e2518a21a4c22ae4f0c2c704dd9a"}, "downloads": -1, "filename": "yay-0.0.50.tar.gz", "has_sig": false, "md5_digest": "27d328b852bf1f2196d525355f66bb13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75888, "upload_time": "2012-07-10T12:19:37", "upload_time_iso_8601": "2012-07-10T12:19:37.747058Z", "url": "https://files.pythonhosted.org/packages/92/ed/c023f72e704666500161c809ba15e47ade06a16a633d60545f2f61c3668e/yay-0.0.50.tar.gz", "yanked": false}], "0.0.51": [{"comment_text": "", "digests": {"md5": "5d2ed2856257bd4f221da848a23fbb88", "sha256": "b0b50a31efd0585b2cd0da3748d46191646ae043bb8ab17b176bf3ad0a0e0eec"}, "downloads": -1, "filename": "yay-0.0.51.zip", "has_sig": false, "md5_digest": "5d2ed2856257bd4f221da848a23fbb88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 129395, "upload_time": "2012-07-19T18:32:07", "upload_time_iso_8601": "2012-07-19T18:32:07.770588Z", "url": "https://files.pythonhosted.org/packages/c3/46/feb9c9da2dfdbcf6d0ad92e9cf18b6a4c43269ed7406187ed47bf2e78835/yay-0.0.51.zip", "yanked": false}], "0.0.52": [{"comment_text": "", "digests": {"md5": "bed5fc498cc0378de8130d78cb2bec0c", "sha256": "6b545b6a196ee42970840159df8eeba00c17b42a7daf4007d9c4b94dde3513ff"}, "downloads": -1, "filename": "yay-0.0.52.zip", "has_sig": false, "md5_digest": "bed5fc498cc0378de8130d78cb2bec0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 129437, "upload_time": "2012-07-21T13:02:08", "upload_time_iso_8601": "2012-07-21T13:02:08.264466Z", "url": "https://files.pythonhosted.org/packages/0b/9a/6f0744fd70e8f7723adb0befeb3d468e7135f076b54040dbce098414d401/yay-0.0.52.zip", "yanked": false}], "0.0.53": [{"comment_text": "", "digests": {"md5": "818ba8717086eb652f59ff54861733d3", "sha256": "6983639fa02e52d1c8d6791408f6f0cbff0b49ad6cc951b90b9a7c3bc9cdc4a0"}, "downloads": -1, "filename": "yay-0.0.53.zip", "has_sig": false, "md5_digest": "818ba8717086eb652f59ff54861733d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 129560, "upload_time": "2012-07-21T23:36:11", "upload_time_iso_8601": "2012-07-21T23:36:11.800241Z", "url": "https://files.pythonhosted.org/packages/1a/9e/9b1b0f591200c82475ee3a5ebafd1279c7acb71668da50730bb3d0de035e/yay-0.0.53.zip", "yanked": false}], "0.0.54": [{"comment_text": "", "digests": {"md5": "c3d184fe34893d0bb1f58929c79bd905", "sha256": "76b3f2c383d06d3416488985a7523966da6ef66531e73955166570849c197c85"}, "downloads": -1, "filename": "yay-0.0.54.tar.gz", "has_sig": false, "md5_digest": "c3d184fe34893d0bb1f58929c79bd905", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78922, "upload_time": "2012-07-22T23:54:32", "upload_time_iso_8601": "2012-07-22T23:54:32.185114Z", "url": "https://files.pythonhosted.org/packages/11/bd/804345d8ef8f9316ca3af1869f3eb42c72ce25742088a0d100c473724dd8/yay-0.0.54.tar.gz", "yanked": false}], "0.0.55": [{"comment_text": "", "digests": {"md5": "5f6c73a731c58de0b7f23411127af73f", "sha256": "7db4e3321b897a2a67128f764fdc0deb59ac53a67499a185bcaf67bbf07db6e2"}, "downloads": -1, "filename": "yay-0.0.55.zip", "has_sig": false, "md5_digest": "5f6c73a731c58de0b7f23411127af73f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131005, "upload_time": "2012-07-25T13:13:37", "upload_time_iso_8601": "2012-07-25T13:13:37.629109Z", "url": "https://files.pythonhosted.org/packages/f3/b4/16af4ab73a1c6186ac93877be9bb53405925db6c6a4ca4a0fc0a7f2aa3ba/yay-0.0.55.zip", "yanked": false}], "0.0.56": [{"comment_text": "", "digests": {"md5": "9d612ad5ebd64a5063b9e45171c70c54", "sha256": "6021ce695585317e4e5ab9b2ddd83bf52c8d6735d0353713f6c0e2b98f3f68ca"}, "downloads": -1, "filename": "yay-0.0.56.zip", "has_sig": false, "md5_digest": "9d612ad5ebd64a5063b9e45171c70c54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 131988, "upload_time": "2012-07-31T17:59:12", "upload_time_iso_8601": "2012-07-31T17:59:12.137563Z", "url": "https://files.pythonhosted.org/packages/27/92/e3460979d319293d6f09d6f0fef0a05b2908f505ba77c048de10ca34d534/yay-0.0.56.zip", "yanked": false}], "0.0.57": [{"comment_text": "", "digests": {"md5": "17c656d6ae8564bce12e24b75f97a2eb", "sha256": "b665a120f5bd3ed9f1d38c5012193ae02ede10568e8e91d99ce1ad6eee882548"}, "downloads": -1, "filename": "yay-0.0.57.zip", "has_sig": false, "md5_digest": "17c656d6ae8564bce12e24b75f97a2eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 134162, "upload_time": "2012-08-02T05:16:47", "upload_time_iso_8601": "2012-08-02T05:16:47.460004Z", "url": "https://files.pythonhosted.org/packages/a7/72/68fd45c23ed418adefc5744497d2c60ed76dbcda4cb257b18f7d690be721/yay-0.0.57.zip", "yanked": false}], "0.0.58": [{"comment_text": "", "digests": {"md5": "bae90ed719e7db32abaca7e566bf9f75", "sha256": "9d4e086e98a04078da2a7f8c73b0e55ea2ce98eca154270ad8bc6e82dacf6b3e"}, "downloads": -1, "filename": "yay-0.0.58.zip", "has_sig": false, "md5_digest": "bae90ed719e7db32abaca7e566bf9f75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 135299, "upload_time": "2012-08-15T16:21:23", "upload_time_iso_8601": "2012-08-15T16:21:23.529804Z", "url": "https://files.pythonhosted.org/packages/61/41/eac20395e0aa0bd22d91c223a86b84f0d2f994d1954dbdbe6e54e1c39ac5/yay-0.0.58.zip", "yanked": false}], "0.0.59": [{"comment_text": "", "digests": {"md5": "1e45dc342f9ca3c79064a16a0e4920dc", "sha256": "f34f9d2d77f59dfeb1c160f51b7db26eb29e994afbccea54e48b8c2e06ebda78"}, "downloads": -1, "filename": "yay-0.0.59.zip", "has_sig": false, "md5_digest": "1e45dc342f9ca3c79064a16a0e4920dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 135354, "upload_time": "2012-09-01T10:31:22", "upload_time_iso_8601": "2012-09-01T10:31:22.038326Z", "url": "https://files.pythonhosted.org/packages/68/b4/20ce18004291f1e60133a85cc676d9de28032a019c149cb4958f2a227cc1/yay-0.0.59.zip", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "252407b9bfc0ef4f946c949a820f14cb", "sha256": "6ab9b56a06c49ca051433acba964287966e837ca49cb132d38820a8a702526a4"}, "downloads": -1, "filename": "yay-0.0.6.tar.gz", "has_sig": false, "md5_digest": "252407b9bfc0ef4f946c949a820f14cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47630, "upload_time": "2011-02-14T00:01:05", "upload_time_iso_8601": "2011-02-14T00:01:05.395217Z", "url": "https://files.pythonhosted.org/packages/93/df/1b627d53297f35684aa484a7f0e86a672024dc90964531bf8f2bac4aea2e/yay-0.0.6.tar.gz", "yanked": false}], "0.0.60": [{"comment_text": "", "digests": {"md5": "d06cf6017f0b04cf7267d41058612aac", "sha256": "568c942a43f5dd002d0aa1779dba251bc92c2a5358a1b6d83ae24c3dd635db3e"}, "downloads": -1, "filename": "yay-0.0.60.zip", "has_sig": false, "md5_digest": "d06cf6017f0b04cf7267d41058612aac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 135603, "upload_time": "2012-09-15T10:45:57", "upload_time_iso_8601": "2012-09-15T10:45:57.423290Z", "url": "https://files.pythonhosted.org/packages/76/4b/d51e0603ddf33130805d69c8ac26bcc1d77c0cd493799f37c6a6b7073f84/yay-0.0.60.zip", "yanked": false}], "0.0.61": [{"comment_text": "", "digests": {"md5": "5cac2a67d0012cfa41a8a5ad34e3ff0a", "sha256": "e85ed7545a2c7ed2f221dca1797520f76af20b79009256308c612c85f2e5bf86"}, "downloads": -1, "filename": "yay-0.0.61.zip", "has_sig": false, "md5_digest": "5cac2a67d0012cfa41a8a5ad34e3ff0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 136268, "upload_time": "2012-09-15T11:07:02", "upload_time_iso_8601": "2012-09-15T11:07:02.338768Z", "url": "https://files.pythonhosted.org/packages/b4/ad/cd4f4bf278fb56798b296aa41054c62d20490914654253294bb0c75486dc/yay-0.0.61.zip", "yanked": false}], "0.0.62": [{"comment_text": "", "digests": {"md5": "ba66bd5560548a2fcaa474794e4fff1e", "sha256": "dc1a428b6f37fc901e1efd38c3372a14c638416f9b9c10340fab0b9558568d76"}, "downloads": -1, "filename": "yay-0.0.62.zip", "has_sig": false, "md5_digest": "ba66bd5560548a2fcaa474794e4fff1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 136853, "upload_time": "2012-09-27T14:51:08", "upload_time_iso_8601": "2012-09-27T14:51:08.313133Z", "url": "https://files.pythonhosted.org/packages/49/e3/851512a408e4aedfd15a5dcb3b6e49b2528f5b767144eddef820779ff7fe/yay-0.0.62.zip", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "e5f0de9a2100966898c922cb4f1b3a51", "sha256": "480a64fa09bd3602183ebb293e63a7b0eba2defd12c7dd743175c0d4629758be"}, "downloads": -1, "filename": "yay-0.0.7.tar.gz", "has_sig": false, "md5_digest": "e5f0de9a2100966898c922cb4f1b3a51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48975, "upload_time": "2011-02-16T21:38:19", "upload_time_iso_8601": "2011-02-16T21:38:19.257760Z", "url": "https://files.pythonhosted.org/packages/f1/9b/b95a5546ab3effa5f4d1282cc52b58eac325e30c26502280c4bde28379e9/yay-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "ae8d37c6dfdbd16f4bea167ba03bc049", "sha256": "fdf704490e973d9b31a6cfd17a6d3fef7e5b188b512133598aa4019cdc50990b"}, "downloads": -1, "filename": "yay-0.0.8.tar.gz", "has_sig": false, "md5_digest": "ae8d37c6dfdbd16f4bea167ba03bc049", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49042, "upload_time": "2011-02-18T19:09:36", "upload_time_iso_8601": "2011-02-18T19:09:36.036550Z", "url": "https://files.pythonhosted.org/packages/6a/96/b9fab6787d5432eac50f3e3bd88982dde7a943b2ed90513ef826f76a8157/yay-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "c8f52eca209f0e5c31c36da3fe9693cb", "sha256": "b9e05c3da1a91ce91cc163647489df50f90c91a9c4cc3ec57830d7b05e4470c0"}, "downloads": -1, "filename": "yay-0.0.9.tar.gz", "has_sig": false, "md5_digest": "c8f52eca209f0e5c31c36da3fe9693cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49135, "upload_time": "2011-02-22T09:35:19", "upload_time_iso_8601": "2011-02-22T09:35:19.554785Z", "url": "https://files.pythonhosted.org/packages/5b/f4/5a57ea944277f5808e41f7eeb72aebdf3c92e5867253c02e8a2e53c92cef/yay-0.0.9.tar.gz", "yanked": false}], "3.0": [{"comment_text": "", "digests": {"md5": "5bc383048ce09fab0ede574ece91ca36", "sha256": "bca9ca6fd05c52fed2e8c66a512479ab1b6c9017c638a20ad072896aebe59c11"}, "downloads": -1, "filename": "yay-3.0.tar.gz", "has_sig": false, "md5_digest": "5bc383048ce09fab0ede574ece91ca36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76857, "upload_time": "2013-09-04T17:49:53", "upload_time_iso_8601": "2013-09-04T17:49:53.821610Z", "url": "https://files.pythonhosted.org/packages/6c/2e/c8d4bc10cfc075c889adc4ed8abd21e29963f721fe366b08565b4237ef7f/yay-3.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "092e758c7c2453c1c4e4521aeb79ced7", "sha256": "aa0587fbf62841b5985c7ced7bd2ab66bde931cca788d67ae791cc67ac930cea"}, "downloads": -1, "filename": "yay-3.0.1.zip", "has_sig": false, "md5_digest": "092e758c7c2453c1c4e4521aeb79ced7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 99821, "upload_time": "2013-09-04T17:54:02", "upload_time_iso_8601": "2013-09-04T17:54:02.763423Z", "url": "https://files.pythonhosted.org/packages/15/b0/f68a9062cfbfab11d29b236edd8359206df3cd5a78986f347ddc3fbee404/yay-3.0.1.zip", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "0f567b43d60d9004c73054c012878732", "sha256": "3525f322f14c8cbe18221e1b1fc1863c43df33be2bc8ce1832e831b9e3976c28"}, "downloads": -1, "filename": "yay-3.1.0.zip", "has_sig": false, "md5_digest": "0f567b43d60d9004c73054c012878732", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101111, "upload_time": "2013-11-06T08:31:51", "upload_time_iso_8601": "2013-11-06T08:31:51.892362Z", "url": "https://files.pythonhosted.org/packages/a9/3d/fb917f617874bd94ea8e6f1ac035e7011794f2e71e0b42dccb19a8693285/yay-3.1.0.zip", "yanked": false}], "3.1.1": [{"comment_text": "", "digests": {"md5": "a63889e355402d6b9eda855e7d8ab667", "sha256": "8576e10a9e358dce4be02be20c9d15ba35c68ea0cfdd7e41f9384e32813b5341"}, "downloads": -1, "filename": "yay-3.1.1.zip", "has_sig": false, "md5_digest": "a63889e355402d6b9eda855e7d8ab667", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101122, "upload_time": "2013-11-06T08:59:53", "upload_time_iso_8601": "2013-11-06T08:59:53.110893Z", "url": "https://files.pythonhosted.org/packages/b2/4a/da98a8614143876a2fb8cdfa82ab29cf9da5430a7c4301b8a1d6ae304a6f/yay-3.1.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a63889e355402d6b9eda855e7d8ab667", "sha256": "8576e10a9e358dce4be02be20c9d15ba35c68ea0cfdd7e41f9384e32813b5341"}, "downloads": -1, "filename": "yay-3.1.1.zip", "has_sig": false, "md5_digest": "a63889e355402d6b9eda855e7d8ab667", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101122, "upload_time": "2013-11-06T08:59:53", "upload_time_iso_8601": "2013-11-06T08:59:53.110893Z", "url": "https://files.pythonhosted.org/packages/b2/4a/da98a8614143876a2fb8cdfa82ab29cf9da5430a7c4301b8a1d6ae304a6f/yay-3.1.1.zip", "yanked": false}], "timestamp": "Fri May  8 03:22:36 2020"}