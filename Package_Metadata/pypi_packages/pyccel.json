{"info": {"author": "Ahmed Ratnani", "author_email": "ahmed.ratnani@ipp.mpg.de", "bugtrack_url": null, "classifiers": [], "description": "Welcome to Pyccel\n=================\n\n|build-status| |docs|\n\n**Pyccel** stands for Python extension language using accelerators.\n\nThe aim of **Pyccel** is to provide a simple way to generate automatically, parallel low level code. The main uses would be:\n\n1. Convert a *Python* code (or project) into a Fortran\n\n2. Accelerate *Python* functions by converting them to *Fortran* then calling *f2py*. For the moment, only *f2py* is available, but we are working on other solutions too (*f2x* and *fffi*)\n\n**Pyccel** can be viewed as:\n\n- *Python-to-Fortran* converter\n\n- a compiler for a *Domain Specific Language* with *Python* syntax\n\nPyccel comes with a selection of **extensions** allowing you to convert calls to some specific python packages to Fortran. The following packages will be covered (partially):\n\n- numpy\n- scipy\n- mpi4py\n- h5py (not available yet)\n\nRequirements\n============\n\nFirst of all, Pyccel requires a working Fortran compiler; it supports\n\n- GFortran <https://gcc.gnu.org/fortran/>\n- Intel\u00ae Fortran Compiler <https://software.intel.com/en-us/fortran-compilers>\n- PGI Fortran <https://www.pgroup.com/index.htm>\n\nIn order to perform fast linear algebra calculations, Pyccel uses the following libraries:\n\n- BLAS (Basic Linear Algebra Subprograms) <http://www.netlib.org/blas/>\n- LAPACK (Linear Algebra PACKage) <http://www.netlib.org/lapack/>\n\nFinally, Pyccel supports distributed-memory parallel programming through the Message Passing Interface (MPI) standard; hence it requires an MPI library like\n\n- Open-MPI <https://www.open-mpi.org/>\n- MPICH <https://www.mpich.org/>\n- Intel\u00ae MPI Library <https://software.intel.com/en-us/mpi-library>\n\nWe recommend using GFortran and Open-MPI.\n\nPyccel also depends on several Python3 packages, which are automatically downloaded by pip, the Python Package Installer, during the installation process. In addition to these, unit tests require the *mpi4py*, *pytest* and *coverage* packages, while building the documentation requires Sphinx <http://www.sphinx-doc.org/>.\n\nLinux Debian/Ubuntu/Mint\n************************\n\nTo install all requirements on a Linux Ubuntu machine, just use APT, the Advanced Package Tool::\n\n  sudo apt update\n  sudo apt install gfortran\n  sudo apt install libblas-dev liblapack-dev\n  sudo apt install libopenmpi-dev openmpi-bin\n\nLinux Fedora/CentOS/RHEL\n************************\n\nInstall all requirements using the DNF software package manager::\n\n  su\n  dnf check-update\n  dnf install gfortran\n  dnf install blas-devel lapack-devel\n  dnf install openmpi-devel\n  exit\n\nSimilar commands work on Linux openSUSE, just replace ``dnf`` with ``zypper``.\n\nMac OS X\n********\n\nOn an Apple Macintosh machine we recommend using Homebrew <https://brew.sh/>::\n\n  brew update\n  brew install gcc\n  brew install openblas\n  brew install lapack\n  brew install open-mpi\n\nThis requires that the Command Line Tools (CLT) for Xcode are installed.\n\nWindows\n*******\n\nSupport for Windows is still experimental, and the installation of all requirements is more cumbersome.\nWe recommend using Chocolatey <https://chocolatey.org/> to speed up the process, and we provide commands that work in a git-bash shell.\nIn an Administrator prompt install git-bash (if needed), a Python3 Anaconda distribution, and a GCC compiler::\n\n  choco install git\n  choco install anaconda3\n  choco install mingw\n\nOpen git-bash as Administrator. Change default C compiler from M$ to mingw in Anaconda::\n\n  echo -e \"[build]\\ncompiler = mingw32\" > /c/tools/Anaconda3/Lib/distutils/distutils.cfg\n\nDownload x64 BLAS and LAPACK DLLs from https://icl.cs.utk.edu/lapack-for-windows/lapack/::\n\n  WEB_ADDRESS=https://icl.cs.utk.edu/lapack-for-windows/libraries/VisualStudio/3.7.0/Dynamic-MINGW/Win64\n  LIBRARY_DIR=/c/ProgramData/chocolatey/lib/mingw/tools/install/mingw64/lib\n  curl $WEB_ADDRESS/libblas.dll -o $LIBRARY_DIR/libblas.dll\n  curl $WEB_ADDRESS/liblapack.dll -o $LIBRARY_DIR/liblapack.dll\n\nDownload MS MPI runtime and SDK, then install MPI::\n\n  WEB_ADDRESS=https://github.com/microsoft/Microsoft-MPI/releases/download/v10.1.1\n  curl -L $WEB_ADDRESS/msmpisetup.exe -o msmpisetup.exe\n  curl -L $WEB_ADDRESS/msmpisdk.msi -o msmpisdk.msi\n  ./msmpisetup.exe\n  msiexec //i msmpisdk.msi\n\n**At this point, close and reopen your terminal to refresh all environment variables!**\n\nIn Administrator git-bash, generate mpi.mod for gfortran according to https://abhilashreddy.com/writing/3/mpi_instructions.html::\n\n  cd \"$MSMPI_INC\"\n  sed -i 's/mpifptr.h/x64\\/mpifptr.h/g' mpi.f90\n  sed -i 's/mpifptr.h/x64\\/mpifptr.h/g' mpif.h\n  gfortran -c -D_WIN64 -D INT_PTR_KIND\\(\\)=8 -fno-range-check mpi.f90\n  cd -\n\nGenerate static libmsmpi.a from msmpi.dll::\n\n  cd \"$MSMPI_LIB64\"\n  cp $SYSTEMROOT/SysWOW64/msmpi.dll .\n  gendef msmpi.dll\n  dlltool -d msmpi.def -l libmsmpi.a -D msmpi.dll\n  cd -\n\nBefore installing Pyccel and using it, the Anaconda environment should be activated with::\n\n  source /c/tools/Anaconda3/etc/profile.d/conda.sh\n  conda activate\n\nOn Windows and/or Anaconda Python, use `pip` instead of `pip3` for the Installation of pyccel below.\n\nInstallation\n============\n\nFrom PyPi\n*********\n\nSimply run, for a user-specific installation::\n\n  pip3 install --user pyccel\n\nor::\n\n  sudo pip3 install pyccel\n\nfor a system-wide installation.\n\nFrom sources\n************\n\n* **Standard mode**::\n\n    git clone git@github.com:pyccel/pyccel.git\n    cd pyccel\n    pip3 install --user .\n\n* **Development mode**::\n\n    git clone git@github.com:pyccel/pyccel.git\n    cd pyccel\n    pip3 install --user -e .\n\nthis will install a *python* library **pyccel** and a *binary* called **pyccel**.\nAny required Python packages will be installed automatically from PyPI.\n\n\nAdditional packages\n===================\n\nIn order to run the unit tests and to get a coverage report, three additional Python packages should be installed:::\n\n  pip3 install --user mpi4py\n  pip3 install --user pytest\n  pip3 install --user coverage\n\n\nReading the docs\n================\n\nYou can read them online at <http://pyccel.readthedocs.io/>.\n\nAlternatively, the documentation can be built automatically using Sphinx.\nFirst you will need to install a few additional Python packages::\n\n   pip3 install --user sphinx\n   pip3 install --user sphinxcontrib.bibtex\n   pip3 install --user git+git://github.com/saidctb/sphinx-execute-code\n\nThen build the documentation with::\n\n   cd doc\n   make html\n\nThen, direct your browser to ``_build/html/index.html``.\n\nTesting\n=======\n\nTo test your Pyccel installation please run the script *tests/run_tests_py3.sh* (Unix), or *tests/run_tests.bat* (Windows).\n\nContinuous testing runs on Travis CI: <https://travis-ci.com/github/pyccel/pyccel>\n\nKnown bugs\n==========\n\nWe are trying to maintain a list of *known bugs*, see `bugs/README.rst`__\n\n.. __: bugs/README.rst\n\nContributing\n============\n\nTODO\n\n.. |build-status| image:: https://travis-ci.org/pyccel/pyccel.svg?branch=master\n    :alt: build status\n    :scale: 100%\n    :target: https://travis-ci.org/pyccel/pyccel\n\n.. |docs| image:: https://readthedocs.org/projects/pyccel/badge/?version=latest\n    :alt: Documentation Status\n    :scale: 100%\n    :target: http://pyccel.readthedocs.io/\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ratnania/pyccel", "keywords": "math", "license": "LICENSE", "maintainer": "", "maintainer_email": "", "name": "pyccel", "package_url": "https://pypi.org/project/pyccel/", "platform": "", "project_url": "https://pypi.org/project/pyccel/", "project_urls": {"Homepage": "https://github.com/ratnania/pyccel"}, "release_url": "https://pypi.org/project/pyccel/0.9.12/", "requires_dist": ["numpy", "scipy", "sympy (>=1.2)", "textx (>=1.6)", "pylint (>=1.8)", "parse (>=1.8)", "redbaron (>=0.7)", "tabulate", "termcolor", "fastcache"], "requires_python": "", "summary": "Python extension language using accelerators.", "version": "0.9.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"welcome-to-pyccel\">\n<h2>Welcome to Pyccel</h2>\n<p><a href=\"https://travis-ci.org/pyccel/pyccel\" rel=\"nofollow\"><img alt=\"build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52b14e67a2c830c57ef1b1e26a0f71d5fc86da2a/68747470733a2f2f7472617669732d63692e6f72672f70796363656c2f70796363656c2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"http://pyccel.readthedocs.io/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cde6f48bec21123ac27a156f011e79f107058ce4/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70796363656c2f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p><strong>Pyccel</strong> stands for Python extension language using accelerators.</p>\n<p>The aim of <strong>Pyccel</strong> is to provide a simple way to generate automatically, parallel low level code. The main uses would be:</p>\n<ol>\n<li>Convert a <em>Python</em> code (or project) into a Fortran</li>\n<li>Accelerate <em>Python</em> functions by converting them to <em>Fortran</em> then calling <em>f2py</em>. For the moment, only <em>f2py</em> is available, but we are working on other solutions too (<em>f2x</em> and <em>fffi</em>)</li>\n</ol>\n<p><strong>Pyccel</strong> can be viewed as:</p>\n<ul>\n<li><em>Python-to-Fortran</em> converter</li>\n<li>a compiler for a <em>Domain Specific Language</em> with <em>Python</em> syntax</li>\n</ul>\n<p>Pyccel comes with a selection of <strong>extensions</strong> allowing you to convert calls to some specific python packages to Fortran. The following packages will be covered (partially):</p>\n<ul>\n<li>numpy</li>\n<li>scipy</li>\n<li>mpi4py</li>\n<li>h5py (not available yet)</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>First of all, Pyccel requires a working Fortran compiler; it supports</p>\n<ul>\n<li>GFortran &lt;<a href=\"https://gcc.gnu.org/fortran/\" rel=\"nofollow\">https://gcc.gnu.org/fortran/</a>&gt;</li>\n<li>Intel\u00ae Fortran Compiler &lt;<a href=\"https://software.intel.com/en-us/fortran-compilers\" rel=\"nofollow\">https://software.intel.com/en-us/fortran-compilers</a>&gt;</li>\n<li>PGI Fortran &lt;<a href=\"https://www.pgroup.com/index.htm\" rel=\"nofollow\">https://www.pgroup.com/index.htm</a>&gt;</li>\n</ul>\n<p>In order to perform fast linear algebra calculations, Pyccel uses the following libraries:</p>\n<ul>\n<li>BLAS (Basic Linear Algebra Subprograms) &lt;<a href=\"http://www.netlib.org/blas/\" rel=\"nofollow\">http://www.netlib.org/blas/</a>&gt;</li>\n<li>LAPACK (Linear Algebra PACKage) &lt;<a href=\"http://www.netlib.org/lapack/\" rel=\"nofollow\">http://www.netlib.org/lapack/</a>&gt;</li>\n</ul>\n<p>Finally, Pyccel supports distributed-memory parallel programming through the Message Passing Interface (MPI) standard; hence it requires an MPI library like</p>\n<ul>\n<li>Open-MPI &lt;<a href=\"https://www.open-mpi.org/\" rel=\"nofollow\">https://www.open-mpi.org/</a>&gt;</li>\n<li>MPICH &lt;<a href=\"https://www.mpich.org/\" rel=\"nofollow\">https://www.mpich.org/</a>&gt;</li>\n<li>Intel\u00ae MPI Library &lt;<a href=\"https://software.intel.com/en-us/mpi-library\" rel=\"nofollow\">https://software.intel.com/en-us/mpi-library</a>&gt;</li>\n</ul>\n<p>We recommend using GFortran and Open-MPI.</p>\n<p>Pyccel also depends on several Python3 packages, which are automatically downloaded by pip, the Python Package Installer, during the installation process. In addition to these, unit tests require the <em>mpi4py</em>, <em>pytest</em> and <em>coverage</em> packages, while building the documentation requires Sphinx &lt;<a href=\"http://www.sphinx-doc.org/\" rel=\"nofollow\">http://www.sphinx-doc.org/</a>&gt;.</p>\n<div id=\"linux-debian-ubuntu-mint\">\n<h3>Linux Debian/Ubuntu/Mint</h3>\n<p>To install all requirements on a Linux Ubuntu machine, just use APT, the Advanced Package Tool:</p>\n<pre>sudo apt update\nsudo apt install gfortran\nsudo apt install libblas-dev liblapack-dev\nsudo apt install libopenmpi-dev openmpi-bin\n</pre>\n</div>\n<div id=\"linux-fedora-centos-rhel\">\n<h3>Linux Fedora/CentOS/RHEL</h3>\n<p>Install all requirements using the DNF software package manager:</p>\n<pre>su\ndnf check-update\ndnf install gfortran\ndnf install blas-devel lapack-devel\ndnf install openmpi-devel\nexit\n</pre>\n<p>Similar commands work on Linux openSUSE, just replace <tt>dnf</tt> with <tt>zypper</tt>.</p>\n</div>\n<div id=\"mac-os-x\">\n<h3>Mac OS X</h3>\n<p>On an Apple Macintosh machine we recommend using Homebrew &lt;<a href=\"https://brew.sh/\" rel=\"nofollow\">https://brew.sh/</a>&gt;:</p>\n<pre>brew update\nbrew install gcc\nbrew install openblas\nbrew install lapack\nbrew install open-mpi\n</pre>\n<p>This requires that the Command Line Tools (CLT) for Xcode are installed.</p>\n</div>\n<div id=\"windows\">\n<h3>Windows</h3>\n<p>Support for Windows is still experimental, and the installation of all requirements is more cumbersome.\nWe recommend using Chocolatey &lt;<a href=\"https://chocolatey.org/\" rel=\"nofollow\">https://chocolatey.org/</a>&gt; to speed up the process, and we provide commands that work in a git-bash shell.\nIn an Administrator prompt install git-bash (if needed), a Python3 Anaconda distribution, and a GCC compiler:</p>\n<pre>choco install git\nchoco install anaconda3\nchoco install mingw\n</pre>\n<p>Open git-bash as Administrator. Change default C compiler from M$ to mingw in Anaconda:</p>\n<pre>echo -e \"[build]\\ncompiler = mingw32\" &gt; /c/tools/Anaconda3/Lib/distutils/distutils.cfg\n</pre>\n<p>Download x64 BLAS and LAPACK DLLs from <a href=\"https://icl.cs.utk.edu/lapack-for-windows/lapack/\" rel=\"nofollow\">https://icl.cs.utk.edu/lapack-for-windows/lapack/</a>:</p>\n<pre>WEB_ADDRESS=https://icl.cs.utk.edu/lapack-for-windows/libraries/VisualStudio/3.7.0/Dynamic-MINGW/Win64\nLIBRARY_DIR=/c/ProgramData/chocolatey/lib/mingw/tools/install/mingw64/lib\ncurl $WEB_ADDRESS/libblas.dll -o $LIBRARY_DIR/libblas.dll\ncurl $WEB_ADDRESS/liblapack.dll -o $LIBRARY_DIR/liblapack.dll\n</pre>\n<p>Download MS MPI runtime and SDK, then install MPI:</p>\n<pre>WEB_ADDRESS=https://github.com/microsoft/Microsoft-MPI/releases/download/v10.1.1\ncurl -L $WEB_ADDRESS/msmpisetup.exe -o msmpisetup.exe\ncurl -L $WEB_ADDRESS/msmpisdk.msi -o msmpisdk.msi\n./msmpisetup.exe\nmsiexec //i msmpisdk.msi\n</pre>\n<p><strong>At this point, close and reopen your terminal to refresh all environment variables!</strong></p>\n<p>In Administrator git-bash, generate mpi.mod for gfortran according to <a href=\"https://abhilashreddy.com/writing/3/mpi_instructions.html\" rel=\"nofollow\">https://abhilashreddy.com/writing/3/mpi_instructions.html</a>:</p>\n<pre>cd \"$MSMPI_INC\"\nsed -i 's/mpifptr.h/x64\\/mpifptr.h/g' mpi.f90\nsed -i 's/mpifptr.h/x64\\/mpifptr.h/g' mpif.h\ngfortran -c -D_WIN64 -D INT_PTR_KIND\\(\\)=8 -fno-range-check mpi.f90\ncd -\n</pre>\n<p>Generate static libmsmpi.a from msmpi.dll:</p>\n<pre>cd \"$MSMPI_LIB64\"\ncp $SYSTEMROOT/SysWOW64/msmpi.dll .\ngendef msmpi.dll\ndlltool -d msmpi.def -l libmsmpi.a -D msmpi.dll\ncd -\n</pre>\n<p>Before installing Pyccel and using it, the Anaconda environment should be activated with:</p>\n<pre>source /c/tools/Anaconda3/etc/profile.d/conda.sh\nconda activate\n</pre>\n<p>On Windows and/or Anaconda Python, use <cite>pip</cite> instead of <cite>pip3</cite> for the Installation of pyccel below.</p>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"from-pypi\">\n<h3>From PyPi</h3>\n<p>Simply run, for a user-specific installation:</p>\n<pre>pip3 install --user pyccel\n</pre>\n<p>or:</p>\n<pre>sudo pip3 install pyccel\n</pre>\n<p>for a system-wide installation.</p>\n</div>\n<div id=\"from-sources\">\n<h3>From sources</h3>\n<ul>\n<li><p><strong>Standard mode</strong>:</p>\n<pre>git clone git@github.com:pyccel/pyccel.git\ncd pyccel\npip3 install --user .\n</pre>\n</li>\n<li><p><strong>Development mode</strong>:</p>\n<pre>git clone git@github.com:pyccel/pyccel.git\ncd pyccel\npip3 install --user -e .\n</pre>\n</li>\n</ul>\n<p>this will install a <em>python</em> library <strong>pyccel</strong> and a <em>binary</em> called <strong>pyccel</strong>.\nAny required Python packages will be installed automatically from PyPI.</p>\n</div>\n</div>\n<div id=\"additional-packages\">\n<h2>Additional packages</h2>\n<p>In order to run the unit tests and to get a coverage report, three additional Python packages should be installed::</p>\n<pre>pip3 install --user mpi4py\npip3 install --user pytest\npip3 install --user coverage\n</pre>\n</div>\n<div id=\"reading-the-docs\">\n<h2>Reading the docs</h2>\n<p>You can read them online at &lt;<a href=\"http://pyccel.readthedocs.io/\" rel=\"nofollow\">http://pyccel.readthedocs.io/</a>&gt;.</p>\n<p>Alternatively, the documentation can be built automatically using Sphinx.\nFirst you will need to install a few additional Python packages:</p>\n<pre>pip3 install --user sphinx\npip3 install --user sphinxcontrib.bibtex\npip3 install --user git+git://github.com/saidctb/sphinx-execute-code\n</pre>\n<p>Then build the documentation with:</p>\n<pre>cd doc\nmake html\n</pre>\n<p>Then, direct your browser to <tt>_build/html/index.html</tt>.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>To test your Pyccel installation please run the script <em>tests/run_tests_py3.sh</em> (Unix), or <em>tests/run_tests.bat</em> (Windows).</p>\n<p>Continuous testing runs on Travis CI: &lt;<a href=\"https://travis-ci.com/github/pyccel/pyccel\" rel=\"nofollow\">https://travis-ci.com/github/pyccel/pyccel</a>&gt;</p>\n</div>\n<div id=\"known-bugs\">\n<h2>Known bugs</h2>\n<p>We are trying to maintain a list of <em>known bugs</em>, see <a href=\"bugs/README.rst\" rel=\"nofollow\">bugs/README.rst</a></p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>TODO</p>\n</div>\n\n          </div>"}, "last_serial": 7171396, "releases": {"0.9.10": [{"comment_text": "", "digests": {"md5": "53e84f2abee76fd6b64597a53bc3a39d", "sha256": "24eb16391490664f7bd47426efc3066656f6df27ff230a42de7648571c550236"}, "downloads": -1, "filename": "pyccel-0.9.10-py3-none-any.whl", "has_sig": false, "md5_digest": "53e84f2abee76fd6b64597a53bc3a39d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 256887, "upload_time": "2020-04-27T12:44:58", "upload_time_iso_8601": "2020-04-27T12:44:58.525236Z", "url": "https://files.pythonhosted.org/packages/cd/ea/40aab59fe70ba2150afb1a697d70f1b0c37a1793409932d81dbc2ac19876/pyccel-0.9.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec77b879ec993f807dae289bb5221dd9", "sha256": "2e91e6bde8ea5359e9f8d552183b68e3c5fa8f1de87f876c9ce45299ed6999f7"}, "downloads": -1, "filename": "pyccel-0.9.10.tar.gz", "has_sig": false, "md5_digest": "ec77b879ec993f807dae289bb5221dd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4462605, "upload_time": "2020-04-27T12:45:06", "upload_time_iso_8601": "2020-04-27T12:45:06.567725Z", "url": "https://files.pythonhosted.org/packages/30/15/4abb245ec50be4f4cecc1f663569208ceb3b6bfe02292304fd1ff170047a/pyccel-0.9.10.tar.gz", "yanked": false}], "0.9.11": [{"comment_text": "", "digests": {"md5": "f4cc5b5560c6a8639b9aa5e07ee061bc", "sha256": "c7ce71da037e4158243cd7a40587cf5877795c0618a8da15444d376330e544a3"}, "downloads": -1, "filename": "pyccel-0.9.11-py3-none-any.whl", "has_sig": false, "md5_digest": "f4cc5b5560c6a8639b9aa5e07ee061bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 259861, "upload_time": "2020-04-27T12:45:50", "upload_time_iso_8601": "2020-04-27T12:45:50.843359Z", "url": "https://files.pythonhosted.org/packages/76/e2/6148049b3b6af4902da6b1dfb16a422c86da908c7626c6976598bd217270/pyccel-0.9.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1e44797189ceb213dbafff0cdf4f5dc", "sha256": "a2e8a1a9d91e7348c44eae7c7ed7ff030324165ac8c7e808c5f65a2045e653be"}, "downloads": -1, "filename": "pyccel-0.9.11.tar.gz", "has_sig": false, "md5_digest": "c1e44797189ceb213dbafff0cdf4f5dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4466557, "upload_time": "2020-04-27T12:45:59", "upload_time_iso_8601": "2020-04-27T12:45:59.879090Z", "url": "https://files.pythonhosted.org/packages/36/e2/b60d2755cc2f7e6259d72cc5e2be3490996d97e7a758896fc7dcd6d5d7e4/pyccel-0.9.11.tar.gz", "yanked": false}], "0.9.12": [{"comment_text": "", "digests": {"md5": "3d0571bb2f90f08618f619e6b9d77cc2", "sha256": "7321b2f23f05511db695af465693f544599a1df6faef4fe449f22310dacbe69f"}, "downloads": -1, "filename": "pyccel-0.9.12-py3-none-any.whl", "has_sig": false, "md5_digest": "3d0571bb2f90f08618f619e6b9d77cc2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 257651, "upload_time": "2020-05-05T11:37:44", "upload_time_iso_8601": "2020-05-05T11:37:44.691184Z", "url": "https://files.pythonhosted.org/packages/09/74/7dfc0e03e803bcc61e6433e434fd97cc74b712a52f2b2ca535790e34ad80/pyccel-0.9.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d1546af2f555e00bc6126cde32a2aba", "sha256": "225560c3359b22a90d778df8fbf97e175211603c8503ddfd72085b11e90080c7"}, "downloads": -1, "filename": "pyccel-0.9.12.tar.gz", "has_sig": false, "md5_digest": "8d1546af2f555e00bc6126cde32a2aba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 355428, "upload_time": "2020-05-05T11:37:46", "upload_time_iso_8601": "2020-05-05T11:37:46.901406Z", "url": "https://files.pythonhosted.org/packages/31/66/aa1df42e0ca828444ecee67a613b7ba7d82f4d145edd54adf8a7c55e6113/pyccel-0.9.12.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "a272a53cf0e5b05901fde975809569a0", "sha256": "024c33b2323c9524e42788ae9ebd382c9a173779939a5073b7137b934ab0da3d"}, "downloads": -1, "filename": "pyccel-0.9.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a272a53cf0e5b05901fde975809569a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 246479, "upload_time": "2019-08-30T16:53:30", "upload_time_iso_8601": "2019-08-30T16:53:30.575770Z", "url": "https://files.pythonhosted.org/packages/49/16/b806723b1e502273ebd7c3e74c099e587692a9ad200ffbce9eabd5595e05/pyccel-0.9.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e37fa73c833e872940f818d9fa4bdff", "sha256": "8d014a6629e1e417e5e06cbede453e3eeed13d495adfd47ea229acf16e03e98f"}, "downloads": -1, "filename": "pyccel-0.9.4.tar.gz", "has_sig": false, "md5_digest": "9e37fa73c833e872940f818d9fa4bdff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 201011, "upload_time": "2019-08-30T16:53:33", "upload_time_iso_8601": "2019-08-30T16:53:33.093928Z", "url": "https://files.pythonhosted.org/packages/1a/26/7159a087fd12d241a6ccb3b80b63a19ba417e7ba29878447f9f838e01817/pyccel-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "9dae07daff3b21bd48494dd5a5d3f574", "sha256": "28ed12b81f25d073e3ab3a723e89c266ec24108ad881ef443a2fac8ee1961fb2"}, "downloads": -1, "filename": "pyccel-0.9.5-py3-none-any.whl", "has_sig": false, "md5_digest": "9dae07daff3b21bd48494dd5a5d3f574", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 248028, "upload_time": "2020-01-07T11:11:05", "upload_time_iso_8601": "2020-01-07T11:11:05.885537Z", "url": "https://files.pythonhosted.org/packages/a2/12/2eea2874a1f064dbe5a77f3dff149d35224a1bfacc2f13351140d623e641/pyccel-0.9.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "496585d7183ecfd6b094c5c311656356", "sha256": "3cf0568f623805ada92c87cf5f85044ceccfa1117d6a60a82523bf98031b77fa"}, "downloads": -1, "filename": "pyccel-0.9.5.tar.gz", "has_sig": false, "md5_digest": "496585d7183ecfd6b094c5c311656356", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 343446, "upload_time": "2020-01-07T11:11:09", "upload_time_iso_8601": "2020-01-07T11:11:09.558569Z", "url": "https://files.pythonhosted.org/packages/f6/9d/f3c211f9e986b2cb32da012e0e46418e96cbde95d96826107800fae2e6f6/pyccel-0.9.5.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "d3731334e0164fe34813d13ccce01957", "sha256": "380e472027e67ea53f2768e5aac0585905717cb6373ece9c22f91dd8f663eb64"}, "downloads": -1, "filename": "pyccel-0.9.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d3731334e0164fe34813d13ccce01957", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 248034, "upload_time": "2020-01-08T12:11:07", "upload_time_iso_8601": "2020-01-08T12:11:07.634777Z", "url": "https://files.pythonhosted.org/packages/d6/17/4a2df930757a396abc6bf8b5ff7a0fceb1f0ef6046ad707cd93958446cda/pyccel-0.9.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4139fcf0c7b13e65332ef215bb6594ae", "sha256": "33b2cc93ca233a82b52818b7c5e4edf757c7381dbebf504460d7f4334abe67eb"}, "downloads": -1, "filename": "pyccel-0.9.6.tar.gz", "has_sig": false, "md5_digest": "4139fcf0c7b13e65332ef215bb6594ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 343494, "upload_time": "2020-01-08T12:11:12", "upload_time_iso_8601": "2020-01-08T12:11:12.832632Z", "url": "https://files.pythonhosted.org/packages/fc/74/d048c26013620106ff8a980609d8e0c682afba5c37b798af40b600ba130b/pyccel-0.9.6.tar.gz", "yanked": false}], "0.9.7": [{"comment_text": "", "digests": {"md5": "0956d501667978bcedf8af4e29ca6eaa", "sha256": "3f2f02f184e41381b4f727fd064ad0b66617bd0e3b9a5c46288faa669dcbfba3"}, "downloads": -1, "filename": "pyccel-0.9.7-py3-none-any.whl", "has_sig": false, "md5_digest": "0956d501667978bcedf8af4e29ca6eaa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 247137, "upload_time": "2020-02-05T07:42:40", "upload_time_iso_8601": "2020-02-05T07:42:40.544119Z", "url": "https://files.pythonhosted.org/packages/d2/80/6f25ed7496a7ec4973900e13fa692ed3b66e975e15720de5ae4346c7e893/pyccel-0.9.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "46c2976a0a757581be0a5605dd6d5b27", "sha256": "f4515e32bbc5246d5a019af1facae570049115178558b9c2d6c10db36f29e108"}, "downloads": -1, "filename": "pyccel-0.9.7.tar.gz", "has_sig": false, "md5_digest": "46c2976a0a757581be0a5605dd6d5b27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 344651, "upload_time": "2020-02-05T07:42:43", "upload_time_iso_8601": "2020-02-05T07:42:43.816522Z", "url": "https://files.pythonhosted.org/packages/32/a0/7ac7060d2ad9abb967b15d7314f9b3951a6262b5aa692d5d02aaadf1dc56/pyccel-0.9.7.tar.gz", "yanked": false}], "0.9.8": [{"comment_text": "", "digests": {"md5": "f87af3260532f7d4819367e7d08bd002", "sha256": "f635523621d2e42481e6e89afaabc9a0dd42eaa20e12db6692e22bc7ea12600c"}, "downloads": -1, "filename": "pyccel-0.9.8-py3-none-any.whl", "has_sig": false, "md5_digest": "f87af3260532f7d4819367e7d08bd002", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 254184, "upload_time": "2020-03-18T23:16:06", "upload_time_iso_8601": "2020-03-18T23:16:06.374396Z", "url": "https://files.pythonhosted.org/packages/a0/3e/e0075c53e2837504fd5f7c7a09c6507aad2780a4cef2666eac210ecd00fb/pyccel-0.9.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad244909902811fd97be919e1eb2fff3", "sha256": "78217a1487620545d9b0e82b40e388bd47a3c23e6159ee7d057873d531ac233d"}, "downloads": -1, "filename": "pyccel-0.9.8.tar.gz", "has_sig": false, "md5_digest": "ad244909902811fd97be919e1eb2fff3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 699290, "upload_time": "2020-03-18T23:16:10", "upload_time_iso_8601": "2020-03-18T23:16:10.334787Z", "url": "https://files.pythonhosted.org/packages/90/03/d3c6896fc60e0183093398e66d27abb5b31f5d13dd4de245fa6f14747ab5/pyccel-0.9.8.tar.gz", "yanked": false}], "0.9.9": [{"comment_text": "", "digests": {"md5": "03fa0b5728a608e002b346e49d7f6a88", "sha256": "53710e020098df63d4dbc0efb4cc8746fbd48c75cfd51c71ef02075850615ada"}, "downloads": -1, "filename": "pyccel-0.9.9-py3-none-any.whl", "has_sig": false, "md5_digest": "03fa0b5728a608e002b346e49d7f6a88", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 254260, "upload_time": "2020-03-23T18:38:55", "upload_time_iso_8601": "2020-03-23T18:38:55.549560Z", "url": "https://files.pythonhosted.org/packages/a4/a6/32acb7f5ed7e4ef1f1e8e7f6cb8af89f08de0579dece39463fff523e9b41/pyccel-0.9.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49b450006d1079426081c7be859dc7a0", "sha256": "0a821a013bbd9e833aab34ff0cd95c715554291d880f1ea853620bbdd184f9a7"}, "downloads": -1, "filename": "pyccel-0.9.9.tar.gz", "has_sig": false, "md5_digest": "49b450006d1079426081c7be859dc7a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1107870, "upload_time": "2020-03-23T18:39:00", "upload_time_iso_8601": "2020-03-23T18:39:00.870062Z", "url": "https://files.pythonhosted.org/packages/12/64/99963cf87d6f9b4ea50ec069859661227201fb0e662e381a3f2a0a79107e/pyccel-0.9.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3d0571bb2f90f08618f619e6b9d77cc2", "sha256": "7321b2f23f05511db695af465693f544599a1df6faef4fe449f22310dacbe69f"}, "downloads": -1, "filename": "pyccel-0.9.12-py3-none-any.whl", "has_sig": false, "md5_digest": "3d0571bb2f90f08618f619e6b9d77cc2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 257651, "upload_time": "2020-05-05T11:37:44", "upload_time_iso_8601": "2020-05-05T11:37:44.691184Z", "url": "https://files.pythonhosted.org/packages/09/74/7dfc0e03e803bcc61e6433e434fd97cc74b712a52f2b2ca535790e34ad80/pyccel-0.9.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d1546af2f555e00bc6126cde32a2aba", "sha256": "225560c3359b22a90d778df8fbf97e175211603c8503ddfd72085b11e90080c7"}, "downloads": -1, "filename": "pyccel-0.9.12.tar.gz", "has_sig": false, "md5_digest": "8d1546af2f555e00bc6126cde32a2aba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 355428, "upload_time": "2020-05-05T11:37:46", "upload_time_iso_8601": "2020-05-05T11:37:46.901406Z", "url": "https://files.pythonhosted.org/packages/31/66/aa1df42e0ca828444ecee67a613b7ba7d82f4d145edd54adf8a7c55e6113/pyccel-0.9.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:41 2020"}