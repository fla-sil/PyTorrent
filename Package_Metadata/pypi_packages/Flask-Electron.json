{"info": {"author": "Keith Byrne", "author_email": "keithmbyrne@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7"], "description": "# KBPC\n\n![GitHub](https://img.shields.io/github/license/kmjbyrne/kbpc)\n[![PyPI version](https://badge.fury.io/py/kbpc.svg)](https://badge.fury.io/py/kbpc)\n[![Build Status](https://travis-ci.org/kmjbyrne/kbpc.svg?branch=master)](https://travis-ci.org/kmjbyrne/kbpc)\n[![Coverage Status](https://coveralls.io/repos/github/kmjbyrne/kbpc/badge.svg?branch=master)](https://coveralls.io/github/kmjbyrne/kbpc?branch=master)\n\nTable of contents\n=================\n\n<!--ts-->\n\n* [Database](#database)\n    * [Models](#models)\n        * [User](#user)\n            * [User Model](#user-model)\n            * [User DAO](#user-dao)\n    * [Serializer](#flask-alchemy-model-serializer)\n* [Common](#common)\n    * [Exceptions](#exceptions)\n    \n<!--te-->\n\n## Database\n\n\n### Models\n\n#### User Model\n\nDocs coming soon\n\n#### User DAO\n\nDocs coming soon\n\n---\n\n### Flask Alchemy Model Serializer\n\n\nTransformation was originally a series of routines written to convert FlaskAlchemy models into jsonifiable dict \nstructures. This proved to be a solution lacking elegance and evolved and eventually found its way into half a dozen \nprojects over time and eventually, then started to splinter into slightly different variations.\n\n#### Basic Usage\n\n```python\nfrom flask import jsonify\n\nfrom application.models import SomeFlaskAlchemyModel\nfrom kbpc.db.flaskalchemy import serializer\n\n# Assume the model has name and age as the model fields\nmodel = SomeFlaskAlchemyModel('John Doe', 25)\ntransformed_model = serializer.serialize(model)\n\n# This typically fails if you attempt it with the model.\njson = jsonify(data=model)\n\n# This however is serializable immediately\njson = jsonify(data=transformed_model)\n```\n---\n\nOften, fields like passwords or other sensitive data should be hidden from responses or outputs. Usually this would be \nmanaged at the model class, and writing a to_dict() function or something similar, and simply not declaring the \nprotected properties of that instance.\n\n#### Protected Properties\n\n```python\nfrom flask import jsonify\n\nfrom application.models import SomeFlaskAlchemyModel\nfrom kbpc.db.flaskalchemy import serializer\n\n# Assume the model has name and age as the model fields\nmodel = SomeFlaskAlchemyModel('John Doe', 25)\ntablename = 'tablename_of_model'\nexclusions = {tablename: ['age']}\ntransformed_model = serializer.serialize(model, exclusions)\n\n# This however is serializable immediately\njson = jsonify(data=transformed_model)\n\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kmjbyrne/flask-electron", "keywords": "python library utilities", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Flask-Electron", "package_url": "https://pypi.org/project/Flask-Electron/", "platform": "", "project_url": "https://pypi.org/project/Flask-Electron/", "project_urls": {"Homepage": "https://github.com/kmjbyrne/flask-electron"}, "release_url": "https://pypi.org/project/Flask-Electron/0.4.9/", "requires_dist": null, "requires_python": "", "summary": "Core code for Flask based projects", "version": "0.4.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>KBPC</h1>\n<p><img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb90ef08a3aebc3a28cbe98d4552daa2202cd5bc/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6b6d6a6279726e652f6b627063\">\n<a href=\"https://badge.fury.io/py/kbpc\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cc552e24cc6a9bb254fdfaa31dbb98f9b10d1f69/68747470733a2f2f62616467652e667572792e696f2f70792f6b6270632e737667\"></a>\n<a href=\"https://travis-ci.org/kmjbyrne/kbpc\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0d93f12111fa092a52497d2aafba31aec178d5bb/68747470733a2f2f7472617669732d63692e6f72672f6b6d6a6279726e652f6b6270632e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/kmjbyrne/kbpc?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d4ee6f806bb3191d24364d62e925bb93c7f6fe4b/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6b6d6a6279726e652f6b6270632f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>Table of contents</h1>\n\n<ul>\n<li><a href=\"#database\" rel=\"nofollow\">Database</a>\n<ul>\n<li><a href=\"#models\" rel=\"nofollow\">Models</a>\n<ul>\n<li><a href=\"#user\" rel=\"nofollow\">User</a>\n<ul>\n<li><a href=\"#user-model\" rel=\"nofollow\">User Model</a></li>\n<li><a href=\"#user-dao\" rel=\"nofollow\">User DAO</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#flask-alchemy-model-serializer\" rel=\"nofollow\">Serializer</a></li>\n</ul>\n</li>\n<li><a href=\"#common\" rel=\"nofollow\">Common</a>\n<ul>\n<li><a href=\"#exceptions\" rel=\"nofollow\">Exceptions</a></li>\n</ul>\n</li>\n</ul>\n\n<h2>Database</h2>\n<h3>Models</h3>\n<h4>User Model</h4>\n<p>Docs coming soon</p>\n<h4>User DAO</h4>\n<p>Docs coming soon</p>\n<hr>\n<h3>Flask Alchemy Model Serializer</h3>\n<p>Transformation was originally a series of routines written to convert FlaskAlchemy models into jsonifiable dict\nstructures. This proved to be a solution lacking elegance and evolved and eventually found its way into half a dozen\nprojects over time and eventually, then started to splinter into slightly different variations.</p>\n<h4>Basic Usage</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">jsonify</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">application.models</span> <span class=\"kn\">import</span> <span class=\"n\">SomeFlaskAlchemyModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">kbpc.db.flaskalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">serializer</span>\n\n<span class=\"c1\"># Assume the model has name and age as the model fields</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">SomeFlaskAlchemyModel</span><span class=\"p\">(</span><span class=\"s1\">'John Doe'</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">)</span>\n<span class=\"n\">transformed_model</span> <span class=\"o\">=</span> <span class=\"n\">serializer</span><span class=\"o\">.</span><span class=\"n\">serialize</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># This typically fails if you attempt it with the model.</span>\n<span class=\"n\">json</span> <span class=\"o\">=</span> <span class=\"n\">jsonify</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">model</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># This however is serializable immediately</span>\n<span class=\"n\">json</span> <span class=\"o\">=</span> <span class=\"n\">jsonify</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">transformed_model</span><span class=\"p\">)</span>\n</pre>\n<hr>\n<p>Often, fields like passwords or other sensitive data should be hidden from responses or outputs. Usually this would be\nmanaged at the model class, and writing a to_dict() function or something similar, and simply not declaring the\nprotected properties of that instance.</p>\n<h4>Protected Properties</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">jsonify</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">application.models</span> <span class=\"kn\">import</span> <span class=\"n\">SomeFlaskAlchemyModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">kbpc.db.flaskalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">serializer</span>\n\n<span class=\"c1\"># Assume the model has name and age as the model fields</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">SomeFlaskAlchemyModel</span><span class=\"p\">(</span><span class=\"s1\">'John Doe'</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">)</span>\n<span class=\"n\">tablename</span> <span class=\"o\">=</span> <span class=\"s1\">'tablename_of_model'</span>\n<span class=\"n\">exclusions</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">tablename</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'age'</span><span class=\"p\">]}</span>\n<span class=\"n\">transformed_model</span> <span class=\"o\">=</span> <span class=\"n\">serializer</span><span class=\"o\">.</span><span class=\"n\">serialize</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">exclusions</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># This however is serializable immediately</span>\n<span class=\"n\">json</span> <span class=\"o\">=</span> <span class=\"n\">jsonify</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">transformed_model</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6519130, "releases": {"0.4.5": [{"comment_text": "", "digests": {"md5": "307e2ffe6645c9ba4bef7e2671d69752", "sha256": "a9ee39333cf8cf2d1e4be25e805542d74d158f653fc6e01a0c9a7fffc7fc4b73"}, "downloads": -1, "filename": "Flask-Electron-0.4.5.tar.gz", "has_sig": false, "md5_digest": "307e2ffe6645c9ba4bef7e2671d69752", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13390, "upload_time": "2020-01-24T17:21:43", "upload_time_iso_8601": "2020-01-24T17:21:43.700726Z", "url": "https://files.pythonhosted.org/packages/f5/4b/80b169be233ac6df9e1793a1dabeb91da6ba982b313eefc99aa310bd25e1/Flask-Electron-0.4.5.tar.gz", "yanked": false}], "0.4.9": [{"comment_text": "", "digests": {"md5": "12ef14187a8c36da604d83e2fb5d7f11", "sha256": "69e2c473df63e7e2d459e666504fc6122a1401685ed11ec1608e11ac048a32f1"}, "downloads": -1, "filename": "Flask-Electron-0.4.9.tar.gz", "has_sig": false, "md5_digest": "12ef14187a8c36da604d83e2fb5d7f11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13286, "upload_time": "2020-01-25T16:32:46", "upload_time_iso_8601": "2020-01-25T16:32:46.852627Z", "url": "https://files.pythonhosted.org/packages/97/12/ba0bbae752f0d8f7ec0dec6ab53d7ae24824bb014b64255d62d008024e50/Flask-Electron-0.4.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "12ef14187a8c36da604d83e2fb5d7f11", "sha256": "69e2c473df63e7e2d459e666504fc6122a1401685ed11ec1608e11ac048a32f1"}, "downloads": -1, "filename": "Flask-Electron-0.4.9.tar.gz", "has_sig": false, "md5_digest": "12ef14187a8c36da604d83e2fb5d7f11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13286, "upload_time": "2020-01-25T16:32:46", "upload_time_iso_8601": "2020-01-25T16:32:46.852627Z", "url": "https://files.pythonhosted.org/packages/97/12/ba0bbae752f0d8f7ec0dec6ab53d7ae24824bb014b64255d62d008024e50/Flask-Electron-0.4.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:55 2020"}