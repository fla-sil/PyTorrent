{"info": {"author": "Anders E. E. Wallin", "author_email": "anders.e.e.wallin@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "AllanTools\n==========\n\n.. image:: https://badge.fury.io/py/AllanTools.svg\n    :target: https://badge.fury.io/py/AllanTools\n.. image:: https://travis-ci.org/aewallin/allantools.svg?branch=master\n    :target: https://travis-ci.org/aewallin/allantools\n.. image:: http://readthedocs.org/projects/allantools/badge/?version=latest\n    :target: http://allantools.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n.. image:: https://coveralls.io/repos/github/aewallin/allantools/badge.svg?branch=master \n    :target: https://coveralls.io/github/aewallin/allantools?branch=master \n.. image:: https://app.fossa.io/api/projects/git%2Bgithub.com%2Faewallin%2Fallantools.svg?type=shield\n    :target: https://app.fossa.io/projects/git%2Bgithub.com%2Faewallin%2Fallantools?ref=badge_shield\n\nA python library for calculating Allan deviation and related \ntime & frequency statistics. `LGPL v3+ license <https://www.gnu.org/licenses/lgpl.html>`_.\n\n* Development at https://github.com/aewallin/allantools\n* Installation package at https://pypi.python.org/pypi/AllanTools\n* Discussion group at https://groups.google.com/d/forum/allantools\n* Documentation available at https://allantools.readthedocs.org\n \n\nInput data should be evenly spaced observations of either fractional frequency,\nor phase in seconds. Deviations are calculated for given tau values in seconds.\n\n=====================================   ====================================================\nFunction                                Description\n=====================================   ====================================================\n``adev()``                              Allan deviation\n``oadev()``                             Overlapping Allan deviation\n``mdev()``                              Modified Allan deviation\n``tdev()``                              Time deviation\n``hdev()``                              Hadamard deviation\n``ohdev()``                             Overlapping Hadamard deviation\n``totdev()``                            Total deviation\n``mtotdev()``                           Modified total deviation\n``ttotdev()``                           Time total deviation\n``htotdev()``                           Hadamard total deviation\n``theo1()``                             Theo1 deviation\n``mtie()``                              Maximum Time Interval Error\n``tierms()``                            Time Interval Error RMS\n``gradev()``                            Gap resistant overlapping Allan deviation\n=====================================   ====================================================\n\nNoise generators for creating synthetic datasets are also included:\n\n* violet noise with f^2 PSD\n* white noise with f^0 PSD\n* pink noise with f^-1 PSD\n* Brownian or random walk noise with f^-2 PSD \n\nMore details on available statistics and noise generators : `full list of available functions <functions.html>`_  \n\nsee /tests for tests that compare allantools output to other \n(e.g. Stable32) programs. More test data, benchmarks, ipython notebooks, \nand comparisons to known-good algorithms are welcome!\n\nInstallation \n------------\n\n\nInstall from pypi::\n    \n    pip install allantools\n\nLatest version + examples, tests, test data, iPython notebooks : clone from github, then install ::  \n\n    python setup.py install\n\n(see `python setup.py --help install` for install options)\n\nThese commands should be run as root for system-wide installation, or \nyou can use the `--user` option to install for your account only. \nExact command names may vary depending on your OS / package manager / target python version.\n\nBasic usage \n-----------\n\nMinimal example, phase data\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWe can call allantools with only one parameter - an array of phase data.\nThis is suitable for time-interval measurements at 1 Hz, for example\nfrom a time-interval-counter measuring the 1PPS output of two clocks.\n\n::\n\n    >>> import allantools\n    >>> x = allantools.noise.white(10000)        # Generate some phase data, in seconds.\n    >>> (taus, adevs, errors, ns) = allantools.oadev(x)\n\nwhen only one input parameter is given, phase data in seconds is assumed\nwhen no rate parameter is given, rate=1.0 is the default\nwhen no taus parameter is given, taus='octave' is the default\n\nFrequency data example\n~~~~~~~~~~~~~~~~~~~~~~\n\nNote that allantools assumes non-dimensional frequency data input.\nNormalization, by e.g. dividing all data points with the average \nfrequency, is left to the user.\n\n::\n\n    >>> import allantools\n    >>> import pylab as plt\n    >>> import numpy as np\n    >>> t = np.logspace(0, 3, 50)  # tau values from 1 to 1000\n    >>> y = allantools.noise.white(10000)  # Generate some frequency data\n    >>> r = 12.3  # sample rate in Hz of the input data\n    >>> (t2, ad, ade, adn) = allantools.oadev(y, rate=r, data_type=\"freq\", taus=t)  # Compute the overlapping ADEV\n    >>> fig = plt.loglog(t2, ad) # Plot the results\n    >>> # plt.show()\n\n\n*New in 2016.11* : simple top-level `API <api.html>`_, using dedicated classes for data handling and plotting.\n\n::\n\n    import allantools # https://github.com/aewallin/allantools/\n    import numpy as np\n\n    # Compute a deviation using the Dataset class\n    a = allantools.Dataset(data=np.random.rand(1000))\n    a.compute(\"mdev\")\n\n    # New in 2019.7 : write results to file\n    a.write_result(\"output.dat\")\n\n    # Plot it using the Plot class\n    b = allantools.Plot()\n    # New in 2019.7 : additional keyword arguments are passed to \n    # matplotlib.pyplot.plot()\n    b.plot(a, errorbars=True, grid=True)\n    # You can override defaults before \"show\" if needed\n    b.ax.set_xlabel(\"Tau (s)\")\n    b.show()\n\n\nJupyter notebooks with examples \n-------------------------------\n\nJupyter notebooks are interactive python scripts, embedded in a browser, \nallowing you to manipulate data and display plots like easily. For guidance \non installing jupyter, please refer to https://jupyter.org/install.\n\nSee /examples for some examples in notebook format.\n\ngithub formats the notebooks into nice web-pages, for example \n\n* https://github.com/aewallin/allantools/blob/master/examples/noise-color-demo.ipynb\n* https://github.com/aewallin/allantools/blob/master/examples/three-cornered-hat-demo.ipynb\n\n\nAuthors \n-------\n* Anders E.E. Wallin, anders.e.e.wallin \"at\" gmail.com , https://github.com/aewallin\n* Danny Price, https://github.com/telegraphic \n* Cantwell G. Carson, carsonc \"at\" gmail.com \n* Fr\u00e9d\u00e9ric Meynadier, https://github.com/fmeynadier\n* Yan Xie, https://github.com/yxie-git\n* Erik Benkler, https://github.com/EBenkler", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aewallin/allantools", "keywords": "", "license": "LGPLv3+", "maintainer": "", "maintainer_email": "", "name": "AllanTools", "package_url": "https://pypi.org/project/AllanTools/", "platform": "", "project_url": "https://pypi.org/project/AllanTools/", "project_urls": {"Homepage": "https://github.com/aewallin/allantools"}, "release_url": "https://pypi.org/project/AllanTools/2019.9/", "requires_dist": null, "requires_python": "", "summary": "Allan deviation and related time/frequency statistics", "version": "2019.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/AllanTools\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/AllanTools.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9e5924c3a1074bc4714065eeb42e13ede6c2d50d/68747470733a2f2f62616467652e667572792e696f2f70792f416c6c616e546f6f6c732e737667\"></a>\n<a href=\"https://travis-ci.org/aewallin/allantools\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/aewallin/allantools.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/edbd8a95bed522af2e62774d4c6ae9a82e80257e/68747470733a2f2f7472617669732d63692e6f72672f616577616c6c696e2f616c6c616e746f6f6c732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://allantools.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/de0393e028e0243584feaeef38f240a115075a2f/687474703a2f2f72656164746865646f63732e6f72672f70726f6a656374732f616c6c616e746f6f6c732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://coveralls.io/github/aewallin/allantools?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/aewallin/allantools/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ed0506834a021e1f0d63d8309a23d6063a36a09/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f616577616c6c696e2f616c6c616e746f6f6c732f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://app.fossa.io/projects/git%2Bgithub.com%2Faewallin%2Fallantools?ref=badge_shield\" rel=\"nofollow\"><img alt=\"https://app.fossa.io/api/projects/git%2Bgithub.com%2Faewallin%2Fallantools.svg?type=shield\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a99ad8240d3543bae774d9857b3115c48d43f773/68747470733a2f2f6170702e666f7373612e696f2f6170692f70726f6a656374732f6769742532426769746875622e636f6d253246616577616c6c696e253246616c6c616e746f6f6c732e7376673f747970653d736869656c64\"></a>\n<p>A python library for calculating Allan deviation and related\ntime &amp; frequency statistics. <a href=\"https://www.gnu.org/licenses/lgpl.html\" rel=\"nofollow\">LGPL v3+ license</a>.</p>\n<ul>\n<li>Development at <a href=\"https://github.com/aewallin/allantools\" rel=\"nofollow\">https://github.com/aewallin/allantools</a></li>\n<li>Installation package at <a href=\"https://pypi.python.org/pypi/AllanTools\" rel=\"nofollow\">https://pypi.python.org/pypi/AllanTools</a></li>\n<li>Discussion group at <a href=\"https://groups.google.com/d/forum/allantools\" rel=\"nofollow\">https://groups.google.com/d/forum/allantools</a></li>\n<li>Documentation available at <a href=\"https://allantools.readthedocs.org\" rel=\"nofollow\">https://allantools.readthedocs.org</a></li>\n</ul>\n<p>Input data should be evenly spaced observations of either fractional frequency,\nor phase in seconds. Deviations are calculated for given tau values in seconds.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Function</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>adev()</tt></td>\n<td>Allan deviation</td>\n</tr>\n<tr><td><tt>oadev()</tt></td>\n<td>Overlapping Allan deviation</td>\n</tr>\n<tr><td><tt>mdev()</tt></td>\n<td>Modified Allan deviation</td>\n</tr>\n<tr><td><tt>tdev()</tt></td>\n<td>Time deviation</td>\n</tr>\n<tr><td><tt>hdev()</tt></td>\n<td>Hadamard deviation</td>\n</tr>\n<tr><td><tt>ohdev()</tt></td>\n<td>Overlapping Hadamard deviation</td>\n</tr>\n<tr><td><tt>totdev()</tt></td>\n<td>Total deviation</td>\n</tr>\n<tr><td><tt>mtotdev()</tt></td>\n<td>Modified total deviation</td>\n</tr>\n<tr><td><tt>ttotdev()</tt></td>\n<td>Time total deviation</td>\n</tr>\n<tr><td><tt>htotdev()</tt></td>\n<td>Hadamard total deviation</td>\n</tr>\n<tr><td><tt>theo1()</tt></td>\n<td>Theo1 deviation</td>\n</tr>\n<tr><td><tt>mtie()</tt></td>\n<td>Maximum Time Interval Error</td>\n</tr>\n<tr><td><tt>tierms()</tt></td>\n<td>Time Interval Error RMS</td>\n</tr>\n<tr><td><tt>gradev()</tt></td>\n<td>Gap resistant overlapping Allan deviation</td>\n</tr>\n</tbody>\n</table>\n<p>Noise generators for creating synthetic datasets are also included:</p>\n<ul>\n<li>violet noise with f^2 PSD</li>\n<li>white noise with f^0 PSD</li>\n<li>pink noise with f^-1 PSD</li>\n<li>Brownian or random walk noise with f^-2 PSD</li>\n</ul>\n<p>More details on available statistics and noise generators : <a href=\"functions.html\" rel=\"nofollow\">full list of available functions</a></p>\n<p>see /tests for tests that compare allantools output to other\n(e.g. Stable32) programs. More test data, benchmarks, ipython notebooks,\nand comparisons to known-good algorithms are welcome!</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install from pypi:</p>\n<pre>pip install allantools\n</pre>\n<p>Latest version + examples, tests, test data, iPython notebooks : clone from github, then install</p>\n<pre>python setup.py install\n</pre>\n<p>(see <cite>python setup.py \u2013help install</cite> for install options)</p>\n<p>These commands should be run as root for system-wide installation, or\nyou can use the <cite>\u2013user</cite> option to install for your account only.\nExact command names may vary depending on your OS / package manager / target python version.</p>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic usage</h2>\n<div id=\"minimal-example-phase-data\">\n<h3>Minimal example, phase data</h3>\n<p>We can call allantools with only one parameter - an array of phase data.\nThis is suitable for time-interval measurements at 1 Hz, for example\nfrom a time-interval-counter measuring the 1PPS output of two clocks.</p>\n<pre>&gt;&gt;&gt; import allantools\n&gt;&gt;&gt; x = allantools.noise.white(10000)        # Generate some phase data, in seconds.\n&gt;&gt;&gt; (taus, adevs, errors, ns) = allantools.oadev(x)\n</pre>\n<p>when only one input parameter is given, phase data in seconds is assumed\nwhen no rate parameter is given, rate=1.0 is the default\nwhen no taus parameter is given, taus=\u2019octave\u2019 is the default</p>\n</div>\n<div id=\"frequency-data-example\">\n<h3>Frequency data example</h3>\n<p>Note that allantools assumes non-dimensional frequency data input.\nNormalization, by e.g. dividing all data points with the average\nfrequency, is left to the user.</p>\n<pre>&gt;&gt;&gt; import allantools\n&gt;&gt;&gt; import pylab as plt\n&gt;&gt;&gt; import numpy as np\n&gt;&gt;&gt; t = np.logspace(0, 3, 50)  # tau values from 1 to 1000\n&gt;&gt;&gt; y = allantools.noise.white(10000)  # Generate some frequency data\n&gt;&gt;&gt; r = 12.3  # sample rate in Hz of the input data\n&gt;&gt;&gt; (t2, ad, ade, adn) = allantools.oadev(y, rate=r, data_type=\"freq\", taus=t)  # Compute the overlapping ADEV\n&gt;&gt;&gt; fig = plt.loglog(t2, ad) # Plot the results\n&gt;&gt;&gt; # plt.show()\n</pre>\n<p><em>New in 2016.11</em> : simple top-level <a href=\"api.html\" rel=\"nofollow\">API</a>, using dedicated classes for data handling and plotting.</p>\n<pre>import allantools # https://github.com/aewallin/allantools/\nimport numpy as np\n\n# Compute a deviation using the Dataset class\na = allantools.Dataset(data=np.random.rand(1000))\na.compute(\"mdev\")\n\n# New in 2019.7 : write results to file\na.write_result(\"output.dat\")\n\n# Plot it using the Plot class\nb = allantools.Plot()\n# New in 2019.7 : additional keyword arguments are passed to\n# matplotlib.pyplot.plot()\nb.plot(a, errorbars=True, grid=True)\n# You can override defaults before \"show\" if needed\nb.ax.set_xlabel(\"Tau (s)\")\nb.show()\n</pre>\n</div>\n</div>\n<div id=\"jupyter-notebooks-with-examples\">\n<h2>Jupyter notebooks with examples</h2>\n<p>Jupyter notebooks are interactive python scripts, embedded in a browser,\nallowing you to manipulate data and display plots like easily. For guidance\non installing jupyter, please refer to <a href=\"https://jupyter.org/install\" rel=\"nofollow\">https://jupyter.org/install</a>.</p>\n<p>See /examples for some examples in notebook format.</p>\n<p>github formats the notebooks into nice web-pages, for example</p>\n<ul>\n<li><a href=\"https://github.com/aewallin/allantools/blob/master/examples/noise-color-demo.ipynb\" rel=\"nofollow\">https://github.com/aewallin/allantools/blob/master/examples/noise-color-demo.ipynb</a></li>\n<li><a href=\"https://github.com/aewallin/allantools/blob/master/examples/three-cornered-hat-demo.ipynb\" rel=\"nofollow\">https://github.com/aewallin/allantools/blob/master/examples/three-cornered-hat-demo.ipynb</a></li>\n</ul>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<ul>\n<li>Anders E.E. Wallin, anders.e.e.wallin \u201cat\u201d gmail.com , <a href=\"https://github.com/aewallin\" rel=\"nofollow\">https://github.com/aewallin</a></li>\n<li>Danny Price, <a href=\"https://github.com/telegraphic\" rel=\"nofollow\">https://github.com/telegraphic</a></li>\n<li>Cantwell G. Carson, carsonc \u201cat\u201d gmail.com</li>\n<li>Fr\u00e9d\u00e9ric Meynadier, <a href=\"https://github.com/fmeynadier\" rel=\"nofollow\">https://github.com/fmeynadier</a></li>\n<li>Yan Xie, <a href=\"https://github.com/yxie-git\" rel=\"nofollow\">https://github.com/yxie-git</a></li>\n<li>Erik Benkler, <a href=\"https://github.com/EBenkler\" rel=\"nofollow\">https://github.com/EBenkler</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5863241, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "9270f000e526497da9ad934b4c5bc9d7", "sha256": "83d0afbfe5296f6ebb037385cbc1e1bbca2525ee22d1fbde31b4c0061750bd02"}, "downloads": -1, "filename": "AllanTools-0.2.tar.gz", "has_sig": false, "md5_digest": "9270f000e526497da9ad934b4c5bc9d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4865, "upload_time": "2014-02-10T22:05:24", "upload_time_iso_8601": "2014-02-10T22:05:24.102939Z", "url": "https://files.pythonhosted.org/packages/ac/9b/eb23199e36e136495d841226f8e1d25d3470fe5e60b374630084bb1f5797/AllanTools-0.2.tar.gz", "yanked": false}], "0.21": [{"comment_text": "", "digests": {"md5": "79461efb6c912357830333b502ae0eaa", "sha256": "53df0ecf735cc423cce76ad1d3543eabb8e9709c34ff333f8324605f2ff00499"}, "downloads": -1, "filename": "AllanTools-0.21.tar.gz", "has_sig": false, "md5_digest": "79461efb6c912357830333b502ae0eaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4953, "upload_time": "2014-02-10T22:16:45", "upload_time_iso_8601": "2014-02-10T22:16:45.812374Z", "url": "https://files.pythonhosted.org/packages/27/1f/4c111cf915295336c62f77b645068680234a84575c37b815d01b92885ec4/AllanTools-0.21.tar.gz", "yanked": false}], "0.22": [{"comment_text": "", "digests": {"md5": "7f9f8d30e4df43142fde8a741883bcc8", "sha256": "e71a98f56fe3d8c096e24101c7ffd209757f73be252951667cf7fc51f61a61c4"}, "downloads": -1, "filename": "AllanTools-0.22.tar.gz", "has_sig": false, "md5_digest": "7f9f8d30e4df43142fde8a741883bcc8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5106, "upload_time": "2014-02-10T22:31:03", "upload_time_iso_8601": "2014-02-10T22:31:03.060242Z", "url": "https://files.pythonhosted.org/packages/7a/20/8735f9363f1a69d529c581849bfaf54e682bc4f949f324dc8fbe227bf340/AllanTools-0.22.tar.gz", "yanked": false}], "0.23": [{"comment_text": "", "digests": {"md5": "3017eab1aabe8683845ba299ebc38554", "sha256": "66997ca23f2fe97d776eb3ca3eade251eaf1445a4d2fec3f69ab4b3167716bfa"}, "downloads": -1, "filename": "AllanTools-0.23.tar.gz", "has_sig": false, "md5_digest": "3017eab1aabe8683845ba299ebc38554", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5490, "upload_time": "2014-02-15T14:52:12", "upload_time_iso_8601": "2014-02-15T14:52:12.776275Z", "url": "https://files.pythonhosted.org/packages/60/a8/472d2032bc894ccf6f2129748542d245f15d64b1c3a2d890843e869bfa2b/AllanTools-0.23.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "0e617b039ef273fb48e9d004b77dfb32", "sha256": "7f6025af7b9c9e3ca557831ae85db4e520122ddce1a92ce15ed9a58c58431dec"}, "downloads": -1, "filename": "AllanTools-1.1.tar.gz", "has_sig": false, "md5_digest": "0e617b039ef273fb48e9d004b77dfb32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7922, "upload_time": "2014-08-31T09:07:42", "upload_time_iso_8601": "2014-08-31T09:07:42.022784Z", "url": "https://files.pythonhosted.org/packages/57/c3/4cfe4b88daae308f148159c65a9cba63321f59a0d343034f0865712c42ad/AllanTools-1.1.tar.gz", "yanked": false}], "2016.11": [{"comment_text": "", "digests": {"md5": "d61d631193605d0a1b766b1756f4bcd9", "sha256": "bc381e59afe905a8bc6565850045fc3bdc1519088aff2f48420f03c01ddade8d"}, "downloads": -1, "filename": "AllanTools-2016.11.tar.gz", "has_sig": false, "md5_digest": "d61d631193605d0a1b766b1756f4bcd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25273, "upload_time": "2016-11-18T19:25:49", "upload_time_iso_8601": "2016-11-18T19:25:49.562720Z", "url": "https://files.pythonhosted.org/packages/09/91/349a22235882d94fb0832a362e1b22743b0e463756ab7cd3e008bf098999/AllanTools-2016.11.tar.gz", "yanked": false}], "2016.2": [{"comment_text": "", "digests": {"md5": "2ab7ab3dac02f935108628e76f62b318", "sha256": "48d8695f6c8a5af858c5860ab1bf4d722e3954023f1bf728a54ca0dabe9a3fb5"}, "downloads": -1, "filename": "AllanTools-2016.2.tar.gz", "has_sig": false, "md5_digest": "2ab7ab3dac02f935108628e76f62b318", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16552, "upload_time": "2016-02-25T20:01:55", "upload_time_iso_8601": "2016-02-25T20:01:55.489283Z", "url": "https://files.pythonhosted.org/packages/43/ba/665d0eb86c1b499917428d086127bbd18f3158aa91bab30dc22c8dab826d/AllanTools-2016.2.tar.gz", "yanked": false}], "2016.3": [{"comment_text": "", "digests": {"md5": "405aa1adc2baf53255c88436e18fde55", "sha256": "6171409ee36e690cda65cfe5d06d9073a057f2325a4542e378b4a3d4fb1b76ed"}, "downloads": -1, "filename": "AllanTools-2016.3.tar.gz", "has_sig": false, "md5_digest": "405aa1adc2baf53255c88436e18fde55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23634, "upload_time": "2016-03-31T07:50:03", "upload_time_iso_8601": "2016-03-31T07:50:03.783356Z", "url": "https://files.pythonhosted.org/packages/3a/65/713cc0ea79952626a029e283961895711f85b8cfcf1ee668756c9f7e023c/AllanTools-2016.3.tar.gz", "yanked": false}], "2016.4": [{"comment_text": "", "digests": {"md5": "d7292d86b9e60e75e4270fc17072122d", "sha256": "d10b5cbc8b297d52cc83949f06a52c14ed7c0d320b712732256c6b2c83aa1b46"}, "downloads": -1, "filename": "AllanTools-2016.4.tar.gz", "has_sig": false, "md5_digest": "d7292d86b9e60e75e4270fc17072122d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18825, "upload_time": "2016-04-08T18:47:20", "upload_time_iso_8601": "2016-04-08T18:47:20.323658Z", "url": "https://files.pythonhosted.org/packages/ff/3f/6767ae2715bd44b09a1f905e2c9711858af49fe9ca02e4309d806fcc3175/AllanTools-2016.4.tar.gz", "yanked": false}], "2018.3": [{"comment_text": "", "digests": {"md5": "e14f2e87ae4883f13e21b57eeebbf38a", "sha256": "7842b36c9339515be5e93c148cc6eb9d4daab6d9b2826888d4ad2e18d9cc8e08"}, "downloads": -1, "filename": "AllanTools-2018.3.tar.gz", "has_sig": false, "md5_digest": "e14f2e87ae4883f13e21b57eeebbf38a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29822, "upload_time": "2018-03-27T17:02:18", "upload_time_iso_8601": "2018-03-27T17:02:18.764906Z", "url": "https://files.pythonhosted.org/packages/d2/94/98eab400e1bfcadd7a4ac5cf07a5b6bd5a799c8f82768a129cca6e3bd3fc/AllanTools-2018.3.tar.gz", "yanked": false}], "2019.7": [{"comment_text": "", "digests": {"md5": "e567b6fc491ca90a907003bc0d883d88", "sha256": "cd715068538ac1e457d88251fa166e103c536a861edae4458e970b9d4edf316b"}, "downloads": -1, "filename": "AllanTools-2019.7.tar.gz", "has_sig": false, "md5_digest": "e567b6fc491ca90a907003bc0d883d88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34575, "upload_time": "2019-08-03T07:32:28", "upload_time_iso_8601": "2019-08-03T07:32:28.588988Z", "url": "https://files.pythonhosted.org/packages/be/9d/f36781c34001f4e53d8e6a368829c82937cee77c419e09caf7badc8d6e9d/AllanTools-2019.7.tar.gz", "yanked": false}], "2019.7rc1": [{"comment_text": "", "digests": {"md5": "f0f542dcf23a4a15b726cf412b2822c0", "sha256": "1471511137d6d69aad9509f42cb36da44a555f66d20c2fd64ce6a222a20f198d"}, "downloads": -1, "filename": "AllanTools-2019.7rc1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f0f542dcf23a4a15b726cf412b2822c0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 39838, "upload_time": "2019-07-26T06:44:32", "upload_time_iso_8601": "2019-07-26T06:44:32.941631Z", "url": "https://files.pythonhosted.org/packages/e0/91/3ed66fa4e7804e5b936f71cfaf2900915e70dd8cbcb4cb65345978706347/AllanTools-2019.7rc1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08d842a411a6feee37f8917d1faf32ab", "sha256": "ba4012b596f3b0ac52598ce25ebaaa799c3d25b2cd23ee17db9452eb548880fc"}, "downloads": -1, "filename": "AllanTools-2019.7rc1.tar.gz", "has_sig": false, "md5_digest": "08d842a411a6feee37f8917d1faf32ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33986, "upload_time": "2019-07-26T06:44:34", "upload_time_iso_8601": "2019-07-26T06:44:34.840884Z", "url": "https://files.pythonhosted.org/packages/36/bf/6ff8b84120e01d3579a410768e098b5f505da9f04036b8037ccc2d39a5a7/AllanTools-2019.7rc1.tar.gz", "yanked": false}], "2019.9": [{"comment_text": "", "digests": {"md5": "d2164cf6fe6ea804413dcf5dc2465804", "sha256": "e95204f688e1ed41602baf4e021ea021c0807bf00d4c2fea94c730f641feab51"}, "downloads": -1, "filename": "AllanTools-2019.9.tar.gz", "has_sig": false, "md5_digest": "d2164cf6fe6ea804413dcf5dc2465804", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37268, "upload_time": "2019-09-20T16:55:41", "upload_time_iso_8601": "2019-09-20T16:55:41.965070Z", "url": "https://files.pythonhosted.org/packages/b9/63/3a998237dde66b844a5f3d0d90f62dcfde668ed5f0fc8257c7d57023f8b4/AllanTools-2019.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d2164cf6fe6ea804413dcf5dc2465804", "sha256": "e95204f688e1ed41602baf4e021ea021c0807bf00d4c2fea94c730f641feab51"}, "downloads": -1, "filename": "AllanTools-2019.9.tar.gz", "has_sig": false, "md5_digest": "d2164cf6fe6ea804413dcf5dc2465804", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37268, "upload_time": "2019-09-20T16:55:41", "upload_time_iso_8601": "2019-09-20T16:55:41.965070Z", "url": "https://files.pythonhosted.org/packages/b9/63/3a998237dde66b844a5f3d0d90f62dcfde668ed5f0fc8257c7d57023f8b4/AllanTools-2019.9.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:19:33 2020"}