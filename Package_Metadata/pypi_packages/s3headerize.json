{"info": {"author": "Cariad Eccleston", "author_email": "cariad@cariad.me", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP :: Site Management"], "description": "# s3headerize\n\nA Python package for setting HTTP headers on Amazon Web Services (AWS) S3 objects.\n\nHeader values are configured per-name extension, with an optional catch-all if the object does not match any rules.\n\n## Prerequisites\n\nPython 3.x is required.\n\n## Limitations\n\nOnly `Cache-Control` and `Content-Type` headers are currently supported.\n\n## Configuring the headers and their values\n\nThe headers to set are configured in a YAML file with a list of rules.\n\nFor example:\n\n```yaml\n- header:        Cache-Control\n  when:\n    - extension: .html\n      then:      max-age=300, public\n    - extension: .css\n      then:      max-age=604800, public\n  else:          max-age=31536000, public\n```\n\nThe result of this will be:\n\n- Every `.html` object will receive a `Cache-Control` header with value `max-age=300, public`.\n- Every `.css` object will receive a `Cache-Control` header with value `max-age=604800, public`.\n- All other objects will receive a `Cache-Control` header with value `max-age=31536000, public`.\n\nThe `else` statement is optional. For example:\n\n```yaml\n- header:        Content-Type\n  when:\n    - extension: .woff2\n      then:      font/woff2\n```\n\nThe result of this will be:\n\n- Every `.woff2` object will receive a `Content-Type` header with value `font/woff2`.\n- The `Content-Type` header (or lackthereof) on all other objects will be unchanged.\n\nThere's a sample file at [sample-header-rules.yaml](sample-header-rules.yaml).\n\n## Usage\n\n### Installation\n\n```shell\npip install s3headerize\n```\n\n### Command-line\n\n```shell\npython -m s3headerize  --bucket       <bucket to update>\n                       --header-rules <path to rules file>\n                      [--dry-run]\n                      [--key-prefix   <optional key prefix>]\n                      [--log-level    <optional log level>]\n```\n\nFor example:\n\n```shell\npython -m s3headerize --header-rules ./headers-rules.yaml --bucket my-website\n```\n\n### In code\n\nTo run against a bucket:\n\n```python\nfrom s3headerize import BucketHeaderizer\n\nrules = [\n    {\n        'header': 'Cache-Control',\n        'when': [\n          {\n            'extension': '.html',\n            'then': 'max-age=300, public'\n          }\n        ],\n        'else': 'max-age=31536000, public'\n    },\n    {\n        'header': 'Content-Type',\n        'when': [\n          {\n            'extension': '.woff2',\n            'then': 'font/woff2'\n          }\n        ]\n    }\n]\n\nbucket_headerizer = BucketHeaderizer(header_rules=rules)\nbucket_headerizer.update(bucket='my-website')\n```\n\nTo run against specific keys:\n\n```python\nfrom s3headerize import ObjectHeaderizer\n\nrules = [\n    {\n        'header': 'Cache-Control',\n        'when': [\n          {\n            'extension': '.html',\n            'then': 'max-age=300, public'\n          }\n        ],\n        'else': 'max-age=31536000, public'\n    },\n    {\n        'header': 'Content-Type',\n        'when': [\n          {\n            'extension': '.woff2',\n            'then': 'font/woff2'\n          }\n        ]\n    }\n]\n\nobject_headerizer = ObjectHeaderizer(bucket='my-website',\n                                     header_rules=rules,\n                                     key='index.html')\nobject_headerizer.update()\n```\n\n## Development\n\n### Installing dependencies\n\n```shell\npip install -e .[dev]\n```\n\n### Running tests\n\n```shell\npython test.py\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cariad/py-s3headerize", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "s3headerize", "package_url": "https://pypi.org/project/s3headerize/", "platform": "", "project_url": "https://pypi.org/project/s3headerize/", "project_urls": {"Homepage": "https://github.com/cariad/py-s3headerize"}, "release_url": "https://pypi.org/project/s3headerize/1.0/", "requires_dist": ["boto3", "pyyaml", "autopep8 ; extra == 'dev'", "coverage ; extra == 'dev'", "mock ; extra == 'dev'", "pylint ; extra == 'dev'"], "requires_python": "", "summary": "A Python package for setting HTTP headers on Amazon Web Services (AWS) S3 objects.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>s3headerize</h1>\n<p>A Python package for setting HTTP headers on Amazon Web Services (AWS) S3 objects.</p>\n<p>Header values are configured per-name extension, with an optional catch-all if the object does not match any rules.</p>\n<h2>Prerequisites</h2>\n<p>Python 3.x is required.</p>\n<h2>Limitations</h2>\n<p>Only <code>Cache-Control</code> and <code>Content-Type</code> headers are currently supported.</p>\n<h2>Configuring the headers and their values</h2>\n<p>The headers to set are configured in a YAML file with a list of rules.</p>\n<p>For example:</p>\n<pre><span class=\"p p-Indicator\">-</span> <span class=\"nt\">header</span><span class=\"p\">:</span>        <span class=\"l l-Scalar l-Scalar-Plain\">Cache-Control</span>\n  <span class=\"nt\">when</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"nt\">extension</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">.html</span>\n      <span class=\"nt\">then</span><span class=\"p\">:</span>      <span class=\"l l-Scalar l-Scalar-Plain\">max-age=300, public</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"nt\">extension</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">.css</span>\n      <span class=\"nt\">then</span><span class=\"p\">:</span>      <span class=\"l l-Scalar l-Scalar-Plain\">max-age=604800, public</span>\n  <span class=\"nt\">else</span><span class=\"p\">:</span>          <span class=\"l l-Scalar l-Scalar-Plain\">max-age=31536000, public</span>\n</pre>\n<p>The result of this will be:</p>\n<ul>\n<li>Every <code>.html</code> object will receive a <code>Cache-Control</code> header with value <code>max-age=300, public</code>.</li>\n<li>Every <code>.css</code> object will receive a <code>Cache-Control</code> header with value <code>max-age=604800, public</code>.</li>\n<li>All other objects will receive a <code>Cache-Control</code> header with value <code>max-age=31536000, public</code>.</li>\n</ul>\n<p>The <code>else</code> statement is optional. For example:</p>\n<pre><span class=\"p p-Indicator\">-</span> <span class=\"nt\">header</span><span class=\"p\">:</span>        <span class=\"l l-Scalar l-Scalar-Plain\">Content-Type</span>\n  <span class=\"nt\">when</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"nt\">extension</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">.woff2</span>\n      <span class=\"nt\">then</span><span class=\"p\">:</span>      <span class=\"l l-Scalar l-Scalar-Plain\">font/woff2</span>\n</pre>\n<p>The result of this will be:</p>\n<ul>\n<li>Every <code>.woff2</code> object will receive a <code>Content-Type</code> header with value <code>font/woff2</code>.</li>\n<li>The <code>Content-Type</code> header (or lackthereof) on all other objects will be unchanged.</li>\n</ul>\n<p>There's a sample file at <a href=\"sample-header-rules.yaml\" rel=\"nofollow\">sample-header-rules.yaml</a>.</p>\n<h2>Usage</h2>\n<h3>Installation</h3>\n<pre>pip install s3headerize\n</pre>\n<h3>Command-line</h3>\n<pre>python -m s3headerize  --bucket       &lt;bucket to update&gt;\n                       --header-rules &lt;path to rules file&gt;\n                      <span class=\"o\">[</span>--dry-run<span class=\"o\">]</span>\n                      <span class=\"o\">[</span>--key-prefix   &lt;optional key prefix&gt;<span class=\"o\">]</span>\n                      <span class=\"o\">[</span>--log-level    &lt;optional log level&gt;<span class=\"o\">]</span>\n</pre>\n<p>For example:</p>\n<pre>python -m s3headerize --header-rules ./headers-rules.yaml --bucket my-website\n</pre>\n<h3>In code</h3>\n<p>To run against a bucket:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">s3headerize</span> <span class=\"kn\">import</span> <span class=\"n\">BucketHeaderizer</span>\n\n<span class=\"n\">rules</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'header'</span><span class=\"p\">:</span> <span class=\"s1\">'Cache-Control'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'when'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"s1\">'extension'</span><span class=\"p\">:</span> <span class=\"s1\">'.html'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'then'</span><span class=\"p\">:</span> <span class=\"s1\">'max-age=300, public'</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">],</span>\n        <span class=\"s1\">'else'</span><span class=\"p\">:</span> <span class=\"s1\">'max-age=31536000, public'</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'header'</span><span class=\"p\">:</span> <span class=\"s1\">'Content-Type'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'when'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"s1\">'extension'</span><span class=\"p\">:</span> <span class=\"s1\">'.woff2'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'then'</span><span class=\"p\">:</span> <span class=\"s1\">'font/woff2'</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">bucket_headerizer</span> <span class=\"o\">=</span> <span class=\"n\">BucketHeaderizer</span><span class=\"p\">(</span><span class=\"n\">header_rules</span><span class=\"o\">=</span><span class=\"n\">rules</span><span class=\"p\">)</span>\n<span class=\"n\">bucket_headerizer</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"s1\">'my-website'</span><span class=\"p\">)</span>\n</pre>\n<p>To run against specific keys:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">s3headerize</span> <span class=\"kn\">import</span> <span class=\"n\">ObjectHeaderizer</span>\n\n<span class=\"n\">rules</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'header'</span><span class=\"p\">:</span> <span class=\"s1\">'Cache-Control'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'when'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"s1\">'extension'</span><span class=\"p\">:</span> <span class=\"s1\">'.html'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'then'</span><span class=\"p\">:</span> <span class=\"s1\">'max-age=300, public'</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">],</span>\n        <span class=\"s1\">'else'</span><span class=\"p\">:</span> <span class=\"s1\">'max-age=31536000, public'</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'header'</span><span class=\"p\">:</span> <span class=\"s1\">'Content-Type'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'when'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"s1\">'extension'</span><span class=\"p\">:</span> <span class=\"s1\">'.woff2'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'then'</span><span class=\"p\">:</span> <span class=\"s1\">'font/woff2'</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">object_headerizer</span> <span class=\"o\">=</span> <span class=\"n\">ObjectHeaderizer</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"s1\">'my-website'</span><span class=\"p\">,</span>\n                                     <span class=\"n\">header_rules</span><span class=\"o\">=</span><span class=\"n\">rules</span><span class=\"p\">,</span>\n                                     <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'index.html'</span><span class=\"p\">)</span>\n<span class=\"n\">object_headerizer</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n</pre>\n<h2>Development</h2>\n<h3>Installing dependencies</h3>\n<pre>pip install -e .<span class=\"o\">[</span>dev<span class=\"o\">]</span>\n</pre>\n<h3>Running tests</h3>\n<pre>python test.py\n</pre>\n\n          </div>"}, "last_serial": 4775213, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "3d922f2f8776da338d0b44ed9ea3e513", "sha256": "3c7e562e14919fd091b1d6d393b2bc8860061362852d6341757b3ed8ef10294d"}, "downloads": -1, "filename": "s3headerize-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3d922f2f8776da338d0b44ed9ea3e513", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8368, "upload_time": "2019-02-03T17:17:07", "upload_time_iso_8601": "2019-02-03T17:17:07.144293Z", "url": "https://files.pythonhosted.org/packages/cc/46/21fb690bfa9b91548e314b423bc138eae0eb67c836fcd0ee33fb800d2df1/s3headerize-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5ff1fd8b82ab821ff95e62b93f751e0", "sha256": "a8f000c2663d9052456d8d1d9ecd2e5fba0624e2a718f04c8ccf1582b4f09cef"}, "downloads": -1, "filename": "s3headerize-1.0.tar.gz", "has_sig": false, "md5_digest": "e5ff1fd8b82ab821ff95e62b93f751e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6396, "upload_time": "2019-02-03T17:17:09", "upload_time_iso_8601": "2019-02-03T17:17:09.518884Z", "url": "https://files.pythonhosted.org/packages/60/a4/f9d3d0a4fc1ebe8916f5e89e93f177570a61fd3e2f47c7fd59351f2032b0/s3headerize-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3d922f2f8776da338d0b44ed9ea3e513", "sha256": "3c7e562e14919fd091b1d6d393b2bc8860061362852d6341757b3ed8ef10294d"}, "downloads": -1, "filename": "s3headerize-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3d922f2f8776da338d0b44ed9ea3e513", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8368, "upload_time": "2019-02-03T17:17:07", "upload_time_iso_8601": "2019-02-03T17:17:07.144293Z", "url": "https://files.pythonhosted.org/packages/cc/46/21fb690bfa9b91548e314b423bc138eae0eb67c836fcd0ee33fb800d2df1/s3headerize-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5ff1fd8b82ab821ff95e62b93f751e0", "sha256": "a8f000c2663d9052456d8d1d9ecd2e5fba0624e2a718f04c8ccf1582b4f09cef"}, "downloads": -1, "filename": "s3headerize-1.0.tar.gz", "has_sig": false, "md5_digest": "e5ff1fd8b82ab821ff95e62b93f751e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6396, "upload_time": "2019-02-03T17:17:09", "upload_time_iso_8601": "2019-02-03T17:17:09.518884Z", "url": "https://files.pythonhosted.org/packages/60/a4/f9d3d0a4fc1ebe8916f5e89e93f177570a61fd3e2f47c7fd59351f2032b0/s3headerize-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:38 2020"}